
/*
#Apply the patch from openhevc_remove_fill_ref_sample_in_xmem2.patch
func_name,is_array,offset,varname,dir,width,depth,remark
innerloop_ff_hevc_extract_rbsp_1_hls,0,640,zero_i,in,8,1,
innerloop_ff_hevc_extract_rbsp_1_hls,0,640,zero_o,out,8,1,
innerloop_ff_hevc_extract_rbsp_1_hls,0,1116,loop_init,in,32,1,
innerloop_ff_hevc_extract_rbsp_1_hls,0,1124,loop_len,in,32,1,
innerloop_ff_hevc_extract_rbsp_1_hls,0,1120,loop_inc,in,32,1,
innerloop_ff_hevc_extract_rbsp_1_hls,0,1128,loop_cnt,out,32,1,
#innerloop_ff_hevc_extract_rbsp_2_hls,0,0,skipped_bytes_pos_is_null,in,8,1,apcall_arg
innerloop_ff_hevc_extract_rbsp_2_hls,0,632,si_loop_i,in,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,632,si_loop_o,out,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,636,di_loop_i,in,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,636,di_loop_o,out,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,640,zero_i,in,8,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,640,zero_o,out,8,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,628,skipped_bytes_i,in,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,628,skipped_bytes_o,out,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,1,8232,skipped_bytes_pos_d0,out,32,1024,addr_width=10
innerloop_ff_hevc_extract_rbsp_2_hls,0,1116,loop_init,in,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,1124,loop_len,in,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,1120,loop_inc,in,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,1128,loop_cnt,out,32,1,
#fill_ref_samples_mtdma_top_wrp,0,0,x0,in,13,1,apcall_arg
#fill_ref_samples_mtdma_top_wrp,0,0,y0,in,13,1,apcall_arg
#fill_ref_samples_mtdma_top_wrp,0,0,cidx,in,2,1,apcall_arg
#fill_ref_samples_mtdma_top_wrp,0,0,mode,in,2,1,apcall_arg
#fill_ref_samples_mtdma_top_wrp,0,0,log2TrSize_shifted,in,3,1,apcall_arg
#fill_ref_samples_mtdma_top_wrp,0,0,shift,in,1,1,apcall_arg
fill_ref_samples_mtdma_top_wrp,0,644,numIntraNeighbor,in,6,1,
fill_ref_samples_mtdma_top_wrp,0,648,totalUnits,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,652,aboveUnits,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,656,leftUnits,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,660,unitWidth,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,664,unitHeight,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,668,log2TrSize,in,3,1,
fill_ref_samples_mtdma_top_wrp,0,672,bNeighborFlags,in,65,1,
fill_ref_samples_mtdma_top_wrp,0,684,numIntraNeighbor_c,in,6,1,
fill_ref_samples_mtdma_top_wrp,0,688,totalUnits_c,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,692,aboveUnits_c,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,696,leftUnits_c,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,700,unitWidth_c,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,704,unitHeight_c,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,708,log2TrSize_c,in,3,1,
fill_ref_samples_mtdma_top_wrp,0,712,bNeighborFlags_c,in,65,1,
#hevc_find_frame_end_hls,0,0,buff_size_i,in,32,1,apcall_arg
hevc_find_frame_end_hls,0,0,state64_i,in,64,1,
hevc_find_frame_end_hls,0,0,state64_o,out,64,1,
hevc_find_frame_end_hls,0,8,frame_start_found_i,in,32,1,
hevc_find_frame_end_hls,0,8,frame_start_found_o,out,32,1,
#intra_prediction_unit_ex_hls,0,0,x0,in,32,1,apcall_arg
#intra_prediction_unit_ex_hls,0,0,y0,in,32,1,apcall_arg
#intra_prediction_unit_ex_hls,0,0,log2_cb_size,in,32,1,apcall_arg
intra_prediction_unit_ex_hls,1,520,prev_intra_luma_pred_flag_0_i,in,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,520,prev_intra_luma_pred_flag_0_o,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,521,prev_intra_luma_pred_flag_1_i,in,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,521,prev_intra_luma_pred_flag_1_o,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,522,prev_intra_luma_pred_flag_2_i,in,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,522,prev_intra_luma_pred_flag_2_o,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,523,prev_intra_luma_pred_flag_3_i,in,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,523,prev_intra_luma_pred_flag_3_o,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,0,564,part_mode,in,8,1,parent_func
intra_prediction_unit_ex_hls,0,396,min_pu_width,in,32,1,parent_func
intra_prediction_unit_ex_hls,0,372,log2_min_pu_size,in,32,1,parent_func
intra_prediction_unit_ex_hls,0,360,log2_ctb_size,in,32,1,parent_func
intra_prediction_unit_ex_hls,0,604,ctb_up_flag,in,8,1,parent_func
intra_prediction_unit_ex_hls,0,608,ctb_left_flag,in,8,1,parent_func
intra_prediction_unit_ex_hls,1,512,pu_intra_pred_mode_0_i,in,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,512,pu_intra_pred_mode_0_o,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,513,pu_intra_pred_mode_1_i,in,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,513,pu_intra_pred_mode_1_o,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,514,pu_intra_pred_mode_2_i,in,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,514,pu_intra_pred_mode_2_o,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,515,pu_intra_pred_mode_3_i,in,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,515,pu_intra_pred_mode_3_o,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,508,pu_chroma_mode_c_0,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,509,pu_chroma_mode_c_1,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,510,pu_chroma_mode_c_2,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,511,pu_chroma_mode_c_3,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,516,pu_intra_pred_mode_c_0,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,517,pu_intra_pred_mode_c_1,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,518,pu_intra_pred_mode_c_2,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,519,pu_intra_pred_mode_c_3,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,0,324,chroma_array_type,in,32,1,parent_func
intra_prediction_unit_ex_hls,0,576,max_trafo_depth,out,8,1,parent_func
intra_prediction_unit_ex_hls,0,384,max_transform_hierarchy_depth_intra,in,32,1,parent_func
intra_prediction_unit_ex_hls,0,568,intra_split_flag,in,8,1,parent_func
intra_prediction_unit_ex_hls,0,1252,dc_tab_ipm_p,in,32,1,xmem_dcache_pointer parent_func
#hls_transform_unit_ex_hls,0,0,tid,in,32,1,apcall_arg
#hls_transform_unit_ex_hls,0,0,x0,in,32,1,apcall_arg
#hls_transform_unit_ex_hls,0,0,y0,in,32,1,apcall_arg
#hls_transform_unit_ex_hls,0,0,xBase,in,32,1,apcall_arg
#hls_transform_unit_ex_hls,0,0,yBase,in,32,1,apcall_arg
#hls_transform_unit_ex_hls,0,0,log2_cb_size,in,32,1,apcall_arg
#hls_transform_unit_ex_hls,0,0,log2_size,in,32,1,apcall_arg
#hls_transform_unit_ex_hls,0,0,blk_idx,in,32,1,apcall_arg
hls_transform_unit_ex_hls,0,20,cbf_luma,in,32,1,parent_func
hls_transform_unit_ex_hls,0,16,cbf_data,in,8,1,parent_func
hls_transform_unit_ex_hls,0,1260,dc_min_tb_addr_zs_p,in,32,1,xmem_dcache_pointer parent_func
hls_transform_unit_ex_hls,0,1156,chroma_qp_offset_list_len_minus1,in,8,1,parent_func
hls_transform_unit_ex_hls,0,1264,dc_cb_qp_offset_list_p,in,32,1,xmem_dcache_pointer parent_func
hls_transform_unit_ex_hls,0,1268,dc_cr_qp_offset_list_p,in,32,1,xmem_dcache_pointer parent_func
hls_transform_unit_ex_hls,0,1132,qp_bd_offset,in,32,1,parent_func
hls_transform_unit_ex_hls,0,1272,dc_qp_y_tab_p,in,32,1,xmem_dcache_pointer parent_func
hls_transform_unit_ex_hls,0,560,pred_mode,in,8,1,parent_func
hls_transform_unit_ex_hls,1,336,hshift_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,340,hshift_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,344,hshift_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,348,vshift_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,352,vshift_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,356,vshift_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,0,484,tu_intra_pred_mode,in,32,1,parent_func
hls_transform_unit_ex_hls,0,488,tu_intra_pred_mode_c,in,32,1,parent_func
hls_transform_unit_ex_hls,0,572,cu_transquant_bypass_flag,in,8,1,parent_func
hls_transform_unit_ex_hls,0,492,tu_cu_qp_offset_cb,out,8,1,parent_func
hls_transform_unit_ex_hls,0,496,tu_cu_qp_offset_cr,out,8,1,parent_func
hls_transform_unit_ex_hls,0,536,qp_y_i,in,8,1,parent_func
hls_transform_unit_ex_hls,0,536,qp_y_o,out,8,1,parent_func
hls_transform_unit_ex_hls,0,168,log2_trafo_size,out,32,1,parent_func
hls_transform_unit_ex_hls,0,56,log2_trafo_size_c_i,in,8,1,parent_func
hls_transform_unit_ex_hls,0,56,log2_trafo_size_c_o,out,8,1,parent_func
hls_transform_unit_ex_hls,0,48,scan_idx_i,in,8,1,parent_func
hls_transform_unit_ex_hls,0,48,scan_idx_o,out,8,1,parent_func
hls_transform_unit_ex_hls,0,52,scan_idx_c,out,8,1,parent_func
hls_transform_unit_ex_hls,0,1136,cmdr_run_i,in,8,1,parent_func
hls_transform_unit_ex_hls,0,1136,cmdr_run_o,out,8,1,parent_func
hls_transform_unit_ex_hls,1,1240,buf_data_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,1244,buf_data_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,1248,buf_data_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,1144,xm_linesize_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,1148,xm_linesize_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,1152,xm_linesize_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,0,1140,pixel_shift,in,32,1,parent_func
hls_transform_unit_ex_hls,0,160,nPbW,out,32,1,parent_func
hls_transform_unit_ex_hls,0,164,nPbH,out,32,1,parent_func
hls_transform_unit_ex_hls,0,580,cand_up,out,1,1,parent_func
hls_transform_unit_ex_hls,0,584,cand_left,out,1,1,parent_func
hls_transform_unit_ex_hls,0,588,cand_up_left,out,1,1,parent_func
hls_transform_unit_ex_hls,0,592,cand_up_right_sap,out,1,1,parent_func
hls_transform_unit_ex_hls,0,596,cand_up_right,out,1,1,parent_func
hls_transform_unit_ex_hls,0,600,cand_bottom_left_i,in,1,1,parent_func
hls_transform_unit_ex_hls,0,600,cand_bottom_left_o,out,1,1,parent_func
hls_transform_unit_ex_hls,0,1488,cand_up_c,out,1,1,parent_func
hls_transform_unit_ex_hls,0,1492,cand_left_c,out,1,1,parent_func
hls_transform_unit_ex_hls,0,1496,cand_up_left_c,out,1,1,parent_func
hls_transform_unit_ex_hls,0,1500,cand_up_right_sap_c,out,1,1,parent_func
hls_transform_unit_ex_hls,0,1504,cand_up_right_c,out,1,1,parent_func
hls_transform_unit_ex_hls,0,1508,cand_bottom_left_c_i,in,1,1,parent_func
hls_transform_unit_ex_hls,0,1508,cand_bottom_left_c_o,out,1,1,parent_func
hls_transform_unit_ex_hls,0,360,log2_ctb_size,in,32,1,parent_func
hls_transform_unit_ex_hls,0,604,ctb_up_flag,in,1,1,parent_func
hls_transform_unit_ex_hls,0,608,ctb_left_flag,in,1,1,parent_func
hls_transform_unit_ex_hls,0,612,ctb_up_left_flag,in,1,1,parent_func
hls_transform_unit_ex_hls,0,616,ctb_up_right_flag,in,1,1,parent_func
hls_transform_unit_ex_hls,0,620,end_of_tiles_x,in,16,1,parent_func
hls_transform_unit_ex_hls,0,624,end_of_tiles_y,in,16,1,parent_func
hls_transform_unit_ex_hls,0,472,tu_is_cu_chroma_qp_offset_coded_i,in,8,1,parent_func
hls_transform_unit_ex_hls,0,472,tu_is_cu_chroma_qp_offset_coded_o,out,8,1,parent_func
hls_transform_unit_ex_hls,0,476,tu_is_cu_qp_delta_coded_i,in,8,1,parent_func
hls_transform_unit_ex_hls,0,476,tu_is_cu_qp_delta_coded_o,out,8,1,parent_func
hls_transform_unit_ex_hls,0,468,tu_cu_qp_delta,out,32,1,parent_func
hls_transform_unit_ex_hls,0,500,tu_cross_pf,out,8,1,parent_func
hls_transform_unit_ex_hls,0,532,first_qp_group_i,in,8,1,parent_func
hls_transform_unit_ex_hls,0,532,first_qp_group_o,out,8,1,parent_func
hls_transform_unit_ex_hls,0,328,chroma_format_idc,in,32,1,parent_func
hls_transform_unit_ex_hls,0,448,cu_chroma_qp_offset_enabled_flag,in,8,1,parent_func
hls_transform_unit_ex_hls,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_transform_unit_ex_hls,0,540,qPy_pred,in,32,1,parent_func
hls_transform_unit_ex_hls,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_transform_unit_ex_hls,0,368,log2_min_cb_size,in,32,1,parent_func
hls_transform_unit_ex_hls,0,392,min_cb_width,in,32,1,parent_func
hls_transform_unit_ex_hls,0,460,slice_qp,in,8,1,parent_func
#hls_transform_unit_ex_hls_dup1,0,0,tid,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup1,0,0,x0,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup1,0,0,y0,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup1,0,0,xBase,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup1,0,0,yBase,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup1,0,0,log2_cb_size,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup1,0,0,log2_size,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup1,0,0,blk_idx,in,32,1,apcall_arg
hls_transform_unit_ex_hls_dup1,0,20,cbf_luma,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,16,cbf_data,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1260,dc_min_tb_addr_zs_p,in,32,1,xmem_dcache_pointer parent_func
hls_transform_unit_ex_hls_dup1,0,1156,chroma_qp_offset_list_len_minus1,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1264,dc_cb_qp_offset_list_p,in,32,1,xmem_dcache_pointer parent_func
hls_transform_unit_ex_hls_dup1,0,1268,dc_cr_qp_offset_list_p,in,32,1,xmem_dcache_pointer parent_func
hls_transform_unit_ex_hls_dup1,0,1132,qp_bd_offset,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1272,dc_qp_y_tab_p,in,32,1,xmem_dcache_pointer parent_func
hls_transform_unit_ex_hls_dup1,0,560,pred_mode,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,1,336,hshift_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,340,hshift_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,344,hshift_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,348,vshift_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,352,vshift_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,356,vshift_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,0,484,tu_intra_pred_mode,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,488,tu_intra_pred_mode_c,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,572,cu_transquant_bypass_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,492,tu_cu_qp_offset_cb,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,496,tu_cu_qp_offset_cr,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,536,qp_y_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,536,qp_y_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,168,log2_trafo_size,out,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,56,log2_trafo_size_c_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,56,log2_trafo_size_c_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,48,scan_idx_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,48,scan_idx_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,52,scan_idx_c,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1136,cmdr_run_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1136,cmdr_run_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,1,1240,buf_data_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,1244,buf_data_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,1248,buf_data_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,1144,xm_linesize_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,1148,xm_linesize_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,1152,xm_linesize_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,0,1140,pixel_shift,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,160,nPbW,out,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,164,nPbH,out,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,580,cand_up,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,584,cand_left,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,588,cand_up_left,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,592,cand_up_right_sap,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,596,cand_up_right,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,600,cand_bottom_left_i,in,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,600,cand_bottom_left_o,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1488,cand_up_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1492,cand_left_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1496,cand_up_left_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1500,cand_up_right_sap_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1504,cand_up_right_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1508,cand_bottom_left_c_i,in,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1508,cand_bottom_left_c_o,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,360,log2_ctb_size,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,604,ctb_up_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,608,ctb_left_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,612,ctb_up_left_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,616,ctb_up_right_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,620,end_of_tiles_x,in,16,1,parent_func
hls_transform_unit_ex_hls_dup1,0,624,end_of_tiles_y,in,16,1,parent_func
hls_transform_unit_ex_hls_dup1,0,472,tu_is_cu_chroma_qp_offset_coded_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,472,tu_is_cu_chroma_qp_offset_coded_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,476,tu_is_cu_qp_delta_coded_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,476,tu_is_cu_qp_delta_coded_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,468,tu_cu_qp_delta,out,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,500,tu_cross_pf,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,532,first_qp_group_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,532,first_qp_group_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,328,chroma_format_idc,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,448,cu_chroma_qp_offset_enabled_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,540,qPy_pred,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,368,log2_min_cb_size,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,392,min_cb_width,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,460,slice_qp,in,8,1,parent_func
#hls_transform_unit_ex_hls_dup2,0,0,tid,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup2,0,0,x0,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup2,0,0,y0,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup2,0,0,xBase,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup2,0,0,yBase,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup2,0,0,log2_cb_size,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup2,0,0,log2_size,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup2,0,0,blk_idx,in,32,1,apcall_arg
hls_transform_unit_ex_hls_dup2,0,20,cbf_luma,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,16,cbf_data,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1260,dc_min_tb_addr_zs_p,in,32,1,xmem_dcache_pointer parent_func
hls_transform_unit_ex_hls_dup2,0,1156,chroma_qp_offset_list_len_minus1,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1264,dc_cb_qp_offset_list_p,in,32,1,xmem_dcache_pointer parent_func
hls_transform_unit_ex_hls_dup2,0,1268,dc_cr_qp_offset_list_p,in,32,1,xmem_dcache_pointer parent_func
hls_transform_unit_ex_hls_dup2,0,1132,qp_bd_offset,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1272,dc_qp_y_tab_p,in,32,1,xmem_dcache_pointer parent_func
hls_transform_unit_ex_hls_dup2,0,560,pred_mode,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,1,336,hshift_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,340,hshift_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,344,hshift_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,348,vshift_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,352,vshift_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,356,vshift_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,0,484,tu_intra_pred_mode,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,488,tu_intra_pred_mode_c,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,572,cu_transquant_bypass_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,492,tu_cu_qp_offset_cb,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,496,tu_cu_qp_offset_cr,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,536,qp_y_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,536,qp_y_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,168,log2_trafo_size,out,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,56,log2_trafo_size_c_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,56,log2_trafo_size_c_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,48,scan_idx_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,48,scan_idx_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,52,scan_idx_c,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1136,cmdr_run_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1136,cmdr_run_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,1,1240,buf_data_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,1244,buf_data_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,1248,buf_data_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,1144,xm_linesize_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,1148,xm_linesize_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,1152,xm_linesize_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,0,1140,pixel_shift,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,160,nPbW,out,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,164,nPbH,out,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,580,cand_up,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,584,cand_left,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,588,cand_up_left,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,592,cand_up_right_sap,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,596,cand_up_right,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,600,cand_bottom_left_i,in,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,600,cand_bottom_left_o,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1488,cand_up_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1492,cand_left_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1496,cand_up_left_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1500,cand_up_right_sap_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1504,cand_up_right_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1508,cand_bottom_left_c_i,in,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1508,cand_bottom_left_c_o,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,360,log2_ctb_size,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,604,ctb_up_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,608,ctb_left_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,612,ctb_up_left_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,616,ctb_up_right_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,620,end_of_tiles_x,in,16,1,parent_func
hls_transform_unit_ex_hls_dup2,0,624,end_of_tiles_y,in,16,1,parent_func
hls_transform_unit_ex_hls_dup2,0,472,tu_is_cu_chroma_qp_offset_coded_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,472,tu_is_cu_chroma_qp_offset_coded_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,476,tu_is_cu_qp_delta_coded_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,476,tu_is_cu_qp_delta_coded_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,468,tu_cu_qp_delta,out,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,500,tu_cross_pf,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,532,first_qp_group_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,532,first_qp_group_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,328,chroma_format_idc,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,448,cu_chroma_qp_offset_enabled_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,540,qPy_pred,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,368,log2_min_cb_size,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,392,min_cb_width,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,460,slice_qp,in,8,1,parent_func
#hls_transform_unit_ex_hls_dup3,0,0,tid,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup3,0,0,x0,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup3,0,0,y0,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup3,0,0,xBase,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup3,0,0,yBase,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup3,0,0,log2_cb_size,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup3,0,0,log2_size,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup3,0,0,blk_idx,in,32,1,apcall_arg
hls_transform_unit_ex_hls_dup3,0,20,cbf_luma,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,16,cbf_data,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1260,dc_min_tb_addr_zs_p,in,32,1,xmem_dcache_pointer parent_func
hls_transform_unit_ex_hls_dup3,0,1156,chroma_qp_offset_list_len_minus1,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1264,dc_cb_qp_offset_list_p,in,32,1,xmem_dcache_pointer parent_func
hls_transform_unit_ex_hls_dup3,0,1268,dc_cr_qp_offset_list_p,in,32,1,xmem_dcache_pointer parent_func
hls_transform_unit_ex_hls_dup3,0,1132,qp_bd_offset,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1272,dc_qp_y_tab_p,in,32,1,xmem_dcache_pointer parent_func
hls_transform_unit_ex_hls_dup3,0,560,pred_mode,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,1,336,hshift_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,340,hshift_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,344,hshift_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,348,vshift_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,352,vshift_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,356,vshift_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,0,484,tu_intra_pred_mode,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,488,tu_intra_pred_mode_c,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,572,cu_transquant_bypass_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,492,tu_cu_qp_offset_cb,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,496,tu_cu_qp_offset_cr,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,536,qp_y_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,536,qp_y_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,168,log2_trafo_size,out,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,56,log2_trafo_size_c_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,56,log2_trafo_size_c_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,48,scan_idx_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,48,scan_idx_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,52,scan_idx_c,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1136,cmdr_run_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1136,cmdr_run_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,1,1240,buf_data_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,1244,buf_data_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,1248,buf_data_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,1144,xm_linesize_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,1148,xm_linesize_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,1152,xm_linesize_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,0,1140,pixel_shift,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,160,nPbW,out,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,164,nPbH,out,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,580,cand_up,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,584,cand_left,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,588,cand_up_left,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,592,cand_up_right_sap,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,596,cand_up_right,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,600,cand_bottom_left_i,in,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,600,cand_bottom_left_o,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1488,cand_up_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1492,cand_left_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1496,cand_up_left_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1500,cand_up_right_sap_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1504,cand_up_right_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1508,cand_bottom_left_c_i,in,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1508,cand_bottom_left_c_o,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,360,log2_ctb_size,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,604,ctb_up_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,608,ctb_left_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,612,ctb_up_left_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,616,ctb_up_right_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,620,end_of_tiles_x,in,16,1,parent_func
hls_transform_unit_ex_hls_dup3,0,624,end_of_tiles_y,in,16,1,parent_func
hls_transform_unit_ex_hls_dup3,0,472,tu_is_cu_chroma_qp_offset_coded_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,472,tu_is_cu_chroma_qp_offset_coded_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,476,tu_is_cu_qp_delta_coded_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,476,tu_is_cu_qp_delta_coded_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,468,tu_cu_qp_delta,out,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,500,tu_cross_pf,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,532,first_qp_group_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,532,first_qp_group_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,328,chroma_format_idc,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,448,cu_chroma_qp_offset_enabled_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,540,qPy_pred,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,368,log2_min_cb_size,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,392,min_cb_width,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,460,slice_qp,in,8,1,parent_func
#hls_transform_tree_hls,0,0,tid,in,32,1,apcall_arg
#hls_transform_tree_hls,0,0,x0,in,32,1,apcall_arg
#hls_transform_tree_hls,0,0,y0,in,32,1,apcall_arg
hls_transform_tree_hls,0,168,log2_trafo_size,out,32,1,parent_func
#hls_transform_tree_hls,0,0,s_log2_trafo_size,in,32,1,apcall_arg
hls_transform_tree_hls,0,12,split_transform_flag,out,8,1,parent_func
hls_transform_tree_hls,0,16,cbf_data,out,8,1,parent_func
hls_transform_tree_hls,0,1160,disable_deblocking_filter_flag,in,8,1,parent_func
hls_transform_tree_hls,0,440,transquant_bypass_enable_flag,in,8,1,parent_func
hls_transform_tree_hls,0,572,cu_transquant_bypass_flag,in,8,1,parent_func
hls_transform_tree_hls,0,480,tu_chroma_mode_c,out,32,1,parent_func
hls_transform_tree_hls,0,484,tu_intra_pred_mode,out,32,1,parent_func
hls_transform_tree_hls,0,488,tu_intra_pred_mode_c,out,32,1,parent_func
hls_transform_tree_hls,1,508,pu_chroma_mode_c_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,509,pu_chroma_mode_c_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,510,pu_chroma_mode_c_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,511,pu_chroma_mode_c_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,512,pu_intra_pred_mode_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,513,pu_intra_pred_mode_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,514,pu_intra_pred_mode_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,515,pu_intra_pred_mode_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,516,pu_intra_pred_mode_c_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,517,pu_intra_pred_mode_c_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,518,pu_intra_pred_mode_c_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,519,pu_intra_pred_mode_c_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,0,568,intra_split_flag,in,8,1,parent_func
hls_transform_tree_hls,0,364,log2_max_trafo_size,in,32,1,parent_func
hls_transform_tree_hls,0,376,log2_min_tb_size,in,32,1,parent_func
hls_transform_tree_hls,0,576,max_trafo_depth,in,8,1,parent_func
hls_transform_tree_hls,0,380,max_transform_hierarchy_depth_inter,in,32,1,parent_func
hls_transform_tree_hls,0,560,pred_mode,in,8,1,parent_func
hls_transform_tree_hls,0,564,part_mode,in,8,1,parent_func
hls_transform_tree_hls,0,324,chroma_array_type,in,32,1,parent_func
hls_transform_tree_hls,0,328,chroma_format_idc,in,32,1,parent_func
hls_transform_tree_hls,0,20,cbf_luma_i,in,32,1,parent_func
hls_transform_tree_hls,0,20,cbf_luma_o,out,32,1,parent_func
hls_transform_tree_hls,0,1328,rv_hls_transform_unit,in,32,1,parent_func
hls_transform_tree_hls,0,1332,rv_ff_hevc_deblocking_boundary_strengths,in,32,1,parent_func
hls_transform_tree_hls,0,1336,rv_set_deblocking_bypass,in,32,1,parent_func
hls_transform_tree_hls,0,1236,rv_callback_flag,in,32,1,parent_func
hls_transform_tree_hls,0,388,min_tb_width,in,32,1,parent_func
hls_transform_tree_hls,0,360,log2_ctb_size,in,32,1,parent_func
#hls_transform_tree_hls,0,0,dc_luma_p,in,32,1,apcall_arg_dcache_pointer
#hls_transform_tree_hls_dup1,0,0,tid,in,32,1,apcall_arg
#hls_transform_tree_hls_dup1,0,0,x0,in,32,1,apcall_arg
#hls_transform_tree_hls_dup1,0,0,y0,in,32,1,apcall_arg
hls_transform_tree_hls_dup1,0,168,log2_trafo_size,out,32,1,parent_func
#hls_transform_tree_hls_dup1,0,0,s_log2_trafo_size,in,32,1,apcall_arg
hls_transform_tree_hls_dup1,0,12,split_transform_flag,out,8,1,parent_func
hls_transform_tree_hls_dup1,0,16,cbf_data,out,8,1,parent_func
hls_transform_tree_hls_dup1,0,1160,disable_deblocking_filter_flag,in,8,1,parent_func
hls_transform_tree_hls_dup1,0,440,transquant_bypass_enable_flag,in,8,1,parent_func
hls_transform_tree_hls_dup1,0,572,cu_transquant_bypass_flag,in,8,1,parent_func
hls_transform_tree_hls_dup1,0,480,tu_chroma_mode_c,out,32,1,parent_func
hls_transform_tree_hls_dup1,0,484,tu_intra_pred_mode,out,32,1,parent_func
hls_transform_tree_hls_dup1,0,488,tu_intra_pred_mode_c,out,32,1,parent_func
hls_transform_tree_hls_dup1,1,508,pu_chroma_mode_c_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,509,pu_chroma_mode_c_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,510,pu_chroma_mode_c_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,511,pu_chroma_mode_c_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,512,pu_intra_pred_mode_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,513,pu_intra_pred_mode_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,514,pu_intra_pred_mode_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,515,pu_intra_pred_mode_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,516,pu_intra_pred_mode_c_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,517,pu_intra_pred_mode_c_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,518,pu_intra_pred_mode_c_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,519,pu_intra_pred_mode_c_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,0,568,intra_split_flag,in,8,1,parent_func
hls_transform_tree_hls_dup1,0,364,log2_max_trafo_size,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,376,log2_min_tb_size,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,576,max_trafo_depth,in,8,1,parent_func
hls_transform_tree_hls_dup1,0,380,max_transform_hierarchy_depth_inter,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,560,pred_mode,in,8,1,parent_func
hls_transform_tree_hls_dup1,0,564,part_mode,in,8,1,parent_func
hls_transform_tree_hls_dup1,0,324,chroma_array_type,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,328,chroma_format_idc,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,20,cbf_luma_i,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,20,cbf_luma_o,out,32,1,parent_func
hls_transform_tree_hls_dup1,0,1328,rv_hls_transform_unit,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,1332,rv_ff_hevc_deblocking_boundary_strengths,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,1336,rv_set_deblocking_bypass,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,1236,rv_callback_flag,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,388,min_tb_width,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,360,log2_ctb_size,in,32,1,parent_func
#hls_transform_tree_hls_dup1,0,0,dc_luma_p,in,32,1,apcall_arg_dcache_pointer
#hls_transform_tree_hls_dup2,0,0,tid,in,32,1,apcall_arg
#hls_transform_tree_hls_dup2,0,0,x0,in,32,1,apcall_arg
#hls_transform_tree_hls_dup2,0,0,y0,in,32,1,apcall_arg
hls_transform_tree_hls_dup2,0,168,log2_trafo_size,out,32,1,parent_func
#hls_transform_tree_hls_dup2,0,0,s_log2_trafo_size,in,32,1,apcall_arg
hls_transform_tree_hls_dup2,0,12,split_transform_flag,out,8,1,parent_func
hls_transform_tree_hls_dup2,0,16,cbf_data,out,8,1,parent_func
hls_transform_tree_hls_dup2,0,1160,disable_deblocking_filter_flag,in,8,1,parent_func
hls_transform_tree_hls_dup2,0,440,transquant_bypass_enable_flag,in,8,1,parent_func
hls_transform_tree_hls_dup2,0,572,cu_transquant_bypass_flag,in,8,1,parent_func
hls_transform_tree_hls_dup2,0,480,tu_chroma_mode_c,out,32,1,parent_func
hls_transform_tree_hls_dup2,0,484,tu_intra_pred_mode,out,32,1,parent_func
hls_transform_tree_hls_dup2,0,488,tu_intra_pred_mode_c,out,32,1,parent_func
hls_transform_tree_hls_dup2,1,508,pu_chroma_mode_c_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,509,pu_chroma_mode_c_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,510,pu_chroma_mode_c_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,511,pu_chroma_mode_c_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,512,pu_intra_pred_mode_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,513,pu_intra_pred_mode_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,514,pu_intra_pred_mode_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,515,pu_intra_pred_mode_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,516,pu_intra_pred_mode_c_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,517,pu_intra_pred_mode_c_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,518,pu_intra_pred_mode_c_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,519,pu_intra_pred_mode_c_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,0,568,intra_split_flag,in,8,1,parent_func
hls_transform_tree_hls_dup2,0,364,log2_max_trafo_size,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,376,log2_min_tb_size,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,576,max_trafo_depth,in,8,1,parent_func
hls_transform_tree_hls_dup2,0,380,max_transform_hierarchy_depth_inter,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,560,pred_mode,in,8,1,parent_func
hls_transform_tree_hls_dup2,0,564,part_mode,in,8,1,parent_func
hls_transform_tree_hls_dup2,0,324,chroma_array_type,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,328,chroma_format_idc,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,20,cbf_luma_i,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,20,cbf_luma_o,out,32,1,parent_func
hls_transform_tree_hls_dup2,0,1328,rv_hls_transform_unit,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,1332,rv_ff_hevc_deblocking_boundary_strengths,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,1336,rv_set_deblocking_bypass,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,1236,rv_callback_flag,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,388,min_tb_width,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,360,log2_ctb_size,in,32,1,parent_func
#hls_transform_tree_hls_dup2,0,0,dc_luma_p,in,32,1,apcall_arg_dcache_pointer
#hls_transform_tree_hls_dup3,0,0,tid,in,32,1,apcall_arg
#hls_transform_tree_hls_dup3,0,0,x0,in,32,1,apcall_arg
#hls_transform_tree_hls_dup3,0,0,y0,in,32,1,apcall_arg
hls_transform_tree_hls_dup3,0,168,log2_trafo_size,out,32,1,parent_func
#hls_transform_tree_hls_dup3,0,0,s_log2_trafo_size,in,32,1,apcall_arg
hls_transform_tree_hls_dup3,0,12,split_transform_flag,out,8,1,parent_func
hls_transform_tree_hls_dup3,0,16,cbf_data,out,8,1,parent_func
hls_transform_tree_hls_dup3,0,1160,disable_deblocking_filter_flag,in,8,1,parent_func
hls_transform_tree_hls_dup3,0,440,transquant_bypass_enable_flag,in,8,1,parent_func
hls_transform_tree_hls_dup3,0,572,cu_transquant_bypass_flag,in,8,1,parent_func
hls_transform_tree_hls_dup3,0,480,tu_chroma_mode_c,out,32,1,parent_func
hls_transform_tree_hls_dup3,0,484,tu_intra_pred_mode,out,32,1,parent_func
hls_transform_tree_hls_dup3,0,488,tu_intra_pred_mode_c,out,32,1,parent_func
hls_transform_tree_hls_dup3,1,508,pu_chroma_mode_c_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,509,pu_chroma_mode_c_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,510,pu_chroma_mode_c_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,511,pu_chroma_mode_c_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,512,pu_intra_pred_mode_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,513,pu_intra_pred_mode_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,514,pu_intra_pred_mode_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,515,pu_intra_pred_mode_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,516,pu_intra_pred_mode_c_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,517,pu_intra_pred_mode_c_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,518,pu_intra_pred_mode_c_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,519,pu_intra_pred_mode_c_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,0,568,intra_split_flag,in,8,1,parent_func
hls_transform_tree_hls_dup3,0,364,log2_max_trafo_size,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,376,log2_min_tb_size,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,576,max_trafo_depth,in,8,1,parent_func
hls_transform_tree_hls_dup3,0,380,max_transform_hierarchy_depth_inter,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,560,pred_mode,in,8,1,parent_func
hls_transform_tree_hls_dup3,0,564,part_mode,in,8,1,parent_func
hls_transform_tree_hls_dup3,0,324,chroma_array_type,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,328,chroma_format_idc,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,20,cbf_luma_i,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,20,cbf_luma_o,out,32,1,parent_func
hls_transform_tree_hls_dup3,0,1328,rv_hls_transform_unit,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,1332,rv_ff_hevc_deblocking_boundary_strengths,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,1336,rv_set_deblocking_bypass,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,1236,rv_callback_flag,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,388,min_tb_width,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,360,log2_ctb_size,in,32,1,parent_func
#hls_transform_tree_hls_dup3,0,0,dc_luma_p,in,32,1,apcall_arg_dcache_pointer
#hls_coding_quadtree_hls,0,0,tid,in,32,1,apcall_arg
#hls_coding_quadtree_hls,0,0,x0,in,32,1,apcall_arg
#hls_coding_quadtree_hls,0,0,y0,in,32,1,apcall_arg
#hls_coding_quadtree_hls,0,0,log2_cb_size,in,32,1,apcall_arg
#hls_coding_quadtree_hls,0,0,cb_depth,in,32,1,apcall_arg
hls_coding_quadtree_hls,0,300,x1_i,in,32,1,parent_func
hls_coding_quadtree_hls,0,300,x1_o,out,32,1,parent_func
hls_coding_quadtree_hls,0,304,y1_i,in,32,1,parent_func
hls_coding_quadtree_hls,0,304,y1_o,out,32,1,parent_func
hls_coding_quadtree_hls,0,312,log2_cb_size_minus_one_i,in,32,1,parent_func
hls_coding_quadtree_hls,0,312,log2_cb_size_minus_one_o,out,32,1,parent_func
hls_coding_quadtree_hls,0,316,cb_depth_plus_one_i,in,32,1,parent_func
hls_coding_quadtree_hls,0,316,cb_depth_plus_one_o,out,32,1,parent_func
hls_coding_quadtree_hls,0,408,width,in,32,1,parent_func
hls_coding_quadtree_hls,0,332,height,in,32,1,parent_func
hls_coding_quadtree_hls,0,292,split_cu_flag_i,in,32,1,parent_func
hls_coding_quadtree_hls,0,292,split_cu_flag_o,out,32,1,parent_func
hls_coding_quadtree_hls,0,296,more_data_i,in,32,1,parent_func
hls_coding_quadtree_hls,0,296,more_data_o,out,32,1,parent_func
hls_coding_quadtree_hls,0,1324,rv_hls_coding_unit,in,32,1,parent_func
hls_coding_quadtree_hls,0,1236,rv_callback_flag,in,32,1,parent_func
hls_coding_quadtree_hls,0,360,log2_ctb_size,in,32,1,parent_func
hls_coding_quadtree_hls,0,540,qPy_pred,out,32,1,parent_func
hls_coding_quadtree_hls,0,536,qp_y,in,8,1,parent_func
hls_coding_quadtree_hls,0,40,qp_block_mask_i,in,32,1,parent_func
hls_coding_quadtree_hls,0,40,qp_block_mask_o,out,32,1,parent_func
hls_coding_quadtree_hls,0,308,cb_size_split_i,in,32,1,parent_func
hls_coding_quadtree_hls,0,308,cb_size_split_o,out,32,1,parent_func
hls_coding_quadtree_hls,0,368,log2_min_cb_size,in,32,1,parent_func
hls_coding_quadtree_hls,0,392,min_cb_width,in,32,1,parent_func
hls_coding_quadtree_hls,0,476,tu_is_cu_qp_delta_coded,out,8,1,parent_func
hls_coding_quadtree_hls,0,468,tu_cu_qp_delta,out,32,1,parent_func
hls_coding_quadtree_hls,0,472,tu_is_cu_chroma_qp_offset_coded,out,8,1,parent_func
hls_coding_quadtree_hls,0,464,depth,out,32,1,parent_func
hls_coding_quadtree_hls,0,608,ctb_left_flag,in,8,1,parent_func
hls_coding_quadtree_hls,0,604,ctb_up_flag,in,8,1,parent_func
hls_coding_quadtree_hls,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_coding_quadtree_hls,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_coding_quadtree_hls,0,448,cu_chroma_qp_offset_enabled_flag,in,8,1,parent_func
hls_coding_quadtree_hls,0,432,diff_cu_chroma_qp_offset_depth,in,8,1,parent_func
hls_coding_quadtree_hls,0,1280,dc_tab_ct_depth_p,in,32,1,xmem_dcache_pointer parent_func
#hls_coding_quadtree_hls_dup1,0,0,tid,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup1,0,0,x0,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup1,0,0,y0,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup1,0,0,log2_cb_size,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup1,0,0,cb_depth,in,32,1,apcall_arg
hls_coding_quadtree_hls_dup1,0,300,x1_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,300,x1_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,304,y1_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,304,y1_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,312,log2_cb_size_minus_one_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,312,log2_cb_size_minus_one_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,316,cb_depth_plus_one_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,316,cb_depth_plus_one_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,408,width,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,332,height,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,292,split_cu_flag_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,292,split_cu_flag_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,296,more_data_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,296,more_data_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,1324,rv_hls_coding_unit,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,1236,rv_callback_flag,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,360,log2_ctb_size,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,540,qPy_pred,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,536,qp_y,in,8,1,parent_func
hls_coding_quadtree_hls_dup1,0,40,qp_block_mask_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,40,qp_block_mask_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,308,cb_size_split_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,308,cb_size_split_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,368,log2_min_cb_size,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,392,min_cb_width,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,476,tu_is_cu_qp_delta_coded,out,8,1,parent_func
hls_coding_quadtree_hls_dup1,0,468,tu_cu_qp_delta,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,472,tu_is_cu_chroma_qp_offset_coded,out,8,1,parent_func
hls_coding_quadtree_hls_dup1,0,464,depth,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,608,ctb_left_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup1,0,604,ctb_up_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup1,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup1,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,448,cu_chroma_qp_offset_enabled_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup1,0,432,diff_cu_chroma_qp_offset_depth,in,8,1,parent_func
hls_coding_quadtree_hls_dup1,0,1280,dc_tab_ct_depth_p,in,32,1,xmem_dcache_pointer parent_func
#hls_coding_quadtree_hls_dup2,0,0,tid,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup2,0,0,x0,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup2,0,0,y0,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup2,0,0,log2_cb_size,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup2,0,0,cb_depth,in,32,1,apcall_arg
hls_coding_quadtree_hls_dup2,0,300,x1_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,300,x1_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,304,y1_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,304,y1_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,312,log2_cb_size_minus_one_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,312,log2_cb_size_minus_one_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,316,cb_depth_plus_one_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,316,cb_depth_plus_one_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,408,width,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,332,height,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,292,split_cu_flag_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,292,split_cu_flag_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,296,more_data_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,296,more_data_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,1324,rv_hls_coding_unit,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,1236,rv_callback_flag,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,360,log2_ctb_size,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,540,qPy_pred,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,536,qp_y,in,8,1,parent_func
hls_coding_quadtree_hls_dup2,0,40,qp_block_mask_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,40,qp_block_mask_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,308,cb_size_split_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,308,cb_size_split_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,368,log2_min_cb_size,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,392,min_cb_width,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,476,tu_is_cu_qp_delta_coded,out,8,1,parent_func
hls_coding_quadtree_hls_dup2,0,468,tu_cu_qp_delta,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,472,tu_is_cu_chroma_qp_offset_coded,out,8,1,parent_func
hls_coding_quadtree_hls_dup2,0,464,depth,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,608,ctb_left_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup2,0,604,ctb_up_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup2,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup2,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,448,cu_chroma_qp_offset_enabled_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup2,0,432,diff_cu_chroma_qp_offset_depth,in,8,1,parent_func
hls_coding_quadtree_hls_dup2,0,1280,dc_tab_ct_depth_p,in,32,1,xmem_dcache_pointer parent_func
#hls_coding_quadtree_hls_dup3,0,0,tid,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup3,0,0,x0,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup3,0,0,y0,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup3,0,0,log2_cb_size,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup3,0,0,cb_depth,in,32,1,apcall_arg
hls_coding_quadtree_hls_dup3,0,300,x1_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,300,x1_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,304,y1_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,304,y1_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,312,log2_cb_size_minus_one_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,312,log2_cb_size_minus_one_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,316,cb_depth_plus_one_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,316,cb_depth_plus_one_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,408,width,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,332,height,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,292,split_cu_flag_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,292,split_cu_flag_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,296,more_data_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,296,more_data_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,1324,rv_hls_coding_unit,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,1236,rv_callback_flag,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,360,log2_ctb_size,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,540,qPy_pred,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,536,qp_y,in,8,1,parent_func
hls_coding_quadtree_hls_dup3,0,40,qp_block_mask_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,40,qp_block_mask_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,308,cb_size_split_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,308,cb_size_split_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,368,log2_min_cb_size,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,392,min_cb_width,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,476,tu_is_cu_qp_delta_coded,out,8,1,parent_func
hls_coding_quadtree_hls_dup3,0,468,tu_cu_qp_delta,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,472,tu_is_cu_chroma_qp_offset_coded,out,8,1,parent_func
hls_coding_quadtree_hls_dup3,0,464,depth,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,608,ctb_left_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup3,0,604,ctb_up_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup3,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup3,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,448,cu_chroma_qp_offset_enabled_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup3,0,432,diff_cu_chroma_qp_offset_depth,in,8,1,parent_func
hls_coding_quadtree_hls_dup3,0,1280,dc_tab_ct_depth_p,in,32,1,xmem_dcache_pointer parent_func
#hls_coding_unit_hls,0,0,tid,in,32,1,apcall_arg
#hls_coding_unit_hls,0,0,x0,in,32,1,apcall_arg
#hls_coding_unit_hls,0,0,y0,in,32,1,apcall_arg
#hls_coding_unit_hls,0,0,log2_cb_size,in,32,1,apcall_arg
hls_coding_unit_hls,0,420,loop_filter_disable_flag,in,8,1,parent_func
hls_coding_unit_hls,0,380,max_transform_hierarchy_depth_inter,in,32,1,parent_func
hls_coding_unit_hls,0,1160,disable_deblocking_filter_flag,in,8,1,parent_func
hls_coding_unit_hls,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_coding_unit_hls,0,476,tu_is_cu_qp_delta_coded,in,8,1,parent_func
hls_coding_unit_hls,0,572,cu_transquant_bypass_flag_i,in,8,1,parent_func
hls_coding_unit_hls,0,572,cu_transquant_bypass_flag_o,out,8,1,parent_func
hls_coding_unit_hls,0,28,pcm_flag_i,in,1,1,parent_func
hls_coding_unit_hls,0,28,pcm_flag_o,out,1,1,parent_func
hls_coding_unit_hls,0,504,merge_flag,in,8,1,parent_func
hls_coding_unit_hls,0,560,pred_mode_i,in,8,1,parent_func
hls_coding_unit_hls,0,560,pred_mode_o,out,8,1,parent_func
hls_coding_unit_hls,0,564,part_mode_i,in,8,1,parent_func
hls_coding_unit_hls,0,564,part_mode_o,out,8,1,parent_func
hls_coding_unit_hls,0,576,max_trafo_depth,out,8,1,parent_func
hls_coding_unit_hls,0,32,cb_size_i,in,32,1,parent_func
hls_coding_unit_hls,0,32,cb_size_o,out,32,1,parent_func
hls_coding_unit_hls,0,44,idx_i,in,32,1,parent_func
hls_coding_unit_hls,0,44,idx_o,out,32,1,parent_func
hls_coding_unit_hls,0,1164,xm_xBase,out,32,1,parent_func
hls_coding_unit_hls,0,1168,xm_yBase,out,32,1,parent_func
hls_coding_unit_hls,0,1172,xm_cb_xBase,out,32,1,parent_func
hls_coding_unit_hls,0,1176,xm_cb_yBase,out,32,1,parent_func
hls_coding_unit_hls,0,1180,xm_log2_cb_size,out,32,1,parent_func
hls_coding_unit_hls,0,1336,rv_set_deblocking_bypass,in,32,1,parent_func
hls_coding_unit_hls,0,1332,rv_ff_hevc_deblocking_boundary_strengths,in,32,1,parent_func
hls_coding_unit_hls,0,1340,rv_hls_pcm_sample,in,32,1,parent_func
hls_coding_unit_hls,0,1344,rv_hls_prediction_unit,in,32,1,parent_func
hls_coding_unit_hls,0,1348,rv_hls_intra_prediction_unit,in,32,1,parent_func
hls_coding_unit_hls,0,1352,rv_hls_transform_tree,in,32,1,parent_func
hls_coding_unit_hls,0,1236,rv_callback_flag,in,32,1,parent_func
hls_coding_unit_hls,0,36,length_r,out,32,1,parent_func
hls_coding_unit_hls,0,544,xm_x,out,32,1,parent_func
hls_coding_unit_hls,0,548,xm_y,out,32,1,parent_func
hls_coding_unit_hls,1,512,pu_intra_pred_mode_0,out,8,4,(complete partition) parent_func
hls_coding_unit_hls,1,513,pu_intra_pred_mode_1,out,8,4,(complete partition) parent_func
hls_coding_unit_hls,1,514,pu_intra_pred_mode_2,out,8,4,(complete partition) parent_func
hls_coding_unit_hls,1,515,pu_intra_pred_mode_3,out,8,4,(complete partition) parent_func
hls_coding_unit_hls,0,540,qPy_pred,out,32,1,parent_func
hls_coding_unit_hls,0,24,skip_flag_start,out,32,1,parent_func
hls_coding_unit_hls,0,368,log2_min_cb_size,in,32,1,parent_func
hls_coding_unit_hls,0,360,log2_ctb_size,in,32,1,parent_func
hls_coding_unit_hls,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_coding_unit_hls,0,536,qp_y,in,8,1,parent_func
hls_coding_unit_hls,0,440,transquant_bypass_enable_flag,in,8,1,parent_func
hls_coding_unit_hls,0,392,min_cb_width,in,32,1,parent_func
hls_coding_unit_hls,0,568,intra_split_flag,out,8,1,parent_func
hls_coding_unit_hls,0,452,slice_type,in,8,1,parent_func
hls_coding_unit_hls,0,608,ctb_left_flag,in,8,1,parent_func
hls_coding_unit_hls,0,604,ctb_up_flag,in,8,1,parent_func
hls_coding_unit_hls,0,320,amp_enabled_flag,in,8,1,parent_func
hls_coding_unit_hls,0,400,pcm_enabled_flag,in,32,1,parent_func
hls_coding_unit_hls,0,412,log2_min_pcm_cb_size,in,32,1,parent_func
hls_coding_unit_hls,0,416,log2_max_pcm_cb_size,in,32,1,parent_func
hls_coding_unit_hls,0,464,depth,in,32,1,parent_func
hls_coding_unit_hls,0,1288,dc_skip_flag_p,in,32,1,xmem_dcache_pointer parent_func
hls_coding_unit_hls,0,1272,dc_qp_y_tab_p,in,32,1,xmem_dcache_pointer parent_func
hls_coding_unit_hls,0,1280,dc_tab_ct_depth_p,in,32,1,xmem_dcache_pointer parent_func
#hls_coding_unit_hls_dup1,0,0,tid,in,32,1,apcall_arg
#hls_coding_unit_hls_dup1,0,0,x0,in,32,1,apcall_arg
#hls_coding_unit_hls_dup1,0,0,y0,in,32,1,apcall_arg
#hls_coding_unit_hls_dup1,0,0,log2_cb_size,in,32,1,apcall_arg
hls_coding_unit_hls_dup1,0,420,loop_filter_disable_flag,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,380,max_transform_hierarchy_depth_inter,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,1160,disable_deblocking_filter_flag,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,476,tu_is_cu_qp_delta_coded,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,572,cu_transquant_bypass_flag_i,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,572,cu_transquant_bypass_flag_o,out,8,1,parent_func
hls_coding_unit_hls_dup1,0,28,pcm_flag_i,in,1,1,parent_func
hls_coding_unit_hls_dup1,0,28,pcm_flag_o,out,1,1,parent_func
hls_coding_unit_hls_dup1,0,504,merge_flag,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,560,pred_mode_i,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,560,pred_mode_o,out,8,1,parent_func
hls_coding_unit_hls_dup1,0,564,part_mode_i,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,564,part_mode_o,out,8,1,parent_func
hls_coding_unit_hls_dup1,0,576,max_trafo_depth,out,8,1,parent_func
hls_coding_unit_hls_dup1,0,32,cb_size_i,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,32,cb_size_o,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,44,idx_i,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,44,idx_o,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,1164,xm_xBase,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,1168,xm_yBase,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,1172,xm_cb_xBase,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,1176,xm_cb_yBase,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,1180,xm_log2_cb_size,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,1336,rv_set_deblocking_bypass,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,1332,rv_ff_hevc_deblocking_boundary_strengths,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,1340,rv_hls_pcm_sample,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,1344,rv_hls_prediction_unit,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,1348,rv_hls_intra_prediction_unit,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,1352,rv_hls_transform_tree,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,1236,rv_callback_flag,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,36,length_r,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,544,xm_x,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,548,xm_y,out,32,1,parent_func
hls_coding_unit_hls_dup1,1,512,pu_intra_pred_mode_0,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup1,1,513,pu_intra_pred_mode_1,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup1,1,514,pu_intra_pred_mode_2,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup1,1,515,pu_intra_pred_mode_3,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup1,0,540,qPy_pred,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,24,skip_flag_start,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,368,log2_min_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,360,log2_ctb_size,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,536,qp_y,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,440,transquant_bypass_enable_flag,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,392,min_cb_width,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,568,intra_split_flag,out,8,1,parent_func
hls_coding_unit_hls_dup1,0,452,slice_type,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,608,ctb_left_flag,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,604,ctb_up_flag,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,320,amp_enabled_flag,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,400,pcm_enabled_flag,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,412,log2_min_pcm_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,416,log2_max_pcm_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,464,depth,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,1288,dc_skip_flag_p,in,32,1,xmem_dcache_pointer parent_func
hls_coding_unit_hls_dup1,0,1272,dc_qp_y_tab_p,in,32,1,xmem_dcache_pointer parent_func
hls_coding_unit_hls_dup1,0,1280,dc_tab_ct_depth_p,in,32,1,xmem_dcache_pointer parent_func
#hls_coding_unit_hls_dup2,0,0,tid,in,32,1,apcall_arg
#hls_coding_unit_hls_dup2,0,0,x0,in,32,1,apcall_arg
#hls_coding_unit_hls_dup2,0,0,y0,in,32,1,apcall_arg
#hls_coding_unit_hls_dup2,0,0,log2_cb_size,in,32,1,apcall_arg
hls_coding_unit_hls_dup2,0,420,loop_filter_disable_flag,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,380,max_transform_hierarchy_depth_inter,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,1160,disable_deblocking_filter_flag,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,476,tu_is_cu_qp_delta_coded,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,572,cu_transquant_bypass_flag_i,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,572,cu_transquant_bypass_flag_o,out,8,1,parent_func
hls_coding_unit_hls_dup2,0,28,pcm_flag_i,in,1,1,parent_func
hls_coding_unit_hls_dup2,0,28,pcm_flag_o,out,1,1,parent_func
hls_coding_unit_hls_dup2,0,504,merge_flag,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,560,pred_mode_i,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,560,pred_mode_o,out,8,1,parent_func
hls_coding_unit_hls_dup2,0,564,part_mode_i,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,564,part_mode_o,out,8,1,parent_func
hls_coding_unit_hls_dup2,0,576,max_trafo_depth,out,8,1,parent_func
hls_coding_unit_hls_dup2,0,32,cb_size_i,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,32,cb_size_o,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,44,idx_i,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,44,idx_o,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,1164,xm_xBase,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,1168,xm_yBase,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,1172,xm_cb_xBase,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,1176,xm_cb_yBase,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,1180,xm_log2_cb_size,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,1336,rv_set_deblocking_bypass,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,1332,rv_ff_hevc_deblocking_boundary_strengths,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,1340,rv_hls_pcm_sample,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,1344,rv_hls_prediction_unit,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,1348,rv_hls_intra_prediction_unit,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,1352,rv_hls_transform_tree,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,1236,rv_callback_flag,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,36,length_r,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,544,xm_x,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,548,xm_y,out,32,1,parent_func
hls_coding_unit_hls_dup2,1,512,pu_intra_pred_mode_0,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup2,1,513,pu_intra_pred_mode_1,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup2,1,514,pu_intra_pred_mode_2,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup2,1,515,pu_intra_pred_mode_3,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup2,0,540,qPy_pred,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,24,skip_flag_start,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,368,log2_min_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,360,log2_ctb_size,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,536,qp_y,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,440,transquant_bypass_enable_flag,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,392,min_cb_width,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,568,intra_split_flag,out,8,1,parent_func
hls_coding_unit_hls_dup2,0,452,slice_type,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,608,ctb_left_flag,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,604,ctb_up_flag,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,320,amp_enabled_flag,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,400,pcm_enabled_flag,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,412,log2_min_pcm_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,416,log2_max_pcm_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,464,depth,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,1288,dc_skip_flag_p,in,32,1,xmem_dcache_pointer parent_func
hls_coding_unit_hls_dup2,0,1272,dc_qp_y_tab_p,in,32,1,xmem_dcache_pointer parent_func
hls_coding_unit_hls_dup2,0,1280,dc_tab_ct_depth_p,in,32,1,xmem_dcache_pointer parent_func
#hls_coding_unit_hls_dup3,0,0,tid,in,32,1,apcall_arg
#hls_coding_unit_hls_dup3,0,0,x0,in,32,1,apcall_arg
#hls_coding_unit_hls_dup3,0,0,y0,in,32,1,apcall_arg
#hls_coding_unit_hls_dup3,0,0,log2_cb_size,in,32,1,apcall_arg
hls_coding_unit_hls_dup3,0,420,loop_filter_disable_flag,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,380,max_transform_hierarchy_depth_inter,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,1160,disable_deblocking_filter_flag,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,476,tu_is_cu_qp_delta_coded,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,572,cu_transquant_bypass_flag_i,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,572,cu_transquant_bypass_flag_o,out,8,1,parent_func
hls_coding_unit_hls_dup3,0,28,pcm_flag_i,in,1,1,parent_func
hls_coding_unit_hls_dup3,0,28,pcm_flag_o,out,1,1,parent_func
hls_coding_unit_hls_dup3,0,504,merge_flag,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,560,pred_mode_i,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,560,pred_mode_o,out,8,1,parent_func
hls_coding_unit_hls_dup3,0,564,part_mode_i,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,564,part_mode_o,out,8,1,parent_func
hls_coding_unit_hls_dup3,0,576,max_trafo_depth,out,8,1,parent_func
hls_coding_unit_hls_dup3,0,32,cb_size_i,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,32,cb_size_o,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,44,idx_i,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,44,idx_o,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,1164,xm_xBase,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,1168,xm_yBase,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,1172,xm_cb_xBase,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,1176,xm_cb_yBase,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,1180,xm_log2_cb_size,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,1336,rv_set_deblocking_bypass,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,1332,rv_ff_hevc_deblocking_boundary_strengths,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,1340,rv_hls_pcm_sample,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,1344,rv_hls_prediction_unit,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,1348,rv_hls_intra_prediction_unit,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,1352,rv_hls_transform_tree,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,1236,rv_callback_flag,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,36,length_r,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,544,xm_x,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,548,xm_y,out,32,1,parent_func
hls_coding_unit_hls_dup3,1,512,pu_intra_pred_mode_0,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup3,1,513,pu_intra_pred_mode_1,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup3,1,514,pu_intra_pred_mode_2,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup3,1,515,pu_intra_pred_mode_3,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup3,0,540,qPy_pred,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,24,skip_flag_start,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,368,log2_min_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,360,log2_ctb_size,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,536,qp_y,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,440,transquant_bypass_enable_flag,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,392,min_cb_width,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,568,intra_split_flag,out,8,1,parent_func
hls_coding_unit_hls_dup3,0,452,slice_type,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,608,ctb_left_flag,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,604,ctb_up_flag,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,320,amp_enabled_flag,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,400,pcm_enabled_flag,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,412,log2_min_pcm_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,416,log2_max_pcm_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,464,depth,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,1288,dc_skip_flag_p,in,32,1,xmem_dcache_pointer parent_func
hls_coding_unit_hls_dup3,0,1272,dc_qp_y_tab_p,in,32,1,xmem_dcache_pointer parent_func
hls_coding_unit_hls_dup3,0,1280,dc_tab_ct_depth_p,in,32,1,xmem_dcache_pointer parent_func
#copy_top_left_pixel_hls,0,0,tid,in,32,1,apcall_arg
#copy_top_left_pixel_hls,0,0,x0,in,32,1,apcall_arg
#copy_top_left_pixel_hls,0,0,y0,in,32,1,apcall_arg
#copy_top_left_pixel_hls,0,0,xBase,in,32,1,apcall_arg
#copy_top_left_pixel_hls,0,0,yBase,in,32,1,apcall_arg
copy_top_left_pixel_hls,0,168,log2_trafo_size,in,32,1,parent_func
#copy_top_left_pixel_hls,0,0,blk_id,in,32,1,apcall_arg
copy_top_left_pixel_hls,0,360,log2_ctb_size,in,32,1,parent_func
copy_top_left_pixel_hls,0,376,log2_min_tb_size,in,32,1,parent_func
copy_top_left_pixel_hls,0,560,pred_mode,in,8,1,parent_func
copy_top_left_pixel_hls,1,336,hshift_0,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,340,hshift_1,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,344,hshift_2,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,348,vshift_0,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,352,vshift_1,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,356,vshift_2,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,1240,buf_data_0,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,1244,buf_data_1,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,1248,buf_data_2,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,1144,xm_linesize_0,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,1148,xm_linesize_1,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,1152,xm_linesize_2,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,0,1136,cmdr_run_i,in,8,1,parent_func
copy_top_left_pixel_hls,0,1136,cmdr_run_o,out,8,1,parent_func
genPredCol_hls,1,180,predColBuf_0,out,32,17,(complete partition)
genPredCol_hls,1,184,predColBuf_1,out,32,17,(complete partition)
genPredCol_hls,1,188,predColBuf_2,out,32,17,(complete partition)
genPredCol_hls,1,192,predColBuf_3,out,32,17,(complete partition)
genPredCol_hls,1,196,predColBuf_4,out,32,17,(complete partition)
genPredCol_hls,1,200,predColBuf_5,out,32,17,(complete partition)
genPredCol_hls,1,204,predColBuf_6,out,32,17,(complete partition)
genPredCol_hls,1,208,predColBuf_7,out,32,17,(complete partition)
genPredCol_hls,1,212,predColBuf_8,out,32,17,(complete partition)
genPredCol_hls,1,216,predColBuf_9,out,32,17,(complete partition)
genPredCol_hls,1,220,predColBuf_10,out,32,17,(complete partition)
genPredCol_hls,1,224,predColBuf_11,out,32,17,(complete partition)
genPredCol_hls,1,228,predColBuf_12,out,32,17,(complete partition)
genPredCol_hls,1,232,predColBuf_13,out,32,17,(complete partition)
genPredCol_hls,1,236,predColBuf_14,out,32,17,(complete partition)
genPredCol_hls,1,240,predColBuf_15,out,32,17,(complete partition)
genPredCol_hls,1,244,predColBuf_16_i,in,32,17,(complete partition)
genPredCol_hls,1,244,predColBuf_16_o,out,32,17,(complete partition)
genPredCol_hls,0,172,log2_width,in,8,1,
genPredCol_hls,0,1276,dc_tab_mvf_pred_flag_row_p,in,32,1,xmem_dcache_pointer
#genPredCol_hls,0,0,x0,in,32,1,apcall_arg
#genPredCol_hls,0,0,y0,in,32,1,apcall_arg
genPredCol_hls,0,1284,dc_cbf_luma_p,in,32,1,xmem_dcache_pointer
genPredCol_hls,0,376,log2_min_tb_size,in,32,1,
genPredCol_hls,0,388,min_tb_width,in,32,1,
#genPredCol_hls,0,0,min_tb_height,in,32,1,apcall_arg
ff_hevc_get_sub_cu_zscan_id_hls,0,360,log2_ctb_size,in,32,1,
#ff_hevc_get_sub_cu_zscan_id_hls,0,0,x0,in,32,1,apcall_arg
#ff_hevc_get_sub_cu_zscan_id_hls,0,0,y0,in,32,1,apcall_arg
ff_hevc_get_sub_cu_zscan_id_hls,0,248,zscan_id,out,32,1,
#ff_hevc_skip_flag_decode_hls,0,0,left_skip_flag,in,8,1,apcall_arg
#ff_hevc_skip_flag_decode_hls,0,0,up_skip_flag,in,8,1,apcall_arg
ff_hevc_skip_flag_decode_hls,0,360,log2_ctb_size,in,32,1,
ff_hevc_skip_flag_decode_hls,0,608,ctb_left_flag,in,8,1,
ff_hevc_skip_flag_decode_hls,0,604,ctb_up_flag,in,8,1,
#ff_hevc_skip_flag_decode_hls,0,0,x0,in,32,1,apcall_arg
#ff_hevc_skip_flag_decode_hls,0,0,y0,in,32,1,apcall_arg
ff_hevc_set_qPy_hls,0,536,qp_y,out,8,1,
ff_hevc_set_qPy_hls,0,532,first_qp_group_i,in,8,1,
ff_hevc_set_qPy_hls,0,532,first_qp_group_o,out,8,1,
#ff_hevc_set_qPy_hls,0,0,is_cu_qp_delta_coded,in,8,1,apcall_arg
ff_hevc_set_qPy_hls,0,540,qPy_pred,in,32,1,
ff_hevc_set_qPy_hls,0,360,log2_ctb_size,in,32,1,
ff_hevc_set_qPy_hls,0,436,diff_cu_qp_delta_depth,in,32,1,
ff_hevc_set_qPy_hls,0,368,log2_min_cb_size,in,32,1,
ff_hevc_set_qPy_hls,0,392,min_cb_width,in,32,1,
ff_hevc_set_qPy_hls,0,460,slice_qp,in,8,1,
#ff_hevc_set_qPy_hls,0,0,xBase,in,32,1,apcall_arg
#ff_hevc_set_qPy_hls,0,0,yBase,in,32,1,apcall_arg
#ff_hevc_set_qPy_hls,0,0,log2_cb_size,in,32,1,apcall_arg
ff_hevc_set_qPy_hls,0,1272,dc_qp_y_tab_p,in,32,1,xmem_dcache_pointer
ff_hevc_set_qPy_hls,0,468,tu_cu_qp_delta,in,32,1,
ff_hevc_set_qPy_hls,0,1132,qp_bd_offset,in,32,1,
#hls_decode_neighbour_hls,0,0,dc_ctb_addr_rs_to_ts_p,in,32,1,apcall_arg_dcache_pointer
#hls_decode_neighbour_hls,0,0,dc_tile_id_p,in,32,1,apcall_arg_dcache_pointer
hls_decode_neighbour_hls,0,532,first_qp_group,out,8,1,
hls_decode_neighbour_hls,0,620,end_of_tiles_x,out,16,1,
hls_decode_neighbour_hls,0,624,end_of_tiles_y,out,16,1,
hls_decode_neighbour_hls,0,260,slice_or_tiles_left_boundary,out,8,1,
hls_decode_neighbour_hls,0,264,slice_or_tiles_up_boundary,out,8,1,
hls_decode_neighbour_hls,0,608,ctb_left_flag,out,1,1,
hls_decode_neighbour_hls,0,604,ctb_up_flag,out,1,1,
hls_decode_neighbour_hls,0,616,ctb_up_right_flag,out,1,1,
hls_decode_neighbour_hls,0,612,ctb_up_left_flag,out,1,1,
hls_decode_neighbour_hls,0,272,x_ctb,in,32,1,
hls_decode_neighbour_hls,0,276,y_ctb,in,32,1,
hls_decode_neighbour_hls,0,280,ctb_addr_ts,in,32,1,
hls_decode_neighbour_hls,0,360,log2_ctb_size,in,32,1,
hls_decode_neighbour_hls,0,284,ctb_width,in,32,1,
hls_decode_neighbour_hls,0,288,slice_addr,in,32,1,
hls_decode_neighbour_hls,0,252,entropy_coding_sync_enabled_flag,in,8,1,
hls_decode_neighbour_hls,0,256,tiles_enabled_flag,in,8,1,
hls_decode_neighbour_hls,0,444,num_tile_columns,in,32,1,
hls_decode_neighbour_hls,1,8192,column_width_q0,in,16,20,addr_width=5
hls_decode_neighbour_hls,0,408,width,in,32,1,
hls_decode_neighbour_hls,0,332,height,in,32,1,
#set_tab_mvf_pred_flag_hls,0,0,x0,in,32,1,apcall_arg
#set_tab_mvf_pred_flag_hls,0,0,y0,in,32,1,apcall_arg
#set_tab_mvf_pred_flag_hls,0,0,log2_cb_size,in,32,1,apcall_arg
set_tab_mvf_pred_flag_hls,0,372,log2_min_pu_size,in,32,1,
set_tab_mvf_pred_flag_hls,0,396,min_pu_width,in,32,1,
set_tab_mvf_pred_flag_hls,0,172,log2_width,in,8,1,
set_tab_mvf_pred_flag_hls,0,1276,dc_tab_mvf_pred_flag_row_p,in,32,1,xmem_dcache_pointer
set_tab_mvf_pred_flag_hls,1,180,predColBuf_0_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,180,predColBuf_0_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,184,predColBuf_1_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,184,predColBuf_1_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,188,predColBuf_2_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,188,predColBuf_2_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,192,predColBuf_3_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,192,predColBuf_3_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,196,predColBuf_4_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,196,predColBuf_4_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,200,predColBuf_5_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,200,predColBuf_5_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,204,predColBuf_6_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,204,predColBuf_6_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,208,predColBuf_7_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,208,predColBuf_7_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,212,predColBuf_8_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,212,predColBuf_8_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,216,predColBuf_9_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,216,predColBuf_9_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,220,predColBuf_10_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,220,predColBuf_10_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,224,predColBuf_11_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,224,predColBuf_11_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,228,predColBuf_12_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,228,predColBuf_12_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,232,predColBuf_13_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,232,predColBuf_13_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,236,predColBuf_14_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,236,predColBuf_14_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,240,predColBuf_15_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,240,predColBuf_15_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,244,predColBuf_16_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,244,predColBuf_16_o,out,32,17,(complete partition)
init_intra_neighbors_hls,1,336,hshift_0,in,32,3,(complete partition)
init_intra_neighbors_hls,1,340,hshift_1,in,32,3,(complete partition)
init_intra_neighbors_hls,1,344,hshift_2,in,32,3,(complete partition)
init_intra_neighbors_hls,1,348,vshift_0,in,32,3,(complete partition)
init_intra_neighbors_hls,1,352,vshift_1,in,32,3,(complete partition)
init_intra_neighbors_hls,1,356,vshift_2,in,32,3,(complete partition)
init_intra_neighbors_hls,0,372,log2_min_pu_size,in,32,1,
init_intra_neighbors_hls,0,376,log2_min_tb_size,in,32,1,
init_intra_neighbors_hls,0,360,log2_ctb_size,in,32,1,
init_intra_neighbors_hls,0,404,tb_mask,in,8,1,
init_intra_neighbors_hls,0,408,width,in,32,1,
init_intra_neighbors_hls,0,332,height,in,32,1,
init_intra_neighbors_hls,0,172,log2_width,in,8,1,
init_intra_neighbors_hls,0,176,log2_height,in,8,1,
init_intra_neighbors_hls,0,424,constrained_intra_pred_flag,in,8,1,
init_intra_neighbors_hls,0,1260,dc_min_tb_addr_zs_p,in,32,1,xmem_dcache_pointer
#init_intra_neighbors_hls,0,0,x0,in,32,1,apcall_arg
#init_intra_neighbors_hls,0,0,y0,in,32,1,apcall_arg
#init_intra_neighbors_hls,0,0,log2_size,in,32,1,apcall_arg
#init_intra_neighbors_hls,0,0,c_idx,in,32,1,apcall_arg
init_intra_neighbors_hls,0,600,cand_bottom_left,in,8,1,
init_intra_neighbors_hls,0,584,cand_left,in,8,1,
init_intra_neighbors_hls,0,588,cand_up_left,in,8,1,
init_intra_neighbors_hls,0,580,cand_up,in,8,1,
init_intra_neighbors_hls,0,596,cand_up_right,in,8,1,
init_intra_neighbors_hls,0,644,numIntraNeighbor,out,32,1,
init_intra_neighbors_hls,0,648,totalUnits,out,32,1,
init_intra_neighbors_hls,0,652,aboveUnits,out,32,1,
init_intra_neighbors_hls,0,656,leftUnits,out,32,1,
init_intra_neighbors_hls,0,660,unitWidth,out,32,1,
init_intra_neighbors_hls,0,664,unitHeight,out,32,1,
init_intra_neighbors_hls,0,668,log2TrSize,out,32,1,
init_intra_neighbors_hls,0,672,bNeighborFlags_i,in,65,1,
init_intra_neighbors_hls,0,672,bNeighborFlags_o,out,65,1,
init_intra_neighbors_hls,0,396,min_pu_width,in,32,1,
init_intra_neighbors_hls,0,1276,dc_tab_mvf_pred_flag_row_p,in,32,1,xmem_dcache_pointer
init_intra_neighbors_hls,1,180,predColBuf_0,in,32,17,(complete partition)
init_intra_neighbors_hls,1,184,predColBuf_1,in,32,17,(complete partition)
init_intra_neighbors_hls,1,188,predColBuf_2,in,32,17,(complete partition)
init_intra_neighbors_hls,1,192,predColBuf_3,in,32,17,(complete partition)
init_intra_neighbors_hls,1,196,predColBuf_4,in,32,17,(complete partition)
init_intra_neighbors_hls,1,200,predColBuf_5,in,32,17,(complete partition)
init_intra_neighbors_hls,1,204,predColBuf_6,in,32,17,(complete partition)
init_intra_neighbors_hls,1,208,predColBuf_7,in,32,17,(complete partition)
init_intra_neighbors_hls,1,212,predColBuf_8,in,32,17,(complete partition)
init_intra_neighbors_hls,1,216,predColBuf_9,in,32,17,(complete partition)
init_intra_neighbors_hls,1,220,predColBuf_10,in,32,17,(complete partition)
init_intra_neighbors_hls,1,224,predColBuf_11,in,32,17,(complete partition)
init_intra_neighbors_hls,1,228,predColBuf_12,in,32,17,(complete partition)
init_intra_neighbors_hls,1,232,predColBuf_13,in,32,17,(complete partition)
init_intra_neighbors_hls,1,236,predColBuf_14,in,32,17,(complete partition)
init_intra_neighbors_hls,1,240,predColBuf_15,in,32,17,(complete partition)
init_intra_neighbors_hls,1,244,predColBuf_16,in,32,17,(complete partition)
init_intra_neighbors_hls,0,452,slice_type,in,8,1,
init_intra_neighbors_chroma_hls,1,336,hshift_0,in,32,3,(complete partition)
init_intra_neighbors_chroma_hls,1,340,hshift_1,in,32,3,(complete partition)
init_intra_neighbors_chroma_hls,1,344,hshift_2,in,32,3,(complete partition)
init_intra_neighbors_chroma_hls,1,348,vshift_0,in,32,3,(complete partition)
init_intra_neighbors_chroma_hls,1,352,vshift_1,in,32,3,(complete partition)
init_intra_neighbors_chroma_hls,1,356,vshift_2,in,32,3,(complete partition)
init_intra_neighbors_chroma_hls,0,372,log2_min_pu_size,in,32,1,
init_intra_neighbors_chroma_hls,0,376,log2_min_tb_size,in,32,1,
init_intra_neighbors_chroma_hls,0,360,log2_ctb_size,in,32,1,
init_intra_neighbors_chroma_hls,0,404,tb_mask,in,8,1,
init_intra_neighbors_chroma_hls,0,408,width,in,32,1,
init_intra_neighbors_chroma_hls,0,332,height,in,32,1,
init_intra_neighbors_chroma_hls,0,172,log2_width,in,8,1,
init_intra_neighbors_chroma_hls,0,176,log2_height,in,8,1,
init_intra_neighbors_chroma_hls,0,424,constrained_intra_pred_flag,in,8,1,
init_intra_neighbors_chroma_hls,0,1260,dc_min_tb_addr_zs_p,in,32,1,xmem_dcache_pointer
#init_intra_neighbors_chroma_hls,0,0,x0,in,32,1,apcall_arg
#init_intra_neighbors_chroma_hls,0,0,y0,in,32,1,apcall_arg
#init_intra_neighbors_chroma_hls,0,0,log2_size,in,32,1,apcall_arg
#init_intra_neighbors_chroma_hls,0,0,c_idx,in,32,1,apcall_arg
init_intra_neighbors_chroma_hls,0,1508,cand_bottom_left_c,in,8,1,
init_intra_neighbors_chroma_hls,0,1492,cand_left_c,in,8,1,
init_intra_neighbors_chroma_hls,0,1496,cand_up_left_c,in,8,1,
init_intra_neighbors_chroma_hls,0,1488,cand_up_c,in,8,1,
init_intra_neighbors_chroma_hls,0,1504,cand_up_right_c,in,8,1,
init_intra_neighbors_chroma_hls,0,684,numIntraNeighbor_c,out,32,1,
init_intra_neighbors_chroma_hls,0,688,totalUnits_c,out,32,1,
init_intra_neighbors_chroma_hls,0,692,aboveUnits_c,out,32,1,
init_intra_neighbors_chroma_hls,0,696,leftUnits_c,out,32,1,
init_intra_neighbors_chroma_hls,0,700,unitWidth_c,out,32,1,
init_intra_neighbors_chroma_hls,0,704,unitHeight_c,out,32,1,
init_intra_neighbors_chroma_hls,0,708,log2TrSize_c,out,32,1,
init_intra_neighbors_chroma_hls,0,712,bNeighborFlags_c_i,in,65,1,
init_intra_neighbors_chroma_hls,0,712,bNeighborFlags_c_o,out,65,1,
init_intra_neighbors_chroma_hls,0,396,min_pu_width,in,32,1,
init_intra_neighbors_chroma_hls,0,1276,dc_tab_mvf_pred_flag_row_p,in,32,1,xmem_dcache_pointer
init_intra_neighbors_chroma_hls,1,180,predColBuf_0,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,184,predColBuf_1,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,188,predColBuf_2,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,192,predColBuf_3,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,196,predColBuf_4,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,200,predColBuf_5,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,204,predColBuf_6,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,208,predColBuf_7,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,212,predColBuf_8,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,216,predColBuf_9,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,220,predColBuf_10,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,224,predColBuf_11,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,228,predColBuf_12,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,232,predColBuf_13,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,236,predColBuf_14,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,240,predColBuf_15,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,244,predColBuf_16,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,0,452,slice_type,in,8,1,
ff_hevc_set_neighbour_available_hls,0,580,cand_up,out,1,1,
ff_hevc_set_neighbour_available_hls,0,584,cand_left,out,1,1,
ff_hevc_set_neighbour_available_hls,0,588,cand_up_left,out,1,1,
ff_hevc_set_neighbour_available_hls,0,592,cand_up_right_sap,out,1,1,
ff_hevc_set_neighbour_available_hls,0,596,cand_up_right,out,1,1,
ff_hevc_set_neighbour_available_hls,0,600,cand_bottom_left,out,1,1,
ff_hevc_set_neighbour_available_hls,0,360,log2_ctb_size,in,32,1,
ff_hevc_set_neighbour_available_hls,0,604,ctb_up_flag,in,8,1,
ff_hevc_set_neighbour_available_hls,0,608,ctb_left_flag,in,8,1,
ff_hevc_set_neighbour_available_hls,0,612,ctb_up_left_flag,in,8,1,
ff_hevc_set_neighbour_available_hls,0,616,ctb_up_right_flag,in,8,1,
ff_hevc_set_neighbour_available_hls,0,620,end_of_tiles_x,in,16,1,
ff_hevc_set_neighbour_available_hls,0,624,end_of_tiles_y,in,16,1,
#ff_hevc_set_neighbour_available_hls,0,0,x0,in,32,1,apcall_arg
#ff_hevc_set_neighbour_available_hls,0,0,y0,in,32,1,apcall_arg
ff_hevc_set_neighbour_available_hls,0,160,nPbW,out,32,1,
ff_hevc_set_neighbour_available_hls,0,164,nPbH,out,32,1,
#ff_hevc_set_neighbour_available_hls,0,0,arg_nPbW,in,32,1,apcall_arg
#ff_hevc_set_neighbour_available_hls,0,0,arg_nPbH,in,32,1,apcall_arg

[SCALAR] adr:168, bankAdr:4, sBank:10, d:0, a:9, f:copy_top_left_pixel_hls, v:log2_trafo_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:5, f:copy_top_left_pixel_hls, v:log2_ctb_size
[SCALAR] adr:376, bankAdr:8, sBank:30, d:0, a:1, f:copy_top_left_pixel_hls, v:log2_min_tb_size
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:7, f:copy_top_left_pixel_hls, v:pred_mode
[SCALAR] adr:336, bankAdr:8, sBank:20, d:0, a:8, f:copy_top_left_pixel_hls, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:0, a:10, f:copy_top_left_pixel_hls, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:0, a:10, f:copy_top_left_pixel_hls, v:hshift_2
[SCALAR] adr:348, bankAdr:8, sBank:23, d:0, a:8, f:copy_top_left_pixel_hls, v:vshift_0
[SCALAR] adr:352, bankAdr:8, sBank:24, d:0, a:6, f:copy_top_left_pixel_hls, v:vshift_1
[SCALAR] adr:356, bankAdr:8, sBank:25, d:0, a:6, f:copy_top_left_pixel_hls, v:vshift_2
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:1, a:9, f:copy_top_left_pixel_hls, v:buf_data_0
[SCALAR] adr:1244, bankAdr:36, sBank:23, d:1, a:7, f:copy_top_left_pixel_hls, v:buf_data_1
[SCALAR] adr:1248, bankAdr:36, sBank:24, d:1, a:5, f:copy_top_left_pixel_hls, v:buf_data_2
[SCALAR] adr:1144, bankAdr:32, sBank:30, d:1, a:1, f:copy_top_left_pixel_hls, v:xm_linesize_0
[SCALAR] adr:1148, bankAdr:32, sBank:31, d:0, a:3, f:copy_top_left_pixel_hls, v:xm_linesize_1
[SCALAR] adr:1152, bankAdr:36, sBank:0, d:0, a:12, f:copy_top_left_pixel_hls, v:xm_linesize_2
[SCALAR] adr:1136, bankAdr:32, sBank:28, d:0, a:6, f:copy_top_left_pixel_hls, v:cmdr_run_i
[SCALAR] adr:1136, bankAdr:32, sBank:28, d:0, a:0, f:copy_top_left_pixel_hls, v:cmdr_run_o
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:4, f:ff_hevc_get_sub_cu_zscan_id_hls, v:log2_ctb_size
[SCALAR] adr:248, bankAdr:4, sBank:30, d:0, a:0, f:ff_hevc_get_sub_cu_zscan_id_hls, v:zscan_id
[SCALAR] adr:580, bankAdr:16, sBank:17, d:0, a:0, f:ff_hevc_set_neighbour_available_hls, v:cand_up
[SCALAR] adr:584, bankAdr:16, sBank:18, d:0, a:0, f:ff_hevc_set_neighbour_available_hls, v:cand_left
[SCALAR] adr:588, bankAdr:16, sBank:19, d:0, a:0, f:ff_hevc_set_neighbour_available_hls, v:cand_up_left
[SCALAR] adr:592, bankAdr:16, sBank:20, d:0, a:0, f:ff_hevc_set_neighbour_available_hls, v:cand_up_right_sap
[SCALAR] adr:596, bankAdr:16, sBank:21, d:0, a:0, f:ff_hevc_set_neighbour_available_hls, v:cand_up_right
[SCALAR] adr:600, bankAdr:16, sBank:22, d:0, a:0, f:ff_hevc_set_neighbour_available_hls, v:cand_bottom_left
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:6, f:ff_hevc_set_neighbour_available_hls, v:log2_ctb_size
[SCALAR] adr:604, bankAdr:16, sBank:23, d:0, a:9, f:ff_hevc_set_neighbour_available_hls, v:ctb_up_flag
[SCALAR] adr:608, bankAdr:16, sBank:24, d:0, a:7, f:ff_hevc_set_neighbour_available_hls, v:ctb_left_flag
[SCALAR] adr:612, bankAdr:16, sBank:25, d:1, a:5, f:ff_hevc_set_neighbour_available_hls, v:ctb_up_left_flag
[SCALAR] adr:616, bankAdr:16, sBank:26, d:1, a:5, f:ff_hevc_set_neighbour_available_hls, v:ctb_up_right_flag
[SCALAR] adr:620, bankAdr:16, sBank:27, d:0, a:4, f:ff_hevc_set_neighbour_available_hls, v:end_of_tiles_x
[SCALAR] adr:624, bankAdr:16, sBank:28, d:1, a:6, f:ff_hevc_set_neighbour_available_hls, v:end_of_tiles_y
[SCALAR] adr:160, bankAdr:4, sBank:8, d:0, a:0, f:ff_hevc_set_neighbour_available_hls, v:nPbW
[SCALAR] adr:164, bankAdr:4, sBank:9, d:0, a:0, f:ff_hevc_set_neighbour_available_hls, v:nPbH
[SCALAR] adr:536, bankAdr:16, sBank:6, d:0, a:0, f:ff_hevc_set_qPy_hls, v:qp_y
[SCALAR] adr:532, bankAdr:16, sBank:5, d:0, a:8, f:ff_hevc_set_qPy_hls, v:first_qp_group_i
[SCALAR] adr:532, bankAdr:16, sBank:5, d:0, a:0, f:ff_hevc_set_qPy_hls, v:first_qp_group_o
[SCALAR] adr:540, bankAdr:16, sBank:7, d:0, a:9, f:ff_hevc_set_qPy_hls, v:qPy_pred
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:7, f:ff_hevc_set_qPy_hls, v:log2_ctb_size
[SCALAR] adr:436, bankAdr:12, sBank:13, d:0, a:8, f:ff_hevc_set_qPy_hls, v:diff_cu_qp_delta_depth
[SCALAR] adr:368, bankAdr:8, sBank:28, d:0, a:7, f:ff_hevc_set_qPy_hls, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:0, a:4, f:ff_hevc_set_qPy_hls, v:min_cb_width
[SCALAR] adr:460, bankAdr:12, sBank:19, d:0, a:4, f:ff_hevc_set_qPy_hls, v:slice_qp
[SCALAR] adr:1272, bankAdr:36, sBank:30, d:0, a:2, f:ff_hevc_set_qPy_hls, v:dc_qp_y_tab_p
[SCALAR] adr:468, bankAdr:12, sBank:21, d:1, a:9, f:ff_hevc_set_qPy_hls, v:tu_cu_qp_delta
[SCALAR] adr:1132, bankAdr:32, sBank:27, d:1, a:3, f:ff_hevc_set_qPy_hls, v:qp_bd_offset
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:6, f:ff_hevc_skip_flag_decode_hls, v:log2_ctb_size
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:6, f:ff_hevc_skip_flag_decode_hls, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:8, f:ff_hevc_skip_flag_decode_hls, v:ctb_up_flag
[SCALAR] adr:644, bankAdr:20, sBank:1, d:0, a:4, f:fill_ref_samples_mtdma_top_wrp, v:numIntraNeighbor
[SCALAR] adr:648, bankAdr:20, sBank:2, d:1, a:3, f:fill_ref_samples_mtdma_top_wrp, v:totalUnits
[SCALAR] adr:652, bankAdr:20, sBank:3, d:0, a:5, f:fill_ref_samples_mtdma_top_wrp, v:aboveUnits
[SCALAR] adr:656, bankAdr:20, sBank:4, d:0, a:5, f:fill_ref_samples_mtdma_top_wrp, v:leftUnits
[SCALAR] adr:660, bankAdr:20, sBank:5, d:1, a:7, f:fill_ref_samples_mtdma_top_wrp, v:unitWidth
[SCALAR] adr:664, bankAdr:20, sBank:6, d:0, a:7, f:fill_ref_samples_mtdma_top_wrp, v:unitHeight
[SCALAR] adr:668, bankAdr:20, sBank:7, d:1, a:8, f:fill_ref_samples_mtdma_top_wrp, v:log2TrSize
[SCALAR] adr:672, bankAdr:20, sBank:8, d:0, a:7, f:fill_ref_samples_mtdma_top_wrp, v:bNeighborFlags_0
[SCALAR] adr:676, bankAdr:20, sBank:9, d:0, a:9, f:fill_ref_samples_mtdma_top_wrp, v:bNeighborFlags_1
[SCALAR] adr:680, bankAdr:20, sBank:10, d:1, a:8, f:fill_ref_samples_mtdma_top_wrp, v:bNeighborFlags_2
[SCALAR] adr:684, bankAdr:20, sBank:11, d:0, a:5, f:fill_ref_samples_mtdma_top_wrp, v:numIntraNeighbor_c
[SCALAR] adr:688, bankAdr:20, sBank:12, d:1, a:6, f:fill_ref_samples_mtdma_top_wrp, v:totalUnits_c
[SCALAR] adr:692, bankAdr:20, sBank:13, d:1, a:7, f:fill_ref_samples_mtdma_top_wrp, v:aboveUnits_c
[SCALAR] adr:696, bankAdr:20, sBank:14, d:0, a:8, f:fill_ref_samples_mtdma_top_wrp, v:leftUnits_c
[SCALAR] adr:700, bankAdr:20, sBank:15, d:0, a:6, f:fill_ref_samples_mtdma_top_wrp, v:unitWidth_c
[SCALAR] adr:704, bankAdr:20, sBank:16, d:0, a:4, f:fill_ref_samples_mtdma_top_wrp, v:unitHeight_c
[SCALAR] adr:708, bankAdr:20, sBank:17, d:0, a:4, f:fill_ref_samples_mtdma_top_wrp, v:log2TrSize_c
[SCALAR] adr:712, bankAdr:20, sBank:18, d:0, a:4, f:fill_ref_samples_mtdma_top_wrp, v:bNeighborFlags_c_0
[SCALAR] adr:716, bankAdr:20, sBank:19, d:1, a:4, f:fill_ref_samples_mtdma_top_wrp, v:bNeighborFlags_c_1
[SCALAR] adr:720, bankAdr:20, sBank:20, d:1, a:8, f:fill_ref_samples_mtdma_top_wrp, v:bNeighborFlags_c_2
[SCALAR] adr:180, bankAdr:4, sBank:13, d:0, a:0, f:genPredCol_hls, v:predColBuf_0
[SCALAR] adr:184, bankAdr:4, sBank:14, d:0, a:0, f:genPredCol_hls, v:predColBuf_1
[SCALAR] adr:188, bankAdr:4, sBank:15, d:0, a:0, f:genPredCol_hls, v:predColBuf_2
[SCALAR] adr:192, bankAdr:4, sBank:16, d:0, a:0, f:genPredCol_hls, v:predColBuf_3
[SCALAR] adr:196, bankAdr:4, sBank:17, d:1, a:0, f:genPredCol_hls, v:predColBuf_4
[SCALAR] adr:200, bankAdr:4, sBank:18, d:1, a:0, f:genPredCol_hls, v:predColBuf_5
[SCALAR] adr:204, bankAdr:4, sBank:19, d:1, a:0, f:genPredCol_hls, v:predColBuf_6
[SCALAR] adr:208, bankAdr:4, sBank:20, d:1, a:0, f:genPredCol_hls, v:predColBuf_7
[SCALAR] adr:212, bankAdr:4, sBank:21, d:1, a:0, f:genPredCol_hls, v:predColBuf_8
[SCALAR] adr:216, bankAdr:4, sBank:22, d:1, a:0, f:genPredCol_hls, v:predColBuf_9
[SCALAR] adr:220, bankAdr:4, sBank:23, d:0, a:0, f:genPredCol_hls, v:predColBuf_10
[SCALAR] adr:224, bankAdr:4, sBank:24, d:0, a:0, f:genPredCol_hls, v:predColBuf_11
[SCALAR] adr:228, bankAdr:4, sBank:25, d:0, a:0, f:genPredCol_hls, v:predColBuf_12
[SCALAR] adr:232, bankAdr:4, sBank:26, d:0, a:0, f:genPredCol_hls, v:predColBuf_13
[SCALAR] adr:236, bankAdr:4, sBank:27, d:0, a:0, f:genPredCol_hls, v:predColBuf_14
[SCALAR] adr:240, bankAdr:4, sBank:28, d:1, a:0, f:genPredCol_hls, v:predColBuf_15
[SCALAR] adr:244, bankAdr:4, sBank:29, d:0, a:4, f:genPredCol_hls, v:predColBuf_16_i
[SCALAR] adr:244, bankAdr:4, sBank:29, d:0, a:0, f:genPredCol_hls, v:predColBuf_16_o
[SCALAR] adr:172, bankAdr:4, sBank:11, d:1, a:4, f:genPredCol_hls, v:log2_width
[SCALAR] adr:1276, bankAdr:36, sBank:31, d:1, a:2, f:genPredCol_hls, v:dc_tab_mvf_pred_flag_row_p
[SCALAR] adr:1284, bankAdr:40, sBank:1, d:1, a:3, f:genPredCol_hls, v:dc_cbf_luma_p
[SCALAR] adr:376, bankAdr:8, sBank:30, d:1, a:2, f:genPredCol_hls, v:log2_min_tb_size
[SCALAR] adr:388, bankAdr:12, sBank:1, d:0, a:5, f:genPredCol_hls, v:min_tb_width
[SCALAR] adr:0, bankAdr:0, sBank:0, d:1, a:11, f:hevc_find_frame_end_hls, v:state64_0_i
[SCALAR] adr:4, bankAdr:0, sBank:1, d:1, a:4, f:hevc_find_frame_end_hls, v:state64_1_i
[SCALAR] adr:0, bankAdr:0, sBank:0, d:0, a:0, f:hevc_find_frame_end_hls, v:state64_0_o
[SCALAR] adr:4, bankAdr:0, sBank:1, d:0, a:0, f:hevc_find_frame_end_hls, v:state64_1_o
[SCALAR] adr:8, bankAdr:0, sBank:2, d:0, a:5, f:hevc_find_frame_end_hls, v:frame_start_found_i
[SCALAR] adr:8, bankAdr:0, sBank:2, d:0, a:0, f:hevc_find_frame_end_hls, v:frame_start_found_o
[SCALAR] adr:300, bankAdr:8, sBank:11, d:0, a:6, f:hls_coding_quadtree_hls, v:x1_i
[SCALAR] adr:300, bankAdr:8, sBank:11, d:0, a:0, f:hls_coding_quadtree_hls, v:x1_o
[SCALAR] adr:304, bankAdr:8, sBank:12, d:0, a:8, f:hls_coding_quadtree_hls, v:y1_i
[SCALAR] adr:304, bankAdr:8, sBank:12, d:0, a:0, f:hls_coding_quadtree_hls, v:y1_o
[SCALAR] adr:312, bankAdr:8, sBank:14, d:1, a:7, f:hls_coding_quadtree_hls, v:log2_cb_size_minus_one_i
[SCALAR] adr:312, bankAdr:8, sBank:14, d:1, a:0, f:hls_coding_quadtree_hls, v:log2_cb_size_minus_one_o
[SCALAR] adr:316, bankAdr:8, sBank:15, d:1, a:5, f:hls_coding_quadtree_hls, v:cb_depth_plus_one_i
[SCALAR] adr:316, bankAdr:8, sBank:15, d:1, a:0, f:hls_coding_quadtree_hls, v:cb_depth_plus_one_o
[SCALAR] adr:408, bankAdr:12, sBank:6, d:1, a:7, f:hls_coding_quadtree_hls, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:0, a:5, f:hls_coding_quadtree_hls, v:height
[SCALAR] adr:292, bankAdr:8, sBank:9, d:1, a:9, f:hls_coding_quadtree_hls, v:split_cu_flag_i
[SCALAR] adr:292, bankAdr:8, sBank:9, d:1, a:0, f:hls_coding_quadtree_hls, v:split_cu_flag_o
[SCALAR] adr:296, bankAdr:8, sBank:10, d:0, a:10, f:hls_coding_quadtree_hls, v:more_data_i
[SCALAR] adr:296, bankAdr:8, sBank:10, d:0, a:0, f:hls_coding_quadtree_hls, v:more_data_o
[SCALAR] adr:1324, bankAdr:40, sBank:11, d:1, a:5, f:hls_coding_quadtree_hls, v:rv_hls_coding_unit
[SCALAR] adr:1236, bankAdr:36, sBank:21, d:0, a:11, f:hls_coding_quadtree_hls, v:rv_callback_flag
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:8, f:hls_coding_quadtree_hls, v:log2_ctb_size
[SCALAR] adr:540, bankAdr:16, sBank:7, d:0, a:0, f:hls_coding_quadtree_hls, v:qPy_pred
[SCALAR] adr:536, bankAdr:16, sBank:6, d:0, a:8, f:hls_coding_quadtree_hls, v:qp_y
[SCALAR] adr:40, bankAdr:0, sBank:10, d:1, a:9, f:hls_coding_quadtree_hls, v:qp_block_mask_i
[SCALAR] adr:40, bankAdr:0, sBank:10, d:1, a:0, f:hls_coding_quadtree_hls, v:qp_block_mask_o
[SCALAR] adr:308, bankAdr:8, sBank:13, d:0, a:9, f:hls_coding_quadtree_hls, v:cb_size_split_i
[SCALAR] adr:308, bankAdr:8, sBank:13, d:1, a:0, f:hls_coding_quadtree_hls, v:cb_size_split_o
[SCALAR] adr:368, bankAdr:8, sBank:28, d:1, a:7, f:hls_coding_quadtree_hls, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:1, a:4, f:hls_coding_quadtree_hls, v:min_cb_width
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:0, f:hls_coding_quadtree_hls, v:tu_is_cu_qp_delta_coded
[SCALAR] adr:468, bankAdr:12, sBank:21, d:0, a:1, f:hls_coding_quadtree_hls, v:tu_cu_qp_delta
[SCALAR] adr:472, bankAdr:12, sBank:22, d:0, a:1, f:hls_coding_quadtree_hls, v:tu_is_cu_chroma_qp_offset_coded
[SCALAR] adr:464, bankAdr:12, sBank:20, d:0, a:1, f:hls_coding_quadtree_hls, v:depth
[SCALAR] adr:608, bankAdr:16, sBank:24, d:0, a:8, f:hls_coding_quadtree_hls, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:0, a:10, f:hls_coding_quadtree_hls, v:ctb_up_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:0, a:7, f:hls_coding_quadtree_hls, v:cu_qp_delta_enabled_flag
[SCALAR] adr:436, bankAdr:12, sBank:13, d:1, a:8, f:hls_coding_quadtree_hls, v:diff_cu_qp_delta_depth
[SCALAR] adr:448, bankAdr:12, sBank:16, d:1, a:4, f:hls_coding_quadtree_hls, v:cu_chroma_qp_offset_enabled_flag
[SCALAR] adr:432, bankAdr:12, sBank:12, d:1, a:7, f:hls_coding_quadtree_hls, v:diff_cu_chroma_qp_offset_depth
[SCALAR] adr:1280, bankAdr:40, sBank:0, d:0, a:13, f:hls_coding_quadtree_hls, v:dc_tab_ct_depth_p
[SCALAR] adr:300, bankAdr:8, sBank:11, d:1, a:6, f:hls_coding_quadtree_hls_dup1, v:x1_i
[SCALAR] adr:300, bankAdr:8, sBank:11, d:1, a:0, f:hls_coding_quadtree_hls_dup1, v:x1_o
[SCALAR] adr:304, bankAdr:8, sBank:12, d:0, a:9, f:hls_coding_quadtree_hls_dup1, v:y1_i
[SCALAR] adr:304, bankAdr:8, sBank:12, d:1, a:0, f:hls_coding_quadtree_hls_dup1, v:y1_o
[SCALAR] adr:312, bankAdr:8, sBank:14, d:0, a:9, f:hls_coding_quadtree_hls_dup1, v:log2_cb_size_minus_one_i
[SCALAR] adr:312, bankAdr:8, sBank:14, d:0, a:1, f:hls_coding_quadtree_hls_dup1, v:log2_cb_size_minus_one_o
[SCALAR] adr:316, bankAdr:8, sBank:15, d:0, a:7, f:hls_coding_quadtree_hls_dup1, v:cb_depth_plus_one_i
[SCALAR] adr:316, bankAdr:8, sBank:15, d:0, a:1, f:hls_coding_quadtree_hls_dup1, v:cb_depth_plus_one_o
[SCALAR] adr:408, bankAdr:12, sBank:6, d:1, a:8, f:hls_coding_quadtree_hls_dup1, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:1, a:5, f:hls_coding_quadtree_hls_dup1, v:height
[SCALAR] adr:292, bankAdr:8, sBank:9, d:0, a:10, f:hls_coding_quadtree_hls_dup1, v:split_cu_flag_i
[SCALAR] adr:292, bankAdr:8, sBank:9, d:0, a:1, f:hls_coding_quadtree_hls_dup1, v:split_cu_flag_o
[SCALAR] adr:296, bankAdr:8, sBank:10, d:0, a:11, f:hls_coding_quadtree_hls_dup1, v:more_data_i
[SCALAR] adr:296, bankAdr:8, sBank:10, d:0, a:1, f:hls_coding_quadtree_hls_dup1, v:more_data_o
[SCALAR] adr:1324, bankAdr:40, sBank:11, d:0, a:8, f:hls_coding_quadtree_hls_dup1, v:rv_hls_coding_unit
[SCALAR] adr:1236, bankAdr:36, sBank:21, d:1, a:10, f:hls_coding_quadtree_hls_dup1, v:rv_callback_flag
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:7, f:hls_coding_quadtree_hls_dup1, v:log2_ctb_size
[SCALAR] adr:540, bankAdr:16, sBank:7, d:1, a:0, f:hls_coding_quadtree_hls_dup1, v:qPy_pred
[SCALAR] adr:536, bankAdr:16, sBank:6, d:0, a:9, f:hls_coding_quadtree_hls_dup1, v:qp_y
[SCALAR] adr:40, bankAdr:0, sBank:10, d:1, a:10, f:hls_coding_quadtree_hls_dup1, v:qp_block_mask_i
[SCALAR] adr:40, bankAdr:0, sBank:10, d:1, a:1, f:hls_coding_quadtree_hls_dup1, v:qp_block_mask_o
[SCALAR] adr:308, bankAdr:8, sBank:13, d:0, a:10, f:hls_coding_quadtree_hls_dup1, v:cb_size_split_i
[SCALAR] adr:308, bankAdr:8, sBank:13, d:0, a:1, f:hls_coding_quadtree_hls_dup1, v:cb_size_split_o
[SCALAR] adr:368, bankAdr:8, sBank:28, d:0, a:8, f:hls_coding_quadtree_hls_dup1, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:0, a:6, f:hls_coding_quadtree_hls_dup1, v:min_cb_width
[SCALAR] adr:476, bankAdr:12, sBank:23, d:0, a:1, f:hls_coding_quadtree_hls_dup1, v:tu_is_cu_qp_delta_coded
[SCALAR] adr:468, bankAdr:12, sBank:21, d:1, a:1, f:hls_coding_quadtree_hls_dup1, v:tu_cu_qp_delta
[SCALAR] adr:472, bankAdr:12, sBank:22, d:1, a:1, f:hls_coding_quadtree_hls_dup1, v:tu_is_cu_chroma_qp_offset_coded
[SCALAR] adr:464, bankAdr:12, sBank:20, d:1, a:1, f:hls_coding_quadtree_hls_dup1, v:depth
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:7, f:hls_coding_quadtree_hls_dup1, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:9, f:hls_coding_quadtree_hls_dup1, v:ctb_up_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:1, a:7, f:hls_coding_quadtree_hls_dup1, v:cu_qp_delta_enabled_flag
[SCALAR] adr:436, bankAdr:12, sBank:13, d:1, a:9, f:hls_coding_quadtree_hls_dup1, v:diff_cu_qp_delta_depth
[SCALAR] adr:448, bankAdr:12, sBank:16, d:0, a:5, f:hls_coding_quadtree_hls_dup1, v:cu_chroma_qp_offset_enabled_flag
[SCALAR] adr:432, bankAdr:12, sBank:12, d:1, a:8, f:hls_coding_quadtree_hls_dup1, v:diff_cu_chroma_qp_offset_depth
[SCALAR] adr:1280, bankAdr:40, sBank:0, d:1, a:12, f:hls_coding_quadtree_hls_dup1, v:dc_tab_ct_depth_p
[SCALAR] adr:300, bankAdr:8, sBank:11, d:0, a:9, f:hls_coding_quadtree_hls_dup2, v:x1_i
[SCALAR] adr:300, bankAdr:8, sBank:11, d:0, a:1, f:hls_coding_quadtree_hls_dup2, v:x1_o
[SCALAR] adr:304, bankAdr:8, sBank:12, d:0, a:10, f:hls_coding_quadtree_hls_dup2, v:y1_i
[SCALAR] adr:304, bankAdr:8, sBank:12, d:0, a:1, f:hls_coding_quadtree_hls_dup2, v:y1_o
[SCALAR] adr:312, bankAdr:8, sBank:14, d:1, a:8, f:hls_coding_quadtree_hls_dup2, v:log2_cb_size_minus_one_i
[SCALAR] adr:312, bankAdr:8, sBank:14, d:1, a:1, f:hls_coding_quadtree_hls_dup2, v:log2_cb_size_minus_one_o
[SCALAR] adr:316, bankAdr:8, sBank:15, d:1, a:6, f:hls_coding_quadtree_hls_dup2, v:cb_depth_plus_one_i
[SCALAR] adr:316, bankAdr:8, sBank:15, d:1, a:1, f:hls_coding_quadtree_hls_dup2, v:cb_depth_plus_one_o
[SCALAR] adr:408, bankAdr:12, sBank:6, d:1, a:9, f:hls_coding_quadtree_hls_dup2, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:0, a:6, f:hls_coding_quadtree_hls_dup2, v:height
[SCALAR] adr:292, bankAdr:8, sBank:9, d:1, a:10, f:hls_coding_quadtree_hls_dup2, v:split_cu_flag_i
[SCALAR] adr:292, bankAdr:8, sBank:9, d:1, a:1, f:hls_coding_quadtree_hls_dup2, v:split_cu_flag_o
[SCALAR] adr:296, bankAdr:8, sBank:10, d:0, a:12, f:hls_coding_quadtree_hls_dup2, v:more_data_i
[SCALAR] adr:296, bankAdr:8, sBank:10, d:0, a:2, f:hls_coding_quadtree_hls_dup2, v:more_data_o
[SCALAR] adr:1324, bankAdr:40, sBank:11, d:1, a:8, f:hls_coding_quadtree_hls_dup2, v:rv_hls_coding_unit
[SCALAR] adr:1236, bankAdr:36, sBank:21, d:0, a:12, f:hls_coding_quadtree_hls_dup2, v:rv_callback_flag
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:9, f:hls_coding_quadtree_hls_dup2, v:log2_ctb_size
[SCALAR] adr:540, bankAdr:16, sBank:7, d:0, a:1, f:hls_coding_quadtree_hls_dup2, v:qPy_pred
[SCALAR] adr:536, bankAdr:16, sBank:6, d:0, a:10, f:hls_coding_quadtree_hls_dup2, v:qp_y
[SCALAR] adr:40, bankAdr:0, sBank:10, d:1, a:11, f:hls_coding_quadtree_hls_dup2, v:qp_block_mask_i
[SCALAR] adr:40, bankAdr:0, sBank:10, d:1, a:2, f:hls_coding_quadtree_hls_dup2, v:qp_block_mask_o
[SCALAR] adr:308, bankAdr:8, sBank:13, d:0, a:11, f:hls_coding_quadtree_hls_dup2, v:cb_size_split_i
[SCALAR] adr:308, bankAdr:8, sBank:13, d:1, a:1, f:hls_coding_quadtree_hls_dup2, v:cb_size_split_o
[SCALAR] adr:368, bankAdr:8, sBank:28, d:1, a:8, f:hls_coding_quadtree_hls_dup2, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:1, a:5, f:hls_coding_quadtree_hls_dup2, v:min_cb_width
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:1, f:hls_coding_quadtree_hls_dup2, v:tu_is_cu_qp_delta_coded
[SCALAR] adr:468, bankAdr:12, sBank:21, d:0, a:2, f:hls_coding_quadtree_hls_dup2, v:tu_cu_qp_delta
[SCALAR] adr:472, bankAdr:12, sBank:22, d:0, a:2, f:hls_coding_quadtree_hls_dup2, v:tu_is_cu_chroma_qp_offset_coded
[SCALAR] adr:464, bankAdr:12, sBank:20, d:0, a:2, f:hls_coding_quadtree_hls_dup2, v:depth
[SCALAR] adr:608, bankAdr:16, sBank:24, d:0, a:9, f:hls_coding_quadtree_hls_dup2, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:0, a:11, f:hls_coding_quadtree_hls_dup2, v:ctb_up_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:0, a:10, f:hls_coding_quadtree_hls_dup2, v:cu_qp_delta_enabled_flag
[SCALAR] adr:436, bankAdr:12, sBank:13, d:1, a:10, f:hls_coding_quadtree_hls_dup2, v:diff_cu_qp_delta_depth
[SCALAR] adr:448, bankAdr:12, sBank:16, d:1, a:5, f:hls_coding_quadtree_hls_dup2, v:cu_chroma_qp_offset_enabled_flag
[SCALAR] adr:432, bankAdr:12, sBank:12, d:1, a:9, f:hls_coding_quadtree_hls_dup2, v:diff_cu_chroma_qp_offset_depth
[SCALAR] adr:1280, bankAdr:40, sBank:0, d:0, a:14, f:hls_coding_quadtree_hls_dup2, v:dc_tab_ct_depth_p
[SCALAR] adr:300, bankAdr:8, sBank:11, d:1, a:9, f:hls_coding_quadtree_hls_dup3, v:x1_i
[SCALAR] adr:300, bankAdr:8, sBank:11, d:1, a:1, f:hls_coding_quadtree_hls_dup3, v:x1_o
[SCALAR] adr:304, bankAdr:8, sBank:12, d:0, a:11, f:hls_coding_quadtree_hls_dup3, v:y1_i
[SCALAR] adr:304, bankAdr:8, sBank:12, d:1, a:1, f:hls_coding_quadtree_hls_dup3, v:y1_o
[SCALAR] adr:312, bankAdr:8, sBank:14, d:0, a:10, f:hls_coding_quadtree_hls_dup3, v:log2_cb_size_minus_one_i
[SCALAR] adr:312, bankAdr:8, sBank:14, d:0, a:2, f:hls_coding_quadtree_hls_dup3, v:log2_cb_size_minus_one_o
[SCALAR] adr:316, bankAdr:8, sBank:15, d:0, a:8, f:hls_coding_quadtree_hls_dup3, v:cb_depth_plus_one_i
[SCALAR] adr:316, bankAdr:8, sBank:15, d:0, a:2, f:hls_coding_quadtree_hls_dup3, v:cb_depth_plus_one_o
[SCALAR] adr:408, bankAdr:12, sBank:6, d:1, a:10, f:hls_coding_quadtree_hls_dup3, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:1, a:6, f:hls_coding_quadtree_hls_dup3, v:height
[SCALAR] adr:292, bankAdr:8, sBank:9, d:0, a:11, f:hls_coding_quadtree_hls_dup3, v:split_cu_flag_i
[SCALAR] adr:292, bankAdr:8, sBank:9, d:0, a:2, f:hls_coding_quadtree_hls_dup3, v:split_cu_flag_o
[SCALAR] adr:296, bankAdr:8, sBank:10, d:0, a:13, f:hls_coding_quadtree_hls_dup3, v:more_data_i
[SCALAR] adr:296, bankAdr:8, sBank:10, d:0, a:3, f:hls_coding_quadtree_hls_dup3, v:more_data_o
[SCALAR] adr:1324, bankAdr:40, sBank:11, d:0, a:11, f:hls_coding_quadtree_hls_dup3, v:rv_hls_coding_unit
[SCALAR] adr:1236, bankAdr:36, sBank:21, d:1, a:11, f:hls_coding_quadtree_hls_dup3, v:rv_callback_flag
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:8, f:hls_coding_quadtree_hls_dup3, v:log2_ctb_size
[SCALAR] adr:540, bankAdr:16, sBank:7, d:1, a:1, f:hls_coding_quadtree_hls_dup3, v:qPy_pred
[SCALAR] adr:536, bankAdr:16, sBank:6, d:0, a:11, f:hls_coding_quadtree_hls_dup3, v:qp_y
[SCALAR] adr:40, bankAdr:0, sBank:10, d:1, a:12, f:hls_coding_quadtree_hls_dup3, v:qp_block_mask_i
[SCALAR] adr:40, bankAdr:0, sBank:10, d:1, a:3, f:hls_coding_quadtree_hls_dup3, v:qp_block_mask_o
[SCALAR] adr:308, bankAdr:8, sBank:13, d:0, a:12, f:hls_coding_quadtree_hls_dup3, v:cb_size_split_i
[SCALAR] adr:308, bankAdr:8, sBank:13, d:0, a:2, f:hls_coding_quadtree_hls_dup3, v:cb_size_split_o
[SCALAR] adr:368, bankAdr:8, sBank:28, d:0, a:9, f:hls_coding_quadtree_hls_dup3, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:0, a:7, f:hls_coding_quadtree_hls_dup3, v:min_cb_width
[SCALAR] adr:476, bankAdr:12, sBank:23, d:0, a:2, f:hls_coding_quadtree_hls_dup3, v:tu_is_cu_qp_delta_coded
[SCALAR] adr:468, bankAdr:12, sBank:21, d:1, a:2, f:hls_coding_quadtree_hls_dup3, v:tu_cu_qp_delta
[SCALAR] adr:472, bankAdr:12, sBank:22, d:1, a:2, f:hls_coding_quadtree_hls_dup3, v:tu_is_cu_chroma_qp_offset_coded
[SCALAR] adr:464, bankAdr:12, sBank:20, d:1, a:2, f:hls_coding_quadtree_hls_dup3, v:depth
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:8, f:hls_coding_quadtree_hls_dup3, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:10, f:hls_coding_quadtree_hls_dup3, v:ctb_up_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:1, a:10, f:hls_coding_quadtree_hls_dup3, v:cu_qp_delta_enabled_flag
[SCALAR] adr:436, bankAdr:12, sBank:13, d:1, a:11, f:hls_coding_quadtree_hls_dup3, v:diff_cu_qp_delta_depth
[SCALAR] adr:448, bankAdr:12, sBank:16, d:0, a:6, f:hls_coding_quadtree_hls_dup3, v:cu_chroma_qp_offset_enabled_flag
[SCALAR] adr:432, bankAdr:12, sBank:12, d:1, a:10, f:hls_coding_quadtree_hls_dup3, v:diff_cu_chroma_qp_offset_depth
[SCALAR] adr:1280, bankAdr:40, sBank:0, d:1, a:13, f:hls_coding_quadtree_hls_dup3, v:dc_tab_ct_depth_p
[SCALAR] adr:420, bankAdr:12, sBank:9, d:1, a:11, f:hls_coding_unit_hls, v:loop_filter_disable_flag
[SCALAR] adr:380, bankAdr:8, sBank:31, d:0, a:4, f:hls_coding_unit_hls, v:max_transform_hierarchy_depth_inter
[SCALAR] adr:1160, bankAdr:36, sBank:2, d:1, a:6, f:hls_coding_unit_hls, v:disable_deblocking_filter_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:0, a:12, f:hls_coding_unit_hls, v:cu_qp_delta_enabled_flag
[SCALAR] adr:476, bankAdr:12, sBank:23, d:0, a:12, f:hls_coding_unit_hls, v:tu_is_cu_qp_delta_coded
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:7, f:hls_coding_unit_hls, v:cu_transquant_bypass_flag_i
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:2, f:hls_coding_unit_hls, v:cu_transquant_bypass_flag_o
[SCALAR] adr:28, bankAdr:0, sBank:7, d:0, a:10, f:hls_coding_unit_hls, v:pcm_flag_i
[SCALAR] adr:28, bankAdr:0, sBank:7, d:0, a:2, f:hls_coding_unit_hls, v:pcm_flag_o
[SCALAR] adr:504, bankAdr:12, sBank:30, d:0, a:3, f:hls_coding_unit_hls, v:merge_flag
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:12, f:hls_coding_unit_hls, v:pred_mode_i
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:2, f:hls_coding_unit_hls, v:pred_mode_o
[SCALAR] adr:564, bankAdr:16, sBank:13, d:0, a:13, f:hls_coding_unit_hls, v:part_mode_i
[SCALAR] adr:564, bankAdr:16, sBank:13, d:1, a:2, f:hls_coding_unit_hls, v:part_mode_o
[SCALAR] adr:576, bankAdr:16, sBank:16, d:1, a:0, f:hls_coding_unit_hls, v:max_trafo_depth
[SCALAR] adr:32, bankAdr:0, sBank:8, d:1, a:7, f:hls_coding_unit_hls, v:cb_size_i
[SCALAR] adr:32, bankAdr:0, sBank:8, d:1, a:0, f:hls_coding_unit_hls, v:cb_size_o
[SCALAR] adr:44, bankAdr:0, sBank:11, d:1, a:11, f:hls_coding_unit_hls, v:idx_i
[SCALAR] adr:44, bankAdr:0, sBank:11, d:0, a:2, f:hls_coding_unit_hls, v:idx_o
[SCALAR] adr:1164, bankAdr:36, sBank:3, d:0, a:0, f:hls_coding_unit_hls, v:xm_xBase
[SCALAR] adr:1168, bankAdr:36, sBank:4, d:0, a:0, f:hls_coding_unit_hls, v:xm_yBase
[SCALAR] adr:1172, bankAdr:36, sBank:5, d:1, a:0, f:hls_coding_unit_hls, v:xm_cb_xBase
[SCALAR] adr:1176, bankAdr:36, sBank:6, d:1, a:0, f:hls_coding_unit_hls, v:xm_cb_yBase
[SCALAR] adr:1180, bankAdr:36, sBank:7, d:1, a:2, f:hls_coding_unit_hls, v:xm_log2_cb_size
[SCALAR] adr:1336, bankAdr:40, sBank:14, d:1, a:9, f:hls_coding_unit_hls, v:rv_set_deblocking_bypass
[SCALAR] adr:1332, bankAdr:40, sBank:13, d:1, a:12, f:hls_coding_unit_hls, v:rv_ff_hevc_deblocking_boundary_strengths
[SCALAR] adr:1340, bankAdr:40, sBank:15, d:0, a:9, f:hls_coding_unit_hls, v:rv_hls_pcm_sample
[SCALAR] adr:1344, bankAdr:40, sBank:16, d:1, a:6, f:hls_coding_unit_hls, v:rv_hls_prediction_unit
[SCALAR] adr:1348, bankAdr:40, sBank:17, d:1, a:4, f:hls_coding_unit_hls, v:rv_hls_intra_prediction_unit
[SCALAR] adr:1352, bankAdr:40, sBank:18, d:1, a:4, f:hls_coding_unit_hls, v:rv_hls_transform_tree
[SCALAR] adr:1236, bankAdr:36, sBank:21, d:0, a:13, f:hls_coding_unit_hls, v:rv_callback_flag
[SCALAR] adr:36, bankAdr:0, sBank:9, d:1, a:2, f:hls_coding_unit_hls, v:length_r
[SCALAR] adr:544, bankAdr:16, sBank:8, d:0, a:1, f:hls_coding_unit_hls, v:xm_x
[SCALAR] adr:548, bankAdr:16, sBank:9, d:0, a:3, f:hls_coding_unit_hls, v:xm_y
[SCALAR] adr:512, bankAdr:16, sBank:0, d:1, a:0, f:hls_coding_unit_hls, v:pu_intra_pred_mode_0
[SCALAR] adr:513, bankAdr:17, sBank:0, d:0, a:1, f:hls_coding_unit_hls, v:pu_intra_pred_mode_1
[SCALAR] adr:514, bankAdr:18, sBank:0, d:1, a:1, f:hls_coding_unit_hls, v:pu_intra_pred_mode_2
[SCALAR] adr:515, bankAdr:19, sBank:0, d:0, a:2, f:hls_coding_unit_hls, v:pu_intra_pred_mode_3
[SCALAR] adr:540, bankAdr:16, sBank:7, d:0, a:3, f:hls_coding_unit_hls, v:qPy_pred
[SCALAR] adr:24, bankAdr:0, sBank:6, d:0, a:1, f:hls_coding_unit_hls, v:skip_flag_start
[SCALAR] adr:368, bankAdr:8, sBank:28, d:1, a:9, f:hls_coding_unit_hls, v:log2_min_cb_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:10, f:hls_coding_unit_hls, v:log2_ctb_size
[SCALAR] adr:436, bankAdr:12, sBank:13, d:0, a:14, f:hls_coding_unit_hls, v:diff_cu_qp_delta_depth
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:11, f:hls_coding_unit_hls, v:qp_y
[SCALAR] adr:440, bankAdr:12, sBank:14, d:0, a:11, f:hls_coding_unit_hls, v:transquant_bypass_enable_flag
[SCALAR] adr:392, bankAdr:12, sBank:2, d:0, a:8, f:hls_coding_unit_hls, v:min_cb_width
[SCALAR] adr:568, bankAdr:16, sBank:14, d:1, a:2, f:hls_coding_unit_hls, v:intra_split_flag
[SCALAR] adr:452, bankAdr:12, sBank:17, d:0, a:5, f:hls_coding_unit_hls, v:slice_type
[SCALAR] adr:608, bankAdr:16, sBank:24, d:0, a:10, f:hls_coding_unit_hls, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:11, f:hls_coding_unit_hls, v:ctb_up_flag
[SCALAR] adr:320, bankAdr:8, sBank:16, d:0, a:7, f:hls_coding_unit_hls, v:amp_enabled_flag
[SCALAR] adr:400, bankAdr:12, sBank:4, d:1, a:4, f:hls_coding_unit_hls, v:pcm_enabled_flag
[SCALAR] adr:412, bankAdr:12, sBank:7, d:1, a:9, f:hls_coding_unit_hls, v:log2_min_pcm_cb_size
[SCALAR] adr:416, bankAdr:12, sBank:8, d:0, a:8, f:hls_coding_unit_hls, v:log2_max_pcm_cb_size
[SCALAR] adr:464, bankAdr:12, sBank:20, d:0, a:9, f:hls_coding_unit_hls, v:depth
[SCALAR] adr:1288, bankAdr:40, sBank:2, d:1, a:7, f:hls_coding_unit_hls, v:dc_skip_flag_p
[SCALAR] adr:1272, bankAdr:36, sBank:30, d:1, a:3, f:hls_coding_unit_hls, v:dc_qp_y_tab_p
[SCALAR] adr:1280, bankAdr:40, sBank:0, d:0, a:15, f:hls_coding_unit_hls, v:dc_tab_ct_depth_p
[SCALAR] adr:420, bankAdr:12, sBank:9, d:0, a:12, f:hls_coding_unit_hls_dup1, v:loop_filter_disable_flag
[SCALAR] adr:380, bankAdr:8, sBank:31, d:1, a:3, f:hls_coding_unit_hls_dup1, v:max_transform_hierarchy_depth_inter
[SCALAR] adr:1160, bankAdr:36, sBank:2, d:0, a:9, f:hls_coding_unit_hls_dup1, v:disable_deblocking_filter_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:0, a:13, f:hls_coding_unit_hls_dup1, v:cu_qp_delta_enabled_flag
[SCALAR] adr:476, bankAdr:12, sBank:23, d:0, a:13, f:hls_coding_unit_hls_dup1, v:tu_is_cu_qp_delta_coded
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:8, f:hls_coding_unit_hls_dup1, v:cu_transquant_bypass_flag_i
[SCALAR] adr:572, bankAdr:16, sBank:15, d:0, a:3, f:hls_coding_unit_hls_dup1, v:cu_transquant_bypass_flag_o
[SCALAR] adr:28, bankAdr:0, sBank:7, d:0, a:11, f:hls_coding_unit_hls_dup1, v:pcm_flag_i
[SCALAR] adr:28, bankAdr:0, sBank:7, d:1, a:3, f:hls_coding_unit_hls_dup1, v:pcm_flag_o
[SCALAR] adr:504, bankAdr:12, sBank:30, d:0, a:4, f:hls_coding_unit_hls_dup1, v:merge_flag
[SCALAR] adr:560, bankAdr:16, sBank:12, d:1, a:11, f:hls_coding_unit_hls_dup1, v:pred_mode_i
[SCALAR] adr:560, bankAdr:16, sBank:12, d:1, a:2, f:hls_coding_unit_hls_dup1, v:pred_mode_o
[SCALAR] adr:564, bankAdr:16, sBank:13, d:1, a:13, f:hls_coding_unit_hls_dup1, v:part_mode_i
[SCALAR] adr:564, bankAdr:16, sBank:13, d:0, a:3, f:hls_coding_unit_hls_dup1, v:part_mode_o
[SCALAR] adr:576, bankAdr:16, sBank:16, d:0, a:1, f:hls_coding_unit_hls_dup1, v:max_trafo_depth
[SCALAR] adr:32, bankAdr:0, sBank:8, d:1, a:8, f:hls_coding_unit_hls_dup1, v:cb_size_i
[SCALAR] adr:32, bankAdr:0, sBank:8, d:1, a:1, f:hls_coding_unit_hls_dup1, v:cb_size_o
[SCALAR] adr:44, bankAdr:0, sBank:11, d:1, a:12, f:hls_coding_unit_hls_dup1, v:idx_i
[SCALAR] adr:44, bankAdr:0, sBank:11, d:1, a:2, f:hls_coding_unit_hls_dup1, v:idx_o
[SCALAR] adr:1164, bankAdr:36, sBank:3, d:1, a:0, f:hls_coding_unit_hls_dup1, v:xm_xBase
[SCALAR] adr:1168, bankAdr:36, sBank:4, d:1, a:0, f:hls_coding_unit_hls_dup1, v:xm_yBase
[SCALAR] adr:1172, bankAdr:36, sBank:5, d:0, a:1, f:hls_coding_unit_hls_dup1, v:xm_cb_xBase
[SCALAR] adr:1176, bankAdr:36, sBank:6, d:1, a:1, f:hls_coding_unit_hls_dup1, v:xm_cb_yBase
[SCALAR] adr:1180, bankAdr:36, sBank:7, d:0, a:4, f:hls_coding_unit_hls_dup1, v:xm_log2_cb_size
[SCALAR] adr:1336, bankAdr:40, sBank:14, d:1, a:10, f:hls_coding_unit_hls_dup1, v:rv_set_deblocking_bypass
[SCALAR] adr:1332, bankAdr:40, sBank:13, d:0, a:15, f:hls_coding_unit_hls_dup1, v:rv_ff_hevc_deblocking_boundary_strengths
[SCALAR] adr:1340, bankAdr:40, sBank:15, d:0, a:10, f:hls_coding_unit_hls_dup1, v:rv_hls_pcm_sample
[SCALAR] adr:1344, bankAdr:40, sBank:16, d:1, a:7, f:hls_coding_unit_hls_dup1, v:rv_hls_prediction_unit
[SCALAR] adr:1348, bankAdr:40, sBank:17, d:1, a:5, f:hls_coding_unit_hls_dup1, v:rv_hls_intra_prediction_unit
[SCALAR] adr:1352, bankAdr:40, sBank:18, d:0, a:5, f:hls_coding_unit_hls_dup1, v:rv_hls_transform_tree
[SCALAR] adr:1236, bankAdr:36, sBank:21, d:1, a:12, f:hls_coding_unit_hls_dup1, v:rv_callback_flag
[SCALAR] adr:36, bankAdr:0, sBank:9, d:1, a:3, f:hls_coding_unit_hls_dup1, v:length_r
[SCALAR] adr:544, bankAdr:16, sBank:8, d:0, a:2, f:hls_coding_unit_hls_dup1, v:xm_x
[SCALAR] adr:548, bankAdr:16, sBank:9, d:0, a:4, f:hls_coding_unit_hls_dup1, v:xm_y
[SCALAR] adr:512, bankAdr:16, sBank:0, d:1, a:2, f:hls_coding_unit_hls_dup1, v:pu_intra_pred_mode_0
[SCALAR] adr:513, bankAdr:17, sBank:0, d:0, a:3, f:hls_coding_unit_hls_dup1, v:pu_intra_pred_mode_1
[SCALAR] adr:514, bankAdr:18, sBank:0, d:1, a:3, f:hls_coding_unit_hls_dup1, v:pu_intra_pred_mode_2
[SCALAR] adr:515, bankAdr:19, sBank:0, d:0, a:4, f:hls_coding_unit_hls_dup1, v:pu_intra_pred_mode_3
[SCALAR] adr:540, bankAdr:16, sBank:7, d:1, a:4, f:hls_coding_unit_hls_dup1, v:qPy_pred
[SCALAR] adr:24, bankAdr:0, sBank:6, d:0, a:2, f:hls_coding_unit_hls_dup1, v:skip_flag_start
[SCALAR] adr:368, bankAdr:8, sBank:28, d:0, a:10, f:hls_coding_unit_hls_dup1, v:log2_min_cb_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:9, f:hls_coding_unit_hls_dup1, v:log2_ctb_size
[SCALAR] adr:436, bankAdr:12, sBank:13, d:1, a:14, f:hls_coding_unit_hls_dup1, v:diff_cu_qp_delta_depth
[SCALAR] adr:536, bankAdr:16, sBank:6, d:0, a:12, f:hls_coding_unit_hls_dup1, v:qp_y
[SCALAR] adr:440, bankAdr:12, sBank:14, d:0, a:12, f:hls_coding_unit_hls_dup1, v:transquant_bypass_enable_flag
[SCALAR] adr:392, bankAdr:12, sBank:2, d:1, a:8, f:hls_coding_unit_hls_dup1, v:min_cb_width
[SCALAR] adr:568, bankAdr:16, sBank:14, d:0, a:3, f:hls_coding_unit_hls_dup1, v:intra_split_flag
[SCALAR] adr:452, bankAdr:12, sBank:17, d:0, a:6, f:hls_coding_unit_hls_dup1, v:slice_type
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:9, f:hls_coding_unit_hls_dup1, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:12, f:hls_coding_unit_hls_dup1, v:ctb_up_flag
[SCALAR] adr:320, bankAdr:8, sBank:16, d:0, a:8, f:hls_coding_unit_hls_dup1, v:amp_enabled_flag
[SCALAR] adr:400, bankAdr:12, sBank:4, d:0, a:6, f:hls_coding_unit_hls_dup1, v:pcm_enabled_flag
[SCALAR] adr:412, bankAdr:12, sBank:7, d:1, a:10, f:hls_coding_unit_hls_dup1, v:log2_min_pcm_cb_size
[SCALAR] adr:416, bankAdr:12, sBank:8, d:0, a:9, f:hls_coding_unit_hls_dup1, v:log2_max_pcm_cb_size
[SCALAR] adr:464, bankAdr:12, sBank:20, d:1, a:9, f:hls_coding_unit_hls_dup1, v:depth
[SCALAR] adr:1288, bankAdr:40, sBank:2, d:0, a:10, f:hls_coding_unit_hls_dup1, v:dc_skip_flag_p
[SCALAR] adr:1272, bankAdr:36, sBank:30, d:1, a:4, f:hls_coding_unit_hls_dup1, v:dc_qp_y_tab_p
[SCALAR] adr:1280, bankAdr:40, sBank:0, d:1, a:14, f:hls_coding_unit_hls_dup1, v:dc_tab_ct_depth_p
[SCALAR] adr:420, bankAdr:12, sBank:9, d:1, a:12, f:hls_coding_unit_hls_dup2, v:loop_filter_disable_flag
[SCALAR] adr:380, bankAdr:8, sBank:31, d:0, a:5, f:hls_coding_unit_hls_dup2, v:max_transform_hierarchy_depth_inter
[SCALAR] adr:1160, bankAdr:36, sBank:2, d:1, a:9, f:hls_coding_unit_hls_dup2, v:disable_deblocking_filter_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:0, a:14, f:hls_coding_unit_hls_dup2, v:cu_qp_delta_enabled_flag
[SCALAR] adr:476, bankAdr:12, sBank:23, d:0, a:14, f:hls_coding_unit_hls_dup2, v:tu_is_cu_qp_delta_coded
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:9, f:hls_coding_unit_hls_dup2, v:cu_transquant_bypass_flag_i
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:3, f:hls_coding_unit_hls_dup2, v:cu_transquant_bypass_flag_o
[SCALAR] adr:28, bankAdr:0, sBank:7, d:0, a:12, f:hls_coding_unit_hls_dup2, v:pcm_flag_i
[SCALAR] adr:28, bankAdr:0, sBank:7, d:0, a:5, f:hls_coding_unit_hls_dup2, v:pcm_flag_o
[SCALAR] adr:504, bankAdr:12, sBank:30, d:0, a:5, f:hls_coding_unit_hls_dup2, v:merge_flag
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:13, f:hls_coding_unit_hls_dup2, v:pred_mode_i
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:3, f:hls_coding_unit_hls_dup2, v:pred_mode_o
[SCALAR] adr:564, bankAdr:16, sBank:13, d:0, a:16, f:hls_coding_unit_hls_dup2, v:part_mode_i
[SCALAR] adr:564, bankAdr:16, sBank:13, d:1, a:3, f:hls_coding_unit_hls_dup2, v:part_mode_o
[SCALAR] adr:576, bankAdr:16, sBank:16, d:1, a:1, f:hls_coding_unit_hls_dup2, v:max_trafo_depth
[SCALAR] adr:32, bankAdr:0, sBank:8, d:1, a:9, f:hls_coding_unit_hls_dup2, v:cb_size_i
[SCALAR] adr:32, bankAdr:0, sBank:8, d:1, a:2, f:hls_coding_unit_hls_dup2, v:cb_size_o
[SCALAR] adr:44, bankAdr:0, sBank:11, d:1, a:13, f:hls_coding_unit_hls_dup2, v:idx_i
[SCALAR] adr:44, bankAdr:0, sBank:11, d:0, a:3, f:hls_coding_unit_hls_dup2, v:idx_o
[SCALAR] adr:1164, bankAdr:36, sBank:3, d:0, a:1, f:hls_coding_unit_hls_dup2, v:xm_xBase
[SCALAR] adr:1168, bankAdr:36, sBank:4, d:0, a:1, f:hls_coding_unit_hls_dup2, v:xm_yBase
[SCALAR] adr:1172, bankAdr:36, sBank:5, d:1, a:1, f:hls_coding_unit_hls_dup2, v:xm_cb_xBase
[SCALAR] adr:1176, bankAdr:36, sBank:6, d:1, a:2, f:hls_coding_unit_hls_dup2, v:xm_cb_yBase
[SCALAR] adr:1180, bankAdr:36, sBank:7, d:1, a:5, f:hls_coding_unit_hls_dup2, v:xm_log2_cb_size
[SCALAR] adr:1336, bankAdr:40, sBank:14, d:1, a:11, f:hls_coding_unit_hls_dup2, v:rv_set_deblocking_bypass
[SCALAR] adr:1332, bankAdr:40, sBank:13, d:1, a:15, f:hls_coding_unit_hls_dup2, v:rv_ff_hevc_deblocking_boundary_strengths
[SCALAR] adr:1340, bankAdr:40, sBank:15, d:0, a:11, f:hls_coding_unit_hls_dup2, v:rv_hls_pcm_sample
[SCALAR] adr:1344, bankAdr:40, sBank:16, d:1, a:8, f:hls_coding_unit_hls_dup2, v:rv_hls_prediction_unit
[SCALAR] adr:1348, bankAdr:40, sBank:17, d:1, a:6, f:hls_coding_unit_hls_dup2, v:rv_hls_intra_prediction_unit
[SCALAR] adr:1352, bankAdr:40, sBank:18, d:1, a:5, f:hls_coding_unit_hls_dup2, v:rv_hls_transform_tree
[SCALAR] adr:1236, bankAdr:36, sBank:21, d:0, a:14, f:hls_coding_unit_hls_dup2, v:rv_callback_flag
[SCALAR] adr:36, bankAdr:0, sBank:9, d:1, a:4, f:hls_coding_unit_hls_dup2, v:length_r
[SCALAR] adr:544, bankAdr:16, sBank:8, d:0, a:3, f:hls_coding_unit_hls_dup2, v:xm_x
[SCALAR] adr:548, bankAdr:16, sBank:9, d:0, a:5, f:hls_coding_unit_hls_dup2, v:xm_y
[SCALAR] adr:512, bankAdr:16, sBank:0, d:1, a:4, f:hls_coding_unit_hls_dup2, v:pu_intra_pred_mode_0
[SCALAR] adr:513, bankAdr:17, sBank:0, d:0, a:5, f:hls_coding_unit_hls_dup2, v:pu_intra_pred_mode_1
[SCALAR] adr:514, bankAdr:18, sBank:0, d:1, a:5, f:hls_coding_unit_hls_dup2, v:pu_intra_pred_mode_2
[SCALAR] adr:515, bankAdr:19, sBank:0, d:0, a:6, f:hls_coding_unit_hls_dup2, v:pu_intra_pred_mode_3
[SCALAR] adr:540, bankAdr:16, sBank:7, d:0, a:6, f:hls_coding_unit_hls_dup2, v:qPy_pred
[SCALAR] adr:24, bankAdr:0, sBank:6, d:0, a:3, f:hls_coding_unit_hls_dup2, v:skip_flag_start
[SCALAR] adr:368, bankAdr:8, sBank:28, d:1, a:10, f:hls_coding_unit_hls_dup2, v:log2_min_cb_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:11, f:hls_coding_unit_hls_dup2, v:log2_ctb_size
[SCALAR] adr:436, bankAdr:12, sBank:13, d:0, a:17, f:hls_coding_unit_hls_dup2, v:diff_cu_qp_delta_depth
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:12, f:hls_coding_unit_hls_dup2, v:qp_y
[SCALAR] adr:440, bankAdr:12, sBank:14, d:0, a:13, f:hls_coding_unit_hls_dup2, v:transquant_bypass_enable_flag
[SCALAR] adr:392, bankAdr:12, sBank:2, d:0, a:11, f:hls_coding_unit_hls_dup2, v:min_cb_width
[SCALAR] adr:568, bankAdr:16, sBank:14, d:1, a:3, f:hls_coding_unit_hls_dup2, v:intra_split_flag
[SCALAR] adr:452, bankAdr:12, sBank:17, d:0, a:7, f:hls_coding_unit_hls_dup2, v:slice_type
[SCALAR] adr:608, bankAdr:16, sBank:24, d:0, a:11, f:hls_coding_unit_hls_dup2, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:13, f:hls_coding_unit_hls_dup2, v:ctb_up_flag
[SCALAR] adr:320, bankAdr:8, sBank:16, d:0, a:9, f:hls_coding_unit_hls_dup2, v:amp_enabled_flag
[SCALAR] adr:400, bankAdr:12, sBank:4, d:1, a:5, f:hls_coding_unit_hls_dup2, v:pcm_enabled_flag
[SCALAR] adr:412, bankAdr:12, sBank:7, d:1, a:11, f:hls_coding_unit_hls_dup2, v:log2_min_pcm_cb_size
[SCALAR] adr:416, bankAdr:12, sBank:8, d:0, a:10, f:hls_coding_unit_hls_dup2, v:log2_max_pcm_cb_size
[SCALAR] adr:464, bankAdr:12, sBank:20, d:0, a:10, f:hls_coding_unit_hls_dup2, v:depth
[SCALAR] adr:1288, bankAdr:40, sBank:2, d:1, a:10, f:hls_coding_unit_hls_dup2, v:dc_skip_flag_p
[SCALAR] adr:1272, bankAdr:36, sBank:30, d:1, a:5, f:hls_coding_unit_hls_dup2, v:dc_qp_y_tab_p
[SCALAR] adr:1280, bankAdr:40, sBank:0, d:0, a:16, f:hls_coding_unit_hls_dup2, v:dc_tab_ct_depth_p
[SCALAR] adr:420, bankAdr:12, sBank:9, d:0, a:13, f:hls_coding_unit_hls_dup3, v:loop_filter_disable_flag
[SCALAR] adr:380, bankAdr:8, sBank:31, d:1, a:4, f:hls_coding_unit_hls_dup3, v:max_transform_hierarchy_depth_inter
[SCALAR] adr:1160, bankAdr:36, sBank:2, d:0, a:12, f:hls_coding_unit_hls_dup3, v:disable_deblocking_filter_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:0, a:15, f:hls_coding_unit_hls_dup3, v:cu_qp_delta_enabled_flag
[SCALAR] adr:476, bankAdr:12, sBank:23, d:0, a:15, f:hls_coding_unit_hls_dup3, v:tu_is_cu_qp_delta_coded
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:10, f:hls_coding_unit_hls_dup3, v:cu_transquant_bypass_flag_i
[SCALAR] adr:572, bankAdr:16, sBank:15, d:0, a:4, f:hls_coding_unit_hls_dup3, v:cu_transquant_bypass_flag_o
[SCALAR] adr:28, bankAdr:0, sBank:7, d:0, a:13, f:hls_coding_unit_hls_dup3, v:pcm_flag_i
[SCALAR] adr:28, bankAdr:0, sBank:7, d:1, a:6, f:hls_coding_unit_hls_dup3, v:pcm_flag_o
[SCALAR] adr:504, bankAdr:12, sBank:30, d:0, a:6, f:hls_coding_unit_hls_dup3, v:merge_flag
[SCALAR] adr:560, bankAdr:16, sBank:12, d:1, a:12, f:hls_coding_unit_hls_dup3, v:pred_mode_i
[SCALAR] adr:560, bankAdr:16, sBank:12, d:1, a:3, f:hls_coding_unit_hls_dup3, v:pred_mode_o
[SCALAR] adr:564, bankAdr:16, sBank:13, d:1, a:16, f:hls_coding_unit_hls_dup3, v:part_mode_i
[SCALAR] adr:564, bankAdr:16, sBank:13, d:0, a:4, f:hls_coding_unit_hls_dup3, v:part_mode_o
[SCALAR] adr:576, bankAdr:16, sBank:16, d:0, a:2, f:hls_coding_unit_hls_dup3, v:max_trafo_depth
[SCALAR] adr:32, bankAdr:0, sBank:8, d:1, a:10, f:hls_coding_unit_hls_dup3, v:cb_size_i
[SCALAR] adr:32, bankAdr:0, sBank:8, d:1, a:3, f:hls_coding_unit_hls_dup3, v:cb_size_o
[SCALAR] adr:44, bankAdr:0, sBank:11, d:1, a:14, f:hls_coding_unit_hls_dup3, v:idx_i
[SCALAR] adr:44, bankAdr:0, sBank:11, d:1, a:3, f:hls_coding_unit_hls_dup3, v:idx_o
[SCALAR] adr:1164, bankAdr:36, sBank:3, d:1, a:1, f:hls_coding_unit_hls_dup3, v:xm_xBase
[SCALAR] adr:1168, bankAdr:36, sBank:4, d:1, a:1, f:hls_coding_unit_hls_dup3, v:xm_yBase
[SCALAR] adr:1172, bankAdr:36, sBank:5, d:0, a:2, f:hls_coding_unit_hls_dup3, v:xm_cb_xBase
[SCALAR] adr:1176, bankAdr:36, sBank:6, d:1, a:3, f:hls_coding_unit_hls_dup3, v:xm_cb_yBase
[SCALAR] adr:1180, bankAdr:36, sBank:7, d:0, a:7, f:hls_coding_unit_hls_dup3, v:xm_log2_cb_size
[SCALAR] adr:1336, bankAdr:40, sBank:14, d:1, a:12, f:hls_coding_unit_hls_dup3, v:rv_set_deblocking_bypass
[SCALAR] adr:1332, bankAdr:40, sBank:13, d:0, a:18, f:hls_coding_unit_hls_dup3, v:rv_ff_hevc_deblocking_boundary_strengths
[SCALAR] adr:1340, bankAdr:40, sBank:15, d:0, a:12, f:hls_coding_unit_hls_dup3, v:rv_hls_pcm_sample
[SCALAR] adr:1344, bankAdr:40, sBank:16, d:1, a:9, f:hls_coding_unit_hls_dup3, v:rv_hls_prediction_unit
[SCALAR] adr:1348, bankAdr:40, sBank:17, d:1, a:7, f:hls_coding_unit_hls_dup3, v:rv_hls_intra_prediction_unit
[SCALAR] adr:1352, bankAdr:40, sBank:18, d:0, a:6, f:hls_coding_unit_hls_dup3, v:rv_hls_transform_tree
[SCALAR] adr:1236, bankAdr:36, sBank:21, d:1, a:13, f:hls_coding_unit_hls_dup3, v:rv_callback_flag
[SCALAR] adr:36, bankAdr:0, sBank:9, d:1, a:5, f:hls_coding_unit_hls_dup3, v:length_r
[SCALAR] adr:544, bankAdr:16, sBank:8, d:0, a:4, f:hls_coding_unit_hls_dup3, v:xm_x
[SCALAR] adr:548, bankAdr:16, sBank:9, d:0, a:6, f:hls_coding_unit_hls_dup3, v:xm_y
[SCALAR] adr:512, bankAdr:16, sBank:0, d:1, a:6, f:hls_coding_unit_hls_dup3, v:pu_intra_pred_mode_0
[SCALAR] adr:513, bankAdr:17, sBank:0, d:0, a:7, f:hls_coding_unit_hls_dup3, v:pu_intra_pred_mode_1
[SCALAR] adr:514, bankAdr:18, sBank:0, d:1, a:7, f:hls_coding_unit_hls_dup3, v:pu_intra_pred_mode_2
[SCALAR] adr:515, bankAdr:19, sBank:0, d:0, a:8, f:hls_coding_unit_hls_dup3, v:pu_intra_pred_mode_3
[SCALAR] adr:540, bankAdr:16, sBank:7, d:1, a:7, f:hls_coding_unit_hls_dup3, v:qPy_pred
[SCALAR] adr:24, bankAdr:0, sBank:6, d:0, a:4, f:hls_coding_unit_hls_dup3, v:skip_flag_start
[SCALAR] adr:368, bankAdr:8, sBank:28, d:0, a:11, f:hls_coding_unit_hls_dup3, v:log2_min_cb_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:10, f:hls_coding_unit_hls_dup3, v:log2_ctb_size
[SCALAR] adr:436, bankAdr:12, sBank:13, d:1, a:17, f:hls_coding_unit_hls_dup3, v:diff_cu_qp_delta_depth
[SCALAR] adr:536, bankAdr:16, sBank:6, d:0, a:13, f:hls_coding_unit_hls_dup3, v:qp_y
[SCALAR] adr:440, bankAdr:12, sBank:14, d:0, a:14, f:hls_coding_unit_hls_dup3, v:transquant_bypass_enable_flag
[SCALAR] adr:392, bankAdr:12, sBank:2, d:1, a:11, f:hls_coding_unit_hls_dup3, v:min_cb_width
[SCALAR] adr:568, bankAdr:16, sBank:14, d:0, a:4, f:hls_coding_unit_hls_dup3, v:intra_split_flag
[SCALAR] adr:452, bankAdr:12, sBank:17, d:0, a:8, f:hls_coding_unit_hls_dup3, v:slice_type
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:10, f:hls_coding_unit_hls_dup3, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:14, f:hls_coding_unit_hls_dup3, v:ctb_up_flag
[SCALAR] adr:320, bankAdr:8, sBank:16, d:0, a:10, f:hls_coding_unit_hls_dup3, v:amp_enabled_flag
[SCALAR] adr:400, bankAdr:12, sBank:4, d:0, a:7, f:hls_coding_unit_hls_dup3, v:pcm_enabled_flag
[SCALAR] adr:412, bankAdr:12, sBank:7, d:1, a:12, f:hls_coding_unit_hls_dup3, v:log2_min_pcm_cb_size
[SCALAR] adr:416, bankAdr:12, sBank:8, d:0, a:11, f:hls_coding_unit_hls_dup3, v:log2_max_pcm_cb_size
[SCALAR] adr:464, bankAdr:12, sBank:20, d:1, a:10, f:hls_coding_unit_hls_dup3, v:depth
[SCALAR] adr:1288, bankAdr:40, sBank:2, d:0, a:13, f:hls_coding_unit_hls_dup3, v:dc_skip_flag_p
[SCALAR] adr:1272, bankAdr:36, sBank:30, d:1, a:6, f:hls_coding_unit_hls_dup3, v:dc_qp_y_tab_p
[SCALAR] adr:1280, bankAdr:40, sBank:0, d:1, a:15, f:hls_coding_unit_hls_dup3, v:dc_tab_ct_depth_p
[SCALAR] adr:532, bankAdr:16, sBank:5, d:1, a:2, f:hls_decode_neighbour_hls, v:first_qp_group
[SCALAR] adr:620, bankAdr:16, sBank:27, d:1, a:0, f:hls_decode_neighbour_hls, v:end_of_tiles_x
[SCALAR] adr:624, bankAdr:16, sBank:28, d:0, a:1, f:hls_decode_neighbour_hls, v:end_of_tiles_y
[SCALAR] adr:260, bankAdr:8, sBank:1, d:1, a:0, f:hls_decode_neighbour_hls, v:slice_or_tiles_left_boundary
[SCALAR] adr:264, bankAdr:8, sBank:2, d:1, a:0, f:hls_decode_neighbour_hls, v:slice_or_tiles_up_boundary
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:0, f:hls_decode_neighbour_hls, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:2, f:hls_decode_neighbour_hls, v:ctb_up_flag
[SCALAR] adr:616, bankAdr:16, sBank:26, d:1, a:0, f:hls_decode_neighbour_hls, v:ctb_up_right_flag
[SCALAR] adr:612, bankAdr:16, sBank:25, d:1, a:0, f:hls_decode_neighbour_hls, v:ctb_up_left_flag
[SCALAR] adr:272, bankAdr:8, sBank:4, d:1, a:6, f:hls_decode_neighbour_hls, v:x_ctb
[SCALAR] adr:276, bankAdr:8, sBank:5, d:0, a:9, f:hls_decode_neighbour_hls, v:y_ctb
[SCALAR] adr:280, bankAdr:8, sBank:6, d:1, a:13, f:hls_decode_neighbour_hls, v:ctb_addr_ts
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:12, f:hls_decode_neighbour_hls, v:log2_ctb_size
[SCALAR] adr:284, bankAdr:8, sBank:7, d:0, a:14, f:hls_decode_neighbour_hls, v:ctb_width
[SCALAR] adr:288, bankAdr:8, sBank:8, d:1, a:11, f:hls_decode_neighbour_hls, v:slice_addr
[SCALAR] adr:252, bankAdr:4, sBank:31, d:0, a:6, f:hls_decode_neighbour_hls, v:entropy_coding_sync_enabled_flag
[SCALAR] adr:256, bankAdr:8, sBank:0, d:0, a:17, f:hls_decode_neighbour_hls, v:tiles_enabled_flag
[SCALAR] adr:444, bankAdr:12, sBank:15, d:1, a:11, f:hls_decode_neighbour_hls, v:num_tile_columns
[ARRAY] adr:8192, bankAdr:0, aBank:0, d:0, a:1, f:hls_decode_neighbour_hls, v:column_width_q0
[SCALAR] adr:408, bankAdr:12, sBank:6, d:0, a:14, f:hls_decode_neighbour_hls, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:0, a:7, f:hls_decode_neighbour_hls, v:height
[SCALAR] adr:168, bankAdr:4, sBank:10, d:0, a:4, f:hls_transform_tree_hls, v:log2_trafo_size
[SCALAR] adr:12, bankAdr:0, sBank:3, d:0, a:2, f:hls_transform_tree_hls, v:split_transform_flag
[SCALAR] adr:16, bankAdr:0, sBank:4, d:0, a:2, f:hls_transform_tree_hls, v:cbf_data
[SCALAR] adr:1160, bankAdr:36, sBank:2, d:1, a:12, f:hls_transform_tree_hls, v:disable_deblocking_filter_flag
[SCALAR] adr:440, bankAdr:12, sBank:14, d:1, a:13, f:hls_transform_tree_hls, v:transquant_bypass_enable_flag
[SCALAR] adr:572, bankAdr:16, sBank:15, d:0, a:13, f:hls_transform_tree_hls, v:cu_transquant_bypass_flag
[SCALAR] adr:480, bankAdr:12, sBank:24, d:0, a:1, f:hls_transform_tree_hls, v:tu_chroma_mode_c
[SCALAR] adr:484, bankAdr:12, sBank:25, d:0, a:1, f:hls_transform_tree_hls, v:tu_intra_pred_mode
[SCALAR] adr:488, bankAdr:12, sBank:26, d:0, a:1, f:hls_transform_tree_hls, v:tu_intra_pred_mode_c
[SCALAR] adr:508, bankAdr:12, sBank:31, d:1, a:5, f:hls_transform_tree_hls, v:pu_chroma_mode_c_0
[SCALAR] adr:509, bankAdr:13, sBank:31, d:0, a:7, f:hls_transform_tree_hls, v:pu_chroma_mode_c_1
[SCALAR] adr:510, bankAdr:14, sBank:31, d:1, a:6, f:hls_transform_tree_hls, v:pu_chroma_mode_c_2
[SCALAR] adr:511, bankAdr:15, sBank:31, d:0, a:8, f:hls_transform_tree_hls, v:pu_chroma_mode_c_3
[SCALAR] adr:512, bankAdr:16, sBank:0, d:1, a:16, f:hls_transform_tree_hls, v:pu_intra_pred_mode_0
[SCALAR] adr:513, bankAdr:17, sBank:0, d:0, a:18, f:hls_transform_tree_hls, v:pu_intra_pred_mode_1
[SCALAR] adr:514, bankAdr:18, sBank:0, d:1, a:17, f:hls_transform_tree_hls, v:pu_intra_pred_mode_2
[SCALAR] adr:515, bankAdr:19, sBank:0, d:0, a:19, f:hls_transform_tree_hls, v:pu_intra_pred_mode_3
[SCALAR] adr:516, bankAdr:16, sBank:1, d:0, a:6, f:hls_transform_tree_hls, v:pu_intra_pred_mode_c_0
[SCALAR] adr:517, bankAdr:17, sBank:1, d:1, a:5, f:hls_transform_tree_hls, v:pu_intra_pred_mode_c_1
[SCALAR] adr:518, bankAdr:18, sBank:1, d:0, a:7, f:hls_transform_tree_hls, v:pu_intra_pred_mode_c_2
[SCALAR] adr:519, bankAdr:19, sBank:1, d:1, a:6, f:hls_transform_tree_hls, v:pu_intra_pred_mode_c_3
[SCALAR] adr:568, bankAdr:16, sBank:14, d:0, a:15, f:hls_transform_tree_hls, v:intra_split_flag
[SCALAR] adr:364, bankAdr:8, sBank:27, d:0, a:5, f:hls_transform_tree_hls, v:log2_max_trafo_size
[SCALAR] adr:376, bankAdr:8, sBank:30, d:0, a:7, f:hls_transform_tree_hls, v:log2_min_tb_size
[SCALAR] adr:576, bankAdr:16, sBank:16, d:1, a:10, f:hls_transform_tree_hls, v:max_trafo_depth
[SCALAR] adr:380, bankAdr:8, sBank:31, d:1, a:7, f:hls_transform_tree_hls, v:max_transform_hierarchy_depth_inter
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:14, f:hls_transform_tree_hls, v:pred_mode
[SCALAR] adr:564, bankAdr:16, sBank:13, d:0, a:19, f:hls_transform_tree_hls, v:part_mode
[SCALAR] adr:324, bankAdr:8, sBank:17, d:1, a:8, f:hls_transform_tree_hls, v:chroma_array_type
[SCALAR] adr:328, bankAdr:8, sBank:18, d:1, a:6, f:hls_transform_tree_hls, v:chroma_format_idc
[SCALAR] adr:20, bankAdr:0, sBank:5, d:1, a:8, f:hls_transform_tree_hls, v:cbf_luma_i
[SCALAR] adr:20, bankAdr:0, sBank:5, d:0, a:3, f:hls_transform_tree_hls, v:cbf_luma_o
[SCALAR] adr:1328, bankAdr:40, sBank:12, d:1, a:13, f:hls_transform_tree_hls, v:rv_hls_transform_unit
[SCALAR] adr:1332, bankAdr:40, sBank:13, d:1, a:18, f:hls_transform_tree_hls, v:rv_ff_hevc_deblocking_boundary_strengths
[SCALAR] adr:1336, bankAdr:40, sBank:14, d:1, a:14, f:hls_transform_tree_hls, v:rv_set_deblocking_bypass
[SCALAR] adr:1236, bankAdr:36, sBank:21, d:0, a:15, f:hls_transform_tree_hls, v:rv_callback_flag
[SCALAR] adr:388, bankAdr:12, sBank:1, d:0, a:8, f:hls_transform_tree_hls, v:min_tb_width
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:11, f:hls_transform_tree_hls, v:log2_ctb_size
[SCALAR] adr:168, bankAdr:4, sBank:10, d:1, a:4, f:hls_transform_tree_hls_dup1, v:log2_trafo_size
[SCALAR] adr:12, bankAdr:0, sBank:3, d:1, a:2, f:hls_transform_tree_hls_dup1, v:split_transform_flag
[SCALAR] adr:16, bankAdr:0, sBank:4, d:1, a:2, f:hls_transform_tree_hls_dup1, v:cbf_data
[SCALAR] adr:1160, bankAdr:36, sBank:2, d:0, a:14, f:hls_transform_tree_hls_dup1, v:disable_deblocking_filter_flag
[SCALAR] adr:440, bankAdr:12, sBank:14, d:0, a:16, f:hls_transform_tree_hls_dup1, v:transquant_bypass_enable_flag
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:12, f:hls_transform_tree_hls_dup1, v:cu_transquant_bypass_flag
[SCALAR] adr:480, bankAdr:12, sBank:24, d:1, a:1, f:hls_transform_tree_hls_dup1, v:tu_chroma_mode_c
[SCALAR] adr:484, bankAdr:12, sBank:25, d:1, a:1, f:hls_transform_tree_hls_dup1, v:tu_intra_pred_mode
[SCALAR] adr:488, bankAdr:12, sBank:26, d:1, a:1, f:hls_transform_tree_hls_dup1, v:tu_intra_pred_mode_c
[SCALAR] adr:508, bankAdr:12, sBank:31, d:0, a:9, f:hls_transform_tree_hls_dup1, v:pu_chroma_mode_c_0
[SCALAR] adr:509, bankAdr:13, sBank:31, d:1, a:8, f:hls_transform_tree_hls_dup1, v:pu_chroma_mode_c_1
[SCALAR] adr:510, bankAdr:14, sBank:31, d:0, a:10, f:hls_transform_tree_hls_dup1, v:pu_chroma_mode_c_2
[SCALAR] adr:511, bankAdr:15, sBank:31, d:1, a:9, f:hls_transform_tree_hls_dup1, v:pu_chroma_mode_c_3
[SCALAR] adr:512, bankAdr:16, sBank:0, d:1, a:18, f:hls_transform_tree_hls_dup1, v:pu_intra_pred_mode_0
[SCALAR] adr:513, bankAdr:17, sBank:0, d:0, a:20, f:hls_transform_tree_hls_dup1, v:pu_intra_pred_mode_1
[SCALAR] adr:514, bankAdr:18, sBank:0, d:1, a:19, f:hls_transform_tree_hls_dup1, v:pu_intra_pred_mode_2
[SCALAR] adr:515, bankAdr:19, sBank:0, d:0, a:21, f:hls_transform_tree_hls_dup1, v:pu_intra_pred_mode_3
[SCALAR] adr:516, bankAdr:16, sBank:1, d:1, a:7, f:hls_transform_tree_hls_dup1, v:pu_intra_pred_mode_c_0
[SCALAR] adr:517, bankAdr:17, sBank:1, d:0, a:9, f:hls_transform_tree_hls_dup1, v:pu_intra_pred_mode_c_1
[SCALAR] adr:518, bankAdr:18, sBank:1, d:1, a:8, f:hls_transform_tree_hls_dup1, v:pu_intra_pred_mode_c_2
[SCALAR] adr:519, bankAdr:19, sBank:1, d:0, a:10, f:hls_transform_tree_hls_dup1, v:pu_intra_pred_mode_c_3
[SCALAR] adr:568, bankAdr:16, sBank:14, d:1, a:15, f:hls_transform_tree_hls_dup1, v:intra_split_flag
[SCALAR] adr:364, bankAdr:8, sBank:27, d:1, a:4, f:hls_transform_tree_hls_dup1, v:log2_max_trafo_size
[SCALAR] adr:376, bankAdr:8, sBank:30, d:1, a:7, f:hls_transform_tree_hls_dup1, v:log2_min_tb_size
[SCALAR] adr:576, bankAdr:16, sBank:16, d:0, a:11, f:hls_transform_tree_hls_dup1, v:max_trafo_depth
[SCALAR] adr:380, bankAdr:8, sBank:31, d:0, a:11, f:hls_transform_tree_hls_dup1, v:max_transform_hierarchy_depth_inter
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:15, f:hls_transform_tree_hls_dup1, v:pred_mode
[SCALAR] adr:564, bankAdr:16, sBank:13, d:0, a:20, f:hls_transform_tree_hls_dup1, v:part_mode
[SCALAR] adr:324, bankAdr:8, sBank:17, d:0, a:9, f:hls_transform_tree_hls_dup1, v:chroma_array_type
[SCALAR] adr:328, bankAdr:8, sBank:18, d:0, a:7, f:hls_transform_tree_hls_dup1, v:chroma_format_idc
[SCALAR] adr:20, bankAdr:0, sBank:5, d:0, a:10, f:hls_transform_tree_hls_dup1, v:cbf_luma_i
[SCALAR] adr:20, bankAdr:0, sBank:5, d:1, a:3, f:hls_transform_tree_hls_dup1, v:cbf_luma_o
[SCALAR] adr:1328, bankAdr:40, sBank:12, d:1, a:14, f:hls_transform_tree_hls_dup1, v:rv_hls_transform_unit
[SCALAR] adr:1332, bankAdr:40, sBank:13, d:1, a:19, f:hls_transform_tree_hls_dup1, v:rv_ff_hevc_deblocking_boundary_strengths
[SCALAR] adr:1336, bankAdr:40, sBank:14, d:0, a:17, f:hls_transform_tree_hls_dup1, v:rv_set_deblocking_bypass
[SCALAR] adr:1236, bankAdr:36, sBank:21, d:1, a:14, f:hls_transform_tree_hls_dup1, v:rv_callback_flag
[SCALAR] adr:388, bankAdr:12, sBank:1, d:1, a:9, f:hls_transform_tree_hls_dup1, v:min_tb_width
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:13, f:hls_transform_tree_hls_dup1, v:log2_ctb_size
[SCALAR] adr:168, bankAdr:4, sBank:10, d:0, a:5, f:hls_transform_tree_hls_dup2, v:log2_trafo_size
[SCALAR] adr:12, bankAdr:0, sBank:3, d:0, a:3, f:hls_transform_tree_hls_dup2, v:split_transform_flag
[SCALAR] adr:16, bankAdr:0, sBank:4, d:0, a:3, f:hls_transform_tree_hls_dup2, v:cbf_data
[SCALAR] adr:1160, bankAdr:36, sBank:2, d:1, a:13, f:hls_transform_tree_hls_dup2, v:disable_deblocking_filter_flag
[SCALAR] adr:440, bankAdr:12, sBank:14, d:1, a:16, f:hls_transform_tree_hls_dup2, v:transquant_bypass_enable_flag
[SCALAR] adr:572, bankAdr:16, sBank:15, d:0, a:14, f:hls_transform_tree_hls_dup2, v:cu_transquant_bypass_flag
[SCALAR] adr:480, bankAdr:12, sBank:24, d:0, a:2, f:hls_transform_tree_hls_dup2, v:tu_chroma_mode_c
[SCALAR] adr:484, bankAdr:12, sBank:25, d:0, a:2, f:hls_transform_tree_hls_dup2, v:tu_intra_pred_mode
[SCALAR] adr:488, bankAdr:12, sBank:26, d:0, a:2, f:hls_transform_tree_hls_dup2, v:tu_intra_pred_mode_c
[SCALAR] adr:508, bankAdr:12, sBank:31, d:1, a:10, f:hls_transform_tree_hls_dup2, v:pu_chroma_mode_c_0
[SCALAR] adr:509, bankAdr:13, sBank:31, d:0, a:12, f:hls_transform_tree_hls_dup2, v:pu_chroma_mode_c_1
[SCALAR] adr:510, bankAdr:14, sBank:31, d:1, a:11, f:hls_transform_tree_hls_dup2, v:pu_chroma_mode_c_2
[SCALAR] adr:511, bankAdr:15, sBank:31, d:0, a:13, f:hls_transform_tree_hls_dup2, v:pu_chroma_mode_c_3
[SCALAR] adr:512, bankAdr:16, sBank:0, d:1, a:20, f:hls_transform_tree_hls_dup2, v:pu_intra_pred_mode_0
[SCALAR] adr:513, bankAdr:17, sBank:0, d:0, a:22, f:hls_transform_tree_hls_dup2, v:pu_intra_pred_mode_1
[SCALAR] adr:514, bankAdr:18, sBank:0, d:1, a:21, f:hls_transform_tree_hls_dup2, v:pu_intra_pred_mode_2
[SCALAR] adr:515, bankAdr:19, sBank:0, d:0, a:23, f:hls_transform_tree_hls_dup2, v:pu_intra_pred_mode_3
[SCALAR] adr:516, bankAdr:16, sBank:1, d:0, a:11, f:hls_transform_tree_hls_dup2, v:pu_intra_pred_mode_c_0
[SCALAR] adr:517, bankAdr:17, sBank:1, d:1, a:10, f:hls_transform_tree_hls_dup2, v:pu_intra_pred_mode_c_1
[SCALAR] adr:518, bankAdr:18, sBank:1, d:0, a:12, f:hls_transform_tree_hls_dup2, v:pu_intra_pred_mode_c_2
[SCALAR] adr:519, bankAdr:19, sBank:1, d:1, a:11, f:hls_transform_tree_hls_dup2, v:pu_intra_pred_mode_c_3
[SCALAR] adr:568, bankAdr:16, sBank:14, d:0, a:18, f:hls_transform_tree_hls_dup2, v:intra_split_flag
[SCALAR] adr:364, bankAdr:8, sBank:27, d:0, a:6, f:hls_transform_tree_hls_dup2, v:log2_max_trafo_size
[SCALAR] adr:376, bankAdr:8, sBank:30, d:0, a:8, f:hls_transform_tree_hls_dup2, v:log2_min_tb_size
[SCALAR] adr:576, bankAdr:16, sBank:16, d:1, a:11, f:hls_transform_tree_hls_dup2, v:max_trafo_depth
[SCALAR] adr:380, bankAdr:8, sBank:31, d:1, a:12, f:hls_transform_tree_hls_dup2, v:max_transform_hierarchy_depth_inter
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:16, f:hls_transform_tree_hls_dup2, v:pred_mode
[SCALAR] adr:564, bankAdr:16, sBank:13, d:0, a:21, f:hls_transform_tree_hls_dup2, v:part_mode
[SCALAR] adr:324, bankAdr:8, sBank:17, d:1, a:9, f:hls_transform_tree_hls_dup2, v:chroma_array_type
[SCALAR] adr:328, bankAdr:8, sBank:18, d:1, a:7, f:hls_transform_tree_hls_dup2, v:chroma_format_idc
[SCALAR] adr:20, bankAdr:0, sBank:5, d:1, a:9, f:hls_transform_tree_hls_dup2, v:cbf_luma_i
[SCALAR] adr:20, bankAdr:0, sBank:5, d:0, a:4, f:hls_transform_tree_hls_dup2, v:cbf_luma_o
[SCALAR] adr:1328, bankAdr:40, sBank:12, d:1, a:15, f:hls_transform_tree_hls_dup2, v:rv_hls_transform_unit
[SCALAR] adr:1332, bankAdr:40, sBank:13, d:1, a:20, f:hls_transform_tree_hls_dup2, v:rv_ff_hevc_deblocking_boundary_strengths
[SCALAR] adr:1336, bankAdr:40, sBank:14, d:1, a:17, f:hls_transform_tree_hls_dup2, v:rv_set_deblocking_bypass
[SCALAR] adr:1236, bankAdr:36, sBank:21, d:0, a:16, f:hls_transform_tree_hls_dup2, v:rv_callback_flag
[SCALAR] adr:388, bankAdr:12, sBank:1, d:0, a:13, f:hls_transform_tree_hls_dup2, v:min_tb_width
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:12, f:hls_transform_tree_hls_dup2, v:log2_ctb_size
[SCALAR] adr:168, bankAdr:4, sBank:10, d:1, a:5, f:hls_transform_tree_hls_dup3, v:log2_trafo_size
[SCALAR] adr:12, bankAdr:0, sBank:3, d:1, a:3, f:hls_transform_tree_hls_dup3, v:split_transform_flag
[SCALAR] adr:16, bankAdr:0, sBank:4, d:1, a:3, f:hls_transform_tree_hls_dup3, v:cbf_data
[SCALAR] adr:1160, bankAdr:36, sBank:2, d:0, a:15, f:hls_transform_tree_hls_dup3, v:disable_deblocking_filter_flag
[SCALAR] adr:440, bankAdr:12, sBank:14, d:0, a:19, f:hls_transform_tree_hls_dup3, v:transquant_bypass_enable_flag
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:13, f:hls_transform_tree_hls_dup3, v:cu_transquant_bypass_flag
[SCALAR] adr:480, bankAdr:12, sBank:24, d:1, a:2, f:hls_transform_tree_hls_dup3, v:tu_chroma_mode_c
[SCALAR] adr:484, bankAdr:12, sBank:25, d:1, a:2, f:hls_transform_tree_hls_dup3, v:tu_intra_pred_mode
[SCALAR] adr:488, bankAdr:12, sBank:26, d:1, a:2, f:hls_transform_tree_hls_dup3, v:tu_intra_pred_mode_c
[SCALAR] adr:508, bankAdr:12, sBank:31, d:0, a:14, f:hls_transform_tree_hls_dup3, v:pu_chroma_mode_c_0
[SCALAR] adr:509, bankAdr:13, sBank:31, d:1, a:13, f:hls_transform_tree_hls_dup3, v:pu_chroma_mode_c_1
[SCALAR] adr:510, bankAdr:14, sBank:31, d:0, a:15, f:hls_transform_tree_hls_dup3, v:pu_chroma_mode_c_2
[SCALAR] adr:511, bankAdr:15, sBank:31, d:1, a:14, f:hls_transform_tree_hls_dup3, v:pu_chroma_mode_c_3
[SCALAR] adr:512, bankAdr:16, sBank:0, d:1, a:22, f:hls_transform_tree_hls_dup3, v:pu_intra_pred_mode_0
[SCALAR] adr:513, bankAdr:17, sBank:0, d:0, a:24, f:hls_transform_tree_hls_dup3, v:pu_intra_pred_mode_1
[SCALAR] adr:514, bankAdr:18, sBank:0, d:1, a:23, f:hls_transform_tree_hls_dup3, v:pu_intra_pred_mode_2
[SCALAR] adr:515, bankAdr:19, sBank:0, d:0, a:25, f:hls_transform_tree_hls_dup3, v:pu_intra_pred_mode_3
[SCALAR] adr:516, bankAdr:16, sBank:1, d:1, a:12, f:hls_transform_tree_hls_dup3, v:pu_intra_pred_mode_c_0
[SCALAR] adr:517, bankAdr:17, sBank:1, d:0, a:14, f:hls_transform_tree_hls_dup3, v:pu_intra_pred_mode_c_1
[SCALAR] adr:518, bankAdr:18, sBank:1, d:1, a:13, f:hls_transform_tree_hls_dup3, v:pu_intra_pred_mode_c_2
[SCALAR] adr:519, bankAdr:19, sBank:1, d:0, a:15, f:hls_transform_tree_hls_dup3, v:pu_intra_pred_mode_c_3
[SCALAR] adr:568, bankAdr:16, sBank:14, d:1, a:18, f:hls_transform_tree_hls_dup3, v:intra_split_flag
[SCALAR] adr:364, bankAdr:8, sBank:27, d:1, a:5, f:hls_transform_tree_hls_dup3, v:log2_max_trafo_size
[SCALAR] adr:376, bankAdr:8, sBank:30, d:1, a:8, f:hls_transform_tree_hls_dup3, v:log2_min_tb_size
[SCALAR] adr:576, bankAdr:16, sBank:16, d:0, a:12, f:hls_transform_tree_hls_dup3, v:max_trafo_depth
[SCALAR] adr:380, bankAdr:8, sBank:31, d:0, a:16, f:hls_transform_tree_hls_dup3, v:max_transform_hierarchy_depth_inter
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:17, f:hls_transform_tree_hls_dup3, v:pred_mode
[SCALAR] adr:564, bankAdr:16, sBank:13, d:0, a:22, f:hls_transform_tree_hls_dup3, v:part_mode
[SCALAR] adr:324, bankAdr:8, sBank:17, d:0, a:10, f:hls_transform_tree_hls_dup3, v:chroma_array_type
[SCALAR] adr:328, bankAdr:8, sBank:18, d:0, a:8, f:hls_transform_tree_hls_dup3, v:chroma_format_idc
[SCALAR] adr:20, bankAdr:0, sBank:5, d:0, a:11, f:hls_transform_tree_hls_dup3, v:cbf_luma_i
[SCALAR] adr:20, bankAdr:0, sBank:5, d:1, a:4, f:hls_transform_tree_hls_dup3, v:cbf_luma_o
[SCALAR] adr:1328, bankAdr:40, sBank:12, d:1, a:16, f:hls_transform_tree_hls_dup3, v:rv_hls_transform_unit
[SCALAR] adr:1332, bankAdr:40, sBank:13, d:1, a:21, f:hls_transform_tree_hls_dup3, v:rv_ff_hevc_deblocking_boundary_strengths
[SCALAR] adr:1336, bankAdr:40, sBank:14, d:0, a:20, f:hls_transform_tree_hls_dup3, v:rv_set_deblocking_bypass
[SCALAR] adr:1236, bankAdr:36, sBank:21, d:1, a:15, f:hls_transform_tree_hls_dup3, v:rv_callback_flag
[SCALAR] adr:388, bankAdr:12, sBank:1, d:1, a:14, f:hls_transform_tree_hls_dup3, v:min_tb_width
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:14, f:hls_transform_tree_hls_dup3, v:log2_ctb_size
[SCALAR] adr:20, bankAdr:0, sBank:5, d:1, a:10, f:hls_transform_unit_ex_hls, v:cbf_luma
[SCALAR] adr:16, bankAdr:0, sBank:4, d:0, a:8, f:hls_transform_unit_ex_hls, v:cbf_data
[SCALAR] adr:1260, bankAdr:36, sBank:27, d:0, a:7, f:hls_transform_unit_ex_hls, v:dc_min_tb_addr_zs_p
[SCALAR] adr:1156, bankAdr:36, sBank:1, d:0, a:16, f:hls_transform_unit_ex_hls, v:chroma_qp_offset_list_len_minus1
[SCALAR] adr:1264, bankAdr:36, sBank:28, d:1, a:11, f:hls_transform_unit_ex_hls, v:dc_cb_qp_offset_list_p
[SCALAR] adr:1268, bankAdr:36, sBank:29, d:1, a:3, f:hls_transform_unit_ex_hls, v:dc_cr_qp_offset_list_p
[SCALAR] adr:1132, bankAdr:32, sBank:27, d:1, a:6, f:hls_transform_unit_ex_hls, v:qp_bd_offset
[SCALAR] adr:1272, bankAdr:36, sBank:30, d:0, a:9, f:hls_transform_unit_ex_hls, v:dc_qp_y_tab_p
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:18, f:hls_transform_unit_ex_hls, v:pred_mode
[SCALAR] adr:336, bankAdr:8, sBank:20, d:0, a:11, f:hls_transform_unit_ex_hls, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:0, a:17, f:hls_transform_unit_ex_hls, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:0, a:11, f:hls_transform_unit_ex_hls, v:hshift_2
[SCALAR] adr:348, bankAdr:8, sBank:23, d:0, a:16, f:hls_transform_unit_ex_hls, v:vshift_0
[SCALAR] adr:352, bankAdr:8, sBank:24, d:0, a:12, f:hls_transform_unit_ex_hls, v:vshift_1
[SCALAR] adr:356, bankAdr:8, sBank:25, d:0, a:7, f:hls_transform_unit_ex_hls, v:vshift_2
[SCALAR] adr:484, bankAdr:12, sBank:25, d:1, a:6, f:hls_transform_unit_ex_hls, v:tu_intra_pred_mode
[SCALAR] adr:488, bankAdr:12, sBank:26, d:1, a:13, f:hls_transform_unit_ex_hls, v:tu_intra_pred_mode_c
[SCALAR] adr:572, bankAdr:16, sBank:15, d:0, a:15, f:hls_transform_unit_ex_hls, v:cu_transquant_bypass_flag
[SCALAR] adr:492, bankAdr:12, sBank:27, d:0, a:1, f:hls_transform_unit_ex_hls, v:tu_cu_qp_offset_cb
[SCALAR] adr:496, bankAdr:12, sBank:28, d:1, a:1, f:hls_transform_unit_ex_hls, v:tu_cu_qp_offset_cr
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:14, f:hls_transform_unit_ex_hls, v:qp_y_i
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:4, f:hls_transform_unit_ex_hls, v:qp_y_o
[SCALAR] adr:168, bankAdr:4, sBank:10, d:0, a:6, f:hls_transform_unit_ex_hls, v:log2_trafo_size
[SCALAR] adr:56, bankAdr:0, sBank:14, d:1, a:19, f:hls_transform_unit_ex_hls, v:log2_trafo_size_c_i
[SCALAR] adr:56, bankAdr:0, sBank:14, d:1, a:4, f:hls_transform_unit_ex_hls, v:log2_trafo_size_c_o
[SCALAR] adr:48, bankAdr:0, sBank:12, d:1, a:17, f:hls_transform_unit_ex_hls, v:scan_idx_i
[SCALAR] adr:48, bankAdr:0, sBank:12, d:0, a:4, f:hls_transform_unit_ex_hls, v:scan_idx_o
[SCALAR] adr:52, bankAdr:0, sBank:13, d:1, a:4, f:hls_transform_unit_ex_hls, v:scan_idx_c
[SCALAR] adr:1136, bankAdr:32, sBank:28, d:0, a:12, f:hls_transform_unit_ex_hls, v:cmdr_run_i
[SCALAR] adr:1136, bankAdr:32, sBank:28, d:0, a:2, f:hls_transform_unit_ex_hls, v:cmdr_run_o
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:1, a:10, f:hls_transform_unit_ex_hls, v:buf_data_0
[SCALAR] adr:1244, bankAdr:36, sBank:23, d:1, a:15, f:hls_transform_unit_ex_hls, v:buf_data_1
[SCALAR] adr:1248, bankAdr:36, sBank:24, d:1, a:11, f:hls_transform_unit_ex_hls, v:buf_data_2
[SCALAR] adr:1144, bankAdr:32, sBank:30, d:1, a:9, f:hls_transform_unit_ex_hls, v:xm_linesize_0
[SCALAR] adr:1148, bankAdr:32, sBank:31, d:1, a:15, f:hls_transform_unit_ex_hls, v:xm_linesize_1
[SCALAR] adr:1152, bankAdr:36, sBank:0, d:1, a:24, f:hls_transform_unit_ex_hls, v:xm_linesize_2
[SCALAR] adr:1140, bankAdr:32, sBank:29, d:0, a:5, f:hls_transform_unit_ex_hls, v:pixel_shift
[SCALAR] adr:160, bankAdr:4, sBank:8, d:1, a:4, f:hls_transform_unit_ex_hls, v:nPbW
[SCALAR] adr:164, bankAdr:4, sBank:9, d:1, a:6, f:hls_transform_unit_ex_hls, v:nPbH
[SCALAR] adr:580, bankAdr:16, sBank:17, d:0, a:1, f:hls_transform_unit_ex_hls, v:cand_up
[SCALAR] adr:584, bankAdr:16, sBank:18, d:0, a:1, f:hls_transform_unit_ex_hls, v:cand_left
[SCALAR] adr:588, bankAdr:16, sBank:19, d:0, a:1, f:hls_transform_unit_ex_hls, v:cand_up_left
[SCALAR] adr:592, bankAdr:16, sBank:20, d:0, a:3, f:hls_transform_unit_ex_hls, v:cand_up_right_sap
[SCALAR] adr:596, bankAdr:16, sBank:21, d:0, a:3, f:hls_transform_unit_ex_hls, v:cand_up_right
[SCALAR] adr:600, bankAdr:16, sBank:22, d:0, a:12, f:hls_transform_unit_ex_hls, v:cand_bottom_left_i
[SCALAR] adr:600, bankAdr:16, sBank:22, d:0, a:3, f:hls_transform_unit_ex_hls, v:cand_bottom_left_o
[SCALAR] adr:1488, bankAdr:44, sBank:20, d:1, a:3, f:hls_transform_unit_ex_hls, v:cand_up_c
[SCALAR] adr:1492, bankAdr:44, sBank:21, d:1, a:3, f:hls_transform_unit_ex_hls, v:cand_left_c
[SCALAR] adr:1496, bankAdr:44, sBank:22, d:1, a:3, f:hls_transform_unit_ex_hls, v:cand_up_left_c
[SCALAR] adr:1500, bankAdr:44, sBank:23, d:0, a:3, f:hls_transform_unit_ex_hls, v:cand_up_right_sap_c
[SCALAR] adr:1504, bankAdr:44, sBank:24, d:0, a:3, f:hls_transform_unit_ex_hls, v:cand_up_right_c
[SCALAR] adr:1508, bankAdr:44, sBank:25, d:0, a:8, f:hls_transform_unit_ex_hls, v:cand_bottom_left_c_i
[SCALAR] adr:1508, bankAdr:44, sBank:25, d:0, a:3, f:hls_transform_unit_ex_hls, v:cand_bottom_left_c_o
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:15, f:hls_transform_unit_ex_hls, v:log2_ctb_size
[SCALAR] adr:604, bankAdr:16, sBank:23, d:0, a:17, f:hls_transform_unit_ex_hls, v:ctb_up_flag
[SCALAR] adr:608, bankAdr:16, sBank:24, d:0, a:13, f:hls_transform_unit_ex_hls, v:ctb_left_flag
[SCALAR] adr:612, bankAdr:16, sBank:25, d:1, a:7, f:hls_transform_unit_ex_hls, v:ctb_up_left_flag
[SCALAR] adr:616, bankAdr:16, sBank:26, d:1, a:14, f:hls_transform_unit_ex_hls, v:ctb_up_right_flag
[SCALAR] adr:620, bankAdr:16, sBank:27, d:0, a:8, f:hls_transform_unit_ex_hls, v:end_of_tiles_x
[SCALAR] adr:624, bankAdr:16, sBank:28, d:1, a:12, f:hls_transform_unit_ex_hls, v:end_of_tiles_y
[SCALAR] adr:472, bankAdr:12, sBank:22, d:1, a:11, f:hls_transform_unit_ex_hls, v:tu_is_cu_chroma_qp_offset_coded_i
[SCALAR] adr:472, bankAdr:12, sBank:22, d:0, a:4, f:hls_transform_unit_ex_hls, v:tu_is_cu_chroma_qp_offset_coded_o
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:16, f:hls_transform_unit_ex_hls, v:tu_is_cu_qp_delta_coded_i
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:3, f:hls_transform_unit_ex_hls, v:tu_is_cu_qp_delta_coded_o
[SCALAR] adr:468, bankAdr:12, sBank:21, d:0, a:4, f:hls_transform_unit_ex_hls, v:tu_cu_qp_delta
[SCALAR] adr:500, bankAdr:12, sBank:29, d:1, a:0, f:hls_transform_unit_ex_hls, v:tu_cross_pf
[SCALAR] adr:532, bankAdr:16, sBank:5, d:0, a:12, f:hls_transform_unit_ex_hls, v:first_qp_group_i
[SCALAR] adr:532, bankAdr:16, sBank:5, d:0, a:5, f:hls_transform_unit_ex_hls, v:first_qp_group_o
[SCALAR] adr:328, bankAdr:8, sBank:18, d:1, a:8, f:hls_transform_unit_ex_hls, v:chroma_format_idc
[SCALAR] adr:448, bankAdr:12, sBank:16, d:1, a:12, f:hls_transform_unit_ex_hls, v:cu_chroma_qp_offset_enabled_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:0, a:16, f:hls_transform_unit_ex_hls, v:cu_qp_delta_enabled_flag
[SCALAR] adr:540, bankAdr:16, sBank:7, d:1, a:13, f:hls_transform_unit_ex_hls, v:qPy_pred
[SCALAR] adr:436, bankAdr:12, sBank:13, d:0, a:23, f:hls_transform_unit_ex_hls, v:diff_cu_qp_delta_depth
[SCALAR] adr:368, bankAdr:8, sBank:28, d:0, a:13, f:hls_transform_unit_ex_hls, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:1, a:14, f:hls_transform_unit_ex_hls, v:min_cb_width
[SCALAR] adr:460, bankAdr:12, sBank:19, d:1, a:7, f:hls_transform_unit_ex_hls, v:slice_qp
[SCALAR] adr:20, bankAdr:0, sBank:5, d:1, a:11, f:hls_transform_unit_ex_hls_dup1, v:cbf_luma
[SCALAR] adr:16, bankAdr:0, sBank:4, d:1, a:7, f:hls_transform_unit_ex_hls_dup1, v:cbf_data
[SCALAR] adr:1260, bankAdr:36, sBank:27, d:1, a:7, f:hls_transform_unit_ex_hls_dup1, v:dc_min_tb_addr_zs_p
[SCALAR] adr:1156, bankAdr:36, sBank:1, d:1, a:15, f:hls_transform_unit_ex_hls_dup1, v:chroma_qp_offset_list_len_minus1
[SCALAR] adr:1264, bankAdr:36, sBank:28, d:1, a:13, f:hls_transform_unit_ex_hls_dup1, v:dc_cb_qp_offset_list_p
[SCALAR] adr:1268, bankAdr:36, sBank:29, d:1, a:4, f:hls_transform_unit_ex_hls_dup1, v:dc_cr_qp_offset_list_p
[SCALAR] adr:1132, bankAdr:32, sBank:27, d:0, a:9, f:hls_transform_unit_ex_hls_dup1, v:qp_bd_offset
[SCALAR] adr:1272, bankAdr:36, sBank:30, d:0, a:10, f:hls_transform_unit_ex_hls_dup1, v:dc_qp_y_tab_p
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:19, f:hls_transform_unit_ex_hls_dup1, v:pred_mode
[SCALAR] adr:336, bankAdr:8, sBank:20, d:1, a:11, f:hls_transform_unit_ex_hls_dup1, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:1, a:16, f:hls_transform_unit_ex_hls_dup1, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:0, a:13, f:hls_transform_unit_ex_hls_dup1, v:hshift_2
[SCALAR] adr:348, bankAdr:8, sBank:23, d:0, a:18, f:hls_transform_unit_ex_hls_dup1, v:vshift_0
[SCALAR] adr:352, bankAdr:8, sBank:24, d:1, a:12, f:hls_transform_unit_ex_hls_dup1, v:vshift_1
[SCALAR] adr:356, bankAdr:8, sBank:25, d:0, a:9, f:hls_transform_unit_ex_hls_dup1, v:vshift_2
[SCALAR] adr:484, bankAdr:12, sBank:25, d:1, a:8, f:hls_transform_unit_ex_hls_dup1, v:tu_intra_pred_mode
[SCALAR] adr:488, bankAdr:12, sBank:26, d:0, a:16, f:hls_transform_unit_ex_hls_dup1, v:tu_intra_pred_mode_c
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:14, f:hls_transform_unit_ex_hls_dup1, v:cu_transquant_bypass_flag
[SCALAR] adr:492, bankAdr:12, sBank:27, d:1, a:1, f:hls_transform_unit_ex_hls_dup1, v:tu_cu_qp_offset_cb
[SCALAR] adr:496, bankAdr:12, sBank:28, d:1, a:2, f:hls_transform_unit_ex_hls_dup1, v:tu_cu_qp_offset_cr
[SCALAR] adr:536, bankAdr:16, sBank:6, d:0, a:15, f:hls_transform_unit_ex_hls_dup1, v:qp_y_i
[SCALAR] adr:536, bankAdr:16, sBank:6, d:0, a:5, f:hls_transform_unit_ex_hls_dup1, v:qp_y_o
[SCALAR] adr:168, bankAdr:4, sBank:10, d:1, a:6, f:hls_transform_unit_ex_hls_dup1, v:log2_trafo_size
[SCALAR] adr:56, bankAdr:0, sBank:14, d:0, a:21, f:hls_transform_unit_ex_hls_dup1, v:log2_trafo_size_c_i
[SCALAR] adr:56, bankAdr:0, sBank:14, d:0, a:5, f:hls_transform_unit_ex_hls_dup1, v:log2_trafo_size_c_o
[SCALAR] adr:48, bankAdr:0, sBank:12, d:1, a:18, f:hls_transform_unit_ex_hls_dup1, v:scan_idx_i
[SCALAR] adr:48, bankAdr:0, sBank:12, d:1, a:4, f:hls_transform_unit_ex_hls_dup1, v:scan_idx_o
[SCALAR] adr:52, bankAdr:0, sBank:13, d:0, a:5, f:hls_transform_unit_ex_hls_dup1, v:scan_idx_c
[SCALAR] adr:1136, bankAdr:32, sBank:28, d:0, a:14, f:hls_transform_unit_ex_hls_dup1, v:cmdr_run_i
[SCALAR] adr:1136, bankAdr:32, sBank:28, d:0, a:3, f:hls_transform_unit_ex_hls_dup1, v:cmdr_run_o
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:1, a:12, f:hls_transform_unit_ex_hls_dup1, v:buf_data_0
[SCALAR] adr:1244, bankAdr:36, sBank:23, d:1, a:17, f:hls_transform_unit_ex_hls_dup1, v:buf_data_1
[SCALAR] adr:1248, bankAdr:36, sBank:24, d:0, a:14, f:hls_transform_unit_ex_hls_dup1, v:buf_data_2
[SCALAR] adr:1144, bankAdr:32, sBank:30, d:1, a:10, f:hls_transform_unit_ex_hls_dup1, v:xm_linesize_0
[SCALAR] adr:1148, bankAdr:32, sBank:31, d:0, a:17, f:hls_transform_unit_ex_hls_dup1, v:xm_linesize_1
[SCALAR] adr:1152, bankAdr:36, sBank:0, d:0, a:26, f:hls_transform_unit_ex_hls_dup1, v:xm_linesize_2
[SCALAR] adr:1140, bankAdr:32, sBank:29, d:0, a:6, f:hls_transform_unit_ex_hls_dup1, v:pixel_shift
[SCALAR] adr:160, bankAdr:4, sBank:8, d:0, a:5, f:hls_transform_unit_ex_hls_dup1, v:nPbW
[SCALAR] adr:164, bankAdr:4, sBank:9, d:0, a:7, f:hls_transform_unit_ex_hls_dup1, v:nPbH
[SCALAR] adr:580, bankAdr:16, sBank:17, d:1, a:1, f:hls_transform_unit_ex_hls_dup1, v:cand_up
[SCALAR] adr:584, bankAdr:16, sBank:18, d:1, a:1, f:hls_transform_unit_ex_hls_dup1, v:cand_left
[SCALAR] adr:588, bankAdr:16, sBank:19, d:1, a:1, f:hls_transform_unit_ex_hls_dup1, v:cand_up_left
[SCALAR] adr:592, bankAdr:16, sBank:20, d:0, a:4, f:hls_transform_unit_ex_hls_dup1, v:cand_up_right_sap
[SCALAR] adr:596, bankAdr:16, sBank:21, d:1, a:4, f:hls_transform_unit_ex_hls_dup1, v:cand_up_right
[SCALAR] adr:600, bankAdr:16, sBank:22, d:0, a:14, f:hls_transform_unit_ex_hls_dup1, v:cand_bottom_left_i
[SCALAR] adr:600, bankAdr:16, sBank:22, d:1, a:4, f:hls_transform_unit_ex_hls_dup1, v:cand_bottom_left_o
[SCALAR] adr:1488, bankAdr:44, sBank:20, d:1, a:4, f:hls_transform_unit_ex_hls_dup1, v:cand_up_c
[SCALAR] adr:1492, bankAdr:44, sBank:21, d:0, a:5, f:hls_transform_unit_ex_hls_dup1, v:cand_left_c
[SCALAR] adr:1496, bankAdr:44, sBank:22, d:0, a:5, f:hls_transform_unit_ex_hls_dup1, v:cand_up_left_c
[SCALAR] adr:1500, bankAdr:44, sBank:23, d:0, a:4, f:hls_transform_unit_ex_hls_dup1, v:cand_up_right_sap_c
[SCALAR] adr:1504, bankAdr:44, sBank:24, d:1, a:3, f:hls_transform_unit_ex_hls_dup1, v:cand_up_right_c
[SCALAR] adr:1508, bankAdr:44, sBank:25, d:0, a:10, f:hls_transform_unit_ex_hls_dup1, v:cand_bottom_left_c_i
[SCALAR] adr:1508, bankAdr:44, sBank:25, d:1, a:3, f:hls_transform_unit_ex_hls_dup1, v:cand_bottom_left_c_o
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:15, f:hls_transform_unit_ex_hls_dup1, v:log2_ctb_size
[SCALAR] adr:604, bankAdr:16, sBank:23, d:0, a:19, f:hls_transform_unit_ex_hls_dup1, v:ctb_up_flag
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:13, f:hls_transform_unit_ex_hls_dup1, v:ctb_left_flag
[SCALAR] adr:612, bankAdr:16, sBank:25, d:1, a:9, f:hls_transform_unit_ex_hls_dup1, v:ctb_up_left_flag
[SCALAR] adr:616, bankAdr:16, sBank:26, d:0, a:17, f:hls_transform_unit_ex_hls_dup1, v:ctb_up_right_flag
[SCALAR] adr:620, bankAdr:16, sBank:27, d:1, a:8, f:hls_transform_unit_ex_hls_dup1, v:end_of_tiles_x
[SCALAR] adr:624, bankAdr:16, sBank:28, d:1, a:14, f:hls_transform_unit_ex_hls_dup1, v:end_of_tiles_y
[SCALAR] adr:472, bankAdr:12, sBank:22, d:1, a:13, f:hls_transform_unit_ex_hls_dup1, v:tu_is_cu_chroma_qp_offset_coded_i
[SCALAR] adr:472, bankAdr:12, sBank:22, d:1, a:5, f:hls_transform_unit_ex_hls_dup1, v:tu_is_cu_chroma_qp_offset_coded_o
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:18, f:hls_transform_unit_ex_hls_dup1, v:tu_is_cu_qp_delta_coded_i
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:4, f:hls_transform_unit_ex_hls_dup1, v:tu_is_cu_qp_delta_coded_o
[SCALAR] adr:468, bankAdr:12, sBank:21, d:1, a:5, f:hls_transform_unit_ex_hls_dup1, v:tu_cu_qp_delta
[SCALAR] adr:500, bankAdr:12, sBank:29, d:0, a:1, f:hls_transform_unit_ex_hls_dup1, v:tu_cross_pf
[SCALAR] adr:532, bankAdr:16, sBank:5, d:0, a:13, f:hls_transform_unit_ex_hls_dup1, v:first_qp_group_i
[SCALAR] adr:532, bankAdr:16, sBank:5, d:1, a:5, f:hls_transform_unit_ex_hls_dup1, v:first_qp_group_o
[SCALAR] adr:328, bankAdr:8, sBank:18, d:0, a:9, f:hls_transform_unit_ex_hls_dup1, v:chroma_format_idc
[SCALAR] adr:448, bankAdr:12, sBank:16, d:0, a:13, f:hls_transform_unit_ex_hls_dup1, v:cu_chroma_qp_offset_enabled_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:1, a:15, f:hls_transform_unit_ex_hls_dup1, v:cu_qp_delta_enabled_flag
[SCALAR] adr:540, bankAdr:16, sBank:7, d:0, a:15, f:hls_transform_unit_ex_hls_dup1, v:qPy_pred
[SCALAR] adr:436, bankAdr:12, sBank:13, d:1, a:22, f:hls_transform_unit_ex_hls_dup1, v:diff_cu_qp_delta_depth
[SCALAR] adr:368, bankAdr:8, sBank:28, d:0, a:15, f:hls_transform_unit_ex_hls_dup1, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:0, a:16, f:hls_transform_unit_ex_hls_dup1, v:min_cb_width
[SCALAR] adr:460, bankAdr:12, sBank:19, d:0, a:8, f:hls_transform_unit_ex_hls_dup1, v:slice_qp
[SCALAR] adr:20, bankAdr:0, sBank:5, d:1, a:12, f:hls_transform_unit_ex_hls_dup2, v:cbf_luma
[SCALAR] adr:16, bankAdr:0, sBank:4, d:0, a:9, f:hls_transform_unit_ex_hls_dup2, v:cbf_data
[SCALAR] adr:1260, bankAdr:36, sBank:27, d:0, a:10, f:hls_transform_unit_ex_hls_dup2, v:dc_min_tb_addr_zs_p
[SCALAR] adr:1156, bankAdr:36, sBank:1, d:0, a:17, f:hls_transform_unit_ex_hls_dup2, v:chroma_qp_offset_list_len_minus1
[SCALAR] adr:1264, bankAdr:36, sBank:28, d:1, a:15, f:hls_transform_unit_ex_hls_dup2, v:dc_cb_qp_offset_list_p
[SCALAR] adr:1268, bankAdr:36, sBank:29, d:1, a:5, f:hls_transform_unit_ex_hls_dup2, v:dc_cr_qp_offset_list_p
[SCALAR] adr:1132, bankAdr:32, sBank:27, d:1, a:9, f:hls_transform_unit_ex_hls_dup2, v:qp_bd_offset
[SCALAR] adr:1272, bankAdr:36, sBank:30, d:0, a:11, f:hls_transform_unit_ex_hls_dup2, v:dc_qp_y_tab_p
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:20, f:hls_transform_unit_ex_hls_dup2, v:pred_mode
[SCALAR] adr:336, bankAdr:8, sBank:20, d:0, a:12, f:hls_transform_unit_ex_hls_dup2, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:0, a:18, f:hls_transform_unit_ex_hls_dup2, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:0, a:15, f:hls_transform_unit_ex_hls_dup2, v:hshift_2
[SCALAR] adr:348, bankAdr:8, sBank:23, d:0, a:20, f:hls_transform_unit_ex_hls_dup2, v:vshift_0
[SCALAR] adr:352, bankAdr:8, sBank:24, d:0, a:15, f:hls_transform_unit_ex_hls_dup2, v:vshift_1
[SCALAR] adr:356, bankAdr:8, sBank:25, d:0, a:11, f:hls_transform_unit_ex_hls_dup2, v:vshift_2
[SCALAR] adr:484, bankAdr:12, sBank:25, d:1, a:10, f:hls_transform_unit_ex_hls_dup2, v:tu_intra_pred_mode
[SCALAR] adr:488, bankAdr:12, sBank:26, d:1, a:16, f:hls_transform_unit_ex_hls_dup2, v:tu_intra_pred_mode_c
[SCALAR] adr:572, bankAdr:16, sBank:15, d:0, a:16, f:hls_transform_unit_ex_hls_dup2, v:cu_transquant_bypass_flag
[SCALAR] adr:492, bankAdr:12, sBank:27, d:0, a:2, f:hls_transform_unit_ex_hls_dup2, v:tu_cu_qp_offset_cb
[SCALAR] adr:496, bankAdr:12, sBank:28, d:1, a:3, f:hls_transform_unit_ex_hls_dup2, v:tu_cu_qp_offset_cr
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:15, f:hls_transform_unit_ex_hls_dup2, v:qp_y_i
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:5, f:hls_transform_unit_ex_hls_dup2, v:qp_y_o
[SCALAR] adr:168, bankAdr:4, sBank:10, d:0, a:7, f:hls_transform_unit_ex_hls_dup2, v:log2_trafo_size
[SCALAR] adr:56, bankAdr:0, sBank:14, d:1, a:20, f:hls_transform_unit_ex_hls_dup2, v:log2_trafo_size_c_i
[SCALAR] adr:56, bankAdr:0, sBank:14, d:1, a:5, f:hls_transform_unit_ex_hls_dup2, v:log2_trafo_size_c_o
[SCALAR] adr:48, bankAdr:0, sBank:12, d:1, a:19, f:hls_transform_unit_ex_hls_dup2, v:scan_idx_i
[SCALAR] adr:48, bankAdr:0, sBank:12, d:0, a:5, f:hls_transform_unit_ex_hls_dup2, v:scan_idx_o
[SCALAR] adr:52, bankAdr:0, sBank:13, d:1, a:5, f:hls_transform_unit_ex_hls_dup2, v:scan_idx_c
[SCALAR] adr:1136, bankAdr:32, sBank:28, d:0, a:16, f:hls_transform_unit_ex_hls_dup2, v:cmdr_run_i
[SCALAR] adr:1136, bankAdr:32, sBank:28, d:0, a:4, f:hls_transform_unit_ex_hls_dup2, v:cmdr_run_o
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:1, a:14, f:hls_transform_unit_ex_hls_dup2, v:buf_data_0
[SCALAR] adr:1244, bankAdr:36, sBank:23, d:1, a:19, f:hls_transform_unit_ex_hls_dup2, v:buf_data_1
[SCALAR] adr:1248, bankAdr:36, sBank:24, d:1, a:14, f:hls_transform_unit_ex_hls_dup2, v:buf_data_2
[SCALAR] adr:1144, bankAdr:32, sBank:30, d:1, a:11, f:hls_transform_unit_ex_hls_dup2, v:xm_linesize_0
[SCALAR] adr:1148, bankAdr:32, sBank:31, d:1, a:16, f:hls_transform_unit_ex_hls_dup2, v:xm_linesize_1
[SCALAR] adr:1152, bankAdr:36, sBank:0, d:1, a:25, f:hls_transform_unit_ex_hls_dup2, v:xm_linesize_2
[SCALAR] adr:1140, bankAdr:32, sBank:29, d:0, a:7, f:hls_transform_unit_ex_hls_dup2, v:pixel_shift
[SCALAR] adr:160, bankAdr:4, sBank:8, d:1, a:5, f:hls_transform_unit_ex_hls_dup2, v:nPbW
[SCALAR] adr:164, bankAdr:4, sBank:9, d:1, a:7, f:hls_transform_unit_ex_hls_dup2, v:nPbH
[SCALAR] adr:580, bankAdr:16, sBank:17, d:0, a:2, f:hls_transform_unit_ex_hls_dup2, v:cand_up
[SCALAR] adr:584, bankAdr:16, sBank:18, d:0, a:2, f:hls_transform_unit_ex_hls_dup2, v:cand_left
[SCALAR] adr:588, bankAdr:16, sBank:19, d:0, a:2, f:hls_transform_unit_ex_hls_dup2, v:cand_up_left
[SCALAR] adr:592, bankAdr:16, sBank:20, d:0, a:5, f:hls_transform_unit_ex_hls_dup2, v:cand_up_right_sap
[SCALAR] adr:596, bankAdr:16, sBank:21, d:0, a:6, f:hls_transform_unit_ex_hls_dup2, v:cand_up_right
[SCALAR] adr:600, bankAdr:16, sBank:22, d:0, a:16, f:hls_transform_unit_ex_hls_dup2, v:cand_bottom_left_i
[SCALAR] adr:600, bankAdr:16, sBank:22, d:0, a:6, f:hls_transform_unit_ex_hls_dup2, v:cand_bottom_left_o
[SCALAR] adr:1488, bankAdr:44, sBank:20, d:1, a:5, f:hls_transform_unit_ex_hls_dup2, v:cand_up_c
[SCALAR] adr:1492, bankAdr:44, sBank:21, d:1, a:6, f:hls_transform_unit_ex_hls_dup2, v:cand_left_c
[SCALAR] adr:1496, bankAdr:44, sBank:22, d:1, a:6, f:hls_transform_unit_ex_hls_dup2, v:cand_up_left_c
[SCALAR] adr:1500, bankAdr:44, sBank:23, d:0, a:5, f:hls_transform_unit_ex_hls_dup2, v:cand_up_right_sap_c
[SCALAR] adr:1504, bankAdr:44, sBank:24, d:0, a:4, f:hls_transform_unit_ex_hls_dup2, v:cand_up_right_c
[SCALAR] adr:1508, bankAdr:44, sBank:25, d:0, a:12, f:hls_transform_unit_ex_hls_dup2, v:cand_bottom_left_c_i
[SCALAR] adr:1508, bankAdr:44, sBank:25, d:0, a:4, f:hls_transform_unit_ex_hls_dup2, v:cand_bottom_left_c_o
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:18, f:hls_transform_unit_ex_hls_dup2, v:log2_ctb_size
[SCALAR] adr:604, bankAdr:16, sBank:23, d:0, a:21, f:hls_transform_unit_ex_hls_dup2, v:ctb_up_flag
[SCALAR] adr:608, bankAdr:16, sBank:24, d:0, a:16, f:hls_transform_unit_ex_hls_dup2, v:ctb_left_flag
[SCALAR] adr:612, bankAdr:16, sBank:25, d:1, a:11, f:hls_transform_unit_ex_hls_dup2, v:ctb_up_left_flag
[SCALAR] adr:616, bankAdr:16, sBank:26, d:1, a:17, f:hls_transform_unit_ex_hls_dup2, v:ctb_up_right_flag
[SCALAR] adr:620, bankAdr:16, sBank:27, d:0, a:11, f:hls_transform_unit_ex_hls_dup2, v:end_of_tiles_x
[SCALAR] adr:624, bankAdr:16, sBank:28, d:1, a:16, f:hls_transform_unit_ex_hls_dup2, v:end_of_tiles_y
[SCALAR] adr:472, bankAdr:12, sBank:22, d:1, a:15, f:hls_transform_unit_ex_hls_dup2, v:tu_is_cu_chroma_qp_offset_coded_i
[SCALAR] adr:472, bankAdr:12, sBank:22, d:0, a:7, f:hls_transform_unit_ex_hls_dup2, v:tu_is_cu_chroma_qp_offset_coded_o
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:20, f:hls_transform_unit_ex_hls_dup2, v:tu_is_cu_qp_delta_coded_i
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:5, f:hls_transform_unit_ex_hls_dup2, v:tu_is_cu_qp_delta_coded_o
[SCALAR] adr:468, bankAdr:12, sBank:21, d:0, a:7, f:hls_transform_unit_ex_hls_dup2, v:tu_cu_qp_delta
[SCALAR] adr:500, bankAdr:12, sBank:29, d:1, a:1, f:hls_transform_unit_ex_hls_dup2, v:tu_cross_pf
[SCALAR] adr:532, bankAdr:16, sBank:5, d:0, a:14, f:hls_transform_unit_ex_hls_dup2, v:first_qp_group_i
[SCALAR] adr:532, bankAdr:16, sBank:5, d:0, a:6, f:hls_transform_unit_ex_hls_dup2, v:first_qp_group_o
[SCALAR] adr:328, bankAdr:8, sBank:18, d:1, a:9, f:hls_transform_unit_ex_hls_dup2, v:chroma_format_idc
[SCALAR] adr:448, bankAdr:12, sBank:16, d:1, a:13, f:hls_transform_unit_ex_hls_dup2, v:cu_chroma_qp_offset_enabled_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:0, a:17, f:hls_transform_unit_ex_hls_dup2, v:cu_qp_delta_enabled_flag
[SCALAR] adr:540, bankAdr:16, sBank:7, d:1, a:14, f:hls_transform_unit_ex_hls_dup2, v:qPy_pred
[SCALAR] adr:436, bankAdr:12, sBank:13, d:0, a:24, f:hls_transform_unit_ex_hls_dup2, v:diff_cu_qp_delta_depth
[SCALAR] adr:368, bankAdr:8, sBank:28, d:0, a:17, f:hls_transform_unit_ex_hls_dup2, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:1, a:15, f:hls_transform_unit_ex_hls_dup2, v:min_cb_width
[SCALAR] adr:460, bankAdr:12, sBank:19, d:1, a:8, f:hls_transform_unit_ex_hls_dup2, v:slice_qp
[SCALAR] adr:20, bankAdr:0, sBank:5, d:1, a:13, f:hls_transform_unit_ex_hls_dup3, v:cbf_luma
[SCALAR] adr:16, bankAdr:0, sBank:4, d:1, a:8, f:hls_transform_unit_ex_hls_dup3, v:cbf_data
[SCALAR] adr:1260, bankAdr:36, sBank:27, d:1, a:10, f:hls_transform_unit_ex_hls_dup3, v:dc_min_tb_addr_zs_p
[SCALAR] adr:1156, bankAdr:36, sBank:1, d:1, a:16, f:hls_transform_unit_ex_hls_dup3, v:chroma_qp_offset_list_len_minus1
[SCALAR] adr:1264, bankAdr:36, sBank:28, d:1, a:17, f:hls_transform_unit_ex_hls_dup3, v:dc_cb_qp_offset_list_p
[SCALAR] adr:1268, bankAdr:36, sBank:29, d:1, a:6, f:hls_transform_unit_ex_hls_dup3, v:dc_cr_qp_offset_list_p
[SCALAR] adr:1132, bankAdr:32, sBank:27, d:0, a:12, f:hls_transform_unit_ex_hls_dup3, v:qp_bd_offset
[SCALAR] adr:1272, bankAdr:36, sBank:30, d:0, a:12, f:hls_transform_unit_ex_hls_dup3, v:dc_qp_y_tab_p
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:21, f:hls_transform_unit_ex_hls_dup3, v:pred_mode
[SCALAR] adr:336, bankAdr:8, sBank:20, d:1, a:12, f:hls_transform_unit_ex_hls_dup3, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:1, a:17, f:hls_transform_unit_ex_hls_dup3, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:0, a:17, f:hls_transform_unit_ex_hls_dup3, v:hshift_2
[SCALAR] adr:348, bankAdr:8, sBank:23, d:0, a:22, f:hls_transform_unit_ex_hls_dup3, v:vshift_0
[SCALAR] adr:352, bankAdr:8, sBank:24, d:1, a:15, f:hls_transform_unit_ex_hls_dup3, v:vshift_1
[SCALAR] adr:356, bankAdr:8, sBank:25, d:0, a:13, f:hls_transform_unit_ex_hls_dup3, v:vshift_2
[SCALAR] adr:484, bankAdr:12, sBank:25, d:1, a:12, f:hls_transform_unit_ex_hls_dup3, v:tu_intra_pred_mode
[SCALAR] adr:488, bankAdr:12, sBank:26, d:0, a:19, f:hls_transform_unit_ex_hls_dup3, v:tu_intra_pred_mode_c
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:15, f:hls_transform_unit_ex_hls_dup3, v:cu_transquant_bypass_flag
[SCALAR] adr:492, bankAdr:12, sBank:27, d:1, a:2, f:hls_transform_unit_ex_hls_dup3, v:tu_cu_qp_offset_cb
[SCALAR] adr:496, bankAdr:12, sBank:28, d:1, a:4, f:hls_transform_unit_ex_hls_dup3, v:tu_cu_qp_offset_cr
[SCALAR] adr:536, bankAdr:16, sBank:6, d:0, a:16, f:hls_transform_unit_ex_hls_dup3, v:qp_y_i
[SCALAR] adr:536, bankAdr:16, sBank:6, d:0, a:6, f:hls_transform_unit_ex_hls_dup3, v:qp_y_o
[SCALAR] adr:168, bankAdr:4, sBank:10, d:1, a:7, f:hls_transform_unit_ex_hls_dup3, v:log2_trafo_size
[SCALAR] adr:56, bankAdr:0, sBank:14, d:0, a:22, f:hls_transform_unit_ex_hls_dup3, v:log2_trafo_size_c_i
[SCALAR] adr:56, bankAdr:0, sBank:14, d:0, a:6, f:hls_transform_unit_ex_hls_dup3, v:log2_trafo_size_c_o
[SCALAR] adr:48, bankAdr:0, sBank:12, d:1, a:20, f:hls_transform_unit_ex_hls_dup3, v:scan_idx_i
[SCALAR] adr:48, bankAdr:0, sBank:12, d:1, a:5, f:hls_transform_unit_ex_hls_dup3, v:scan_idx_o
[SCALAR] adr:52, bankAdr:0, sBank:13, d:0, a:6, f:hls_transform_unit_ex_hls_dup3, v:scan_idx_c
[SCALAR] adr:1136, bankAdr:32, sBank:28, d:0, a:18, f:hls_transform_unit_ex_hls_dup3, v:cmdr_run_i
[SCALAR] adr:1136, bankAdr:32, sBank:28, d:0, a:5, f:hls_transform_unit_ex_hls_dup3, v:cmdr_run_o
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:1, a:16, f:hls_transform_unit_ex_hls_dup3, v:buf_data_0
[SCALAR] adr:1244, bankAdr:36, sBank:23, d:1, a:21, f:hls_transform_unit_ex_hls_dup3, v:buf_data_1
[SCALAR] adr:1248, bankAdr:36, sBank:24, d:0, a:17, f:hls_transform_unit_ex_hls_dup3, v:buf_data_2
[SCALAR] adr:1144, bankAdr:32, sBank:30, d:1, a:12, f:hls_transform_unit_ex_hls_dup3, v:xm_linesize_0
[SCALAR] adr:1148, bankAdr:32, sBank:31, d:0, a:18, f:hls_transform_unit_ex_hls_dup3, v:xm_linesize_1
[SCALAR] adr:1152, bankAdr:36, sBank:0, d:0, a:27, f:hls_transform_unit_ex_hls_dup3, v:xm_linesize_2
[SCALAR] adr:1140, bankAdr:32, sBank:29, d:0, a:8, f:hls_transform_unit_ex_hls_dup3, v:pixel_shift
[SCALAR] adr:160, bankAdr:4, sBank:8, d:0, a:6, f:hls_transform_unit_ex_hls_dup3, v:nPbW
[SCALAR] adr:164, bankAdr:4, sBank:9, d:0, a:8, f:hls_transform_unit_ex_hls_dup3, v:nPbH
[SCALAR] adr:580, bankAdr:16, sBank:17, d:1, a:2, f:hls_transform_unit_ex_hls_dup3, v:cand_up
[SCALAR] adr:584, bankAdr:16, sBank:18, d:1, a:2, f:hls_transform_unit_ex_hls_dup3, v:cand_left
[SCALAR] adr:588, bankAdr:16, sBank:19, d:1, a:2, f:hls_transform_unit_ex_hls_dup3, v:cand_up_left
[SCALAR] adr:592, bankAdr:16, sBank:20, d:0, a:6, f:hls_transform_unit_ex_hls_dup3, v:cand_up_right_sap
[SCALAR] adr:596, bankAdr:16, sBank:21, d:1, a:7, f:hls_transform_unit_ex_hls_dup3, v:cand_up_right
[SCALAR] adr:600, bankAdr:16, sBank:22, d:0, a:18, f:hls_transform_unit_ex_hls_dup3, v:cand_bottom_left_i
[SCALAR] adr:600, bankAdr:16, sBank:22, d:1, a:7, f:hls_transform_unit_ex_hls_dup3, v:cand_bottom_left_o
[SCALAR] adr:1488, bankAdr:44, sBank:20, d:1, a:6, f:hls_transform_unit_ex_hls_dup3, v:cand_up_c
[SCALAR] adr:1492, bankAdr:44, sBank:21, d:0, a:8, f:hls_transform_unit_ex_hls_dup3, v:cand_left_c
[SCALAR] adr:1496, bankAdr:44, sBank:22, d:0, a:8, f:hls_transform_unit_ex_hls_dup3, v:cand_up_left_c
[SCALAR] adr:1500, bankAdr:44, sBank:23, d:0, a:6, f:hls_transform_unit_ex_hls_dup3, v:cand_up_right_sap_c
[SCALAR] adr:1504, bankAdr:44, sBank:24, d:1, a:4, f:hls_transform_unit_ex_hls_dup3, v:cand_up_right_c
[SCALAR] adr:1508, bankAdr:44, sBank:25, d:0, a:14, f:hls_transform_unit_ex_hls_dup3, v:cand_bottom_left_c_i
[SCALAR] adr:1508, bankAdr:44, sBank:25, d:1, a:4, f:hls_transform_unit_ex_hls_dup3, v:cand_bottom_left_c_o
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:18, f:hls_transform_unit_ex_hls_dup3, v:log2_ctb_size
[SCALAR] adr:604, bankAdr:16, sBank:23, d:0, a:23, f:hls_transform_unit_ex_hls_dup3, v:ctb_up_flag
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:16, f:hls_transform_unit_ex_hls_dup3, v:ctb_left_flag
[SCALAR] adr:612, bankAdr:16, sBank:25, d:1, a:13, f:hls_transform_unit_ex_hls_dup3, v:ctb_up_left_flag
[SCALAR] adr:616, bankAdr:16, sBank:26, d:0, a:20, f:hls_transform_unit_ex_hls_dup3, v:ctb_up_right_flag
[SCALAR] adr:620, bankAdr:16, sBank:27, d:1, a:11, f:hls_transform_unit_ex_hls_dup3, v:end_of_tiles_x
[SCALAR] adr:624, bankAdr:16, sBank:28, d:1, a:18, f:hls_transform_unit_ex_hls_dup3, v:end_of_tiles_y
[SCALAR] adr:472, bankAdr:12, sBank:22, d:1, a:17, f:hls_transform_unit_ex_hls_dup3, v:tu_is_cu_chroma_qp_offset_coded_i
[SCALAR] adr:472, bankAdr:12, sBank:22, d:1, a:8, f:hls_transform_unit_ex_hls_dup3, v:tu_is_cu_chroma_qp_offset_coded_o
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:22, f:hls_transform_unit_ex_hls_dup3, v:tu_is_cu_qp_delta_coded_i
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:6, f:hls_transform_unit_ex_hls_dup3, v:tu_is_cu_qp_delta_coded_o
[SCALAR] adr:468, bankAdr:12, sBank:21, d:1, a:8, f:hls_transform_unit_ex_hls_dup3, v:tu_cu_qp_delta
[SCALAR] adr:500, bankAdr:12, sBank:29, d:0, a:2, f:hls_transform_unit_ex_hls_dup3, v:tu_cross_pf
[SCALAR] adr:532, bankAdr:16, sBank:5, d:0, a:15, f:hls_transform_unit_ex_hls_dup3, v:first_qp_group_i
[SCALAR] adr:532, bankAdr:16, sBank:5, d:1, a:6, f:hls_transform_unit_ex_hls_dup3, v:first_qp_group_o
[SCALAR] adr:328, bankAdr:8, sBank:18, d:0, a:10, f:hls_transform_unit_ex_hls_dup3, v:chroma_format_idc
[SCALAR] adr:448, bankAdr:12, sBank:16, d:0, a:14, f:hls_transform_unit_ex_hls_dup3, v:cu_chroma_qp_offset_enabled_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:1, a:16, f:hls_transform_unit_ex_hls_dup3, v:cu_qp_delta_enabled_flag
[SCALAR] adr:540, bankAdr:16, sBank:7, d:0, a:16, f:hls_transform_unit_ex_hls_dup3, v:qPy_pred
[SCALAR] adr:436, bankAdr:12, sBank:13, d:1, a:23, f:hls_transform_unit_ex_hls_dup3, v:diff_cu_qp_delta_depth
[SCALAR] adr:368, bankAdr:8, sBank:28, d:0, a:19, f:hls_transform_unit_ex_hls_dup3, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:0, a:17, f:hls_transform_unit_ex_hls_dup3, v:min_cb_width
[SCALAR] adr:460, bankAdr:12, sBank:19, d:0, a:9, f:hls_transform_unit_ex_hls_dup3, v:slice_qp
[SCALAR] adr:336, bankAdr:8, sBank:20, d:0, a:13, f:init_intra_neighbors_chroma_hls, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:0, a:19, f:init_intra_neighbors_chroma_hls, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:0, a:19, f:init_intra_neighbors_chroma_hls, v:hshift_2
[SCALAR] adr:348, bankAdr:8, sBank:23, d:0, a:24, f:init_intra_neighbors_chroma_hls, v:vshift_0
[SCALAR] adr:352, bankAdr:8, sBank:24, d:0, a:18, f:init_intra_neighbors_chroma_hls, v:vshift_1
[SCALAR] adr:356, bankAdr:8, sBank:25, d:0, a:15, f:init_intra_neighbors_chroma_hls, v:vshift_2
[SCALAR] adr:372, bankAdr:8, sBank:29, d:1, a:7, f:init_intra_neighbors_chroma_hls, v:log2_min_pu_size
[SCALAR] adr:376, bankAdr:8, sBank:30, d:0, a:13, f:init_intra_neighbors_chroma_hls, v:log2_min_tb_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:19, f:init_intra_neighbors_chroma_hls, v:log2_ctb_size
[SCALAR] adr:404, bankAdr:12, sBank:5, d:1, a:14, f:init_intra_neighbors_chroma_hls, v:tb_mask
[SCALAR] adr:408, bankAdr:12, sBank:6, d:1, a:16, f:init_intra_neighbors_chroma_hls, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:1, a:9, f:init_intra_neighbors_chroma_hls, v:height
[SCALAR] adr:172, bankAdr:4, sBank:11, d:0, a:18, f:init_intra_neighbors_chroma_hls, v:log2_width
[SCALAR] adr:176, bankAdr:4, sBank:12, d:0, a:22, f:init_intra_neighbors_chroma_hls, v:log2_height
[SCALAR] adr:424, bankAdr:12, sBank:10, d:0, a:14, f:init_intra_neighbors_chroma_hls, v:constrained_intra_pred_flag
[SCALAR] adr:1260, bankAdr:36, sBank:27, d:0, a:13, f:init_intra_neighbors_chroma_hls, v:dc_min_tb_addr_zs_p
[SCALAR] adr:1508, bankAdr:44, sBank:25, d:1, a:14, f:init_intra_neighbors_chroma_hls, v:cand_bottom_left_c
[SCALAR] adr:1492, bankAdr:44, sBank:21, d:1, a:18, f:init_intra_neighbors_chroma_hls, v:cand_left_c
[SCALAR] adr:1496, bankAdr:44, sBank:22, d:1, a:18, f:init_intra_neighbors_chroma_hls, v:cand_up_left_c
[SCALAR] adr:1488, bankAdr:44, sBank:20, d:1, a:13, f:init_intra_neighbors_chroma_hls, v:cand_up_c
[SCALAR] adr:1504, bankAdr:44, sBank:24, d:1, a:17, f:init_intra_neighbors_chroma_hls, v:cand_up_right_c
[SCALAR] adr:684, bankAdr:20, sBank:11, d:0, a:4, f:init_intra_neighbors_chroma_hls, v:numIntraNeighbor_c
[SCALAR] adr:688, bankAdr:20, sBank:12, d:0, a:6, f:init_intra_neighbors_chroma_hls, v:totalUnits_c
[SCALAR] adr:692, bankAdr:20, sBank:13, d:1, a:6, f:init_intra_neighbors_chroma_hls, v:aboveUnits_c
[SCALAR] adr:696, bankAdr:20, sBank:14, d:1, a:6, f:init_intra_neighbors_chroma_hls, v:leftUnits_c
[SCALAR] adr:700, bankAdr:20, sBank:15, d:1, a:4, f:init_intra_neighbors_chroma_hls, v:unitWidth_c
[SCALAR] adr:704, bankAdr:20, sBank:16, d:1, a:2, f:init_intra_neighbors_chroma_hls, v:unitHeight_c
[SCALAR] adr:708, bankAdr:20, sBank:17, d:0, a:3, f:init_intra_neighbors_chroma_hls, v:log2TrSize_c
[SCALAR] adr:712, bankAdr:20, sBank:18, d:1, a:10, f:init_intra_neighbors_chroma_hls, v:bNeighborFlags_c_0_i
[SCALAR] adr:716, bankAdr:20, sBank:19, d:0, a:10, f:init_intra_neighbors_chroma_hls, v:bNeighborFlags_c_1_i
[SCALAR] adr:720, bankAdr:20, sBank:20, d:0, a:14, f:init_intra_neighbors_chroma_hls, v:bNeighborFlags_c_2_i
[SCALAR] adr:712, bankAdr:20, sBank:18, d:0, a:3, f:init_intra_neighbors_chroma_hls, v:bNeighborFlags_c_0_o
[SCALAR] adr:716, bankAdr:20, sBank:19, d:0, a:3, f:init_intra_neighbors_chroma_hls, v:bNeighborFlags_c_1_o
[SCALAR] adr:720, bankAdr:20, sBank:20, d:0, a:7, f:init_intra_neighbors_chroma_hls, v:bNeighborFlags_c_2_o
[SCALAR] adr:396, bankAdr:12, sBank:3, d:1, a:4, f:init_intra_neighbors_chroma_hls, v:min_pu_width
[SCALAR] adr:1276, bankAdr:36, sBank:31, d:1, a:17, f:init_intra_neighbors_chroma_hls, v:dc_tab_mvf_pred_flag_row_p
[SCALAR] adr:180, bankAdr:4, sBank:13, d:0, a:25, f:init_intra_neighbors_chroma_hls, v:predColBuf_0
[SCALAR] adr:184, bankAdr:4, sBank:14, d:1, a:21, f:init_intra_neighbors_chroma_hls, v:predColBuf_1
[SCALAR] adr:188, bankAdr:4, sBank:15, d:0, a:17, f:init_intra_neighbors_chroma_hls, v:predColBuf_2
[SCALAR] adr:192, bankAdr:4, sBank:16, d:1, a:14, f:init_intra_neighbors_chroma_hls, v:predColBuf_3
[SCALAR] adr:196, bankAdr:4, sBank:17, d:1, a:10, f:init_intra_neighbors_chroma_hls, v:predColBuf_4
[SCALAR] adr:200, bankAdr:4, sBank:18, d:0, a:11, f:init_intra_neighbors_chroma_hls, v:predColBuf_5
[SCALAR] adr:204, bankAdr:4, sBank:19, d:1, a:10, f:init_intra_neighbors_chroma_hls, v:predColBuf_6
[SCALAR] adr:208, bankAdr:4, sBank:20, d:1, a:14, f:init_intra_neighbors_chroma_hls, v:predColBuf_7
[SCALAR] adr:212, bankAdr:4, sBank:21, d:0, a:20, f:init_intra_neighbors_chroma_hls, v:predColBuf_8
[SCALAR] adr:216, bankAdr:4, sBank:22, d:0, a:20, f:init_intra_neighbors_chroma_hls, v:predColBuf_9
[SCALAR] adr:220, bankAdr:4, sBank:23, d:1, a:23, f:init_intra_neighbors_chroma_hls, v:predColBuf_10
[SCALAR] adr:224, bankAdr:4, sBank:24, d:0, a:19, f:init_intra_neighbors_chroma_hls, v:predColBuf_11
[SCALAR] adr:228, bankAdr:4, sBank:25, d:0, a:16, f:init_intra_neighbors_chroma_hls, v:predColBuf_12
[SCALAR] adr:232, bankAdr:4, sBank:26, d:0, a:21, f:init_intra_neighbors_chroma_hls, v:predColBuf_13
[SCALAR] adr:236, bankAdr:4, sBank:27, d:1, a:12, f:init_intra_neighbors_chroma_hls, v:predColBuf_14
[SCALAR] adr:240, bankAdr:4, sBank:28, d:1, a:19, f:init_intra_neighbors_chroma_hls, v:predColBuf_15
[SCALAR] adr:244, bankAdr:4, sBank:29, d:0, a:9, f:init_intra_neighbors_chroma_hls, v:predColBuf_16
[SCALAR] adr:452, bankAdr:12, sBank:17, d:0, a:11, f:init_intra_neighbors_chroma_hls, v:slice_type
[SCALAR] adr:336, bankAdr:8, sBank:20, d:0, a:15, f:init_intra_neighbors_hls, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:1, a:19, f:init_intra_neighbors_hls, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:1, a:19, f:init_intra_neighbors_hls, v:hshift_2
[SCALAR] adr:348, bankAdr:8, sBank:23, d:0, a:25, f:init_intra_neighbors_hls, v:vshift_0
[SCALAR] adr:352, bankAdr:8, sBank:24, d:1, a:18, f:init_intra_neighbors_hls, v:vshift_1
[SCALAR] adr:356, bankAdr:8, sBank:25, d:1, a:15, f:init_intra_neighbors_hls, v:vshift_2
[SCALAR] adr:372, bankAdr:8, sBank:29, d:1, a:8, f:init_intra_neighbors_hls, v:log2_min_pu_size
[SCALAR] adr:376, bankAdr:8, sBank:30, d:1, a:13, f:init_intra_neighbors_hls, v:log2_min_tb_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:20, f:init_intra_neighbors_hls, v:log2_ctb_size
[SCALAR] adr:404, bankAdr:12, sBank:5, d:0, a:16, f:init_intra_neighbors_hls, v:tb_mask
[SCALAR] adr:408, bankAdr:12, sBank:6, d:0, a:17, f:init_intra_neighbors_hls, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:0, a:11, f:init_intra_neighbors_hls, v:height
[SCALAR] adr:172, bankAdr:4, sBank:11, d:1, a:17, f:init_intra_neighbors_hls, v:log2_width
[SCALAR] adr:176, bankAdr:4, sBank:12, d:1, a:21, f:init_intra_neighbors_hls, v:log2_height
[SCALAR] adr:424, bankAdr:12, sBank:10, d:1, a:13, f:init_intra_neighbors_hls, v:constrained_intra_pred_flag
[SCALAR] adr:1260, bankAdr:36, sBank:27, d:0, a:14, f:init_intra_neighbors_hls, v:dc_min_tb_addr_zs_p
[SCALAR] adr:600, bankAdr:16, sBank:22, d:0, a:21, f:init_intra_neighbors_hls, v:cand_bottom_left
[SCALAR] adr:584, bankAdr:16, sBank:18, d:1, a:11, f:init_intra_neighbors_hls, v:cand_left
[SCALAR] adr:588, bankAdr:16, sBank:19, d:1, a:11, f:init_intra_neighbors_hls, v:cand_up_left
[SCALAR] adr:580, bankAdr:16, sBank:17, d:1, a:11, f:init_intra_neighbors_hls, v:cand_up
[SCALAR] adr:596, bankAdr:16, sBank:21, d:0, a:21, f:init_intra_neighbors_hls, v:cand_up_right
[SCALAR] adr:644, bankAdr:20, sBank:1, d:0, a:1, f:init_intra_neighbors_hls, v:numIntraNeighbor
[SCALAR] adr:648, bankAdr:20, sBank:2, d:0, a:1, f:init_intra_neighbors_hls, v:totalUnits
[SCALAR] adr:652, bankAdr:20, sBank:3, d:0, a:4, f:init_intra_neighbors_hls, v:aboveUnits
[SCALAR] adr:656, bankAdr:20, sBank:4, d:0, a:4, f:init_intra_neighbors_hls, v:leftUnits
[SCALAR] adr:660, bankAdr:20, sBank:5, d:0, a:7, f:init_intra_neighbors_hls, v:unitWidth
[SCALAR] adr:664, bankAdr:20, sBank:6, d:1, a:6, f:init_intra_neighbors_hls, v:unitHeight
[SCALAR] adr:668, bankAdr:20, sBank:7, d:0, a:8, f:init_intra_neighbors_hls, v:log2TrSize
[SCALAR] adr:672, bankAdr:20, sBank:8, d:0, a:12, f:init_intra_neighbors_hls, v:bNeighborFlags_0_i
[SCALAR] adr:676, bankAdr:20, sBank:9, d:1, a:13, f:init_intra_neighbors_hls, v:bNeighborFlags_1_i
[SCALAR] adr:680, bankAdr:20, sBank:10, d:0, a:15, f:init_intra_neighbors_hls, v:bNeighborFlags_2_i
[SCALAR] adr:672, bankAdr:20, sBank:8, d:1, a:6, f:init_intra_neighbors_hls, v:bNeighborFlags_0_o
[SCALAR] adr:676, bankAdr:20, sBank:9, d:1, a:8, f:init_intra_neighbors_hls, v:bNeighborFlags_1_o
[SCALAR] adr:680, bankAdr:20, sBank:10, d:0, a:8, f:init_intra_neighbors_hls, v:bNeighborFlags_2_o
[SCALAR] adr:396, bankAdr:12, sBank:3, d:0, a:6, f:init_intra_neighbors_hls, v:min_pu_width
[SCALAR] adr:1276, bankAdr:36, sBank:31, d:0, a:19, f:init_intra_neighbors_hls, v:dc_tab_mvf_pred_flag_row_p
[SCALAR] adr:180, bankAdr:4, sBank:13, d:1, a:24, f:init_intra_neighbors_hls, v:predColBuf_0
[SCALAR] adr:184, bankAdr:4, sBank:14, d:0, a:23, f:init_intra_neighbors_hls, v:predColBuf_1
[SCALAR] adr:188, bankAdr:4, sBank:15, d:1, a:16, f:init_intra_neighbors_hls, v:predColBuf_2
[SCALAR] adr:192, bankAdr:4, sBank:16, d:0, a:15, f:init_intra_neighbors_hls, v:predColBuf_3
[SCALAR] adr:196, bankAdr:4, sBank:17, d:0, a:12, f:init_intra_neighbors_hls, v:predColBuf_4
[SCALAR] adr:200, bankAdr:4, sBank:18, d:0, a:12, f:init_intra_neighbors_hls, v:predColBuf_5
[SCALAR] adr:204, bankAdr:4, sBank:19, d:0, a:12, f:init_intra_neighbors_hls, v:predColBuf_6
[SCALAR] adr:208, bankAdr:4, sBank:20, d:1, a:15, f:init_intra_neighbors_hls, v:predColBuf_7
[SCALAR] adr:212, bankAdr:4, sBank:21, d:1, a:20, f:init_intra_neighbors_hls, v:predColBuf_8
[SCALAR] adr:216, bankAdr:4, sBank:22, d:1, a:20, f:init_intra_neighbors_hls, v:predColBuf_9
[SCALAR] adr:220, bankAdr:4, sBank:23, d:1, a:24, f:init_intra_neighbors_hls, v:predColBuf_10
[SCALAR] adr:224, bankAdr:4, sBank:24, d:0, a:20, f:init_intra_neighbors_hls, v:predColBuf_11
[SCALAR] adr:228, bankAdr:4, sBank:25, d:0, a:17, f:init_intra_neighbors_hls, v:predColBuf_12
[SCALAR] adr:232, bankAdr:4, sBank:26, d:0, a:22, f:init_intra_neighbors_hls, v:predColBuf_13
[SCALAR] adr:236, bankAdr:4, sBank:27, d:1, a:13, f:init_intra_neighbors_hls, v:predColBuf_14
[SCALAR] adr:240, bankAdr:4, sBank:28, d:0, a:20, f:init_intra_neighbors_hls, v:predColBuf_15
[SCALAR] adr:244, bankAdr:4, sBank:29, d:0, a:10, f:init_intra_neighbors_hls, v:predColBuf_16
[SCALAR] adr:452, bankAdr:12, sBank:17, d:1, a:12, f:init_intra_neighbors_hls, v:slice_type
[SCALAR] adr:640, bankAdr:20, sBank:0, d:1, a:26, f:innerloop_ff_hevc_extract_rbsp_1_hls, v:zero_i
[SCALAR] adr:640, bankAdr:20, sBank:0, d:1, a:8, f:innerloop_ff_hevc_extract_rbsp_1_hls, v:zero_o
[SCALAR] adr:1116, bankAdr:32, sBank:23, d:0, a:26, f:innerloop_ff_hevc_extract_rbsp_1_hls, v:loop_init
[SCALAR] adr:1124, bankAdr:32, sBank:25, d:1, a:16, f:innerloop_ff_hevc_extract_rbsp_1_hls, v:loop_len
[SCALAR] adr:1120, bankAdr:32, sBank:24, d:1, a:19, f:innerloop_ff_hevc_extract_rbsp_1_hls, v:loop_inc
[SCALAR] adr:1128, bankAdr:32, sBank:26, d:0, a:3, f:innerloop_ff_hevc_extract_rbsp_1_hls, v:loop_cnt
[SCALAR] adr:632, bankAdr:16, sBank:30, d:0, a:14, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:si_loop_i
[SCALAR] adr:632, bankAdr:16, sBank:30, d:1, a:0, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:si_loop_o
[SCALAR] adr:636, bankAdr:16, sBank:31, d:1, a:18, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:di_loop_i
[SCALAR] adr:636, bankAdr:16, sBank:31, d:0, a:0, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:di_loop_o
[SCALAR] adr:640, bankAdr:20, sBank:0, d:0, a:28, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:zero_i
[SCALAR] adr:640, bankAdr:20, sBank:0, d:0, a:9, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:zero_o
[SCALAR] adr:628, bankAdr:16, sBank:29, d:1, a:9, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:skipped_bytes_i
[SCALAR] adr:628, bankAdr:16, sBank:29, d:1, a:2, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:skipped_bytes_o
[ARRAY] adr:8232, bankAdr:40, aBank:0, d:0, a:0, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:skipped_bytes_pos_d0
[SCALAR] adr:1116, bankAdr:32, sBank:23, d:1, a:25, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:loop_init
[SCALAR] adr:1124, bankAdr:32, sBank:25, d:0, a:18, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:loop_len
[SCALAR] adr:1120, bankAdr:32, sBank:24, d:0, a:21, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:loop_inc
[SCALAR] adr:1128, bankAdr:32, sBank:26, d:1, a:3, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:loop_cnt
[SCALAR] adr:520, bankAdr:16, sBank:2, d:1, a:16, f:intra_prediction_unit_ex_hls, v:prev_intra_luma_pred_flag_0_i
[SCALAR] adr:520, bankAdr:16, sBank:2, d:1, a:1, f:intra_prediction_unit_ex_hls, v:prev_intra_luma_pred_flag_0_o
[SCALAR] adr:521, bankAdr:17, sBank:2, d:0, a:18, f:intra_prediction_unit_ex_hls, v:prev_intra_luma_pred_flag_1_i
[SCALAR] adr:521, bankAdr:17, sBank:2, d:0, a:2, f:intra_prediction_unit_ex_hls, v:prev_intra_luma_pred_flag_1_o
[SCALAR] adr:522, bankAdr:18, sBank:2, d:1, a:17, f:intra_prediction_unit_ex_hls, v:prev_intra_luma_pred_flag_2_i
[SCALAR] adr:522, bankAdr:18, sBank:2, d:1, a:2, f:intra_prediction_unit_ex_hls, v:prev_intra_luma_pred_flag_2_o
[SCALAR] adr:523, bankAdr:19, sBank:2, d:0, a:19, f:intra_prediction_unit_ex_hls, v:prev_intra_luma_pred_flag_3_i
[SCALAR] adr:523, bankAdr:19, sBank:2, d:0, a:3, f:intra_prediction_unit_ex_hls, v:prev_intra_luma_pred_flag_3_o
[SCALAR] adr:564, bankAdr:16, sBank:13, d:0, a:26, f:intra_prediction_unit_ex_hls, v:part_mode
[SCALAR] adr:396, bankAdr:12, sBank:3, d:1, a:5, f:intra_prediction_unit_ex_hls, v:min_pu_width
[SCALAR] adr:372, bankAdr:8, sBank:29, d:0, a:11, f:intra_prediction_unit_ex_hls, v:log2_min_pu_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:21, f:intra_prediction_unit_ex_hls, v:log2_ctb_size
[SCALAR] adr:604, bankAdr:16, sBank:23, d:0, a:27, f:intra_prediction_unit_ex_hls, v:ctb_up_flag
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:20, f:intra_prediction_unit_ex_hls, v:ctb_left_flag
[SCALAR] adr:512, bankAdr:16, sBank:0, d:1, a:27, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_0_i
[SCALAR] adr:512, bankAdr:16, sBank:0, d:1, a:9, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_0_o
[SCALAR] adr:513, bankAdr:17, sBank:0, d:0, a:29, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_1_i
[SCALAR] adr:513, bankAdr:17, sBank:0, d:0, a:10, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_1_o
[SCALAR] adr:514, bankAdr:18, sBank:0, d:1, a:28, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_2_i
[SCALAR] adr:514, bankAdr:18, sBank:0, d:1, a:10, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_2_o
[SCALAR] adr:515, bankAdr:19, sBank:0, d:0, a:30, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_3_i
[SCALAR] adr:515, bankAdr:19, sBank:0, d:0, a:11, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_3_o
[SCALAR] adr:508, bankAdr:12, sBank:31, d:1, a:0, f:intra_prediction_unit_ex_hls, v:pu_chroma_mode_c_0
[SCALAR] adr:509, bankAdr:13, sBank:31, d:0, a:1, f:intra_prediction_unit_ex_hls, v:pu_chroma_mode_c_1
[SCALAR] adr:510, bankAdr:14, sBank:31, d:1, a:1, f:intra_prediction_unit_ex_hls, v:pu_chroma_mode_c_2
[SCALAR] adr:511, bankAdr:15, sBank:31, d:0, a:2, f:intra_prediction_unit_ex_hls, v:pu_chroma_mode_c_3
[SCALAR] adr:516, bankAdr:16, sBank:1, d:1, a:1, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_c_0
[SCALAR] adr:517, bankAdr:17, sBank:1, d:0, a:2, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_c_1
[SCALAR] adr:518, bankAdr:18, sBank:1, d:1, a:2, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_c_2
[SCALAR] adr:519, bankAdr:19, sBank:1, d:0, a:3, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_c_3
[SCALAR] adr:324, bankAdr:8, sBank:17, d:0, a:13, f:intra_prediction_unit_ex_hls, v:chroma_array_type
[SCALAR] adr:576, bankAdr:16, sBank:16, d:0, a:3, f:intra_prediction_unit_ex_hls, v:max_trafo_depth
[SCALAR] adr:384, bankAdr:12, sBank:0, d:1, a:29, f:intra_prediction_unit_ex_hls, v:max_transform_hierarchy_depth_intra
[SCALAR] adr:568, bankAdr:16, sBank:14, d:1, a:22, f:intra_prediction_unit_ex_hls, v:intra_split_flag
[SCALAR] adr:1252, bankAdr:36, sBank:25, d:1, a:17, f:intra_prediction_unit_ex_hls, v:dc_tab_ipm_p
[SCALAR] adr:372, bankAdr:8, sBank:29, d:1, a:10, f:set_tab_mvf_pred_flag_hls, v:log2_min_pu_size
[SCALAR] adr:396, bankAdr:12, sBank:3, d:0, a:7, f:set_tab_mvf_pred_flag_hls, v:min_pu_width
[SCALAR] adr:172, bankAdr:4, sBank:11, d:0, a:19, f:set_tab_mvf_pred_flag_hls, v:log2_width
[SCALAR] adr:1276, bankAdr:36, sBank:31, d:0, a:20, f:set_tab_mvf_pred_flag_hls, v:dc_tab_mvf_pred_flag_row_p
[SCALAR] adr:180, bankAdr:4, sBank:13, d:1, a:25, f:set_tab_mvf_pred_flag_hls, v:predColBuf_0_i
[SCALAR] adr:180, bankAdr:4, sBank:13, d:0, a:7, f:set_tab_mvf_pred_flag_hls, v:predColBuf_0_o
[SCALAR] adr:184, bankAdr:4, sBank:14, d:0, a:24, f:set_tab_mvf_pred_flag_hls, v:predColBuf_1_i
[SCALAR] adr:184, bankAdr:4, sBank:14, d:0, a:7, f:set_tab_mvf_pred_flag_hls, v:predColBuf_1_o
[SCALAR] adr:188, bankAdr:4, sBank:15, d:0, a:18, f:set_tab_mvf_pred_flag_hls, v:predColBuf_2_i
[SCALAR] adr:188, bankAdr:4, sBank:15, d:0, a:5, f:set_tab_mvf_pred_flag_hls, v:predColBuf_2_o
[SCALAR] adr:192, bankAdr:4, sBank:16, d:1, a:15, f:set_tab_mvf_pred_flag_hls, v:predColBuf_3_i
[SCALAR] adr:192, bankAdr:4, sBank:16, d:1, a:3, f:set_tab_mvf_pred_flag_hls, v:predColBuf_3_o
[SCALAR] adr:196, bankAdr:4, sBank:17, d:1, a:13, f:set_tab_mvf_pred_flag_hls, v:predColBuf_4_i
[SCALAR] adr:196, bankAdr:4, sBank:17, d:1, a:3, f:set_tab_mvf_pred_flag_hls, v:predColBuf_4_o
[SCALAR] adr:200, bankAdr:4, sBank:18, d:1, a:12, f:set_tab_mvf_pred_flag_hls, v:predColBuf_5_i
[SCALAR] adr:200, bankAdr:4, sBank:18, d:1, a:3, f:set_tab_mvf_pred_flag_hls, v:predColBuf_5_o
[SCALAR] adr:204, bankAdr:4, sBank:19, d:1, a:12, f:set_tab_mvf_pred_flag_hls, v:predColBuf_6_i
[SCALAR] adr:204, bankAdr:4, sBank:19, d:1, a:3, f:set_tab_mvf_pred_flag_hls, v:predColBuf_6_o
[SCALAR] adr:208, bankAdr:4, sBank:20, d:0, a:16, f:set_tab_mvf_pred_flag_hls, v:predColBuf_7_i
[SCALAR] adr:208, bankAdr:4, sBank:20, d:1, a:7, f:set_tab_mvf_pred_flag_hls, v:predColBuf_7_o
[SCALAR] adr:212, bankAdr:4, sBank:21, d:0, a:22, f:set_tab_mvf_pred_flag_hls, v:predColBuf_8_i
[SCALAR] adr:212, bankAdr:4, sBank:21, d:0, a:9, f:set_tab_mvf_pred_flag_hls, v:predColBuf_8_o
[SCALAR] adr:216, bankAdr:4, sBank:22, d:0, a:22, f:set_tab_mvf_pred_flag_hls, v:predColBuf_9_i
[SCALAR] adr:216, bankAdr:4, sBank:22, d:0, a:9, f:set_tab_mvf_pred_flag_hls, v:predColBuf_9_o
[SCALAR] adr:220, bankAdr:4, sBank:23, d:1, a:26, f:set_tab_mvf_pred_flag_hls, v:predColBuf_10_i
[SCALAR] adr:220, bankAdr:4, sBank:23, d:0, a:7, f:set_tab_mvf_pred_flag_hls, v:predColBuf_10_o
[SCALAR] adr:224, bankAdr:4, sBank:24, d:0, a:22, f:set_tab_mvf_pred_flag_hls, v:predColBuf_11_i
[SCALAR] adr:224, bankAdr:4, sBank:24, d:0, a:5, f:set_tab_mvf_pred_flag_hls, v:predColBuf_11_o
[SCALAR] adr:228, bankAdr:4, sBank:25, d:0, a:19, f:set_tab_mvf_pred_flag_hls, v:predColBuf_12_i
[SCALAR] adr:228, bankAdr:4, sBank:25, d:0, a:5, f:set_tab_mvf_pred_flag_hls, v:predColBuf_12_o
[SCALAR] adr:232, bankAdr:4, sBank:26, d:0, a:23, f:set_tab_mvf_pred_flag_hls, v:predColBuf_13_i
[SCALAR] adr:232, bankAdr:4, sBank:26, d:0, a:4, f:set_tab_mvf_pred_flag_hls, v:predColBuf_13_o
[SCALAR] adr:236, bankAdr:4, sBank:27, d:0, a:15, f:set_tab_mvf_pred_flag_hls, v:predColBuf_14_i
[SCALAR] adr:236, bankAdr:4, sBank:27, d:0, a:3, f:set_tab_mvf_pred_flag_hls, v:predColBuf_14_o
[SCALAR] adr:240, bankAdr:4, sBank:28, d:1, a:20, f:set_tab_mvf_pred_flag_hls, v:predColBuf_15_i
[SCALAR] adr:240, bankAdr:4, sBank:28, d:1, a:5, f:set_tab_mvf_pred_flag_hls, v:predColBuf_15_o
[SCALAR] adr:244, bankAdr:4, sBank:29, d:0, a:12, f:set_tab_mvf_pred_flag_hls, v:predColBuf_16_i
[SCALAR] adr:244, bankAdr:4, sBank:29, d:0, a:3, f:set_tab_mvf_pred_flag_hls, v:predColBuf_16_o





func_bank_num: 32,4,4





func_bank_depth: 64,16384,16777216





max_partition: 4





func_scalar_bank_mux_num: {31,30},{18,17},{20,18},{8,6},{10,9},{17,15},{18,17},{17,15},{13,12},{14,14},{16,14},{20,18},{23,22},{27,26},{25,23},{19,17},{16,16},{14,14},{13,13},{13,13},{17,16},{23,21},{23,21},{28,27},{23,21},{20,18},{24,22},{16,14},{21,21},{13,11},{15,14},{21,19}

func_scalar_max_mux_num: 31;

func_array_bank_mux_num: 2,1,1,1

func_array_max_mux_num: 2;

func_cyclic_bank_mux_num: 1,1,1,1

func_cyclic_max_mux_num: 1;


*/


`define enable_connect_innerloop_ff_hevc_extract_rbsp_1_hls
`define enable_connect_innerloop_ff_hevc_extract_rbsp_2_hls
`define enable_connect_fill_ref_samples_mtdma_top_wrp
`define enable_connect_hevc_find_frame_end_hls
`define enable_connect_intra_prediction_unit_ex_hls
`define enable_connect_hls_transform_unit_ex_hls
`define enable_connect_hls_transform_unit_ex_hls_dup1
`define enable_connect_hls_transform_unit_ex_hls_dup2
`define enable_connect_hls_transform_unit_ex_hls_dup3
`define enable_connect_hls_transform_tree_hls
`define enable_connect_hls_transform_tree_hls_dup1
`define enable_connect_hls_transform_tree_hls_dup2
`define enable_connect_hls_transform_tree_hls_dup3
`define enable_connect_hls_coding_quadtree_hls
`define enable_connect_hls_coding_quadtree_hls_dup1
`define enable_connect_hls_coding_quadtree_hls_dup2
`define enable_connect_hls_coding_quadtree_hls_dup3
`define enable_connect_hls_coding_unit_hls
`define enable_connect_hls_coding_unit_hls_dup1
`define enable_connect_hls_coding_unit_hls_dup2
`define enable_connect_hls_coding_unit_hls_dup3
`define enable_connect_copy_top_left_pixel_hls
`define enable_connect_genPredCol_hls
`define enable_connect_ff_hevc_get_sub_cu_zscan_id_hls
`define enable_connect_ff_hevc_skip_flag_decode_hls
`define enable_connect_ff_hevc_set_qPy_hls
`define enable_connect_hls_decode_neighbour_hls
`define enable_connect_set_tab_mvf_pred_flag_hls
`define enable_connect_init_intra_neighbors_hls
`define enable_connect_init_intra_neighbors_chroma_hls
`define enable_connect_ff_hevc_set_neighbour_available_hls

module custom_connection import hls_long_tail_pkg::*, xcache_param_pkg::*;
(
    input                               clk,
    input                               rstn,
    //ap interface
    input                               ap_arb_start        [HLS_NUM],
    input                               ap_arb_ret          [HLS_NUM],
    output logic                        ap_start            [HLS_NUM],
    input                               ap_ready            [HLS_NUM],
    input                               ap_idle             [HLS_NUM],
    input                               ap_done             [HLS_NUM],
    input [7:0]                         ap_part             [HLS_NUM],

    //dual port bank in scalar range
    output logic                        scalar_argVld       [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM],
    input                               scalar_argAck       [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM],
    output logic [XMEM_AW-1:0]          scalar_adr          [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM],
    output logic [SCALAR_BANK_DW-1:0]   scalar_wdat         [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM],
    input [SCALAR_BANK_DW-1:0]          scalar_rdat         [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM],
    input                               scalar_rdat_vld     [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM],

    //single port bank in array range
    input                               array_argRdy        [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM],
    output logic                        array_ap_ce         [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM],
    output logic                        array_argVld        [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM],
    input                               array_argAck        [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM],
    output logic [XMEM_AW-1:0]          array_adr           [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM],
    output logic [ARRAY_BANK_DW-1:0]    array_wdat          [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM],
    input [ARRAY_BANK_DW-1:0]           array_rdat          [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM],
    input                               array_rdat_vld      [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM],
    //wide port bank in cyclic range
    input                               cyclic_argRdy       [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM],
    output logic                        cyclic_ap_ce        [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM],
    output logic                        cyclic_argVld       [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM],
    input                               cyclic_argAck       [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM],
    output logic [XMEM_AW-1:0]          cyclic_adr          [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM],
    output logic [CYCLIC_BANK_DW-1:0]   cyclic_wdat         [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM],
    input [CYCLIC_BANK_DW-1:0]          cyclic_rdat         [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM],
    input                               cyclic_rdat_vld     [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM],


    //hls function connection 
    output logic                               innerloop_ff_hevc_extract_rbsp_1_hls_ready,
    output logic [7:0]                         innerloop_ff_hevc_extract_rbsp_1_hls_zero_i,
    input        [7:0]                         innerloop_ff_hevc_extract_rbsp_1_hls_zero_o,
    input                                      innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_ap_vld,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_1_hls_loop_init,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_1_hls_loop_len,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_1_hls_loop_inc,
    input        [31:0]                        innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt,
    input                                      innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_ap_vld,
    output logic                               innerloop_ff_hevc_extract_rbsp_2_hls_ready,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_i,
    input        [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o,
    input                                      innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_ap_vld,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_i,
    input        [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o,
    input                                      innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_ap_vld,
    output logic [7:0]                         innerloop_ff_hevc_extract_rbsp_2_hls_zero_i,
    input        [7:0]                         innerloop_ff_hevc_extract_rbsp_2_hls_zero_o,
    input                                      innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_ap_vld,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_i,
    input        [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o,
    input                                      innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_ap_vld,
    input        [9:0]                         innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_pos_address0,
    input                                      innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_pos_ce0,
    input                                      innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_pos_we0,
    input        [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_pos_d0,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_loop_init,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_loop_len,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_loop_inc,
    input        [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt,
    input                                      innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_ap_vld,
    output logic                               fill_ref_samples_mtdma_top_wrp_ready,
    output logic [5:0]                         fill_ref_samples_mtdma_top_wrp_numIntraNeighbor,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_totalUnits,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_aboveUnits,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_leftUnits,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_unitWidth,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_unitHeight,
    output logic [2:0]                         fill_ref_samples_mtdma_top_wrp_log2TrSize,
    output logic [31:0]                        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_0,
    output logic [31:0]                        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_1,
    output logic                               fill_ref_samples_mtdma_top_wrp_bNeighborFlags_2,
    output logic [5:0]                         fill_ref_samples_mtdma_top_wrp_numIntraNeighbor_c,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_totalUnits_c,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_aboveUnits_c,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_leftUnits_c,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_unitWidth_c,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_unitHeight_c,
    output logic [2:0]                         fill_ref_samples_mtdma_top_wrp_log2TrSize_c,
    output logic [31:0]                        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_c_0,
    output logic [31:0]                        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_c_1,
    output logic                               fill_ref_samples_mtdma_top_wrp_bNeighborFlags_c_2,
    output logic                               hevc_find_frame_end_hls_ready,
    output logic [31:0]                        hevc_find_frame_end_hls_state64_0_i,
    output logic [31:0]                        hevc_find_frame_end_hls_state64_1_i,
    input        [31:0]                        hevc_find_frame_end_hls_state64_0_o,
    input                                      hevc_find_frame_end_hls_state64_0_o_ap_vld,
    input        [31:0]                        hevc_find_frame_end_hls_state64_1_o,
    input                                      hevc_find_frame_end_hls_state64_1_o_ap_vld,
    output logic [31:0]                        hevc_find_frame_end_hls_frame_start_found_i,
    input        [31:0]                        hevc_find_frame_end_hls_frame_start_found_o,
    input                                      hevc_find_frame_end_hls_frame_start_found_o_ap_vld,
    output logic                               intra_prediction_unit_ex_hls_ready,
    output logic [7:0]                         intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_i,
    input        [7:0]                         intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o,
    input                                      intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_ap_vld,
    output logic [7:0]                         intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_i,
    input        [7:0]                         intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o,
    input                                      intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_ap_vld,
    output logic [7:0]                         intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_i,
    input        [7:0]                         intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o,
    input                                      intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_ap_vld,
    output logic [7:0]                         intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_i,
    input        [7:0]                         intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o,
    input                                      intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_ap_vld,
    output logic [7:0]                         intra_prediction_unit_ex_hls_part_mode,
    output logic [31:0]                        intra_prediction_unit_ex_hls_min_pu_width,
    output logic [31:0]                        intra_prediction_unit_ex_hls_log2_min_pu_size,
    output logic [31:0]                        intra_prediction_unit_ex_hls_log2_ctb_size,
    output logic [7:0]                         intra_prediction_unit_ex_hls_ctb_up_flag,
    output logic [7:0]                         intra_prediction_unit_ex_hls_ctb_left_flag,
    output logic [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_i,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o,
    input                                      intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_ap_vld,
    output logic [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_i,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o,
    input                                      intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_ap_vld,
    output logic [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_i,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o,
    input                                      intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_ap_vld,
    output logic [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_i,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o,
    input                                      intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_ap_vld,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_chroma_mode_c_0,
    input                                      intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_ap_vld,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_chroma_mode_c_1,
    input                                      intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_ap_vld,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_chroma_mode_c_2,
    input                                      intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_ap_vld,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_chroma_mode_c_3,
    input                                      intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_ap_vld,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0,
    input                                      intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_ap_vld,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1,
    input                                      intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_ap_vld,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2,
    input                                      intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_ap_vld,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3,
    input                                      intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_ap_vld,
    output logic [31:0]                        intra_prediction_unit_ex_hls_chroma_array_type,
    input        [7:0]                         intra_prediction_unit_ex_hls_max_trafo_depth,
    input                                      intra_prediction_unit_ex_hls_max_trafo_depth_ap_vld,
    output logic [31:0]                        intra_prediction_unit_ex_hls_max_transform_hierarchy_depth_intra,
    output logic [7:0]                         intra_prediction_unit_ex_hls_intra_split_flag,
    output logic [31:0]                        intra_prediction_unit_ex_hls_dc_tab_ipm_p,
    output logic                               hls_transform_unit_ex_hls_ready,
    output logic [31:0]                        hls_transform_unit_ex_hls_cbf_luma,
    output logic [7:0]                         hls_transform_unit_ex_hls_cbf_data,
    output logic [31:0]                        hls_transform_unit_ex_hls_dc_min_tb_addr_zs_p,
    output logic [7:0]                         hls_transform_unit_ex_hls_chroma_qp_offset_list_len_minus1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dc_cb_qp_offset_list_p,
    output logic [31:0]                        hls_transform_unit_ex_hls_dc_cr_qp_offset_list_p,
    output logic [31:0]                        hls_transform_unit_ex_hls_qp_bd_offset,
    output logic [31:0]                        hls_transform_unit_ex_hls_dc_qp_y_tab_p,
    output logic [7:0]                         hls_transform_unit_ex_hls_pred_mode,
    output logic [31:0]                        hls_transform_unit_ex_hls_hshift_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_hshift_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_hshift_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_vshift_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_vshift_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_vshift_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_tu_intra_pred_mode,
    output logic [31:0]                        hls_transform_unit_ex_hls_tu_intra_pred_mode_c,
    output logic [7:0]                         hls_transform_unit_ex_hls_cu_transquant_bypass_flag,
    input        [7:0]                         hls_transform_unit_ex_hls_tu_cu_qp_offset_cb,
    input                                      hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_tu_cu_qp_offset_cr,
    input                                      hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_qp_y_i,
    input        [7:0]                         hls_transform_unit_ex_hls_qp_y_o,
    input                                      hls_transform_unit_ex_hls_qp_y_o_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_log2_trafo_size,
    input                                      hls_transform_unit_ex_hls_log2_trafo_size_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_log2_trafo_size_c_i,
    input        [7:0]                         hls_transform_unit_ex_hls_log2_trafo_size_c_o,
    input                                      hls_transform_unit_ex_hls_log2_trafo_size_c_o_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_scan_idx_i,
    input        [7:0]                         hls_transform_unit_ex_hls_scan_idx_o,
    input                                      hls_transform_unit_ex_hls_scan_idx_o_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_scan_idx_c,
    input                                      hls_transform_unit_ex_hls_scan_idx_c_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_cmdr_run_i,
    input        [7:0]                         hls_transform_unit_ex_hls_cmdr_run_o,
    input                                      hls_transform_unit_ex_hls_cmdr_run_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_buf_data_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_buf_data_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_buf_data_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_xm_linesize_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_xm_linesize_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_xm_linesize_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_pixel_shift,
    input        [31:0]                        hls_transform_unit_ex_hls_nPbW,
    input                                      hls_transform_unit_ex_hls_nPbW_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_nPbH,
    input                                      hls_transform_unit_ex_hls_nPbH_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_up,
    input                                      hls_transform_unit_ex_hls_cand_up_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_left,
    input                                      hls_transform_unit_ex_hls_cand_left_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_up_left,
    input                                      hls_transform_unit_ex_hls_cand_up_left_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_up_right_sap,
    input                                      hls_transform_unit_ex_hls_cand_up_right_sap_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_up_right,
    input                                      hls_transform_unit_ex_hls_cand_up_right_ap_vld,
    output logic                               hls_transform_unit_ex_hls_cand_bottom_left_i,
    input                                      hls_transform_unit_ex_hls_cand_bottom_left_o,
    input                                      hls_transform_unit_ex_hls_cand_bottom_left_o_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_up_c,
    input                                      hls_transform_unit_ex_hls_cand_up_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_left_c,
    input                                      hls_transform_unit_ex_hls_cand_left_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_up_left_c,
    input                                      hls_transform_unit_ex_hls_cand_up_left_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_up_right_sap_c,
    input                                      hls_transform_unit_ex_hls_cand_up_right_sap_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_up_right_c,
    input                                      hls_transform_unit_ex_hls_cand_up_right_c_ap_vld,
    output logic                               hls_transform_unit_ex_hls_cand_bottom_left_c_i,
    input                                      hls_transform_unit_ex_hls_cand_bottom_left_c_o,
    input                                      hls_transform_unit_ex_hls_cand_bottom_left_c_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_log2_ctb_size,
    output logic                               hls_transform_unit_ex_hls_ctb_up_flag,
    output logic                               hls_transform_unit_ex_hls_ctb_left_flag,
    output logic                               hls_transform_unit_ex_hls_ctb_up_left_flag,
    output logic                               hls_transform_unit_ex_hls_ctb_up_right_flag,
    output logic [15:0]                        hls_transform_unit_ex_hls_end_of_tiles_x,
    output logic [15:0]                        hls_transform_unit_ex_hls_end_of_tiles_y,
    output logic [7:0]                         hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_i,
    input        [7:0]                         hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o,
    input                                      hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_i,
    input        [7:0]                         hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o,
    input                                      hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_tu_cu_qp_delta,
    input                                      hls_transform_unit_ex_hls_tu_cu_qp_delta_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_tu_cross_pf,
    input                                      hls_transform_unit_ex_hls_tu_cross_pf_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_first_qp_group_i,
    input        [7:0]                         hls_transform_unit_ex_hls_first_qp_group_o,
    input                                      hls_transform_unit_ex_hls_first_qp_group_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_chroma_format_idc,
    output logic [7:0]                         hls_transform_unit_ex_hls_cu_chroma_qp_offset_enabled_flag,
    output logic [7:0]                         hls_transform_unit_ex_hls_cu_qp_delta_enabled_flag,
    output logic [31:0]                        hls_transform_unit_ex_hls_qPy_pred,
    output logic [31:0]                        hls_transform_unit_ex_hls_diff_cu_qp_delta_depth,
    output logic [31:0]                        hls_transform_unit_ex_hls_log2_min_cb_size,
    output logic [31:0]                        hls_transform_unit_ex_hls_min_cb_width,
    output logic [7:0]                         hls_transform_unit_ex_hls_slice_qp,
    output logic                               hls_transform_unit_ex_hls_dup1_ready,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_cbf_luma,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_cbf_data,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_dc_min_tb_addr_zs_p,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_chroma_qp_offset_list_len_minus1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_dc_cb_qp_offset_list_p,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_dc_cr_qp_offset_list_p,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_qp_bd_offset,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_dc_qp_y_tab_p,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_pred_mode,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_hshift_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_hshift_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_hshift_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_vshift_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_vshift_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_vshift_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_tu_intra_pred_mode,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_tu_intra_pred_mode_c,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_cu_transquant_bypass_flag,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb,
    input                                      hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr,
    input                                      hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_qp_y_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_qp_y_o,
    input                                      hls_transform_unit_ex_hls_dup1_qp_y_o_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup1_log2_trafo_size,
    input                                      hls_transform_unit_ex_hls_dup1_log2_trafo_size_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o,
    input                                      hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_scan_idx_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_scan_idx_o,
    input                                      hls_transform_unit_ex_hls_dup1_scan_idx_o_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_scan_idx_c,
    input                                      hls_transform_unit_ex_hls_dup1_scan_idx_c_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_cmdr_run_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_cmdr_run_o,
    input                                      hls_transform_unit_ex_hls_dup1_cmdr_run_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_buf_data_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_buf_data_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_buf_data_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_xm_linesize_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_xm_linesize_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_xm_linesize_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_pixel_shift,
    input        [31:0]                        hls_transform_unit_ex_hls_dup1_nPbW,
    input                                      hls_transform_unit_ex_hls_dup1_nPbW_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup1_nPbH,
    input                                      hls_transform_unit_ex_hls_dup1_nPbH_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_left,
    input                                      hls_transform_unit_ex_hls_dup1_cand_left_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_left,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_left_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_right_sap,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_right_sap_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_right,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_right_ap_vld,
    output logic                               hls_transform_unit_ex_hls_dup1_cand_bottom_left_i,
    input                                      hls_transform_unit_ex_hls_dup1_cand_bottom_left_o,
    input                                      hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_c,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_left_c,
    input                                      hls_transform_unit_ex_hls_dup1_cand_left_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_left_c,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_left_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_right_c,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_right_c_ap_vld,
    output logic                               hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_i,
    input                                      hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o,
    input                                      hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_log2_ctb_size,
    output logic                               hls_transform_unit_ex_hls_dup1_ctb_up_flag,
    output logic                               hls_transform_unit_ex_hls_dup1_ctb_left_flag,
    output logic                               hls_transform_unit_ex_hls_dup1_ctb_up_left_flag,
    output logic                               hls_transform_unit_ex_hls_dup1_ctb_up_right_flag,
    output logic [15:0]                        hls_transform_unit_ex_hls_dup1_end_of_tiles_x,
    output logic [15:0]                        hls_transform_unit_ex_hls_dup1_end_of_tiles_y,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o,
    input                                      hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o,
    input                                      hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta,
    input                                      hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_tu_cross_pf,
    input                                      hls_transform_unit_ex_hls_dup1_tu_cross_pf_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_first_qp_group_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_first_qp_group_o,
    input                                      hls_transform_unit_ex_hls_dup1_first_qp_group_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_chroma_format_idc,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_cu_chroma_qp_offset_enabled_flag,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_cu_qp_delta_enabled_flag,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_qPy_pred,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_diff_cu_qp_delta_depth,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_log2_min_cb_size,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_min_cb_width,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_slice_qp,
    output logic                               hls_transform_unit_ex_hls_dup2_ready,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_cbf_luma,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_cbf_data,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_dc_min_tb_addr_zs_p,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_chroma_qp_offset_list_len_minus1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_dc_cb_qp_offset_list_p,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_dc_cr_qp_offset_list_p,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_qp_bd_offset,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_dc_qp_y_tab_p,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_pred_mode,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_hshift_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_hshift_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_hshift_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_vshift_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_vshift_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_vshift_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_tu_intra_pred_mode,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_tu_intra_pred_mode_c,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_cu_transquant_bypass_flag,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb,
    input                                      hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr,
    input                                      hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_qp_y_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_qp_y_o,
    input                                      hls_transform_unit_ex_hls_dup2_qp_y_o_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup2_log2_trafo_size,
    input                                      hls_transform_unit_ex_hls_dup2_log2_trafo_size_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o,
    input                                      hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_scan_idx_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_scan_idx_o,
    input                                      hls_transform_unit_ex_hls_dup2_scan_idx_o_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_scan_idx_c,
    input                                      hls_transform_unit_ex_hls_dup2_scan_idx_c_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_cmdr_run_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_cmdr_run_o,
    input                                      hls_transform_unit_ex_hls_dup2_cmdr_run_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_buf_data_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_buf_data_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_buf_data_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_xm_linesize_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_xm_linesize_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_xm_linesize_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_pixel_shift,
    input        [31:0]                        hls_transform_unit_ex_hls_dup2_nPbW,
    input                                      hls_transform_unit_ex_hls_dup2_nPbW_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup2_nPbH,
    input                                      hls_transform_unit_ex_hls_dup2_nPbH_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_left,
    input                                      hls_transform_unit_ex_hls_dup2_cand_left_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_left,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_left_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_right_sap,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_right_sap_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_right,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_right_ap_vld,
    output logic                               hls_transform_unit_ex_hls_dup2_cand_bottom_left_i,
    input                                      hls_transform_unit_ex_hls_dup2_cand_bottom_left_o,
    input                                      hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_c,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_left_c,
    input                                      hls_transform_unit_ex_hls_dup2_cand_left_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_left_c,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_left_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_right_c,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_right_c_ap_vld,
    output logic                               hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_i,
    input                                      hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o,
    input                                      hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_log2_ctb_size,
    output logic                               hls_transform_unit_ex_hls_dup2_ctb_up_flag,
    output logic                               hls_transform_unit_ex_hls_dup2_ctb_left_flag,
    output logic                               hls_transform_unit_ex_hls_dup2_ctb_up_left_flag,
    output logic                               hls_transform_unit_ex_hls_dup2_ctb_up_right_flag,
    output logic [15:0]                        hls_transform_unit_ex_hls_dup2_end_of_tiles_x,
    output logic [15:0]                        hls_transform_unit_ex_hls_dup2_end_of_tiles_y,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o,
    input                                      hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o,
    input                                      hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta,
    input                                      hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_tu_cross_pf,
    input                                      hls_transform_unit_ex_hls_dup2_tu_cross_pf_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_first_qp_group_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_first_qp_group_o,
    input                                      hls_transform_unit_ex_hls_dup2_first_qp_group_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_chroma_format_idc,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_cu_chroma_qp_offset_enabled_flag,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_cu_qp_delta_enabled_flag,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_qPy_pred,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_diff_cu_qp_delta_depth,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_log2_min_cb_size,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_min_cb_width,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_slice_qp,
    output logic                               hls_transform_unit_ex_hls_dup3_ready,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_cbf_luma,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_cbf_data,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_dc_min_tb_addr_zs_p,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_chroma_qp_offset_list_len_minus1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_dc_cb_qp_offset_list_p,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_dc_cr_qp_offset_list_p,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_qp_bd_offset,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_dc_qp_y_tab_p,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_pred_mode,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_hshift_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_hshift_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_hshift_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_vshift_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_vshift_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_vshift_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_tu_intra_pred_mode,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_tu_intra_pred_mode_c,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_cu_transquant_bypass_flag,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb,
    input                                      hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr,
    input                                      hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_qp_y_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_qp_y_o,
    input                                      hls_transform_unit_ex_hls_dup3_qp_y_o_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup3_log2_trafo_size,
    input                                      hls_transform_unit_ex_hls_dup3_log2_trafo_size_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o,
    input                                      hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_scan_idx_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_scan_idx_o,
    input                                      hls_transform_unit_ex_hls_dup3_scan_idx_o_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_scan_idx_c,
    input                                      hls_transform_unit_ex_hls_dup3_scan_idx_c_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_cmdr_run_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_cmdr_run_o,
    input                                      hls_transform_unit_ex_hls_dup3_cmdr_run_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_buf_data_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_buf_data_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_buf_data_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_xm_linesize_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_xm_linesize_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_xm_linesize_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_pixel_shift,
    input        [31:0]                        hls_transform_unit_ex_hls_dup3_nPbW,
    input                                      hls_transform_unit_ex_hls_dup3_nPbW_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup3_nPbH,
    input                                      hls_transform_unit_ex_hls_dup3_nPbH_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_left,
    input                                      hls_transform_unit_ex_hls_dup3_cand_left_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_left,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_left_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_right_sap,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_right_sap_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_right,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_right_ap_vld,
    output logic                               hls_transform_unit_ex_hls_dup3_cand_bottom_left_i,
    input                                      hls_transform_unit_ex_hls_dup3_cand_bottom_left_o,
    input                                      hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_c,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_left_c,
    input                                      hls_transform_unit_ex_hls_dup3_cand_left_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_left_c,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_left_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_right_c,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_right_c_ap_vld,
    output logic                               hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_i,
    input                                      hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o,
    input                                      hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_log2_ctb_size,
    output logic                               hls_transform_unit_ex_hls_dup3_ctb_up_flag,
    output logic                               hls_transform_unit_ex_hls_dup3_ctb_left_flag,
    output logic                               hls_transform_unit_ex_hls_dup3_ctb_up_left_flag,
    output logic                               hls_transform_unit_ex_hls_dup3_ctb_up_right_flag,
    output logic [15:0]                        hls_transform_unit_ex_hls_dup3_end_of_tiles_x,
    output logic [15:0]                        hls_transform_unit_ex_hls_dup3_end_of_tiles_y,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o,
    input                                      hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o,
    input                                      hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta,
    input                                      hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_tu_cross_pf,
    input                                      hls_transform_unit_ex_hls_dup3_tu_cross_pf_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_first_qp_group_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_first_qp_group_o,
    input                                      hls_transform_unit_ex_hls_dup3_first_qp_group_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_chroma_format_idc,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_cu_chroma_qp_offset_enabled_flag,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_cu_qp_delta_enabled_flag,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_qPy_pred,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_diff_cu_qp_delta_depth,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_log2_min_cb_size,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_min_cb_width,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_slice_qp,
    output logic                               hls_transform_tree_hls_ready,
    input        [31:0]                        hls_transform_tree_hls_log2_trafo_size,
    input                                      hls_transform_tree_hls_log2_trafo_size_ap_vld,
    input        [7:0]                         hls_transform_tree_hls_split_transform_flag,
    input                                      hls_transform_tree_hls_split_transform_flag_ap_vld,
    input        [7:0]                         hls_transform_tree_hls_cbf_data,
    input                                      hls_transform_tree_hls_cbf_data_ap_vld,
    output logic [7:0]                         hls_transform_tree_hls_disable_deblocking_filter_flag,
    output logic [7:0]                         hls_transform_tree_hls_transquant_bypass_enable_flag,
    output logic [7:0]                         hls_transform_tree_hls_cu_transquant_bypass_flag,
    input        [31:0]                        hls_transform_tree_hls_tu_chroma_mode_c,
    input                                      hls_transform_tree_hls_tu_chroma_mode_c_ap_vld,
    input        [31:0]                        hls_transform_tree_hls_tu_intra_pred_mode,
    input                                      hls_transform_tree_hls_tu_intra_pred_mode_ap_vld,
    input        [31:0]                        hls_transform_tree_hls_tu_intra_pred_mode_c,
    input                                      hls_transform_tree_hls_tu_intra_pred_mode_c_ap_vld,
    output logic [7:0]                         hls_transform_tree_hls_pu_chroma_mode_c_0,
    output logic [7:0]                         hls_transform_tree_hls_pu_chroma_mode_c_1,
    output logic [7:0]                         hls_transform_tree_hls_pu_chroma_mode_c_2,
    output logic [7:0]                         hls_transform_tree_hls_pu_chroma_mode_c_3,
    output logic [7:0]                         hls_transform_tree_hls_pu_intra_pred_mode_0,
    output logic [7:0]                         hls_transform_tree_hls_pu_intra_pred_mode_1,
    output logic [7:0]                         hls_transform_tree_hls_pu_intra_pred_mode_2,
    output logic [7:0]                         hls_transform_tree_hls_pu_intra_pred_mode_3,
    output logic [7:0]                         hls_transform_tree_hls_pu_intra_pred_mode_c_0,
    output logic [7:0]                         hls_transform_tree_hls_pu_intra_pred_mode_c_1,
    output logic [7:0]                         hls_transform_tree_hls_pu_intra_pred_mode_c_2,
    output logic [7:0]                         hls_transform_tree_hls_pu_intra_pred_mode_c_3,
    output logic [7:0]                         hls_transform_tree_hls_intra_split_flag,
    output logic [31:0]                        hls_transform_tree_hls_log2_max_trafo_size,
    output logic [31:0]                        hls_transform_tree_hls_log2_min_tb_size,
    output logic [7:0]                         hls_transform_tree_hls_max_trafo_depth,
    output logic [31:0]                        hls_transform_tree_hls_max_transform_hierarchy_depth_inter,
    output logic [7:0]                         hls_transform_tree_hls_pred_mode,
    output logic [7:0]                         hls_transform_tree_hls_part_mode,
    output logic [31:0]                        hls_transform_tree_hls_chroma_array_type,
    output logic [31:0]                        hls_transform_tree_hls_chroma_format_idc,
    output logic [31:0]                        hls_transform_tree_hls_cbf_luma_i,
    input        [31:0]                        hls_transform_tree_hls_cbf_luma_o,
    input                                      hls_transform_tree_hls_cbf_luma_o_ap_vld,
    output logic [31:0]                        hls_transform_tree_hls_rv_hls_transform_unit,
    output logic [31:0]                        hls_transform_tree_hls_rv_ff_hevc_deblocking_boundary_strengths,
    output logic [31:0]                        hls_transform_tree_hls_rv_set_deblocking_bypass,
    output logic [31:0]                        hls_transform_tree_hls_rv_callback_flag,
    output logic [31:0]                        hls_transform_tree_hls_min_tb_width,
    output logic [31:0]                        hls_transform_tree_hls_log2_ctb_size,
    output logic                               hls_transform_tree_hls_dup1_ready,
    input        [31:0]                        hls_transform_tree_hls_dup1_log2_trafo_size,
    input                                      hls_transform_tree_hls_dup1_log2_trafo_size_ap_vld,
    input        [7:0]                         hls_transform_tree_hls_dup1_split_transform_flag,
    input                                      hls_transform_tree_hls_dup1_split_transform_flag_ap_vld,
    input        [7:0]                         hls_transform_tree_hls_dup1_cbf_data,
    input                                      hls_transform_tree_hls_dup1_cbf_data_ap_vld,
    output logic [7:0]                         hls_transform_tree_hls_dup1_disable_deblocking_filter_flag,
    output logic [7:0]                         hls_transform_tree_hls_dup1_transquant_bypass_enable_flag,
    output logic [7:0]                         hls_transform_tree_hls_dup1_cu_transquant_bypass_flag,
    input        [31:0]                        hls_transform_tree_hls_dup1_tu_chroma_mode_c,
    input                                      hls_transform_tree_hls_dup1_tu_chroma_mode_c_ap_vld,
    input        [31:0]                        hls_transform_tree_hls_dup1_tu_intra_pred_mode,
    input                                      hls_transform_tree_hls_dup1_tu_intra_pred_mode_ap_vld,
    input        [31:0]                        hls_transform_tree_hls_dup1_tu_intra_pred_mode_c,
    input                                      hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_ap_vld,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_chroma_mode_c_0,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_chroma_mode_c_1,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_chroma_mode_c_2,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_chroma_mode_c_3,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_intra_pred_mode_0,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_intra_pred_mode_1,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_intra_pred_mode_2,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_intra_pred_mode_3,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_intra_pred_mode_c_0,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_intra_pred_mode_c_1,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_intra_pred_mode_c_2,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_intra_pred_mode_c_3,
    output logic [7:0]                         hls_transform_tree_hls_dup1_intra_split_flag,
    output logic [31:0]                        hls_transform_tree_hls_dup1_log2_max_trafo_size,
    output logic [31:0]                        hls_transform_tree_hls_dup1_log2_min_tb_size,
    output logic [7:0]                         hls_transform_tree_hls_dup1_max_trafo_depth,
    output logic [31:0]                        hls_transform_tree_hls_dup1_max_transform_hierarchy_depth_inter,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pred_mode,
    output logic [7:0]                         hls_transform_tree_hls_dup1_part_mode,
    output logic [31:0]                        hls_transform_tree_hls_dup1_chroma_array_type,
    output logic [31:0]                        hls_transform_tree_hls_dup1_chroma_format_idc,
    output logic [31:0]                        hls_transform_tree_hls_dup1_cbf_luma_i,
    input        [31:0]                        hls_transform_tree_hls_dup1_cbf_luma_o,
    input                                      hls_transform_tree_hls_dup1_cbf_luma_o_ap_vld,
    output logic [31:0]                        hls_transform_tree_hls_dup1_rv_hls_transform_unit,
    output logic [31:0]                        hls_transform_tree_hls_dup1_rv_ff_hevc_deblocking_boundary_strengths,
    output logic [31:0]                        hls_transform_tree_hls_dup1_rv_set_deblocking_bypass,
    output logic [31:0]                        hls_transform_tree_hls_dup1_rv_callback_flag,
    output logic [31:0]                        hls_transform_tree_hls_dup1_min_tb_width,
    output logic [31:0]                        hls_transform_tree_hls_dup1_log2_ctb_size,
    output logic                               hls_transform_tree_hls_dup2_ready,
    input        [31:0]                        hls_transform_tree_hls_dup2_log2_trafo_size,
    input                                      hls_transform_tree_hls_dup2_log2_trafo_size_ap_vld,
    input        [7:0]                         hls_transform_tree_hls_dup2_split_transform_flag,
    input                                      hls_transform_tree_hls_dup2_split_transform_flag_ap_vld,
    input        [7:0]                         hls_transform_tree_hls_dup2_cbf_data,
    input                                      hls_transform_tree_hls_dup2_cbf_data_ap_vld,
    output logic [7:0]                         hls_transform_tree_hls_dup2_disable_deblocking_filter_flag,
    output logic [7:0]                         hls_transform_tree_hls_dup2_transquant_bypass_enable_flag,
    output logic [7:0]                         hls_transform_tree_hls_dup2_cu_transquant_bypass_flag,
    input        [31:0]                        hls_transform_tree_hls_dup2_tu_chroma_mode_c,
    input                                      hls_transform_tree_hls_dup2_tu_chroma_mode_c_ap_vld,
    input        [31:0]                        hls_transform_tree_hls_dup2_tu_intra_pred_mode,
    input                                      hls_transform_tree_hls_dup2_tu_intra_pred_mode_ap_vld,
    input        [31:0]                        hls_transform_tree_hls_dup2_tu_intra_pred_mode_c,
    input                                      hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_ap_vld,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_chroma_mode_c_0,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_chroma_mode_c_1,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_chroma_mode_c_2,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_chroma_mode_c_3,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_intra_pred_mode_0,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_intra_pred_mode_1,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_intra_pred_mode_2,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_intra_pred_mode_3,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_intra_pred_mode_c_0,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_intra_pred_mode_c_1,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_intra_pred_mode_c_2,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_intra_pred_mode_c_3,
    output logic [7:0]                         hls_transform_tree_hls_dup2_intra_split_flag,
    output logic [31:0]                        hls_transform_tree_hls_dup2_log2_max_trafo_size,
    output logic [31:0]                        hls_transform_tree_hls_dup2_log2_min_tb_size,
    output logic [7:0]                         hls_transform_tree_hls_dup2_max_trafo_depth,
    output logic [31:0]                        hls_transform_tree_hls_dup2_max_transform_hierarchy_depth_inter,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pred_mode,
    output logic [7:0]                         hls_transform_tree_hls_dup2_part_mode,
    output logic [31:0]                        hls_transform_tree_hls_dup2_chroma_array_type,
    output logic [31:0]                        hls_transform_tree_hls_dup2_chroma_format_idc,
    output logic [31:0]                        hls_transform_tree_hls_dup2_cbf_luma_i,
    input        [31:0]                        hls_transform_tree_hls_dup2_cbf_luma_o,
    input                                      hls_transform_tree_hls_dup2_cbf_luma_o_ap_vld,
    output logic [31:0]                        hls_transform_tree_hls_dup2_rv_hls_transform_unit,
    output logic [31:0]                        hls_transform_tree_hls_dup2_rv_ff_hevc_deblocking_boundary_strengths,
    output logic [31:0]                        hls_transform_tree_hls_dup2_rv_set_deblocking_bypass,
    output logic [31:0]                        hls_transform_tree_hls_dup2_rv_callback_flag,
    output logic [31:0]                        hls_transform_tree_hls_dup2_min_tb_width,
    output logic [31:0]                        hls_transform_tree_hls_dup2_log2_ctb_size,
    output logic                               hls_transform_tree_hls_dup3_ready,
    input        [31:0]                        hls_transform_tree_hls_dup3_log2_trafo_size,
    input                                      hls_transform_tree_hls_dup3_log2_trafo_size_ap_vld,
    input        [7:0]                         hls_transform_tree_hls_dup3_split_transform_flag,
    input                                      hls_transform_tree_hls_dup3_split_transform_flag_ap_vld,
    input        [7:0]                         hls_transform_tree_hls_dup3_cbf_data,
    input                                      hls_transform_tree_hls_dup3_cbf_data_ap_vld,
    output logic [7:0]                         hls_transform_tree_hls_dup3_disable_deblocking_filter_flag,
    output logic [7:0]                         hls_transform_tree_hls_dup3_transquant_bypass_enable_flag,
    output logic [7:0]                         hls_transform_tree_hls_dup3_cu_transquant_bypass_flag,
    input        [31:0]                        hls_transform_tree_hls_dup3_tu_chroma_mode_c,
    input                                      hls_transform_tree_hls_dup3_tu_chroma_mode_c_ap_vld,
    input        [31:0]                        hls_transform_tree_hls_dup3_tu_intra_pred_mode,
    input                                      hls_transform_tree_hls_dup3_tu_intra_pred_mode_ap_vld,
    input        [31:0]                        hls_transform_tree_hls_dup3_tu_intra_pred_mode_c,
    input                                      hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_ap_vld,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_chroma_mode_c_0,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_chroma_mode_c_1,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_chroma_mode_c_2,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_chroma_mode_c_3,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_intra_pred_mode_0,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_intra_pred_mode_1,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_intra_pred_mode_2,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_intra_pred_mode_3,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_intra_pred_mode_c_0,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_intra_pred_mode_c_1,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_intra_pred_mode_c_2,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_intra_pred_mode_c_3,
    output logic [7:0]                         hls_transform_tree_hls_dup3_intra_split_flag,
    output logic [31:0]                        hls_transform_tree_hls_dup3_log2_max_trafo_size,
    output logic [31:0]                        hls_transform_tree_hls_dup3_log2_min_tb_size,
    output logic [7:0]                         hls_transform_tree_hls_dup3_max_trafo_depth,
    output logic [31:0]                        hls_transform_tree_hls_dup3_max_transform_hierarchy_depth_inter,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pred_mode,
    output logic [7:0]                         hls_transform_tree_hls_dup3_part_mode,
    output logic [31:0]                        hls_transform_tree_hls_dup3_chroma_array_type,
    output logic [31:0]                        hls_transform_tree_hls_dup3_chroma_format_idc,
    output logic [31:0]                        hls_transform_tree_hls_dup3_cbf_luma_i,
    input        [31:0]                        hls_transform_tree_hls_dup3_cbf_luma_o,
    input                                      hls_transform_tree_hls_dup3_cbf_luma_o_ap_vld,
    output logic [31:0]                        hls_transform_tree_hls_dup3_rv_hls_transform_unit,
    output logic [31:0]                        hls_transform_tree_hls_dup3_rv_ff_hevc_deblocking_boundary_strengths,
    output logic [31:0]                        hls_transform_tree_hls_dup3_rv_set_deblocking_bypass,
    output logic [31:0]                        hls_transform_tree_hls_dup3_rv_callback_flag,
    output logic [31:0]                        hls_transform_tree_hls_dup3_min_tb_width,
    output logic [31:0]                        hls_transform_tree_hls_dup3_log2_ctb_size,
    output logic                               hls_coding_quadtree_hls_ready,
    output logic [31:0]                        hls_coding_quadtree_hls_x1_i,
    input        [31:0]                        hls_coding_quadtree_hls_x1_o,
    input                                      hls_coding_quadtree_hls_x1_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_y1_i,
    input        [31:0]                        hls_coding_quadtree_hls_y1_o,
    input                                      hls_coding_quadtree_hls_y1_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_log2_cb_size_minus_one_i,
    input        [31:0]                        hls_coding_quadtree_hls_log2_cb_size_minus_one_o,
    input                                      hls_coding_quadtree_hls_log2_cb_size_minus_one_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_cb_depth_plus_one_i,
    input        [31:0]                        hls_coding_quadtree_hls_cb_depth_plus_one_o,
    input                                      hls_coding_quadtree_hls_cb_depth_plus_one_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_width,
    output logic [31:0]                        hls_coding_quadtree_hls_height,
    output logic [31:0]                        hls_coding_quadtree_hls_split_cu_flag_i,
    input        [31:0]                        hls_coding_quadtree_hls_split_cu_flag_o,
    input                                      hls_coding_quadtree_hls_split_cu_flag_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_more_data_i,
    input        [31:0]                        hls_coding_quadtree_hls_more_data_o,
    input                                      hls_coding_quadtree_hls_more_data_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_rv_hls_coding_unit,
    output logic [31:0]                        hls_coding_quadtree_hls_rv_callback_flag,
    output logic [31:0]                        hls_coding_quadtree_hls_log2_ctb_size,
    input        [31:0]                        hls_coding_quadtree_hls_qPy_pred,
    input                                      hls_coding_quadtree_hls_qPy_pred_ap_vld,
    output logic [7:0]                         hls_coding_quadtree_hls_qp_y,
    output logic [31:0]                        hls_coding_quadtree_hls_qp_block_mask_i,
    input        [31:0]                        hls_coding_quadtree_hls_qp_block_mask_o,
    input                                      hls_coding_quadtree_hls_qp_block_mask_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_cb_size_split_i,
    input        [31:0]                        hls_coding_quadtree_hls_cb_size_split_o,
    input                                      hls_coding_quadtree_hls_cb_size_split_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_log2_min_cb_size,
    output logic [31:0]                        hls_coding_quadtree_hls_min_cb_width,
    input        [7:0]                         hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded,
    input                                      hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_ap_vld,
    input        [31:0]                        hls_coding_quadtree_hls_tu_cu_qp_delta,
    input                                      hls_coding_quadtree_hls_tu_cu_qp_delta_ap_vld,
    input        [7:0]                         hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded,
    input                                      hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_ap_vld,
    input        [31:0]                        hls_coding_quadtree_hls_depth,
    input                                      hls_coding_quadtree_hls_depth_ap_vld,
    output logic [7:0]                         hls_coding_quadtree_hls_ctb_left_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_ctb_up_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_cu_qp_delta_enabled_flag,
    output logic [31:0]                        hls_coding_quadtree_hls_diff_cu_qp_delta_depth,
    output logic [7:0]                         hls_coding_quadtree_hls_cu_chroma_qp_offset_enabled_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_diff_cu_chroma_qp_offset_depth,
    output logic [31:0]                        hls_coding_quadtree_hls_dc_tab_ct_depth_p,
    output logic                               hls_coding_quadtree_hls_dup1_ready,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_x1_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_x1_o,
    input                                      hls_coding_quadtree_hls_dup1_x1_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_y1_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_y1_o,
    input                                      hls_coding_quadtree_hls_dup1_y1_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o,
    input                                      hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_cb_depth_plus_one_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o,
    input                                      hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_width,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_height,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_split_cu_flag_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_split_cu_flag_o,
    input                                      hls_coding_quadtree_hls_dup1_split_cu_flag_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_more_data_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_more_data_o,
    input                                      hls_coding_quadtree_hls_dup1_more_data_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_rv_hls_coding_unit,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_rv_callback_flag,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_log2_ctb_size,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_qPy_pred,
    input                                      hls_coding_quadtree_hls_dup1_qPy_pred_ap_vld,
    output logic [7:0]                         hls_coding_quadtree_hls_dup1_qp_y,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_qp_block_mask_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_qp_block_mask_o,
    input                                      hls_coding_quadtree_hls_dup1_qp_block_mask_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_cb_size_split_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_cb_size_split_o,
    input                                      hls_coding_quadtree_hls_dup1_cb_size_split_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_log2_min_cb_size,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_min_cb_width,
    input        [7:0]                         hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded,
    input                                      hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_ap_vld,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_tu_cu_qp_delta,
    input                                      hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_ap_vld,
    input        [7:0]                         hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded,
    input                                      hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_ap_vld,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_depth,
    input                                      hls_coding_quadtree_hls_dup1_depth_ap_vld,
    output logic [7:0]                         hls_coding_quadtree_hls_dup1_ctb_left_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup1_ctb_up_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup1_cu_qp_delta_enabled_flag,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_diff_cu_qp_delta_depth,
    output logic [7:0]                         hls_coding_quadtree_hls_dup1_cu_chroma_qp_offset_enabled_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup1_diff_cu_chroma_qp_offset_depth,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_dc_tab_ct_depth_p,
    output logic                               hls_coding_quadtree_hls_dup2_ready,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_x1_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_x1_o,
    input                                      hls_coding_quadtree_hls_dup2_x1_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_y1_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_y1_o,
    input                                      hls_coding_quadtree_hls_dup2_y1_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o,
    input                                      hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_cb_depth_plus_one_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o,
    input                                      hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_width,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_height,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_split_cu_flag_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_split_cu_flag_o,
    input                                      hls_coding_quadtree_hls_dup2_split_cu_flag_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_more_data_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_more_data_o,
    input                                      hls_coding_quadtree_hls_dup2_more_data_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_rv_hls_coding_unit,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_rv_callback_flag,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_log2_ctb_size,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_qPy_pred,
    input                                      hls_coding_quadtree_hls_dup2_qPy_pred_ap_vld,
    output logic [7:0]                         hls_coding_quadtree_hls_dup2_qp_y,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_qp_block_mask_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_qp_block_mask_o,
    input                                      hls_coding_quadtree_hls_dup2_qp_block_mask_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_cb_size_split_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_cb_size_split_o,
    input                                      hls_coding_quadtree_hls_dup2_cb_size_split_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_log2_min_cb_size,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_min_cb_width,
    input        [7:0]                         hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded,
    input                                      hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_ap_vld,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_tu_cu_qp_delta,
    input                                      hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_ap_vld,
    input        [7:0]                         hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded,
    input                                      hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_ap_vld,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_depth,
    input                                      hls_coding_quadtree_hls_dup2_depth_ap_vld,
    output logic [7:0]                         hls_coding_quadtree_hls_dup2_ctb_left_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup2_ctb_up_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup2_cu_qp_delta_enabled_flag,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_diff_cu_qp_delta_depth,
    output logic [7:0]                         hls_coding_quadtree_hls_dup2_cu_chroma_qp_offset_enabled_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup2_diff_cu_chroma_qp_offset_depth,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_dc_tab_ct_depth_p,
    output logic                               hls_coding_quadtree_hls_dup3_ready,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_x1_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_x1_o,
    input                                      hls_coding_quadtree_hls_dup3_x1_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_y1_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_y1_o,
    input                                      hls_coding_quadtree_hls_dup3_y1_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o,
    input                                      hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_cb_depth_plus_one_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o,
    input                                      hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_width,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_height,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_split_cu_flag_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_split_cu_flag_o,
    input                                      hls_coding_quadtree_hls_dup3_split_cu_flag_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_more_data_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_more_data_o,
    input                                      hls_coding_quadtree_hls_dup3_more_data_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_rv_hls_coding_unit,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_rv_callback_flag,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_log2_ctb_size,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_qPy_pred,
    input                                      hls_coding_quadtree_hls_dup3_qPy_pred_ap_vld,
    output logic [7:0]                         hls_coding_quadtree_hls_dup3_qp_y,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_qp_block_mask_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_qp_block_mask_o,
    input                                      hls_coding_quadtree_hls_dup3_qp_block_mask_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_cb_size_split_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_cb_size_split_o,
    input                                      hls_coding_quadtree_hls_dup3_cb_size_split_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_log2_min_cb_size,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_min_cb_width,
    input        [7:0]                         hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded,
    input                                      hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_ap_vld,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_tu_cu_qp_delta,
    input                                      hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_ap_vld,
    input        [7:0]                         hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded,
    input                                      hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_ap_vld,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_depth,
    input                                      hls_coding_quadtree_hls_dup3_depth_ap_vld,
    output logic [7:0]                         hls_coding_quadtree_hls_dup3_ctb_left_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup3_ctb_up_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup3_cu_qp_delta_enabled_flag,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_diff_cu_qp_delta_depth,
    output logic [7:0]                         hls_coding_quadtree_hls_dup3_cu_chroma_qp_offset_enabled_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup3_diff_cu_chroma_qp_offset_depth,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_dc_tab_ct_depth_p,
    output logic                               hls_coding_unit_hls_ready,
    output logic [7:0]                         hls_coding_unit_hls_loop_filter_disable_flag,
    output logic [31:0]                        hls_coding_unit_hls_max_transform_hierarchy_depth_inter,
    output logic [7:0]                         hls_coding_unit_hls_disable_deblocking_filter_flag,
    output logic [7:0]                         hls_coding_unit_hls_cu_qp_delta_enabled_flag,
    output logic [7:0]                         hls_coding_unit_hls_tu_is_cu_qp_delta_coded,
    output logic [7:0]                         hls_coding_unit_hls_cu_transquant_bypass_flag_i,
    input        [7:0]                         hls_coding_unit_hls_cu_transquant_bypass_flag_o,
    input                                      hls_coding_unit_hls_cu_transquant_bypass_flag_o_ap_vld,
    output logic                               hls_coding_unit_hls_pcm_flag_i,
    input                                      hls_coding_unit_hls_pcm_flag_o,
    input                                      hls_coding_unit_hls_pcm_flag_o_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_merge_flag,
    output logic [7:0]                         hls_coding_unit_hls_pred_mode_i,
    input        [7:0]                         hls_coding_unit_hls_pred_mode_o,
    input                                      hls_coding_unit_hls_pred_mode_o_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_part_mode_i,
    input        [7:0]                         hls_coding_unit_hls_part_mode_o,
    input                                      hls_coding_unit_hls_part_mode_o_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_max_trafo_depth,
    input                                      hls_coding_unit_hls_max_trafo_depth_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_cb_size_i,
    input        [31:0]                        hls_coding_unit_hls_cb_size_o,
    input                                      hls_coding_unit_hls_cb_size_o_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_idx_i,
    input        [31:0]                        hls_coding_unit_hls_idx_o,
    input                                      hls_coding_unit_hls_idx_o_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_xm_xBase,
    input                                      hls_coding_unit_hls_xm_xBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_xm_yBase,
    input                                      hls_coding_unit_hls_xm_yBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_xm_cb_xBase,
    input                                      hls_coding_unit_hls_xm_cb_xBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_xm_cb_yBase,
    input                                      hls_coding_unit_hls_xm_cb_yBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_xm_log2_cb_size,
    input                                      hls_coding_unit_hls_xm_log2_cb_size_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_rv_set_deblocking_bypass,
    output logic [31:0]                        hls_coding_unit_hls_rv_ff_hevc_deblocking_boundary_strengths,
    output logic [31:0]                        hls_coding_unit_hls_rv_hls_pcm_sample,
    output logic [31:0]                        hls_coding_unit_hls_rv_hls_prediction_unit,
    output logic [31:0]                        hls_coding_unit_hls_rv_hls_intra_prediction_unit,
    output logic [31:0]                        hls_coding_unit_hls_rv_hls_transform_tree,
    output logic [31:0]                        hls_coding_unit_hls_rv_callback_flag,
    input        [31:0]                        hls_coding_unit_hls_length_r,
    input                                      hls_coding_unit_hls_length_r_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_xm_x,
    input                                      hls_coding_unit_hls_xm_x_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_xm_y,
    input                                      hls_coding_unit_hls_xm_y_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_pu_intra_pred_mode_0,
    input                                      hls_coding_unit_hls_pu_intra_pred_mode_0_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_pu_intra_pred_mode_1,
    input                                      hls_coding_unit_hls_pu_intra_pred_mode_1_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_pu_intra_pred_mode_2,
    input                                      hls_coding_unit_hls_pu_intra_pred_mode_2_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_pu_intra_pred_mode_3,
    input                                      hls_coding_unit_hls_pu_intra_pred_mode_3_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_qPy_pred,
    input                                      hls_coding_unit_hls_qPy_pred_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_skip_flag_start,
    input                                      hls_coding_unit_hls_skip_flag_start_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_log2_min_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_log2_ctb_size,
    output logic [31:0]                        hls_coding_unit_hls_diff_cu_qp_delta_depth,
    output logic [7:0]                         hls_coding_unit_hls_qp_y,
    output logic [7:0]                         hls_coding_unit_hls_transquant_bypass_enable_flag,
    output logic [31:0]                        hls_coding_unit_hls_min_cb_width,
    input        [7:0]                         hls_coding_unit_hls_intra_split_flag,
    input                                      hls_coding_unit_hls_intra_split_flag_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_slice_type,
    output logic [7:0]                         hls_coding_unit_hls_ctb_left_flag,
    output logic [7:0]                         hls_coding_unit_hls_ctb_up_flag,
    output logic [7:0]                         hls_coding_unit_hls_amp_enabled_flag,
    output logic [31:0]                        hls_coding_unit_hls_pcm_enabled_flag,
    output logic [31:0]                        hls_coding_unit_hls_log2_min_pcm_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_log2_max_pcm_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_depth,
    output logic [31:0]                        hls_coding_unit_hls_dc_skip_flag_p,
    output logic [31:0]                        hls_coding_unit_hls_dc_qp_y_tab_p,
    output logic [31:0]                        hls_coding_unit_hls_dc_tab_ct_depth_p,
    output logic                               hls_coding_unit_hls_dup1_ready,
    output logic [7:0]                         hls_coding_unit_hls_dup1_loop_filter_disable_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup1_max_transform_hierarchy_depth_inter,
    output logic [7:0]                         hls_coding_unit_hls_dup1_disable_deblocking_filter_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup1_cu_qp_delta_enabled_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup1_tu_is_cu_qp_delta_coded,
    output logic [7:0]                         hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_i,
    input        [7:0]                         hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o,
    input                                      hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_ap_vld,
    output logic                               hls_coding_unit_hls_dup1_pcm_flag_i,
    input                                      hls_coding_unit_hls_dup1_pcm_flag_o,
    input                                      hls_coding_unit_hls_dup1_pcm_flag_o_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup1_merge_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup1_pred_mode_i,
    input        [7:0]                         hls_coding_unit_hls_dup1_pred_mode_o,
    input                                      hls_coding_unit_hls_dup1_pred_mode_o_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup1_part_mode_i,
    input        [7:0]                         hls_coding_unit_hls_dup1_part_mode_o,
    input                                      hls_coding_unit_hls_dup1_part_mode_o_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup1_max_trafo_depth,
    input                                      hls_coding_unit_hls_dup1_max_trafo_depth_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup1_cb_size_i,
    input        [31:0]                        hls_coding_unit_hls_dup1_cb_size_o,
    input                                      hls_coding_unit_hls_dup1_cb_size_o_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup1_idx_i,
    input        [31:0]                        hls_coding_unit_hls_dup1_idx_o,
    input                                      hls_coding_unit_hls_dup1_idx_o_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_xm_xBase,
    input                                      hls_coding_unit_hls_dup1_xm_xBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_xm_yBase,
    input                                      hls_coding_unit_hls_dup1_xm_yBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_xm_cb_xBase,
    input                                      hls_coding_unit_hls_dup1_xm_cb_xBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_xm_cb_yBase,
    input                                      hls_coding_unit_hls_dup1_xm_cb_yBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_xm_log2_cb_size,
    input                                      hls_coding_unit_hls_dup1_xm_log2_cb_size_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup1_rv_set_deblocking_bypass,
    output logic [31:0]                        hls_coding_unit_hls_dup1_rv_ff_hevc_deblocking_boundary_strengths,
    output logic [31:0]                        hls_coding_unit_hls_dup1_rv_hls_pcm_sample,
    output logic [31:0]                        hls_coding_unit_hls_dup1_rv_hls_prediction_unit,
    output logic [31:0]                        hls_coding_unit_hls_dup1_rv_hls_intra_prediction_unit,
    output logic [31:0]                        hls_coding_unit_hls_dup1_rv_hls_transform_tree,
    output logic [31:0]                        hls_coding_unit_hls_dup1_rv_callback_flag,
    input        [31:0]                        hls_coding_unit_hls_dup1_length_r,
    input                                      hls_coding_unit_hls_dup1_length_r_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_xm_x,
    input                                      hls_coding_unit_hls_dup1_xm_x_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_xm_y,
    input                                      hls_coding_unit_hls_dup1_xm_y_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup1_pu_intra_pred_mode_0,
    input                                      hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup1_pu_intra_pred_mode_1,
    input                                      hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup1_pu_intra_pred_mode_2,
    input                                      hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup1_pu_intra_pred_mode_3,
    input                                      hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_qPy_pred,
    input                                      hls_coding_unit_hls_dup1_qPy_pred_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_skip_flag_start,
    input                                      hls_coding_unit_hls_dup1_skip_flag_start_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup1_log2_min_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup1_log2_ctb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup1_diff_cu_qp_delta_depth,
    output logic [7:0]                         hls_coding_unit_hls_dup1_qp_y,
    output logic [7:0]                         hls_coding_unit_hls_dup1_transquant_bypass_enable_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup1_min_cb_width,
    input        [7:0]                         hls_coding_unit_hls_dup1_intra_split_flag,
    input                                      hls_coding_unit_hls_dup1_intra_split_flag_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup1_slice_type,
    output logic [7:0]                         hls_coding_unit_hls_dup1_ctb_left_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup1_ctb_up_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup1_amp_enabled_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup1_pcm_enabled_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup1_log2_min_pcm_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup1_log2_max_pcm_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup1_depth,
    output logic [31:0]                        hls_coding_unit_hls_dup1_dc_skip_flag_p,
    output logic [31:0]                        hls_coding_unit_hls_dup1_dc_qp_y_tab_p,
    output logic [31:0]                        hls_coding_unit_hls_dup1_dc_tab_ct_depth_p,
    output logic                               hls_coding_unit_hls_dup2_ready,
    output logic [7:0]                         hls_coding_unit_hls_dup2_loop_filter_disable_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup2_max_transform_hierarchy_depth_inter,
    output logic [7:0]                         hls_coding_unit_hls_dup2_disable_deblocking_filter_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup2_cu_qp_delta_enabled_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup2_tu_is_cu_qp_delta_coded,
    output logic [7:0]                         hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_i,
    input        [7:0]                         hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o,
    input                                      hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_ap_vld,
    output logic                               hls_coding_unit_hls_dup2_pcm_flag_i,
    input                                      hls_coding_unit_hls_dup2_pcm_flag_o,
    input                                      hls_coding_unit_hls_dup2_pcm_flag_o_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup2_merge_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup2_pred_mode_i,
    input        [7:0]                         hls_coding_unit_hls_dup2_pred_mode_o,
    input                                      hls_coding_unit_hls_dup2_pred_mode_o_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup2_part_mode_i,
    input        [7:0]                         hls_coding_unit_hls_dup2_part_mode_o,
    input                                      hls_coding_unit_hls_dup2_part_mode_o_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup2_max_trafo_depth,
    input                                      hls_coding_unit_hls_dup2_max_trafo_depth_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup2_cb_size_i,
    input        [31:0]                        hls_coding_unit_hls_dup2_cb_size_o,
    input                                      hls_coding_unit_hls_dup2_cb_size_o_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup2_idx_i,
    input        [31:0]                        hls_coding_unit_hls_dup2_idx_o,
    input                                      hls_coding_unit_hls_dup2_idx_o_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_xm_xBase,
    input                                      hls_coding_unit_hls_dup2_xm_xBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_xm_yBase,
    input                                      hls_coding_unit_hls_dup2_xm_yBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_xm_cb_xBase,
    input                                      hls_coding_unit_hls_dup2_xm_cb_xBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_xm_cb_yBase,
    input                                      hls_coding_unit_hls_dup2_xm_cb_yBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_xm_log2_cb_size,
    input                                      hls_coding_unit_hls_dup2_xm_log2_cb_size_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup2_rv_set_deblocking_bypass,
    output logic [31:0]                        hls_coding_unit_hls_dup2_rv_ff_hevc_deblocking_boundary_strengths,
    output logic [31:0]                        hls_coding_unit_hls_dup2_rv_hls_pcm_sample,
    output logic [31:0]                        hls_coding_unit_hls_dup2_rv_hls_prediction_unit,
    output logic [31:0]                        hls_coding_unit_hls_dup2_rv_hls_intra_prediction_unit,
    output logic [31:0]                        hls_coding_unit_hls_dup2_rv_hls_transform_tree,
    output logic [31:0]                        hls_coding_unit_hls_dup2_rv_callback_flag,
    input        [31:0]                        hls_coding_unit_hls_dup2_length_r,
    input                                      hls_coding_unit_hls_dup2_length_r_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_xm_x,
    input                                      hls_coding_unit_hls_dup2_xm_x_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_xm_y,
    input                                      hls_coding_unit_hls_dup2_xm_y_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup2_pu_intra_pred_mode_0,
    input                                      hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup2_pu_intra_pred_mode_1,
    input                                      hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup2_pu_intra_pred_mode_2,
    input                                      hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup2_pu_intra_pred_mode_3,
    input                                      hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_qPy_pred,
    input                                      hls_coding_unit_hls_dup2_qPy_pred_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_skip_flag_start,
    input                                      hls_coding_unit_hls_dup2_skip_flag_start_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup2_log2_min_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup2_log2_ctb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup2_diff_cu_qp_delta_depth,
    output logic [7:0]                         hls_coding_unit_hls_dup2_qp_y,
    output logic [7:0]                         hls_coding_unit_hls_dup2_transquant_bypass_enable_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup2_min_cb_width,
    input        [7:0]                         hls_coding_unit_hls_dup2_intra_split_flag,
    input                                      hls_coding_unit_hls_dup2_intra_split_flag_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup2_slice_type,
    output logic [7:0]                         hls_coding_unit_hls_dup2_ctb_left_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup2_ctb_up_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup2_amp_enabled_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup2_pcm_enabled_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup2_log2_min_pcm_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup2_log2_max_pcm_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup2_depth,
    output logic [31:0]                        hls_coding_unit_hls_dup2_dc_skip_flag_p,
    output logic [31:0]                        hls_coding_unit_hls_dup2_dc_qp_y_tab_p,
    output logic [31:0]                        hls_coding_unit_hls_dup2_dc_tab_ct_depth_p,
    output logic                               hls_coding_unit_hls_dup3_ready,
    output logic [7:0]                         hls_coding_unit_hls_dup3_loop_filter_disable_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup3_max_transform_hierarchy_depth_inter,
    output logic [7:0]                         hls_coding_unit_hls_dup3_disable_deblocking_filter_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup3_cu_qp_delta_enabled_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup3_tu_is_cu_qp_delta_coded,
    output logic [7:0]                         hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_i,
    input        [7:0]                         hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o,
    input                                      hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_ap_vld,
    output logic                               hls_coding_unit_hls_dup3_pcm_flag_i,
    input                                      hls_coding_unit_hls_dup3_pcm_flag_o,
    input                                      hls_coding_unit_hls_dup3_pcm_flag_o_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup3_merge_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup3_pred_mode_i,
    input        [7:0]                         hls_coding_unit_hls_dup3_pred_mode_o,
    input                                      hls_coding_unit_hls_dup3_pred_mode_o_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup3_part_mode_i,
    input        [7:0]                         hls_coding_unit_hls_dup3_part_mode_o,
    input                                      hls_coding_unit_hls_dup3_part_mode_o_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup3_max_trafo_depth,
    input                                      hls_coding_unit_hls_dup3_max_trafo_depth_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup3_cb_size_i,
    input        [31:0]                        hls_coding_unit_hls_dup3_cb_size_o,
    input                                      hls_coding_unit_hls_dup3_cb_size_o_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup3_idx_i,
    input        [31:0]                        hls_coding_unit_hls_dup3_idx_o,
    input                                      hls_coding_unit_hls_dup3_idx_o_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_xm_xBase,
    input                                      hls_coding_unit_hls_dup3_xm_xBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_xm_yBase,
    input                                      hls_coding_unit_hls_dup3_xm_yBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_xm_cb_xBase,
    input                                      hls_coding_unit_hls_dup3_xm_cb_xBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_xm_cb_yBase,
    input                                      hls_coding_unit_hls_dup3_xm_cb_yBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_xm_log2_cb_size,
    input                                      hls_coding_unit_hls_dup3_xm_log2_cb_size_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup3_rv_set_deblocking_bypass,
    output logic [31:0]                        hls_coding_unit_hls_dup3_rv_ff_hevc_deblocking_boundary_strengths,
    output logic [31:0]                        hls_coding_unit_hls_dup3_rv_hls_pcm_sample,
    output logic [31:0]                        hls_coding_unit_hls_dup3_rv_hls_prediction_unit,
    output logic [31:0]                        hls_coding_unit_hls_dup3_rv_hls_intra_prediction_unit,
    output logic [31:0]                        hls_coding_unit_hls_dup3_rv_hls_transform_tree,
    output logic [31:0]                        hls_coding_unit_hls_dup3_rv_callback_flag,
    input        [31:0]                        hls_coding_unit_hls_dup3_length_r,
    input                                      hls_coding_unit_hls_dup3_length_r_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_xm_x,
    input                                      hls_coding_unit_hls_dup3_xm_x_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_xm_y,
    input                                      hls_coding_unit_hls_dup3_xm_y_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup3_pu_intra_pred_mode_0,
    input                                      hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup3_pu_intra_pred_mode_1,
    input                                      hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup3_pu_intra_pred_mode_2,
    input                                      hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup3_pu_intra_pred_mode_3,
    input                                      hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_qPy_pred,
    input                                      hls_coding_unit_hls_dup3_qPy_pred_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_skip_flag_start,
    input                                      hls_coding_unit_hls_dup3_skip_flag_start_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup3_log2_min_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup3_log2_ctb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup3_diff_cu_qp_delta_depth,
    output logic [7:0]                         hls_coding_unit_hls_dup3_qp_y,
    output logic [7:0]                         hls_coding_unit_hls_dup3_transquant_bypass_enable_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup3_min_cb_width,
    input        [7:0]                         hls_coding_unit_hls_dup3_intra_split_flag,
    input                                      hls_coding_unit_hls_dup3_intra_split_flag_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup3_slice_type,
    output logic [7:0]                         hls_coding_unit_hls_dup3_ctb_left_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup3_ctb_up_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup3_amp_enabled_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup3_pcm_enabled_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup3_log2_min_pcm_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup3_log2_max_pcm_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup3_depth,
    output logic [31:0]                        hls_coding_unit_hls_dup3_dc_skip_flag_p,
    output logic [31:0]                        hls_coding_unit_hls_dup3_dc_qp_y_tab_p,
    output logic [31:0]                        hls_coding_unit_hls_dup3_dc_tab_ct_depth_p,
    output logic                               copy_top_left_pixel_hls_ready,
    output logic [31:0]                        copy_top_left_pixel_hls_log2_trafo_size,
    output logic [31:0]                        copy_top_left_pixel_hls_log2_ctb_size,
    output logic [31:0]                        copy_top_left_pixel_hls_log2_min_tb_size,
    output logic [7:0]                         copy_top_left_pixel_hls_pred_mode,
    output logic [31:0]                        copy_top_left_pixel_hls_hshift_0,
    output logic [31:0]                        copy_top_left_pixel_hls_hshift_1,
    output logic [31:0]                        copy_top_left_pixel_hls_hshift_2,
    output logic [31:0]                        copy_top_left_pixel_hls_vshift_0,
    output logic [31:0]                        copy_top_left_pixel_hls_vshift_1,
    output logic [31:0]                        copy_top_left_pixel_hls_vshift_2,
    output logic [31:0]                        copy_top_left_pixel_hls_buf_data_0,
    output logic [31:0]                        copy_top_left_pixel_hls_buf_data_1,
    output logic [31:0]                        copy_top_left_pixel_hls_buf_data_2,
    output logic [31:0]                        copy_top_left_pixel_hls_xm_linesize_0,
    output logic [31:0]                        copy_top_left_pixel_hls_xm_linesize_1,
    output logic [31:0]                        copy_top_left_pixel_hls_xm_linesize_2,
    output logic [7:0]                         copy_top_left_pixel_hls_cmdr_run_i,
    input        [7:0]                         copy_top_left_pixel_hls_cmdr_run_o,
    input                                      copy_top_left_pixel_hls_cmdr_run_o_ap_vld,
    output logic                               genPredCol_hls_ready,
    input        [31:0]                        genPredCol_hls_predColBuf_0,
    input                                      genPredCol_hls_predColBuf_0_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_1,
    input                                      genPredCol_hls_predColBuf_1_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_2,
    input                                      genPredCol_hls_predColBuf_2_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_3,
    input                                      genPredCol_hls_predColBuf_3_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_4,
    input                                      genPredCol_hls_predColBuf_4_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_5,
    input                                      genPredCol_hls_predColBuf_5_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_6,
    input                                      genPredCol_hls_predColBuf_6_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_7,
    input                                      genPredCol_hls_predColBuf_7_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_8,
    input                                      genPredCol_hls_predColBuf_8_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_9,
    input                                      genPredCol_hls_predColBuf_9_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_10,
    input                                      genPredCol_hls_predColBuf_10_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_11,
    input                                      genPredCol_hls_predColBuf_11_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_12,
    input                                      genPredCol_hls_predColBuf_12_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_13,
    input                                      genPredCol_hls_predColBuf_13_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_14,
    input                                      genPredCol_hls_predColBuf_14_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_15,
    input                                      genPredCol_hls_predColBuf_15_ap_vld,
    output logic [31:0]                        genPredCol_hls_predColBuf_16_i,
    input        [31:0]                        genPredCol_hls_predColBuf_16_o,
    input                                      genPredCol_hls_predColBuf_16_o_ap_vld,
    output logic [7:0]                         genPredCol_hls_log2_width,
    output logic [31:0]                        genPredCol_hls_dc_tab_mvf_pred_flag_row_p,
    output logic [31:0]                        genPredCol_hls_dc_cbf_luma_p,
    output logic [31:0]                        genPredCol_hls_log2_min_tb_size,
    output logic [31:0]                        genPredCol_hls_min_tb_width,
    output logic                               ff_hevc_get_sub_cu_zscan_id_hls_ready,
    output logic [31:0]                        ff_hevc_get_sub_cu_zscan_id_hls_log2_ctb_size,
    input        [31:0]                        ff_hevc_get_sub_cu_zscan_id_hls_zscan_id,
    input                                      ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_ap_vld,
    output logic                               ff_hevc_skip_flag_decode_hls_ready,
    output logic [31:0]                        ff_hevc_skip_flag_decode_hls_log2_ctb_size,
    output logic [7:0]                         ff_hevc_skip_flag_decode_hls_ctb_left_flag,
    output logic [7:0]                         ff_hevc_skip_flag_decode_hls_ctb_up_flag,
    output logic                               ff_hevc_set_qPy_hls_ready,
    input        [7:0]                         ff_hevc_set_qPy_hls_qp_y,
    input                                      ff_hevc_set_qPy_hls_qp_y_ap_vld,
    output logic [7:0]                         ff_hevc_set_qPy_hls_first_qp_group_i,
    input        [7:0]                         ff_hevc_set_qPy_hls_first_qp_group_o,
    input                                      ff_hevc_set_qPy_hls_first_qp_group_o_ap_vld,
    output logic [31:0]                        ff_hevc_set_qPy_hls_qPy_pred,
    output logic [31:0]                        ff_hevc_set_qPy_hls_log2_ctb_size,
    output logic [31:0]                        ff_hevc_set_qPy_hls_diff_cu_qp_delta_depth,
    output logic [31:0]                        ff_hevc_set_qPy_hls_log2_min_cb_size,
    output logic [31:0]                        ff_hevc_set_qPy_hls_min_cb_width,
    output logic [7:0]                         ff_hevc_set_qPy_hls_slice_qp,
    output logic [31:0]                        ff_hevc_set_qPy_hls_dc_qp_y_tab_p,
    output logic [31:0]                        ff_hevc_set_qPy_hls_tu_cu_qp_delta,
    output logic [31:0]                        ff_hevc_set_qPy_hls_qp_bd_offset,
    output logic                               hls_decode_neighbour_hls_ready,
    input        [7:0]                         hls_decode_neighbour_hls_first_qp_group,
    input                                      hls_decode_neighbour_hls_first_qp_group_ap_vld,
    input        [15:0]                        hls_decode_neighbour_hls_end_of_tiles_x,
    input                                      hls_decode_neighbour_hls_end_of_tiles_x_ap_vld,
    input        [15:0]                        hls_decode_neighbour_hls_end_of_tiles_y,
    input                                      hls_decode_neighbour_hls_end_of_tiles_y_ap_vld,
    input        [7:0]                         hls_decode_neighbour_hls_slice_or_tiles_left_boundary,
    input                                      hls_decode_neighbour_hls_slice_or_tiles_left_boundary_ap_vld,
    input        [7:0]                         hls_decode_neighbour_hls_slice_or_tiles_up_boundary,
    input                                      hls_decode_neighbour_hls_slice_or_tiles_up_boundary_ap_vld,
    input                                      hls_decode_neighbour_hls_ctb_left_flag,
    input                                      hls_decode_neighbour_hls_ctb_left_flag_ap_vld,
    input                                      hls_decode_neighbour_hls_ctb_up_flag,
    input                                      hls_decode_neighbour_hls_ctb_up_flag_ap_vld,
    input                                      hls_decode_neighbour_hls_ctb_up_right_flag,
    input                                      hls_decode_neighbour_hls_ctb_up_right_flag_ap_vld,
    input                                      hls_decode_neighbour_hls_ctb_up_left_flag,
    input                                      hls_decode_neighbour_hls_ctb_up_left_flag_ap_vld,
    output logic [31:0]                        hls_decode_neighbour_hls_x_ctb,
    output logic [31:0]                        hls_decode_neighbour_hls_y_ctb,
    output logic [31:0]                        hls_decode_neighbour_hls_ctb_addr_ts,
    output logic [31:0]                        hls_decode_neighbour_hls_log2_ctb_size,
    output logic [31:0]                        hls_decode_neighbour_hls_ctb_width,
    output logic [31:0]                        hls_decode_neighbour_hls_slice_addr,
    output logic [7:0]                         hls_decode_neighbour_hls_entropy_coding_sync_enabled_flag,
    output logic [7:0]                         hls_decode_neighbour_hls_tiles_enabled_flag,
    output logic [31:0]                        hls_decode_neighbour_hls_num_tile_columns,
    input        [4:0]                         hls_decode_neighbour_hls_column_width_address0,
    input                                      hls_decode_neighbour_hls_column_width_ce0,
    output logic [15:0]                        hls_decode_neighbour_hls_column_width_q0,
    output logic [31:0]                        hls_decode_neighbour_hls_width,
    output logic [31:0]                        hls_decode_neighbour_hls_height,
    output logic                               set_tab_mvf_pred_flag_hls_ready,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_log2_min_pu_size,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_min_pu_width,
    output logic [7:0]                         set_tab_mvf_pred_flag_hls_log2_width,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_dc_tab_mvf_pred_flag_row_p,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_0_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_0_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_0_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_1_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_1_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_1_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_2_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_2_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_2_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_3_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_3_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_3_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_4_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_4_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_4_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_5_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_5_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_5_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_6_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_6_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_6_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_7_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_7_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_7_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_8_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_8_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_8_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_9_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_9_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_9_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_10_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_10_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_10_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_11_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_11_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_11_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_12_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_12_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_12_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_13_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_13_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_13_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_14_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_14_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_14_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_15_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_15_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_15_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_16_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_16_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_16_o_ap_vld,
    output logic                               init_intra_neighbors_hls_ready,
    output logic [31:0]                        init_intra_neighbors_hls_hshift_0,
    output logic [31:0]                        init_intra_neighbors_hls_hshift_1,
    output logic [31:0]                        init_intra_neighbors_hls_hshift_2,
    output logic [31:0]                        init_intra_neighbors_hls_vshift_0,
    output logic [31:0]                        init_intra_neighbors_hls_vshift_1,
    output logic [31:0]                        init_intra_neighbors_hls_vshift_2,
    output logic [31:0]                        init_intra_neighbors_hls_log2_min_pu_size,
    output logic [31:0]                        init_intra_neighbors_hls_log2_min_tb_size,
    output logic [31:0]                        init_intra_neighbors_hls_log2_ctb_size,
    output logic [7:0]                         init_intra_neighbors_hls_tb_mask,
    output logic [31:0]                        init_intra_neighbors_hls_width,
    output logic [31:0]                        init_intra_neighbors_hls_height,
    output logic [7:0]                         init_intra_neighbors_hls_log2_width,
    output logic [7:0]                         init_intra_neighbors_hls_log2_height,
    output logic [7:0]                         init_intra_neighbors_hls_constrained_intra_pred_flag,
    output logic [31:0]                        init_intra_neighbors_hls_dc_min_tb_addr_zs_p,
    output logic [7:0]                         init_intra_neighbors_hls_cand_bottom_left,
    output logic [7:0]                         init_intra_neighbors_hls_cand_left,
    output logic [7:0]                         init_intra_neighbors_hls_cand_up_left,
    output logic [7:0]                         init_intra_neighbors_hls_cand_up,
    output logic [7:0]                         init_intra_neighbors_hls_cand_up_right,
    input        [31:0]                        init_intra_neighbors_hls_numIntraNeighbor,
    input                                      init_intra_neighbors_hls_numIntraNeighbor_ap_vld,
    input        [31:0]                        init_intra_neighbors_hls_totalUnits,
    input                                      init_intra_neighbors_hls_totalUnits_ap_vld,
    input        [31:0]                        init_intra_neighbors_hls_aboveUnits,
    input                                      init_intra_neighbors_hls_aboveUnits_ap_vld,
    input        [31:0]                        init_intra_neighbors_hls_leftUnits,
    input                                      init_intra_neighbors_hls_leftUnits_ap_vld,
    input        [31:0]                        init_intra_neighbors_hls_unitWidth,
    input                                      init_intra_neighbors_hls_unitWidth_ap_vld,
    input        [31:0]                        init_intra_neighbors_hls_unitHeight,
    input                                      init_intra_neighbors_hls_unitHeight_ap_vld,
    input        [31:0]                        init_intra_neighbors_hls_log2TrSize,
    input                                      init_intra_neighbors_hls_log2TrSize_ap_vld,
    output logic [31:0]                        init_intra_neighbors_hls_bNeighborFlags_0_i,
    output logic [31:0]                        init_intra_neighbors_hls_bNeighborFlags_1_i,
    output logic                               init_intra_neighbors_hls_bNeighborFlags_2_i,
    input        [31:0]                        init_intra_neighbors_hls_bNeighborFlags_0_o,
    input                                      init_intra_neighbors_hls_bNeighborFlags_0_o_ap_vld,
    input        [31:0]                        init_intra_neighbors_hls_bNeighborFlags_1_o,
    input                                      init_intra_neighbors_hls_bNeighborFlags_1_o_ap_vld,
    input                                      init_intra_neighbors_hls_bNeighborFlags_2_o,
    input                                      init_intra_neighbors_hls_bNeighborFlags_2_o_ap_vld,
    output logic [31:0]                        init_intra_neighbors_hls_min_pu_width,
    output logic [31:0]                        init_intra_neighbors_hls_dc_tab_mvf_pred_flag_row_p,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_0,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_1,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_2,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_3,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_4,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_5,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_6,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_7,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_8,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_9,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_10,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_11,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_12,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_13,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_14,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_15,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_16,
    output logic [7:0]                         init_intra_neighbors_hls_slice_type,
    output logic                               init_intra_neighbors_chroma_hls_ready,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_hshift_0,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_hshift_1,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_hshift_2,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_vshift_0,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_vshift_1,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_vshift_2,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_log2_min_pu_size,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_log2_min_tb_size,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_log2_ctb_size,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_tb_mask,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_width,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_height,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_log2_width,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_log2_height,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_constrained_intra_pred_flag,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_dc_min_tb_addr_zs_p,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_cand_bottom_left_c,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_cand_left_c,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_cand_up_left_c,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_cand_up_c,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_cand_up_right_c,
    input        [31:0]                        init_intra_neighbors_chroma_hls_numIntraNeighbor_c,
    input                                      init_intra_neighbors_chroma_hls_numIntraNeighbor_c_ap_vld,
    input        [31:0]                        init_intra_neighbors_chroma_hls_totalUnits_c,
    input                                      init_intra_neighbors_chroma_hls_totalUnits_c_ap_vld,
    input        [31:0]                        init_intra_neighbors_chroma_hls_aboveUnits_c,
    input                                      init_intra_neighbors_chroma_hls_aboveUnits_c_ap_vld,
    input        [31:0]                        init_intra_neighbors_chroma_hls_leftUnits_c,
    input                                      init_intra_neighbors_chroma_hls_leftUnits_c_ap_vld,
    input        [31:0]                        init_intra_neighbors_chroma_hls_unitWidth_c,
    input                                      init_intra_neighbors_chroma_hls_unitWidth_c_ap_vld,
    input        [31:0]                        init_intra_neighbors_chroma_hls_unitHeight_c,
    input                                      init_intra_neighbors_chroma_hls_unitHeight_c_ap_vld,
    input        [31:0]                        init_intra_neighbors_chroma_hls_log2TrSize_c,
    input                                      init_intra_neighbors_chroma_hls_log2TrSize_c_ap_vld,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_i,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_i,
    output logic                               init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_i,
    input        [31:0]                        init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o,
    input                                      init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_ap_vld,
    input        [31:0]                        init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o,
    input                                      init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_ap_vld,
    input                                      init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o,
    input                                      init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_ap_vld,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_min_pu_width,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_dc_tab_mvf_pred_flag_row_p,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_0,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_1,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_2,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_3,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_4,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_5,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_6,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_7,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_8,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_9,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_10,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_11,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_12,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_13,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_14,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_15,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_16,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_slice_type,
    output logic                               ff_hevc_set_neighbour_available_hls_ready,
    input                                      ff_hevc_set_neighbour_available_hls_cand_up,
    input                                      ff_hevc_set_neighbour_available_hls_cand_up_ap_vld,
    input                                      ff_hevc_set_neighbour_available_hls_cand_left,
    input                                      ff_hevc_set_neighbour_available_hls_cand_left_ap_vld,
    input                                      ff_hevc_set_neighbour_available_hls_cand_up_left,
    input                                      ff_hevc_set_neighbour_available_hls_cand_up_left_ap_vld,
    input                                      ff_hevc_set_neighbour_available_hls_cand_up_right_sap,
    input                                      ff_hevc_set_neighbour_available_hls_cand_up_right_sap_ap_vld,
    input                                      ff_hevc_set_neighbour_available_hls_cand_up_right,
    input                                      ff_hevc_set_neighbour_available_hls_cand_up_right_ap_vld,
    input                                      ff_hevc_set_neighbour_available_hls_cand_bottom_left,
    input                                      ff_hevc_set_neighbour_available_hls_cand_bottom_left_ap_vld,
    output logic [31:0]                        ff_hevc_set_neighbour_available_hls_log2_ctb_size,
    output logic [7:0]                         ff_hevc_set_neighbour_available_hls_ctb_up_flag,
    output logic [7:0]                         ff_hevc_set_neighbour_available_hls_ctb_left_flag,
    output logic [7:0]                         ff_hevc_set_neighbour_available_hls_ctb_up_left_flag,
    output logic [7:0]                         ff_hevc_set_neighbour_available_hls_ctb_up_right_flag,
    output logic [15:0]                        ff_hevc_set_neighbour_available_hls_end_of_tiles_x,
    output logic [15:0]                        ff_hevc_set_neighbour_available_hls_end_of_tiles_y,
    input        [31:0]                        ff_hevc_set_neighbour_available_hls_nPbW,
    input                                      ff_hevc_set_neighbour_available_hls_nPbW_ap_vld,
    input        [31:0]                        ff_hevc_set_neighbour_available_hls_nPbH,
    input                                      ff_hevc_set_neighbour_available_hls_nPbH_ap_vld
);

//---------------------------------------------------------------------------
//signals 
//---------------------------------------------------------------------------
localparam BANK_NUM_ALL = BANK_NUM[MEM_TYPE_SCALAR] + BANK_NUM[MEM_TYPE_ARRAY] + BANK_NUM[MEM_TYPE_CYCLIC];


//---------------------------------------------------------------------------
//signals 
//---------------------------------------------------------------------------
logic [7:0]                 ap_part_w           [HLS_NUM];
logic [7:0]                 ap_part_r           [HLS_NUM];

logic                       ap_arb_start_r      [HLS_NUM];
logic                       ap_arb_start_2r     [HLS_NUM];

logic                       ap_arb_start_running   [HLS_NUM];
logic                       ap_arb_start_running_r [HLS_NUM];

logic                       ap_arb_ret_r        [HLS_NUM];
logic                       ap_arb_ret_2r       [HLS_NUM];

logic                       ap_start_r          [HLS_NUM];
logic                       ap_ready_r          [HLS_NUM];
logic                       ap_done_r           [HLS_NUM];

logic                       ap_running          [HLS_NUM];
logic                       ap_running_r        [HLS_NUM];

logic                       ap_arb_ret_running   [HLS_NUM];
logic                       ap_arb_ret_running_r [HLS_NUM];

logic                       ap_arb_reload        [HLS_NUM];
logic                       ap_arb_reload_r      [HLS_NUM];

logic                       ap_arb_reload_running   [HLS_NUM];
logic                       ap_arb_reload_running_r [HLS_NUM];


//dual port bank in scalar range
logic                       scalar_argdone          [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM];
logic                       scalar_argdone_r        [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM];

logic         				scalar_argAckdone   	[BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM];
logic         				scalar_argAckdone_r 	[BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM];
logic                       scalar_argAckdone_all	[HLS_NUM];
logic                       scalar_argAckdone_all_r	[HLS_NUM];

logic                       scalar_argdone_all      [HLS_NUM];
logic                       scalar_argdone_all_r    [HLS_NUM];
logic                       scalar_argVld_r         [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM];
logic                       scalar_argAck_r         [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM];
logic                       scalar_argVld_all       [HLS_NUM];
logic                       scalar_argVld_all_r     [HLS_NUM];
logic                       scalar_rdat_vld_r       [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM];

//single port bank in array range
logic                       array_argdone           [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM];
logic                       array_argdone_r         [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM];
logic                       array_argVld_r          [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM];
logic [XMEM_AW-1:0]         array_adr_r             [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM];

//wide port bank in cyclic range
logic                       cyclic_argdone          [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM];
logic                       cyclic_argdone_r        [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM];
logic                       cyclic_argVld_r         [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM];

logic [8-1:0]    innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_r;
logic            innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_ap_vld_r;
logic [32-1:0]   innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_r;
logic            innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_ap_vld_r;
logic [32-1:0]   innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_r;
logic            innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_ap_vld_r;
logic [32-1:0]   innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_r;
logic            innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_ap_vld_r;
logic [8-1:0]    innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_r;
logic            innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_ap_vld_r;
logic [32-1:0]   innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_r;
logic            innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_ap_vld_r;
logic [32-1:0]   innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_r;
logic            innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_ap_vld_r;
logic [32-1:0]   hevc_find_frame_end_hls_state64_0_o_r;
logic [32-1:0]   hevc_find_frame_end_hls_state64_1_o_r;
logic            hevc_find_frame_end_hls_state64_0_o_ap_vld_r;
logic            hevc_find_frame_end_hls_state64_1_o_ap_vld_r;
logic [32-1:0]   hevc_find_frame_end_hls_frame_start_found_o_r;
logic            hevc_find_frame_end_hls_frame_start_found_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_r;
logic            intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_r;
logic            intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_r;
logic            intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_r;
logic            intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_r;
logic            intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_r;
logic            intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_r;
logic            intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_r;
logic            intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_r;
logic            intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_r;
logic            intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_r;
logic            intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_r;
logic            intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_r;
logic            intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_r;
logic            intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_r;
logic            intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_r;
logic            intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_max_trafo_depth_r;
logic            intra_prediction_unit_ex_hls_max_trafo_depth_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_r;
logic            hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_r;
logic            hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_qp_y_o_r;
logic            hls_transform_unit_ex_hls_qp_y_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_log2_trafo_size_r;
logic            hls_transform_unit_ex_hls_log2_trafo_size_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_log2_trafo_size_c_o_r;
logic            hls_transform_unit_ex_hls_log2_trafo_size_c_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_scan_idx_o_r;
logic            hls_transform_unit_ex_hls_scan_idx_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_scan_idx_c_r;
logic            hls_transform_unit_ex_hls_scan_idx_c_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_cmdr_run_o_r;
logic            hls_transform_unit_ex_hls_cmdr_run_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_nPbW_r;
logic            hls_transform_unit_ex_hls_nPbW_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_nPbH_r;
logic            hls_transform_unit_ex_hls_nPbH_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_up_r;
logic            hls_transform_unit_ex_hls_cand_up_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_left_r;
logic            hls_transform_unit_ex_hls_cand_left_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_up_left_r;
logic            hls_transform_unit_ex_hls_cand_up_left_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_up_right_sap_r;
logic            hls_transform_unit_ex_hls_cand_up_right_sap_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_up_right_r;
logic            hls_transform_unit_ex_hls_cand_up_right_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_bottom_left_o_r;
logic            hls_transform_unit_ex_hls_cand_bottom_left_o_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_up_c_r;
logic            hls_transform_unit_ex_hls_cand_up_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_left_c_r;
logic            hls_transform_unit_ex_hls_cand_left_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_up_left_c_r;
logic            hls_transform_unit_ex_hls_cand_up_left_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_up_right_sap_c_r;
logic            hls_transform_unit_ex_hls_cand_up_right_sap_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_up_right_c_r;
logic            hls_transform_unit_ex_hls_cand_up_right_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_bottom_left_c_o_r;
logic            hls_transform_unit_ex_hls_cand_bottom_left_c_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_r;
logic            hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_r;
logic            hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_tu_cu_qp_delta_r;
logic            hls_transform_unit_ex_hls_tu_cu_qp_delta_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_tu_cross_pf_r;
logic            hls_transform_unit_ex_hls_tu_cross_pf_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_first_qp_group_o_r;
logic            hls_transform_unit_ex_hls_first_qp_group_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_r;
logic            hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_r;
logic            hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_qp_y_o_r;
logic            hls_transform_unit_ex_hls_dup1_qp_y_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup1_log2_trafo_size_r;
logic            hls_transform_unit_ex_hls_dup1_log2_trafo_size_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_r;
logic            hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_scan_idx_o_r;
logic            hls_transform_unit_ex_hls_dup1_scan_idx_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_scan_idx_c_r;
logic            hls_transform_unit_ex_hls_dup1_scan_idx_c_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_cmdr_run_o_r;
logic            hls_transform_unit_ex_hls_dup1_cmdr_run_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup1_nPbW_r;
logic            hls_transform_unit_ex_hls_dup1_nPbW_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup1_nPbH_r;
logic            hls_transform_unit_ex_hls_dup1_nPbH_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_up_r;
logic            hls_transform_unit_ex_hls_dup1_cand_up_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_left_r;
logic            hls_transform_unit_ex_hls_dup1_cand_left_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_up_left_r;
logic            hls_transform_unit_ex_hls_dup1_cand_up_left_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_up_right_sap_r;
logic            hls_transform_unit_ex_hls_dup1_cand_up_right_sap_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_up_right_r;
logic            hls_transform_unit_ex_hls_dup1_cand_up_right_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_r;
logic            hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_up_c_r;
logic            hls_transform_unit_ex_hls_dup1_cand_up_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_left_c_r;
logic            hls_transform_unit_ex_hls_dup1_cand_left_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_up_left_c_r;
logic            hls_transform_unit_ex_hls_dup1_cand_up_left_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_r;
logic            hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_up_right_c_r;
logic            hls_transform_unit_ex_hls_dup1_cand_up_right_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_r;
logic            hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_r;
logic            hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_r;
logic            hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_r;
logic            hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_tu_cross_pf_r;
logic            hls_transform_unit_ex_hls_dup1_tu_cross_pf_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_first_qp_group_o_r;
logic            hls_transform_unit_ex_hls_dup1_first_qp_group_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_r;
logic            hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_r;
logic            hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_qp_y_o_r;
logic            hls_transform_unit_ex_hls_dup2_qp_y_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup2_log2_trafo_size_r;
logic            hls_transform_unit_ex_hls_dup2_log2_trafo_size_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_r;
logic            hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_scan_idx_o_r;
logic            hls_transform_unit_ex_hls_dup2_scan_idx_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_scan_idx_c_r;
logic            hls_transform_unit_ex_hls_dup2_scan_idx_c_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_cmdr_run_o_r;
logic            hls_transform_unit_ex_hls_dup2_cmdr_run_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup2_nPbW_r;
logic            hls_transform_unit_ex_hls_dup2_nPbW_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup2_nPbH_r;
logic            hls_transform_unit_ex_hls_dup2_nPbH_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_up_r;
logic            hls_transform_unit_ex_hls_dup2_cand_up_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_left_r;
logic            hls_transform_unit_ex_hls_dup2_cand_left_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_up_left_r;
logic            hls_transform_unit_ex_hls_dup2_cand_up_left_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_up_right_sap_r;
logic            hls_transform_unit_ex_hls_dup2_cand_up_right_sap_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_up_right_r;
logic            hls_transform_unit_ex_hls_dup2_cand_up_right_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_r;
logic            hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_up_c_r;
logic            hls_transform_unit_ex_hls_dup2_cand_up_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_left_c_r;
logic            hls_transform_unit_ex_hls_dup2_cand_left_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_up_left_c_r;
logic            hls_transform_unit_ex_hls_dup2_cand_up_left_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_r;
logic            hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_up_right_c_r;
logic            hls_transform_unit_ex_hls_dup2_cand_up_right_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_r;
logic            hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_r;
logic            hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_r;
logic            hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_r;
logic            hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_tu_cross_pf_r;
logic            hls_transform_unit_ex_hls_dup2_tu_cross_pf_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_first_qp_group_o_r;
logic            hls_transform_unit_ex_hls_dup2_first_qp_group_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_r;
logic            hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_r;
logic            hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_qp_y_o_r;
logic            hls_transform_unit_ex_hls_dup3_qp_y_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup3_log2_trafo_size_r;
logic            hls_transform_unit_ex_hls_dup3_log2_trafo_size_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_r;
logic            hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_scan_idx_o_r;
logic            hls_transform_unit_ex_hls_dup3_scan_idx_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_scan_idx_c_r;
logic            hls_transform_unit_ex_hls_dup3_scan_idx_c_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_cmdr_run_o_r;
logic            hls_transform_unit_ex_hls_dup3_cmdr_run_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup3_nPbW_r;
logic            hls_transform_unit_ex_hls_dup3_nPbW_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup3_nPbH_r;
logic            hls_transform_unit_ex_hls_dup3_nPbH_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_up_r;
logic            hls_transform_unit_ex_hls_dup3_cand_up_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_left_r;
logic            hls_transform_unit_ex_hls_dup3_cand_left_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_up_left_r;
logic            hls_transform_unit_ex_hls_dup3_cand_up_left_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_up_right_sap_r;
logic            hls_transform_unit_ex_hls_dup3_cand_up_right_sap_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_up_right_r;
logic            hls_transform_unit_ex_hls_dup3_cand_up_right_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_r;
logic            hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_up_c_r;
logic            hls_transform_unit_ex_hls_dup3_cand_up_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_left_c_r;
logic            hls_transform_unit_ex_hls_dup3_cand_left_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_up_left_c_r;
logic            hls_transform_unit_ex_hls_dup3_cand_up_left_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_r;
logic            hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_up_right_c_r;
logic            hls_transform_unit_ex_hls_dup3_cand_up_right_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_r;
logic            hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_r;
logic            hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_r;
logic            hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_r;
logic            hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_tu_cross_pf_r;
logic            hls_transform_unit_ex_hls_dup3_tu_cross_pf_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_first_qp_group_o_r;
logic            hls_transform_unit_ex_hls_dup3_first_qp_group_o_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_log2_trafo_size_r;
logic            hls_transform_tree_hls_log2_trafo_size_ap_vld_r;
logic [8-1:0]    hls_transform_tree_hls_split_transform_flag_r;
logic            hls_transform_tree_hls_split_transform_flag_ap_vld_r;
logic [8-1:0]    hls_transform_tree_hls_cbf_data_r;
logic            hls_transform_tree_hls_cbf_data_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_tu_chroma_mode_c_r;
logic            hls_transform_tree_hls_tu_chroma_mode_c_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_tu_intra_pred_mode_r;
logic            hls_transform_tree_hls_tu_intra_pred_mode_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_tu_intra_pred_mode_c_r;
logic            hls_transform_tree_hls_tu_intra_pred_mode_c_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_cbf_luma_o_r;
logic            hls_transform_tree_hls_cbf_luma_o_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup1_log2_trafo_size_r;
logic            hls_transform_tree_hls_dup1_log2_trafo_size_ap_vld_r;
logic [8-1:0]    hls_transform_tree_hls_dup1_split_transform_flag_r;
logic            hls_transform_tree_hls_dup1_split_transform_flag_ap_vld_r;
logic [8-1:0]    hls_transform_tree_hls_dup1_cbf_data_r;
logic            hls_transform_tree_hls_dup1_cbf_data_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup1_tu_chroma_mode_c_r;
logic            hls_transform_tree_hls_dup1_tu_chroma_mode_c_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup1_tu_intra_pred_mode_r;
logic            hls_transform_tree_hls_dup1_tu_intra_pred_mode_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_r;
logic            hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup1_cbf_luma_o_r;
logic            hls_transform_tree_hls_dup1_cbf_luma_o_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup2_log2_trafo_size_r;
logic            hls_transform_tree_hls_dup2_log2_trafo_size_ap_vld_r;
logic [8-1:0]    hls_transform_tree_hls_dup2_split_transform_flag_r;
logic            hls_transform_tree_hls_dup2_split_transform_flag_ap_vld_r;
logic [8-1:0]    hls_transform_tree_hls_dup2_cbf_data_r;
logic            hls_transform_tree_hls_dup2_cbf_data_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup2_tu_chroma_mode_c_r;
logic            hls_transform_tree_hls_dup2_tu_chroma_mode_c_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup2_tu_intra_pred_mode_r;
logic            hls_transform_tree_hls_dup2_tu_intra_pred_mode_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_r;
logic            hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup2_cbf_luma_o_r;
logic            hls_transform_tree_hls_dup2_cbf_luma_o_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup3_log2_trafo_size_r;
logic            hls_transform_tree_hls_dup3_log2_trafo_size_ap_vld_r;
logic [8-1:0]    hls_transform_tree_hls_dup3_split_transform_flag_r;
logic            hls_transform_tree_hls_dup3_split_transform_flag_ap_vld_r;
logic [8-1:0]    hls_transform_tree_hls_dup3_cbf_data_r;
logic            hls_transform_tree_hls_dup3_cbf_data_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup3_tu_chroma_mode_c_r;
logic            hls_transform_tree_hls_dup3_tu_chroma_mode_c_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup3_tu_intra_pred_mode_r;
logic            hls_transform_tree_hls_dup3_tu_intra_pred_mode_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_r;
logic            hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup3_cbf_luma_o_r;
logic            hls_transform_tree_hls_dup3_cbf_luma_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_x1_o_r;
logic            hls_coding_quadtree_hls_x1_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_y1_o_r;
logic            hls_coding_quadtree_hls_y1_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_log2_cb_size_minus_one_o_r;
logic            hls_coding_quadtree_hls_log2_cb_size_minus_one_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_cb_depth_plus_one_o_r;
logic            hls_coding_quadtree_hls_cb_depth_plus_one_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_split_cu_flag_o_r;
logic            hls_coding_quadtree_hls_split_cu_flag_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_more_data_o_r;
logic            hls_coding_quadtree_hls_more_data_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_qPy_pred_r;
logic            hls_coding_quadtree_hls_qPy_pred_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_qp_block_mask_o_r;
logic            hls_coding_quadtree_hls_qp_block_mask_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_cb_size_split_o_r;
logic            hls_coding_quadtree_hls_cb_size_split_o_ap_vld_r;
logic [8-1:0]    hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_r;
logic            hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_tu_cu_qp_delta_r;
logic            hls_coding_quadtree_hls_tu_cu_qp_delta_ap_vld_r;
logic [8-1:0]    hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_r;
logic            hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_depth_r;
logic            hls_coding_quadtree_hls_depth_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_x1_o_r;
logic            hls_coding_quadtree_hls_dup1_x1_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_y1_o_r;
logic            hls_coding_quadtree_hls_dup1_y1_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_r;
logic            hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_r;
logic            hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_split_cu_flag_o_r;
logic            hls_coding_quadtree_hls_dup1_split_cu_flag_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_more_data_o_r;
logic            hls_coding_quadtree_hls_dup1_more_data_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_qPy_pred_r;
logic            hls_coding_quadtree_hls_dup1_qPy_pred_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_qp_block_mask_o_r;
logic            hls_coding_quadtree_hls_dup1_qp_block_mask_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_cb_size_split_o_r;
logic            hls_coding_quadtree_hls_dup1_cb_size_split_o_ap_vld_r;
logic [8-1:0]    hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_r;
logic            hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_r;
logic            hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_ap_vld_r;
logic [8-1:0]    hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_r;
logic            hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_depth_r;
logic            hls_coding_quadtree_hls_dup1_depth_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_x1_o_r;
logic            hls_coding_quadtree_hls_dup2_x1_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_y1_o_r;
logic            hls_coding_quadtree_hls_dup2_y1_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_r;
logic            hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_r;
logic            hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_split_cu_flag_o_r;
logic            hls_coding_quadtree_hls_dup2_split_cu_flag_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_more_data_o_r;
logic            hls_coding_quadtree_hls_dup2_more_data_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_qPy_pred_r;
logic            hls_coding_quadtree_hls_dup2_qPy_pred_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_qp_block_mask_o_r;
logic            hls_coding_quadtree_hls_dup2_qp_block_mask_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_cb_size_split_o_r;
logic            hls_coding_quadtree_hls_dup2_cb_size_split_o_ap_vld_r;
logic [8-1:0]    hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_r;
logic            hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_r;
logic            hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_ap_vld_r;
logic [8-1:0]    hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_r;
logic            hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_depth_r;
logic            hls_coding_quadtree_hls_dup2_depth_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_x1_o_r;
logic            hls_coding_quadtree_hls_dup3_x1_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_y1_o_r;
logic            hls_coding_quadtree_hls_dup3_y1_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_r;
logic            hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_r;
logic            hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_split_cu_flag_o_r;
logic            hls_coding_quadtree_hls_dup3_split_cu_flag_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_more_data_o_r;
logic            hls_coding_quadtree_hls_dup3_more_data_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_qPy_pred_r;
logic            hls_coding_quadtree_hls_dup3_qPy_pred_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_qp_block_mask_o_r;
logic            hls_coding_quadtree_hls_dup3_qp_block_mask_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_cb_size_split_o_r;
logic            hls_coding_quadtree_hls_dup3_cb_size_split_o_ap_vld_r;
logic [8-1:0]    hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_r;
logic            hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_r;
logic            hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_ap_vld_r;
logic [8-1:0]    hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_r;
logic            hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_depth_r;
logic            hls_coding_quadtree_hls_dup3_depth_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_cu_transquant_bypass_flag_o_r;
logic            hls_coding_unit_hls_cu_transquant_bypass_flag_o_ap_vld_r;
logic [1-1:0]    hls_coding_unit_hls_pcm_flag_o_r;
logic            hls_coding_unit_hls_pcm_flag_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_pred_mode_o_r;
logic            hls_coding_unit_hls_pred_mode_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_part_mode_o_r;
logic            hls_coding_unit_hls_part_mode_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_max_trafo_depth_r;
logic            hls_coding_unit_hls_max_trafo_depth_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_cb_size_o_r;
logic            hls_coding_unit_hls_cb_size_o_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_idx_o_r;
logic            hls_coding_unit_hls_idx_o_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_xm_xBase_r;
logic            hls_coding_unit_hls_xm_xBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_xm_yBase_r;
logic            hls_coding_unit_hls_xm_yBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_xm_cb_xBase_r;
logic            hls_coding_unit_hls_xm_cb_xBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_xm_cb_yBase_r;
logic            hls_coding_unit_hls_xm_cb_yBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_xm_log2_cb_size_r;
logic            hls_coding_unit_hls_xm_log2_cb_size_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_length_r_r;
logic            hls_coding_unit_hls_length_r_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_xm_x_r;
logic            hls_coding_unit_hls_xm_x_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_xm_y_r;
logic            hls_coding_unit_hls_xm_y_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_pu_intra_pred_mode_0_r;
logic            hls_coding_unit_hls_pu_intra_pred_mode_0_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_pu_intra_pred_mode_1_r;
logic            hls_coding_unit_hls_pu_intra_pred_mode_1_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_pu_intra_pred_mode_2_r;
logic            hls_coding_unit_hls_pu_intra_pred_mode_2_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_pu_intra_pred_mode_3_r;
logic            hls_coding_unit_hls_pu_intra_pred_mode_3_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_qPy_pred_r;
logic            hls_coding_unit_hls_qPy_pred_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_skip_flag_start_r;
logic            hls_coding_unit_hls_skip_flag_start_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_intra_split_flag_r;
logic            hls_coding_unit_hls_intra_split_flag_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_r;
logic            hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_ap_vld_r;
logic [1-1:0]    hls_coding_unit_hls_dup1_pcm_flag_o_r;
logic            hls_coding_unit_hls_dup1_pcm_flag_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_pred_mode_o_r;
logic            hls_coding_unit_hls_dup1_pred_mode_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_part_mode_o_r;
logic            hls_coding_unit_hls_dup1_part_mode_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_max_trafo_depth_r;
logic            hls_coding_unit_hls_dup1_max_trafo_depth_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_cb_size_o_r;
logic            hls_coding_unit_hls_dup1_cb_size_o_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_idx_o_r;
logic            hls_coding_unit_hls_dup1_idx_o_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_xm_xBase_r;
logic            hls_coding_unit_hls_dup1_xm_xBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_xm_yBase_r;
logic            hls_coding_unit_hls_dup1_xm_yBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_xm_cb_xBase_r;
logic            hls_coding_unit_hls_dup1_xm_cb_xBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_xm_cb_yBase_r;
logic            hls_coding_unit_hls_dup1_xm_cb_yBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_xm_log2_cb_size_r;
logic            hls_coding_unit_hls_dup1_xm_log2_cb_size_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_length_r_r;
logic            hls_coding_unit_hls_dup1_length_r_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_xm_x_r;
logic            hls_coding_unit_hls_dup1_xm_x_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_xm_y_r;
logic            hls_coding_unit_hls_dup1_xm_y_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_r;
logic            hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_r;
logic            hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_r;
logic            hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_r;
logic            hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_qPy_pred_r;
logic            hls_coding_unit_hls_dup1_qPy_pred_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_skip_flag_start_r;
logic            hls_coding_unit_hls_dup1_skip_flag_start_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_intra_split_flag_r;
logic            hls_coding_unit_hls_dup1_intra_split_flag_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_r;
logic            hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_ap_vld_r;
logic [1-1:0]    hls_coding_unit_hls_dup2_pcm_flag_o_r;
logic            hls_coding_unit_hls_dup2_pcm_flag_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_pred_mode_o_r;
logic            hls_coding_unit_hls_dup2_pred_mode_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_part_mode_o_r;
logic            hls_coding_unit_hls_dup2_part_mode_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_max_trafo_depth_r;
logic            hls_coding_unit_hls_dup2_max_trafo_depth_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_cb_size_o_r;
logic            hls_coding_unit_hls_dup2_cb_size_o_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_idx_o_r;
logic            hls_coding_unit_hls_dup2_idx_o_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_xm_xBase_r;
logic            hls_coding_unit_hls_dup2_xm_xBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_xm_yBase_r;
logic            hls_coding_unit_hls_dup2_xm_yBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_xm_cb_xBase_r;
logic            hls_coding_unit_hls_dup2_xm_cb_xBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_xm_cb_yBase_r;
logic            hls_coding_unit_hls_dup2_xm_cb_yBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_xm_log2_cb_size_r;
logic            hls_coding_unit_hls_dup2_xm_log2_cb_size_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_length_r_r;
logic            hls_coding_unit_hls_dup2_length_r_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_xm_x_r;
logic            hls_coding_unit_hls_dup2_xm_x_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_xm_y_r;
logic            hls_coding_unit_hls_dup2_xm_y_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_r;
logic            hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_r;
logic            hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_r;
logic            hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_r;
logic            hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_qPy_pred_r;
logic            hls_coding_unit_hls_dup2_qPy_pred_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_skip_flag_start_r;
logic            hls_coding_unit_hls_dup2_skip_flag_start_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_intra_split_flag_r;
logic            hls_coding_unit_hls_dup2_intra_split_flag_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_r;
logic            hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_ap_vld_r;
logic [1-1:0]    hls_coding_unit_hls_dup3_pcm_flag_o_r;
logic            hls_coding_unit_hls_dup3_pcm_flag_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_pred_mode_o_r;
logic            hls_coding_unit_hls_dup3_pred_mode_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_part_mode_o_r;
logic            hls_coding_unit_hls_dup3_part_mode_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_max_trafo_depth_r;
logic            hls_coding_unit_hls_dup3_max_trafo_depth_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_cb_size_o_r;
logic            hls_coding_unit_hls_dup3_cb_size_o_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_idx_o_r;
logic            hls_coding_unit_hls_dup3_idx_o_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_xm_xBase_r;
logic            hls_coding_unit_hls_dup3_xm_xBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_xm_yBase_r;
logic            hls_coding_unit_hls_dup3_xm_yBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_xm_cb_xBase_r;
logic            hls_coding_unit_hls_dup3_xm_cb_xBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_xm_cb_yBase_r;
logic            hls_coding_unit_hls_dup3_xm_cb_yBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_xm_log2_cb_size_r;
logic            hls_coding_unit_hls_dup3_xm_log2_cb_size_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_length_r_r;
logic            hls_coding_unit_hls_dup3_length_r_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_xm_x_r;
logic            hls_coding_unit_hls_dup3_xm_x_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_xm_y_r;
logic            hls_coding_unit_hls_dup3_xm_y_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_r;
logic            hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_r;
logic            hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_r;
logic            hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_r;
logic            hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_qPy_pred_r;
logic            hls_coding_unit_hls_dup3_qPy_pred_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_skip_flag_start_r;
logic            hls_coding_unit_hls_dup3_skip_flag_start_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_intra_split_flag_r;
logic            hls_coding_unit_hls_dup3_intra_split_flag_ap_vld_r;
logic [8-1:0]    copy_top_left_pixel_hls_cmdr_run_o_r;
logic            copy_top_left_pixel_hls_cmdr_run_o_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_0_r;
logic            genPredCol_hls_predColBuf_0_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_1_r;
logic            genPredCol_hls_predColBuf_1_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_2_r;
logic            genPredCol_hls_predColBuf_2_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_3_r;
logic            genPredCol_hls_predColBuf_3_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_4_r;
logic            genPredCol_hls_predColBuf_4_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_5_r;
logic            genPredCol_hls_predColBuf_5_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_6_r;
logic            genPredCol_hls_predColBuf_6_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_7_r;
logic            genPredCol_hls_predColBuf_7_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_8_r;
logic            genPredCol_hls_predColBuf_8_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_9_r;
logic            genPredCol_hls_predColBuf_9_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_10_r;
logic            genPredCol_hls_predColBuf_10_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_11_r;
logic            genPredCol_hls_predColBuf_11_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_12_r;
logic            genPredCol_hls_predColBuf_12_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_13_r;
logic            genPredCol_hls_predColBuf_13_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_14_r;
logic            genPredCol_hls_predColBuf_14_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_15_r;
logic            genPredCol_hls_predColBuf_15_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_16_o_r;
logic            genPredCol_hls_predColBuf_16_o_ap_vld_r;
logic [32-1:0]   ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_r;
logic            ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_ap_vld_r;
logic [8-1:0]    ff_hevc_set_qPy_hls_qp_y_r;
logic            ff_hevc_set_qPy_hls_qp_y_ap_vld_r;
logic [8-1:0]    ff_hevc_set_qPy_hls_first_qp_group_o_r;
logic            ff_hevc_set_qPy_hls_first_qp_group_o_ap_vld_r;
logic [8-1:0]    hls_decode_neighbour_hls_first_qp_group_r;
logic            hls_decode_neighbour_hls_first_qp_group_ap_vld_r;
logic [16-1:0]   hls_decode_neighbour_hls_end_of_tiles_x_r;
logic            hls_decode_neighbour_hls_end_of_tiles_x_ap_vld_r;
logic [16-1:0]   hls_decode_neighbour_hls_end_of_tiles_y_r;
logic            hls_decode_neighbour_hls_end_of_tiles_y_ap_vld_r;
logic [8-1:0]    hls_decode_neighbour_hls_slice_or_tiles_left_boundary_r;
logic            hls_decode_neighbour_hls_slice_or_tiles_left_boundary_ap_vld_r;
logic [8-1:0]    hls_decode_neighbour_hls_slice_or_tiles_up_boundary_r;
logic            hls_decode_neighbour_hls_slice_or_tiles_up_boundary_ap_vld_r;
logic [1-1:0]    hls_decode_neighbour_hls_ctb_left_flag_r;
logic            hls_decode_neighbour_hls_ctb_left_flag_ap_vld_r;
logic [1-1:0]    hls_decode_neighbour_hls_ctb_up_flag_r;
logic            hls_decode_neighbour_hls_ctb_up_flag_ap_vld_r;
logic [1-1:0]    hls_decode_neighbour_hls_ctb_up_right_flag_r;
logic            hls_decode_neighbour_hls_ctb_up_right_flag_ap_vld_r;
logic [1-1:0]    hls_decode_neighbour_hls_ctb_up_left_flag_r;
logic            hls_decode_neighbour_hls_ctb_up_left_flag_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_0_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_0_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_1_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_1_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_2_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_2_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_3_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_3_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_4_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_4_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_5_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_5_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_6_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_6_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_7_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_7_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_8_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_8_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_9_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_9_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_10_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_10_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_11_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_11_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_12_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_12_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_13_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_13_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_14_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_14_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_15_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_15_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_16_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_16_o_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_hls_numIntraNeighbor_r;
logic            init_intra_neighbors_hls_numIntraNeighbor_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_hls_totalUnits_r;
logic            init_intra_neighbors_hls_totalUnits_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_hls_aboveUnits_r;
logic            init_intra_neighbors_hls_aboveUnits_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_hls_leftUnits_r;
logic            init_intra_neighbors_hls_leftUnits_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_hls_unitWidth_r;
logic            init_intra_neighbors_hls_unitWidth_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_hls_unitHeight_r;
logic            init_intra_neighbors_hls_unitHeight_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_hls_log2TrSize_r;
logic            init_intra_neighbors_hls_log2TrSize_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_hls_bNeighborFlags_0_o_r;
logic [32-1:0]   init_intra_neighbors_hls_bNeighborFlags_1_o_r;
logic            init_intra_neighbors_hls_bNeighborFlags_2_o_r;
logic            init_intra_neighbors_hls_bNeighborFlags_0_o_ap_vld_r;
logic            init_intra_neighbors_hls_bNeighborFlags_1_o_ap_vld_r;
logic            init_intra_neighbors_hls_bNeighborFlags_2_o_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_numIntraNeighbor_c_r;
logic            init_intra_neighbors_chroma_hls_numIntraNeighbor_c_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_totalUnits_c_r;
logic            init_intra_neighbors_chroma_hls_totalUnits_c_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_aboveUnits_c_r;
logic            init_intra_neighbors_chroma_hls_aboveUnits_c_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_leftUnits_c_r;
logic            init_intra_neighbors_chroma_hls_leftUnits_c_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_unitWidth_c_r;
logic            init_intra_neighbors_chroma_hls_unitWidth_c_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_unitHeight_c_r;
logic            init_intra_neighbors_chroma_hls_unitHeight_c_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_log2TrSize_c_r;
logic            init_intra_neighbors_chroma_hls_log2TrSize_c_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_r;
logic            init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_r;
logic            init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_ap_vld_r;
logic            init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_ap_vld_r;
logic            init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_ap_vld_r;
logic [1-1:0]    ff_hevc_set_neighbour_available_hls_cand_up_r;
logic            ff_hevc_set_neighbour_available_hls_cand_up_ap_vld_r;
logic [1-1:0]    ff_hevc_set_neighbour_available_hls_cand_left_r;
logic            ff_hevc_set_neighbour_available_hls_cand_left_ap_vld_r;
logic [1-1:0]    ff_hevc_set_neighbour_available_hls_cand_up_left_r;
logic            ff_hevc_set_neighbour_available_hls_cand_up_left_ap_vld_r;
logic [1-1:0]    ff_hevc_set_neighbour_available_hls_cand_up_right_sap_r;
logic            ff_hevc_set_neighbour_available_hls_cand_up_right_sap_ap_vld_r;
logic [1-1:0]    ff_hevc_set_neighbour_available_hls_cand_up_right_r;
logic            ff_hevc_set_neighbour_available_hls_cand_up_right_ap_vld_r;
logic [1-1:0]    ff_hevc_set_neighbour_available_hls_cand_bottom_left_r;
logic            ff_hevc_set_neighbour_available_hls_cand_bottom_left_ap_vld_r;
logic [32-1:0]   ff_hevc_set_neighbour_available_hls_nPbW_r;
logic            ff_hevc_set_neighbour_available_hls_nPbW_ap_vld_r;
logic [32-1:0]   ff_hevc_set_neighbour_available_hls_nPbH_r;
logic            ff_hevc_set_neighbour_available_hls_nPbH_ap_vld_r;
logic            innerloop_ff_hevc_extract_rbsp_1_hls_ready_r;
logic            innerloop_ff_hevc_extract_rbsp_2_hls_ready_r;
logic            fill_ref_samples_mtdma_top_wrp_ready_r;
logic            hevc_find_frame_end_hls_ready_r;
logic            intra_prediction_unit_ex_hls_ready_r;
logic            hls_transform_unit_ex_hls_ready_r;
logic            hls_transform_unit_ex_hls_dup1_ready_r;
logic            hls_transform_unit_ex_hls_dup2_ready_r;
logic            hls_transform_unit_ex_hls_dup3_ready_r;
logic            hls_transform_tree_hls_ready_r;
logic            hls_transform_tree_hls_dup1_ready_r;
logic            hls_transform_tree_hls_dup2_ready_r;
logic            hls_transform_tree_hls_dup3_ready_r;
logic            hls_coding_quadtree_hls_ready_r;
logic            hls_coding_quadtree_hls_dup1_ready_r;
logic            hls_coding_quadtree_hls_dup2_ready_r;
logic            hls_coding_quadtree_hls_dup3_ready_r;
logic            hls_coding_unit_hls_ready_r;
logic            hls_coding_unit_hls_dup1_ready_r;
logic            hls_coding_unit_hls_dup2_ready_r;
logic            hls_coding_unit_hls_dup3_ready_r;
logic            copy_top_left_pixel_hls_ready_r;
logic            genPredCol_hls_ready_r;
logic            ff_hevc_get_sub_cu_zscan_id_hls_ready_r;
logic            ff_hevc_skip_flag_decode_hls_ready_r;
logic            ff_hevc_set_qPy_hls_ready_r;
logic            hls_decode_neighbour_hls_ready_r;
logic            set_tab_mvf_pred_flag_hls_ready_r;
logic            init_intra_neighbors_hls_ready_r;
logic            init_intra_neighbors_chroma_hls_ready_r;
logic            ff_hevc_set_neighbour_available_hls_ready_r;
logic            scalar_writing_0;
logic            scalar_writing_8;
logic            scalar_writing_16;
logic            scalar_writing_20;
logic            scalar_writing_28;
logic            scalar_writing_32;
logic            scalar_writing_40;
logic            scalar_writing_44;
logic            scalar_writing_48;
logic            scalar_writing_56;
logic            scalar_writing_168;
logic            scalar_writing_180;
logic            scalar_writing_184;
logic            scalar_writing_188;
logic            scalar_writing_192;
logic            scalar_writing_196;
logic            scalar_writing_200;
logic            scalar_writing_204;
logic            scalar_writing_208;
logic            scalar_writing_212;
logic            scalar_writing_216;
logic            scalar_writing_220;
logic            scalar_writing_224;
logic            scalar_writing_228;
logic            scalar_writing_232;
logic            scalar_writing_236;
logic            scalar_writing_240;
logic            scalar_writing_244;
logic            scalar_writing_292;
logic            scalar_writing_296;
logic            scalar_writing_300;
logic            scalar_writing_304;
logic            scalar_writing_308;
logic            scalar_writing_312;
logic            scalar_writing_316;
logic            scalar_writing_464;
logic            scalar_writing_468;
logic            scalar_writing_472;
logic            scalar_writing_476;
logic            scalar_writing_484;
logic            scalar_writing_488;
logic            scalar_writing_508;
logic            scalar_writing_509;
logic            scalar_writing_510;
logic            scalar_writing_511;
logic            scalar_writing_512;
logic            scalar_writing_513;
logic            scalar_writing_514;
logic            scalar_writing_515;
logic            scalar_writing_516;
logic            scalar_writing_517;
logic            scalar_writing_518;
logic            scalar_writing_519;
logic            scalar_writing_520;
logic            scalar_writing_521;
logic            scalar_writing_522;
logic            scalar_writing_523;
logic            scalar_writing_532;
logic            scalar_writing_536;
logic            scalar_writing_540;
logic            scalar_writing_560;
logic            scalar_writing_564;
logic            scalar_writing_568;
logic            scalar_writing_572;
logic            scalar_writing_576;
logic            scalar_writing_580;
logic            scalar_writing_584;
logic            scalar_writing_588;
logic            scalar_writing_596;
logic            scalar_writing_600;
logic            scalar_writing_604;
logic            scalar_writing_608;
logic            scalar_writing_612;
logic            scalar_writing_616;
logic            scalar_writing_620;
logic            scalar_writing_624;
logic            scalar_writing_628;
logic            scalar_writing_632;
logic            scalar_writing_636;
logic            scalar_writing_640;
logic            scalar_writing_644;
logic            scalar_writing_648;
logic            scalar_writing_652;
logic            scalar_writing_656;
logic            scalar_writing_660;
logic            scalar_writing_664;
logic            scalar_writing_668;
logic            scalar_writing_672;
logic            scalar_writing_684;
logic            scalar_writing_688;
logic            scalar_writing_692;
logic            scalar_writing_696;
logic            scalar_writing_700;
logic            scalar_writing_704;
logic            scalar_writing_708;
logic            scalar_writing_712;
logic            scalar_writing_1136;
logic            scalar_writing_1488;
logic            scalar_writing_1492;
logic            scalar_writing_1496;
logic            scalar_writing_1504;
logic            scalar_writing_1508;


always @ (posedge clk or negedge rstn) begin 
    if (~rstn) begin
        ap_part_r               <= '{default: '0};
        ap_arb_start_r          <= '{default: '0};
        ap_arb_start_2r         <= '{default: '0};
        ap_arb_start_running_r	<= '{default: '0};
        ap_arb_ret_r            <= '{default: '0};
        ap_arb_ret_2r           <= '{default: '0};
        ap_arb_ret_running_r    <= '{default: '0};
        ap_arb_reload_r         <= '{default: '0};
        ap_arb_reload_running_r <= '{default: '0};
        ap_running_r            <= '{default: '0};
        ap_start_r              <= '{default: '0};
        ap_ready_r              <= '{default: '0};
        ap_done_r               <= '{default: '0};
        scalar_argdone_r        <= '{default: '0};
        scalar_argdone_all_r    <= '{default: '0};
        scalar_argVld_r         <= '{default: '0};
        scalar_argVld_all_r     <= '{default: '0};
        scalar_argAck_r			<= '{default: '0};
		scalar_argAckdone_r		<= '{default: 1'b1};
		scalar_argAckdone_all_r	<= '{default: '0};
		scalar_rdat_vld_r		<= '{default: '0};
        array_argdone_r         <= '{default: '0};
        array_argVld_r          <= '{default: '0};
        array_adr_r             <= '{default: '0};
        cyclic_argdone_r        <= '{default: '0};
        cyclic_argVld_r         <= '{default: '0};
        
        innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_r <= 0;
        innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_ap_vld_r <= 0;
        innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_r <= 0;
        innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_ap_vld_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_ap_vld_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_ap_vld_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_ap_vld_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_ap_vld_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_ap_vld_r <= 0;
        hevc_find_frame_end_hls_state64_0_o_r    <= 0;
        hevc_find_frame_end_hls_state64_1_o_r    <= 0;
        hevc_find_frame_end_hls_state64_0_o_ap_vld_r <= 0;
        hevc_find_frame_end_hls_state64_1_o_ap_vld_r <= 0;
        hevc_find_frame_end_hls_frame_start_found_o_r <= 0;
        hevc_find_frame_end_hls_frame_start_found_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_r <= 0;
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_r <= 0;
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_r <= 0;
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_r <= 0;
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_r <= 0;
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_r <= 0;
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_r <= 0;
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_r <= 0;
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_max_trafo_depth_r <= 0;
        intra_prediction_unit_ex_hls_max_trafo_depth_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_r <= 0;
        hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_r <= 0;
        hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_qp_y_o_r       <= 0;
        hls_transform_unit_ex_hls_qp_y_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_log2_trafo_size_r <= 0;
        hls_transform_unit_ex_hls_log2_trafo_size_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_log2_trafo_size_c_o_r <= 0;
        hls_transform_unit_ex_hls_log2_trafo_size_c_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_scan_idx_o_r   <= 0;
        hls_transform_unit_ex_hls_scan_idx_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_scan_idx_c_r   <= 0;
        hls_transform_unit_ex_hls_scan_idx_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cmdr_run_o_r   <= 0;
        hls_transform_unit_ex_hls_cmdr_run_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_nPbW_r         <= 0;
        hls_transform_unit_ex_hls_nPbW_ap_vld_r  <= 0;
        hls_transform_unit_ex_hls_nPbH_r         <= 0;
        hls_transform_unit_ex_hls_nPbH_ap_vld_r  <= 0;
        hls_transform_unit_ex_hls_cand_up_r      <= 0;
        hls_transform_unit_ex_hls_cand_up_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_left_r    <= 0;
        hls_transform_unit_ex_hls_cand_left_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_up_left_r <= 0;
        hls_transform_unit_ex_hls_cand_up_left_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_up_right_sap_r <= 0;
        hls_transform_unit_ex_hls_cand_up_right_sap_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_up_right_r <= 0;
        hls_transform_unit_ex_hls_cand_up_right_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_bottom_left_o_r <= 0;
        hls_transform_unit_ex_hls_cand_bottom_left_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_up_c_r    <= 0;
        hls_transform_unit_ex_hls_cand_up_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_left_c_r  <= 0;
        hls_transform_unit_ex_hls_cand_left_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_up_left_c_r <= 0;
        hls_transform_unit_ex_hls_cand_up_left_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_up_right_sap_c_r <= 0;
        hls_transform_unit_ex_hls_cand_up_right_sap_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_up_right_c_r <= 0;
        hls_transform_unit_ex_hls_cand_up_right_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_bottom_left_c_o_r <= 0;
        hls_transform_unit_ex_hls_cand_bottom_left_c_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_r <= 0;
        hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_r <= 0;
        hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_tu_cu_qp_delta_r <= 0;
        hls_transform_unit_ex_hls_tu_cu_qp_delta_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_tu_cross_pf_r  <= 0;
        hls_transform_unit_ex_hls_tu_cross_pf_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_first_qp_group_o_r <= 0;
        hls_transform_unit_ex_hls_first_qp_group_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_qp_y_o_r  <= 0;
        hls_transform_unit_ex_hls_dup1_qp_y_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_log2_trafo_size_r <= 0;
        hls_transform_unit_ex_hls_dup1_log2_trafo_size_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_r <= 0;
        hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_scan_idx_o_r <= 0;
        hls_transform_unit_ex_hls_dup1_scan_idx_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_scan_idx_c_r <= 0;
        hls_transform_unit_ex_hls_dup1_scan_idx_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cmdr_run_o_r <= 0;
        hls_transform_unit_ex_hls_dup1_cmdr_run_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_nPbW_r    <= 0;
        hls_transform_unit_ex_hls_dup1_nPbW_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_nPbH_r    <= 0;
        hls_transform_unit_ex_hls_dup1_nPbH_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_left_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_left_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_left_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_left_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_right_sap_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_right_sap_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_right_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_right_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_c_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_left_c_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_left_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_left_c_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_left_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_right_c_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_right_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_cross_pf_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_cross_pf_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_first_qp_group_o_r <= 0;
        hls_transform_unit_ex_hls_dup1_first_qp_group_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_qp_y_o_r  <= 0;
        hls_transform_unit_ex_hls_dup2_qp_y_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_log2_trafo_size_r <= 0;
        hls_transform_unit_ex_hls_dup2_log2_trafo_size_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_r <= 0;
        hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_scan_idx_o_r <= 0;
        hls_transform_unit_ex_hls_dup2_scan_idx_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_scan_idx_c_r <= 0;
        hls_transform_unit_ex_hls_dup2_scan_idx_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cmdr_run_o_r <= 0;
        hls_transform_unit_ex_hls_dup2_cmdr_run_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_nPbW_r    <= 0;
        hls_transform_unit_ex_hls_dup2_nPbW_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_nPbH_r    <= 0;
        hls_transform_unit_ex_hls_dup2_nPbH_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_left_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_left_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_left_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_left_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_right_sap_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_right_sap_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_right_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_right_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_c_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_left_c_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_left_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_left_c_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_left_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_right_c_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_right_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_cross_pf_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_cross_pf_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_first_qp_group_o_r <= 0;
        hls_transform_unit_ex_hls_dup2_first_qp_group_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_qp_y_o_r  <= 0;
        hls_transform_unit_ex_hls_dup3_qp_y_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_log2_trafo_size_r <= 0;
        hls_transform_unit_ex_hls_dup3_log2_trafo_size_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_r <= 0;
        hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_scan_idx_o_r <= 0;
        hls_transform_unit_ex_hls_dup3_scan_idx_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_scan_idx_c_r <= 0;
        hls_transform_unit_ex_hls_dup3_scan_idx_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cmdr_run_o_r <= 0;
        hls_transform_unit_ex_hls_dup3_cmdr_run_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_nPbW_r    <= 0;
        hls_transform_unit_ex_hls_dup3_nPbW_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_nPbH_r    <= 0;
        hls_transform_unit_ex_hls_dup3_nPbH_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_left_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_left_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_left_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_left_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_right_sap_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_right_sap_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_right_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_right_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_c_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_left_c_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_left_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_left_c_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_left_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_right_c_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_right_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_cross_pf_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_cross_pf_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_first_qp_group_o_r <= 0;
        hls_transform_unit_ex_hls_dup3_first_qp_group_o_ap_vld_r <= 0;
        hls_transform_tree_hls_log2_trafo_size_r <= 0;
        hls_transform_tree_hls_log2_trafo_size_ap_vld_r <= 0;
        hls_transform_tree_hls_split_transform_flag_r <= 0;
        hls_transform_tree_hls_split_transform_flag_ap_vld_r <= 0;
        hls_transform_tree_hls_cbf_data_r        <= 0;
        hls_transform_tree_hls_cbf_data_ap_vld_r <= 0;
        hls_transform_tree_hls_tu_chroma_mode_c_r <= 0;
        hls_transform_tree_hls_tu_chroma_mode_c_ap_vld_r <= 0;
        hls_transform_tree_hls_tu_intra_pred_mode_r <= 0;
        hls_transform_tree_hls_tu_intra_pred_mode_ap_vld_r <= 0;
        hls_transform_tree_hls_tu_intra_pred_mode_c_r <= 0;
        hls_transform_tree_hls_tu_intra_pred_mode_c_ap_vld_r <= 0;
        hls_transform_tree_hls_cbf_luma_o_r      <= 0;
        hls_transform_tree_hls_cbf_luma_o_ap_vld_r <= 0;
        hls_transform_tree_hls_dup1_log2_trafo_size_r <= 0;
        hls_transform_tree_hls_dup1_log2_trafo_size_ap_vld_r <= 0;
        hls_transform_tree_hls_dup1_split_transform_flag_r <= 0;
        hls_transform_tree_hls_dup1_split_transform_flag_ap_vld_r <= 0;
        hls_transform_tree_hls_dup1_cbf_data_r   <= 0;
        hls_transform_tree_hls_dup1_cbf_data_ap_vld_r <= 0;
        hls_transform_tree_hls_dup1_tu_chroma_mode_c_r <= 0;
        hls_transform_tree_hls_dup1_tu_chroma_mode_c_ap_vld_r <= 0;
        hls_transform_tree_hls_dup1_tu_intra_pred_mode_r <= 0;
        hls_transform_tree_hls_dup1_tu_intra_pred_mode_ap_vld_r <= 0;
        hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_r <= 0;
        hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_ap_vld_r <= 0;
        hls_transform_tree_hls_dup1_cbf_luma_o_r <= 0;
        hls_transform_tree_hls_dup1_cbf_luma_o_ap_vld_r <= 0;
        hls_transform_tree_hls_dup2_log2_trafo_size_r <= 0;
        hls_transform_tree_hls_dup2_log2_trafo_size_ap_vld_r <= 0;
        hls_transform_tree_hls_dup2_split_transform_flag_r <= 0;
        hls_transform_tree_hls_dup2_split_transform_flag_ap_vld_r <= 0;
        hls_transform_tree_hls_dup2_cbf_data_r   <= 0;
        hls_transform_tree_hls_dup2_cbf_data_ap_vld_r <= 0;
        hls_transform_tree_hls_dup2_tu_chroma_mode_c_r <= 0;
        hls_transform_tree_hls_dup2_tu_chroma_mode_c_ap_vld_r <= 0;
        hls_transform_tree_hls_dup2_tu_intra_pred_mode_r <= 0;
        hls_transform_tree_hls_dup2_tu_intra_pred_mode_ap_vld_r <= 0;
        hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_r <= 0;
        hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_ap_vld_r <= 0;
        hls_transform_tree_hls_dup2_cbf_luma_o_r <= 0;
        hls_transform_tree_hls_dup2_cbf_luma_o_ap_vld_r <= 0;
        hls_transform_tree_hls_dup3_log2_trafo_size_r <= 0;
        hls_transform_tree_hls_dup3_log2_trafo_size_ap_vld_r <= 0;
        hls_transform_tree_hls_dup3_split_transform_flag_r <= 0;
        hls_transform_tree_hls_dup3_split_transform_flag_ap_vld_r <= 0;
        hls_transform_tree_hls_dup3_cbf_data_r   <= 0;
        hls_transform_tree_hls_dup3_cbf_data_ap_vld_r <= 0;
        hls_transform_tree_hls_dup3_tu_chroma_mode_c_r <= 0;
        hls_transform_tree_hls_dup3_tu_chroma_mode_c_ap_vld_r <= 0;
        hls_transform_tree_hls_dup3_tu_intra_pred_mode_r <= 0;
        hls_transform_tree_hls_dup3_tu_intra_pred_mode_ap_vld_r <= 0;
        hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_r <= 0;
        hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_ap_vld_r <= 0;
        hls_transform_tree_hls_dup3_cbf_luma_o_r <= 0;
        hls_transform_tree_hls_dup3_cbf_luma_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_x1_o_r           <= 0;
        hls_coding_quadtree_hls_x1_o_ap_vld_r    <= 0;
        hls_coding_quadtree_hls_y1_o_r           <= 0;
        hls_coding_quadtree_hls_y1_o_ap_vld_r    <= 0;
        hls_coding_quadtree_hls_log2_cb_size_minus_one_o_r <= 0;
        hls_coding_quadtree_hls_log2_cb_size_minus_one_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_cb_depth_plus_one_o_r <= 0;
        hls_coding_quadtree_hls_cb_depth_plus_one_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_split_cu_flag_o_r <= 0;
        hls_coding_quadtree_hls_split_cu_flag_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_more_data_o_r    <= 0;
        hls_coding_quadtree_hls_more_data_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_qPy_pred_r       <= 0;
        hls_coding_quadtree_hls_qPy_pred_ap_vld_r <= 0;
        hls_coding_quadtree_hls_qp_block_mask_o_r <= 0;
        hls_coding_quadtree_hls_qp_block_mask_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_cb_size_split_o_r <= 0;
        hls_coding_quadtree_hls_cb_size_split_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_r <= 0;
        hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_ap_vld_r <= 0;
        hls_coding_quadtree_hls_tu_cu_qp_delta_r <= 0;
        hls_coding_quadtree_hls_tu_cu_qp_delta_ap_vld_r <= 0;
        hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_r <= 0;
        hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_ap_vld_r <= 0;
        hls_coding_quadtree_hls_depth_r          <= 0;
        hls_coding_quadtree_hls_depth_ap_vld_r   <= 0;
        hls_coding_quadtree_hls_dup1_x1_o_r      <= 0;
        hls_coding_quadtree_hls_dup1_x1_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_y1_o_r      <= 0;
        hls_coding_quadtree_hls_dup1_y1_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_r <= 0;
        hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_r <= 0;
        hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_split_cu_flag_o_r <= 0;
        hls_coding_quadtree_hls_dup1_split_cu_flag_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_more_data_o_r <= 0;
        hls_coding_quadtree_hls_dup1_more_data_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_qPy_pred_r  <= 0;
        hls_coding_quadtree_hls_dup1_qPy_pred_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_qp_block_mask_o_r <= 0;
        hls_coding_quadtree_hls_dup1_qp_block_mask_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_cb_size_split_o_r <= 0;
        hls_coding_quadtree_hls_dup1_cb_size_split_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_r <= 0;
        hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_r <= 0;
        hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_r <= 0;
        hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_depth_r     <= 0;
        hls_coding_quadtree_hls_dup1_depth_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_x1_o_r      <= 0;
        hls_coding_quadtree_hls_dup2_x1_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_y1_o_r      <= 0;
        hls_coding_quadtree_hls_dup2_y1_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_r <= 0;
        hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_r <= 0;
        hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_split_cu_flag_o_r <= 0;
        hls_coding_quadtree_hls_dup2_split_cu_flag_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_more_data_o_r <= 0;
        hls_coding_quadtree_hls_dup2_more_data_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_qPy_pred_r  <= 0;
        hls_coding_quadtree_hls_dup2_qPy_pred_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_qp_block_mask_o_r <= 0;
        hls_coding_quadtree_hls_dup2_qp_block_mask_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_cb_size_split_o_r <= 0;
        hls_coding_quadtree_hls_dup2_cb_size_split_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_r <= 0;
        hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_r <= 0;
        hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_r <= 0;
        hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_depth_r     <= 0;
        hls_coding_quadtree_hls_dup2_depth_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_x1_o_r      <= 0;
        hls_coding_quadtree_hls_dup3_x1_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_y1_o_r      <= 0;
        hls_coding_quadtree_hls_dup3_y1_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_r <= 0;
        hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_r <= 0;
        hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_split_cu_flag_o_r <= 0;
        hls_coding_quadtree_hls_dup3_split_cu_flag_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_more_data_o_r <= 0;
        hls_coding_quadtree_hls_dup3_more_data_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_qPy_pred_r  <= 0;
        hls_coding_quadtree_hls_dup3_qPy_pred_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_qp_block_mask_o_r <= 0;
        hls_coding_quadtree_hls_dup3_qp_block_mask_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_cb_size_split_o_r <= 0;
        hls_coding_quadtree_hls_dup3_cb_size_split_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_r <= 0;
        hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_r <= 0;
        hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_r <= 0;
        hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_depth_r     <= 0;
        hls_coding_quadtree_hls_dup3_depth_ap_vld_r <= 0;
        hls_coding_unit_hls_cu_transquant_bypass_flag_o_r <= 0;
        hls_coding_unit_hls_cu_transquant_bypass_flag_o_ap_vld_r <= 0;
        hls_coding_unit_hls_pcm_flag_o_r         <= 0;
        hls_coding_unit_hls_pcm_flag_o_ap_vld_r  <= 0;
        hls_coding_unit_hls_pred_mode_o_r        <= 0;
        hls_coding_unit_hls_pred_mode_o_ap_vld_r <= 0;
        hls_coding_unit_hls_part_mode_o_r        <= 0;
        hls_coding_unit_hls_part_mode_o_ap_vld_r <= 0;
        hls_coding_unit_hls_max_trafo_depth_r    <= 0;
        hls_coding_unit_hls_max_trafo_depth_ap_vld_r <= 0;
        hls_coding_unit_hls_cb_size_o_r          <= 0;
        hls_coding_unit_hls_cb_size_o_ap_vld_r   <= 0;
        hls_coding_unit_hls_idx_o_r              <= 0;
        hls_coding_unit_hls_idx_o_ap_vld_r       <= 0;
        hls_coding_unit_hls_xm_xBase_r           <= 0;
        hls_coding_unit_hls_xm_xBase_ap_vld_r    <= 0;
        hls_coding_unit_hls_xm_yBase_r           <= 0;
        hls_coding_unit_hls_xm_yBase_ap_vld_r    <= 0;
        hls_coding_unit_hls_xm_cb_xBase_r        <= 0;
        hls_coding_unit_hls_xm_cb_xBase_ap_vld_r <= 0;
        hls_coding_unit_hls_xm_cb_yBase_r        <= 0;
        hls_coding_unit_hls_xm_cb_yBase_ap_vld_r <= 0;
        hls_coding_unit_hls_xm_log2_cb_size_r    <= 0;
        hls_coding_unit_hls_xm_log2_cb_size_ap_vld_r <= 0;
        hls_coding_unit_hls_length_r_r           <= 0;
        hls_coding_unit_hls_length_r_ap_vld_r    <= 0;
        hls_coding_unit_hls_xm_x_r               <= 0;
        hls_coding_unit_hls_xm_x_ap_vld_r        <= 0;
        hls_coding_unit_hls_xm_y_r               <= 0;
        hls_coding_unit_hls_xm_y_ap_vld_r        <= 0;
        hls_coding_unit_hls_pu_intra_pred_mode_0_r <= 0;
        hls_coding_unit_hls_pu_intra_pred_mode_0_ap_vld_r <= 0;
        hls_coding_unit_hls_pu_intra_pred_mode_1_r <= 0;
        hls_coding_unit_hls_pu_intra_pred_mode_1_ap_vld_r <= 0;
        hls_coding_unit_hls_pu_intra_pred_mode_2_r <= 0;
        hls_coding_unit_hls_pu_intra_pred_mode_2_ap_vld_r <= 0;
        hls_coding_unit_hls_pu_intra_pred_mode_3_r <= 0;
        hls_coding_unit_hls_pu_intra_pred_mode_3_ap_vld_r <= 0;
        hls_coding_unit_hls_qPy_pred_r           <= 0;
        hls_coding_unit_hls_qPy_pred_ap_vld_r    <= 0;
        hls_coding_unit_hls_skip_flag_start_r    <= 0;
        hls_coding_unit_hls_skip_flag_start_ap_vld_r <= 0;
        hls_coding_unit_hls_intra_split_flag_r   <= 0;
        hls_coding_unit_hls_intra_split_flag_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_r <= 0;
        hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_pcm_flag_o_r    <= 0;
        hls_coding_unit_hls_dup1_pcm_flag_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_pred_mode_o_r   <= 0;
        hls_coding_unit_hls_dup1_pred_mode_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_part_mode_o_r   <= 0;
        hls_coding_unit_hls_dup1_part_mode_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_max_trafo_depth_r <= 0;
        hls_coding_unit_hls_dup1_max_trafo_depth_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_cb_size_o_r     <= 0;
        hls_coding_unit_hls_dup1_cb_size_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_idx_o_r         <= 0;
        hls_coding_unit_hls_dup1_idx_o_ap_vld_r  <= 0;
        hls_coding_unit_hls_dup1_xm_xBase_r      <= 0;
        hls_coding_unit_hls_dup1_xm_xBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_xm_yBase_r      <= 0;
        hls_coding_unit_hls_dup1_xm_yBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_xm_cb_xBase_r   <= 0;
        hls_coding_unit_hls_dup1_xm_cb_xBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_xm_cb_yBase_r   <= 0;
        hls_coding_unit_hls_dup1_xm_cb_yBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_xm_log2_cb_size_r <= 0;
        hls_coding_unit_hls_dup1_xm_log2_cb_size_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_length_r_r      <= 0;
        hls_coding_unit_hls_dup1_length_r_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_xm_x_r          <= 0;
        hls_coding_unit_hls_dup1_xm_x_ap_vld_r   <= 0;
        hls_coding_unit_hls_dup1_xm_y_r          <= 0;
        hls_coding_unit_hls_dup1_xm_y_ap_vld_r   <= 0;
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_r <= 0;
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_r <= 0;
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_r <= 0;
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_r <= 0;
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_qPy_pred_r      <= 0;
        hls_coding_unit_hls_dup1_qPy_pred_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_skip_flag_start_r <= 0;
        hls_coding_unit_hls_dup1_skip_flag_start_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_intra_split_flag_r <= 0;
        hls_coding_unit_hls_dup1_intra_split_flag_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_r <= 0;
        hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_pcm_flag_o_r    <= 0;
        hls_coding_unit_hls_dup2_pcm_flag_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_pred_mode_o_r   <= 0;
        hls_coding_unit_hls_dup2_pred_mode_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_part_mode_o_r   <= 0;
        hls_coding_unit_hls_dup2_part_mode_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_max_trafo_depth_r <= 0;
        hls_coding_unit_hls_dup2_max_trafo_depth_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_cb_size_o_r     <= 0;
        hls_coding_unit_hls_dup2_cb_size_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_idx_o_r         <= 0;
        hls_coding_unit_hls_dup2_idx_o_ap_vld_r  <= 0;
        hls_coding_unit_hls_dup2_xm_xBase_r      <= 0;
        hls_coding_unit_hls_dup2_xm_xBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_xm_yBase_r      <= 0;
        hls_coding_unit_hls_dup2_xm_yBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_xm_cb_xBase_r   <= 0;
        hls_coding_unit_hls_dup2_xm_cb_xBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_xm_cb_yBase_r   <= 0;
        hls_coding_unit_hls_dup2_xm_cb_yBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_xm_log2_cb_size_r <= 0;
        hls_coding_unit_hls_dup2_xm_log2_cb_size_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_length_r_r      <= 0;
        hls_coding_unit_hls_dup2_length_r_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_xm_x_r          <= 0;
        hls_coding_unit_hls_dup2_xm_x_ap_vld_r   <= 0;
        hls_coding_unit_hls_dup2_xm_y_r          <= 0;
        hls_coding_unit_hls_dup2_xm_y_ap_vld_r   <= 0;
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_r <= 0;
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_r <= 0;
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_r <= 0;
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_r <= 0;
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_qPy_pred_r      <= 0;
        hls_coding_unit_hls_dup2_qPy_pred_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_skip_flag_start_r <= 0;
        hls_coding_unit_hls_dup2_skip_flag_start_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_intra_split_flag_r <= 0;
        hls_coding_unit_hls_dup2_intra_split_flag_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_r <= 0;
        hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_pcm_flag_o_r    <= 0;
        hls_coding_unit_hls_dup3_pcm_flag_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_pred_mode_o_r   <= 0;
        hls_coding_unit_hls_dup3_pred_mode_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_part_mode_o_r   <= 0;
        hls_coding_unit_hls_dup3_part_mode_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_max_trafo_depth_r <= 0;
        hls_coding_unit_hls_dup3_max_trafo_depth_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_cb_size_o_r     <= 0;
        hls_coding_unit_hls_dup3_cb_size_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_idx_o_r         <= 0;
        hls_coding_unit_hls_dup3_idx_o_ap_vld_r  <= 0;
        hls_coding_unit_hls_dup3_xm_xBase_r      <= 0;
        hls_coding_unit_hls_dup3_xm_xBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_xm_yBase_r      <= 0;
        hls_coding_unit_hls_dup3_xm_yBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_xm_cb_xBase_r   <= 0;
        hls_coding_unit_hls_dup3_xm_cb_xBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_xm_cb_yBase_r   <= 0;
        hls_coding_unit_hls_dup3_xm_cb_yBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_xm_log2_cb_size_r <= 0;
        hls_coding_unit_hls_dup3_xm_log2_cb_size_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_length_r_r      <= 0;
        hls_coding_unit_hls_dup3_length_r_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_xm_x_r          <= 0;
        hls_coding_unit_hls_dup3_xm_x_ap_vld_r   <= 0;
        hls_coding_unit_hls_dup3_xm_y_r          <= 0;
        hls_coding_unit_hls_dup3_xm_y_ap_vld_r   <= 0;
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_r <= 0;
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_r <= 0;
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_r <= 0;
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_r <= 0;
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_qPy_pred_r      <= 0;
        hls_coding_unit_hls_dup3_qPy_pred_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_skip_flag_start_r <= 0;
        hls_coding_unit_hls_dup3_skip_flag_start_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_intra_split_flag_r <= 0;
        hls_coding_unit_hls_dup3_intra_split_flag_ap_vld_r <= 0;
        copy_top_left_pixel_hls_cmdr_run_o_r     <= 0;
        copy_top_left_pixel_hls_cmdr_run_o_ap_vld_r <= 0;
        genPredCol_hls_predColBuf_0_r            <= 0;
        genPredCol_hls_predColBuf_0_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_1_r            <= 0;
        genPredCol_hls_predColBuf_1_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_2_r            <= 0;
        genPredCol_hls_predColBuf_2_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_3_r            <= 0;
        genPredCol_hls_predColBuf_3_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_4_r            <= 0;
        genPredCol_hls_predColBuf_4_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_5_r            <= 0;
        genPredCol_hls_predColBuf_5_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_6_r            <= 0;
        genPredCol_hls_predColBuf_6_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_7_r            <= 0;
        genPredCol_hls_predColBuf_7_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_8_r            <= 0;
        genPredCol_hls_predColBuf_8_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_9_r            <= 0;
        genPredCol_hls_predColBuf_9_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_10_r           <= 0;
        genPredCol_hls_predColBuf_10_ap_vld_r    <= 0;
        genPredCol_hls_predColBuf_11_r           <= 0;
        genPredCol_hls_predColBuf_11_ap_vld_r    <= 0;
        genPredCol_hls_predColBuf_12_r           <= 0;
        genPredCol_hls_predColBuf_12_ap_vld_r    <= 0;
        genPredCol_hls_predColBuf_13_r           <= 0;
        genPredCol_hls_predColBuf_13_ap_vld_r    <= 0;
        genPredCol_hls_predColBuf_14_r           <= 0;
        genPredCol_hls_predColBuf_14_ap_vld_r    <= 0;
        genPredCol_hls_predColBuf_15_r           <= 0;
        genPredCol_hls_predColBuf_15_ap_vld_r    <= 0;
        genPredCol_hls_predColBuf_16_o_r         <= 0;
        genPredCol_hls_predColBuf_16_o_ap_vld_r  <= 0;
        ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_r <= 0;
        ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_ap_vld_r <= 0;
        ff_hevc_set_qPy_hls_qp_y_r               <= 0;
        ff_hevc_set_qPy_hls_qp_y_ap_vld_r        <= 0;
        ff_hevc_set_qPy_hls_first_qp_group_o_r   <= 0;
        ff_hevc_set_qPy_hls_first_qp_group_o_ap_vld_r <= 0;
        hls_decode_neighbour_hls_first_qp_group_r <= 0;
        hls_decode_neighbour_hls_first_qp_group_ap_vld_r <= 0;
        hls_decode_neighbour_hls_end_of_tiles_x_r <= 0;
        hls_decode_neighbour_hls_end_of_tiles_x_ap_vld_r <= 0;
        hls_decode_neighbour_hls_end_of_tiles_y_r <= 0;
        hls_decode_neighbour_hls_end_of_tiles_y_ap_vld_r <= 0;
        hls_decode_neighbour_hls_slice_or_tiles_left_boundary_r <= 0;
        hls_decode_neighbour_hls_slice_or_tiles_left_boundary_ap_vld_r <= 0;
        hls_decode_neighbour_hls_slice_or_tiles_up_boundary_r <= 0;
        hls_decode_neighbour_hls_slice_or_tiles_up_boundary_ap_vld_r <= 0;
        hls_decode_neighbour_hls_ctb_left_flag_r <= 0;
        hls_decode_neighbour_hls_ctb_left_flag_ap_vld_r <= 0;
        hls_decode_neighbour_hls_ctb_up_flag_r   <= 0;
        hls_decode_neighbour_hls_ctb_up_flag_ap_vld_r <= 0;
        hls_decode_neighbour_hls_ctb_up_right_flag_r <= 0;
        hls_decode_neighbour_hls_ctb_up_right_flag_ap_vld_r <= 0;
        hls_decode_neighbour_hls_ctb_up_left_flag_r <= 0;
        hls_decode_neighbour_hls_ctb_up_left_flag_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_0_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_0_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_1_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_1_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_2_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_2_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_3_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_3_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_4_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_4_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_5_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_5_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_6_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_6_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_7_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_7_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_8_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_8_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_9_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_9_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_10_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_10_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_11_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_11_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_12_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_12_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_13_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_13_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_14_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_14_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_15_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_15_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_16_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_16_o_ap_vld_r <= 0;
        init_intra_neighbors_hls_numIntraNeighbor_r <= 0;
        init_intra_neighbors_hls_numIntraNeighbor_ap_vld_r <= 0;
        init_intra_neighbors_hls_totalUnits_r    <= 0;
        init_intra_neighbors_hls_totalUnits_ap_vld_r <= 0;
        init_intra_neighbors_hls_aboveUnits_r    <= 0;
        init_intra_neighbors_hls_aboveUnits_ap_vld_r <= 0;
        init_intra_neighbors_hls_leftUnits_r     <= 0;
        init_intra_neighbors_hls_leftUnits_ap_vld_r <= 0;
        init_intra_neighbors_hls_unitWidth_r     <= 0;
        init_intra_neighbors_hls_unitWidth_ap_vld_r <= 0;
        init_intra_neighbors_hls_unitHeight_r    <= 0;
        init_intra_neighbors_hls_unitHeight_ap_vld_r <= 0;
        init_intra_neighbors_hls_log2TrSize_r    <= 0;
        init_intra_neighbors_hls_log2TrSize_ap_vld_r <= 0;
        init_intra_neighbors_hls_bNeighborFlags_0_o_r <= 0;
        init_intra_neighbors_hls_bNeighborFlags_1_o_r <= 0;
        init_intra_neighbors_hls_bNeighborFlags_2_o_r <= 0;
        init_intra_neighbors_hls_bNeighborFlags_0_o_ap_vld_r <= 0;
        init_intra_neighbors_hls_bNeighborFlags_1_o_ap_vld_r <= 0;
        init_intra_neighbors_hls_bNeighborFlags_2_o_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_numIntraNeighbor_c_r <= 0;
        init_intra_neighbors_chroma_hls_numIntraNeighbor_c_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_totalUnits_c_r <= 0;
        init_intra_neighbors_chroma_hls_totalUnits_c_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_aboveUnits_c_r <= 0;
        init_intra_neighbors_chroma_hls_aboveUnits_c_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_leftUnits_c_r <= 0;
        init_intra_neighbors_chroma_hls_leftUnits_c_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_unitWidth_c_r <= 0;
        init_intra_neighbors_chroma_hls_unitWidth_c_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_unitHeight_c_r <= 0;
        init_intra_neighbors_chroma_hls_unitHeight_c_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_log2TrSize_c_r <= 0;
        init_intra_neighbors_chroma_hls_log2TrSize_c_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_r <= 0;
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_r <= 0;
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_r <= 0;
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_ap_vld_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_up_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_up_ap_vld_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_left_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_left_ap_vld_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_up_left_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_up_left_ap_vld_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_up_right_sap_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_up_right_sap_ap_vld_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_up_right_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_up_right_ap_vld_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_bottom_left_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_bottom_left_ap_vld_r <= 0;
        ff_hevc_set_neighbour_available_hls_nPbW_r <= 0;
        ff_hevc_set_neighbour_available_hls_nPbW_ap_vld_r <= 0;
        ff_hevc_set_neighbour_available_hls_nPbH_r <= 0;
        ff_hevc_set_neighbour_available_hls_nPbH_ap_vld_r <= 0;
        innerloop_ff_hevc_extract_rbsp_1_hls_ready_r <= 1;
        innerloop_ff_hevc_extract_rbsp_2_hls_ready_r <= 1;
        fill_ref_samples_mtdma_top_wrp_ready_r   <= 1;
        hevc_find_frame_end_hls_ready_r          <= 1;
        intra_prediction_unit_ex_hls_ready_r     <= 1;
        hls_transform_unit_ex_hls_ready_r        <= 1;
        hls_transform_unit_ex_hls_dup1_ready_r   <= 1;
        hls_transform_unit_ex_hls_dup2_ready_r   <= 1;
        hls_transform_unit_ex_hls_dup3_ready_r   <= 1;
        hls_transform_tree_hls_ready_r           <= 1;
        hls_transform_tree_hls_dup1_ready_r      <= 1;
        hls_transform_tree_hls_dup2_ready_r      <= 1;
        hls_transform_tree_hls_dup3_ready_r      <= 1;
        hls_coding_quadtree_hls_ready_r          <= 1;
        hls_coding_quadtree_hls_dup1_ready_r     <= 1;
        hls_coding_quadtree_hls_dup2_ready_r     <= 1;
        hls_coding_quadtree_hls_dup3_ready_r     <= 1;
        hls_coding_unit_hls_ready_r              <= 1;
        hls_coding_unit_hls_dup1_ready_r         <= 1;
        hls_coding_unit_hls_dup2_ready_r         <= 1;
        hls_coding_unit_hls_dup3_ready_r         <= 1;
        copy_top_left_pixel_hls_ready_r          <= 1;
        genPredCol_hls_ready_r                   <= 1;
        ff_hevc_get_sub_cu_zscan_id_hls_ready_r  <= 1;
        ff_hevc_skip_flag_decode_hls_ready_r     <= 1;
        ff_hevc_set_qPy_hls_ready_r              <= 1;
        hls_decode_neighbour_hls_ready_r         <= 1;
        set_tab_mvf_pred_flag_hls_ready_r        <= 1;
        init_intra_neighbors_hls_ready_r         <= 1;
        init_intra_neighbors_chroma_hls_ready_r  <= 1;
        ff_hevc_set_neighbour_available_hls_ready_r <= 1;

    end 
    else begin
        ap_part_r               <= ap_part_w;
        ap_arb_start_r          <= ap_arb_start;
        ap_arb_start_2r         <= ap_arb_start_r;
        ap_arb_start_running_r	<= ap_arb_start_running;
        ap_arb_ret_r            <= ap_arb_ret;
        ap_arb_ret_2r           <= ap_arb_ret_r;
        ap_arb_ret_running_r    <= ap_arb_ret_running;
        ap_arb_reload_r         <= ap_arb_reload;
        ap_arb_reload_running_r <= ap_arb_reload_running;
        ap_running_r            <= ap_running;
        ap_start_r              <= ap_start;
        ap_ready_r              <= ap_ready;
        ap_done_r               <= ap_done;
        array_adr_r             <= array_adr;
        scalar_argdone_r        <= scalar_argdone;
        scalar_argdone_all_r    <= scalar_argdone_all;
        scalar_argVld_r         <= scalar_argVld;
        scalar_argVld_all_r     <= scalar_argVld_all;
		scalar_argAck_r			<= scalar_argAck;
		scalar_argAckdone_r		<= scalar_argAckdone;
		scalar_argAckdone_all_r <= scalar_argAckdone_all;
		scalar_rdat_vld_r		<= scalar_rdat_vld;
        array_argdone_r         <= array_argdone;
        array_argVld_r          <= array_argVld;
        cyclic_argdone_r        <= cyclic_argdone;
        cyclic_argVld_r         <= cyclic_argVld;
        
    //============================================================
    //innerloop_ff_hevc_extract_rbsp_1_hls       (f = 1)
    //============================================================
`ifdef enable_connect_innerloop_ff_hevc_extract_rbsp_1_hls
    //------READ (scalar, global adr = 640) always block-----//
    //s = 0; r = 1; a = 26;
    if (scalar_rdat_vld[0][1][26]) begin
        innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_r <= scalar_rdat  [0][1][26];    //bidir
    end
    //------WRITE (scalar, global adr = 640) always block-----//
    //s = 0; r = 1; a = 8;
    innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_ap_vld_r <= innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_ap_vld;
    if (innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_ap_vld) begin
        innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_r <= innerloop_ff_hevc_extract_rbsp_1_hls_zero_o;
    end
    //------READ (scalar, global adr = 1116) always block-----//
    //s = 23; r = 0; a = 26;
    if (scalar_rdat_vld[23][0][26]) begin
        innerloop_ff_hevc_extract_rbsp_1_hls_loop_init <= scalar_rdat  [23][0][26];
    end
    //------READ (scalar, global adr = 1124) always block-----//
    //s = 25; r = 1; a = 16;
    if (scalar_rdat_vld[25][1][16]) begin
        innerloop_ff_hevc_extract_rbsp_1_hls_loop_len <= scalar_rdat  [25][1][16];
    end
    //------READ (scalar, global adr = 1120) always block-----//
    //s = 24; r = 1; a = 19;
    if (scalar_rdat_vld[24][1][19]) begin
        innerloop_ff_hevc_extract_rbsp_1_hls_loop_inc <= scalar_rdat  [24][1][19];
    end
    //------WRITE (scalar, global adr = 1128) always block-----//
    //s = 26; r = 0; a = 3;
    innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_ap_vld_r <= innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_ap_vld;
    if (innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_ap_vld) begin
        innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_r <= innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt;
    end
`endif
    //============================================================
    //innerloop_ff_hevc_extract_rbsp_2_hls       (f = 2)
    //============================================================
`ifdef enable_connect_innerloop_ff_hevc_extract_rbsp_2_hls
    //------READ (scalar, global adr = 632) always block-----//
    //s = 30; r = 0; a = 14;
    if (scalar_rdat_vld[30][0][14]) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_r <= scalar_rdat  [30][0][14];    //bidir
    end
    //------WRITE (scalar, global adr = 632) always block-----//
    //s = 30; r = 1; a = 0;
    innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_ap_vld_r <= innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_ap_vld;
    if (innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_ap_vld) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_r <= innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o;
    end
    //------READ (scalar, global adr = 636) always block-----//
    //s = 31; r = 1; a = 18;
    if (scalar_rdat_vld[31][1][18]) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_r <= scalar_rdat  [31][1][18];    //bidir
    end
    //------WRITE (scalar, global adr = 636) always block-----//
    //s = 31; r = 0; a = 0;
    innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_ap_vld_r <= innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_ap_vld;
    if (innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_ap_vld) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_r <= innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o;
    end
    //------READ (scalar, global adr = 640) always block-----//
    //s = 0; r = 0; a = 28;
    if (scalar_rdat_vld[0][0][28]) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_r <= scalar_rdat  [0][0][28];    //bidir
    end
    //------WRITE (scalar, global adr = 640) always block-----//
    //s = 0; r = 0; a = 9;
    innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_ap_vld_r <= innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_ap_vld;
    if (innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_ap_vld) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_r <= innerloop_ff_hevc_extract_rbsp_2_hls_zero_o;
    end
    //------READ (scalar, global adr = 628) always block-----//
    //s = 29; r = 1; a = 9;
    if (scalar_rdat_vld[29][1][9]) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_r <= scalar_rdat  [29][1][9];    //bidir
    end
    //------WRITE (scalar, global adr = 628) always block-----//
    //s = 29; r = 1; a = 2;
    innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_ap_vld_r <= innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_ap_vld;
    if (innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_ap_vld) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_r <= innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o;
    end
    //------READ (scalar, global adr = 1116) always block-----//
    //s = 23; r = 1; a = 25;
    if (scalar_rdat_vld[23][1][25]) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_loop_init <= scalar_rdat  [23][1][25];
    end
    //------READ (scalar, global adr = 1124) always block-----//
    //s = 25; r = 0; a = 18;
    if (scalar_rdat_vld[25][0][18]) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_loop_len <= scalar_rdat  [25][0][18];
    end
    //------READ (scalar, global adr = 1120) always block-----//
    //s = 24; r = 0; a = 21;
    if (scalar_rdat_vld[24][0][21]) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_loop_inc <= scalar_rdat  [24][0][21];
    end
    //------WRITE (scalar, global adr = 1128) always block-----//
    //s = 26; r = 1; a = 3;
    innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_ap_vld_r <= innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_ap_vld;
    if (innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_ap_vld) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_r <= innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt;
    end
`endif
    //============================================================
    //fill_ref_samples_mtdma_top_wrp       (f = 3)
    //============================================================
`ifdef enable_connect_fill_ref_samples_mtdma_top_wrp
    //------READ (scalar, global adr = 644) always block-----//
    //s = 1; r = 0; a = 4;
    if (scalar_rdat_vld[1][0][4]) begin
        fill_ref_samples_mtdma_top_wrp_numIntraNeighbor <= scalar_rdat  [1][0][4];
    end
    //------READ (scalar, global adr = 648) always block-----//
    //s = 2; r = 1; a = 3;
    if (scalar_rdat_vld[2][1][3]) begin
        fill_ref_samples_mtdma_top_wrp_totalUnits <= scalar_rdat  [2][1][3];
    end
    //------READ (scalar, global adr = 652) always block-----//
    //s = 3; r = 0; a = 5;
    if (scalar_rdat_vld[3][0][5]) begin
        fill_ref_samples_mtdma_top_wrp_aboveUnits <= scalar_rdat  [3][0][5];
    end
    //------READ (scalar, global adr = 656) always block-----//
    //s = 4; r = 0; a = 5;
    if (scalar_rdat_vld[4][0][5]) begin
        fill_ref_samples_mtdma_top_wrp_leftUnits <= scalar_rdat  [4][0][5];
    end
    //------READ (scalar, global adr = 660) always block-----//
    //s = 5; r = 1; a = 7;
    if (scalar_rdat_vld[5][1][7]) begin
        fill_ref_samples_mtdma_top_wrp_unitWidth <= scalar_rdat  [5][1][7];
    end
    //------READ (scalar, global adr = 664) always block-----//
    //s = 6; r = 0; a = 7;
    if (scalar_rdat_vld[6][0][7]) begin
        fill_ref_samples_mtdma_top_wrp_unitHeight <= scalar_rdat  [6][0][7];
    end
    //------READ (scalar, global adr = 668) always block-----//
    //s = 7; r = 1; a = 8;
    if (scalar_rdat_vld[7][1][8]) begin
        fill_ref_samples_mtdma_top_wrp_log2TrSize <= scalar_rdat  [7][1][8];
    end
    //------READ (scalar, global adr = 672) always block-----//
    //s = 8; r = 0; a = 7;
    if (scalar_rdat_vld[8][0][7]) begin
        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_0 <= scalar_rdat  [8][0][7];
    end
    //------READ (scalar, global adr = 672) always block-----//
    //s = 9; r = 0; a = 9;
    if (scalar_rdat_vld[9][0][9]) begin
        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_1 <= scalar_rdat  [9][0][9];
    end
    //------READ (scalar, global adr = 672) always block-----//
    //s = 10; r = 1; a = 8;
    if (scalar_rdat_vld[10][1][8]) begin
        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_2 <= scalar_rdat  [10][1][8];
    end
    //------READ (scalar, global adr = 684) always block-----//
    //s = 11; r = 0; a = 5;
    if (scalar_rdat_vld[11][0][5]) begin
        fill_ref_samples_mtdma_top_wrp_numIntraNeighbor_c <= scalar_rdat  [11][0][5];
    end
    //------READ (scalar, global adr = 688) always block-----//
    //s = 12; r = 1; a = 6;
    if (scalar_rdat_vld[12][1][6]) begin
        fill_ref_samples_mtdma_top_wrp_totalUnits_c <= scalar_rdat  [12][1][6];
    end
    //------READ (scalar, global adr = 692) always block-----//
    //s = 13; r = 1; a = 7;
    if (scalar_rdat_vld[13][1][7]) begin
        fill_ref_samples_mtdma_top_wrp_aboveUnits_c <= scalar_rdat  [13][1][7];
    end
    //------READ (scalar, global adr = 696) always block-----//
    //s = 14; r = 0; a = 8;
    if (scalar_rdat_vld[14][0][8]) begin
        fill_ref_samples_mtdma_top_wrp_leftUnits_c <= scalar_rdat  [14][0][8];
    end
    //------READ (scalar, global adr = 700) always block-----//
    //s = 15; r = 0; a = 6;
    if (scalar_rdat_vld[15][0][6]) begin
        fill_ref_samples_mtdma_top_wrp_unitWidth_c <= scalar_rdat  [15][0][6];
    end
    //------READ (scalar, global adr = 704) always block-----//
    //s = 16; r = 0; a = 4;
    if (scalar_rdat_vld[16][0][4]) begin
        fill_ref_samples_mtdma_top_wrp_unitHeight_c <= scalar_rdat  [16][0][4];
    end
    //------READ (scalar, global adr = 708) always block-----//
    //s = 17; r = 0; a = 4;
    if (scalar_rdat_vld[17][0][4]) begin
        fill_ref_samples_mtdma_top_wrp_log2TrSize_c <= scalar_rdat  [17][0][4];
    end
    //------READ (scalar, global adr = 712) always block-----//
    //s = 18; r = 0; a = 4;
    if (scalar_rdat_vld[18][0][4]) begin
        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_c_0 <= scalar_rdat  [18][0][4];
    end
    //------READ (scalar, global adr = 712) always block-----//
    //s = 19; r = 1; a = 4;
    if (scalar_rdat_vld[19][1][4]) begin
        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_c_1 <= scalar_rdat  [19][1][4];
    end
    //------READ (scalar, global adr = 712) always block-----//
    //s = 20; r = 1; a = 8;
    if (scalar_rdat_vld[20][1][8]) begin
        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_c_2 <= scalar_rdat  [20][1][8];
    end
`endif
    //============================================================
    //hevc_find_frame_end_hls       (f = 4)
    //============================================================
`ifdef enable_connect_hevc_find_frame_end_hls
    //------READ (scalar, global adr = 0) always block-----//
    //s = 0; r = 1; a = 11;
    if (scalar_rdat_vld[0][1][11]) begin
        hevc_find_frame_end_hls_state64_0_o_r <= scalar_rdat  [0][1][11];    //bidir
    end
    //------READ (scalar, global adr = 0) always block-----//
    //s = 1; r = 1; a = 4;
    if (scalar_rdat_vld[1][1][4]) begin
        hevc_find_frame_end_hls_state64_1_o_r <= scalar_rdat  [1][1][4];    //bidir
    end
    //------WRITE (scalar, global adr = 0) always block-----//
    //s = 0; r = 0; a = 0;
    hevc_find_frame_end_hls_state64_0_o_ap_vld_r <= hevc_find_frame_end_hls_state64_0_o_ap_vld;
    if (hevc_find_frame_end_hls_state64_0_o_ap_vld) begin
        hevc_find_frame_end_hls_state64_0_o_r <= hevc_find_frame_end_hls_state64_0_o;
    end
    //------WRITE (scalar, global adr = 0) always block-----//
    //s = 1; r = 0; a = 0;
    hevc_find_frame_end_hls_state64_1_o_ap_vld_r <= hevc_find_frame_end_hls_state64_1_o_ap_vld;
    if (hevc_find_frame_end_hls_state64_1_o_ap_vld) begin
        hevc_find_frame_end_hls_state64_1_o_r <= hevc_find_frame_end_hls_state64_1_o;
    end
    //------READ (scalar, global adr = 8) always block-----//
    //s = 2; r = 0; a = 5;
    if (scalar_rdat_vld[2][0][5]) begin
        hevc_find_frame_end_hls_frame_start_found_o_r <= scalar_rdat  [2][0][5];    //bidir
    end
    //------WRITE (scalar, global adr = 8) always block-----//
    //s = 2; r = 0; a = 0;
    hevc_find_frame_end_hls_frame_start_found_o_ap_vld_r <= hevc_find_frame_end_hls_frame_start_found_o_ap_vld;
    if (hevc_find_frame_end_hls_frame_start_found_o_ap_vld) begin
        hevc_find_frame_end_hls_frame_start_found_o_r <= hevc_find_frame_end_hls_frame_start_found_o;
    end
`endif
    //============================================================
    //intra_prediction_unit_ex_hls       (f = 5)
    //============================================================
`ifdef enable_connect_intra_prediction_unit_ex_hls
    //------READ (scalar, complete partition, global adr = 520) always block-----//
    //s = 2; r = 1; a = 16;
    if (scalar_rdat_vld[2][1][16]) begin
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_r <= scalar_rdat  [2][1][16];
    end
    //------WRITE (scalar, complete partition, global adr = 520) always block -----//
    //s = 2; r = 1; a = 1;
    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_ap_vld_r <= intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_ap_vld;
    if (intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_ap_vld) begin
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_r <= intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o;
    end
    //------READ (scalar, complete partition, global adr = 521) always block-----//
    //s = 2; r = 0; a = 18;
    if (scalar_rdat_vld[2][0][18]) begin
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_r <= scalar_rdat  [2][0][18];
    end
    //------WRITE (scalar, complete partition, global adr = 521) always block -----//
    //s = 2; r = 0; a = 2;
    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_ap_vld_r <= intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_ap_vld;
    if (intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_ap_vld) begin
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_r <= intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o;
    end
    //------READ (scalar, complete partition, global adr = 522) always block-----//
    //s = 2; r = 1; a = 17;
    if (scalar_rdat_vld[2][1][17]) begin
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_r <= scalar_rdat  [2][1][17];
    end
    //------WRITE (scalar, complete partition, global adr = 522) always block -----//
    //s = 2; r = 1; a = 2;
    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_ap_vld_r <= intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_ap_vld;
    if (intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_ap_vld) begin
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_r <= intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o;
    end
    //------READ (scalar, complete partition, global adr = 523) always block-----//
    //s = 2; r = 0; a = 19;
    if (scalar_rdat_vld[2][0][19]) begin
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_r <= scalar_rdat  [2][0][19];
    end
    //------WRITE (scalar, complete partition, global adr = 523) always block -----//
    //s = 2; r = 0; a = 3;
    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_ap_vld_r <= intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_ap_vld;
    if (intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_ap_vld) begin
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_r <= intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o;
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 0; a = 26;
    if (scalar_rdat_vld[13][0][26]) begin
        intra_prediction_unit_ex_hls_part_mode <= scalar_rdat  [13][0][26];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 1; a = 5;
    if (scalar_rdat_vld[3][1][5]) begin
        intra_prediction_unit_ex_hls_min_pu_width <= scalar_rdat  [3][1][5];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 0; a = 11;
    if (scalar_rdat_vld[29][0][11]) begin
        intra_prediction_unit_ex_hls_log2_min_pu_size <= scalar_rdat  [29][0][11];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 21;
    if (scalar_rdat_vld[26][1][21]) begin
        intra_prediction_unit_ex_hls_log2_ctb_size <= scalar_rdat  [26][1][21];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 0; a = 27;
    if (scalar_rdat_vld[23][0][27]) begin
        intra_prediction_unit_ex_hls_ctb_up_flag <= scalar_rdat  [23][0][27];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 20;
    if (scalar_rdat_vld[24][1][20]) begin
        intra_prediction_unit_ex_hls_ctb_left_flag <= scalar_rdat  [24][1][20];
    end
    //------READ (scalar, complete partition, global adr = 512) always block-----//
    //s = 0; r = 1; a = 27;
    if (scalar_rdat_vld[0][1][27]) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_r <= scalar_rdat  [0][1][27];
    end
    //------WRITE (scalar, complete partition, global adr = 512) always block -----//
    //s = 0; r = 1; a = 9;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_ap_vld_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o;
    end
    //------READ (scalar, complete partition, global adr = 513) always block-----//
    //s = 0; r = 0; a = 29;
    if (scalar_rdat_vld[0][0][29]) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_r <= scalar_rdat  [0][0][29];
    end
    //------WRITE (scalar, complete partition, global adr = 513) always block -----//
    //s = 0; r = 0; a = 10;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_ap_vld_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o;
    end
    //------READ (scalar, complete partition, global adr = 514) always block-----//
    //s = 0; r = 1; a = 28;
    if (scalar_rdat_vld[0][1][28]) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_r <= scalar_rdat  [0][1][28];
    end
    //------WRITE (scalar, complete partition, global adr = 514) always block -----//
    //s = 0; r = 1; a = 10;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_ap_vld_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o;
    end
    //------READ (scalar, complete partition, global adr = 515) always block-----//
    //s = 0; r = 0; a = 30;
    if (scalar_rdat_vld[0][0][30]) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_r <= scalar_rdat  [0][0][30];
    end
    //------WRITE (scalar, complete partition, global adr = 515) always block -----//
    //s = 0; r = 0; a = 11;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_ap_vld_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o;
    end
    //------WRITE (scalar, complete partition, global adr = 508) always block -----//
    //s = 31; r = 1; a = 0;
    intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_ap_vld_r <= intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_r <= intra_prediction_unit_ex_hls_pu_chroma_mode_c_0;
    end
    //------WRITE (scalar, complete partition, global adr = 509) always block -----//
    //s = 31; r = 0; a = 1;
    intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_ap_vld_r <= intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_r <= intra_prediction_unit_ex_hls_pu_chroma_mode_c_1;
    end
    //------WRITE (scalar, complete partition, global adr = 510) always block -----//
    //s = 31; r = 1; a = 1;
    intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_ap_vld_r <= intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_r <= intra_prediction_unit_ex_hls_pu_chroma_mode_c_2;
    end
    //------WRITE (scalar, complete partition, global adr = 511) always block -----//
    //s = 31; r = 0; a = 2;
    intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_ap_vld_r <= intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_r <= intra_prediction_unit_ex_hls_pu_chroma_mode_c_3;
    end
    //------WRITE (scalar, complete partition, global adr = 516) always block -----//
    //s = 1; r = 1; a = 1;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_ap_vld_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0;
    end
    //------WRITE (scalar, complete partition, global adr = 517) always block -----//
    //s = 1; r = 0; a = 2;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_ap_vld_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1;
    end
    //------WRITE (scalar, complete partition, global adr = 518) always block -----//
    //s = 1; r = 1; a = 2;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_ap_vld_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2;
    end
    //------WRITE (scalar, complete partition, global adr = 519) always block -----//
    //s = 1; r = 0; a = 3;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_ap_vld_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3;
    end
    //------READ (scalar, global adr = 324) always block-----//
    //s = 17; r = 0; a = 13;
    if (scalar_rdat_vld[17][0][13]) begin
        intra_prediction_unit_ex_hls_chroma_array_type <= scalar_rdat  [17][0][13];
    end
    //------WRITE (scalar, global adr = 576) always block-----//
    //s = 16; r = 0; a = 3;
    intra_prediction_unit_ex_hls_max_trafo_depth_ap_vld_r <= intra_prediction_unit_ex_hls_max_trafo_depth_ap_vld;
    if (intra_prediction_unit_ex_hls_max_trafo_depth_ap_vld) begin
        intra_prediction_unit_ex_hls_max_trafo_depth_r <= intra_prediction_unit_ex_hls_max_trafo_depth;
    end
    //------READ (scalar, global adr = 384) always block-----//
    //s = 0; r = 1; a = 29;
    if (scalar_rdat_vld[0][1][29]) begin
        intra_prediction_unit_ex_hls_max_transform_hierarchy_depth_intra <= scalar_rdat  [0][1][29];
    end
    //------READ (scalar, global adr = 568) always block-----//
    //s = 14; r = 1; a = 22;
    if (scalar_rdat_vld[14][1][22]) begin
        intra_prediction_unit_ex_hls_intra_split_flag <= scalar_rdat  [14][1][22];
    end
    //------READ (scalar, global adr = 1252) always block-----//
    //s = 25; r = 1; a = 17;
    if (scalar_rdat_vld[25][1][17]) begin
        intra_prediction_unit_ex_hls_dc_tab_ipm_p <= scalar_rdat  [25][1][17];
    end
`endif
    //============================================================
    //hls_transform_unit_ex_hls       (f = 6)
    //============================================================
`ifdef enable_connect_hls_transform_unit_ex_hls
    //------READ (scalar, global adr = 20) always block-----//
    //s = 5; r = 1; a = 10;
    if (scalar_rdat_vld[5][1][10]) begin
        hls_transform_unit_ex_hls_cbf_luma <= scalar_rdat  [5][1][10];
    end
    //------READ (scalar, global adr = 16) always block-----//
    //s = 4; r = 0; a = 8;
    if (scalar_rdat_vld[4][0][8]) begin
        hls_transform_unit_ex_hls_cbf_data <= scalar_rdat  [4][0][8];
    end
    //------READ (scalar, global adr = 1260) always block-----//
    //s = 27; r = 0; a = 7;
    if (scalar_rdat_vld[27][0][7]) begin
        hls_transform_unit_ex_hls_dc_min_tb_addr_zs_p <= scalar_rdat  [27][0][7];
    end
    //------READ (scalar, global adr = 1156) always block-----//
    //s = 1; r = 0; a = 16;
    if (scalar_rdat_vld[1][0][16]) begin
        hls_transform_unit_ex_hls_chroma_qp_offset_list_len_minus1 <= scalar_rdat  [1][0][16];
    end
    //------READ (scalar, global adr = 1264) always block-----//
    //s = 28; r = 1; a = 11;
    if (scalar_rdat_vld[28][1][11]) begin
        hls_transform_unit_ex_hls_dc_cb_qp_offset_list_p <= scalar_rdat  [28][1][11];
    end
    //------READ (scalar, global adr = 1268) always block-----//
    //s = 29; r = 1; a = 3;
    if (scalar_rdat_vld[29][1][3]) begin
        hls_transform_unit_ex_hls_dc_cr_qp_offset_list_p <= scalar_rdat  [29][1][3];
    end
    //------READ (scalar, global adr = 1132) always block-----//
    //s = 27; r = 1; a = 6;
    if (scalar_rdat_vld[27][1][6]) begin
        hls_transform_unit_ex_hls_qp_bd_offset <= scalar_rdat  [27][1][6];
    end
    //------READ (scalar, global adr = 1272) always block-----//
    //s = 30; r = 0; a = 9;
    if (scalar_rdat_vld[30][0][9]) begin
        hls_transform_unit_ex_hls_dc_qp_y_tab_p <= scalar_rdat  [30][0][9];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 18;
    if (scalar_rdat_vld[12][0][18]) begin
        hls_transform_unit_ex_hls_pred_mode <= scalar_rdat  [12][0][18];
    end
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 0; a = 11;
    if (scalar_rdat_vld[20][0][11]) begin
        hls_transform_unit_ex_hls_hshift_0 <= scalar_rdat  [20][0][11];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 0; a = 17;
    if (scalar_rdat_vld[21][0][17]) begin
        hls_transform_unit_ex_hls_hshift_1 <= scalar_rdat  [21][0][17];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 0; a = 11;
    if (scalar_rdat_vld[22][0][11]) begin
        hls_transform_unit_ex_hls_hshift_2 <= scalar_rdat  [22][0][11];
    end
    //------READ (scalar, complete partition, global adr = 348) always block-----//
    //s = 23; r = 0; a = 16;
    if (scalar_rdat_vld[23][0][16]) begin
        hls_transform_unit_ex_hls_vshift_0 <= scalar_rdat  [23][0][16];
    end
    //------READ (scalar, complete partition, global adr = 352) always block-----//
    //s = 24; r = 0; a = 12;
    if (scalar_rdat_vld[24][0][12]) begin
        hls_transform_unit_ex_hls_vshift_1 <= scalar_rdat  [24][0][12];
    end
    //------READ (scalar, complete partition, global adr = 356) always block-----//
    //s = 25; r = 0; a = 7;
    if (scalar_rdat_vld[25][0][7]) begin
        hls_transform_unit_ex_hls_vshift_2 <= scalar_rdat  [25][0][7];
    end
    //------READ (scalar, global adr = 484) always block-----//
    //s = 25; r = 1; a = 6;
    if (scalar_rdat_vld[25][1][6]) begin
        hls_transform_unit_ex_hls_tu_intra_pred_mode <= scalar_rdat  [25][1][6];
    end
    //------READ (scalar, global adr = 488) always block-----//
    //s = 26; r = 1; a = 13;
    if (scalar_rdat_vld[26][1][13]) begin
        hls_transform_unit_ex_hls_tu_intra_pred_mode_c <= scalar_rdat  [26][1][13];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 0; a = 15;
    if (scalar_rdat_vld[15][0][15]) begin
        hls_transform_unit_ex_hls_cu_transquant_bypass_flag <= scalar_rdat  [15][0][15];
    end
    //------WRITE (scalar, global adr = 492) always block-----//
    //s = 27; r = 0; a = 1;
    hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_ap_vld_r <= hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_ap_vld;
    if (hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_ap_vld) begin
        hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_r <= hls_transform_unit_ex_hls_tu_cu_qp_offset_cb;
    end
    //------WRITE (scalar, global adr = 496) always block-----//
    //s = 28; r = 1; a = 1;
    hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_ap_vld_r <= hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_ap_vld;
    if (hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_ap_vld) begin
        hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_r <= hls_transform_unit_ex_hls_tu_cu_qp_offset_cr;
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 14;
    if (scalar_rdat_vld[6][1][14]) begin
        hls_transform_unit_ex_hls_qp_y_o_r <= scalar_rdat  [6][1][14];    //bidir
    end
    //------WRITE (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 4;
    hls_transform_unit_ex_hls_qp_y_o_ap_vld_r <= hls_transform_unit_ex_hls_qp_y_o_ap_vld;
    if (hls_transform_unit_ex_hls_qp_y_o_ap_vld) begin
        hls_transform_unit_ex_hls_qp_y_o_r <= hls_transform_unit_ex_hls_qp_y_o;
    end
    //------WRITE (scalar, global adr = 168) always block-----//
    //s = 10; r = 0; a = 6;
    hls_transform_unit_ex_hls_log2_trafo_size_ap_vld_r <= hls_transform_unit_ex_hls_log2_trafo_size_ap_vld;
    if (hls_transform_unit_ex_hls_log2_trafo_size_ap_vld) begin
        hls_transform_unit_ex_hls_log2_trafo_size_r <= hls_transform_unit_ex_hls_log2_trafo_size;
    end
    //------READ (scalar, global adr = 56) always block-----//
    //s = 14; r = 1; a = 19;
    if (scalar_rdat_vld[14][1][19]) begin
        hls_transform_unit_ex_hls_log2_trafo_size_c_o_r <= scalar_rdat  [14][1][19];    //bidir
    end
    //------WRITE (scalar, global adr = 56) always block-----//
    //s = 14; r = 1; a = 4;
    hls_transform_unit_ex_hls_log2_trafo_size_c_o_ap_vld_r <= hls_transform_unit_ex_hls_log2_trafo_size_c_o_ap_vld;
    if (hls_transform_unit_ex_hls_log2_trafo_size_c_o_ap_vld) begin
        hls_transform_unit_ex_hls_log2_trafo_size_c_o_r <= hls_transform_unit_ex_hls_log2_trafo_size_c_o;
    end
    //------READ (scalar, global adr = 48) always block-----//
    //s = 12; r = 1; a = 17;
    if (scalar_rdat_vld[12][1][17]) begin
        hls_transform_unit_ex_hls_scan_idx_o_r <= scalar_rdat  [12][1][17];    //bidir
    end
    //------WRITE (scalar, global adr = 48) always block-----//
    //s = 12; r = 0; a = 4;
    hls_transform_unit_ex_hls_scan_idx_o_ap_vld_r <= hls_transform_unit_ex_hls_scan_idx_o_ap_vld;
    if (hls_transform_unit_ex_hls_scan_idx_o_ap_vld) begin
        hls_transform_unit_ex_hls_scan_idx_o_r <= hls_transform_unit_ex_hls_scan_idx_o;
    end
    //------WRITE (scalar, global adr = 52) always block-----//
    //s = 13; r = 1; a = 4;
    hls_transform_unit_ex_hls_scan_idx_c_ap_vld_r <= hls_transform_unit_ex_hls_scan_idx_c_ap_vld;
    if (hls_transform_unit_ex_hls_scan_idx_c_ap_vld) begin
        hls_transform_unit_ex_hls_scan_idx_c_r <= hls_transform_unit_ex_hls_scan_idx_c;
    end
    //------READ (scalar, global adr = 1136) always block-----//
    //s = 28; r = 0; a = 12;
    if (scalar_rdat_vld[28][0][12]) begin
        hls_transform_unit_ex_hls_cmdr_run_o_r <= scalar_rdat  [28][0][12];    //bidir
    end
    //------WRITE (scalar, global adr = 1136) always block-----//
    //s = 28; r = 0; a = 2;
    hls_transform_unit_ex_hls_cmdr_run_o_ap_vld_r <= hls_transform_unit_ex_hls_cmdr_run_o_ap_vld;
    if (hls_transform_unit_ex_hls_cmdr_run_o_ap_vld) begin
        hls_transform_unit_ex_hls_cmdr_run_o_r <= hls_transform_unit_ex_hls_cmdr_run_o;
    end
    //------READ (scalar, complete partition, global adr = 1240) always block-----//
    //s = 22; r = 1; a = 10;
    if (scalar_rdat_vld[22][1][10]) begin
        hls_transform_unit_ex_hls_buf_data_0 <= scalar_rdat  [22][1][10];
    end
    //------READ (scalar, complete partition, global adr = 1244) always block-----//
    //s = 23; r = 1; a = 15;
    if (scalar_rdat_vld[23][1][15]) begin
        hls_transform_unit_ex_hls_buf_data_1 <= scalar_rdat  [23][1][15];
    end
    //------READ (scalar, complete partition, global adr = 1248) always block-----//
    //s = 24; r = 1; a = 11;
    if (scalar_rdat_vld[24][1][11]) begin
        hls_transform_unit_ex_hls_buf_data_2 <= scalar_rdat  [24][1][11];
    end
    //------READ (scalar, complete partition, global adr = 1144) always block-----//
    //s = 30; r = 1; a = 9;
    if (scalar_rdat_vld[30][1][9]) begin
        hls_transform_unit_ex_hls_xm_linesize_0 <= scalar_rdat  [30][1][9];
    end
    //------READ (scalar, complete partition, global adr = 1148) always block-----//
    //s = 31; r = 1; a = 15;
    if (scalar_rdat_vld[31][1][15]) begin
        hls_transform_unit_ex_hls_xm_linesize_1 <= scalar_rdat  [31][1][15];
    end
    //------READ (scalar, complete partition, global adr = 1152) always block-----//
    //s = 0; r = 1; a = 24;
    if (scalar_rdat_vld[0][1][24]) begin
        hls_transform_unit_ex_hls_xm_linesize_2 <= scalar_rdat  [0][1][24];
    end
    //------READ (scalar, global adr = 1140) always block-----//
    //s = 29; r = 0; a = 5;
    if (scalar_rdat_vld[29][0][5]) begin
        hls_transform_unit_ex_hls_pixel_shift <= scalar_rdat  [29][0][5];
    end
    //------WRITE (scalar, global adr = 160) always block-----//
    //s = 8; r = 1; a = 4;
    hls_transform_unit_ex_hls_nPbW_ap_vld_r <= hls_transform_unit_ex_hls_nPbW_ap_vld;
    if (hls_transform_unit_ex_hls_nPbW_ap_vld) begin
        hls_transform_unit_ex_hls_nPbW_r <= hls_transform_unit_ex_hls_nPbW;
    end
    //------WRITE (scalar, global adr = 164) always block-----//
    //s = 9; r = 1; a = 6;
    hls_transform_unit_ex_hls_nPbH_ap_vld_r <= hls_transform_unit_ex_hls_nPbH_ap_vld;
    if (hls_transform_unit_ex_hls_nPbH_ap_vld) begin
        hls_transform_unit_ex_hls_nPbH_r <= hls_transform_unit_ex_hls_nPbH;
    end
    //------WRITE (scalar, global adr = 580) always block-----//
    //s = 17; r = 0; a = 1;
    hls_transform_unit_ex_hls_cand_up_ap_vld_r <= hls_transform_unit_ex_hls_cand_up_ap_vld;
    if (hls_transform_unit_ex_hls_cand_up_ap_vld) begin
        hls_transform_unit_ex_hls_cand_up_r <= hls_transform_unit_ex_hls_cand_up;
    end
    //------WRITE (scalar, global adr = 584) always block-----//
    //s = 18; r = 0; a = 1;
    hls_transform_unit_ex_hls_cand_left_ap_vld_r <= hls_transform_unit_ex_hls_cand_left_ap_vld;
    if (hls_transform_unit_ex_hls_cand_left_ap_vld) begin
        hls_transform_unit_ex_hls_cand_left_r <= hls_transform_unit_ex_hls_cand_left;
    end
    //------WRITE (scalar, global adr = 588) always block-----//
    //s = 19; r = 0; a = 1;
    hls_transform_unit_ex_hls_cand_up_left_ap_vld_r <= hls_transform_unit_ex_hls_cand_up_left_ap_vld;
    if (hls_transform_unit_ex_hls_cand_up_left_ap_vld) begin
        hls_transform_unit_ex_hls_cand_up_left_r <= hls_transform_unit_ex_hls_cand_up_left;
    end
    //------WRITE (scalar, global adr = 592) always block-----//
    //s = 20; r = 0; a = 3;
    hls_transform_unit_ex_hls_cand_up_right_sap_ap_vld_r <= hls_transform_unit_ex_hls_cand_up_right_sap_ap_vld;
    if (hls_transform_unit_ex_hls_cand_up_right_sap_ap_vld) begin
        hls_transform_unit_ex_hls_cand_up_right_sap_r <= hls_transform_unit_ex_hls_cand_up_right_sap;
    end
    //------WRITE (scalar, global adr = 596) always block-----//
    //s = 21; r = 0; a = 3;
    hls_transform_unit_ex_hls_cand_up_right_ap_vld_r <= hls_transform_unit_ex_hls_cand_up_right_ap_vld;
    if (hls_transform_unit_ex_hls_cand_up_right_ap_vld) begin
        hls_transform_unit_ex_hls_cand_up_right_r <= hls_transform_unit_ex_hls_cand_up_right;
    end
    //------READ (scalar, global adr = 600) always block-----//
    //s = 22; r = 0; a = 12;
    if (scalar_rdat_vld[22][0][12]) begin
        hls_transform_unit_ex_hls_cand_bottom_left_o_r <= scalar_rdat  [22][0][12];    //bidir
    end
    //------WRITE (scalar, global adr = 600) always block-----//
    //s = 22; r = 0; a = 3;
    hls_transform_unit_ex_hls_cand_bottom_left_o_ap_vld_r <= hls_transform_unit_ex_hls_cand_bottom_left_o_ap_vld;
    if (hls_transform_unit_ex_hls_cand_bottom_left_o_ap_vld) begin
        hls_transform_unit_ex_hls_cand_bottom_left_o_r <= hls_transform_unit_ex_hls_cand_bottom_left_o;
    end
    //------WRITE (scalar, global adr = 1488) always block-----//
    //s = 20; r = 1; a = 3;
    hls_transform_unit_ex_hls_cand_up_c_ap_vld_r <= hls_transform_unit_ex_hls_cand_up_c_ap_vld;
    if (hls_transform_unit_ex_hls_cand_up_c_ap_vld) begin
        hls_transform_unit_ex_hls_cand_up_c_r <= hls_transform_unit_ex_hls_cand_up_c;
    end
    //------WRITE (scalar, global adr = 1492) always block-----//
    //s = 21; r = 1; a = 3;
    hls_transform_unit_ex_hls_cand_left_c_ap_vld_r <= hls_transform_unit_ex_hls_cand_left_c_ap_vld;
    if (hls_transform_unit_ex_hls_cand_left_c_ap_vld) begin
        hls_transform_unit_ex_hls_cand_left_c_r <= hls_transform_unit_ex_hls_cand_left_c;
    end
    //------WRITE (scalar, global adr = 1496) always block-----//
    //s = 22; r = 1; a = 3;
    hls_transform_unit_ex_hls_cand_up_left_c_ap_vld_r <= hls_transform_unit_ex_hls_cand_up_left_c_ap_vld;
    if (hls_transform_unit_ex_hls_cand_up_left_c_ap_vld) begin
        hls_transform_unit_ex_hls_cand_up_left_c_r <= hls_transform_unit_ex_hls_cand_up_left_c;
    end
    //------WRITE (scalar, global adr = 1500) always block-----//
    //s = 23; r = 0; a = 3;
    hls_transform_unit_ex_hls_cand_up_right_sap_c_ap_vld_r <= hls_transform_unit_ex_hls_cand_up_right_sap_c_ap_vld;
    if (hls_transform_unit_ex_hls_cand_up_right_sap_c_ap_vld) begin
        hls_transform_unit_ex_hls_cand_up_right_sap_c_r <= hls_transform_unit_ex_hls_cand_up_right_sap_c;
    end
    //------WRITE (scalar, global adr = 1504) always block-----//
    //s = 24; r = 0; a = 3;
    hls_transform_unit_ex_hls_cand_up_right_c_ap_vld_r <= hls_transform_unit_ex_hls_cand_up_right_c_ap_vld;
    if (hls_transform_unit_ex_hls_cand_up_right_c_ap_vld) begin
        hls_transform_unit_ex_hls_cand_up_right_c_r <= hls_transform_unit_ex_hls_cand_up_right_c;
    end
    //------READ (scalar, global adr = 1508) always block-----//
    //s = 25; r = 0; a = 8;
    if (scalar_rdat_vld[25][0][8]) begin
        hls_transform_unit_ex_hls_cand_bottom_left_c_o_r <= scalar_rdat  [25][0][8];    //bidir
    end
    //------WRITE (scalar, global adr = 1508) always block-----//
    //s = 25; r = 0; a = 3;
    hls_transform_unit_ex_hls_cand_bottom_left_c_o_ap_vld_r <= hls_transform_unit_ex_hls_cand_bottom_left_c_o_ap_vld;
    if (hls_transform_unit_ex_hls_cand_bottom_left_c_o_ap_vld) begin
        hls_transform_unit_ex_hls_cand_bottom_left_c_o_r <= hls_transform_unit_ex_hls_cand_bottom_left_c_o;
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 15;
    if (scalar_rdat_vld[26][0][15]) begin
        hls_transform_unit_ex_hls_log2_ctb_size <= scalar_rdat  [26][0][15];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 0; a = 17;
    if (scalar_rdat_vld[23][0][17]) begin
        hls_transform_unit_ex_hls_ctb_up_flag <= scalar_rdat  [23][0][17];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 0; a = 13;
    if (scalar_rdat_vld[24][0][13]) begin
        hls_transform_unit_ex_hls_ctb_left_flag <= scalar_rdat  [24][0][13];
    end
    //------READ (scalar, global adr = 612) always block-----//
    //s = 25; r = 1; a = 7;
    if (scalar_rdat_vld[25][1][7]) begin
        hls_transform_unit_ex_hls_ctb_up_left_flag <= scalar_rdat  [25][1][7];
    end
    //------READ (scalar, global adr = 616) always block-----//
    //s = 26; r = 1; a = 14;
    if (scalar_rdat_vld[26][1][14]) begin
        hls_transform_unit_ex_hls_ctb_up_right_flag <= scalar_rdat  [26][1][14];
    end
    //------READ (scalar, global adr = 620) always block-----//
    //s = 27; r = 0; a = 8;
    if (scalar_rdat_vld[27][0][8]) begin
        hls_transform_unit_ex_hls_end_of_tiles_x <= scalar_rdat  [27][0][8];
    end
    //------READ (scalar, global adr = 624) always block-----//
    //s = 28; r = 1; a = 12;
    if (scalar_rdat_vld[28][1][12]) begin
        hls_transform_unit_ex_hls_end_of_tiles_y <= scalar_rdat  [28][1][12];
    end
    //------READ (scalar, global adr = 472) always block-----//
    //s = 22; r = 1; a = 11;
    if (scalar_rdat_vld[22][1][11]) begin
        hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_r <= scalar_rdat  [22][1][11];    //bidir
    end
    //------WRITE (scalar, global adr = 472) always block-----//
    //s = 22; r = 0; a = 4;
    hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r <= hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_ap_vld;
    if (hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_ap_vld) begin
        hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_r <= hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o;
    end
    //------READ (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 16;
    if (scalar_rdat_vld[23][1][16]) begin
        hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_r <= scalar_rdat  [23][1][16];    //bidir
    end
    //------WRITE (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 3;
    hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_ap_vld_r <= hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_ap_vld;
    if (hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_ap_vld) begin
        hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_r <= hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o;
    end
    //------WRITE (scalar, global adr = 468) always block-----//
    //s = 21; r = 0; a = 4;
    hls_transform_unit_ex_hls_tu_cu_qp_delta_ap_vld_r <= hls_transform_unit_ex_hls_tu_cu_qp_delta_ap_vld;
    if (hls_transform_unit_ex_hls_tu_cu_qp_delta_ap_vld) begin
        hls_transform_unit_ex_hls_tu_cu_qp_delta_r <= hls_transform_unit_ex_hls_tu_cu_qp_delta;
    end
    //------WRITE (scalar, global adr = 500) always block-----//
    //s = 29; r = 1; a = 0;
    hls_transform_unit_ex_hls_tu_cross_pf_ap_vld_r <= hls_transform_unit_ex_hls_tu_cross_pf_ap_vld;
    if (hls_transform_unit_ex_hls_tu_cross_pf_ap_vld) begin
        hls_transform_unit_ex_hls_tu_cross_pf_r <= hls_transform_unit_ex_hls_tu_cross_pf;
    end
    //------READ (scalar, global adr = 532) always block-----//
    //s = 5; r = 0; a = 12;
    if (scalar_rdat_vld[5][0][12]) begin
        hls_transform_unit_ex_hls_first_qp_group_o_r <= scalar_rdat  [5][0][12];    //bidir
    end
    //------WRITE (scalar, global adr = 532) always block-----//
    //s = 5; r = 0; a = 5;
    hls_transform_unit_ex_hls_first_qp_group_o_ap_vld_r <= hls_transform_unit_ex_hls_first_qp_group_o_ap_vld;
    if (hls_transform_unit_ex_hls_first_qp_group_o_ap_vld) begin
        hls_transform_unit_ex_hls_first_qp_group_o_r <= hls_transform_unit_ex_hls_first_qp_group_o;
    end
    //------READ (scalar, global adr = 328) always block-----//
    //s = 18; r = 1; a = 8;
    if (scalar_rdat_vld[18][1][8]) begin
        hls_transform_unit_ex_hls_chroma_format_idc <= scalar_rdat  [18][1][8];
    end
    //------READ (scalar, global adr = 448) always block-----//
    //s = 16; r = 1; a = 12;
    if (scalar_rdat_vld[16][1][12]) begin
        hls_transform_unit_ex_hls_cu_chroma_qp_offset_enabled_flag <= scalar_rdat  [16][1][12];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 0; a = 16;
    if (scalar_rdat_vld[11][0][16]) begin
        hls_transform_unit_ex_hls_cu_qp_delta_enabled_flag <= scalar_rdat  [11][0][16];
    end
    //------READ (scalar, global adr = 540) always block-----//
    //s = 7; r = 1; a = 13;
    if (scalar_rdat_vld[7][1][13]) begin
        hls_transform_unit_ex_hls_qPy_pred <= scalar_rdat  [7][1][13];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 0; a = 23;
    if (scalar_rdat_vld[13][0][23]) begin
        hls_transform_unit_ex_hls_diff_cu_qp_delta_depth <= scalar_rdat  [13][0][23];
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 0; a = 13;
    if (scalar_rdat_vld[28][0][13]) begin
        hls_transform_unit_ex_hls_log2_min_cb_size <= scalar_rdat  [28][0][13];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 1; a = 14;
    if (scalar_rdat_vld[2][1][14]) begin
        hls_transform_unit_ex_hls_min_cb_width <= scalar_rdat  [2][1][14];
    end
    //------READ (scalar, global adr = 460) always block-----//
    //s = 19; r = 1; a = 7;
    if (scalar_rdat_vld[19][1][7]) begin
        hls_transform_unit_ex_hls_slice_qp <= scalar_rdat  [19][1][7];
    end
`endif
    //============================================================
    //hls_transform_unit_ex_hls_dup1       (f = 7)
    //============================================================
`ifdef enable_connect_hls_transform_unit_ex_hls_dup1
    //------READ (scalar, global adr = 20) always block-----//
    //s = 5; r = 1; a = 11;
    if (scalar_rdat_vld[5][1][11]) begin
        hls_transform_unit_ex_hls_dup1_cbf_luma <= scalar_rdat  [5][1][11];
    end
    //------READ (scalar, global adr = 16) always block-----//
    //s = 4; r = 1; a = 7;
    if (scalar_rdat_vld[4][1][7]) begin
        hls_transform_unit_ex_hls_dup1_cbf_data <= scalar_rdat  [4][1][7];
    end
    //------READ (scalar, global adr = 1260) always block-----//
    //s = 27; r = 1; a = 7;
    if (scalar_rdat_vld[27][1][7]) begin
        hls_transform_unit_ex_hls_dup1_dc_min_tb_addr_zs_p <= scalar_rdat  [27][1][7];
    end
    //------READ (scalar, global adr = 1156) always block-----//
    //s = 1; r = 1; a = 15;
    if (scalar_rdat_vld[1][1][15]) begin
        hls_transform_unit_ex_hls_dup1_chroma_qp_offset_list_len_minus1 <= scalar_rdat  [1][1][15];
    end
    //------READ (scalar, global adr = 1264) always block-----//
    //s = 28; r = 1; a = 13;
    if (scalar_rdat_vld[28][1][13]) begin
        hls_transform_unit_ex_hls_dup1_dc_cb_qp_offset_list_p <= scalar_rdat  [28][1][13];
    end
    //------READ (scalar, global adr = 1268) always block-----//
    //s = 29; r = 1; a = 4;
    if (scalar_rdat_vld[29][1][4]) begin
        hls_transform_unit_ex_hls_dup1_dc_cr_qp_offset_list_p <= scalar_rdat  [29][1][4];
    end
    //------READ (scalar, global adr = 1132) always block-----//
    //s = 27; r = 0; a = 9;
    if (scalar_rdat_vld[27][0][9]) begin
        hls_transform_unit_ex_hls_dup1_qp_bd_offset <= scalar_rdat  [27][0][9];
    end
    //------READ (scalar, global adr = 1272) always block-----//
    //s = 30; r = 0; a = 10;
    if (scalar_rdat_vld[30][0][10]) begin
        hls_transform_unit_ex_hls_dup1_dc_qp_y_tab_p <= scalar_rdat  [30][0][10];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 19;
    if (scalar_rdat_vld[12][0][19]) begin
        hls_transform_unit_ex_hls_dup1_pred_mode <= scalar_rdat  [12][0][19];
    end
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 1; a = 11;
    if (scalar_rdat_vld[20][1][11]) begin
        hls_transform_unit_ex_hls_dup1_hshift_0 <= scalar_rdat  [20][1][11];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 1; a = 16;
    if (scalar_rdat_vld[21][1][16]) begin
        hls_transform_unit_ex_hls_dup1_hshift_1 <= scalar_rdat  [21][1][16];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 0; a = 13;
    if (scalar_rdat_vld[22][0][13]) begin
        hls_transform_unit_ex_hls_dup1_hshift_2 <= scalar_rdat  [22][0][13];
    end
    //------READ (scalar, complete partition, global adr = 348) always block-----//
    //s = 23; r = 0; a = 18;
    if (scalar_rdat_vld[23][0][18]) begin
        hls_transform_unit_ex_hls_dup1_vshift_0 <= scalar_rdat  [23][0][18];
    end
    //------READ (scalar, complete partition, global adr = 352) always block-----//
    //s = 24; r = 1; a = 12;
    if (scalar_rdat_vld[24][1][12]) begin
        hls_transform_unit_ex_hls_dup1_vshift_1 <= scalar_rdat  [24][1][12];
    end
    //------READ (scalar, complete partition, global adr = 356) always block-----//
    //s = 25; r = 0; a = 9;
    if (scalar_rdat_vld[25][0][9]) begin
        hls_transform_unit_ex_hls_dup1_vshift_2 <= scalar_rdat  [25][0][9];
    end
    //------READ (scalar, global adr = 484) always block-----//
    //s = 25; r = 1; a = 8;
    if (scalar_rdat_vld[25][1][8]) begin
        hls_transform_unit_ex_hls_dup1_tu_intra_pred_mode <= scalar_rdat  [25][1][8];
    end
    //------READ (scalar, global adr = 488) always block-----//
    //s = 26; r = 0; a = 16;
    if (scalar_rdat_vld[26][0][16]) begin
        hls_transform_unit_ex_hls_dup1_tu_intra_pred_mode_c <= scalar_rdat  [26][0][16];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 14;
    if (scalar_rdat_vld[15][1][14]) begin
        hls_transform_unit_ex_hls_dup1_cu_transquant_bypass_flag <= scalar_rdat  [15][1][14];
    end
    //------WRITE (scalar, global adr = 492) always block-----//
    //s = 27; r = 1; a = 1;
    hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_ap_vld_r <= hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_r <= hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb;
    end
    //------WRITE (scalar, global adr = 496) always block-----//
    //s = 28; r = 1; a = 2;
    hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_ap_vld_r <= hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_r <= hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr;
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 0; a = 15;
    if (scalar_rdat_vld[6][0][15]) begin
        hls_transform_unit_ex_hls_dup1_qp_y_o_r <= scalar_rdat  [6][0][15];    //bidir
    end
    //------WRITE (scalar, global adr = 536) always block-----//
    //s = 6; r = 0; a = 5;
    hls_transform_unit_ex_hls_dup1_qp_y_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_qp_y_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_qp_y_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_qp_y_o_r <= hls_transform_unit_ex_hls_dup1_qp_y_o;
    end
    //------WRITE (scalar, global adr = 168) always block-----//
    //s = 10; r = 1; a = 6;
    hls_transform_unit_ex_hls_dup1_log2_trafo_size_ap_vld_r <= hls_transform_unit_ex_hls_dup1_log2_trafo_size_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_log2_trafo_size_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_log2_trafo_size_r <= hls_transform_unit_ex_hls_dup1_log2_trafo_size;
    end
    //------READ (scalar, global adr = 56) always block-----//
    //s = 14; r = 0; a = 21;
    if (scalar_rdat_vld[14][0][21]) begin
        hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_r <= scalar_rdat  [14][0][21];    //bidir
    end
    //------WRITE (scalar, global adr = 56) always block-----//
    //s = 14; r = 0; a = 5;
    hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_r <= hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o;
    end
    //------READ (scalar, global adr = 48) always block-----//
    //s = 12; r = 1; a = 18;
    if (scalar_rdat_vld[12][1][18]) begin
        hls_transform_unit_ex_hls_dup1_scan_idx_o_r <= scalar_rdat  [12][1][18];    //bidir
    end
    //------WRITE (scalar, global adr = 48) always block-----//
    //s = 12; r = 1; a = 4;
    hls_transform_unit_ex_hls_dup1_scan_idx_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_scan_idx_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_scan_idx_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_scan_idx_o_r <= hls_transform_unit_ex_hls_dup1_scan_idx_o;
    end
    //------WRITE (scalar, global adr = 52) always block-----//
    //s = 13; r = 0; a = 5;
    hls_transform_unit_ex_hls_dup1_scan_idx_c_ap_vld_r <= hls_transform_unit_ex_hls_dup1_scan_idx_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_scan_idx_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_scan_idx_c_r <= hls_transform_unit_ex_hls_dup1_scan_idx_c;
    end
    //------READ (scalar, global adr = 1136) always block-----//
    //s = 28; r = 0; a = 14;
    if (scalar_rdat_vld[28][0][14]) begin
        hls_transform_unit_ex_hls_dup1_cmdr_run_o_r <= scalar_rdat  [28][0][14];    //bidir
    end
    //------WRITE (scalar, global adr = 1136) always block-----//
    //s = 28; r = 0; a = 3;
    hls_transform_unit_ex_hls_dup1_cmdr_run_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cmdr_run_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cmdr_run_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cmdr_run_o_r <= hls_transform_unit_ex_hls_dup1_cmdr_run_o;
    end
    //------READ (scalar, complete partition, global adr = 1240) always block-----//
    //s = 22; r = 1; a = 12;
    if (scalar_rdat_vld[22][1][12]) begin
        hls_transform_unit_ex_hls_dup1_buf_data_0 <= scalar_rdat  [22][1][12];
    end
    //------READ (scalar, complete partition, global adr = 1244) always block-----//
    //s = 23; r = 1; a = 17;
    if (scalar_rdat_vld[23][1][17]) begin
        hls_transform_unit_ex_hls_dup1_buf_data_1 <= scalar_rdat  [23][1][17];
    end
    //------READ (scalar, complete partition, global adr = 1248) always block-----//
    //s = 24; r = 0; a = 14;
    if (scalar_rdat_vld[24][0][14]) begin
        hls_transform_unit_ex_hls_dup1_buf_data_2 <= scalar_rdat  [24][0][14];
    end
    //------READ (scalar, complete partition, global adr = 1144) always block-----//
    //s = 30; r = 1; a = 10;
    if (scalar_rdat_vld[30][1][10]) begin
        hls_transform_unit_ex_hls_dup1_xm_linesize_0 <= scalar_rdat  [30][1][10];
    end
    //------READ (scalar, complete partition, global adr = 1148) always block-----//
    //s = 31; r = 0; a = 17;
    if (scalar_rdat_vld[31][0][17]) begin
        hls_transform_unit_ex_hls_dup1_xm_linesize_1 <= scalar_rdat  [31][0][17];
    end
    //------READ (scalar, complete partition, global adr = 1152) always block-----//
    //s = 0; r = 0; a = 26;
    if (scalar_rdat_vld[0][0][26]) begin
        hls_transform_unit_ex_hls_dup1_xm_linesize_2 <= scalar_rdat  [0][0][26];
    end
    //------READ (scalar, global adr = 1140) always block-----//
    //s = 29; r = 0; a = 6;
    if (scalar_rdat_vld[29][0][6]) begin
        hls_transform_unit_ex_hls_dup1_pixel_shift <= scalar_rdat  [29][0][6];
    end
    //------WRITE (scalar, global adr = 160) always block-----//
    //s = 8; r = 0; a = 5;
    hls_transform_unit_ex_hls_dup1_nPbW_ap_vld_r <= hls_transform_unit_ex_hls_dup1_nPbW_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_nPbW_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_nPbW_r <= hls_transform_unit_ex_hls_dup1_nPbW;
    end
    //------WRITE (scalar, global adr = 164) always block-----//
    //s = 9; r = 0; a = 7;
    hls_transform_unit_ex_hls_dup1_nPbH_ap_vld_r <= hls_transform_unit_ex_hls_dup1_nPbH_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_nPbH_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_nPbH_r <= hls_transform_unit_ex_hls_dup1_nPbH;
    end
    //------WRITE (scalar, global adr = 580) always block-----//
    //s = 17; r = 1; a = 1;
    hls_transform_unit_ex_hls_dup1_cand_up_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_up_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_up_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_up_r <= hls_transform_unit_ex_hls_dup1_cand_up;
    end
    //------WRITE (scalar, global adr = 584) always block-----//
    //s = 18; r = 1; a = 1;
    hls_transform_unit_ex_hls_dup1_cand_left_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_left_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_left_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_left_r <= hls_transform_unit_ex_hls_dup1_cand_left;
    end
    //------WRITE (scalar, global adr = 588) always block-----//
    //s = 19; r = 1; a = 1;
    hls_transform_unit_ex_hls_dup1_cand_up_left_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_up_left_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_up_left_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_up_left_r <= hls_transform_unit_ex_hls_dup1_cand_up_left;
    end
    //------WRITE (scalar, global adr = 592) always block-----//
    //s = 20; r = 0; a = 4;
    hls_transform_unit_ex_hls_dup1_cand_up_right_sap_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_up_right_sap_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_up_right_sap_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_up_right_sap_r <= hls_transform_unit_ex_hls_dup1_cand_up_right_sap;
    end
    //------WRITE (scalar, global adr = 596) always block-----//
    //s = 21; r = 1; a = 4;
    hls_transform_unit_ex_hls_dup1_cand_up_right_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_up_right_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_up_right_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_up_right_r <= hls_transform_unit_ex_hls_dup1_cand_up_right;
    end
    //------READ (scalar, global adr = 600) always block-----//
    //s = 22; r = 0; a = 14;
    if (scalar_rdat_vld[22][0][14]) begin
        hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_r <= scalar_rdat  [22][0][14];    //bidir
    end
    //------WRITE (scalar, global adr = 600) always block-----//
    //s = 22; r = 1; a = 4;
    hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_r <= hls_transform_unit_ex_hls_dup1_cand_bottom_left_o;
    end
    //------WRITE (scalar, global adr = 1488) always block-----//
    //s = 20; r = 1; a = 4;
    hls_transform_unit_ex_hls_dup1_cand_up_c_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_up_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_up_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_up_c_r <= hls_transform_unit_ex_hls_dup1_cand_up_c;
    end
    //------WRITE (scalar, global adr = 1492) always block-----//
    //s = 21; r = 0; a = 5;
    hls_transform_unit_ex_hls_dup1_cand_left_c_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_left_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_left_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_left_c_r <= hls_transform_unit_ex_hls_dup1_cand_left_c;
    end
    //------WRITE (scalar, global adr = 1496) always block-----//
    //s = 22; r = 0; a = 5;
    hls_transform_unit_ex_hls_dup1_cand_up_left_c_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_up_left_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_up_left_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_up_left_c_r <= hls_transform_unit_ex_hls_dup1_cand_up_left_c;
    end
    //------WRITE (scalar, global adr = 1500) always block-----//
    //s = 23; r = 0; a = 4;
    hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_r <= hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c;
    end
    //------WRITE (scalar, global adr = 1504) always block-----//
    //s = 24; r = 1; a = 3;
    hls_transform_unit_ex_hls_dup1_cand_up_right_c_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_up_right_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_up_right_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_up_right_c_r <= hls_transform_unit_ex_hls_dup1_cand_up_right_c;
    end
    //------READ (scalar, global adr = 1508) always block-----//
    //s = 25; r = 0; a = 10;
    if (scalar_rdat_vld[25][0][10]) begin
        hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_r <= scalar_rdat  [25][0][10];    //bidir
    end
    //------WRITE (scalar, global adr = 1508) always block-----//
    //s = 25; r = 1; a = 3;
    hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_r <= hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o;
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 15;
    if (scalar_rdat_vld[26][1][15]) begin
        hls_transform_unit_ex_hls_dup1_log2_ctb_size <= scalar_rdat  [26][1][15];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 0; a = 19;
    if (scalar_rdat_vld[23][0][19]) begin
        hls_transform_unit_ex_hls_dup1_ctb_up_flag <= scalar_rdat  [23][0][19];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 13;
    if (scalar_rdat_vld[24][1][13]) begin
        hls_transform_unit_ex_hls_dup1_ctb_left_flag <= scalar_rdat  [24][1][13];
    end
    //------READ (scalar, global adr = 612) always block-----//
    //s = 25; r = 1; a = 9;
    if (scalar_rdat_vld[25][1][9]) begin
        hls_transform_unit_ex_hls_dup1_ctb_up_left_flag <= scalar_rdat  [25][1][9];
    end
    //------READ (scalar, global adr = 616) always block-----//
    //s = 26; r = 0; a = 17;
    if (scalar_rdat_vld[26][0][17]) begin
        hls_transform_unit_ex_hls_dup1_ctb_up_right_flag <= scalar_rdat  [26][0][17];
    end
    //------READ (scalar, global adr = 620) always block-----//
    //s = 27; r = 1; a = 8;
    if (scalar_rdat_vld[27][1][8]) begin
        hls_transform_unit_ex_hls_dup1_end_of_tiles_x <= scalar_rdat  [27][1][8];
    end
    //------READ (scalar, global adr = 624) always block-----//
    //s = 28; r = 1; a = 14;
    if (scalar_rdat_vld[28][1][14]) begin
        hls_transform_unit_ex_hls_dup1_end_of_tiles_y <= scalar_rdat  [28][1][14];
    end
    //------READ (scalar, global adr = 472) always block-----//
    //s = 22; r = 1; a = 13;
    if (scalar_rdat_vld[22][1][13]) begin
        hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_r <= scalar_rdat  [22][1][13];    //bidir
    end
    //------WRITE (scalar, global adr = 472) always block-----//
    //s = 22; r = 1; a = 5;
    hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_r <= hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o;
    end
    //------READ (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 18;
    if (scalar_rdat_vld[23][1][18]) begin
        hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_r <= scalar_rdat  [23][1][18];    //bidir
    end
    //------WRITE (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 4;
    hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_r <= hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o;
    end
    //------WRITE (scalar, global adr = 468) always block-----//
    //s = 21; r = 1; a = 5;
    hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_ap_vld_r <= hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_r <= hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta;
    end
    //------WRITE (scalar, global adr = 500) always block-----//
    //s = 29; r = 0; a = 1;
    hls_transform_unit_ex_hls_dup1_tu_cross_pf_ap_vld_r <= hls_transform_unit_ex_hls_dup1_tu_cross_pf_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_tu_cross_pf_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_tu_cross_pf_r <= hls_transform_unit_ex_hls_dup1_tu_cross_pf;
    end
    //------READ (scalar, global adr = 532) always block-----//
    //s = 5; r = 0; a = 13;
    if (scalar_rdat_vld[5][0][13]) begin
        hls_transform_unit_ex_hls_dup1_first_qp_group_o_r <= scalar_rdat  [5][0][13];    //bidir
    end
    //------WRITE (scalar, global adr = 532) always block-----//
    //s = 5; r = 1; a = 5;
    hls_transform_unit_ex_hls_dup1_first_qp_group_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_first_qp_group_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_first_qp_group_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_first_qp_group_o_r <= hls_transform_unit_ex_hls_dup1_first_qp_group_o;
    end
    //------READ (scalar, global adr = 328) always block-----//
    //s = 18; r = 0; a = 9;
    if (scalar_rdat_vld[18][0][9]) begin
        hls_transform_unit_ex_hls_dup1_chroma_format_idc <= scalar_rdat  [18][0][9];
    end
    //------READ (scalar, global adr = 448) always block-----//
    //s = 16; r = 0; a = 13;
    if (scalar_rdat_vld[16][0][13]) begin
        hls_transform_unit_ex_hls_dup1_cu_chroma_qp_offset_enabled_flag <= scalar_rdat  [16][0][13];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 1; a = 15;
    if (scalar_rdat_vld[11][1][15]) begin
        hls_transform_unit_ex_hls_dup1_cu_qp_delta_enabled_flag <= scalar_rdat  [11][1][15];
    end
    //------READ (scalar, global adr = 540) always block-----//
    //s = 7; r = 0; a = 15;
    if (scalar_rdat_vld[7][0][15]) begin
        hls_transform_unit_ex_hls_dup1_qPy_pred <= scalar_rdat  [7][0][15];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 1; a = 22;
    if (scalar_rdat_vld[13][1][22]) begin
        hls_transform_unit_ex_hls_dup1_diff_cu_qp_delta_depth <= scalar_rdat  [13][1][22];
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 0; a = 15;
    if (scalar_rdat_vld[28][0][15]) begin
        hls_transform_unit_ex_hls_dup1_log2_min_cb_size <= scalar_rdat  [28][0][15];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 0; a = 16;
    if (scalar_rdat_vld[2][0][16]) begin
        hls_transform_unit_ex_hls_dup1_min_cb_width <= scalar_rdat  [2][0][16];
    end
    //------READ (scalar, global adr = 460) always block-----//
    //s = 19; r = 0; a = 8;
    if (scalar_rdat_vld[19][0][8]) begin
        hls_transform_unit_ex_hls_dup1_slice_qp <= scalar_rdat  [19][0][8];
    end
`endif
    //============================================================
    //hls_transform_unit_ex_hls_dup2       (f = 8)
    //============================================================
`ifdef enable_connect_hls_transform_unit_ex_hls_dup2
    //------READ (scalar, global adr = 20) always block-----//
    //s = 5; r = 1; a = 12;
    if (scalar_rdat_vld[5][1][12]) begin
        hls_transform_unit_ex_hls_dup2_cbf_luma <= scalar_rdat  [5][1][12];
    end
    //------READ (scalar, global adr = 16) always block-----//
    //s = 4; r = 0; a = 9;
    if (scalar_rdat_vld[4][0][9]) begin
        hls_transform_unit_ex_hls_dup2_cbf_data <= scalar_rdat  [4][0][9];
    end
    //------READ (scalar, global adr = 1260) always block-----//
    //s = 27; r = 0; a = 10;
    if (scalar_rdat_vld[27][0][10]) begin
        hls_transform_unit_ex_hls_dup2_dc_min_tb_addr_zs_p <= scalar_rdat  [27][0][10];
    end
    //------READ (scalar, global adr = 1156) always block-----//
    //s = 1; r = 0; a = 17;
    if (scalar_rdat_vld[1][0][17]) begin
        hls_transform_unit_ex_hls_dup2_chroma_qp_offset_list_len_minus1 <= scalar_rdat  [1][0][17];
    end
    //------READ (scalar, global adr = 1264) always block-----//
    //s = 28; r = 1; a = 15;
    if (scalar_rdat_vld[28][1][15]) begin
        hls_transform_unit_ex_hls_dup2_dc_cb_qp_offset_list_p <= scalar_rdat  [28][1][15];
    end
    //------READ (scalar, global adr = 1268) always block-----//
    //s = 29; r = 1; a = 5;
    if (scalar_rdat_vld[29][1][5]) begin
        hls_transform_unit_ex_hls_dup2_dc_cr_qp_offset_list_p <= scalar_rdat  [29][1][5];
    end
    //------READ (scalar, global adr = 1132) always block-----//
    //s = 27; r = 1; a = 9;
    if (scalar_rdat_vld[27][1][9]) begin
        hls_transform_unit_ex_hls_dup2_qp_bd_offset <= scalar_rdat  [27][1][9];
    end
    //------READ (scalar, global adr = 1272) always block-----//
    //s = 30; r = 0; a = 11;
    if (scalar_rdat_vld[30][0][11]) begin
        hls_transform_unit_ex_hls_dup2_dc_qp_y_tab_p <= scalar_rdat  [30][0][11];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 20;
    if (scalar_rdat_vld[12][0][20]) begin
        hls_transform_unit_ex_hls_dup2_pred_mode <= scalar_rdat  [12][0][20];
    end
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 0; a = 12;
    if (scalar_rdat_vld[20][0][12]) begin
        hls_transform_unit_ex_hls_dup2_hshift_0 <= scalar_rdat  [20][0][12];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 0; a = 18;
    if (scalar_rdat_vld[21][0][18]) begin
        hls_transform_unit_ex_hls_dup2_hshift_1 <= scalar_rdat  [21][0][18];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 0; a = 15;
    if (scalar_rdat_vld[22][0][15]) begin
        hls_transform_unit_ex_hls_dup2_hshift_2 <= scalar_rdat  [22][0][15];
    end
    //------READ (scalar, complete partition, global adr = 348) always block-----//
    //s = 23; r = 0; a = 20;
    if (scalar_rdat_vld[23][0][20]) begin
        hls_transform_unit_ex_hls_dup2_vshift_0 <= scalar_rdat  [23][0][20];
    end
    //------READ (scalar, complete partition, global adr = 352) always block-----//
    //s = 24; r = 0; a = 15;
    if (scalar_rdat_vld[24][0][15]) begin
        hls_transform_unit_ex_hls_dup2_vshift_1 <= scalar_rdat  [24][0][15];
    end
    //------READ (scalar, complete partition, global adr = 356) always block-----//
    //s = 25; r = 0; a = 11;
    if (scalar_rdat_vld[25][0][11]) begin
        hls_transform_unit_ex_hls_dup2_vshift_2 <= scalar_rdat  [25][0][11];
    end
    //------READ (scalar, global adr = 484) always block-----//
    //s = 25; r = 1; a = 10;
    if (scalar_rdat_vld[25][1][10]) begin
        hls_transform_unit_ex_hls_dup2_tu_intra_pred_mode <= scalar_rdat  [25][1][10];
    end
    //------READ (scalar, global adr = 488) always block-----//
    //s = 26; r = 1; a = 16;
    if (scalar_rdat_vld[26][1][16]) begin
        hls_transform_unit_ex_hls_dup2_tu_intra_pred_mode_c <= scalar_rdat  [26][1][16];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 0; a = 16;
    if (scalar_rdat_vld[15][0][16]) begin
        hls_transform_unit_ex_hls_dup2_cu_transquant_bypass_flag <= scalar_rdat  [15][0][16];
    end
    //------WRITE (scalar, global adr = 492) always block-----//
    //s = 27; r = 0; a = 2;
    hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_ap_vld_r <= hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_r <= hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb;
    end
    //------WRITE (scalar, global adr = 496) always block-----//
    //s = 28; r = 1; a = 3;
    hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_ap_vld_r <= hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_r <= hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr;
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 15;
    if (scalar_rdat_vld[6][1][15]) begin
        hls_transform_unit_ex_hls_dup2_qp_y_o_r <= scalar_rdat  [6][1][15];    //bidir
    end
    //------WRITE (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 5;
    hls_transform_unit_ex_hls_dup2_qp_y_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_qp_y_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_qp_y_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_qp_y_o_r <= hls_transform_unit_ex_hls_dup2_qp_y_o;
    end
    //------WRITE (scalar, global adr = 168) always block-----//
    //s = 10; r = 0; a = 7;
    hls_transform_unit_ex_hls_dup2_log2_trafo_size_ap_vld_r <= hls_transform_unit_ex_hls_dup2_log2_trafo_size_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_log2_trafo_size_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_log2_trafo_size_r <= hls_transform_unit_ex_hls_dup2_log2_trafo_size;
    end
    //------READ (scalar, global adr = 56) always block-----//
    //s = 14; r = 1; a = 20;
    if (scalar_rdat_vld[14][1][20]) begin
        hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_r <= scalar_rdat  [14][1][20];    //bidir
    end
    //------WRITE (scalar, global adr = 56) always block-----//
    //s = 14; r = 1; a = 5;
    hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_r <= hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o;
    end
    //------READ (scalar, global adr = 48) always block-----//
    //s = 12; r = 1; a = 19;
    if (scalar_rdat_vld[12][1][19]) begin
        hls_transform_unit_ex_hls_dup2_scan_idx_o_r <= scalar_rdat  [12][1][19];    //bidir
    end
    //------WRITE (scalar, global adr = 48) always block-----//
    //s = 12; r = 0; a = 5;
    hls_transform_unit_ex_hls_dup2_scan_idx_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_scan_idx_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_scan_idx_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_scan_idx_o_r <= hls_transform_unit_ex_hls_dup2_scan_idx_o;
    end
    //------WRITE (scalar, global adr = 52) always block-----//
    //s = 13; r = 1; a = 5;
    hls_transform_unit_ex_hls_dup2_scan_idx_c_ap_vld_r <= hls_transform_unit_ex_hls_dup2_scan_idx_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_scan_idx_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_scan_idx_c_r <= hls_transform_unit_ex_hls_dup2_scan_idx_c;
    end
    //------READ (scalar, global adr = 1136) always block-----//
    //s = 28; r = 0; a = 16;
    if (scalar_rdat_vld[28][0][16]) begin
        hls_transform_unit_ex_hls_dup2_cmdr_run_o_r <= scalar_rdat  [28][0][16];    //bidir
    end
    //------WRITE (scalar, global adr = 1136) always block-----//
    //s = 28; r = 0; a = 4;
    hls_transform_unit_ex_hls_dup2_cmdr_run_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cmdr_run_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cmdr_run_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cmdr_run_o_r <= hls_transform_unit_ex_hls_dup2_cmdr_run_o;
    end
    //------READ (scalar, complete partition, global adr = 1240) always block-----//
    //s = 22; r = 1; a = 14;
    if (scalar_rdat_vld[22][1][14]) begin
        hls_transform_unit_ex_hls_dup2_buf_data_0 <= scalar_rdat  [22][1][14];
    end
    //------READ (scalar, complete partition, global adr = 1244) always block-----//
    //s = 23; r = 1; a = 19;
    if (scalar_rdat_vld[23][1][19]) begin
        hls_transform_unit_ex_hls_dup2_buf_data_1 <= scalar_rdat  [23][1][19];
    end
    //------READ (scalar, complete partition, global adr = 1248) always block-----//
    //s = 24; r = 1; a = 14;
    if (scalar_rdat_vld[24][1][14]) begin
        hls_transform_unit_ex_hls_dup2_buf_data_2 <= scalar_rdat  [24][1][14];
    end
    //------READ (scalar, complete partition, global adr = 1144) always block-----//
    //s = 30; r = 1; a = 11;
    if (scalar_rdat_vld[30][1][11]) begin
        hls_transform_unit_ex_hls_dup2_xm_linesize_0 <= scalar_rdat  [30][1][11];
    end
    //------READ (scalar, complete partition, global adr = 1148) always block-----//
    //s = 31; r = 1; a = 16;
    if (scalar_rdat_vld[31][1][16]) begin
        hls_transform_unit_ex_hls_dup2_xm_linesize_1 <= scalar_rdat  [31][1][16];
    end
    //------READ (scalar, complete partition, global adr = 1152) always block-----//
    //s = 0; r = 1; a = 25;
    if (scalar_rdat_vld[0][1][25]) begin
        hls_transform_unit_ex_hls_dup2_xm_linesize_2 <= scalar_rdat  [0][1][25];
    end
    //------READ (scalar, global adr = 1140) always block-----//
    //s = 29; r = 0; a = 7;
    if (scalar_rdat_vld[29][0][7]) begin
        hls_transform_unit_ex_hls_dup2_pixel_shift <= scalar_rdat  [29][0][7];
    end
    //------WRITE (scalar, global adr = 160) always block-----//
    //s = 8; r = 1; a = 5;
    hls_transform_unit_ex_hls_dup2_nPbW_ap_vld_r <= hls_transform_unit_ex_hls_dup2_nPbW_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_nPbW_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_nPbW_r <= hls_transform_unit_ex_hls_dup2_nPbW;
    end
    //------WRITE (scalar, global adr = 164) always block-----//
    //s = 9; r = 1; a = 7;
    hls_transform_unit_ex_hls_dup2_nPbH_ap_vld_r <= hls_transform_unit_ex_hls_dup2_nPbH_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_nPbH_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_nPbH_r <= hls_transform_unit_ex_hls_dup2_nPbH;
    end
    //------WRITE (scalar, global adr = 580) always block-----//
    //s = 17; r = 0; a = 2;
    hls_transform_unit_ex_hls_dup2_cand_up_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_up_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_up_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_up_r <= hls_transform_unit_ex_hls_dup2_cand_up;
    end
    //------WRITE (scalar, global adr = 584) always block-----//
    //s = 18; r = 0; a = 2;
    hls_transform_unit_ex_hls_dup2_cand_left_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_left_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_left_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_left_r <= hls_transform_unit_ex_hls_dup2_cand_left;
    end
    //------WRITE (scalar, global adr = 588) always block-----//
    //s = 19; r = 0; a = 2;
    hls_transform_unit_ex_hls_dup2_cand_up_left_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_up_left_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_up_left_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_up_left_r <= hls_transform_unit_ex_hls_dup2_cand_up_left;
    end
    //------WRITE (scalar, global adr = 592) always block-----//
    //s = 20; r = 0; a = 5;
    hls_transform_unit_ex_hls_dup2_cand_up_right_sap_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_up_right_sap_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_up_right_sap_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_up_right_sap_r <= hls_transform_unit_ex_hls_dup2_cand_up_right_sap;
    end
    //------WRITE (scalar, global adr = 596) always block-----//
    //s = 21; r = 0; a = 6;
    hls_transform_unit_ex_hls_dup2_cand_up_right_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_up_right_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_up_right_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_up_right_r <= hls_transform_unit_ex_hls_dup2_cand_up_right;
    end
    //------READ (scalar, global adr = 600) always block-----//
    //s = 22; r = 0; a = 16;
    if (scalar_rdat_vld[22][0][16]) begin
        hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_r <= scalar_rdat  [22][0][16];    //bidir
    end
    //------WRITE (scalar, global adr = 600) always block-----//
    //s = 22; r = 0; a = 6;
    hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_r <= hls_transform_unit_ex_hls_dup2_cand_bottom_left_o;
    end
    //------WRITE (scalar, global adr = 1488) always block-----//
    //s = 20; r = 1; a = 5;
    hls_transform_unit_ex_hls_dup2_cand_up_c_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_up_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_up_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_up_c_r <= hls_transform_unit_ex_hls_dup2_cand_up_c;
    end
    //------WRITE (scalar, global adr = 1492) always block-----//
    //s = 21; r = 1; a = 6;
    hls_transform_unit_ex_hls_dup2_cand_left_c_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_left_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_left_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_left_c_r <= hls_transform_unit_ex_hls_dup2_cand_left_c;
    end
    //------WRITE (scalar, global adr = 1496) always block-----//
    //s = 22; r = 1; a = 6;
    hls_transform_unit_ex_hls_dup2_cand_up_left_c_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_up_left_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_up_left_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_up_left_c_r <= hls_transform_unit_ex_hls_dup2_cand_up_left_c;
    end
    //------WRITE (scalar, global adr = 1500) always block-----//
    //s = 23; r = 0; a = 5;
    hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_r <= hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c;
    end
    //------WRITE (scalar, global adr = 1504) always block-----//
    //s = 24; r = 0; a = 4;
    hls_transform_unit_ex_hls_dup2_cand_up_right_c_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_up_right_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_up_right_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_up_right_c_r <= hls_transform_unit_ex_hls_dup2_cand_up_right_c;
    end
    //------READ (scalar, global adr = 1508) always block-----//
    //s = 25; r = 0; a = 12;
    if (scalar_rdat_vld[25][0][12]) begin
        hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_r <= scalar_rdat  [25][0][12];    //bidir
    end
    //------WRITE (scalar, global adr = 1508) always block-----//
    //s = 25; r = 0; a = 4;
    hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_r <= hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o;
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 18;
    if (scalar_rdat_vld[26][0][18]) begin
        hls_transform_unit_ex_hls_dup2_log2_ctb_size <= scalar_rdat  [26][0][18];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 0; a = 21;
    if (scalar_rdat_vld[23][0][21]) begin
        hls_transform_unit_ex_hls_dup2_ctb_up_flag <= scalar_rdat  [23][0][21];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 0; a = 16;
    if (scalar_rdat_vld[24][0][16]) begin
        hls_transform_unit_ex_hls_dup2_ctb_left_flag <= scalar_rdat  [24][0][16];
    end
    //------READ (scalar, global adr = 612) always block-----//
    //s = 25; r = 1; a = 11;
    if (scalar_rdat_vld[25][1][11]) begin
        hls_transform_unit_ex_hls_dup2_ctb_up_left_flag <= scalar_rdat  [25][1][11];
    end
    //------READ (scalar, global adr = 616) always block-----//
    //s = 26; r = 1; a = 17;
    if (scalar_rdat_vld[26][1][17]) begin
        hls_transform_unit_ex_hls_dup2_ctb_up_right_flag <= scalar_rdat  [26][1][17];
    end
    //------READ (scalar, global adr = 620) always block-----//
    //s = 27; r = 0; a = 11;
    if (scalar_rdat_vld[27][0][11]) begin
        hls_transform_unit_ex_hls_dup2_end_of_tiles_x <= scalar_rdat  [27][0][11];
    end
    //------READ (scalar, global adr = 624) always block-----//
    //s = 28; r = 1; a = 16;
    if (scalar_rdat_vld[28][1][16]) begin
        hls_transform_unit_ex_hls_dup2_end_of_tiles_y <= scalar_rdat  [28][1][16];
    end
    //------READ (scalar, global adr = 472) always block-----//
    //s = 22; r = 1; a = 15;
    if (scalar_rdat_vld[22][1][15]) begin
        hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_r <= scalar_rdat  [22][1][15];    //bidir
    end
    //------WRITE (scalar, global adr = 472) always block-----//
    //s = 22; r = 0; a = 7;
    hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_r <= hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o;
    end
    //------READ (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 20;
    if (scalar_rdat_vld[23][1][20]) begin
        hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_r <= scalar_rdat  [23][1][20];    //bidir
    end
    //------WRITE (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 5;
    hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_r <= hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o;
    end
    //------WRITE (scalar, global adr = 468) always block-----//
    //s = 21; r = 0; a = 7;
    hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_ap_vld_r <= hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_r <= hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta;
    end
    //------WRITE (scalar, global adr = 500) always block-----//
    //s = 29; r = 1; a = 1;
    hls_transform_unit_ex_hls_dup2_tu_cross_pf_ap_vld_r <= hls_transform_unit_ex_hls_dup2_tu_cross_pf_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_tu_cross_pf_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_tu_cross_pf_r <= hls_transform_unit_ex_hls_dup2_tu_cross_pf;
    end
    //------READ (scalar, global adr = 532) always block-----//
    //s = 5; r = 0; a = 14;
    if (scalar_rdat_vld[5][0][14]) begin
        hls_transform_unit_ex_hls_dup2_first_qp_group_o_r <= scalar_rdat  [5][0][14];    //bidir
    end
    //------WRITE (scalar, global adr = 532) always block-----//
    //s = 5; r = 0; a = 6;
    hls_transform_unit_ex_hls_dup2_first_qp_group_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_first_qp_group_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_first_qp_group_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_first_qp_group_o_r <= hls_transform_unit_ex_hls_dup2_first_qp_group_o;
    end
    //------READ (scalar, global adr = 328) always block-----//
    //s = 18; r = 1; a = 9;
    if (scalar_rdat_vld[18][1][9]) begin
        hls_transform_unit_ex_hls_dup2_chroma_format_idc <= scalar_rdat  [18][1][9];
    end
    //------READ (scalar, global adr = 448) always block-----//
    //s = 16; r = 1; a = 13;
    if (scalar_rdat_vld[16][1][13]) begin
        hls_transform_unit_ex_hls_dup2_cu_chroma_qp_offset_enabled_flag <= scalar_rdat  [16][1][13];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 0; a = 17;
    if (scalar_rdat_vld[11][0][17]) begin
        hls_transform_unit_ex_hls_dup2_cu_qp_delta_enabled_flag <= scalar_rdat  [11][0][17];
    end
    //------READ (scalar, global adr = 540) always block-----//
    //s = 7; r = 1; a = 14;
    if (scalar_rdat_vld[7][1][14]) begin
        hls_transform_unit_ex_hls_dup2_qPy_pred <= scalar_rdat  [7][1][14];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 0; a = 24;
    if (scalar_rdat_vld[13][0][24]) begin
        hls_transform_unit_ex_hls_dup2_diff_cu_qp_delta_depth <= scalar_rdat  [13][0][24];
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 0; a = 17;
    if (scalar_rdat_vld[28][0][17]) begin
        hls_transform_unit_ex_hls_dup2_log2_min_cb_size <= scalar_rdat  [28][0][17];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 1; a = 15;
    if (scalar_rdat_vld[2][1][15]) begin
        hls_transform_unit_ex_hls_dup2_min_cb_width <= scalar_rdat  [2][1][15];
    end
    //------READ (scalar, global adr = 460) always block-----//
    //s = 19; r = 1; a = 8;
    if (scalar_rdat_vld[19][1][8]) begin
        hls_transform_unit_ex_hls_dup2_slice_qp <= scalar_rdat  [19][1][8];
    end
`endif
    //============================================================
    //hls_transform_unit_ex_hls_dup3       (f = 9)
    //============================================================
`ifdef enable_connect_hls_transform_unit_ex_hls_dup3
    //------READ (scalar, global adr = 20) always block-----//
    //s = 5; r = 1; a = 13;
    if (scalar_rdat_vld[5][1][13]) begin
        hls_transform_unit_ex_hls_dup3_cbf_luma <= scalar_rdat  [5][1][13];
    end
    //------READ (scalar, global adr = 16) always block-----//
    //s = 4; r = 1; a = 8;
    if (scalar_rdat_vld[4][1][8]) begin
        hls_transform_unit_ex_hls_dup3_cbf_data <= scalar_rdat  [4][1][8];
    end
    //------READ (scalar, global adr = 1260) always block-----//
    //s = 27; r = 1; a = 10;
    if (scalar_rdat_vld[27][1][10]) begin
        hls_transform_unit_ex_hls_dup3_dc_min_tb_addr_zs_p <= scalar_rdat  [27][1][10];
    end
    //------READ (scalar, global adr = 1156) always block-----//
    //s = 1; r = 1; a = 16;
    if (scalar_rdat_vld[1][1][16]) begin
        hls_transform_unit_ex_hls_dup3_chroma_qp_offset_list_len_minus1 <= scalar_rdat  [1][1][16];
    end
    //------READ (scalar, global adr = 1264) always block-----//
    //s = 28; r = 1; a = 17;
    if (scalar_rdat_vld[28][1][17]) begin
        hls_transform_unit_ex_hls_dup3_dc_cb_qp_offset_list_p <= scalar_rdat  [28][1][17];
    end
    //------READ (scalar, global adr = 1268) always block-----//
    //s = 29; r = 1; a = 6;
    if (scalar_rdat_vld[29][1][6]) begin
        hls_transform_unit_ex_hls_dup3_dc_cr_qp_offset_list_p <= scalar_rdat  [29][1][6];
    end
    //------READ (scalar, global adr = 1132) always block-----//
    //s = 27; r = 0; a = 12;
    if (scalar_rdat_vld[27][0][12]) begin
        hls_transform_unit_ex_hls_dup3_qp_bd_offset <= scalar_rdat  [27][0][12];
    end
    //------READ (scalar, global adr = 1272) always block-----//
    //s = 30; r = 0; a = 12;
    if (scalar_rdat_vld[30][0][12]) begin
        hls_transform_unit_ex_hls_dup3_dc_qp_y_tab_p <= scalar_rdat  [30][0][12];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 21;
    if (scalar_rdat_vld[12][0][21]) begin
        hls_transform_unit_ex_hls_dup3_pred_mode <= scalar_rdat  [12][0][21];
    end
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 1; a = 12;
    if (scalar_rdat_vld[20][1][12]) begin
        hls_transform_unit_ex_hls_dup3_hshift_0 <= scalar_rdat  [20][1][12];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 1; a = 17;
    if (scalar_rdat_vld[21][1][17]) begin
        hls_transform_unit_ex_hls_dup3_hshift_1 <= scalar_rdat  [21][1][17];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 0; a = 17;
    if (scalar_rdat_vld[22][0][17]) begin
        hls_transform_unit_ex_hls_dup3_hshift_2 <= scalar_rdat  [22][0][17];
    end
    //------READ (scalar, complete partition, global adr = 348) always block-----//
    //s = 23; r = 0; a = 22;
    if (scalar_rdat_vld[23][0][22]) begin
        hls_transform_unit_ex_hls_dup3_vshift_0 <= scalar_rdat  [23][0][22];
    end
    //------READ (scalar, complete partition, global adr = 352) always block-----//
    //s = 24; r = 1; a = 15;
    if (scalar_rdat_vld[24][1][15]) begin
        hls_transform_unit_ex_hls_dup3_vshift_1 <= scalar_rdat  [24][1][15];
    end
    //------READ (scalar, complete partition, global adr = 356) always block-----//
    //s = 25; r = 0; a = 13;
    if (scalar_rdat_vld[25][0][13]) begin
        hls_transform_unit_ex_hls_dup3_vshift_2 <= scalar_rdat  [25][0][13];
    end
    //------READ (scalar, global adr = 484) always block-----//
    //s = 25; r = 1; a = 12;
    if (scalar_rdat_vld[25][1][12]) begin
        hls_transform_unit_ex_hls_dup3_tu_intra_pred_mode <= scalar_rdat  [25][1][12];
    end
    //------READ (scalar, global adr = 488) always block-----//
    //s = 26; r = 0; a = 19;
    if (scalar_rdat_vld[26][0][19]) begin
        hls_transform_unit_ex_hls_dup3_tu_intra_pred_mode_c <= scalar_rdat  [26][0][19];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 15;
    if (scalar_rdat_vld[15][1][15]) begin
        hls_transform_unit_ex_hls_dup3_cu_transquant_bypass_flag <= scalar_rdat  [15][1][15];
    end
    //------WRITE (scalar, global adr = 492) always block-----//
    //s = 27; r = 1; a = 2;
    hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_ap_vld_r <= hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_r <= hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb;
    end
    //------WRITE (scalar, global adr = 496) always block-----//
    //s = 28; r = 1; a = 4;
    hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_ap_vld_r <= hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_r <= hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr;
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 0; a = 16;
    if (scalar_rdat_vld[6][0][16]) begin
        hls_transform_unit_ex_hls_dup3_qp_y_o_r <= scalar_rdat  [6][0][16];    //bidir
    end
    //------WRITE (scalar, global adr = 536) always block-----//
    //s = 6; r = 0; a = 6;
    hls_transform_unit_ex_hls_dup3_qp_y_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_qp_y_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_qp_y_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_qp_y_o_r <= hls_transform_unit_ex_hls_dup3_qp_y_o;
    end
    //------WRITE (scalar, global adr = 168) always block-----//
    //s = 10; r = 1; a = 7;
    hls_transform_unit_ex_hls_dup3_log2_trafo_size_ap_vld_r <= hls_transform_unit_ex_hls_dup3_log2_trafo_size_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_log2_trafo_size_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_log2_trafo_size_r <= hls_transform_unit_ex_hls_dup3_log2_trafo_size;
    end
    //------READ (scalar, global adr = 56) always block-----//
    //s = 14; r = 0; a = 22;
    if (scalar_rdat_vld[14][0][22]) begin
        hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_r <= scalar_rdat  [14][0][22];    //bidir
    end
    //------WRITE (scalar, global adr = 56) always block-----//
    //s = 14; r = 0; a = 6;
    hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_r <= hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o;
    end
    //------READ (scalar, global adr = 48) always block-----//
    //s = 12; r = 1; a = 20;
    if (scalar_rdat_vld[12][1][20]) begin
        hls_transform_unit_ex_hls_dup3_scan_idx_o_r <= scalar_rdat  [12][1][20];    //bidir
    end
    //------WRITE (scalar, global adr = 48) always block-----//
    //s = 12; r = 1; a = 5;
    hls_transform_unit_ex_hls_dup3_scan_idx_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_scan_idx_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_scan_idx_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_scan_idx_o_r <= hls_transform_unit_ex_hls_dup3_scan_idx_o;
    end
    //------WRITE (scalar, global adr = 52) always block-----//
    //s = 13; r = 0; a = 6;
    hls_transform_unit_ex_hls_dup3_scan_idx_c_ap_vld_r <= hls_transform_unit_ex_hls_dup3_scan_idx_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_scan_idx_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_scan_idx_c_r <= hls_transform_unit_ex_hls_dup3_scan_idx_c;
    end
    //------READ (scalar, global adr = 1136) always block-----//
    //s = 28; r = 0; a = 18;
    if (scalar_rdat_vld[28][0][18]) begin
        hls_transform_unit_ex_hls_dup3_cmdr_run_o_r <= scalar_rdat  [28][0][18];    //bidir
    end
    //------WRITE (scalar, global adr = 1136) always block-----//
    //s = 28; r = 0; a = 5;
    hls_transform_unit_ex_hls_dup3_cmdr_run_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cmdr_run_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cmdr_run_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cmdr_run_o_r <= hls_transform_unit_ex_hls_dup3_cmdr_run_o;
    end
    //------READ (scalar, complete partition, global adr = 1240) always block-----//
    //s = 22; r = 1; a = 16;
    if (scalar_rdat_vld[22][1][16]) begin
        hls_transform_unit_ex_hls_dup3_buf_data_0 <= scalar_rdat  [22][1][16];
    end
    //------READ (scalar, complete partition, global adr = 1244) always block-----//
    //s = 23; r = 1; a = 21;
    if (scalar_rdat_vld[23][1][21]) begin
        hls_transform_unit_ex_hls_dup3_buf_data_1 <= scalar_rdat  [23][1][21];
    end
    //------READ (scalar, complete partition, global adr = 1248) always block-----//
    //s = 24; r = 0; a = 17;
    if (scalar_rdat_vld[24][0][17]) begin
        hls_transform_unit_ex_hls_dup3_buf_data_2 <= scalar_rdat  [24][0][17];
    end
    //------READ (scalar, complete partition, global adr = 1144) always block-----//
    //s = 30; r = 1; a = 12;
    if (scalar_rdat_vld[30][1][12]) begin
        hls_transform_unit_ex_hls_dup3_xm_linesize_0 <= scalar_rdat  [30][1][12];
    end
    //------READ (scalar, complete partition, global adr = 1148) always block-----//
    //s = 31; r = 0; a = 18;
    if (scalar_rdat_vld[31][0][18]) begin
        hls_transform_unit_ex_hls_dup3_xm_linesize_1 <= scalar_rdat  [31][0][18];
    end
    //------READ (scalar, complete partition, global adr = 1152) always block-----//
    //s = 0; r = 0; a = 27;
    if (scalar_rdat_vld[0][0][27]) begin
        hls_transform_unit_ex_hls_dup3_xm_linesize_2 <= scalar_rdat  [0][0][27];
    end
    //------READ (scalar, global adr = 1140) always block-----//
    //s = 29; r = 0; a = 8;
    if (scalar_rdat_vld[29][0][8]) begin
        hls_transform_unit_ex_hls_dup3_pixel_shift <= scalar_rdat  [29][0][8];
    end
    //------WRITE (scalar, global adr = 160) always block-----//
    //s = 8; r = 0; a = 6;
    hls_transform_unit_ex_hls_dup3_nPbW_ap_vld_r <= hls_transform_unit_ex_hls_dup3_nPbW_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_nPbW_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_nPbW_r <= hls_transform_unit_ex_hls_dup3_nPbW;
    end
    //------WRITE (scalar, global adr = 164) always block-----//
    //s = 9; r = 0; a = 8;
    hls_transform_unit_ex_hls_dup3_nPbH_ap_vld_r <= hls_transform_unit_ex_hls_dup3_nPbH_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_nPbH_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_nPbH_r <= hls_transform_unit_ex_hls_dup3_nPbH;
    end
    //------WRITE (scalar, global adr = 580) always block-----//
    //s = 17; r = 1; a = 2;
    hls_transform_unit_ex_hls_dup3_cand_up_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_up_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_up_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_up_r <= hls_transform_unit_ex_hls_dup3_cand_up;
    end
    //------WRITE (scalar, global adr = 584) always block-----//
    //s = 18; r = 1; a = 2;
    hls_transform_unit_ex_hls_dup3_cand_left_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_left_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_left_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_left_r <= hls_transform_unit_ex_hls_dup3_cand_left;
    end
    //------WRITE (scalar, global adr = 588) always block-----//
    //s = 19; r = 1; a = 2;
    hls_transform_unit_ex_hls_dup3_cand_up_left_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_up_left_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_up_left_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_up_left_r <= hls_transform_unit_ex_hls_dup3_cand_up_left;
    end
    //------WRITE (scalar, global adr = 592) always block-----//
    //s = 20; r = 0; a = 6;
    hls_transform_unit_ex_hls_dup3_cand_up_right_sap_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_up_right_sap_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_up_right_sap_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_up_right_sap_r <= hls_transform_unit_ex_hls_dup3_cand_up_right_sap;
    end
    //------WRITE (scalar, global adr = 596) always block-----//
    //s = 21; r = 1; a = 7;
    hls_transform_unit_ex_hls_dup3_cand_up_right_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_up_right_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_up_right_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_up_right_r <= hls_transform_unit_ex_hls_dup3_cand_up_right;
    end
    //------READ (scalar, global adr = 600) always block-----//
    //s = 22; r = 0; a = 18;
    if (scalar_rdat_vld[22][0][18]) begin
        hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_r <= scalar_rdat  [22][0][18];    //bidir
    end
    //------WRITE (scalar, global adr = 600) always block-----//
    //s = 22; r = 1; a = 7;
    hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_r <= hls_transform_unit_ex_hls_dup3_cand_bottom_left_o;
    end
    //------WRITE (scalar, global adr = 1488) always block-----//
    //s = 20; r = 1; a = 6;
    hls_transform_unit_ex_hls_dup3_cand_up_c_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_up_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_up_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_up_c_r <= hls_transform_unit_ex_hls_dup3_cand_up_c;
    end
    //------WRITE (scalar, global adr = 1492) always block-----//
    //s = 21; r = 0; a = 8;
    hls_transform_unit_ex_hls_dup3_cand_left_c_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_left_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_left_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_left_c_r <= hls_transform_unit_ex_hls_dup3_cand_left_c;
    end
    //------WRITE (scalar, global adr = 1496) always block-----//
    //s = 22; r = 0; a = 8;
    hls_transform_unit_ex_hls_dup3_cand_up_left_c_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_up_left_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_up_left_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_up_left_c_r <= hls_transform_unit_ex_hls_dup3_cand_up_left_c;
    end
    //------WRITE (scalar, global adr = 1500) always block-----//
    //s = 23; r = 0; a = 6;
    hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_r <= hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c;
    end
    //------WRITE (scalar, global adr = 1504) always block-----//
    //s = 24; r = 1; a = 4;
    hls_transform_unit_ex_hls_dup3_cand_up_right_c_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_up_right_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_up_right_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_up_right_c_r <= hls_transform_unit_ex_hls_dup3_cand_up_right_c;
    end
    //------READ (scalar, global adr = 1508) always block-----//
    //s = 25; r = 0; a = 14;
    if (scalar_rdat_vld[25][0][14]) begin
        hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_r <= scalar_rdat  [25][0][14];    //bidir
    end
    //------WRITE (scalar, global adr = 1508) always block-----//
    //s = 25; r = 1; a = 4;
    hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_r <= hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o;
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 18;
    if (scalar_rdat_vld[26][1][18]) begin
        hls_transform_unit_ex_hls_dup3_log2_ctb_size <= scalar_rdat  [26][1][18];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 0; a = 23;
    if (scalar_rdat_vld[23][0][23]) begin
        hls_transform_unit_ex_hls_dup3_ctb_up_flag <= scalar_rdat  [23][0][23];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 16;
    if (scalar_rdat_vld[24][1][16]) begin
        hls_transform_unit_ex_hls_dup3_ctb_left_flag <= scalar_rdat  [24][1][16];
    end
    //------READ (scalar, global adr = 612) always block-----//
    //s = 25; r = 1; a = 13;
    if (scalar_rdat_vld[25][1][13]) begin
        hls_transform_unit_ex_hls_dup3_ctb_up_left_flag <= scalar_rdat  [25][1][13];
    end
    //------READ (scalar, global adr = 616) always block-----//
    //s = 26; r = 0; a = 20;
    if (scalar_rdat_vld[26][0][20]) begin
        hls_transform_unit_ex_hls_dup3_ctb_up_right_flag <= scalar_rdat  [26][0][20];
    end
    //------READ (scalar, global adr = 620) always block-----//
    //s = 27; r = 1; a = 11;
    if (scalar_rdat_vld[27][1][11]) begin
        hls_transform_unit_ex_hls_dup3_end_of_tiles_x <= scalar_rdat  [27][1][11];
    end
    //------READ (scalar, global adr = 624) always block-----//
    //s = 28; r = 1; a = 18;
    if (scalar_rdat_vld[28][1][18]) begin
        hls_transform_unit_ex_hls_dup3_end_of_tiles_y <= scalar_rdat  [28][1][18];
    end
    //------READ (scalar, global adr = 472) always block-----//
    //s = 22; r = 1; a = 17;
    if (scalar_rdat_vld[22][1][17]) begin
        hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_r <= scalar_rdat  [22][1][17];    //bidir
    end
    //------WRITE (scalar, global adr = 472) always block-----//
    //s = 22; r = 1; a = 8;
    hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_r <= hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o;
    end
    //------READ (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 22;
    if (scalar_rdat_vld[23][1][22]) begin
        hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_r <= scalar_rdat  [23][1][22];    //bidir
    end
    //------WRITE (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 6;
    hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_r <= hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o;
    end
    //------WRITE (scalar, global adr = 468) always block-----//
    //s = 21; r = 1; a = 8;
    hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_ap_vld_r <= hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_r <= hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta;
    end
    //------WRITE (scalar, global adr = 500) always block-----//
    //s = 29; r = 0; a = 2;
    hls_transform_unit_ex_hls_dup3_tu_cross_pf_ap_vld_r <= hls_transform_unit_ex_hls_dup3_tu_cross_pf_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_tu_cross_pf_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_tu_cross_pf_r <= hls_transform_unit_ex_hls_dup3_tu_cross_pf;
    end
    //------READ (scalar, global adr = 532) always block-----//
    //s = 5; r = 0; a = 15;
    if (scalar_rdat_vld[5][0][15]) begin
        hls_transform_unit_ex_hls_dup3_first_qp_group_o_r <= scalar_rdat  [5][0][15];    //bidir
    end
    //------WRITE (scalar, global adr = 532) always block-----//
    //s = 5; r = 1; a = 6;
    hls_transform_unit_ex_hls_dup3_first_qp_group_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_first_qp_group_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_first_qp_group_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_first_qp_group_o_r <= hls_transform_unit_ex_hls_dup3_first_qp_group_o;
    end
    //------READ (scalar, global adr = 328) always block-----//
    //s = 18; r = 0; a = 10;
    if (scalar_rdat_vld[18][0][10]) begin
        hls_transform_unit_ex_hls_dup3_chroma_format_idc <= scalar_rdat  [18][0][10];
    end
    //------READ (scalar, global adr = 448) always block-----//
    //s = 16; r = 0; a = 14;
    if (scalar_rdat_vld[16][0][14]) begin
        hls_transform_unit_ex_hls_dup3_cu_chroma_qp_offset_enabled_flag <= scalar_rdat  [16][0][14];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 1; a = 16;
    if (scalar_rdat_vld[11][1][16]) begin
        hls_transform_unit_ex_hls_dup3_cu_qp_delta_enabled_flag <= scalar_rdat  [11][1][16];
    end
    //------READ (scalar, global adr = 540) always block-----//
    //s = 7; r = 0; a = 16;
    if (scalar_rdat_vld[7][0][16]) begin
        hls_transform_unit_ex_hls_dup3_qPy_pred <= scalar_rdat  [7][0][16];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 1; a = 23;
    if (scalar_rdat_vld[13][1][23]) begin
        hls_transform_unit_ex_hls_dup3_diff_cu_qp_delta_depth <= scalar_rdat  [13][1][23];
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 0; a = 19;
    if (scalar_rdat_vld[28][0][19]) begin
        hls_transform_unit_ex_hls_dup3_log2_min_cb_size <= scalar_rdat  [28][0][19];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 0; a = 17;
    if (scalar_rdat_vld[2][0][17]) begin
        hls_transform_unit_ex_hls_dup3_min_cb_width <= scalar_rdat  [2][0][17];
    end
    //------READ (scalar, global adr = 460) always block-----//
    //s = 19; r = 0; a = 9;
    if (scalar_rdat_vld[19][0][9]) begin
        hls_transform_unit_ex_hls_dup3_slice_qp <= scalar_rdat  [19][0][9];
    end
`endif
    //============================================================
    //hls_transform_tree_hls       (f = 10)
    //============================================================
`ifdef enable_connect_hls_transform_tree_hls
    //------WRITE (scalar, global adr = 168) always block-----//
    //s = 10; r = 0; a = 4;
    hls_transform_tree_hls_log2_trafo_size_ap_vld_r <= hls_transform_tree_hls_log2_trafo_size_ap_vld;
    if (hls_transform_tree_hls_log2_trafo_size_ap_vld) begin
        hls_transform_tree_hls_log2_trafo_size_r <= hls_transform_tree_hls_log2_trafo_size;
    end
    //------WRITE (scalar, global adr = 12) always block-----//
    //s = 3; r = 0; a = 2;
    hls_transform_tree_hls_split_transform_flag_ap_vld_r <= hls_transform_tree_hls_split_transform_flag_ap_vld;
    if (hls_transform_tree_hls_split_transform_flag_ap_vld) begin
        hls_transform_tree_hls_split_transform_flag_r <= hls_transform_tree_hls_split_transform_flag;
    end
    //------WRITE (scalar, global adr = 16) always block-----//
    //s = 4; r = 0; a = 2;
    hls_transform_tree_hls_cbf_data_ap_vld_r <= hls_transform_tree_hls_cbf_data_ap_vld;
    if (hls_transform_tree_hls_cbf_data_ap_vld) begin
        hls_transform_tree_hls_cbf_data_r <= hls_transform_tree_hls_cbf_data;
    end
    //------READ (scalar, global adr = 1160) always block-----//
    //s = 2; r = 1; a = 12;
    if (scalar_rdat_vld[2][1][12]) begin
        hls_transform_tree_hls_disable_deblocking_filter_flag <= scalar_rdat  [2][1][12];
    end
    //------READ (scalar, global adr = 440) always block-----//
    //s = 14; r = 1; a = 13;
    if (scalar_rdat_vld[14][1][13]) begin
        hls_transform_tree_hls_transquant_bypass_enable_flag <= scalar_rdat  [14][1][13];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 0; a = 13;
    if (scalar_rdat_vld[15][0][13]) begin
        hls_transform_tree_hls_cu_transquant_bypass_flag <= scalar_rdat  [15][0][13];
    end
    //------WRITE (scalar, global adr = 480) always block-----//
    //s = 24; r = 0; a = 1;
    hls_transform_tree_hls_tu_chroma_mode_c_ap_vld_r <= hls_transform_tree_hls_tu_chroma_mode_c_ap_vld;
    if (hls_transform_tree_hls_tu_chroma_mode_c_ap_vld) begin
        hls_transform_tree_hls_tu_chroma_mode_c_r <= hls_transform_tree_hls_tu_chroma_mode_c;
    end
    //------WRITE (scalar, global adr = 484) always block-----//
    //s = 25; r = 0; a = 1;
    hls_transform_tree_hls_tu_intra_pred_mode_ap_vld_r <= hls_transform_tree_hls_tu_intra_pred_mode_ap_vld;
    if (hls_transform_tree_hls_tu_intra_pred_mode_ap_vld) begin
        hls_transform_tree_hls_tu_intra_pred_mode_r <= hls_transform_tree_hls_tu_intra_pred_mode;
    end
    //------WRITE (scalar, global adr = 488) always block-----//
    //s = 26; r = 0; a = 1;
    hls_transform_tree_hls_tu_intra_pred_mode_c_ap_vld_r <= hls_transform_tree_hls_tu_intra_pred_mode_c_ap_vld;
    if (hls_transform_tree_hls_tu_intra_pred_mode_c_ap_vld) begin
        hls_transform_tree_hls_tu_intra_pred_mode_c_r <= hls_transform_tree_hls_tu_intra_pred_mode_c;
    end
    //------READ (scalar, complete partition, global adr = 508) always block-----//
    //s = 31; r = 1; a = 5;
    if (scalar_rdat_vld[31][1][5]) begin
        hls_transform_tree_hls_pu_chroma_mode_c_0 <= scalar_rdat  [31][1][5];
    end
    //------READ (scalar, complete partition, global adr = 509) always block-----//
    //s = 31; r = 0; a = 7;
    if (scalar_rdat_vld[31][0][7]) begin
        hls_transform_tree_hls_pu_chroma_mode_c_1 <= scalar_rdat  [31][0][7];
    end
    //------READ (scalar, complete partition, global adr = 510) always block-----//
    //s = 31; r = 1; a = 6;
    if (scalar_rdat_vld[31][1][6]) begin
        hls_transform_tree_hls_pu_chroma_mode_c_2 <= scalar_rdat  [31][1][6];
    end
    //------READ (scalar, complete partition, global adr = 511) always block-----//
    //s = 31; r = 0; a = 8;
    if (scalar_rdat_vld[31][0][8]) begin
        hls_transform_tree_hls_pu_chroma_mode_c_3 <= scalar_rdat  [31][0][8];
    end
    //------READ (scalar, complete partition, global adr = 512) always block-----//
    //s = 0; r = 1; a = 16;
    if (scalar_rdat_vld[0][1][16]) begin
        hls_transform_tree_hls_pu_intra_pred_mode_0 <= scalar_rdat  [0][1][16];
    end
    //------READ (scalar, complete partition, global adr = 513) always block-----//
    //s = 0; r = 0; a = 18;
    if (scalar_rdat_vld[0][0][18]) begin
        hls_transform_tree_hls_pu_intra_pred_mode_1 <= scalar_rdat  [0][0][18];
    end
    //------READ (scalar, complete partition, global adr = 514) always block-----//
    //s = 0; r = 1; a = 17;
    if (scalar_rdat_vld[0][1][17]) begin
        hls_transform_tree_hls_pu_intra_pred_mode_2 <= scalar_rdat  [0][1][17];
    end
    //------READ (scalar, complete partition, global adr = 515) always block-----//
    //s = 0; r = 0; a = 19;
    if (scalar_rdat_vld[0][0][19]) begin
        hls_transform_tree_hls_pu_intra_pred_mode_3 <= scalar_rdat  [0][0][19];
    end
    //------READ (scalar, complete partition, global adr = 516) always block-----//
    //s = 1; r = 0; a = 6;
    if (scalar_rdat_vld[1][0][6]) begin
        hls_transform_tree_hls_pu_intra_pred_mode_c_0 <= scalar_rdat  [1][0][6];
    end
    //------READ (scalar, complete partition, global adr = 517) always block-----//
    //s = 1; r = 1; a = 5;
    if (scalar_rdat_vld[1][1][5]) begin
        hls_transform_tree_hls_pu_intra_pred_mode_c_1 <= scalar_rdat  [1][1][5];
    end
    //------READ (scalar, complete partition, global adr = 518) always block-----//
    //s = 1; r = 0; a = 7;
    if (scalar_rdat_vld[1][0][7]) begin
        hls_transform_tree_hls_pu_intra_pred_mode_c_2 <= scalar_rdat  [1][0][7];
    end
    //------READ (scalar, complete partition, global adr = 519) always block-----//
    //s = 1; r = 1; a = 6;
    if (scalar_rdat_vld[1][1][6]) begin
        hls_transform_tree_hls_pu_intra_pred_mode_c_3 <= scalar_rdat  [1][1][6];
    end
    //------READ (scalar, global adr = 568) always block-----//
    //s = 14; r = 0; a = 15;
    if (scalar_rdat_vld[14][0][15]) begin
        hls_transform_tree_hls_intra_split_flag <= scalar_rdat  [14][0][15];
    end
    //------READ (scalar, global adr = 364) always block-----//
    //s = 27; r = 0; a = 5;
    if (scalar_rdat_vld[27][0][5]) begin
        hls_transform_tree_hls_log2_max_trafo_size <= scalar_rdat  [27][0][5];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 0; a = 7;
    if (scalar_rdat_vld[30][0][7]) begin
        hls_transform_tree_hls_log2_min_tb_size <= scalar_rdat  [30][0][7];
    end
    //------READ (scalar, global adr = 576) always block-----//
    //s = 16; r = 1; a = 10;
    if (scalar_rdat_vld[16][1][10]) begin
        hls_transform_tree_hls_max_trafo_depth <= scalar_rdat  [16][1][10];
    end
    //------READ (scalar, global adr = 380) always block-----//
    //s = 31; r = 1; a = 7;
    if (scalar_rdat_vld[31][1][7]) begin
        hls_transform_tree_hls_max_transform_hierarchy_depth_inter <= scalar_rdat  [31][1][7];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 14;
    if (scalar_rdat_vld[12][0][14]) begin
        hls_transform_tree_hls_pred_mode <= scalar_rdat  [12][0][14];
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 0; a = 19;
    if (scalar_rdat_vld[13][0][19]) begin
        hls_transform_tree_hls_part_mode <= scalar_rdat  [13][0][19];
    end
    //------READ (scalar, global adr = 324) always block-----//
    //s = 17; r = 1; a = 8;
    if (scalar_rdat_vld[17][1][8]) begin
        hls_transform_tree_hls_chroma_array_type <= scalar_rdat  [17][1][8];
    end
    //------READ (scalar, global adr = 328) always block-----//
    //s = 18; r = 1; a = 6;
    if (scalar_rdat_vld[18][1][6]) begin
        hls_transform_tree_hls_chroma_format_idc <= scalar_rdat  [18][1][6];
    end
    //------READ (scalar, global adr = 20) always block-----//
    //s = 5; r = 1; a = 8;
    if (scalar_rdat_vld[5][1][8]) begin
        hls_transform_tree_hls_cbf_luma_o_r <= scalar_rdat  [5][1][8];    //bidir
    end
    //------WRITE (scalar, global adr = 20) always block-----//
    //s = 5; r = 0; a = 3;
    hls_transform_tree_hls_cbf_luma_o_ap_vld_r <= hls_transform_tree_hls_cbf_luma_o_ap_vld;
    if (hls_transform_tree_hls_cbf_luma_o_ap_vld) begin
        hls_transform_tree_hls_cbf_luma_o_r <= hls_transform_tree_hls_cbf_luma_o;
    end
    //------READ (scalar, global adr = 1328) always block-----//
    //s = 12; r = 1; a = 13;
    if (scalar_rdat_vld[12][1][13]) begin
        hls_transform_tree_hls_rv_hls_transform_unit <= scalar_rdat  [12][1][13];
    end
    //------READ (scalar, global adr = 1332) always block-----//
    //s = 13; r = 1; a = 18;
    if (scalar_rdat_vld[13][1][18]) begin
        hls_transform_tree_hls_rv_ff_hevc_deblocking_boundary_strengths <= scalar_rdat  [13][1][18];
    end
    //------READ (scalar, global adr = 1336) always block-----//
    //s = 14; r = 1; a = 14;
    if (scalar_rdat_vld[14][1][14]) begin
        hls_transform_tree_hls_rv_set_deblocking_bypass <= scalar_rdat  [14][1][14];
    end
    //------READ (scalar, global adr = 1236) always block-----//
    //s = 21; r = 0; a = 15;
    if (scalar_rdat_vld[21][0][15]) begin
        hls_transform_tree_hls_rv_callback_flag <= scalar_rdat  [21][0][15];
    end
    //------READ (scalar, global adr = 388) always block-----//
    //s = 1; r = 0; a = 8;
    if (scalar_rdat_vld[1][0][8]) begin
        hls_transform_tree_hls_min_tb_width <= scalar_rdat  [1][0][8];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 11;
    if (scalar_rdat_vld[26][1][11]) begin
        hls_transform_tree_hls_log2_ctb_size <= scalar_rdat  [26][1][11];
    end
`endif
    //============================================================
    //hls_transform_tree_hls_dup1       (f = 11)
    //============================================================
`ifdef enable_connect_hls_transform_tree_hls_dup1
    //------WRITE (scalar, global adr = 168) always block-----//
    //s = 10; r = 1; a = 4;
    hls_transform_tree_hls_dup1_log2_trafo_size_ap_vld_r <= hls_transform_tree_hls_dup1_log2_trafo_size_ap_vld;
    if (hls_transform_tree_hls_dup1_log2_trafo_size_ap_vld) begin
        hls_transform_tree_hls_dup1_log2_trafo_size_r <= hls_transform_tree_hls_dup1_log2_trafo_size;
    end
    //------WRITE (scalar, global adr = 12) always block-----//
    //s = 3; r = 1; a = 2;
    hls_transform_tree_hls_dup1_split_transform_flag_ap_vld_r <= hls_transform_tree_hls_dup1_split_transform_flag_ap_vld;
    if (hls_transform_tree_hls_dup1_split_transform_flag_ap_vld) begin
        hls_transform_tree_hls_dup1_split_transform_flag_r <= hls_transform_tree_hls_dup1_split_transform_flag;
    end
    //------WRITE (scalar, global adr = 16) always block-----//
    //s = 4; r = 1; a = 2;
    hls_transform_tree_hls_dup1_cbf_data_ap_vld_r <= hls_transform_tree_hls_dup1_cbf_data_ap_vld;
    if (hls_transform_tree_hls_dup1_cbf_data_ap_vld) begin
        hls_transform_tree_hls_dup1_cbf_data_r <= hls_transform_tree_hls_dup1_cbf_data;
    end
    //------READ (scalar, global adr = 1160) always block-----//
    //s = 2; r = 0; a = 14;
    if (scalar_rdat_vld[2][0][14]) begin
        hls_transform_tree_hls_dup1_disable_deblocking_filter_flag <= scalar_rdat  [2][0][14];
    end
    //------READ (scalar, global adr = 440) always block-----//
    //s = 14; r = 0; a = 16;
    if (scalar_rdat_vld[14][0][16]) begin
        hls_transform_tree_hls_dup1_transquant_bypass_enable_flag <= scalar_rdat  [14][0][16];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 12;
    if (scalar_rdat_vld[15][1][12]) begin
        hls_transform_tree_hls_dup1_cu_transquant_bypass_flag <= scalar_rdat  [15][1][12];
    end
    //------WRITE (scalar, global adr = 480) always block-----//
    //s = 24; r = 1; a = 1;
    hls_transform_tree_hls_dup1_tu_chroma_mode_c_ap_vld_r <= hls_transform_tree_hls_dup1_tu_chroma_mode_c_ap_vld;
    if (hls_transform_tree_hls_dup1_tu_chroma_mode_c_ap_vld) begin
        hls_transform_tree_hls_dup1_tu_chroma_mode_c_r <= hls_transform_tree_hls_dup1_tu_chroma_mode_c;
    end
    //------WRITE (scalar, global adr = 484) always block-----//
    //s = 25; r = 1; a = 1;
    hls_transform_tree_hls_dup1_tu_intra_pred_mode_ap_vld_r <= hls_transform_tree_hls_dup1_tu_intra_pred_mode_ap_vld;
    if (hls_transform_tree_hls_dup1_tu_intra_pred_mode_ap_vld) begin
        hls_transform_tree_hls_dup1_tu_intra_pred_mode_r <= hls_transform_tree_hls_dup1_tu_intra_pred_mode;
    end
    //------WRITE (scalar, global adr = 488) always block-----//
    //s = 26; r = 1; a = 1;
    hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_ap_vld_r <= hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_ap_vld;
    if (hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_ap_vld) begin
        hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_r <= hls_transform_tree_hls_dup1_tu_intra_pred_mode_c;
    end
    //------READ (scalar, complete partition, global adr = 508) always block-----//
    //s = 31; r = 0; a = 9;
    if (scalar_rdat_vld[31][0][9]) begin
        hls_transform_tree_hls_dup1_pu_chroma_mode_c_0 <= scalar_rdat  [31][0][9];
    end
    //------READ (scalar, complete partition, global adr = 509) always block-----//
    //s = 31; r = 1; a = 8;
    if (scalar_rdat_vld[31][1][8]) begin
        hls_transform_tree_hls_dup1_pu_chroma_mode_c_1 <= scalar_rdat  [31][1][8];
    end
    //------READ (scalar, complete partition, global adr = 510) always block-----//
    //s = 31; r = 0; a = 10;
    if (scalar_rdat_vld[31][0][10]) begin
        hls_transform_tree_hls_dup1_pu_chroma_mode_c_2 <= scalar_rdat  [31][0][10];
    end
    //------READ (scalar, complete partition, global adr = 511) always block-----//
    //s = 31; r = 1; a = 9;
    if (scalar_rdat_vld[31][1][9]) begin
        hls_transform_tree_hls_dup1_pu_chroma_mode_c_3 <= scalar_rdat  [31][1][9];
    end
    //------READ (scalar, complete partition, global adr = 512) always block-----//
    //s = 0; r = 1; a = 18;
    if (scalar_rdat_vld[0][1][18]) begin
        hls_transform_tree_hls_dup1_pu_intra_pred_mode_0 <= scalar_rdat  [0][1][18];
    end
    //------READ (scalar, complete partition, global adr = 513) always block-----//
    //s = 0; r = 0; a = 20;
    if (scalar_rdat_vld[0][0][20]) begin
        hls_transform_tree_hls_dup1_pu_intra_pred_mode_1 <= scalar_rdat  [0][0][20];
    end
    //------READ (scalar, complete partition, global adr = 514) always block-----//
    //s = 0; r = 1; a = 19;
    if (scalar_rdat_vld[0][1][19]) begin
        hls_transform_tree_hls_dup1_pu_intra_pred_mode_2 <= scalar_rdat  [0][1][19];
    end
    //------READ (scalar, complete partition, global adr = 515) always block-----//
    //s = 0; r = 0; a = 21;
    if (scalar_rdat_vld[0][0][21]) begin
        hls_transform_tree_hls_dup1_pu_intra_pred_mode_3 <= scalar_rdat  [0][0][21];
    end
    //------READ (scalar, complete partition, global adr = 516) always block-----//
    //s = 1; r = 1; a = 7;
    if (scalar_rdat_vld[1][1][7]) begin
        hls_transform_tree_hls_dup1_pu_intra_pred_mode_c_0 <= scalar_rdat  [1][1][7];
    end
    //------READ (scalar, complete partition, global adr = 517) always block-----//
    //s = 1; r = 0; a = 9;
    if (scalar_rdat_vld[1][0][9]) begin
        hls_transform_tree_hls_dup1_pu_intra_pred_mode_c_1 <= scalar_rdat  [1][0][9];
    end
    //------READ (scalar, complete partition, global adr = 518) always block-----//
    //s = 1; r = 1; a = 8;
    if (scalar_rdat_vld[1][1][8]) begin
        hls_transform_tree_hls_dup1_pu_intra_pred_mode_c_2 <= scalar_rdat  [1][1][8];
    end
    //------READ (scalar, complete partition, global adr = 519) always block-----//
    //s = 1; r = 0; a = 10;
    if (scalar_rdat_vld[1][0][10]) begin
        hls_transform_tree_hls_dup1_pu_intra_pred_mode_c_3 <= scalar_rdat  [1][0][10];
    end
    //------READ (scalar, global adr = 568) always block-----//
    //s = 14; r = 1; a = 15;
    if (scalar_rdat_vld[14][1][15]) begin
        hls_transform_tree_hls_dup1_intra_split_flag <= scalar_rdat  [14][1][15];
    end
    //------READ (scalar, global adr = 364) always block-----//
    //s = 27; r = 1; a = 4;
    if (scalar_rdat_vld[27][1][4]) begin
        hls_transform_tree_hls_dup1_log2_max_trafo_size <= scalar_rdat  [27][1][4];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 1; a = 7;
    if (scalar_rdat_vld[30][1][7]) begin
        hls_transform_tree_hls_dup1_log2_min_tb_size <= scalar_rdat  [30][1][7];
    end
    //------READ (scalar, global adr = 576) always block-----//
    //s = 16; r = 0; a = 11;
    if (scalar_rdat_vld[16][0][11]) begin
        hls_transform_tree_hls_dup1_max_trafo_depth <= scalar_rdat  [16][0][11];
    end
    //------READ (scalar, global adr = 380) always block-----//
    //s = 31; r = 0; a = 11;
    if (scalar_rdat_vld[31][0][11]) begin
        hls_transform_tree_hls_dup1_max_transform_hierarchy_depth_inter <= scalar_rdat  [31][0][11];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 15;
    if (scalar_rdat_vld[12][0][15]) begin
        hls_transform_tree_hls_dup1_pred_mode <= scalar_rdat  [12][0][15];
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 0; a = 20;
    if (scalar_rdat_vld[13][0][20]) begin
        hls_transform_tree_hls_dup1_part_mode <= scalar_rdat  [13][0][20];
    end
    //------READ (scalar, global adr = 324) always block-----//
    //s = 17; r = 0; a = 9;
    if (scalar_rdat_vld[17][0][9]) begin
        hls_transform_tree_hls_dup1_chroma_array_type <= scalar_rdat  [17][0][9];
    end
    //------READ (scalar, global adr = 328) always block-----//
    //s = 18; r = 0; a = 7;
    if (scalar_rdat_vld[18][0][7]) begin
        hls_transform_tree_hls_dup1_chroma_format_idc <= scalar_rdat  [18][0][7];
    end
    //------READ (scalar, global adr = 20) always block-----//
    //s = 5; r = 0; a = 10;
    if (scalar_rdat_vld[5][0][10]) begin
        hls_transform_tree_hls_dup1_cbf_luma_o_r <= scalar_rdat  [5][0][10];    //bidir
    end
    //------WRITE (scalar, global adr = 20) always block-----//
    //s = 5; r = 1; a = 3;
    hls_transform_tree_hls_dup1_cbf_luma_o_ap_vld_r <= hls_transform_tree_hls_dup1_cbf_luma_o_ap_vld;
    if (hls_transform_tree_hls_dup1_cbf_luma_o_ap_vld) begin
        hls_transform_tree_hls_dup1_cbf_luma_o_r <= hls_transform_tree_hls_dup1_cbf_luma_o;
    end
    //------READ (scalar, global adr = 1328) always block-----//
    //s = 12; r = 1; a = 14;
    if (scalar_rdat_vld[12][1][14]) begin
        hls_transform_tree_hls_dup1_rv_hls_transform_unit <= scalar_rdat  [12][1][14];
    end
    //------READ (scalar, global adr = 1332) always block-----//
    //s = 13; r = 1; a = 19;
    if (scalar_rdat_vld[13][1][19]) begin
        hls_transform_tree_hls_dup1_rv_ff_hevc_deblocking_boundary_strengths <= scalar_rdat  [13][1][19];
    end
    //------READ (scalar, global adr = 1336) always block-----//
    //s = 14; r = 0; a = 17;
    if (scalar_rdat_vld[14][0][17]) begin
        hls_transform_tree_hls_dup1_rv_set_deblocking_bypass <= scalar_rdat  [14][0][17];
    end
    //------READ (scalar, global adr = 1236) always block-----//
    //s = 21; r = 1; a = 14;
    if (scalar_rdat_vld[21][1][14]) begin
        hls_transform_tree_hls_dup1_rv_callback_flag <= scalar_rdat  [21][1][14];
    end
    //------READ (scalar, global adr = 388) always block-----//
    //s = 1; r = 1; a = 9;
    if (scalar_rdat_vld[1][1][9]) begin
        hls_transform_tree_hls_dup1_min_tb_width <= scalar_rdat  [1][1][9];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 13;
    if (scalar_rdat_vld[26][0][13]) begin
        hls_transform_tree_hls_dup1_log2_ctb_size <= scalar_rdat  [26][0][13];
    end
`endif
    //============================================================
    //hls_transform_tree_hls_dup2       (f = 12)
    //============================================================
`ifdef enable_connect_hls_transform_tree_hls_dup2
    //------WRITE (scalar, global adr = 168) always block-----//
    //s = 10; r = 0; a = 5;
    hls_transform_tree_hls_dup2_log2_trafo_size_ap_vld_r <= hls_transform_tree_hls_dup2_log2_trafo_size_ap_vld;
    if (hls_transform_tree_hls_dup2_log2_trafo_size_ap_vld) begin
        hls_transform_tree_hls_dup2_log2_trafo_size_r <= hls_transform_tree_hls_dup2_log2_trafo_size;
    end
    //------WRITE (scalar, global adr = 12) always block-----//
    //s = 3; r = 0; a = 3;
    hls_transform_tree_hls_dup2_split_transform_flag_ap_vld_r <= hls_transform_tree_hls_dup2_split_transform_flag_ap_vld;
    if (hls_transform_tree_hls_dup2_split_transform_flag_ap_vld) begin
        hls_transform_tree_hls_dup2_split_transform_flag_r <= hls_transform_tree_hls_dup2_split_transform_flag;
    end
    //------WRITE (scalar, global adr = 16) always block-----//
    //s = 4; r = 0; a = 3;
    hls_transform_tree_hls_dup2_cbf_data_ap_vld_r <= hls_transform_tree_hls_dup2_cbf_data_ap_vld;
    if (hls_transform_tree_hls_dup2_cbf_data_ap_vld) begin
        hls_transform_tree_hls_dup2_cbf_data_r <= hls_transform_tree_hls_dup2_cbf_data;
    end
    //------READ (scalar, global adr = 1160) always block-----//
    //s = 2; r = 1; a = 13;
    if (scalar_rdat_vld[2][1][13]) begin
        hls_transform_tree_hls_dup2_disable_deblocking_filter_flag <= scalar_rdat  [2][1][13];
    end
    //------READ (scalar, global adr = 440) always block-----//
    //s = 14; r = 1; a = 16;
    if (scalar_rdat_vld[14][1][16]) begin
        hls_transform_tree_hls_dup2_transquant_bypass_enable_flag <= scalar_rdat  [14][1][16];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 0; a = 14;
    if (scalar_rdat_vld[15][0][14]) begin
        hls_transform_tree_hls_dup2_cu_transquant_bypass_flag <= scalar_rdat  [15][0][14];
    end
    //------WRITE (scalar, global adr = 480) always block-----//
    //s = 24; r = 0; a = 2;
    hls_transform_tree_hls_dup2_tu_chroma_mode_c_ap_vld_r <= hls_transform_tree_hls_dup2_tu_chroma_mode_c_ap_vld;
    if (hls_transform_tree_hls_dup2_tu_chroma_mode_c_ap_vld) begin
        hls_transform_tree_hls_dup2_tu_chroma_mode_c_r <= hls_transform_tree_hls_dup2_tu_chroma_mode_c;
    end
    //------WRITE (scalar, global adr = 484) always block-----//
    //s = 25; r = 0; a = 2;
    hls_transform_tree_hls_dup2_tu_intra_pred_mode_ap_vld_r <= hls_transform_tree_hls_dup2_tu_intra_pred_mode_ap_vld;
    if (hls_transform_tree_hls_dup2_tu_intra_pred_mode_ap_vld) begin
        hls_transform_tree_hls_dup2_tu_intra_pred_mode_r <= hls_transform_tree_hls_dup2_tu_intra_pred_mode;
    end
    //------WRITE (scalar, global adr = 488) always block-----//
    //s = 26; r = 0; a = 2;
    hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_ap_vld_r <= hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_ap_vld;
    if (hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_ap_vld) begin
        hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_r <= hls_transform_tree_hls_dup2_tu_intra_pred_mode_c;
    end
    //------READ (scalar, complete partition, global adr = 508) always block-----//
    //s = 31; r = 1; a = 10;
    if (scalar_rdat_vld[31][1][10]) begin
        hls_transform_tree_hls_dup2_pu_chroma_mode_c_0 <= scalar_rdat  [31][1][10];
    end
    //------READ (scalar, complete partition, global adr = 509) always block-----//
    //s = 31; r = 0; a = 12;
    if (scalar_rdat_vld[31][0][12]) begin
        hls_transform_tree_hls_dup2_pu_chroma_mode_c_1 <= scalar_rdat  [31][0][12];
    end
    //------READ (scalar, complete partition, global adr = 510) always block-----//
    //s = 31; r = 1; a = 11;
    if (scalar_rdat_vld[31][1][11]) begin
        hls_transform_tree_hls_dup2_pu_chroma_mode_c_2 <= scalar_rdat  [31][1][11];
    end
    //------READ (scalar, complete partition, global adr = 511) always block-----//
    //s = 31; r = 0; a = 13;
    if (scalar_rdat_vld[31][0][13]) begin
        hls_transform_tree_hls_dup2_pu_chroma_mode_c_3 <= scalar_rdat  [31][0][13];
    end
    //------READ (scalar, complete partition, global adr = 512) always block-----//
    //s = 0; r = 1; a = 20;
    if (scalar_rdat_vld[0][1][20]) begin
        hls_transform_tree_hls_dup2_pu_intra_pred_mode_0 <= scalar_rdat  [0][1][20];
    end
    //------READ (scalar, complete partition, global adr = 513) always block-----//
    //s = 0; r = 0; a = 22;
    if (scalar_rdat_vld[0][0][22]) begin
        hls_transform_tree_hls_dup2_pu_intra_pred_mode_1 <= scalar_rdat  [0][0][22];
    end
    //------READ (scalar, complete partition, global adr = 514) always block-----//
    //s = 0; r = 1; a = 21;
    if (scalar_rdat_vld[0][1][21]) begin
        hls_transform_tree_hls_dup2_pu_intra_pred_mode_2 <= scalar_rdat  [0][1][21];
    end
    //------READ (scalar, complete partition, global adr = 515) always block-----//
    //s = 0; r = 0; a = 23;
    if (scalar_rdat_vld[0][0][23]) begin
        hls_transform_tree_hls_dup2_pu_intra_pred_mode_3 <= scalar_rdat  [0][0][23];
    end
    //------READ (scalar, complete partition, global adr = 516) always block-----//
    //s = 1; r = 0; a = 11;
    if (scalar_rdat_vld[1][0][11]) begin
        hls_transform_tree_hls_dup2_pu_intra_pred_mode_c_0 <= scalar_rdat  [1][0][11];
    end
    //------READ (scalar, complete partition, global adr = 517) always block-----//
    //s = 1; r = 1; a = 10;
    if (scalar_rdat_vld[1][1][10]) begin
        hls_transform_tree_hls_dup2_pu_intra_pred_mode_c_1 <= scalar_rdat  [1][1][10];
    end
    //------READ (scalar, complete partition, global adr = 518) always block-----//
    //s = 1; r = 0; a = 12;
    if (scalar_rdat_vld[1][0][12]) begin
        hls_transform_tree_hls_dup2_pu_intra_pred_mode_c_2 <= scalar_rdat  [1][0][12];
    end
    //------READ (scalar, complete partition, global adr = 519) always block-----//
    //s = 1; r = 1; a = 11;
    if (scalar_rdat_vld[1][1][11]) begin
        hls_transform_tree_hls_dup2_pu_intra_pred_mode_c_3 <= scalar_rdat  [1][1][11];
    end
    //------READ (scalar, global adr = 568) always block-----//
    //s = 14; r = 0; a = 18;
    if (scalar_rdat_vld[14][0][18]) begin
        hls_transform_tree_hls_dup2_intra_split_flag <= scalar_rdat  [14][0][18];
    end
    //------READ (scalar, global adr = 364) always block-----//
    //s = 27; r = 0; a = 6;
    if (scalar_rdat_vld[27][0][6]) begin
        hls_transform_tree_hls_dup2_log2_max_trafo_size <= scalar_rdat  [27][0][6];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 0; a = 8;
    if (scalar_rdat_vld[30][0][8]) begin
        hls_transform_tree_hls_dup2_log2_min_tb_size <= scalar_rdat  [30][0][8];
    end
    //------READ (scalar, global adr = 576) always block-----//
    //s = 16; r = 1; a = 11;
    if (scalar_rdat_vld[16][1][11]) begin
        hls_transform_tree_hls_dup2_max_trafo_depth <= scalar_rdat  [16][1][11];
    end
    //------READ (scalar, global adr = 380) always block-----//
    //s = 31; r = 1; a = 12;
    if (scalar_rdat_vld[31][1][12]) begin
        hls_transform_tree_hls_dup2_max_transform_hierarchy_depth_inter <= scalar_rdat  [31][1][12];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 16;
    if (scalar_rdat_vld[12][0][16]) begin
        hls_transform_tree_hls_dup2_pred_mode <= scalar_rdat  [12][0][16];
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 0; a = 21;
    if (scalar_rdat_vld[13][0][21]) begin
        hls_transform_tree_hls_dup2_part_mode <= scalar_rdat  [13][0][21];
    end
    //------READ (scalar, global adr = 324) always block-----//
    //s = 17; r = 1; a = 9;
    if (scalar_rdat_vld[17][1][9]) begin
        hls_transform_tree_hls_dup2_chroma_array_type <= scalar_rdat  [17][1][9];
    end
    //------READ (scalar, global adr = 328) always block-----//
    //s = 18; r = 1; a = 7;
    if (scalar_rdat_vld[18][1][7]) begin
        hls_transform_tree_hls_dup2_chroma_format_idc <= scalar_rdat  [18][1][7];
    end
    //------READ (scalar, global adr = 20) always block-----//
    //s = 5; r = 1; a = 9;
    if (scalar_rdat_vld[5][1][9]) begin
        hls_transform_tree_hls_dup2_cbf_luma_o_r <= scalar_rdat  [5][1][9];    //bidir
    end
    //------WRITE (scalar, global adr = 20) always block-----//
    //s = 5; r = 0; a = 4;
    hls_transform_tree_hls_dup2_cbf_luma_o_ap_vld_r <= hls_transform_tree_hls_dup2_cbf_luma_o_ap_vld;
    if (hls_transform_tree_hls_dup2_cbf_luma_o_ap_vld) begin
        hls_transform_tree_hls_dup2_cbf_luma_o_r <= hls_transform_tree_hls_dup2_cbf_luma_o;
    end
    //------READ (scalar, global adr = 1328) always block-----//
    //s = 12; r = 1; a = 15;
    if (scalar_rdat_vld[12][1][15]) begin
        hls_transform_tree_hls_dup2_rv_hls_transform_unit <= scalar_rdat  [12][1][15];
    end
    //------READ (scalar, global adr = 1332) always block-----//
    //s = 13; r = 1; a = 20;
    if (scalar_rdat_vld[13][1][20]) begin
        hls_transform_tree_hls_dup2_rv_ff_hevc_deblocking_boundary_strengths <= scalar_rdat  [13][1][20];
    end
    //------READ (scalar, global adr = 1336) always block-----//
    //s = 14; r = 1; a = 17;
    if (scalar_rdat_vld[14][1][17]) begin
        hls_transform_tree_hls_dup2_rv_set_deblocking_bypass <= scalar_rdat  [14][1][17];
    end
    //------READ (scalar, global adr = 1236) always block-----//
    //s = 21; r = 0; a = 16;
    if (scalar_rdat_vld[21][0][16]) begin
        hls_transform_tree_hls_dup2_rv_callback_flag <= scalar_rdat  [21][0][16];
    end
    //------READ (scalar, global adr = 388) always block-----//
    //s = 1; r = 0; a = 13;
    if (scalar_rdat_vld[1][0][13]) begin
        hls_transform_tree_hls_dup2_min_tb_width <= scalar_rdat  [1][0][13];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 12;
    if (scalar_rdat_vld[26][1][12]) begin
        hls_transform_tree_hls_dup2_log2_ctb_size <= scalar_rdat  [26][1][12];
    end
`endif
    //============================================================
    //hls_transform_tree_hls_dup3       (f = 13)
    //============================================================
`ifdef enable_connect_hls_transform_tree_hls_dup3
    //------WRITE (scalar, global adr = 168) always block-----//
    //s = 10; r = 1; a = 5;
    hls_transform_tree_hls_dup3_log2_trafo_size_ap_vld_r <= hls_transform_tree_hls_dup3_log2_trafo_size_ap_vld;
    if (hls_transform_tree_hls_dup3_log2_trafo_size_ap_vld) begin
        hls_transform_tree_hls_dup3_log2_trafo_size_r <= hls_transform_tree_hls_dup3_log2_trafo_size;
    end
    //------WRITE (scalar, global adr = 12) always block-----//
    //s = 3; r = 1; a = 3;
    hls_transform_tree_hls_dup3_split_transform_flag_ap_vld_r <= hls_transform_tree_hls_dup3_split_transform_flag_ap_vld;
    if (hls_transform_tree_hls_dup3_split_transform_flag_ap_vld) begin
        hls_transform_tree_hls_dup3_split_transform_flag_r <= hls_transform_tree_hls_dup3_split_transform_flag;
    end
    //------WRITE (scalar, global adr = 16) always block-----//
    //s = 4; r = 1; a = 3;
    hls_transform_tree_hls_dup3_cbf_data_ap_vld_r <= hls_transform_tree_hls_dup3_cbf_data_ap_vld;
    if (hls_transform_tree_hls_dup3_cbf_data_ap_vld) begin
        hls_transform_tree_hls_dup3_cbf_data_r <= hls_transform_tree_hls_dup3_cbf_data;
    end
    //------READ (scalar, global adr = 1160) always block-----//
    //s = 2; r = 0; a = 15;
    if (scalar_rdat_vld[2][0][15]) begin
        hls_transform_tree_hls_dup3_disable_deblocking_filter_flag <= scalar_rdat  [2][0][15];
    end
    //------READ (scalar, global adr = 440) always block-----//
    //s = 14; r = 0; a = 19;
    if (scalar_rdat_vld[14][0][19]) begin
        hls_transform_tree_hls_dup3_transquant_bypass_enable_flag <= scalar_rdat  [14][0][19];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 13;
    if (scalar_rdat_vld[15][1][13]) begin
        hls_transform_tree_hls_dup3_cu_transquant_bypass_flag <= scalar_rdat  [15][1][13];
    end
    //------WRITE (scalar, global adr = 480) always block-----//
    //s = 24; r = 1; a = 2;
    hls_transform_tree_hls_dup3_tu_chroma_mode_c_ap_vld_r <= hls_transform_tree_hls_dup3_tu_chroma_mode_c_ap_vld;
    if (hls_transform_tree_hls_dup3_tu_chroma_mode_c_ap_vld) begin
        hls_transform_tree_hls_dup3_tu_chroma_mode_c_r <= hls_transform_tree_hls_dup3_tu_chroma_mode_c;
    end
    //------WRITE (scalar, global adr = 484) always block-----//
    //s = 25; r = 1; a = 2;
    hls_transform_tree_hls_dup3_tu_intra_pred_mode_ap_vld_r <= hls_transform_tree_hls_dup3_tu_intra_pred_mode_ap_vld;
    if (hls_transform_tree_hls_dup3_tu_intra_pred_mode_ap_vld) begin
        hls_transform_tree_hls_dup3_tu_intra_pred_mode_r <= hls_transform_tree_hls_dup3_tu_intra_pred_mode;
    end
    //------WRITE (scalar, global adr = 488) always block-----//
    //s = 26; r = 1; a = 2;
    hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_ap_vld_r <= hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_ap_vld;
    if (hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_ap_vld) begin
        hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_r <= hls_transform_tree_hls_dup3_tu_intra_pred_mode_c;
    end
    //------READ (scalar, complete partition, global adr = 508) always block-----//
    //s = 31; r = 0; a = 14;
    if (scalar_rdat_vld[31][0][14]) begin
        hls_transform_tree_hls_dup3_pu_chroma_mode_c_0 <= scalar_rdat  [31][0][14];
    end
    //------READ (scalar, complete partition, global adr = 509) always block-----//
    //s = 31; r = 1; a = 13;
    if (scalar_rdat_vld[31][1][13]) begin
        hls_transform_tree_hls_dup3_pu_chroma_mode_c_1 <= scalar_rdat  [31][1][13];
    end
    //------READ (scalar, complete partition, global adr = 510) always block-----//
    //s = 31; r = 0; a = 15;
    if (scalar_rdat_vld[31][0][15]) begin
        hls_transform_tree_hls_dup3_pu_chroma_mode_c_2 <= scalar_rdat  [31][0][15];
    end
    //------READ (scalar, complete partition, global adr = 511) always block-----//
    //s = 31; r = 1; a = 14;
    if (scalar_rdat_vld[31][1][14]) begin
        hls_transform_tree_hls_dup3_pu_chroma_mode_c_3 <= scalar_rdat  [31][1][14];
    end
    //------READ (scalar, complete partition, global adr = 512) always block-----//
    //s = 0; r = 1; a = 22;
    if (scalar_rdat_vld[0][1][22]) begin
        hls_transform_tree_hls_dup3_pu_intra_pred_mode_0 <= scalar_rdat  [0][1][22];
    end
    //------READ (scalar, complete partition, global adr = 513) always block-----//
    //s = 0; r = 0; a = 24;
    if (scalar_rdat_vld[0][0][24]) begin
        hls_transform_tree_hls_dup3_pu_intra_pred_mode_1 <= scalar_rdat  [0][0][24];
    end
    //------READ (scalar, complete partition, global adr = 514) always block-----//
    //s = 0; r = 1; a = 23;
    if (scalar_rdat_vld[0][1][23]) begin
        hls_transform_tree_hls_dup3_pu_intra_pred_mode_2 <= scalar_rdat  [0][1][23];
    end
    //------READ (scalar, complete partition, global adr = 515) always block-----//
    //s = 0; r = 0; a = 25;
    if (scalar_rdat_vld[0][0][25]) begin
        hls_transform_tree_hls_dup3_pu_intra_pred_mode_3 <= scalar_rdat  [0][0][25];
    end
    //------READ (scalar, complete partition, global adr = 516) always block-----//
    //s = 1; r = 1; a = 12;
    if (scalar_rdat_vld[1][1][12]) begin
        hls_transform_tree_hls_dup3_pu_intra_pred_mode_c_0 <= scalar_rdat  [1][1][12];
    end
    //------READ (scalar, complete partition, global adr = 517) always block-----//
    //s = 1; r = 0; a = 14;
    if (scalar_rdat_vld[1][0][14]) begin
        hls_transform_tree_hls_dup3_pu_intra_pred_mode_c_1 <= scalar_rdat  [1][0][14];
    end
    //------READ (scalar, complete partition, global adr = 518) always block-----//
    //s = 1; r = 1; a = 13;
    if (scalar_rdat_vld[1][1][13]) begin
        hls_transform_tree_hls_dup3_pu_intra_pred_mode_c_2 <= scalar_rdat  [1][1][13];
    end
    //------READ (scalar, complete partition, global adr = 519) always block-----//
    //s = 1; r = 0; a = 15;
    if (scalar_rdat_vld[1][0][15]) begin
        hls_transform_tree_hls_dup3_pu_intra_pred_mode_c_3 <= scalar_rdat  [1][0][15];
    end
    //------READ (scalar, global adr = 568) always block-----//
    //s = 14; r = 1; a = 18;
    if (scalar_rdat_vld[14][1][18]) begin
        hls_transform_tree_hls_dup3_intra_split_flag <= scalar_rdat  [14][1][18];
    end
    //------READ (scalar, global adr = 364) always block-----//
    //s = 27; r = 1; a = 5;
    if (scalar_rdat_vld[27][1][5]) begin
        hls_transform_tree_hls_dup3_log2_max_trafo_size <= scalar_rdat  [27][1][5];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 1; a = 8;
    if (scalar_rdat_vld[30][1][8]) begin
        hls_transform_tree_hls_dup3_log2_min_tb_size <= scalar_rdat  [30][1][8];
    end
    //------READ (scalar, global adr = 576) always block-----//
    //s = 16; r = 0; a = 12;
    if (scalar_rdat_vld[16][0][12]) begin
        hls_transform_tree_hls_dup3_max_trafo_depth <= scalar_rdat  [16][0][12];
    end
    //------READ (scalar, global adr = 380) always block-----//
    //s = 31; r = 0; a = 16;
    if (scalar_rdat_vld[31][0][16]) begin
        hls_transform_tree_hls_dup3_max_transform_hierarchy_depth_inter <= scalar_rdat  [31][0][16];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 17;
    if (scalar_rdat_vld[12][0][17]) begin
        hls_transform_tree_hls_dup3_pred_mode <= scalar_rdat  [12][0][17];
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 0; a = 22;
    if (scalar_rdat_vld[13][0][22]) begin
        hls_transform_tree_hls_dup3_part_mode <= scalar_rdat  [13][0][22];
    end
    //------READ (scalar, global adr = 324) always block-----//
    //s = 17; r = 0; a = 10;
    if (scalar_rdat_vld[17][0][10]) begin
        hls_transform_tree_hls_dup3_chroma_array_type <= scalar_rdat  [17][0][10];
    end
    //------READ (scalar, global adr = 328) always block-----//
    //s = 18; r = 0; a = 8;
    if (scalar_rdat_vld[18][0][8]) begin
        hls_transform_tree_hls_dup3_chroma_format_idc <= scalar_rdat  [18][0][8];
    end
    //------READ (scalar, global adr = 20) always block-----//
    //s = 5; r = 0; a = 11;
    if (scalar_rdat_vld[5][0][11]) begin
        hls_transform_tree_hls_dup3_cbf_luma_o_r <= scalar_rdat  [5][0][11];    //bidir
    end
    //------WRITE (scalar, global adr = 20) always block-----//
    //s = 5; r = 1; a = 4;
    hls_transform_tree_hls_dup3_cbf_luma_o_ap_vld_r <= hls_transform_tree_hls_dup3_cbf_luma_o_ap_vld;
    if (hls_transform_tree_hls_dup3_cbf_luma_o_ap_vld) begin
        hls_transform_tree_hls_dup3_cbf_luma_o_r <= hls_transform_tree_hls_dup3_cbf_luma_o;
    end
    //------READ (scalar, global adr = 1328) always block-----//
    //s = 12; r = 1; a = 16;
    if (scalar_rdat_vld[12][1][16]) begin
        hls_transform_tree_hls_dup3_rv_hls_transform_unit <= scalar_rdat  [12][1][16];
    end
    //------READ (scalar, global adr = 1332) always block-----//
    //s = 13; r = 1; a = 21;
    if (scalar_rdat_vld[13][1][21]) begin
        hls_transform_tree_hls_dup3_rv_ff_hevc_deblocking_boundary_strengths <= scalar_rdat  [13][1][21];
    end
    //------READ (scalar, global adr = 1336) always block-----//
    //s = 14; r = 0; a = 20;
    if (scalar_rdat_vld[14][0][20]) begin
        hls_transform_tree_hls_dup3_rv_set_deblocking_bypass <= scalar_rdat  [14][0][20];
    end
    //------READ (scalar, global adr = 1236) always block-----//
    //s = 21; r = 1; a = 15;
    if (scalar_rdat_vld[21][1][15]) begin
        hls_transform_tree_hls_dup3_rv_callback_flag <= scalar_rdat  [21][1][15];
    end
    //------READ (scalar, global adr = 388) always block-----//
    //s = 1; r = 1; a = 14;
    if (scalar_rdat_vld[1][1][14]) begin
        hls_transform_tree_hls_dup3_min_tb_width <= scalar_rdat  [1][1][14];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 14;
    if (scalar_rdat_vld[26][0][14]) begin
        hls_transform_tree_hls_dup3_log2_ctb_size <= scalar_rdat  [26][0][14];
    end
`endif
    //============================================================
    //hls_coding_quadtree_hls       (f = 14)
    //============================================================
`ifdef enable_connect_hls_coding_quadtree_hls
    //------READ (scalar, global adr = 300) always block-----//
    //s = 11; r = 0; a = 6;
    if (scalar_rdat_vld[11][0][6]) begin
        hls_coding_quadtree_hls_x1_o_r <= scalar_rdat  [11][0][6];    //bidir
    end
    //------WRITE (scalar, global adr = 300) always block-----//
    //s = 11; r = 0; a = 0;
    hls_coding_quadtree_hls_x1_o_ap_vld_r <= hls_coding_quadtree_hls_x1_o_ap_vld;
    if (hls_coding_quadtree_hls_x1_o_ap_vld) begin
        hls_coding_quadtree_hls_x1_o_r <= hls_coding_quadtree_hls_x1_o;
    end
    //------READ (scalar, global adr = 304) always block-----//
    //s = 12; r = 0; a = 8;
    if (scalar_rdat_vld[12][0][8]) begin
        hls_coding_quadtree_hls_y1_o_r <= scalar_rdat  [12][0][8];    //bidir
    end
    //------WRITE (scalar, global adr = 304) always block-----//
    //s = 12; r = 0; a = 0;
    hls_coding_quadtree_hls_y1_o_ap_vld_r <= hls_coding_quadtree_hls_y1_o_ap_vld;
    if (hls_coding_quadtree_hls_y1_o_ap_vld) begin
        hls_coding_quadtree_hls_y1_o_r <= hls_coding_quadtree_hls_y1_o;
    end
    //------READ (scalar, global adr = 312) always block-----//
    //s = 14; r = 1; a = 7;
    if (scalar_rdat_vld[14][1][7]) begin
        hls_coding_quadtree_hls_log2_cb_size_minus_one_o_r <= scalar_rdat  [14][1][7];    //bidir
    end
    //------WRITE (scalar, global adr = 312) always block-----//
    //s = 14; r = 1; a = 0;
    hls_coding_quadtree_hls_log2_cb_size_minus_one_o_ap_vld_r <= hls_coding_quadtree_hls_log2_cb_size_minus_one_o_ap_vld;
    if (hls_coding_quadtree_hls_log2_cb_size_minus_one_o_ap_vld) begin
        hls_coding_quadtree_hls_log2_cb_size_minus_one_o_r <= hls_coding_quadtree_hls_log2_cb_size_minus_one_o;
    end
    //------READ (scalar, global adr = 316) always block-----//
    //s = 15; r = 1; a = 5;
    if (scalar_rdat_vld[15][1][5]) begin
        hls_coding_quadtree_hls_cb_depth_plus_one_o_r <= scalar_rdat  [15][1][5];    //bidir
    end
    //------WRITE (scalar, global adr = 316) always block-----//
    //s = 15; r = 1; a = 0;
    hls_coding_quadtree_hls_cb_depth_plus_one_o_ap_vld_r <= hls_coding_quadtree_hls_cb_depth_plus_one_o_ap_vld;
    if (hls_coding_quadtree_hls_cb_depth_plus_one_o_ap_vld) begin
        hls_coding_quadtree_hls_cb_depth_plus_one_o_r <= hls_coding_quadtree_hls_cb_depth_plus_one_o;
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 1; a = 7;
    if (scalar_rdat_vld[6][1][7]) begin
        hls_coding_quadtree_hls_width <= scalar_rdat  [6][1][7];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 0; a = 5;
    if (scalar_rdat_vld[19][0][5]) begin
        hls_coding_quadtree_hls_height <= scalar_rdat  [19][0][5];
    end
    //------READ (scalar, global adr = 292) always block-----//
    //s = 9; r = 1; a = 9;
    if (scalar_rdat_vld[9][1][9]) begin
        hls_coding_quadtree_hls_split_cu_flag_o_r <= scalar_rdat  [9][1][9];    //bidir
    end
    //------WRITE (scalar, global adr = 292) always block-----//
    //s = 9; r = 1; a = 0;
    hls_coding_quadtree_hls_split_cu_flag_o_ap_vld_r <= hls_coding_quadtree_hls_split_cu_flag_o_ap_vld;
    if (hls_coding_quadtree_hls_split_cu_flag_o_ap_vld) begin
        hls_coding_quadtree_hls_split_cu_flag_o_r <= hls_coding_quadtree_hls_split_cu_flag_o;
    end
    //------READ (scalar, global adr = 296) always block-----//
    //s = 10; r = 0; a = 10;
    if (scalar_rdat_vld[10][0][10]) begin
        hls_coding_quadtree_hls_more_data_o_r <= scalar_rdat  [10][0][10];    //bidir
    end
    //------WRITE (scalar, global adr = 296) always block-----//
    //s = 10; r = 0; a = 0;
    hls_coding_quadtree_hls_more_data_o_ap_vld_r <= hls_coding_quadtree_hls_more_data_o_ap_vld;
    if (hls_coding_quadtree_hls_more_data_o_ap_vld) begin
        hls_coding_quadtree_hls_more_data_o_r <= hls_coding_quadtree_hls_more_data_o;
    end
    //------READ (scalar, global adr = 1324) always block-----//
    //s = 11; r = 1; a = 5;
    if (scalar_rdat_vld[11][1][5]) begin
        hls_coding_quadtree_hls_rv_hls_coding_unit <= scalar_rdat  [11][1][5];
    end
    //------READ (scalar, global adr = 1236) always block-----//
    //s = 21; r = 0; a = 11;
    if (scalar_rdat_vld[21][0][11]) begin
        hls_coding_quadtree_hls_rv_callback_flag <= scalar_rdat  [21][0][11];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 8;
    if (scalar_rdat_vld[26][0][8]) begin
        hls_coding_quadtree_hls_log2_ctb_size <= scalar_rdat  [26][0][8];
    end
    //------WRITE (scalar, global adr = 540) always block-----//
    //s = 7; r = 0; a = 0;
    hls_coding_quadtree_hls_qPy_pred_ap_vld_r <= hls_coding_quadtree_hls_qPy_pred_ap_vld;
    if (hls_coding_quadtree_hls_qPy_pred_ap_vld) begin
        hls_coding_quadtree_hls_qPy_pred_r <= hls_coding_quadtree_hls_qPy_pred;
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 0; a = 8;
    if (scalar_rdat_vld[6][0][8]) begin
        hls_coding_quadtree_hls_qp_y <= scalar_rdat  [6][0][8];
    end
    //------READ (scalar, global adr = 40) always block-----//
    //s = 10; r = 1; a = 9;
    if (scalar_rdat_vld[10][1][9]) begin
        hls_coding_quadtree_hls_qp_block_mask_o_r <= scalar_rdat  [10][1][9];    //bidir
    end
    //------WRITE (scalar, global adr = 40) always block-----//
    //s = 10; r = 1; a = 0;
    hls_coding_quadtree_hls_qp_block_mask_o_ap_vld_r <= hls_coding_quadtree_hls_qp_block_mask_o_ap_vld;
    if (hls_coding_quadtree_hls_qp_block_mask_o_ap_vld) begin
        hls_coding_quadtree_hls_qp_block_mask_o_r <= hls_coding_quadtree_hls_qp_block_mask_o;
    end
    //------READ (scalar, global adr = 308) always block-----//
    //s = 13; r = 0; a = 9;
    if (scalar_rdat_vld[13][0][9]) begin
        hls_coding_quadtree_hls_cb_size_split_o_r <= scalar_rdat  [13][0][9];    //bidir
    end
    //------WRITE (scalar, global adr = 308) always block-----//
    //s = 13; r = 1; a = 0;
    hls_coding_quadtree_hls_cb_size_split_o_ap_vld_r <= hls_coding_quadtree_hls_cb_size_split_o_ap_vld;
    if (hls_coding_quadtree_hls_cb_size_split_o_ap_vld) begin
        hls_coding_quadtree_hls_cb_size_split_o_r <= hls_coding_quadtree_hls_cb_size_split_o;
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 1; a = 7;
    if (scalar_rdat_vld[28][1][7]) begin
        hls_coding_quadtree_hls_log2_min_cb_size <= scalar_rdat  [28][1][7];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 1; a = 4;
    if (scalar_rdat_vld[2][1][4]) begin
        hls_coding_quadtree_hls_min_cb_width <= scalar_rdat  [2][1][4];
    end
    //------WRITE (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 0;
    hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_ap_vld_r <= hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_ap_vld;
    if (hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_ap_vld) begin
        hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_r <= hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded;
    end
    //------WRITE (scalar, global adr = 468) always block-----//
    //s = 21; r = 0; a = 1;
    hls_coding_quadtree_hls_tu_cu_qp_delta_ap_vld_r <= hls_coding_quadtree_hls_tu_cu_qp_delta_ap_vld;
    if (hls_coding_quadtree_hls_tu_cu_qp_delta_ap_vld) begin
        hls_coding_quadtree_hls_tu_cu_qp_delta_r <= hls_coding_quadtree_hls_tu_cu_qp_delta;
    end
    //------WRITE (scalar, global adr = 472) always block-----//
    //s = 22; r = 0; a = 1;
    hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_ap_vld_r <= hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_ap_vld;
    if (hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_ap_vld) begin
        hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_r <= hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded;
    end
    //------WRITE (scalar, global adr = 464) always block-----//
    //s = 20; r = 0; a = 1;
    hls_coding_quadtree_hls_depth_ap_vld_r <= hls_coding_quadtree_hls_depth_ap_vld;
    if (hls_coding_quadtree_hls_depth_ap_vld) begin
        hls_coding_quadtree_hls_depth_r <= hls_coding_quadtree_hls_depth;
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 0; a = 8;
    if (scalar_rdat_vld[24][0][8]) begin
        hls_coding_quadtree_hls_ctb_left_flag <= scalar_rdat  [24][0][8];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 0; a = 10;
    if (scalar_rdat_vld[23][0][10]) begin
        hls_coding_quadtree_hls_ctb_up_flag <= scalar_rdat  [23][0][10];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 0; a = 7;
    if (scalar_rdat_vld[11][0][7]) begin
        hls_coding_quadtree_hls_cu_qp_delta_enabled_flag <= scalar_rdat  [11][0][7];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 1; a = 8;
    if (scalar_rdat_vld[13][1][8]) begin
        hls_coding_quadtree_hls_diff_cu_qp_delta_depth <= scalar_rdat  [13][1][8];
    end
    //------READ (scalar, global adr = 448) always block-----//
    //s = 16; r = 1; a = 4;
    if (scalar_rdat_vld[16][1][4]) begin
        hls_coding_quadtree_hls_cu_chroma_qp_offset_enabled_flag <= scalar_rdat  [16][1][4];
    end
    //------READ (scalar, global adr = 432) always block-----//
    //s = 12; r = 1; a = 7;
    if (scalar_rdat_vld[12][1][7]) begin
        hls_coding_quadtree_hls_diff_cu_chroma_qp_offset_depth <= scalar_rdat  [12][1][7];
    end
    //------READ (scalar, global adr = 1280) always block-----//
    //s = 0; r = 0; a = 13;
    if (scalar_rdat_vld[0][0][13]) begin
        hls_coding_quadtree_hls_dc_tab_ct_depth_p <= scalar_rdat  [0][0][13];
    end
`endif
    //============================================================
    //hls_coding_quadtree_hls_dup1       (f = 15)
    //============================================================
`ifdef enable_connect_hls_coding_quadtree_hls_dup1
    //------READ (scalar, global adr = 300) always block-----//
    //s = 11; r = 1; a = 6;
    if (scalar_rdat_vld[11][1][6]) begin
        hls_coding_quadtree_hls_dup1_x1_o_r <= scalar_rdat  [11][1][6];    //bidir
    end
    //------WRITE (scalar, global adr = 300) always block-----//
    //s = 11; r = 1; a = 0;
    hls_coding_quadtree_hls_dup1_x1_o_ap_vld_r <= hls_coding_quadtree_hls_dup1_x1_o_ap_vld;
    if (hls_coding_quadtree_hls_dup1_x1_o_ap_vld) begin
        hls_coding_quadtree_hls_dup1_x1_o_r <= hls_coding_quadtree_hls_dup1_x1_o;
    end
    //------READ (scalar, global adr = 304) always block-----//
    //s = 12; r = 0; a = 9;
    if (scalar_rdat_vld[12][0][9]) begin
        hls_coding_quadtree_hls_dup1_y1_o_r <= scalar_rdat  [12][0][9];    //bidir
    end
    //------WRITE (scalar, global adr = 304) always block-----//
    //s = 12; r = 1; a = 0;
    hls_coding_quadtree_hls_dup1_y1_o_ap_vld_r <= hls_coding_quadtree_hls_dup1_y1_o_ap_vld;
    if (hls_coding_quadtree_hls_dup1_y1_o_ap_vld) begin
        hls_coding_quadtree_hls_dup1_y1_o_r <= hls_coding_quadtree_hls_dup1_y1_o;
    end
    //------READ (scalar, global adr = 312) always block-----//
    //s = 14; r = 0; a = 9;
    if (scalar_rdat_vld[14][0][9]) begin
        hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_r <= scalar_rdat  [14][0][9];    //bidir
    end
    //------WRITE (scalar, global adr = 312) always block-----//
    //s = 14; r = 0; a = 1;
    hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_ap_vld_r <= hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_ap_vld;
    if (hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_ap_vld) begin
        hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_r <= hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o;
    end
    //------READ (scalar, global adr = 316) always block-----//
    //s = 15; r = 0; a = 7;
    if (scalar_rdat_vld[15][0][7]) begin
        hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_r <= scalar_rdat  [15][0][7];    //bidir
    end
    //------WRITE (scalar, global adr = 316) always block-----//
    //s = 15; r = 0; a = 1;
    hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_ap_vld_r <= hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_ap_vld;
    if (hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_ap_vld) begin
        hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_r <= hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o;
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 1; a = 8;
    if (scalar_rdat_vld[6][1][8]) begin
        hls_coding_quadtree_hls_dup1_width <= scalar_rdat  [6][1][8];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 1; a = 5;
    if (scalar_rdat_vld[19][1][5]) begin
        hls_coding_quadtree_hls_dup1_height <= scalar_rdat  [19][1][5];
    end
    //------READ (scalar, global adr = 292) always block-----//
    //s = 9; r = 0; a = 10;
    if (scalar_rdat_vld[9][0][10]) begin
        hls_coding_quadtree_hls_dup1_split_cu_flag_o_r <= scalar_rdat  [9][0][10];    //bidir
    end
    //------WRITE (scalar, global adr = 292) always block-----//
    //s = 9; r = 0; a = 1;
    hls_coding_quadtree_hls_dup1_split_cu_flag_o_ap_vld_r <= hls_coding_quadtree_hls_dup1_split_cu_flag_o_ap_vld;
    if (hls_coding_quadtree_hls_dup1_split_cu_flag_o_ap_vld) begin
        hls_coding_quadtree_hls_dup1_split_cu_flag_o_r <= hls_coding_quadtree_hls_dup1_split_cu_flag_o;
    end
    //------READ (scalar, global adr = 296) always block-----//
    //s = 10; r = 0; a = 11;
    if (scalar_rdat_vld[10][0][11]) begin
        hls_coding_quadtree_hls_dup1_more_data_o_r <= scalar_rdat  [10][0][11];    //bidir
    end
    //------WRITE (scalar, global adr = 296) always block-----//
    //s = 10; r = 0; a = 1;
    hls_coding_quadtree_hls_dup1_more_data_o_ap_vld_r <= hls_coding_quadtree_hls_dup1_more_data_o_ap_vld;
    if (hls_coding_quadtree_hls_dup1_more_data_o_ap_vld) begin
        hls_coding_quadtree_hls_dup1_more_data_o_r <= hls_coding_quadtree_hls_dup1_more_data_o;
    end
    //------READ (scalar, global adr = 1324) always block-----//
    //s = 11; r = 0; a = 8;
    if (scalar_rdat_vld[11][0][8]) begin
        hls_coding_quadtree_hls_dup1_rv_hls_coding_unit <= scalar_rdat  [11][0][8];
    end
    //------READ (scalar, global adr = 1236) always block-----//
    //s = 21; r = 1; a = 10;
    if (scalar_rdat_vld[21][1][10]) begin
        hls_coding_quadtree_hls_dup1_rv_callback_flag <= scalar_rdat  [21][1][10];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 7;
    if (scalar_rdat_vld[26][1][7]) begin
        hls_coding_quadtree_hls_dup1_log2_ctb_size <= scalar_rdat  [26][1][7];
    end
    //------WRITE (scalar, global adr = 540) always block-----//
    //s = 7; r = 1; a = 0;
    hls_coding_quadtree_hls_dup1_qPy_pred_ap_vld_r <= hls_coding_quadtree_hls_dup1_qPy_pred_ap_vld;
    if (hls_coding_quadtree_hls_dup1_qPy_pred_ap_vld) begin
        hls_coding_quadtree_hls_dup1_qPy_pred_r <= hls_coding_quadtree_hls_dup1_qPy_pred;
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 0; a = 9;
    if (scalar_rdat_vld[6][0][9]) begin
        hls_coding_quadtree_hls_dup1_qp_y <= scalar_rdat  [6][0][9];
    end
    //------READ (scalar, global adr = 40) always block-----//
    //s = 10; r = 1; a = 10;
    if (scalar_rdat_vld[10][1][10]) begin
        hls_coding_quadtree_hls_dup1_qp_block_mask_o_r <= scalar_rdat  [10][1][10];    //bidir
    end
    //------WRITE (scalar, global adr = 40) always block-----//
    //s = 10; r = 1; a = 1;
    hls_coding_quadtree_hls_dup1_qp_block_mask_o_ap_vld_r <= hls_coding_quadtree_hls_dup1_qp_block_mask_o_ap_vld;
    if (hls_coding_quadtree_hls_dup1_qp_block_mask_o_ap_vld) begin
        hls_coding_quadtree_hls_dup1_qp_block_mask_o_r <= hls_coding_quadtree_hls_dup1_qp_block_mask_o;
    end
    //------READ (scalar, global adr = 308) always block-----//
    //s = 13; r = 0; a = 10;
    if (scalar_rdat_vld[13][0][10]) begin
        hls_coding_quadtree_hls_dup1_cb_size_split_o_r <= scalar_rdat  [13][0][10];    //bidir
    end
    //------WRITE (scalar, global adr = 308) always block-----//
    //s = 13; r = 0; a = 1;
    hls_coding_quadtree_hls_dup1_cb_size_split_o_ap_vld_r <= hls_coding_quadtree_hls_dup1_cb_size_split_o_ap_vld;
    if (hls_coding_quadtree_hls_dup1_cb_size_split_o_ap_vld) begin
        hls_coding_quadtree_hls_dup1_cb_size_split_o_r <= hls_coding_quadtree_hls_dup1_cb_size_split_o;
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 0; a = 8;
    if (scalar_rdat_vld[28][0][8]) begin
        hls_coding_quadtree_hls_dup1_log2_min_cb_size <= scalar_rdat  [28][0][8];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 0; a = 6;
    if (scalar_rdat_vld[2][0][6]) begin
        hls_coding_quadtree_hls_dup1_min_cb_width <= scalar_rdat  [2][0][6];
    end
    //------WRITE (scalar, global adr = 476) always block-----//
    //s = 23; r = 0; a = 1;
    hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_ap_vld_r <= hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_ap_vld;
    if (hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_ap_vld) begin
        hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_r <= hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded;
    end
    //------WRITE (scalar, global adr = 468) always block-----//
    //s = 21; r = 1; a = 1;
    hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_ap_vld_r <= hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_ap_vld;
    if (hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_ap_vld) begin
        hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_r <= hls_coding_quadtree_hls_dup1_tu_cu_qp_delta;
    end
    //------WRITE (scalar, global adr = 472) always block-----//
    //s = 22; r = 1; a = 1;
    hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_ap_vld_r <= hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_ap_vld;
    if (hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_ap_vld) begin
        hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_r <= hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded;
    end
    //------WRITE (scalar, global adr = 464) always block-----//
    //s = 20; r = 1; a = 1;
    hls_coding_quadtree_hls_dup1_depth_ap_vld_r <= hls_coding_quadtree_hls_dup1_depth_ap_vld;
    if (hls_coding_quadtree_hls_dup1_depth_ap_vld) begin
        hls_coding_quadtree_hls_dup1_depth_r <= hls_coding_quadtree_hls_dup1_depth;
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 7;
    if (scalar_rdat_vld[24][1][7]) begin
        hls_coding_quadtree_hls_dup1_ctb_left_flag <= scalar_rdat  [24][1][7];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 9;
    if (scalar_rdat_vld[23][1][9]) begin
        hls_coding_quadtree_hls_dup1_ctb_up_flag <= scalar_rdat  [23][1][9];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 1; a = 7;
    if (scalar_rdat_vld[11][1][7]) begin
        hls_coding_quadtree_hls_dup1_cu_qp_delta_enabled_flag <= scalar_rdat  [11][1][7];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 1; a = 9;
    if (scalar_rdat_vld[13][1][9]) begin
        hls_coding_quadtree_hls_dup1_diff_cu_qp_delta_depth <= scalar_rdat  [13][1][9];
    end
    //------READ (scalar, global adr = 448) always block-----//
    //s = 16; r = 0; a = 5;
    if (scalar_rdat_vld[16][0][5]) begin
        hls_coding_quadtree_hls_dup1_cu_chroma_qp_offset_enabled_flag <= scalar_rdat  [16][0][5];
    end
    //------READ (scalar, global adr = 432) always block-----//
    //s = 12; r = 1; a = 8;
    if (scalar_rdat_vld[12][1][8]) begin
        hls_coding_quadtree_hls_dup1_diff_cu_chroma_qp_offset_depth <= scalar_rdat  [12][1][8];
    end
    //------READ (scalar, global adr = 1280) always block-----//
    //s = 0; r = 1; a = 12;
    if (scalar_rdat_vld[0][1][12]) begin
        hls_coding_quadtree_hls_dup1_dc_tab_ct_depth_p <= scalar_rdat  [0][1][12];
    end
`endif
    //============================================================
    //hls_coding_quadtree_hls_dup2       (f = 16)
    //============================================================
`ifdef enable_connect_hls_coding_quadtree_hls_dup2
    //------READ (scalar, global adr = 300) always block-----//
    //s = 11; r = 0; a = 9;
    if (scalar_rdat_vld[11][0][9]) begin
        hls_coding_quadtree_hls_dup2_x1_o_r <= scalar_rdat  [11][0][9];    //bidir
    end
    //------WRITE (scalar, global adr = 300) always block-----//
    //s = 11; r = 0; a = 1;
    hls_coding_quadtree_hls_dup2_x1_o_ap_vld_r <= hls_coding_quadtree_hls_dup2_x1_o_ap_vld;
    if (hls_coding_quadtree_hls_dup2_x1_o_ap_vld) begin
        hls_coding_quadtree_hls_dup2_x1_o_r <= hls_coding_quadtree_hls_dup2_x1_o;
    end
    //------READ (scalar, global adr = 304) always block-----//
    //s = 12; r = 0; a = 10;
    if (scalar_rdat_vld[12][0][10]) begin
        hls_coding_quadtree_hls_dup2_y1_o_r <= scalar_rdat  [12][0][10];    //bidir
    end
    //------WRITE (scalar, global adr = 304) always block-----//
    //s = 12; r = 0; a = 1;
    hls_coding_quadtree_hls_dup2_y1_o_ap_vld_r <= hls_coding_quadtree_hls_dup2_y1_o_ap_vld;
    if (hls_coding_quadtree_hls_dup2_y1_o_ap_vld) begin
        hls_coding_quadtree_hls_dup2_y1_o_r <= hls_coding_quadtree_hls_dup2_y1_o;
    end
    //------READ (scalar, global adr = 312) always block-----//
    //s = 14; r = 1; a = 8;
    if (scalar_rdat_vld[14][1][8]) begin
        hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_r <= scalar_rdat  [14][1][8];    //bidir
    end
    //------WRITE (scalar, global adr = 312) always block-----//
    //s = 14; r = 1; a = 1;
    hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_ap_vld_r <= hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_ap_vld;
    if (hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_ap_vld) begin
        hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_r <= hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o;
    end
    //------READ (scalar, global adr = 316) always block-----//
    //s = 15; r = 1; a = 6;
    if (scalar_rdat_vld[15][1][6]) begin
        hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_r <= scalar_rdat  [15][1][6];    //bidir
    end
    //------WRITE (scalar, global adr = 316) always block-----//
    //s = 15; r = 1; a = 1;
    hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_ap_vld_r <= hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_ap_vld;
    if (hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_ap_vld) begin
        hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_r <= hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o;
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 1; a = 9;
    if (scalar_rdat_vld[6][1][9]) begin
        hls_coding_quadtree_hls_dup2_width <= scalar_rdat  [6][1][9];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 0; a = 6;
    if (scalar_rdat_vld[19][0][6]) begin
        hls_coding_quadtree_hls_dup2_height <= scalar_rdat  [19][0][6];
    end
    //------READ (scalar, global adr = 292) always block-----//
    //s = 9; r = 1; a = 10;
    if (scalar_rdat_vld[9][1][10]) begin
        hls_coding_quadtree_hls_dup2_split_cu_flag_o_r <= scalar_rdat  [9][1][10];    //bidir
    end
    //------WRITE (scalar, global adr = 292) always block-----//
    //s = 9; r = 1; a = 1;
    hls_coding_quadtree_hls_dup2_split_cu_flag_o_ap_vld_r <= hls_coding_quadtree_hls_dup2_split_cu_flag_o_ap_vld;
    if (hls_coding_quadtree_hls_dup2_split_cu_flag_o_ap_vld) begin
        hls_coding_quadtree_hls_dup2_split_cu_flag_o_r <= hls_coding_quadtree_hls_dup2_split_cu_flag_o;
    end
    //------READ (scalar, global adr = 296) always block-----//
    //s = 10; r = 0; a = 12;
    if (scalar_rdat_vld[10][0][12]) begin
        hls_coding_quadtree_hls_dup2_more_data_o_r <= scalar_rdat  [10][0][12];    //bidir
    end
    //------WRITE (scalar, global adr = 296) always block-----//
    //s = 10; r = 0; a = 2;
    hls_coding_quadtree_hls_dup2_more_data_o_ap_vld_r <= hls_coding_quadtree_hls_dup2_more_data_o_ap_vld;
    if (hls_coding_quadtree_hls_dup2_more_data_o_ap_vld) begin
        hls_coding_quadtree_hls_dup2_more_data_o_r <= hls_coding_quadtree_hls_dup2_more_data_o;
    end
    //------READ (scalar, global adr = 1324) always block-----//
    //s = 11; r = 1; a = 8;
    if (scalar_rdat_vld[11][1][8]) begin
        hls_coding_quadtree_hls_dup2_rv_hls_coding_unit <= scalar_rdat  [11][1][8];
    end
    //------READ (scalar, global adr = 1236) always block-----//
    //s = 21; r = 0; a = 12;
    if (scalar_rdat_vld[21][0][12]) begin
        hls_coding_quadtree_hls_dup2_rv_callback_flag <= scalar_rdat  [21][0][12];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 9;
    if (scalar_rdat_vld[26][0][9]) begin
        hls_coding_quadtree_hls_dup2_log2_ctb_size <= scalar_rdat  [26][0][9];
    end
    //------WRITE (scalar, global adr = 540) always block-----//
    //s = 7; r = 0; a = 1;
    hls_coding_quadtree_hls_dup2_qPy_pred_ap_vld_r <= hls_coding_quadtree_hls_dup2_qPy_pred_ap_vld;
    if (hls_coding_quadtree_hls_dup2_qPy_pred_ap_vld) begin
        hls_coding_quadtree_hls_dup2_qPy_pred_r <= hls_coding_quadtree_hls_dup2_qPy_pred;
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 0; a = 10;
    if (scalar_rdat_vld[6][0][10]) begin
        hls_coding_quadtree_hls_dup2_qp_y <= scalar_rdat  [6][0][10];
    end
    //------READ (scalar, global adr = 40) always block-----//
    //s = 10; r = 1; a = 11;
    if (scalar_rdat_vld[10][1][11]) begin
        hls_coding_quadtree_hls_dup2_qp_block_mask_o_r <= scalar_rdat  [10][1][11];    //bidir
    end
    //------WRITE (scalar, global adr = 40) always block-----//
    //s = 10; r = 1; a = 2;
    hls_coding_quadtree_hls_dup2_qp_block_mask_o_ap_vld_r <= hls_coding_quadtree_hls_dup2_qp_block_mask_o_ap_vld;
    if (hls_coding_quadtree_hls_dup2_qp_block_mask_o_ap_vld) begin
        hls_coding_quadtree_hls_dup2_qp_block_mask_o_r <= hls_coding_quadtree_hls_dup2_qp_block_mask_o;
    end
    //------READ (scalar, global adr = 308) always block-----//
    //s = 13; r = 0; a = 11;
    if (scalar_rdat_vld[13][0][11]) begin
        hls_coding_quadtree_hls_dup2_cb_size_split_o_r <= scalar_rdat  [13][0][11];    //bidir
    end
    //------WRITE (scalar, global adr = 308) always block-----//
    //s = 13; r = 1; a = 1;
    hls_coding_quadtree_hls_dup2_cb_size_split_o_ap_vld_r <= hls_coding_quadtree_hls_dup2_cb_size_split_o_ap_vld;
    if (hls_coding_quadtree_hls_dup2_cb_size_split_o_ap_vld) begin
        hls_coding_quadtree_hls_dup2_cb_size_split_o_r <= hls_coding_quadtree_hls_dup2_cb_size_split_o;
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 1; a = 8;
    if (scalar_rdat_vld[28][1][8]) begin
        hls_coding_quadtree_hls_dup2_log2_min_cb_size <= scalar_rdat  [28][1][8];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 1; a = 5;
    if (scalar_rdat_vld[2][1][5]) begin
        hls_coding_quadtree_hls_dup2_min_cb_width <= scalar_rdat  [2][1][5];
    end
    //------WRITE (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 1;
    hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_ap_vld_r <= hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_ap_vld;
    if (hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_ap_vld) begin
        hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_r <= hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded;
    end
    //------WRITE (scalar, global adr = 468) always block-----//
    //s = 21; r = 0; a = 2;
    hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_ap_vld_r <= hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_ap_vld;
    if (hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_ap_vld) begin
        hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_r <= hls_coding_quadtree_hls_dup2_tu_cu_qp_delta;
    end
    //------WRITE (scalar, global adr = 472) always block-----//
    //s = 22; r = 0; a = 2;
    hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_ap_vld_r <= hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_ap_vld;
    if (hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_ap_vld) begin
        hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_r <= hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded;
    end
    //------WRITE (scalar, global adr = 464) always block-----//
    //s = 20; r = 0; a = 2;
    hls_coding_quadtree_hls_dup2_depth_ap_vld_r <= hls_coding_quadtree_hls_dup2_depth_ap_vld;
    if (hls_coding_quadtree_hls_dup2_depth_ap_vld) begin
        hls_coding_quadtree_hls_dup2_depth_r <= hls_coding_quadtree_hls_dup2_depth;
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 0; a = 9;
    if (scalar_rdat_vld[24][0][9]) begin
        hls_coding_quadtree_hls_dup2_ctb_left_flag <= scalar_rdat  [24][0][9];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 0; a = 11;
    if (scalar_rdat_vld[23][0][11]) begin
        hls_coding_quadtree_hls_dup2_ctb_up_flag <= scalar_rdat  [23][0][11];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 0; a = 10;
    if (scalar_rdat_vld[11][0][10]) begin
        hls_coding_quadtree_hls_dup2_cu_qp_delta_enabled_flag <= scalar_rdat  [11][0][10];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 1; a = 10;
    if (scalar_rdat_vld[13][1][10]) begin
        hls_coding_quadtree_hls_dup2_diff_cu_qp_delta_depth <= scalar_rdat  [13][1][10];
    end
    //------READ (scalar, global adr = 448) always block-----//
    //s = 16; r = 1; a = 5;
    if (scalar_rdat_vld[16][1][5]) begin
        hls_coding_quadtree_hls_dup2_cu_chroma_qp_offset_enabled_flag <= scalar_rdat  [16][1][5];
    end
    //------READ (scalar, global adr = 432) always block-----//
    //s = 12; r = 1; a = 9;
    if (scalar_rdat_vld[12][1][9]) begin
        hls_coding_quadtree_hls_dup2_diff_cu_chroma_qp_offset_depth <= scalar_rdat  [12][1][9];
    end
    //------READ (scalar, global adr = 1280) always block-----//
    //s = 0; r = 0; a = 14;
    if (scalar_rdat_vld[0][0][14]) begin
        hls_coding_quadtree_hls_dup2_dc_tab_ct_depth_p <= scalar_rdat  [0][0][14];
    end
`endif
    //============================================================
    //hls_coding_quadtree_hls_dup3       (f = 17)
    //============================================================
`ifdef enable_connect_hls_coding_quadtree_hls_dup3
    //------READ (scalar, global adr = 300) always block-----//
    //s = 11; r = 1; a = 9;
    if (scalar_rdat_vld[11][1][9]) begin
        hls_coding_quadtree_hls_dup3_x1_o_r <= scalar_rdat  [11][1][9];    //bidir
    end
    //------WRITE (scalar, global adr = 300) always block-----//
    //s = 11; r = 1; a = 1;
    hls_coding_quadtree_hls_dup3_x1_o_ap_vld_r <= hls_coding_quadtree_hls_dup3_x1_o_ap_vld;
    if (hls_coding_quadtree_hls_dup3_x1_o_ap_vld) begin
        hls_coding_quadtree_hls_dup3_x1_o_r <= hls_coding_quadtree_hls_dup3_x1_o;
    end
    //------READ (scalar, global adr = 304) always block-----//
    //s = 12; r = 0; a = 11;
    if (scalar_rdat_vld[12][0][11]) begin
        hls_coding_quadtree_hls_dup3_y1_o_r <= scalar_rdat  [12][0][11];    //bidir
    end
    //------WRITE (scalar, global adr = 304) always block-----//
    //s = 12; r = 1; a = 1;
    hls_coding_quadtree_hls_dup3_y1_o_ap_vld_r <= hls_coding_quadtree_hls_dup3_y1_o_ap_vld;
    if (hls_coding_quadtree_hls_dup3_y1_o_ap_vld) begin
        hls_coding_quadtree_hls_dup3_y1_o_r <= hls_coding_quadtree_hls_dup3_y1_o;
    end
    //------READ (scalar, global adr = 312) always block-----//
    //s = 14; r = 0; a = 10;
    if (scalar_rdat_vld[14][0][10]) begin
        hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_r <= scalar_rdat  [14][0][10];    //bidir
    end
    //------WRITE (scalar, global adr = 312) always block-----//
    //s = 14; r = 0; a = 2;
    hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_ap_vld_r <= hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_ap_vld;
    if (hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_ap_vld) begin
        hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_r <= hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o;
    end
    //------READ (scalar, global adr = 316) always block-----//
    //s = 15; r = 0; a = 8;
    if (scalar_rdat_vld[15][0][8]) begin
        hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_r <= scalar_rdat  [15][0][8];    //bidir
    end
    //------WRITE (scalar, global adr = 316) always block-----//
    //s = 15; r = 0; a = 2;
    hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_ap_vld_r <= hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_ap_vld;
    if (hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_ap_vld) begin
        hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_r <= hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o;
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 1; a = 10;
    if (scalar_rdat_vld[6][1][10]) begin
        hls_coding_quadtree_hls_dup3_width <= scalar_rdat  [6][1][10];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 1; a = 6;
    if (scalar_rdat_vld[19][1][6]) begin
        hls_coding_quadtree_hls_dup3_height <= scalar_rdat  [19][1][6];
    end
    //------READ (scalar, global adr = 292) always block-----//
    //s = 9; r = 0; a = 11;
    if (scalar_rdat_vld[9][0][11]) begin
        hls_coding_quadtree_hls_dup3_split_cu_flag_o_r <= scalar_rdat  [9][0][11];    //bidir
    end
    //------WRITE (scalar, global adr = 292) always block-----//
    //s = 9; r = 0; a = 2;
    hls_coding_quadtree_hls_dup3_split_cu_flag_o_ap_vld_r <= hls_coding_quadtree_hls_dup3_split_cu_flag_o_ap_vld;
    if (hls_coding_quadtree_hls_dup3_split_cu_flag_o_ap_vld) begin
        hls_coding_quadtree_hls_dup3_split_cu_flag_o_r <= hls_coding_quadtree_hls_dup3_split_cu_flag_o;
    end
    //------READ (scalar, global adr = 296) always block-----//
    //s = 10; r = 0; a = 13;
    if (scalar_rdat_vld[10][0][13]) begin
        hls_coding_quadtree_hls_dup3_more_data_o_r <= scalar_rdat  [10][0][13];    //bidir
    end
    //------WRITE (scalar, global adr = 296) always block-----//
    //s = 10; r = 0; a = 3;
    hls_coding_quadtree_hls_dup3_more_data_o_ap_vld_r <= hls_coding_quadtree_hls_dup3_more_data_o_ap_vld;
    if (hls_coding_quadtree_hls_dup3_more_data_o_ap_vld) begin
        hls_coding_quadtree_hls_dup3_more_data_o_r <= hls_coding_quadtree_hls_dup3_more_data_o;
    end
    //------READ (scalar, global adr = 1324) always block-----//
    //s = 11; r = 0; a = 11;
    if (scalar_rdat_vld[11][0][11]) begin
        hls_coding_quadtree_hls_dup3_rv_hls_coding_unit <= scalar_rdat  [11][0][11];
    end
    //------READ (scalar, global adr = 1236) always block-----//
    //s = 21; r = 1; a = 11;
    if (scalar_rdat_vld[21][1][11]) begin
        hls_coding_quadtree_hls_dup3_rv_callback_flag <= scalar_rdat  [21][1][11];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 8;
    if (scalar_rdat_vld[26][1][8]) begin
        hls_coding_quadtree_hls_dup3_log2_ctb_size <= scalar_rdat  [26][1][8];
    end
    //------WRITE (scalar, global adr = 540) always block-----//
    //s = 7; r = 1; a = 1;
    hls_coding_quadtree_hls_dup3_qPy_pred_ap_vld_r <= hls_coding_quadtree_hls_dup3_qPy_pred_ap_vld;
    if (hls_coding_quadtree_hls_dup3_qPy_pred_ap_vld) begin
        hls_coding_quadtree_hls_dup3_qPy_pred_r <= hls_coding_quadtree_hls_dup3_qPy_pred;
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 0; a = 11;
    if (scalar_rdat_vld[6][0][11]) begin
        hls_coding_quadtree_hls_dup3_qp_y <= scalar_rdat  [6][0][11];
    end
    //------READ (scalar, global adr = 40) always block-----//
    //s = 10; r = 1; a = 12;
    if (scalar_rdat_vld[10][1][12]) begin
        hls_coding_quadtree_hls_dup3_qp_block_mask_o_r <= scalar_rdat  [10][1][12];    //bidir
    end
    //------WRITE (scalar, global adr = 40) always block-----//
    //s = 10; r = 1; a = 3;
    hls_coding_quadtree_hls_dup3_qp_block_mask_o_ap_vld_r <= hls_coding_quadtree_hls_dup3_qp_block_mask_o_ap_vld;
    if (hls_coding_quadtree_hls_dup3_qp_block_mask_o_ap_vld) begin
        hls_coding_quadtree_hls_dup3_qp_block_mask_o_r <= hls_coding_quadtree_hls_dup3_qp_block_mask_o;
    end
    //------READ (scalar, global adr = 308) always block-----//
    //s = 13; r = 0; a = 12;
    if (scalar_rdat_vld[13][0][12]) begin
        hls_coding_quadtree_hls_dup3_cb_size_split_o_r <= scalar_rdat  [13][0][12];    //bidir
    end
    //------WRITE (scalar, global adr = 308) always block-----//
    //s = 13; r = 0; a = 2;
    hls_coding_quadtree_hls_dup3_cb_size_split_o_ap_vld_r <= hls_coding_quadtree_hls_dup3_cb_size_split_o_ap_vld;
    if (hls_coding_quadtree_hls_dup3_cb_size_split_o_ap_vld) begin
        hls_coding_quadtree_hls_dup3_cb_size_split_o_r <= hls_coding_quadtree_hls_dup3_cb_size_split_o;
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 0; a = 9;
    if (scalar_rdat_vld[28][0][9]) begin
        hls_coding_quadtree_hls_dup3_log2_min_cb_size <= scalar_rdat  [28][0][9];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 0; a = 7;
    if (scalar_rdat_vld[2][0][7]) begin
        hls_coding_quadtree_hls_dup3_min_cb_width <= scalar_rdat  [2][0][7];
    end
    //------WRITE (scalar, global adr = 476) always block-----//
    //s = 23; r = 0; a = 2;
    hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_ap_vld_r <= hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_ap_vld;
    if (hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_ap_vld) begin
        hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_r <= hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded;
    end
    //------WRITE (scalar, global adr = 468) always block-----//
    //s = 21; r = 1; a = 2;
    hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_ap_vld_r <= hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_ap_vld;
    if (hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_ap_vld) begin
        hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_r <= hls_coding_quadtree_hls_dup3_tu_cu_qp_delta;
    end
    //------WRITE (scalar, global adr = 472) always block-----//
    //s = 22; r = 1; a = 2;
    hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_ap_vld_r <= hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_ap_vld;
    if (hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_ap_vld) begin
        hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_r <= hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded;
    end
    //------WRITE (scalar, global adr = 464) always block-----//
    //s = 20; r = 1; a = 2;
    hls_coding_quadtree_hls_dup3_depth_ap_vld_r <= hls_coding_quadtree_hls_dup3_depth_ap_vld;
    if (hls_coding_quadtree_hls_dup3_depth_ap_vld) begin
        hls_coding_quadtree_hls_dup3_depth_r <= hls_coding_quadtree_hls_dup3_depth;
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 8;
    if (scalar_rdat_vld[24][1][8]) begin
        hls_coding_quadtree_hls_dup3_ctb_left_flag <= scalar_rdat  [24][1][8];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 10;
    if (scalar_rdat_vld[23][1][10]) begin
        hls_coding_quadtree_hls_dup3_ctb_up_flag <= scalar_rdat  [23][1][10];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 1; a = 10;
    if (scalar_rdat_vld[11][1][10]) begin
        hls_coding_quadtree_hls_dup3_cu_qp_delta_enabled_flag <= scalar_rdat  [11][1][10];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 1; a = 11;
    if (scalar_rdat_vld[13][1][11]) begin
        hls_coding_quadtree_hls_dup3_diff_cu_qp_delta_depth <= scalar_rdat  [13][1][11];
    end
    //------READ (scalar, global adr = 448) always block-----//
    //s = 16; r = 0; a = 6;
    if (scalar_rdat_vld[16][0][6]) begin
        hls_coding_quadtree_hls_dup3_cu_chroma_qp_offset_enabled_flag <= scalar_rdat  [16][0][6];
    end
    //------READ (scalar, global adr = 432) always block-----//
    //s = 12; r = 1; a = 10;
    if (scalar_rdat_vld[12][1][10]) begin
        hls_coding_quadtree_hls_dup3_diff_cu_chroma_qp_offset_depth <= scalar_rdat  [12][1][10];
    end
    //------READ (scalar, global adr = 1280) always block-----//
    //s = 0; r = 1; a = 13;
    if (scalar_rdat_vld[0][1][13]) begin
        hls_coding_quadtree_hls_dup3_dc_tab_ct_depth_p <= scalar_rdat  [0][1][13];
    end
`endif
    //============================================================
    //hls_coding_unit_hls       (f = 18)
    //============================================================
`ifdef enable_connect_hls_coding_unit_hls
    //------READ (scalar, global adr = 420) always block-----//
    //s = 9; r = 1; a = 11;
    if (scalar_rdat_vld[9][1][11]) begin
        hls_coding_unit_hls_loop_filter_disable_flag <= scalar_rdat  [9][1][11];
    end
    //------READ (scalar, global adr = 380) always block-----//
    //s = 31; r = 0; a = 4;
    if (scalar_rdat_vld[31][0][4]) begin
        hls_coding_unit_hls_max_transform_hierarchy_depth_inter <= scalar_rdat  [31][0][4];
    end
    //------READ (scalar, global adr = 1160) always block-----//
    //s = 2; r = 1; a = 6;
    if (scalar_rdat_vld[2][1][6]) begin
        hls_coding_unit_hls_disable_deblocking_filter_flag <= scalar_rdat  [2][1][6];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 0; a = 12;
    if (scalar_rdat_vld[11][0][12]) begin
        hls_coding_unit_hls_cu_qp_delta_enabled_flag <= scalar_rdat  [11][0][12];
    end
    //------READ (scalar, global adr = 476) always block-----//
    //s = 23; r = 0; a = 12;
    if (scalar_rdat_vld[23][0][12]) begin
        hls_coding_unit_hls_tu_is_cu_qp_delta_coded <= scalar_rdat  [23][0][12];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 7;
    if (scalar_rdat_vld[15][1][7]) begin
        hls_coding_unit_hls_cu_transquant_bypass_flag_o_r <= scalar_rdat  [15][1][7];    //bidir
    end
    //------WRITE (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 2;
    hls_coding_unit_hls_cu_transquant_bypass_flag_o_ap_vld_r <= hls_coding_unit_hls_cu_transquant_bypass_flag_o_ap_vld;
    if (hls_coding_unit_hls_cu_transquant_bypass_flag_o_ap_vld) begin
        hls_coding_unit_hls_cu_transquant_bypass_flag_o_r <= hls_coding_unit_hls_cu_transquant_bypass_flag_o;
    end
    //------READ (scalar, global adr = 28) always block-----//
    //s = 7; r = 0; a = 10;
    if (scalar_rdat_vld[7][0][10]) begin
        hls_coding_unit_hls_pcm_flag_o_r <= scalar_rdat  [7][0][10];    //bidir
    end
    //------WRITE (scalar, global adr = 28) always block-----//
    //s = 7; r = 0; a = 2;
    hls_coding_unit_hls_pcm_flag_o_ap_vld_r <= hls_coding_unit_hls_pcm_flag_o_ap_vld;
    if (hls_coding_unit_hls_pcm_flag_o_ap_vld) begin
        hls_coding_unit_hls_pcm_flag_o_r <= hls_coding_unit_hls_pcm_flag_o;
    end
    //------READ (scalar, global adr = 504) always block-----//
    //s = 30; r = 0; a = 3;
    if (scalar_rdat_vld[30][0][3]) begin
        hls_coding_unit_hls_merge_flag <= scalar_rdat  [30][0][3];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 12;
    if (scalar_rdat_vld[12][0][12]) begin
        hls_coding_unit_hls_pred_mode_o_r <= scalar_rdat  [12][0][12];    //bidir
    end
    //------WRITE (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 2;
    hls_coding_unit_hls_pred_mode_o_ap_vld_r <= hls_coding_unit_hls_pred_mode_o_ap_vld;
    if (hls_coding_unit_hls_pred_mode_o_ap_vld) begin
        hls_coding_unit_hls_pred_mode_o_r <= hls_coding_unit_hls_pred_mode_o;
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 0; a = 13;
    if (scalar_rdat_vld[13][0][13]) begin
        hls_coding_unit_hls_part_mode_o_r <= scalar_rdat  [13][0][13];    //bidir
    end
    //------WRITE (scalar, global adr = 564) always block-----//
    //s = 13; r = 1; a = 2;
    hls_coding_unit_hls_part_mode_o_ap_vld_r <= hls_coding_unit_hls_part_mode_o_ap_vld;
    if (hls_coding_unit_hls_part_mode_o_ap_vld) begin
        hls_coding_unit_hls_part_mode_o_r <= hls_coding_unit_hls_part_mode_o;
    end
    //------WRITE (scalar, global adr = 576) always block-----//
    //s = 16; r = 1; a = 0;
    hls_coding_unit_hls_max_trafo_depth_ap_vld_r <= hls_coding_unit_hls_max_trafo_depth_ap_vld;
    if (hls_coding_unit_hls_max_trafo_depth_ap_vld) begin
        hls_coding_unit_hls_max_trafo_depth_r <= hls_coding_unit_hls_max_trafo_depth;
    end
    //------READ (scalar, global adr = 32) always block-----//
    //s = 8; r = 1; a = 7;
    if (scalar_rdat_vld[8][1][7]) begin
        hls_coding_unit_hls_cb_size_o_r <= scalar_rdat  [8][1][7];    //bidir
    end
    //------WRITE (scalar, global adr = 32) always block-----//
    //s = 8; r = 1; a = 0;
    hls_coding_unit_hls_cb_size_o_ap_vld_r <= hls_coding_unit_hls_cb_size_o_ap_vld;
    if (hls_coding_unit_hls_cb_size_o_ap_vld) begin
        hls_coding_unit_hls_cb_size_o_r <= hls_coding_unit_hls_cb_size_o;
    end
    //------READ (scalar, global adr = 44) always block-----//
    //s = 11; r = 1; a = 11;
    if (scalar_rdat_vld[11][1][11]) begin
        hls_coding_unit_hls_idx_o_r <= scalar_rdat  [11][1][11];    //bidir
    end
    //------WRITE (scalar, global adr = 44) always block-----//
    //s = 11; r = 0; a = 2;
    hls_coding_unit_hls_idx_o_ap_vld_r <= hls_coding_unit_hls_idx_o_ap_vld;
    if (hls_coding_unit_hls_idx_o_ap_vld) begin
        hls_coding_unit_hls_idx_o_r <= hls_coding_unit_hls_idx_o;
    end
    //------WRITE (scalar, global adr = 1164) always block-----//
    //s = 3; r = 0; a = 0;
    hls_coding_unit_hls_xm_xBase_ap_vld_r <= hls_coding_unit_hls_xm_xBase_ap_vld;
    if (hls_coding_unit_hls_xm_xBase_ap_vld) begin
        hls_coding_unit_hls_xm_xBase_r <= hls_coding_unit_hls_xm_xBase;
    end
    //------WRITE (scalar, global adr = 1168) always block-----//
    //s = 4; r = 0; a = 0;
    hls_coding_unit_hls_xm_yBase_ap_vld_r <= hls_coding_unit_hls_xm_yBase_ap_vld;
    if (hls_coding_unit_hls_xm_yBase_ap_vld) begin
        hls_coding_unit_hls_xm_yBase_r <= hls_coding_unit_hls_xm_yBase;
    end
    //------WRITE (scalar, global adr = 1172) always block-----//
    //s = 5; r = 1; a = 0;
    hls_coding_unit_hls_xm_cb_xBase_ap_vld_r <= hls_coding_unit_hls_xm_cb_xBase_ap_vld;
    if (hls_coding_unit_hls_xm_cb_xBase_ap_vld) begin
        hls_coding_unit_hls_xm_cb_xBase_r <= hls_coding_unit_hls_xm_cb_xBase;
    end
    //------WRITE (scalar, global adr = 1176) always block-----//
    //s = 6; r = 1; a = 0;
    hls_coding_unit_hls_xm_cb_yBase_ap_vld_r <= hls_coding_unit_hls_xm_cb_yBase_ap_vld;
    if (hls_coding_unit_hls_xm_cb_yBase_ap_vld) begin
        hls_coding_unit_hls_xm_cb_yBase_r <= hls_coding_unit_hls_xm_cb_yBase;
    end
    //------WRITE (scalar, global adr = 1180) always block-----//
    //s = 7; r = 1; a = 2;
    hls_coding_unit_hls_xm_log2_cb_size_ap_vld_r <= hls_coding_unit_hls_xm_log2_cb_size_ap_vld;
    if (hls_coding_unit_hls_xm_log2_cb_size_ap_vld) begin
        hls_coding_unit_hls_xm_log2_cb_size_r <= hls_coding_unit_hls_xm_log2_cb_size;
    end
    //------READ (scalar, global adr = 1336) always block-----//
    //s = 14; r = 1; a = 9;
    if (scalar_rdat_vld[14][1][9]) begin
        hls_coding_unit_hls_rv_set_deblocking_bypass <= scalar_rdat  [14][1][9];
    end
    //------READ (scalar, global adr = 1332) always block-----//
    //s = 13; r = 1; a = 12;
    if (scalar_rdat_vld[13][1][12]) begin
        hls_coding_unit_hls_rv_ff_hevc_deblocking_boundary_strengths <= scalar_rdat  [13][1][12];
    end
    //------READ (scalar, global adr = 1340) always block-----//
    //s = 15; r = 0; a = 9;
    if (scalar_rdat_vld[15][0][9]) begin
        hls_coding_unit_hls_rv_hls_pcm_sample <= scalar_rdat  [15][0][9];
    end
    //------READ (scalar, global adr = 1344) always block-----//
    //s = 16; r = 1; a = 6;
    if (scalar_rdat_vld[16][1][6]) begin
        hls_coding_unit_hls_rv_hls_prediction_unit <= scalar_rdat  [16][1][6];
    end
    //------READ (scalar, global adr = 1348) always block-----//
    //s = 17; r = 1; a = 4;
    if (scalar_rdat_vld[17][1][4]) begin
        hls_coding_unit_hls_rv_hls_intra_prediction_unit <= scalar_rdat  [17][1][4];
    end
    //------READ (scalar, global adr = 1352) always block-----//
    //s = 18; r = 1; a = 4;
    if (scalar_rdat_vld[18][1][4]) begin
        hls_coding_unit_hls_rv_hls_transform_tree <= scalar_rdat  [18][1][4];
    end
    //------READ (scalar, global adr = 1236) always block-----//
    //s = 21; r = 0; a = 13;
    if (scalar_rdat_vld[21][0][13]) begin
        hls_coding_unit_hls_rv_callback_flag <= scalar_rdat  [21][0][13];
    end
    //------WRITE (scalar, global adr = 36) always block-----//
    //s = 9; r = 1; a = 2;
    hls_coding_unit_hls_length_r_ap_vld_r <= hls_coding_unit_hls_length_r_ap_vld;
    if (hls_coding_unit_hls_length_r_ap_vld) begin
        hls_coding_unit_hls_length_r_r <= hls_coding_unit_hls_length_r;
    end
    //------WRITE (scalar, global adr = 544) always block-----//
    //s = 8; r = 0; a = 1;
    hls_coding_unit_hls_xm_x_ap_vld_r <= hls_coding_unit_hls_xm_x_ap_vld;
    if (hls_coding_unit_hls_xm_x_ap_vld) begin
        hls_coding_unit_hls_xm_x_r <= hls_coding_unit_hls_xm_x;
    end
    //------WRITE (scalar, global adr = 548) always block-----//
    //s = 9; r = 0; a = 3;
    hls_coding_unit_hls_xm_y_ap_vld_r <= hls_coding_unit_hls_xm_y_ap_vld;
    if (hls_coding_unit_hls_xm_y_ap_vld) begin
        hls_coding_unit_hls_xm_y_r <= hls_coding_unit_hls_xm_y;
    end
    //------WRITE (scalar, complete partition, global adr = 512) always block -----//
    //s = 0; r = 1; a = 0;
    hls_coding_unit_hls_pu_intra_pred_mode_0_ap_vld_r <= hls_coding_unit_hls_pu_intra_pred_mode_0_ap_vld;
    if (hls_coding_unit_hls_pu_intra_pred_mode_0_ap_vld) begin
        hls_coding_unit_hls_pu_intra_pred_mode_0_r <= hls_coding_unit_hls_pu_intra_pred_mode_0;
    end
    //------WRITE (scalar, complete partition, global adr = 513) always block -----//
    //s = 0; r = 0; a = 1;
    hls_coding_unit_hls_pu_intra_pred_mode_1_ap_vld_r <= hls_coding_unit_hls_pu_intra_pred_mode_1_ap_vld;
    if (hls_coding_unit_hls_pu_intra_pred_mode_1_ap_vld) begin
        hls_coding_unit_hls_pu_intra_pred_mode_1_r <= hls_coding_unit_hls_pu_intra_pred_mode_1;
    end
    //------WRITE (scalar, complete partition, global adr = 514) always block -----//
    //s = 0; r = 1; a = 1;
    hls_coding_unit_hls_pu_intra_pred_mode_2_ap_vld_r <= hls_coding_unit_hls_pu_intra_pred_mode_2_ap_vld;
    if (hls_coding_unit_hls_pu_intra_pred_mode_2_ap_vld) begin
        hls_coding_unit_hls_pu_intra_pred_mode_2_r <= hls_coding_unit_hls_pu_intra_pred_mode_2;
    end
    //------WRITE (scalar, complete partition, global adr = 515) always block -----//
    //s = 0; r = 0; a = 2;
    hls_coding_unit_hls_pu_intra_pred_mode_3_ap_vld_r <= hls_coding_unit_hls_pu_intra_pred_mode_3_ap_vld;
    if (hls_coding_unit_hls_pu_intra_pred_mode_3_ap_vld) begin
        hls_coding_unit_hls_pu_intra_pred_mode_3_r <= hls_coding_unit_hls_pu_intra_pred_mode_3;
    end
    //------WRITE (scalar, global adr = 540) always block-----//
    //s = 7; r = 0; a = 3;
    hls_coding_unit_hls_qPy_pred_ap_vld_r <= hls_coding_unit_hls_qPy_pred_ap_vld;
    if (hls_coding_unit_hls_qPy_pred_ap_vld) begin
        hls_coding_unit_hls_qPy_pred_r <= hls_coding_unit_hls_qPy_pred;
    end
    //------WRITE (scalar, global adr = 24) always block-----//
    //s = 6; r = 0; a = 1;
    hls_coding_unit_hls_skip_flag_start_ap_vld_r <= hls_coding_unit_hls_skip_flag_start_ap_vld;
    if (hls_coding_unit_hls_skip_flag_start_ap_vld) begin
        hls_coding_unit_hls_skip_flag_start_r <= hls_coding_unit_hls_skip_flag_start;
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 1; a = 9;
    if (scalar_rdat_vld[28][1][9]) begin
        hls_coding_unit_hls_log2_min_cb_size <= scalar_rdat  [28][1][9];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 10;
    if (scalar_rdat_vld[26][0][10]) begin
        hls_coding_unit_hls_log2_ctb_size <= scalar_rdat  [26][0][10];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 0; a = 14;
    if (scalar_rdat_vld[13][0][14]) begin
        hls_coding_unit_hls_diff_cu_qp_delta_depth <= scalar_rdat  [13][0][14];
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 11;
    if (scalar_rdat_vld[6][1][11]) begin
        hls_coding_unit_hls_qp_y <= scalar_rdat  [6][1][11];
    end
    //------READ (scalar, global adr = 440) always block-----//
    //s = 14; r = 0; a = 11;
    if (scalar_rdat_vld[14][0][11]) begin
        hls_coding_unit_hls_transquant_bypass_enable_flag <= scalar_rdat  [14][0][11];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 0; a = 8;
    if (scalar_rdat_vld[2][0][8]) begin
        hls_coding_unit_hls_min_cb_width <= scalar_rdat  [2][0][8];
    end
    //------WRITE (scalar, global adr = 568) always block-----//
    //s = 14; r = 1; a = 2;
    hls_coding_unit_hls_intra_split_flag_ap_vld_r <= hls_coding_unit_hls_intra_split_flag_ap_vld;
    if (hls_coding_unit_hls_intra_split_flag_ap_vld) begin
        hls_coding_unit_hls_intra_split_flag_r <= hls_coding_unit_hls_intra_split_flag;
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 0; a = 5;
    if (scalar_rdat_vld[17][0][5]) begin
        hls_coding_unit_hls_slice_type <= scalar_rdat  [17][0][5];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 0; a = 10;
    if (scalar_rdat_vld[24][0][10]) begin
        hls_coding_unit_hls_ctb_left_flag <= scalar_rdat  [24][0][10];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 11;
    if (scalar_rdat_vld[23][1][11]) begin
        hls_coding_unit_hls_ctb_up_flag <= scalar_rdat  [23][1][11];
    end
    //------READ (scalar, global adr = 320) always block-----//
    //s = 16; r = 0; a = 7;
    if (scalar_rdat_vld[16][0][7]) begin
        hls_coding_unit_hls_amp_enabled_flag <= scalar_rdat  [16][0][7];
    end
    //------READ (scalar, global adr = 400) always block-----//
    //s = 4; r = 1; a = 4;
    if (scalar_rdat_vld[4][1][4]) begin
        hls_coding_unit_hls_pcm_enabled_flag <= scalar_rdat  [4][1][4];
    end
    //------READ (scalar, global adr = 412) always block-----//
    //s = 7; r = 1; a = 9;
    if (scalar_rdat_vld[7][1][9]) begin
        hls_coding_unit_hls_log2_min_pcm_cb_size <= scalar_rdat  [7][1][9];
    end
    //------READ (scalar, global adr = 416) always block-----//
    //s = 8; r = 0; a = 8;
    if (scalar_rdat_vld[8][0][8]) begin
        hls_coding_unit_hls_log2_max_pcm_cb_size <= scalar_rdat  [8][0][8];
    end
    //------READ (scalar, global adr = 464) always block-----//
    //s = 20; r = 0; a = 9;
    if (scalar_rdat_vld[20][0][9]) begin
        hls_coding_unit_hls_depth <= scalar_rdat  [20][0][9];
    end
    //------READ (scalar, global adr = 1288) always block-----//
    //s = 2; r = 1; a = 7;
    if (scalar_rdat_vld[2][1][7]) begin
        hls_coding_unit_hls_dc_skip_flag_p <= scalar_rdat  [2][1][7];
    end
    //------READ (scalar, global adr = 1272) always block-----//
    //s = 30; r = 1; a = 3;
    if (scalar_rdat_vld[30][1][3]) begin
        hls_coding_unit_hls_dc_qp_y_tab_p <= scalar_rdat  [30][1][3];
    end
    //------READ (scalar, global adr = 1280) always block-----//
    //s = 0; r = 0; a = 15;
    if (scalar_rdat_vld[0][0][15]) begin
        hls_coding_unit_hls_dc_tab_ct_depth_p <= scalar_rdat  [0][0][15];
    end
`endif
    //============================================================
    //hls_coding_unit_hls_dup1       (f = 19)
    //============================================================
`ifdef enable_connect_hls_coding_unit_hls_dup1
    //------READ (scalar, global adr = 420) always block-----//
    //s = 9; r = 0; a = 12;
    if (scalar_rdat_vld[9][0][12]) begin
        hls_coding_unit_hls_dup1_loop_filter_disable_flag <= scalar_rdat  [9][0][12];
    end
    //------READ (scalar, global adr = 380) always block-----//
    //s = 31; r = 1; a = 3;
    if (scalar_rdat_vld[31][1][3]) begin
        hls_coding_unit_hls_dup1_max_transform_hierarchy_depth_inter <= scalar_rdat  [31][1][3];
    end
    //------READ (scalar, global adr = 1160) always block-----//
    //s = 2; r = 0; a = 9;
    if (scalar_rdat_vld[2][0][9]) begin
        hls_coding_unit_hls_dup1_disable_deblocking_filter_flag <= scalar_rdat  [2][0][9];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 0; a = 13;
    if (scalar_rdat_vld[11][0][13]) begin
        hls_coding_unit_hls_dup1_cu_qp_delta_enabled_flag <= scalar_rdat  [11][0][13];
    end
    //------READ (scalar, global adr = 476) always block-----//
    //s = 23; r = 0; a = 13;
    if (scalar_rdat_vld[23][0][13]) begin
        hls_coding_unit_hls_dup1_tu_is_cu_qp_delta_coded <= scalar_rdat  [23][0][13];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 8;
    if (scalar_rdat_vld[15][1][8]) begin
        hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_r <= scalar_rdat  [15][1][8];    //bidir
    end
    //------WRITE (scalar, global adr = 572) always block-----//
    //s = 15; r = 0; a = 3;
    hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_ap_vld_r <= hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_ap_vld;
    if (hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_ap_vld) begin
        hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_r <= hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o;
    end
    //------READ (scalar, global adr = 28) always block-----//
    //s = 7; r = 0; a = 11;
    if (scalar_rdat_vld[7][0][11]) begin
        hls_coding_unit_hls_dup1_pcm_flag_o_r <= scalar_rdat  [7][0][11];    //bidir
    end
    //------WRITE (scalar, global adr = 28) always block-----//
    //s = 7; r = 1; a = 3;
    hls_coding_unit_hls_dup1_pcm_flag_o_ap_vld_r <= hls_coding_unit_hls_dup1_pcm_flag_o_ap_vld;
    if (hls_coding_unit_hls_dup1_pcm_flag_o_ap_vld) begin
        hls_coding_unit_hls_dup1_pcm_flag_o_r <= hls_coding_unit_hls_dup1_pcm_flag_o;
    end
    //------READ (scalar, global adr = 504) always block-----//
    //s = 30; r = 0; a = 4;
    if (scalar_rdat_vld[30][0][4]) begin
        hls_coding_unit_hls_dup1_merge_flag <= scalar_rdat  [30][0][4];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 1; a = 11;
    if (scalar_rdat_vld[12][1][11]) begin
        hls_coding_unit_hls_dup1_pred_mode_o_r <= scalar_rdat  [12][1][11];    //bidir
    end
    //------WRITE (scalar, global adr = 560) always block-----//
    //s = 12; r = 1; a = 2;
    hls_coding_unit_hls_dup1_pred_mode_o_ap_vld_r <= hls_coding_unit_hls_dup1_pred_mode_o_ap_vld;
    if (hls_coding_unit_hls_dup1_pred_mode_o_ap_vld) begin
        hls_coding_unit_hls_dup1_pred_mode_o_r <= hls_coding_unit_hls_dup1_pred_mode_o;
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 1; a = 13;
    if (scalar_rdat_vld[13][1][13]) begin
        hls_coding_unit_hls_dup1_part_mode_o_r <= scalar_rdat  [13][1][13];    //bidir
    end
    //------WRITE (scalar, global adr = 564) always block-----//
    //s = 13; r = 0; a = 3;
    hls_coding_unit_hls_dup1_part_mode_o_ap_vld_r <= hls_coding_unit_hls_dup1_part_mode_o_ap_vld;
    if (hls_coding_unit_hls_dup1_part_mode_o_ap_vld) begin
        hls_coding_unit_hls_dup1_part_mode_o_r <= hls_coding_unit_hls_dup1_part_mode_o;
    end
    //------WRITE (scalar, global adr = 576) always block-----//
    //s = 16; r = 0; a = 1;
    hls_coding_unit_hls_dup1_max_trafo_depth_ap_vld_r <= hls_coding_unit_hls_dup1_max_trafo_depth_ap_vld;
    if (hls_coding_unit_hls_dup1_max_trafo_depth_ap_vld) begin
        hls_coding_unit_hls_dup1_max_trafo_depth_r <= hls_coding_unit_hls_dup1_max_trafo_depth;
    end
    //------READ (scalar, global adr = 32) always block-----//
    //s = 8; r = 1; a = 8;
    if (scalar_rdat_vld[8][1][8]) begin
        hls_coding_unit_hls_dup1_cb_size_o_r <= scalar_rdat  [8][1][8];    //bidir
    end
    //------WRITE (scalar, global adr = 32) always block-----//
    //s = 8; r = 1; a = 1;
    hls_coding_unit_hls_dup1_cb_size_o_ap_vld_r <= hls_coding_unit_hls_dup1_cb_size_o_ap_vld;
    if (hls_coding_unit_hls_dup1_cb_size_o_ap_vld) begin
        hls_coding_unit_hls_dup1_cb_size_o_r <= hls_coding_unit_hls_dup1_cb_size_o;
    end
    //------READ (scalar, global adr = 44) always block-----//
    //s = 11; r = 1; a = 12;
    if (scalar_rdat_vld[11][1][12]) begin
        hls_coding_unit_hls_dup1_idx_o_r <= scalar_rdat  [11][1][12];    //bidir
    end
    //------WRITE (scalar, global adr = 44) always block-----//
    //s = 11; r = 1; a = 2;
    hls_coding_unit_hls_dup1_idx_o_ap_vld_r <= hls_coding_unit_hls_dup1_idx_o_ap_vld;
    if (hls_coding_unit_hls_dup1_idx_o_ap_vld) begin
        hls_coding_unit_hls_dup1_idx_o_r <= hls_coding_unit_hls_dup1_idx_o;
    end
    //------WRITE (scalar, global adr = 1164) always block-----//
    //s = 3; r = 1; a = 0;
    hls_coding_unit_hls_dup1_xm_xBase_ap_vld_r <= hls_coding_unit_hls_dup1_xm_xBase_ap_vld;
    if (hls_coding_unit_hls_dup1_xm_xBase_ap_vld) begin
        hls_coding_unit_hls_dup1_xm_xBase_r <= hls_coding_unit_hls_dup1_xm_xBase;
    end
    //------WRITE (scalar, global adr = 1168) always block-----//
    //s = 4; r = 1; a = 0;
    hls_coding_unit_hls_dup1_xm_yBase_ap_vld_r <= hls_coding_unit_hls_dup1_xm_yBase_ap_vld;
    if (hls_coding_unit_hls_dup1_xm_yBase_ap_vld) begin
        hls_coding_unit_hls_dup1_xm_yBase_r <= hls_coding_unit_hls_dup1_xm_yBase;
    end
    //------WRITE (scalar, global adr = 1172) always block-----//
    //s = 5; r = 0; a = 1;
    hls_coding_unit_hls_dup1_xm_cb_xBase_ap_vld_r <= hls_coding_unit_hls_dup1_xm_cb_xBase_ap_vld;
    if (hls_coding_unit_hls_dup1_xm_cb_xBase_ap_vld) begin
        hls_coding_unit_hls_dup1_xm_cb_xBase_r <= hls_coding_unit_hls_dup1_xm_cb_xBase;
    end
    //------WRITE (scalar, global adr = 1176) always block-----//
    //s = 6; r = 1; a = 1;
    hls_coding_unit_hls_dup1_xm_cb_yBase_ap_vld_r <= hls_coding_unit_hls_dup1_xm_cb_yBase_ap_vld;
    if (hls_coding_unit_hls_dup1_xm_cb_yBase_ap_vld) begin
        hls_coding_unit_hls_dup1_xm_cb_yBase_r <= hls_coding_unit_hls_dup1_xm_cb_yBase;
    end
    //------WRITE (scalar, global adr = 1180) always block-----//
    //s = 7; r = 0; a = 4;
    hls_coding_unit_hls_dup1_xm_log2_cb_size_ap_vld_r <= hls_coding_unit_hls_dup1_xm_log2_cb_size_ap_vld;
    if (hls_coding_unit_hls_dup1_xm_log2_cb_size_ap_vld) begin
        hls_coding_unit_hls_dup1_xm_log2_cb_size_r <= hls_coding_unit_hls_dup1_xm_log2_cb_size;
    end
    //------READ (scalar, global adr = 1336) always block-----//
    //s = 14; r = 1; a = 10;
    if (scalar_rdat_vld[14][1][10]) begin
        hls_coding_unit_hls_dup1_rv_set_deblocking_bypass <= scalar_rdat  [14][1][10];
    end
    //------READ (scalar, global adr = 1332) always block-----//
    //s = 13; r = 0; a = 15;
    if (scalar_rdat_vld[13][0][15]) begin
        hls_coding_unit_hls_dup1_rv_ff_hevc_deblocking_boundary_strengths <= scalar_rdat  [13][0][15];
    end
    //------READ (scalar, global adr = 1340) always block-----//
    //s = 15; r = 0; a = 10;
    if (scalar_rdat_vld[15][0][10]) begin
        hls_coding_unit_hls_dup1_rv_hls_pcm_sample <= scalar_rdat  [15][0][10];
    end
    //------READ (scalar, global adr = 1344) always block-----//
    //s = 16; r = 1; a = 7;
    if (scalar_rdat_vld[16][1][7]) begin
        hls_coding_unit_hls_dup1_rv_hls_prediction_unit <= scalar_rdat  [16][1][7];
    end
    //------READ (scalar, global adr = 1348) always block-----//
    //s = 17; r = 1; a = 5;
    if (scalar_rdat_vld[17][1][5]) begin
        hls_coding_unit_hls_dup1_rv_hls_intra_prediction_unit <= scalar_rdat  [17][1][5];
    end
    //------READ (scalar, global adr = 1352) always block-----//
    //s = 18; r = 0; a = 5;
    if (scalar_rdat_vld[18][0][5]) begin
        hls_coding_unit_hls_dup1_rv_hls_transform_tree <= scalar_rdat  [18][0][5];
    end
    //------READ (scalar, global adr = 1236) always block-----//
    //s = 21; r = 1; a = 12;
    if (scalar_rdat_vld[21][1][12]) begin
        hls_coding_unit_hls_dup1_rv_callback_flag <= scalar_rdat  [21][1][12];
    end
    //------WRITE (scalar, global adr = 36) always block-----//
    //s = 9; r = 1; a = 3;
    hls_coding_unit_hls_dup1_length_r_ap_vld_r <= hls_coding_unit_hls_dup1_length_r_ap_vld;
    if (hls_coding_unit_hls_dup1_length_r_ap_vld) begin
        hls_coding_unit_hls_dup1_length_r_r <= hls_coding_unit_hls_dup1_length_r;
    end
    //------WRITE (scalar, global adr = 544) always block-----//
    //s = 8; r = 0; a = 2;
    hls_coding_unit_hls_dup1_xm_x_ap_vld_r <= hls_coding_unit_hls_dup1_xm_x_ap_vld;
    if (hls_coding_unit_hls_dup1_xm_x_ap_vld) begin
        hls_coding_unit_hls_dup1_xm_x_r <= hls_coding_unit_hls_dup1_xm_x;
    end
    //------WRITE (scalar, global adr = 548) always block-----//
    //s = 9; r = 0; a = 4;
    hls_coding_unit_hls_dup1_xm_y_ap_vld_r <= hls_coding_unit_hls_dup1_xm_y_ap_vld;
    if (hls_coding_unit_hls_dup1_xm_y_ap_vld) begin
        hls_coding_unit_hls_dup1_xm_y_r <= hls_coding_unit_hls_dup1_xm_y;
    end
    //------WRITE (scalar, complete partition, global adr = 512) always block -----//
    //s = 0; r = 1; a = 2;
    hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_ap_vld_r <= hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_ap_vld;
    if (hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_ap_vld) begin
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_r <= hls_coding_unit_hls_dup1_pu_intra_pred_mode_0;
    end
    //------WRITE (scalar, complete partition, global adr = 513) always block -----//
    //s = 0; r = 0; a = 3;
    hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_ap_vld_r <= hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_ap_vld;
    if (hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_ap_vld) begin
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_r <= hls_coding_unit_hls_dup1_pu_intra_pred_mode_1;
    end
    //------WRITE (scalar, complete partition, global adr = 514) always block -----//
    //s = 0; r = 1; a = 3;
    hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_ap_vld_r <= hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_ap_vld;
    if (hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_ap_vld) begin
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_r <= hls_coding_unit_hls_dup1_pu_intra_pred_mode_2;
    end
    //------WRITE (scalar, complete partition, global adr = 515) always block -----//
    //s = 0; r = 0; a = 4;
    hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_ap_vld_r <= hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_ap_vld;
    if (hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_ap_vld) begin
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_r <= hls_coding_unit_hls_dup1_pu_intra_pred_mode_3;
    end
    //------WRITE (scalar, global adr = 540) always block-----//
    //s = 7; r = 1; a = 4;
    hls_coding_unit_hls_dup1_qPy_pred_ap_vld_r <= hls_coding_unit_hls_dup1_qPy_pred_ap_vld;
    if (hls_coding_unit_hls_dup1_qPy_pred_ap_vld) begin
        hls_coding_unit_hls_dup1_qPy_pred_r <= hls_coding_unit_hls_dup1_qPy_pred;
    end
    //------WRITE (scalar, global adr = 24) always block-----//
    //s = 6; r = 0; a = 2;
    hls_coding_unit_hls_dup1_skip_flag_start_ap_vld_r <= hls_coding_unit_hls_dup1_skip_flag_start_ap_vld;
    if (hls_coding_unit_hls_dup1_skip_flag_start_ap_vld) begin
        hls_coding_unit_hls_dup1_skip_flag_start_r <= hls_coding_unit_hls_dup1_skip_flag_start;
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 0; a = 10;
    if (scalar_rdat_vld[28][0][10]) begin
        hls_coding_unit_hls_dup1_log2_min_cb_size <= scalar_rdat  [28][0][10];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 9;
    if (scalar_rdat_vld[26][1][9]) begin
        hls_coding_unit_hls_dup1_log2_ctb_size <= scalar_rdat  [26][1][9];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 1; a = 14;
    if (scalar_rdat_vld[13][1][14]) begin
        hls_coding_unit_hls_dup1_diff_cu_qp_delta_depth <= scalar_rdat  [13][1][14];
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 0; a = 12;
    if (scalar_rdat_vld[6][0][12]) begin
        hls_coding_unit_hls_dup1_qp_y <= scalar_rdat  [6][0][12];
    end
    //------READ (scalar, global adr = 440) always block-----//
    //s = 14; r = 0; a = 12;
    if (scalar_rdat_vld[14][0][12]) begin
        hls_coding_unit_hls_dup1_transquant_bypass_enable_flag <= scalar_rdat  [14][0][12];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 1; a = 8;
    if (scalar_rdat_vld[2][1][8]) begin
        hls_coding_unit_hls_dup1_min_cb_width <= scalar_rdat  [2][1][8];
    end
    //------WRITE (scalar, global adr = 568) always block-----//
    //s = 14; r = 0; a = 3;
    hls_coding_unit_hls_dup1_intra_split_flag_ap_vld_r <= hls_coding_unit_hls_dup1_intra_split_flag_ap_vld;
    if (hls_coding_unit_hls_dup1_intra_split_flag_ap_vld) begin
        hls_coding_unit_hls_dup1_intra_split_flag_r <= hls_coding_unit_hls_dup1_intra_split_flag;
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 0; a = 6;
    if (scalar_rdat_vld[17][0][6]) begin
        hls_coding_unit_hls_dup1_slice_type <= scalar_rdat  [17][0][6];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 9;
    if (scalar_rdat_vld[24][1][9]) begin
        hls_coding_unit_hls_dup1_ctb_left_flag <= scalar_rdat  [24][1][9];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 12;
    if (scalar_rdat_vld[23][1][12]) begin
        hls_coding_unit_hls_dup1_ctb_up_flag <= scalar_rdat  [23][1][12];
    end
    //------READ (scalar, global adr = 320) always block-----//
    //s = 16; r = 0; a = 8;
    if (scalar_rdat_vld[16][0][8]) begin
        hls_coding_unit_hls_dup1_amp_enabled_flag <= scalar_rdat  [16][0][8];
    end
    //------READ (scalar, global adr = 400) always block-----//
    //s = 4; r = 0; a = 6;
    if (scalar_rdat_vld[4][0][6]) begin
        hls_coding_unit_hls_dup1_pcm_enabled_flag <= scalar_rdat  [4][0][6];
    end
    //------READ (scalar, global adr = 412) always block-----//
    //s = 7; r = 1; a = 10;
    if (scalar_rdat_vld[7][1][10]) begin
        hls_coding_unit_hls_dup1_log2_min_pcm_cb_size <= scalar_rdat  [7][1][10];
    end
    //------READ (scalar, global adr = 416) always block-----//
    //s = 8; r = 0; a = 9;
    if (scalar_rdat_vld[8][0][9]) begin
        hls_coding_unit_hls_dup1_log2_max_pcm_cb_size <= scalar_rdat  [8][0][9];
    end
    //------READ (scalar, global adr = 464) always block-----//
    //s = 20; r = 1; a = 9;
    if (scalar_rdat_vld[20][1][9]) begin
        hls_coding_unit_hls_dup1_depth <= scalar_rdat  [20][1][9];
    end
    //------READ (scalar, global adr = 1288) always block-----//
    //s = 2; r = 0; a = 10;
    if (scalar_rdat_vld[2][0][10]) begin
        hls_coding_unit_hls_dup1_dc_skip_flag_p <= scalar_rdat  [2][0][10];
    end
    //------READ (scalar, global adr = 1272) always block-----//
    //s = 30; r = 1; a = 4;
    if (scalar_rdat_vld[30][1][4]) begin
        hls_coding_unit_hls_dup1_dc_qp_y_tab_p <= scalar_rdat  [30][1][4];
    end
    //------READ (scalar, global adr = 1280) always block-----//
    //s = 0; r = 1; a = 14;
    if (scalar_rdat_vld[0][1][14]) begin
        hls_coding_unit_hls_dup1_dc_tab_ct_depth_p <= scalar_rdat  [0][1][14];
    end
`endif
    //============================================================
    //hls_coding_unit_hls_dup2       (f = 20)
    //============================================================
`ifdef enable_connect_hls_coding_unit_hls_dup2
    //------READ (scalar, global adr = 420) always block-----//
    //s = 9; r = 1; a = 12;
    if (scalar_rdat_vld[9][1][12]) begin
        hls_coding_unit_hls_dup2_loop_filter_disable_flag <= scalar_rdat  [9][1][12];
    end
    //------READ (scalar, global adr = 380) always block-----//
    //s = 31; r = 0; a = 5;
    if (scalar_rdat_vld[31][0][5]) begin
        hls_coding_unit_hls_dup2_max_transform_hierarchy_depth_inter <= scalar_rdat  [31][0][5];
    end
    //------READ (scalar, global adr = 1160) always block-----//
    //s = 2; r = 1; a = 9;
    if (scalar_rdat_vld[2][1][9]) begin
        hls_coding_unit_hls_dup2_disable_deblocking_filter_flag <= scalar_rdat  [2][1][9];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 0; a = 14;
    if (scalar_rdat_vld[11][0][14]) begin
        hls_coding_unit_hls_dup2_cu_qp_delta_enabled_flag <= scalar_rdat  [11][0][14];
    end
    //------READ (scalar, global adr = 476) always block-----//
    //s = 23; r = 0; a = 14;
    if (scalar_rdat_vld[23][0][14]) begin
        hls_coding_unit_hls_dup2_tu_is_cu_qp_delta_coded <= scalar_rdat  [23][0][14];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 9;
    if (scalar_rdat_vld[15][1][9]) begin
        hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_r <= scalar_rdat  [15][1][9];    //bidir
    end
    //------WRITE (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 3;
    hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_ap_vld_r <= hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_ap_vld;
    if (hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_ap_vld) begin
        hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_r <= hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o;
    end
    //------READ (scalar, global adr = 28) always block-----//
    //s = 7; r = 0; a = 12;
    if (scalar_rdat_vld[7][0][12]) begin
        hls_coding_unit_hls_dup2_pcm_flag_o_r <= scalar_rdat  [7][0][12];    //bidir
    end
    //------WRITE (scalar, global adr = 28) always block-----//
    //s = 7; r = 0; a = 5;
    hls_coding_unit_hls_dup2_pcm_flag_o_ap_vld_r <= hls_coding_unit_hls_dup2_pcm_flag_o_ap_vld;
    if (hls_coding_unit_hls_dup2_pcm_flag_o_ap_vld) begin
        hls_coding_unit_hls_dup2_pcm_flag_o_r <= hls_coding_unit_hls_dup2_pcm_flag_o;
    end
    //------READ (scalar, global adr = 504) always block-----//
    //s = 30; r = 0; a = 5;
    if (scalar_rdat_vld[30][0][5]) begin
        hls_coding_unit_hls_dup2_merge_flag <= scalar_rdat  [30][0][5];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 13;
    if (scalar_rdat_vld[12][0][13]) begin
        hls_coding_unit_hls_dup2_pred_mode_o_r <= scalar_rdat  [12][0][13];    //bidir
    end
    //------WRITE (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 3;
    hls_coding_unit_hls_dup2_pred_mode_o_ap_vld_r <= hls_coding_unit_hls_dup2_pred_mode_o_ap_vld;
    if (hls_coding_unit_hls_dup2_pred_mode_o_ap_vld) begin
        hls_coding_unit_hls_dup2_pred_mode_o_r <= hls_coding_unit_hls_dup2_pred_mode_o;
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 0; a = 16;
    if (scalar_rdat_vld[13][0][16]) begin
        hls_coding_unit_hls_dup2_part_mode_o_r <= scalar_rdat  [13][0][16];    //bidir
    end
    //------WRITE (scalar, global adr = 564) always block-----//
    //s = 13; r = 1; a = 3;
    hls_coding_unit_hls_dup2_part_mode_o_ap_vld_r <= hls_coding_unit_hls_dup2_part_mode_o_ap_vld;
    if (hls_coding_unit_hls_dup2_part_mode_o_ap_vld) begin
        hls_coding_unit_hls_dup2_part_mode_o_r <= hls_coding_unit_hls_dup2_part_mode_o;
    end
    //------WRITE (scalar, global adr = 576) always block-----//
    //s = 16; r = 1; a = 1;
    hls_coding_unit_hls_dup2_max_trafo_depth_ap_vld_r <= hls_coding_unit_hls_dup2_max_trafo_depth_ap_vld;
    if (hls_coding_unit_hls_dup2_max_trafo_depth_ap_vld) begin
        hls_coding_unit_hls_dup2_max_trafo_depth_r <= hls_coding_unit_hls_dup2_max_trafo_depth;
    end
    //------READ (scalar, global adr = 32) always block-----//
    //s = 8; r = 1; a = 9;
    if (scalar_rdat_vld[8][1][9]) begin
        hls_coding_unit_hls_dup2_cb_size_o_r <= scalar_rdat  [8][1][9];    //bidir
    end
    //------WRITE (scalar, global adr = 32) always block-----//
    //s = 8; r = 1; a = 2;
    hls_coding_unit_hls_dup2_cb_size_o_ap_vld_r <= hls_coding_unit_hls_dup2_cb_size_o_ap_vld;
    if (hls_coding_unit_hls_dup2_cb_size_o_ap_vld) begin
        hls_coding_unit_hls_dup2_cb_size_o_r <= hls_coding_unit_hls_dup2_cb_size_o;
    end
    //------READ (scalar, global adr = 44) always block-----//
    //s = 11; r = 1; a = 13;
    if (scalar_rdat_vld[11][1][13]) begin
        hls_coding_unit_hls_dup2_idx_o_r <= scalar_rdat  [11][1][13];    //bidir
    end
    //------WRITE (scalar, global adr = 44) always block-----//
    //s = 11; r = 0; a = 3;
    hls_coding_unit_hls_dup2_idx_o_ap_vld_r <= hls_coding_unit_hls_dup2_idx_o_ap_vld;
    if (hls_coding_unit_hls_dup2_idx_o_ap_vld) begin
        hls_coding_unit_hls_dup2_idx_o_r <= hls_coding_unit_hls_dup2_idx_o;
    end
    //------WRITE (scalar, global adr = 1164) always block-----//
    //s = 3; r = 0; a = 1;
    hls_coding_unit_hls_dup2_xm_xBase_ap_vld_r <= hls_coding_unit_hls_dup2_xm_xBase_ap_vld;
    if (hls_coding_unit_hls_dup2_xm_xBase_ap_vld) begin
        hls_coding_unit_hls_dup2_xm_xBase_r <= hls_coding_unit_hls_dup2_xm_xBase;
    end
    //------WRITE (scalar, global adr = 1168) always block-----//
    //s = 4; r = 0; a = 1;
    hls_coding_unit_hls_dup2_xm_yBase_ap_vld_r <= hls_coding_unit_hls_dup2_xm_yBase_ap_vld;
    if (hls_coding_unit_hls_dup2_xm_yBase_ap_vld) begin
        hls_coding_unit_hls_dup2_xm_yBase_r <= hls_coding_unit_hls_dup2_xm_yBase;
    end
    //------WRITE (scalar, global adr = 1172) always block-----//
    //s = 5; r = 1; a = 1;
    hls_coding_unit_hls_dup2_xm_cb_xBase_ap_vld_r <= hls_coding_unit_hls_dup2_xm_cb_xBase_ap_vld;
    if (hls_coding_unit_hls_dup2_xm_cb_xBase_ap_vld) begin
        hls_coding_unit_hls_dup2_xm_cb_xBase_r <= hls_coding_unit_hls_dup2_xm_cb_xBase;
    end
    //------WRITE (scalar, global adr = 1176) always block-----//
    //s = 6; r = 1; a = 2;
    hls_coding_unit_hls_dup2_xm_cb_yBase_ap_vld_r <= hls_coding_unit_hls_dup2_xm_cb_yBase_ap_vld;
    if (hls_coding_unit_hls_dup2_xm_cb_yBase_ap_vld) begin
        hls_coding_unit_hls_dup2_xm_cb_yBase_r <= hls_coding_unit_hls_dup2_xm_cb_yBase;
    end
    //------WRITE (scalar, global adr = 1180) always block-----//
    //s = 7; r = 1; a = 5;
    hls_coding_unit_hls_dup2_xm_log2_cb_size_ap_vld_r <= hls_coding_unit_hls_dup2_xm_log2_cb_size_ap_vld;
    if (hls_coding_unit_hls_dup2_xm_log2_cb_size_ap_vld) begin
        hls_coding_unit_hls_dup2_xm_log2_cb_size_r <= hls_coding_unit_hls_dup2_xm_log2_cb_size;
    end
    //------READ (scalar, global adr = 1336) always block-----//
    //s = 14; r = 1; a = 11;
    if (scalar_rdat_vld[14][1][11]) begin
        hls_coding_unit_hls_dup2_rv_set_deblocking_bypass <= scalar_rdat  [14][1][11];
    end
    //------READ (scalar, global adr = 1332) always block-----//
    //s = 13; r = 1; a = 15;
    if (scalar_rdat_vld[13][1][15]) begin
        hls_coding_unit_hls_dup2_rv_ff_hevc_deblocking_boundary_strengths <= scalar_rdat  [13][1][15];
    end
    //------READ (scalar, global adr = 1340) always block-----//
    //s = 15; r = 0; a = 11;
    if (scalar_rdat_vld[15][0][11]) begin
        hls_coding_unit_hls_dup2_rv_hls_pcm_sample <= scalar_rdat  [15][0][11];
    end
    //------READ (scalar, global adr = 1344) always block-----//
    //s = 16; r = 1; a = 8;
    if (scalar_rdat_vld[16][1][8]) begin
        hls_coding_unit_hls_dup2_rv_hls_prediction_unit <= scalar_rdat  [16][1][8];
    end
    //------READ (scalar, global adr = 1348) always block-----//
    //s = 17; r = 1; a = 6;
    if (scalar_rdat_vld[17][1][6]) begin
        hls_coding_unit_hls_dup2_rv_hls_intra_prediction_unit <= scalar_rdat  [17][1][6];
    end
    //------READ (scalar, global adr = 1352) always block-----//
    //s = 18; r = 1; a = 5;
    if (scalar_rdat_vld[18][1][5]) begin
        hls_coding_unit_hls_dup2_rv_hls_transform_tree <= scalar_rdat  [18][1][5];
    end
    //------READ (scalar, global adr = 1236) always block-----//
    //s = 21; r = 0; a = 14;
    if (scalar_rdat_vld[21][0][14]) begin
        hls_coding_unit_hls_dup2_rv_callback_flag <= scalar_rdat  [21][0][14];
    end
    //------WRITE (scalar, global adr = 36) always block-----//
    //s = 9; r = 1; a = 4;
    hls_coding_unit_hls_dup2_length_r_ap_vld_r <= hls_coding_unit_hls_dup2_length_r_ap_vld;
    if (hls_coding_unit_hls_dup2_length_r_ap_vld) begin
        hls_coding_unit_hls_dup2_length_r_r <= hls_coding_unit_hls_dup2_length_r;
    end
    //------WRITE (scalar, global adr = 544) always block-----//
    //s = 8; r = 0; a = 3;
    hls_coding_unit_hls_dup2_xm_x_ap_vld_r <= hls_coding_unit_hls_dup2_xm_x_ap_vld;
    if (hls_coding_unit_hls_dup2_xm_x_ap_vld) begin
        hls_coding_unit_hls_dup2_xm_x_r <= hls_coding_unit_hls_dup2_xm_x;
    end
    //------WRITE (scalar, global adr = 548) always block-----//
    //s = 9; r = 0; a = 5;
    hls_coding_unit_hls_dup2_xm_y_ap_vld_r <= hls_coding_unit_hls_dup2_xm_y_ap_vld;
    if (hls_coding_unit_hls_dup2_xm_y_ap_vld) begin
        hls_coding_unit_hls_dup2_xm_y_r <= hls_coding_unit_hls_dup2_xm_y;
    end
    //------WRITE (scalar, complete partition, global adr = 512) always block -----//
    //s = 0; r = 1; a = 4;
    hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_ap_vld_r <= hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_ap_vld;
    if (hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_ap_vld) begin
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_r <= hls_coding_unit_hls_dup2_pu_intra_pred_mode_0;
    end
    //------WRITE (scalar, complete partition, global adr = 513) always block -----//
    //s = 0; r = 0; a = 5;
    hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_ap_vld_r <= hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_ap_vld;
    if (hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_ap_vld) begin
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_r <= hls_coding_unit_hls_dup2_pu_intra_pred_mode_1;
    end
    //------WRITE (scalar, complete partition, global adr = 514) always block -----//
    //s = 0; r = 1; a = 5;
    hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_ap_vld_r <= hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_ap_vld;
    if (hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_ap_vld) begin
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_r <= hls_coding_unit_hls_dup2_pu_intra_pred_mode_2;
    end
    //------WRITE (scalar, complete partition, global adr = 515) always block -----//
    //s = 0; r = 0; a = 6;
    hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_ap_vld_r <= hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_ap_vld;
    if (hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_ap_vld) begin
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_r <= hls_coding_unit_hls_dup2_pu_intra_pred_mode_3;
    end
    //------WRITE (scalar, global adr = 540) always block-----//
    //s = 7; r = 0; a = 6;
    hls_coding_unit_hls_dup2_qPy_pred_ap_vld_r <= hls_coding_unit_hls_dup2_qPy_pred_ap_vld;
    if (hls_coding_unit_hls_dup2_qPy_pred_ap_vld) begin
        hls_coding_unit_hls_dup2_qPy_pred_r <= hls_coding_unit_hls_dup2_qPy_pred;
    end
    //------WRITE (scalar, global adr = 24) always block-----//
    //s = 6; r = 0; a = 3;
    hls_coding_unit_hls_dup2_skip_flag_start_ap_vld_r <= hls_coding_unit_hls_dup2_skip_flag_start_ap_vld;
    if (hls_coding_unit_hls_dup2_skip_flag_start_ap_vld) begin
        hls_coding_unit_hls_dup2_skip_flag_start_r <= hls_coding_unit_hls_dup2_skip_flag_start;
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 1; a = 10;
    if (scalar_rdat_vld[28][1][10]) begin
        hls_coding_unit_hls_dup2_log2_min_cb_size <= scalar_rdat  [28][1][10];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 11;
    if (scalar_rdat_vld[26][0][11]) begin
        hls_coding_unit_hls_dup2_log2_ctb_size <= scalar_rdat  [26][0][11];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 0; a = 17;
    if (scalar_rdat_vld[13][0][17]) begin
        hls_coding_unit_hls_dup2_diff_cu_qp_delta_depth <= scalar_rdat  [13][0][17];
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 12;
    if (scalar_rdat_vld[6][1][12]) begin
        hls_coding_unit_hls_dup2_qp_y <= scalar_rdat  [6][1][12];
    end
    //------READ (scalar, global adr = 440) always block-----//
    //s = 14; r = 0; a = 13;
    if (scalar_rdat_vld[14][0][13]) begin
        hls_coding_unit_hls_dup2_transquant_bypass_enable_flag <= scalar_rdat  [14][0][13];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 0; a = 11;
    if (scalar_rdat_vld[2][0][11]) begin
        hls_coding_unit_hls_dup2_min_cb_width <= scalar_rdat  [2][0][11];
    end
    //------WRITE (scalar, global adr = 568) always block-----//
    //s = 14; r = 1; a = 3;
    hls_coding_unit_hls_dup2_intra_split_flag_ap_vld_r <= hls_coding_unit_hls_dup2_intra_split_flag_ap_vld;
    if (hls_coding_unit_hls_dup2_intra_split_flag_ap_vld) begin
        hls_coding_unit_hls_dup2_intra_split_flag_r <= hls_coding_unit_hls_dup2_intra_split_flag;
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 0; a = 7;
    if (scalar_rdat_vld[17][0][7]) begin
        hls_coding_unit_hls_dup2_slice_type <= scalar_rdat  [17][0][7];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 0; a = 11;
    if (scalar_rdat_vld[24][0][11]) begin
        hls_coding_unit_hls_dup2_ctb_left_flag <= scalar_rdat  [24][0][11];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 13;
    if (scalar_rdat_vld[23][1][13]) begin
        hls_coding_unit_hls_dup2_ctb_up_flag <= scalar_rdat  [23][1][13];
    end
    //------READ (scalar, global adr = 320) always block-----//
    //s = 16; r = 0; a = 9;
    if (scalar_rdat_vld[16][0][9]) begin
        hls_coding_unit_hls_dup2_amp_enabled_flag <= scalar_rdat  [16][0][9];
    end
    //------READ (scalar, global adr = 400) always block-----//
    //s = 4; r = 1; a = 5;
    if (scalar_rdat_vld[4][1][5]) begin
        hls_coding_unit_hls_dup2_pcm_enabled_flag <= scalar_rdat  [4][1][5];
    end
    //------READ (scalar, global adr = 412) always block-----//
    //s = 7; r = 1; a = 11;
    if (scalar_rdat_vld[7][1][11]) begin
        hls_coding_unit_hls_dup2_log2_min_pcm_cb_size <= scalar_rdat  [7][1][11];
    end
    //------READ (scalar, global adr = 416) always block-----//
    //s = 8; r = 0; a = 10;
    if (scalar_rdat_vld[8][0][10]) begin
        hls_coding_unit_hls_dup2_log2_max_pcm_cb_size <= scalar_rdat  [8][0][10];
    end
    //------READ (scalar, global adr = 464) always block-----//
    //s = 20; r = 0; a = 10;
    if (scalar_rdat_vld[20][0][10]) begin
        hls_coding_unit_hls_dup2_depth <= scalar_rdat  [20][0][10];
    end
    //------READ (scalar, global adr = 1288) always block-----//
    //s = 2; r = 1; a = 10;
    if (scalar_rdat_vld[2][1][10]) begin
        hls_coding_unit_hls_dup2_dc_skip_flag_p <= scalar_rdat  [2][1][10];
    end
    //------READ (scalar, global adr = 1272) always block-----//
    //s = 30; r = 1; a = 5;
    if (scalar_rdat_vld[30][1][5]) begin
        hls_coding_unit_hls_dup2_dc_qp_y_tab_p <= scalar_rdat  [30][1][5];
    end
    //------READ (scalar, global adr = 1280) always block-----//
    //s = 0; r = 0; a = 16;
    if (scalar_rdat_vld[0][0][16]) begin
        hls_coding_unit_hls_dup2_dc_tab_ct_depth_p <= scalar_rdat  [0][0][16];
    end
`endif
    //============================================================
    //hls_coding_unit_hls_dup3       (f = 21)
    //============================================================
`ifdef enable_connect_hls_coding_unit_hls_dup3
    //------READ (scalar, global adr = 420) always block-----//
    //s = 9; r = 0; a = 13;
    if (scalar_rdat_vld[9][0][13]) begin
        hls_coding_unit_hls_dup3_loop_filter_disable_flag <= scalar_rdat  [9][0][13];
    end
    //------READ (scalar, global adr = 380) always block-----//
    //s = 31; r = 1; a = 4;
    if (scalar_rdat_vld[31][1][4]) begin
        hls_coding_unit_hls_dup3_max_transform_hierarchy_depth_inter <= scalar_rdat  [31][1][4];
    end
    //------READ (scalar, global adr = 1160) always block-----//
    //s = 2; r = 0; a = 12;
    if (scalar_rdat_vld[2][0][12]) begin
        hls_coding_unit_hls_dup3_disable_deblocking_filter_flag <= scalar_rdat  [2][0][12];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 0; a = 15;
    if (scalar_rdat_vld[11][0][15]) begin
        hls_coding_unit_hls_dup3_cu_qp_delta_enabled_flag <= scalar_rdat  [11][0][15];
    end
    //------READ (scalar, global adr = 476) always block-----//
    //s = 23; r = 0; a = 15;
    if (scalar_rdat_vld[23][0][15]) begin
        hls_coding_unit_hls_dup3_tu_is_cu_qp_delta_coded <= scalar_rdat  [23][0][15];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 10;
    if (scalar_rdat_vld[15][1][10]) begin
        hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_r <= scalar_rdat  [15][1][10];    //bidir
    end
    //------WRITE (scalar, global adr = 572) always block-----//
    //s = 15; r = 0; a = 4;
    hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_ap_vld_r <= hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_ap_vld;
    if (hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_ap_vld) begin
        hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_r <= hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o;
    end
    //------READ (scalar, global adr = 28) always block-----//
    //s = 7; r = 0; a = 13;
    if (scalar_rdat_vld[7][0][13]) begin
        hls_coding_unit_hls_dup3_pcm_flag_o_r <= scalar_rdat  [7][0][13];    //bidir
    end
    //------WRITE (scalar, global adr = 28) always block-----//
    //s = 7; r = 1; a = 6;
    hls_coding_unit_hls_dup3_pcm_flag_o_ap_vld_r <= hls_coding_unit_hls_dup3_pcm_flag_o_ap_vld;
    if (hls_coding_unit_hls_dup3_pcm_flag_o_ap_vld) begin
        hls_coding_unit_hls_dup3_pcm_flag_o_r <= hls_coding_unit_hls_dup3_pcm_flag_o;
    end
    //------READ (scalar, global adr = 504) always block-----//
    //s = 30; r = 0; a = 6;
    if (scalar_rdat_vld[30][0][6]) begin
        hls_coding_unit_hls_dup3_merge_flag <= scalar_rdat  [30][0][6];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 1; a = 12;
    if (scalar_rdat_vld[12][1][12]) begin
        hls_coding_unit_hls_dup3_pred_mode_o_r <= scalar_rdat  [12][1][12];    //bidir
    end
    //------WRITE (scalar, global adr = 560) always block-----//
    //s = 12; r = 1; a = 3;
    hls_coding_unit_hls_dup3_pred_mode_o_ap_vld_r <= hls_coding_unit_hls_dup3_pred_mode_o_ap_vld;
    if (hls_coding_unit_hls_dup3_pred_mode_o_ap_vld) begin
        hls_coding_unit_hls_dup3_pred_mode_o_r <= hls_coding_unit_hls_dup3_pred_mode_o;
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 1; a = 16;
    if (scalar_rdat_vld[13][1][16]) begin
        hls_coding_unit_hls_dup3_part_mode_o_r <= scalar_rdat  [13][1][16];    //bidir
    end
    //------WRITE (scalar, global adr = 564) always block-----//
    //s = 13; r = 0; a = 4;
    hls_coding_unit_hls_dup3_part_mode_o_ap_vld_r <= hls_coding_unit_hls_dup3_part_mode_o_ap_vld;
    if (hls_coding_unit_hls_dup3_part_mode_o_ap_vld) begin
        hls_coding_unit_hls_dup3_part_mode_o_r <= hls_coding_unit_hls_dup3_part_mode_o;
    end
    //------WRITE (scalar, global adr = 576) always block-----//
    //s = 16; r = 0; a = 2;
    hls_coding_unit_hls_dup3_max_trafo_depth_ap_vld_r <= hls_coding_unit_hls_dup3_max_trafo_depth_ap_vld;
    if (hls_coding_unit_hls_dup3_max_trafo_depth_ap_vld) begin
        hls_coding_unit_hls_dup3_max_trafo_depth_r <= hls_coding_unit_hls_dup3_max_trafo_depth;
    end
    //------READ (scalar, global adr = 32) always block-----//
    //s = 8; r = 1; a = 10;
    if (scalar_rdat_vld[8][1][10]) begin
        hls_coding_unit_hls_dup3_cb_size_o_r <= scalar_rdat  [8][1][10];    //bidir
    end
    //------WRITE (scalar, global adr = 32) always block-----//
    //s = 8; r = 1; a = 3;
    hls_coding_unit_hls_dup3_cb_size_o_ap_vld_r <= hls_coding_unit_hls_dup3_cb_size_o_ap_vld;
    if (hls_coding_unit_hls_dup3_cb_size_o_ap_vld) begin
        hls_coding_unit_hls_dup3_cb_size_o_r <= hls_coding_unit_hls_dup3_cb_size_o;
    end
    //------READ (scalar, global adr = 44) always block-----//
    //s = 11; r = 1; a = 14;
    if (scalar_rdat_vld[11][1][14]) begin
        hls_coding_unit_hls_dup3_idx_o_r <= scalar_rdat  [11][1][14];    //bidir
    end
    //------WRITE (scalar, global adr = 44) always block-----//
    //s = 11; r = 1; a = 3;
    hls_coding_unit_hls_dup3_idx_o_ap_vld_r <= hls_coding_unit_hls_dup3_idx_o_ap_vld;
    if (hls_coding_unit_hls_dup3_idx_o_ap_vld) begin
        hls_coding_unit_hls_dup3_idx_o_r <= hls_coding_unit_hls_dup3_idx_o;
    end
    //------WRITE (scalar, global adr = 1164) always block-----//
    //s = 3; r = 1; a = 1;
    hls_coding_unit_hls_dup3_xm_xBase_ap_vld_r <= hls_coding_unit_hls_dup3_xm_xBase_ap_vld;
    if (hls_coding_unit_hls_dup3_xm_xBase_ap_vld) begin
        hls_coding_unit_hls_dup3_xm_xBase_r <= hls_coding_unit_hls_dup3_xm_xBase;
    end
    //------WRITE (scalar, global adr = 1168) always block-----//
    //s = 4; r = 1; a = 1;
    hls_coding_unit_hls_dup3_xm_yBase_ap_vld_r <= hls_coding_unit_hls_dup3_xm_yBase_ap_vld;
    if (hls_coding_unit_hls_dup3_xm_yBase_ap_vld) begin
        hls_coding_unit_hls_dup3_xm_yBase_r <= hls_coding_unit_hls_dup3_xm_yBase;
    end
    //------WRITE (scalar, global adr = 1172) always block-----//
    //s = 5; r = 0; a = 2;
    hls_coding_unit_hls_dup3_xm_cb_xBase_ap_vld_r <= hls_coding_unit_hls_dup3_xm_cb_xBase_ap_vld;
    if (hls_coding_unit_hls_dup3_xm_cb_xBase_ap_vld) begin
        hls_coding_unit_hls_dup3_xm_cb_xBase_r <= hls_coding_unit_hls_dup3_xm_cb_xBase;
    end
    //------WRITE (scalar, global adr = 1176) always block-----//
    //s = 6; r = 1; a = 3;
    hls_coding_unit_hls_dup3_xm_cb_yBase_ap_vld_r <= hls_coding_unit_hls_dup3_xm_cb_yBase_ap_vld;
    if (hls_coding_unit_hls_dup3_xm_cb_yBase_ap_vld) begin
        hls_coding_unit_hls_dup3_xm_cb_yBase_r <= hls_coding_unit_hls_dup3_xm_cb_yBase;
    end
    //------WRITE (scalar, global adr = 1180) always block-----//
    //s = 7; r = 0; a = 7;
    hls_coding_unit_hls_dup3_xm_log2_cb_size_ap_vld_r <= hls_coding_unit_hls_dup3_xm_log2_cb_size_ap_vld;
    if (hls_coding_unit_hls_dup3_xm_log2_cb_size_ap_vld) begin
        hls_coding_unit_hls_dup3_xm_log2_cb_size_r <= hls_coding_unit_hls_dup3_xm_log2_cb_size;
    end
    //------READ (scalar, global adr = 1336) always block-----//
    //s = 14; r = 1; a = 12;
    if (scalar_rdat_vld[14][1][12]) begin
        hls_coding_unit_hls_dup3_rv_set_deblocking_bypass <= scalar_rdat  [14][1][12];
    end
    //------READ (scalar, global adr = 1332) always block-----//
    //s = 13; r = 0; a = 18;
    if (scalar_rdat_vld[13][0][18]) begin
        hls_coding_unit_hls_dup3_rv_ff_hevc_deblocking_boundary_strengths <= scalar_rdat  [13][0][18];
    end
    //------READ (scalar, global adr = 1340) always block-----//
    //s = 15; r = 0; a = 12;
    if (scalar_rdat_vld[15][0][12]) begin
        hls_coding_unit_hls_dup3_rv_hls_pcm_sample <= scalar_rdat  [15][0][12];
    end
    //------READ (scalar, global adr = 1344) always block-----//
    //s = 16; r = 1; a = 9;
    if (scalar_rdat_vld[16][1][9]) begin
        hls_coding_unit_hls_dup3_rv_hls_prediction_unit <= scalar_rdat  [16][1][9];
    end
    //------READ (scalar, global adr = 1348) always block-----//
    //s = 17; r = 1; a = 7;
    if (scalar_rdat_vld[17][1][7]) begin
        hls_coding_unit_hls_dup3_rv_hls_intra_prediction_unit <= scalar_rdat  [17][1][7];
    end
    //------READ (scalar, global adr = 1352) always block-----//
    //s = 18; r = 0; a = 6;
    if (scalar_rdat_vld[18][0][6]) begin
        hls_coding_unit_hls_dup3_rv_hls_transform_tree <= scalar_rdat  [18][0][6];
    end
    //------READ (scalar, global adr = 1236) always block-----//
    //s = 21; r = 1; a = 13;
    if (scalar_rdat_vld[21][1][13]) begin
        hls_coding_unit_hls_dup3_rv_callback_flag <= scalar_rdat  [21][1][13];
    end
    //------WRITE (scalar, global adr = 36) always block-----//
    //s = 9; r = 1; a = 5;
    hls_coding_unit_hls_dup3_length_r_ap_vld_r <= hls_coding_unit_hls_dup3_length_r_ap_vld;
    if (hls_coding_unit_hls_dup3_length_r_ap_vld) begin
        hls_coding_unit_hls_dup3_length_r_r <= hls_coding_unit_hls_dup3_length_r;
    end
    //------WRITE (scalar, global adr = 544) always block-----//
    //s = 8; r = 0; a = 4;
    hls_coding_unit_hls_dup3_xm_x_ap_vld_r <= hls_coding_unit_hls_dup3_xm_x_ap_vld;
    if (hls_coding_unit_hls_dup3_xm_x_ap_vld) begin
        hls_coding_unit_hls_dup3_xm_x_r <= hls_coding_unit_hls_dup3_xm_x;
    end
    //------WRITE (scalar, global adr = 548) always block-----//
    //s = 9; r = 0; a = 6;
    hls_coding_unit_hls_dup3_xm_y_ap_vld_r <= hls_coding_unit_hls_dup3_xm_y_ap_vld;
    if (hls_coding_unit_hls_dup3_xm_y_ap_vld) begin
        hls_coding_unit_hls_dup3_xm_y_r <= hls_coding_unit_hls_dup3_xm_y;
    end
    //------WRITE (scalar, complete partition, global adr = 512) always block -----//
    //s = 0; r = 1; a = 6;
    hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_ap_vld_r <= hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_ap_vld;
    if (hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_ap_vld) begin
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_r <= hls_coding_unit_hls_dup3_pu_intra_pred_mode_0;
    end
    //------WRITE (scalar, complete partition, global adr = 513) always block -----//
    //s = 0; r = 0; a = 7;
    hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_ap_vld_r <= hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_ap_vld;
    if (hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_ap_vld) begin
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_r <= hls_coding_unit_hls_dup3_pu_intra_pred_mode_1;
    end
    //------WRITE (scalar, complete partition, global adr = 514) always block -----//
    //s = 0; r = 1; a = 7;
    hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_ap_vld_r <= hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_ap_vld;
    if (hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_ap_vld) begin
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_r <= hls_coding_unit_hls_dup3_pu_intra_pred_mode_2;
    end
    //------WRITE (scalar, complete partition, global adr = 515) always block -----//
    //s = 0; r = 0; a = 8;
    hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_ap_vld_r <= hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_ap_vld;
    if (hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_ap_vld) begin
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_r <= hls_coding_unit_hls_dup3_pu_intra_pred_mode_3;
    end
    //------WRITE (scalar, global adr = 540) always block-----//
    //s = 7; r = 1; a = 7;
    hls_coding_unit_hls_dup3_qPy_pred_ap_vld_r <= hls_coding_unit_hls_dup3_qPy_pred_ap_vld;
    if (hls_coding_unit_hls_dup3_qPy_pred_ap_vld) begin
        hls_coding_unit_hls_dup3_qPy_pred_r <= hls_coding_unit_hls_dup3_qPy_pred;
    end
    //------WRITE (scalar, global adr = 24) always block-----//
    //s = 6; r = 0; a = 4;
    hls_coding_unit_hls_dup3_skip_flag_start_ap_vld_r <= hls_coding_unit_hls_dup3_skip_flag_start_ap_vld;
    if (hls_coding_unit_hls_dup3_skip_flag_start_ap_vld) begin
        hls_coding_unit_hls_dup3_skip_flag_start_r <= hls_coding_unit_hls_dup3_skip_flag_start;
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 0; a = 11;
    if (scalar_rdat_vld[28][0][11]) begin
        hls_coding_unit_hls_dup3_log2_min_cb_size <= scalar_rdat  [28][0][11];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 10;
    if (scalar_rdat_vld[26][1][10]) begin
        hls_coding_unit_hls_dup3_log2_ctb_size <= scalar_rdat  [26][1][10];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 1; a = 17;
    if (scalar_rdat_vld[13][1][17]) begin
        hls_coding_unit_hls_dup3_diff_cu_qp_delta_depth <= scalar_rdat  [13][1][17];
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 0; a = 13;
    if (scalar_rdat_vld[6][0][13]) begin
        hls_coding_unit_hls_dup3_qp_y <= scalar_rdat  [6][0][13];
    end
    //------READ (scalar, global adr = 440) always block-----//
    //s = 14; r = 0; a = 14;
    if (scalar_rdat_vld[14][0][14]) begin
        hls_coding_unit_hls_dup3_transquant_bypass_enable_flag <= scalar_rdat  [14][0][14];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 1; a = 11;
    if (scalar_rdat_vld[2][1][11]) begin
        hls_coding_unit_hls_dup3_min_cb_width <= scalar_rdat  [2][1][11];
    end
    //------WRITE (scalar, global adr = 568) always block-----//
    //s = 14; r = 0; a = 4;
    hls_coding_unit_hls_dup3_intra_split_flag_ap_vld_r <= hls_coding_unit_hls_dup3_intra_split_flag_ap_vld;
    if (hls_coding_unit_hls_dup3_intra_split_flag_ap_vld) begin
        hls_coding_unit_hls_dup3_intra_split_flag_r <= hls_coding_unit_hls_dup3_intra_split_flag;
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 0; a = 8;
    if (scalar_rdat_vld[17][0][8]) begin
        hls_coding_unit_hls_dup3_slice_type <= scalar_rdat  [17][0][8];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 10;
    if (scalar_rdat_vld[24][1][10]) begin
        hls_coding_unit_hls_dup3_ctb_left_flag <= scalar_rdat  [24][1][10];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 14;
    if (scalar_rdat_vld[23][1][14]) begin
        hls_coding_unit_hls_dup3_ctb_up_flag <= scalar_rdat  [23][1][14];
    end
    //------READ (scalar, global adr = 320) always block-----//
    //s = 16; r = 0; a = 10;
    if (scalar_rdat_vld[16][0][10]) begin
        hls_coding_unit_hls_dup3_amp_enabled_flag <= scalar_rdat  [16][0][10];
    end
    //------READ (scalar, global adr = 400) always block-----//
    //s = 4; r = 0; a = 7;
    if (scalar_rdat_vld[4][0][7]) begin
        hls_coding_unit_hls_dup3_pcm_enabled_flag <= scalar_rdat  [4][0][7];
    end
    //------READ (scalar, global adr = 412) always block-----//
    //s = 7; r = 1; a = 12;
    if (scalar_rdat_vld[7][1][12]) begin
        hls_coding_unit_hls_dup3_log2_min_pcm_cb_size <= scalar_rdat  [7][1][12];
    end
    //------READ (scalar, global adr = 416) always block-----//
    //s = 8; r = 0; a = 11;
    if (scalar_rdat_vld[8][0][11]) begin
        hls_coding_unit_hls_dup3_log2_max_pcm_cb_size <= scalar_rdat  [8][0][11];
    end
    //------READ (scalar, global adr = 464) always block-----//
    //s = 20; r = 1; a = 10;
    if (scalar_rdat_vld[20][1][10]) begin
        hls_coding_unit_hls_dup3_depth <= scalar_rdat  [20][1][10];
    end
    //------READ (scalar, global adr = 1288) always block-----//
    //s = 2; r = 0; a = 13;
    if (scalar_rdat_vld[2][0][13]) begin
        hls_coding_unit_hls_dup3_dc_skip_flag_p <= scalar_rdat  [2][0][13];
    end
    //------READ (scalar, global adr = 1272) always block-----//
    //s = 30; r = 1; a = 6;
    if (scalar_rdat_vld[30][1][6]) begin
        hls_coding_unit_hls_dup3_dc_qp_y_tab_p <= scalar_rdat  [30][1][6];
    end
    //------READ (scalar, global adr = 1280) always block-----//
    //s = 0; r = 1; a = 15;
    if (scalar_rdat_vld[0][1][15]) begin
        hls_coding_unit_hls_dup3_dc_tab_ct_depth_p <= scalar_rdat  [0][1][15];
    end
`endif
    //============================================================
    //copy_top_left_pixel_hls       (f = 22)
    //============================================================
`ifdef enable_connect_copy_top_left_pixel_hls
    //------READ (scalar, global adr = 168) always block-----//
    //s = 10; r = 0; a = 9;
    if (scalar_rdat_vld[10][0][9]) begin
        copy_top_left_pixel_hls_log2_trafo_size <= scalar_rdat  [10][0][9];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 5;
    if (scalar_rdat_vld[26][0][5]) begin
        copy_top_left_pixel_hls_log2_ctb_size <= scalar_rdat  [26][0][5];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 0; a = 1;
    if (scalar_rdat_vld[30][0][1]) begin
        copy_top_left_pixel_hls_log2_min_tb_size <= scalar_rdat  [30][0][1];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 7;
    if (scalar_rdat_vld[12][0][7]) begin
        copy_top_left_pixel_hls_pred_mode <= scalar_rdat  [12][0][7];
    end
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 0; a = 8;
    if (scalar_rdat_vld[20][0][8]) begin
        copy_top_left_pixel_hls_hshift_0 <= scalar_rdat  [20][0][8];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 0; a = 10;
    if (scalar_rdat_vld[21][0][10]) begin
        copy_top_left_pixel_hls_hshift_1 <= scalar_rdat  [21][0][10];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 0; a = 10;
    if (scalar_rdat_vld[22][0][10]) begin
        copy_top_left_pixel_hls_hshift_2 <= scalar_rdat  [22][0][10];
    end
    //------READ (scalar, complete partition, global adr = 348) always block-----//
    //s = 23; r = 0; a = 8;
    if (scalar_rdat_vld[23][0][8]) begin
        copy_top_left_pixel_hls_vshift_0 <= scalar_rdat  [23][0][8];
    end
    //------READ (scalar, complete partition, global adr = 352) always block-----//
    //s = 24; r = 0; a = 6;
    if (scalar_rdat_vld[24][0][6]) begin
        copy_top_left_pixel_hls_vshift_1 <= scalar_rdat  [24][0][6];
    end
    //------READ (scalar, complete partition, global adr = 356) always block-----//
    //s = 25; r = 0; a = 6;
    if (scalar_rdat_vld[25][0][6]) begin
        copy_top_left_pixel_hls_vshift_2 <= scalar_rdat  [25][0][6];
    end
    //------READ (scalar, complete partition, global adr = 1240) always block-----//
    //s = 22; r = 1; a = 9;
    if (scalar_rdat_vld[22][1][9]) begin
        copy_top_left_pixel_hls_buf_data_0 <= scalar_rdat  [22][1][9];
    end
    //------READ (scalar, complete partition, global adr = 1244) always block-----//
    //s = 23; r = 1; a = 7;
    if (scalar_rdat_vld[23][1][7]) begin
        copy_top_left_pixel_hls_buf_data_1 <= scalar_rdat  [23][1][7];
    end
    //------READ (scalar, complete partition, global adr = 1248) always block-----//
    //s = 24; r = 1; a = 5;
    if (scalar_rdat_vld[24][1][5]) begin
        copy_top_left_pixel_hls_buf_data_2 <= scalar_rdat  [24][1][5];
    end
    //------READ (scalar, complete partition, global adr = 1144) always block-----//
    //s = 30; r = 1; a = 1;
    if (scalar_rdat_vld[30][1][1]) begin
        copy_top_left_pixel_hls_xm_linesize_0 <= scalar_rdat  [30][1][1];
    end
    //------READ (scalar, complete partition, global adr = 1148) always block-----//
    //s = 31; r = 0; a = 3;
    if (scalar_rdat_vld[31][0][3]) begin
        copy_top_left_pixel_hls_xm_linesize_1 <= scalar_rdat  [31][0][3];
    end
    //------READ (scalar, complete partition, global adr = 1152) always block-----//
    //s = 0; r = 0; a = 12;
    if (scalar_rdat_vld[0][0][12]) begin
        copy_top_left_pixel_hls_xm_linesize_2 <= scalar_rdat  [0][0][12];
    end
    //------READ (scalar, global adr = 1136) always block-----//
    //s = 28; r = 0; a = 6;
    if (scalar_rdat_vld[28][0][6]) begin
        copy_top_left_pixel_hls_cmdr_run_o_r <= scalar_rdat  [28][0][6];    //bidir
    end
    //------WRITE (scalar, global adr = 1136) always block-----//
    //s = 28; r = 0; a = 0;
    copy_top_left_pixel_hls_cmdr_run_o_ap_vld_r <= copy_top_left_pixel_hls_cmdr_run_o_ap_vld;
    if (copy_top_left_pixel_hls_cmdr_run_o_ap_vld) begin
        copy_top_left_pixel_hls_cmdr_run_o_r <= copy_top_left_pixel_hls_cmdr_run_o;
    end
`endif
    //============================================================
    //genPredCol_hls       (f = 23)
    //============================================================
`ifdef enable_connect_genPredCol_hls
    //------WRITE (scalar, complete partition, global adr = 180) always block -----//
    //s = 13; r = 0; a = 0;
    genPredCol_hls_predColBuf_0_ap_vld_r <= genPredCol_hls_predColBuf_0_ap_vld;
    if (genPredCol_hls_predColBuf_0_ap_vld) begin
        genPredCol_hls_predColBuf_0_r <= genPredCol_hls_predColBuf_0;
    end
    //------WRITE (scalar, complete partition, global adr = 184) always block -----//
    //s = 14; r = 0; a = 0;
    genPredCol_hls_predColBuf_1_ap_vld_r <= genPredCol_hls_predColBuf_1_ap_vld;
    if (genPredCol_hls_predColBuf_1_ap_vld) begin
        genPredCol_hls_predColBuf_1_r <= genPredCol_hls_predColBuf_1;
    end
    //------WRITE (scalar, complete partition, global adr = 188) always block -----//
    //s = 15; r = 0; a = 0;
    genPredCol_hls_predColBuf_2_ap_vld_r <= genPredCol_hls_predColBuf_2_ap_vld;
    if (genPredCol_hls_predColBuf_2_ap_vld) begin
        genPredCol_hls_predColBuf_2_r <= genPredCol_hls_predColBuf_2;
    end
    //------WRITE (scalar, complete partition, global adr = 192) always block -----//
    //s = 16; r = 0; a = 0;
    genPredCol_hls_predColBuf_3_ap_vld_r <= genPredCol_hls_predColBuf_3_ap_vld;
    if (genPredCol_hls_predColBuf_3_ap_vld) begin
        genPredCol_hls_predColBuf_3_r <= genPredCol_hls_predColBuf_3;
    end
    //------WRITE (scalar, complete partition, global adr = 196) always block -----//
    //s = 17; r = 1; a = 0;
    genPredCol_hls_predColBuf_4_ap_vld_r <= genPredCol_hls_predColBuf_4_ap_vld;
    if (genPredCol_hls_predColBuf_4_ap_vld) begin
        genPredCol_hls_predColBuf_4_r <= genPredCol_hls_predColBuf_4;
    end
    //------WRITE (scalar, complete partition, global adr = 200) always block -----//
    //s = 18; r = 1; a = 0;
    genPredCol_hls_predColBuf_5_ap_vld_r <= genPredCol_hls_predColBuf_5_ap_vld;
    if (genPredCol_hls_predColBuf_5_ap_vld) begin
        genPredCol_hls_predColBuf_5_r <= genPredCol_hls_predColBuf_5;
    end
    //------WRITE (scalar, complete partition, global adr = 204) always block -----//
    //s = 19; r = 1; a = 0;
    genPredCol_hls_predColBuf_6_ap_vld_r <= genPredCol_hls_predColBuf_6_ap_vld;
    if (genPredCol_hls_predColBuf_6_ap_vld) begin
        genPredCol_hls_predColBuf_6_r <= genPredCol_hls_predColBuf_6;
    end
    //------WRITE (scalar, complete partition, global adr = 208) always block -----//
    //s = 20; r = 1; a = 0;
    genPredCol_hls_predColBuf_7_ap_vld_r <= genPredCol_hls_predColBuf_7_ap_vld;
    if (genPredCol_hls_predColBuf_7_ap_vld) begin
        genPredCol_hls_predColBuf_7_r <= genPredCol_hls_predColBuf_7;
    end
    //------WRITE (scalar, complete partition, global adr = 212) always block -----//
    //s = 21; r = 1; a = 0;
    genPredCol_hls_predColBuf_8_ap_vld_r <= genPredCol_hls_predColBuf_8_ap_vld;
    if (genPredCol_hls_predColBuf_8_ap_vld) begin
        genPredCol_hls_predColBuf_8_r <= genPredCol_hls_predColBuf_8;
    end
    //------WRITE (scalar, complete partition, global adr = 216) always block -----//
    //s = 22; r = 1; a = 0;
    genPredCol_hls_predColBuf_9_ap_vld_r <= genPredCol_hls_predColBuf_9_ap_vld;
    if (genPredCol_hls_predColBuf_9_ap_vld) begin
        genPredCol_hls_predColBuf_9_r <= genPredCol_hls_predColBuf_9;
    end
    //------WRITE (scalar, complete partition, global adr = 220) always block -----//
    //s = 23; r = 0; a = 0;
    genPredCol_hls_predColBuf_10_ap_vld_r <= genPredCol_hls_predColBuf_10_ap_vld;
    if (genPredCol_hls_predColBuf_10_ap_vld) begin
        genPredCol_hls_predColBuf_10_r <= genPredCol_hls_predColBuf_10;
    end
    //------WRITE (scalar, complete partition, global adr = 224) always block -----//
    //s = 24; r = 0; a = 0;
    genPredCol_hls_predColBuf_11_ap_vld_r <= genPredCol_hls_predColBuf_11_ap_vld;
    if (genPredCol_hls_predColBuf_11_ap_vld) begin
        genPredCol_hls_predColBuf_11_r <= genPredCol_hls_predColBuf_11;
    end
    //------WRITE (scalar, complete partition, global adr = 228) always block -----//
    //s = 25; r = 0; a = 0;
    genPredCol_hls_predColBuf_12_ap_vld_r <= genPredCol_hls_predColBuf_12_ap_vld;
    if (genPredCol_hls_predColBuf_12_ap_vld) begin
        genPredCol_hls_predColBuf_12_r <= genPredCol_hls_predColBuf_12;
    end
    //------WRITE (scalar, complete partition, global adr = 232) always block -----//
    //s = 26; r = 0; a = 0;
    genPredCol_hls_predColBuf_13_ap_vld_r <= genPredCol_hls_predColBuf_13_ap_vld;
    if (genPredCol_hls_predColBuf_13_ap_vld) begin
        genPredCol_hls_predColBuf_13_r <= genPredCol_hls_predColBuf_13;
    end
    //------WRITE (scalar, complete partition, global adr = 236) always block -----//
    //s = 27; r = 0; a = 0;
    genPredCol_hls_predColBuf_14_ap_vld_r <= genPredCol_hls_predColBuf_14_ap_vld;
    if (genPredCol_hls_predColBuf_14_ap_vld) begin
        genPredCol_hls_predColBuf_14_r <= genPredCol_hls_predColBuf_14;
    end
    //------WRITE (scalar, complete partition, global adr = 240) always block -----//
    //s = 28; r = 1; a = 0;
    genPredCol_hls_predColBuf_15_ap_vld_r <= genPredCol_hls_predColBuf_15_ap_vld;
    if (genPredCol_hls_predColBuf_15_ap_vld) begin
        genPredCol_hls_predColBuf_15_r <= genPredCol_hls_predColBuf_15;
    end
    //------READ (scalar, complete partition, global adr = 244) always block-----//
    //s = 29; r = 0; a = 4;
    if (scalar_rdat_vld[29][0][4]) begin
        genPredCol_hls_predColBuf_16_o_r <= scalar_rdat  [29][0][4];
    end
    //------WRITE (scalar, complete partition, global adr = 244) always block -----//
    //s = 29; r = 0; a = 0;
    genPredCol_hls_predColBuf_16_o_ap_vld_r <= genPredCol_hls_predColBuf_16_o_ap_vld;
    if (genPredCol_hls_predColBuf_16_o_ap_vld) begin
        genPredCol_hls_predColBuf_16_o_r <= genPredCol_hls_predColBuf_16_o;
    end
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 1; a = 4;
    if (scalar_rdat_vld[11][1][4]) begin
        genPredCol_hls_log2_width <= scalar_rdat  [11][1][4];
    end
    //------READ (scalar, global adr = 1276) always block-----//
    //s = 31; r = 1; a = 2;
    if (scalar_rdat_vld[31][1][2]) begin
        genPredCol_hls_dc_tab_mvf_pred_flag_row_p <= scalar_rdat  [31][1][2];
    end
    //------READ (scalar, global adr = 1284) always block-----//
    //s = 1; r = 1; a = 3;
    if (scalar_rdat_vld[1][1][3]) begin
        genPredCol_hls_dc_cbf_luma_p <= scalar_rdat  [1][1][3];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 1; a = 2;
    if (scalar_rdat_vld[30][1][2]) begin
        genPredCol_hls_log2_min_tb_size <= scalar_rdat  [30][1][2];
    end
    //------READ (scalar, global adr = 388) always block-----//
    //s = 1; r = 0; a = 5;
    if (scalar_rdat_vld[1][0][5]) begin
        genPredCol_hls_min_tb_width <= scalar_rdat  [1][0][5];
    end
`endif
    //============================================================
    //ff_hevc_get_sub_cu_zscan_id_hls       (f = 24)
    //============================================================
`ifdef enable_connect_ff_hevc_get_sub_cu_zscan_id_hls
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 4;
    if (scalar_rdat_vld[26][1][4]) begin
        ff_hevc_get_sub_cu_zscan_id_hls_log2_ctb_size <= scalar_rdat  [26][1][4];
    end
    //------WRITE (scalar, global adr = 248) always block-----//
    //s = 30; r = 0; a = 0;
    ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_ap_vld_r <= ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_ap_vld;
    if (ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_ap_vld) begin
        ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_r <= ff_hevc_get_sub_cu_zscan_id_hls_zscan_id;
    end
`endif
    //============================================================
    //ff_hevc_skip_flag_decode_hls       (f = 25)
    //============================================================
`ifdef enable_connect_ff_hevc_skip_flag_decode_hls
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 6;
    if (scalar_rdat_vld[26][1][6]) begin
        ff_hevc_skip_flag_decode_hls_log2_ctb_size <= scalar_rdat  [26][1][6];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 6;
    if (scalar_rdat_vld[24][1][6]) begin
        ff_hevc_skip_flag_decode_hls_ctb_left_flag <= scalar_rdat  [24][1][6];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 8;
    if (scalar_rdat_vld[23][1][8]) begin
        ff_hevc_skip_flag_decode_hls_ctb_up_flag <= scalar_rdat  [23][1][8];
    end
`endif
    //============================================================
    //ff_hevc_set_qPy_hls       (f = 26)
    //============================================================
`ifdef enable_connect_ff_hevc_set_qPy_hls
    //------WRITE (scalar, global adr = 536) always block-----//
    //s = 6; r = 0; a = 0;
    ff_hevc_set_qPy_hls_qp_y_ap_vld_r <= ff_hevc_set_qPy_hls_qp_y_ap_vld;
    if (ff_hevc_set_qPy_hls_qp_y_ap_vld) begin
        ff_hevc_set_qPy_hls_qp_y_r <= ff_hevc_set_qPy_hls_qp_y;
    end
    //------READ (scalar, global adr = 532) always block-----//
    //s = 5; r = 0; a = 8;
    if (scalar_rdat_vld[5][0][8]) begin
        ff_hevc_set_qPy_hls_first_qp_group_o_r <= scalar_rdat  [5][0][8];    //bidir
    end
    //------WRITE (scalar, global adr = 532) always block-----//
    //s = 5; r = 0; a = 0;
    ff_hevc_set_qPy_hls_first_qp_group_o_ap_vld_r <= ff_hevc_set_qPy_hls_first_qp_group_o_ap_vld;
    if (ff_hevc_set_qPy_hls_first_qp_group_o_ap_vld) begin
        ff_hevc_set_qPy_hls_first_qp_group_o_r <= ff_hevc_set_qPy_hls_first_qp_group_o;
    end
    //------READ (scalar, global adr = 540) always block-----//
    //s = 7; r = 0; a = 9;
    if (scalar_rdat_vld[7][0][9]) begin
        ff_hevc_set_qPy_hls_qPy_pred <= scalar_rdat  [7][0][9];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 7;
    if (scalar_rdat_vld[26][0][7]) begin
        ff_hevc_set_qPy_hls_log2_ctb_size <= scalar_rdat  [26][0][7];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 0; a = 8;
    if (scalar_rdat_vld[13][0][8]) begin
        ff_hevc_set_qPy_hls_diff_cu_qp_delta_depth <= scalar_rdat  [13][0][8];
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 0; a = 7;
    if (scalar_rdat_vld[28][0][7]) begin
        ff_hevc_set_qPy_hls_log2_min_cb_size <= scalar_rdat  [28][0][7];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 0; a = 4;
    if (scalar_rdat_vld[2][0][4]) begin
        ff_hevc_set_qPy_hls_min_cb_width <= scalar_rdat  [2][0][4];
    end
    //------READ (scalar, global adr = 460) always block-----//
    //s = 19; r = 0; a = 4;
    if (scalar_rdat_vld[19][0][4]) begin
        ff_hevc_set_qPy_hls_slice_qp <= scalar_rdat  [19][0][4];
    end
    //------READ (scalar, global adr = 1272) always block-----//
    //s = 30; r = 0; a = 2;
    if (scalar_rdat_vld[30][0][2]) begin
        ff_hevc_set_qPy_hls_dc_qp_y_tab_p <= scalar_rdat  [30][0][2];
    end
    //------READ (scalar, global adr = 468) always block-----//
    //s = 21; r = 1; a = 9;
    if (scalar_rdat_vld[21][1][9]) begin
        ff_hevc_set_qPy_hls_tu_cu_qp_delta <= scalar_rdat  [21][1][9];
    end
    //------READ (scalar, global adr = 1132) always block-----//
    //s = 27; r = 1; a = 3;
    if (scalar_rdat_vld[27][1][3]) begin
        ff_hevc_set_qPy_hls_qp_bd_offset <= scalar_rdat  [27][1][3];
    end
`endif
    //============================================================
    //hls_decode_neighbour_hls       (f = 27)
    //============================================================
`ifdef enable_connect_hls_decode_neighbour_hls
    //------WRITE (scalar, global adr = 532) always block-----//
    //s = 5; r = 1; a = 2;
    hls_decode_neighbour_hls_first_qp_group_ap_vld_r <= hls_decode_neighbour_hls_first_qp_group_ap_vld;
    if (hls_decode_neighbour_hls_first_qp_group_ap_vld) begin
        hls_decode_neighbour_hls_first_qp_group_r <= hls_decode_neighbour_hls_first_qp_group;
    end
    //------WRITE (scalar, global adr = 620) always block-----//
    //s = 27; r = 1; a = 0;
    hls_decode_neighbour_hls_end_of_tiles_x_ap_vld_r <= hls_decode_neighbour_hls_end_of_tiles_x_ap_vld;
    if (hls_decode_neighbour_hls_end_of_tiles_x_ap_vld) begin
        hls_decode_neighbour_hls_end_of_tiles_x_r <= hls_decode_neighbour_hls_end_of_tiles_x;
    end
    //------WRITE (scalar, global adr = 624) always block-----//
    //s = 28; r = 0; a = 1;
    hls_decode_neighbour_hls_end_of_tiles_y_ap_vld_r <= hls_decode_neighbour_hls_end_of_tiles_y_ap_vld;
    if (hls_decode_neighbour_hls_end_of_tiles_y_ap_vld) begin
        hls_decode_neighbour_hls_end_of_tiles_y_r <= hls_decode_neighbour_hls_end_of_tiles_y;
    end
    //------WRITE (scalar, global adr = 260) always block-----//
    //s = 1; r = 1; a = 0;
    hls_decode_neighbour_hls_slice_or_tiles_left_boundary_ap_vld_r <= hls_decode_neighbour_hls_slice_or_tiles_left_boundary_ap_vld;
    if (hls_decode_neighbour_hls_slice_or_tiles_left_boundary_ap_vld) begin
        hls_decode_neighbour_hls_slice_or_tiles_left_boundary_r <= hls_decode_neighbour_hls_slice_or_tiles_left_boundary;
    end
    //------WRITE (scalar, global adr = 264) always block-----//
    //s = 2; r = 1; a = 0;
    hls_decode_neighbour_hls_slice_or_tiles_up_boundary_ap_vld_r <= hls_decode_neighbour_hls_slice_or_tiles_up_boundary_ap_vld;
    if (hls_decode_neighbour_hls_slice_or_tiles_up_boundary_ap_vld) begin
        hls_decode_neighbour_hls_slice_or_tiles_up_boundary_r <= hls_decode_neighbour_hls_slice_or_tiles_up_boundary;
    end
    //------WRITE (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 0;
    hls_decode_neighbour_hls_ctb_left_flag_ap_vld_r <= hls_decode_neighbour_hls_ctb_left_flag_ap_vld;
    if (hls_decode_neighbour_hls_ctb_left_flag_ap_vld) begin
        hls_decode_neighbour_hls_ctb_left_flag_r <= hls_decode_neighbour_hls_ctb_left_flag;
    end
    //------WRITE (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 2;
    hls_decode_neighbour_hls_ctb_up_flag_ap_vld_r <= hls_decode_neighbour_hls_ctb_up_flag_ap_vld;
    if (hls_decode_neighbour_hls_ctb_up_flag_ap_vld) begin
        hls_decode_neighbour_hls_ctb_up_flag_r <= hls_decode_neighbour_hls_ctb_up_flag;
    end
    //------WRITE (scalar, global adr = 616) always block-----//
    //s = 26; r = 1; a = 0;
    hls_decode_neighbour_hls_ctb_up_right_flag_ap_vld_r <= hls_decode_neighbour_hls_ctb_up_right_flag_ap_vld;
    if (hls_decode_neighbour_hls_ctb_up_right_flag_ap_vld) begin
        hls_decode_neighbour_hls_ctb_up_right_flag_r <= hls_decode_neighbour_hls_ctb_up_right_flag;
    end
    //------WRITE (scalar, global adr = 612) always block-----//
    //s = 25; r = 1; a = 0;
    hls_decode_neighbour_hls_ctb_up_left_flag_ap_vld_r <= hls_decode_neighbour_hls_ctb_up_left_flag_ap_vld;
    if (hls_decode_neighbour_hls_ctb_up_left_flag_ap_vld) begin
        hls_decode_neighbour_hls_ctb_up_left_flag_r <= hls_decode_neighbour_hls_ctb_up_left_flag;
    end
    //------READ (scalar, global adr = 272) always block-----//
    //s = 4; r = 1; a = 6;
    if (scalar_rdat_vld[4][1][6]) begin
        hls_decode_neighbour_hls_x_ctb <= scalar_rdat  [4][1][6];
    end
    //------READ (scalar, global adr = 276) always block-----//
    //s = 5; r = 0; a = 9;
    if (scalar_rdat_vld[5][0][9]) begin
        hls_decode_neighbour_hls_y_ctb <= scalar_rdat  [5][0][9];
    end
    //------READ (scalar, global adr = 280) always block-----//
    //s = 6; r = 1; a = 13;
    if (scalar_rdat_vld[6][1][13]) begin
        hls_decode_neighbour_hls_ctb_addr_ts <= scalar_rdat  [6][1][13];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 12;
    if (scalar_rdat_vld[26][0][12]) begin
        hls_decode_neighbour_hls_log2_ctb_size <= scalar_rdat  [26][0][12];
    end
    //------READ (scalar, global adr = 284) always block-----//
    //s = 7; r = 0; a = 14;
    if (scalar_rdat_vld[7][0][14]) begin
        hls_decode_neighbour_hls_ctb_width <= scalar_rdat  [7][0][14];
    end
    //------READ (scalar, global adr = 288) always block-----//
    //s = 8; r = 1; a = 11;
    if (scalar_rdat_vld[8][1][11]) begin
        hls_decode_neighbour_hls_slice_addr <= scalar_rdat  [8][1][11];
    end
    //------READ (scalar, global adr = 252) always block-----//
    //s = 31; r = 0; a = 6;
    if (scalar_rdat_vld[31][0][6]) begin
        hls_decode_neighbour_hls_entropy_coding_sync_enabled_flag <= scalar_rdat  [31][0][6];
    end
    //------READ (scalar, global adr = 256) always block-----//
    //s = 0; r = 0; a = 17;
    if (scalar_rdat_vld[0][0][17]) begin
        hls_decode_neighbour_hls_tiles_enabled_flag <= scalar_rdat  [0][0][17];
    end
    //------READ (scalar, global adr = 444) always block-----//
    //s = 15; r = 1; a = 11;
    if (scalar_rdat_vld[15][1][11]) begin
        hls_decode_neighbour_hls_num_tile_columns <= scalar_rdat  [15][1][11];
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 0; a = 14;
    if (scalar_rdat_vld[6][0][14]) begin
        hls_decode_neighbour_hls_width <= scalar_rdat  [6][0][14];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 0; a = 7;
    if (scalar_rdat_vld[19][0][7]) begin
        hls_decode_neighbour_hls_height <= scalar_rdat  [19][0][7];
    end
`endif
    //============================================================
    //set_tab_mvf_pred_flag_hls       (f = 28)
    //============================================================
`ifdef enable_connect_set_tab_mvf_pred_flag_hls
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 1; a = 10;
    if (scalar_rdat_vld[29][1][10]) begin
        set_tab_mvf_pred_flag_hls_log2_min_pu_size <= scalar_rdat  [29][1][10];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 0; a = 7;
    if (scalar_rdat_vld[3][0][7]) begin
        set_tab_mvf_pred_flag_hls_min_pu_width <= scalar_rdat  [3][0][7];
    end
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 0; a = 19;
    if (scalar_rdat_vld[11][0][19]) begin
        set_tab_mvf_pred_flag_hls_log2_width <= scalar_rdat  [11][0][19];
    end
    //------READ (scalar, global adr = 1276) always block-----//
    //s = 31; r = 0; a = 20;
    if (scalar_rdat_vld[31][0][20]) begin
        set_tab_mvf_pred_flag_hls_dc_tab_mvf_pred_flag_row_p <= scalar_rdat  [31][0][20];
    end
    //------READ (scalar, complete partition, global adr = 180) always block-----//
    //s = 13; r = 1; a = 25;
    if (scalar_rdat_vld[13][1][25]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_0_o_r <= scalar_rdat  [13][1][25];
    end
    //------WRITE (scalar, complete partition, global adr = 180) always block -----//
    //s = 13; r = 0; a = 7;
    set_tab_mvf_pred_flag_hls_predColBuf_0_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_0_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_0_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_0_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_0_o;
    end
    //------READ (scalar, complete partition, global adr = 184) always block-----//
    //s = 14; r = 0; a = 24;
    if (scalar_rdat_vld[14][0][24]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_1_o_r <= scalar_rdat  [14][0][24];
    end
    //------WRITE (scalar, complete partition, global adr = 184) always block -----//
    //s = 14; r = 0; a = 7;
    set_tab_mvf_pred_flag_hls_predColBuf_1_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_1_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_1_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_1_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_1_o;
    end
    //------READ (scalar, complete partition, global adr = 188) always block-----//
    //s = 15; r = 0; a = 18;
    if (scalar_rdat_vld[15][0][18]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_2_o_r <= scalar_rdat  [15][0][18];
    end
    //------WRITE (scalar, complete partition, global adr = 188) always block -----//
    //s = 15; r = 0; a = 5;
    set_tab_mvf_pred_flag_hls_predColBuf_2_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_2_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_2_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_2_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_2_o;
    end
    //------READ (scalar, complete partition, global adr = 192) always block-----//
    //s = 16; r = 1; a = 15;
    if (scalar_rdat_vld[16][1][15]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_3_o_r <= scalar_rdat  [16][1][15];
    end
    //------WRITE (scalar, complete partition, global adr = 192) always block -----//
    //s = 16; r = 1; a = 3;
    set_tab_mvf_pred_flag_hls_predColBuf_3_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_3_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_3_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_3_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_3_o;
    end
    //------READ (scalar, complete partition, global adr = 196) always block-----//
    //s = 17; r = 1; a = 13;
    if (scalar_rdat_vld[17][1][13]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_4_o_r <= scalar_rdat  [17][1][13];
    end
    //------WRITE (scalar, complete partition, global adr = 196) always block -----//
    //s = 17; r = 1; a = 3;
    set_tab_mvf_pred_flag_hls_predColBuf_4_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_4_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_4_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_4_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_4_o;
    end
    //------READ (scalar, complete partition, global adr = 200) always block-----//
    //s = 18; r = 1; a = 12;
    if (scalar_rdat_vld[18][1][12]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_5_o_r <= scalar_rdat  [18][1][12];
    end
    //------WRITE (scalar, complete partition, global adr = 200) always block -----//
    //s = 18; r = 1; a = 3;
    set_tab_mvf_pred_flag_hls_predColBuf_5_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_5_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_5_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_5_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_5_o;
    end
    //------READ (scalar, complete partition, global adr = 204) always block-----//
    //s = 19; r = 1; a = 12;
    if (scalar_rdat_vld[19][1][12]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_6_o_r <= scalar_rdat  [19][1][12];
    end
    //------WRITE (scalar, complete partition, global adr = 204) always block -----//
    //s = 19; r = 1; a = 3;
    set_tab_mvf_pred_flag_hls_predColBuf_6_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_6_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_6_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_6_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_6_o;
    end
    //------READ (scalar, complete partition, global adr = 208) always block-----//
    //s = 20; r = 0; a = 16;
    if (scalar_rdat_vld[20][0][16]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_7_o_r <= scalar_rdat  [20][0][16];
    end
    //------WRITE (scalar, complete partition, global adr = 208) always block -----//
    //s = 20; r = 1; a = 7;
    set_tab_mvf_pred_flag_hls_predColBuf_7_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_7_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_7_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_7_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_7_o;
    end
    //------READ (scalar, complete partition, global adr = 212) always block-----//
    //s = 21; r = 0; a = 22;
    if (scalar_rdat_vld[21][0][22]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_8_o_r <= scalar_rdat  [21][0][22];
    end
    //------WRITE (scalar, complete partition, global adr = 212) always block -----//
    //s = 21; r = 0; a = 9;
    set_tab_mvf_pred_flag_hls_predColBuf_8_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_8_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_8_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_8_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_8_o;
    end
    //------READ (scalar, complete partition, global adr = 216) always block-----//
    //s = 22; r = 0; a = 22;
    if (scalar_rdat_vld[22][0][22]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_9_o_r <= scalar_rdat  [22][0][22];
    end
    //------WRITE (scalar, complete partition, global adr = 216) always block -----//
    //s = 22; r = 0; a = 9;
    set_tab_mvf_pred_flag_hls_predColBuf_9_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_9_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_9_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_9_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_9_o;
    end
    //------READ (scalar, complete partition, global adr = 220) always block-----//
    //s = 23; r = 1; a = 26;
    if (scalar_rdat_vld[23][1][26]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_10_o_r <= scalar_rdat  [23][1][26];
    end
    //------WRITE (scalar, complete partition, global adr = 220) always block -----//
    //s = 23; r = 0; a = 7;
    set_tab_mvf_pred_flag_hls_predColBuf_10_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_10_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_10_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_10_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_10_o;
    end
    //------READ (scalar, complete partition, global adr = 224) always block-----//
    //s = 24; r = 0; a = 22;
    if (scalar_rdat_vld[24][0][22]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_11_o_r <= scalar_rdat  [24][0][22];
    end
    //------WRITE (scalar, complete partition, global adr = 224) always block -----//
    //s = 24; r = 0; a = 5;
    set_tab_mvf_pred_flag_hls_predColBuf_11_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_11_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_11_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_11_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_11_o;
    end
    //------READ (scalar, complete partition, global adr = 228) always block-----//
    //s = 25; r = 0; a = 19;
    if (scalar_rdat_vld[25][0][19]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_12_o_r <= scalar_rdat  [25][0][19];
    end
    //------WRITE (scalar, complete partition, global adr = 228) always block -----//
    //s = 25; r = 0; a = 5;
    set_tab_mvf_pred_flag_hls_predColBuf_12_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_12_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_12_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_12_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_12_o;
    end
    //------READ (scalar, complete partition, global adr = 232) always block-----//
    //s = 26; r = 0; a = 23;
    if (scalar_rdat_vld[26][0][23]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_13_o_r <= scalar_rdat  [26][0][23];
    end
    //------WRITE (scalar, complete partition, global adr = 232) always block -----//
    //s = 26; r = 0; a = 4;
    set_tab_mvf_pred_flag_hls_predColBuf_13_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_13_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_13_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_13_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_13_o;
    end
    //------READ (scalar, complete partition, global adr = 236) always block-----//
    //s = 27; r = 0; a = 15;
    if (scalar_rdat_vld[27][0][15]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_14_o_r <= scalar_rdat  [27][0][15];
    end
    //------WRITE (scalar, complete partition, global adr = 236) always block -----//
    //s = 27; r = 0; a = 3;
    set_tab_mvf_pred_flag_hls_predColBuf_14_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_14_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_14_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_14_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_14_o;
    end
    //------READ (scalar, complete partition, global adr = 240) always block-----//
    //s = 28; r = 1; a = 20;
    if (scalar_rdat_vld[28][1][20]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_15_o_r <= scalar_rdat  [28][1][20];
    end
    //------WRITE (scalar, complete partition, global adr = 240) always block -----//
    //s = 28; r = 1; a = 5;
    set_tab_mvf_pred_flag_hls_predColBuf_15_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_15_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_15_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_15_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_15_o;
    end
    //------READ (scalar, complete partition, global adr = 244) always block-----//
    //s = 29; r = 0; a = 12;
    if (scalar_rdat_vld[29][0][12]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_16_o_r <= scalar_rdat  [29][0][12];
    end
    //------WRITE (scalar, complete partition, global adr = 244) always block -----//
    //s = 29; r = 0; a = 3;
    set_tab_mvf_pred_flag_hls_predColBuf_16_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_16_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_16_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_16_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_16_o;
    end
`endif
    //============================================================
    //init_intra_neighbors_hls       (f = 29)
    //============================================================
`ifdef enable_connect_init_intra_neighbors_hls
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 0; a = 15;
    if (scalar_rdat_vld[20][0][15]) begin
        init_intra_neighbors_hls_hshift_0 <= scalar_rdat  [20][0][15];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 1; a = 19;
    if (scalar_rdat_vld[21][1][19]) begin
        init_intra_neighbors_hls_hshift_1 <= scalar_rdat  [21][1][19];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 1; a = 19;
    if (scalar_rdat_vld[22][1][19]) begin
        init_intra_neighbors_hls_hshift_2 <= scalar_rdat  [22][1][19];
    end
    //------READ (scalar, complete partition, global adr = 348) always block-----//
    //s = 23; r = 0; a = 25;
    if (scalar_rdat_vld[23][0][25]) begin
        init_intra_neighbors_hls_vshift_0 <= scalar_rdat  [23][0][25];
    end
    //------READ (scalar, complete partition, global adr = 352) always block-----//
    //s = 24; r = 1; a = 18;
    if (scalar_rdat_vld[24][1][18]) begin
        init_intra_neighbors_hls_vshift_1 <= scalar_rdat  [24][1][18];
    end
    //------READ (scalar, complete partition, global adr = 356) always block-----//
    //s = 25; r = 1; a = 15;
    if (scalar_rdat_vld[25][1][15]) begin
        init_intra_neighbors_hls_vshift_2 <= scalar_rdat  [25][1][15];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 1; a = 8;
    if (scalar_rdat_vld[29][1][8]) begin
        init_intra_neighbors_hls_log2_min_pu_size <= scalar_rdat  [29][1][8];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 1; a = 13;
    if (scalar_rdat_vld[30][1][13]) begin
        init_intra_neighbors_hls_log2_min_tb_size <= scalar_rdat  [30][1][13];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 20;
    if (scalar_rdat_vld[26][1][20]) begin
        init_intra_neighbors_hls_log2_ctb_size <= scalar_rdat  [26][1][20];
    end
    //------READ (scalar, global adr = 404) always block-----//
    //s = 5; r = 0; a = 16;
    if (scalar_rdat_vld[5][0][16]) begin
        init_intra_neighbors_hls_tb_mask <= scalar_rdat  [5][0][16];
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 0; a = 17;
    if (scalar_rdat_vld[6][0][17]) begin
        init_intra_neighbors_hls_width <= scalar_rdat  [6][0][17];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 0; a = 11;
    if (scalar_rdat_vld[19][0][11]) begin
        init_intra_neighbors_hls_height <= scalar_rdat  [19][0][11];
    end
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 1; a = 17;
    if (scalar_rdat_vld[11][1][17]) begin
        init_intra_neighbors_hls_log2_width <= scalar_rdat  [11][1][17];
    end
    //------READ (scalar, global adr = 176) always block-----//
    //s = 12; r = 1; a = 21;
    if (scalar_rdat_vld[12][1][21]) begin
        init_intra_neighbors_hls_log2_height <= scalar_rdat  [12][1][21];
    end
    //------READ (scalar, global adr = 424) always block-----//
    //s = 10; r = 1; a = 13;
    if (scalar_rdat_vld[10][1][13]) begin
        init_intra_neighbors_hls_constrained_intra_pred_flag <= scalar_rdat  [10][1][13];
    end
    //------READ (scalar, global adr = 1260) always block-----//
    //s = 27; r = 0; a = 14;
    if (scalar_rdat_vld[27][0][14]) begin
        init_intra_neighbors_hls_dc_min_tb_addr_zs_p <= scalar_rdat  [27][0][14];
    end
    //------READ (scalar, global adr = 600) always block-----//
    //s = 22; r = 0; a = 21;
    if (scalar_rdat_vld[22][0][21]) begin
        init_intra_neighbors_hls_cand_bottom_left <= scalar_rdat  [22][0][21];
    end
    //------READ (scalar, global adr = 584) always block-----//
    //s = 18; r = 1; a = 11;
    if (scalar_rdat_vld[18][1][11]) begin
        init_intra_neighbors_hls_cand_left <= scalar_rdat  [18][1][11];
    end
    //------READ (scalar, global adr = 588) always block-----//
    //s = 19; r = 1; a = 11;
    if (scalar_rdat_vld[19][1][11]) begin
        init_intra_neighbors_hls_cand_up_left <= scalar_rdat  [19][1][11];
    end
    //------READ (scalar, global adr = 580) always block-----//
    //s = 17; r = 1; a = 11;
    if (scalar_rdat_vld[17][1][11]) begin
        init_intra_neighbors_hls_cand_up <= scalar_rdat  [17][1][11];
    end
    //------READ (scalar, global adr = 596) always block-----//
    //s = 21; r = 0; a = 21;
    if (scalar_rdat_vld[21][0][21]) begin
        init_intra_neighbors_hls_cand_up_right <= scalar_rdat  [21][0][21];
    end
    //------WRITE (scalar, global adr = 644) always block-----//
    //s = 1; r = 0; a = 1;
    init_intra_neighbors_hls_numIntraNeighbor_ap_vld_r <= init_intra_neighbors_hls_numIntraNeighbor_ap_vld;
    if (init_intra_neighbors_hls_numIntraNeighbor_ap_vld) begin
        init_intra_neighbors_hls_numIntraNeighbor_r <= init_intra_neighbors_hls_numIntraNeighbor;
    end
    //------WRITE (scalar, global adr = 648) always block-----//
    //s = 2; r = 0; a = 1;
    init_intra_neighbors_hls_totalUnits_ap_vld_r <= init_intra_neighbors_hls_totalUnits_ap_vld;
    if (init_intra_neighbors_hls_totalUnits_ap_vld) begin
        init_intra_neighbors_hls_totalUnits_r <= init_intra_neighbors_hls_totalUnits;
    end
    //------WRITE (scalar, global adr = 652) always block-----//
    //s = 3; r = 0; a = 4;
    init_intra_neighbors_hls_aboveUnits_ap_vld_r <= init_intra_neighbors_hls_aboveUnits_ap_vld;
    if (init_intra_neighbors_hls_aboveUnits_ap_vld) begin
        init_intra_neighbors_hls_aboveUnits_r <= init_intra_neighbors_hls_aboveUnits;
    end
    //------WRITE (scalar, global adr = 656) always block-----//
    //s = 4; r = 0; a = 4;
    init_intra_neighbors_hls_leftUnits_ap_vld_r <= init_intra_neighbors_hls_leftUnits_ap_vld;
    if (init_intra_neighbors_hls_leftUnits_ap_vld) begin
        init_intra_neighbors_hls_leftUnits_r <= init_intra_neighbors_hls_leftUnits;
    end
    //------WRITE (scalar, global adr = 660) always block-----//
    //s = 5; r = 0; a = 7;
    init_intra_neighbors_hls_unitWidth_ap_vld_r <= init_intra_neighbors_hls_unitWidth_ap_vld;
    if (init_intra_neighbors_hls_unitWidth_ap_vld) begin
        init_intra_neighbors_hls_unitWidth_r <= init_intra_neighbors_hls_unitWidth;
    end
    //------WRITE (scalar, global adr = 664) always block-----//
    //s = 6; r = 1; a = 6;
    init_intra_neighbors_hls_unitHeight_ap_vld_r <= init_intra_neighbors_hls_unitHeight_ap_vld;
    if (init_intra_neighbors_hls_unitHeight_ap_vld) begin
        init_intra_neighbors_hls_unitHeight_r <= init_intra_neighbors_hls_unitHeight;
    end
    //------WRITE (scalar, global adr = 668) always block-----//
    //s = 7; r = 0; a = 8;
    init_intra_neighbors_hls_log2TrSize_ap_vld_r <= init_intra_neighbors_hls_log2TrSize_ap_vld;
    if (init_intra_neighbors_hls_log2TrSize_ap_vld) begin
        init_intra_neighbors_hls_log2TrSize_r <= init_intra_neighbors_hls_log2TrSize;
    end
    //------READ (scalar, global adr = 672) always block-----//
    //s = 8; r = 0; a = 12;
    if (scalar_rdat_vld[8][0][12]) begin
        init_intra_neighbors_hls_bNeighborFlags_0_o_r <= scalar_rdat  [8][0][12];    //bidir
    end
    //------READ (scalar, global adr = 672) always block-----//
    //s = 9; r = 1; a = 13;
    if (scalar_rdat_vld[9][1][13]) begin
        init_intra_neighbors_hls_bNeighborFlags_1_o_r <= scalar_rdat  [9][1][13];    //bidir
    end
    //------READ (scalar, global adr = 672) always block-----//
    //s = 10; r = 0; a = 15;
    if (scalar_rdat_vld[10][0][15]) begin
        init_intra_neighbors_hls_bNeighborFlags_2_o_r <= scalar_rdat  [10][0][15];    //bidir
    end
    //------WRITE (scalar, global adr = 672) always block-----//
    //s = 8; r = 1; a = 6;
    init_intra_neighbors_hls_bNeighborFlags_0_o_ap_vld_r <= init_intra_neighbors_hls_bNeighborFlags_0_o_ap_vld;
    if (init_intra_neighbors_hls_bNeighborFlags_0_o_ap_vld) begin
        init_intra_neighbors_hls_bNeighborFlags_0_o_r <= init_intra_neighbors_hls_bNeighborFlags_0_o;
    end
    //------WRITE (scalar, global adr = 672) always block-----//
    //s = 9; r = 1; a = 8;
    init_intra_neighbors_hls_bNeighborFlags_1_o_ap_vld_r <= init_intra_neighbors_hls_bNeighborFlags_1_o_ap_vld;
    if (init_intra_neighbors_hls_bNeighborFlags_1_o_ap_vld) begin
        init_intra_neighbors_hls_bNeighborFlags_1_o_r <= init_intra_neighbors_hls_bNeighborFlags_1_o;
    end
    //------WRITE (scalar, global adr = 672) always block-----//
    //s = 10; r = 0; a = 8;
    init_intra_neighbors_hls_bNeighborFlags_2_o_ap_vld_r <= init_intra_neighbors_hls_bNeighborFlags_2_o_ap_vld;
    if (init_intra_neighbors_hls_bNeighborFlags_2_o_ap_vld) begin
        init_intra_neighbors_hls_bNeighborFlags_2_o_r <= init_intra_neighbors_hls_bNeighborFlags_2_o;
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 0; a = 6;
    if (scalar_rdat_vld[3][0][6]) begin
        init_intra_neighbors_hls_min_pu_width <= scalar_rdat  [3][0][6];
    end
    //------READ (scalar, global adr = 1276) always block-----//
    //s = 31; r = 0; a = 19;
    if (scalar_rdat_vld[31][0][19]) begin
        init_intra_neighbors_hls_dc_tab_mvf_pred_flag_row_p <= scalar_rdat  [31][0][19];
    end
    //------READ (scalar, complete partition, global adr = 180) always block-----//
    //s = 13; r = 1; a = 24;
    if (scalar_rdat_vld[13][1][24]) begin
        init_intra_neighbors_hls_predColBuf_0 <= scalar_rdat  [13][1][24];
    end
    //------READ (scalar, complete partition, global adr = 184) always block-----//
    //s = 14; r = 0; a = 23;
    if (scalar_rdat_vld[14][0][23]) begin
        init_intra_neighbors_hls_predColBuf_1 <= scalar_rdat  [14][0][23];
    end
    //------READ (scalar, complete partition, global adr = 188) always block-----//
    //s = 15; r = 1; a = 16;
    if (scalar_rdat_vld[15][1][16]) begin
        init_intra_neighbors_hls_predColBuf_2 <= scalar_rdat  [15][1][16];
    end
    //------READ (scalar, complete partition, global adr = 192) always block-----//
    //s = 16; r = 0; a = 15;
    if (scalar_rdat_vld[16][0][15]) begin
        init_intra_neighbors_hls_predColBuf_3 <= scalar_rdat  [16][0][15];
    end
    //------READ (scalar, complete partition, global adr = 196) always block-----//
    //s = 17; r = 0; a = 12;
    if (scalar_rdat_vld[17][0][12]) begin
        init_intra_neighbors_hls_predColBuf_4 <= scalar_rdat  [17][0][12];
    end
    //------READ (scalar, complete partition, global adr = 200) always block-----//
    //s = 18; r = 0; a = 12;
    if (scalar_rdat_vld[18][0][12]) begin
        init_intra_neighbors_hls_predColBuf_5 <= scalar_rdat  [18][0][12];
    end
    //------READ (scalar, complete partition, global adr = 204) always block-----//
    //s = 19; r = 0; a = 12;
    if (scalar_rdat_vld[19][0][12]) begin
        init_intra_neighbors_hls_predColBuf_6 <= scalar_rdat  [19][0][12];
    end
    //------READ (scalar, complete partition, global adr = 208) always block-----//
    //s = 20; r = 1; a = 15;
    if (scalar_rdat_vld[20][1][15]) begin
        init_intra_neighbors_hls_predColBuf_7 <= scalar_rdat  [20][1][15];
    end
    //------READ (scalar, complete partition, global adr = 212) always block-----//
    //s = 21; r = 1; a = 20;
    if (scalar_rdat_vld[21][1][20]) begin
        init_intra_neighbors_hls_predColBuf_8 <= scalar_rdat  [21][1][20];
    end
    //------READ (scalar, complete partition, global adr = 216) always block-----//
    //s = 22; r = 1; a = 20;
    if (scalar_rdat_vld[22][1][20]) begin
        init_intra_neighbors_hls_predColBuf_9 <= scalar_rdat  [22][1][20];
    end
    //------READ (scalar, complete partition, global adr = 220) always block-----//
    //s = 23; r = 1; a = 24;
    if (scalar_rdat_vld[23][1][24]) begin
        init_intra_neighbors_hls_predColBuf_10 <= scalar_rdat  [23][1][24];
    end
    //------READ (scalar, complete partition, global adr = 224) always block-----//
    //s = 24; r = 0; a = 20;
    if (scalar_rdat_vld[24][0][20]) begin
        init_intra_neighbors_hls_predColBuf_11 <= scalar_rdat  [24][0][20];
    end
    //------READ (scalar, complete partition, global adr = 228) always block-----//
    //s = 25; r = 0; a = 17;
    if (scalar_rdat_vld[25][0][17]) begin
        init_intra_neighbors_hls_predColBuf_12 <= scalar_rdat  [25][0][17];
    end
    //------READ (scalar, complete partition, global adr = 232) always block-----//
    //s = 26; r = 0; a = 22;
    if (scalar_rdat_vld[26][0][22]) begin
        init_intra_neighbors_hls_predColBuf_13 <= scalar_rdat  [26][0][22];
    end
    //------READ (scalar, complete partition, global adr = 236) always block-----//
    //s = 27; r = 1; a = 13;
    if (scalar_rdat_vld[27][1][13]) begin
        init_intra_neighbors_hls_predColBuf_14 <= scalar_rdat  [27][1][13];
    end
    //------READ (scalar, complete partition, global adr = 240) always block-----//
    //s = 28; r = 0; a = 20;
    if (scalar_rdat_vld[28][0][20]) begin
        init_intra_neighbors_hls_predColBuf_15 <= scalar_rdat  [28][0][20];
    end
    //------READ (scalar, complete partition, global adr = 244) always block-----//
    //s = 29; r = 0; a = 10;
    if (scalar_rdat_vld[29][0][10]) begin
        init_intra_neighbors_hls_predColBuf_16 <= scalar_rdat  [29][0][10];
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 1; a = 12;
    if (scalar_rdat_vld[17][1][12]) begin
        init_intra_neighbors_hls_slice_type <= scalar_rdat  [17][1][12];
    end
`endif
    //============================================================
    //init_intra_neighbors_chroma_hls       (f = 30)
    //============================================================
`ifdef enable_connect_init_intra_neighbors_chroma_hls
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 0; a = 13;
    if (scalar_rdat_vld[20][0][13]) begin
        init_intra_neighbors_chroma_hls_hshift_0 <= scalar_rdat  [20][0][13];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 0; a = 19;
    if (scalar_rdat_vld[21][0][19]) begin
        init_intra_neighbors_chroma_hls_hshift_1 <= scalar_rdat  [21][0][19];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 0; a = 19;
    if (scalar_rdat_vld[22][0][19]) begin
        init_intra_neighbors_chroma_hls_hshift_2 <= scalar_rdat  [22][0][19];
    end
    //------READ (scalar, complete partition, global adr = 348) always block-----//
    //s = 23; r = 0; a = 24;
    if (scalar_rdat_vld[23][0][24]) begin
        init_intra_neighbors_chroma_hls_vshift_0 <= scalar_rdat  [23][0][24];
    end
    //------READ (scalar, complete partition, global adr = 352) always block-----//
    //s = 24; r = 0; a = 18;
    if (scalar_rdat_vld[24][0][18]) begin
        init_intra_neighbors_chroma_hls_vshift_1 <= scalar_rdat  [24][0][18];
    end
    //------READ (scalar, complete partition, global adr = 356) always block-----//
    //s = 25; r = 0; a = 15;
    if (scalar_rdat_vld[25][0][15]) begin
        init_intra_neighbors_chroma_hls_vshift_2 <= scalar_rdat  [25][0][15];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 1; a = 7;
    if (scalar_rdat_vld[29][1][7]) begin
        init_intra_neighbors_chroma_hls_log2_min_pu_size <= scalar_rdat  [29][1][7];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 0; a = 13;
    if (scalar_rdat_vld[30][0][13]) begin
        init_intra_neighbors_chroma_hls_log2_min_tb_size <= scalar_rdat  [30][0][13];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 19;
    if (scalar_rdat_vld[26][1][19]) begin
        init_intra_neighbors_chroma_hls_log2_ctb_size <= scalar_rdat  [26][1][19];
    end
    //------READ (scalar, global adr = 404) always block-----//
    //s = 5; r = 1; a = 14;
    if (scalar_rdat_vld[5][1][14]) begin
        init_intra_neighbors_chroma_hls_tb_mask <= scalar_rdat  [5][1][14];
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 1; a = 16;
    if (scalar_rdat_vld[6][1][16]) begin
        init_intra_neighbors_chroma_hls_width <= scalar_rdat  [6][1][16];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 1; a = 9;
    if (scalar_rdat_vld[19][1][9]) begin
        init_intra_neighbors_chroma_hls_height <= scalar_rdat  [19][1][9];
    end
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 0; a = 18;
    if (scalar_rdat_vld[11][0][18]) begin
        init_intra_neighbors_chroma_hls_log2_width <= scalar_rdat  [11][0][18];
    end
    //------READ (scalar, global adr = 176) always block-----//
    //s = 12; r = 0; a = 22;
    if (scalar_rdat_vld[12][0][22]) begin
        init_intra_neighbors_chroma_hls_log2_height <= scalar_rdat  [12][0][22];
    end
    //------READ (scalar, global adr = 424) always block-----//
    //s = 10; r = 0; a = 14;
    if (scalar_rdat_vld[10][0][14]) begin
        init_intra_neighbors_chroma_hls_constrained_intra_pred_flag <= scalar_rdat  [10][0][14];
    end
    //------READ (scalar, global adr = 1260) always block-----//
    //s = 27; r = 0; a = 13;
    if (scalar_rdat_vld[27][0][13]) begin
        init_intra_neighbors_chroma_hls_dc_min_tb_addr_zs_p <= scalar_rdat  [27][0][13];
    end
    //------READ (scalar, global adr = 1508) always block-----//
    //s = 25; r = 1; a = 14;
    if (scalar_rdat_vld[25][1][14]) begin
        init_intra_neighbors_chroma_hls_cand_bottom_left_c <= scalar_rdat  [25][1][14];
    end
    //------READ (scalar, global adr = 1492) always block-----//
    //s = 21; r = 1; a = 18;
    if (scalar_rdat_vld[21][1][18]) begin
        init_intra_neighbors_chroma_hls_cand_left_c <= scalar_rdat  [21][1][18];
    end
    //------READ (scalar, global adr = 1496) always block-----//
    //s = 22; r = 1; a = 18;
    if (scalar_rdat_vld[22][1][18]) begin
        init_intra_neighbors_chroma_hls_cand_up_left_c <= scalar_rdat  [22][1][18];
    end
    //------READ (scalar, global adr = 1488) always block-----//
    //s = 20; r = 1; a = 13;
    if (scalar_rdat_vld[20][1][13]) begin
        init_intra_neighbors_chroma_hls_cand_up_c <= scalar_rdat  [20][1][13];
    end
    //------READ (scalar, global adr = 1504) always block-----//
    //s = 24; r = 1; a = 17;
    if (scalar_rdat_vld[24][1][17]) begin
        init_intra_neighbors_chroma_hls_cand_up_right_c <= scalar_rdat  [24][1][17];
    end
    //------WRITE (scalar, global adr = 684) always block-----//
    //s = 11; r = 0; a = 4;
    init_intra_neighbors_chroma_hls_numIntraNeighbor_c_ap_vld_r <= init_intra_neighbors_chroma_hls_numIntraNeighbor_c_ap_vld;
    if (init_intra_neighbors_chroma_hls_numIntraNeighbor_c_ap_vld) begin
        init_intra_neighbors_chroma_hls_numIntraNeighbor_c_r <= init_intra_neighbors_chroma_hls_numIntraNeighbor_c;
    end
    //------WRITE (scalar, global adr = 688) always block-----//
    //s = 12; r = 0; a = 6;
    init_intra_neighbors_chroma_hls_totalUnits_c_ap_vld_r <= init_intra_neighbors_chroma_hls_totalUnits_c_ap_vld;
    if (init_intra_neighbors_chroma_hls_totalUnits_c_ap_vld) begin
        init_intra_neighbors_chroma_hls_totalUnits_c_r <= init_intra_neighbors_chroma_hls_totalUnits_c;
    end
    //------WRITE (scalar, global adr = 692) always block-----//
    //s = 13; r = 1; a = 6;
    init_intra_neighbors_chroma_hls_aboveUnits_c_ap_vld_r <= init_intra_neighbors_chroma_hls_aboveUnits_c_ap_vld;
    if (init_intra_neighbors_chroma_hls_aboveUnits_c_ap_vld) begin
        init_intra_neighbors_chroma_hls_aboveUnits_c_r <= init_intra_neighbors_chroma_hls_aboveUnits_c;
    end
    //------WRITE (scalar, global adr = 696) always block-----//
    //s = 14; r = 1; a = 6;
    init_intra_neighbors_chroma_hls_leftUnits_c_ap_vld_r <= init_intra_neighbors_chroma_hls_leftUnits_c_ap_vld;
    if (init_intra_neighbors_chroma_hls_leftUnits_c_ap_vld) begin
        init_intra_neighbors_chroma_hls_leftUnits_c_r <= init_intra_neighbors_chroma_hls_leftUnits_c;
    end
    //------WRITE (scalar, global adr = 700) always block-----//
    //s = 15; r = 1; a = 4;
    init_intra_neighbors_chroma_hls_unitWidth_c_ap_vld_r <= init_intra_neighbors_chroma_hls_unitWidth_c_ap_vld;
    if (init_intra_neighbors_chroma_hls_unitWidth_c_ap_vld) begin
        init_intra_neighbors_chroma_hls_unitWidth_c_r <= init_intra_neighbors_chroma_hls_unitWidth_c;
    end
    //------WRITE (scalar, global adr = 704) always block-----//
    //s = 16; r = 1; a = 2;
    init_intra_neighbors_chroma_hls_unitHeight_c_ap_vld_r <= init_intra_neighbors_chroma_hls_unitHeight_c_ap_vld;
    if (init_intra_neighbors_chroma_hls_unitHeight_c_ap_vld) begin
        init_intra_neighbors_chroma_hls_unitHeight_c_r <= init_intra_neighbors_chroma_hls_unitHeight_c;
    end
    //------WRITE (scalar, global adr = 708) always block-----//
    //s = 17; r = 0; a = 3;
    init_intra_neighbors_chroma_hls_log2TrSize_c_ap_vld_r <= init_intra_neighbors_chroma_hls_log2TrSize_c_ap_vld;
    if (init_intra_neighbors_chroma_hls_log2TrSize_c_ap_vld) begin
        init_intra_neighbors_chroma_hls_log2TrSize_c_r <= init_intra_neighbors_chroma_hls_log2TrSize_c;
    end
    //------READ (scalar, global adr = 712) always block-----//
    //s = 18; r = 1; a = 10;
    if (scalar_rdat_vld[18][1][10]) begin
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_r <= scalar_rdat  [18][1][10];    //bidir
    end
    //------READ (scalar, global adr = 712) always block-----//
    //s = 19; r = 0; a = 10;
    if (scalar_rdat_vld[19][0][10]) begin
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_r <= scalar_rdat  [19][0][10];    //bidir
    end
    //------READ (scalar, global adr = 712) always block-----//
    //s = 20; r = 0; a = 14;
    if (scalar_rdat_vld[20][0][14]) begin
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_r <= scalar_rdat  [20][0][14];    //bidir
    end
    //------WRITE (scalar, global adr = 712) always block-----//
    //s = 18; r = 0; a = 3;
    init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_ap_vld_r <= init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_ap_vld;
    if (init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_ap_vld) begin
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_r <= init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o;
    end
    //------WRITE (scalar, global adr = 712) always block-----//
    //s = 19; r = 0; a = 3;
    init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_ap_vld_r <= init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_ap_vld;
    if (init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_ap_vld) begin
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_r <= init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o;
    end
    //------WRITE (scalar, global adr = 712) always block-----//
    //s = 20; r = 0; a = 7;
    init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_ap_vld_r <= init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_ap_vld;
    if (init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_ap_vld) begin
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_r <= init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o;
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 1; a = 4;
    if (scalar_rdat_vld[3][1][4]) begin
        init_intra_neighbors_chroma_hls_min_pu_width <= scalar_rdat  [3][1][4];
    end
    //------READ (scalar, global adr = 1276) always block-----//
    //s = 31; r = 1; a = 17;
    if (scalar_rdat_vld[31][1][17]) begin
        init_intra_neighbors_chroma_hls_dc_tab_mvf_pred_flag_row_p <= scalar_rdat  [31][1][17];
    end
    //------READ (scalar, complete partition, global adr = 180) always block-----//
    //s = 13; r = 0; a = 25;
    if (scalar_rdat_vld[13][0][25]) begin
        init_intra_neighbors_chroma_hls_predColBuf_0 <= scalar_rdat  [13][0][25];
    end
    //------READ (scalar, complete partition, global adr = 184) always block-----//
    //s = 14; r = 1; a = 21;
    if (scalar_rdat_vld[14][1][21]) begin
        init_intra_neighbors_chroma_hls_predColBuf_1 <= scalar_rdat  [14][1][21];
    end
    //------READ (scalar, complete partition, global adr = 188) always block-----//
    //s = 15; r = 0; a = 17;
    if (scalar_rdat_vld[15][0][17]) begin
        init_intra_neighbors_chroma_hls_predColBuf_2 <= scalar_rdat  [15][0][17];
    end
    //------READ (scalar, complete partition, global adr = 192) always block-----//
    //s = 16; r = 1; a = 14;
    if (scalar_rdat_vld[16][1][14]) begin
        init_intra_neighbors_chroma_hls_predColBuf_3 <= scalar_rdat  [16][1][14];
    end
    //------READ (scalar, complete partition, global adr = 196) always block-----//
    //s = 17; r = 1; a = 10;
    if (scalar_rdat_vld[17][1][10]) begin
        init_intra_neighbors_chroma_hls_predColBuf_4 <= scalar_rdat  [17][1][10];
    end
    //------READ (scalar, complete partition, global adr = 200) always block-----//
    //s = 18; r = 0; a = 11;
    if (scalar_rdat_vld[18][0][11]) begin
        init_intra_neighbors_chroma_hls_predColBuf_5 <= scalar_rdat  [18][0][11];
    end
    //------READ (scalar, complete partition, global adr = 204) always block-----//
    //s = 19; r = 1; a = 10;
    if (scalar_rdat_vld[19][1][10]) begin
        init_intra_neighbors_chroma_hls_predColBuf_6 <= scalar_rdat  [19][1][10];
    end
    //------READ (scalar, complete partition, global adr = 208) always block-----//
    //s = 20; r = 1; a = 14;
    if (scalar_rdat_vld[20][1][14]) begin
        init_intra_neighbors_chroma_hls_predColBuf_7 <= scalar_rdat  [20][1][14];
    end
    //------READ (scalar, complete partition, global adr = 212) always block-----//
    //s = 21; r = 0; a = 20;
    if (scalar_rdat_vld[21][0][20]) begin
        init_intra_neighbors_chroma_hls_predColBuf_8 <= scalar_rdat  [21][0][20];
    end
    //------READ (scalar, complete partition, global adr = 216) always block-----//
    //s = 22; r = 0; a = 20;
    if (scalar_rdat_vld[22][0][20]) begin
        init_intra_neighbors_chroma_hls_predColBuf_9 <= scalar_rdat  [22][0][20];
    end
    //------READ (scalar, complete partition, global adr = 220) always block-----//
    //s = 23; r = 1; a = 23;
    if (scalar_rdat_vld[23][1][23]) begin
        init_intra_neighbors_chroma_hls_predColBuf_10 <= scalar_rdat  [23][1][23];
    end
    //------READ (scalar, complete partition, global adr = 224) always block-----//
    //s = 24; r = 0; a = 19;
    if (scalar_rdat_vld[24][0][19]) begin
        init_intra_neighbors_chroma_hls_predColBuf_11 <= scalar_rdat  [24][0][19];
    end
    //------READ (scalar, complete partition, global adr = 228) always block-----//
    //s = 25; r = 0; a = 16;
    if (scalar_rdat_vld[25][0][16]) begin
        init_intra_neighbors_chroma_hls_predColBuf_12 <= scalar_rdat  [25][0][16];
    end
    //------READ (scalar, complete partition, global adr = 232) always block-----//
    //s = 26; r = 0; a = 21;
    if (scalar_rdat_vld[26][0][21]) begin
        init_intra_neighbors_chroma_hls_predColBuf_13 <= scalar_rdat  [26][0][21];
    end
    //------READ (scalar, complete partition, global adr = 236) always block-----//
    //s = 27; r = 1; a = 12;
    if (scalar_rdat_vld[27][1][12]) begin
        init_intra_neighbors_chroma_hls_predColBuf_14 <= scalar_rdat  [27][1][12];
    end
    //------READ (scalar, complete partition, global adr = 240) always block-----//
    //s = 28; r = 1; a = 19;
    if (scalar_rdat_vld[28][1][19]) begin
        init_intra_neighbors_chroma_hls_predColBuf_15 <= scalar_rdat  [28][1][19];
    end
    //------READ (scalar, complete partition, global adr = 244) always block-----//
    //s = 29; r = 0; a = 9;
    if (scalar_rdat_vld[29][0][9]) begin
        init_intra_neighbors_chroma_hls_predColBuf_16 <= scalar_rdat  [29][0][9];
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 0; a = 11;
    if (scalar_rdat_vld[17][0][11]) begin
        init_intra_neighbors_chroma_hls_slice_type <= scalar_rdat  [17][0][11];
    end
`endif
    //============================================================
    //ff_hevc_set_neighbour_available_hls       (f = 31)
    //============================================================
`ifdef enable_connect_ff_hevc_set_neighbour_available_hls
    //------WRITE (scalar, global adr = 580) always block-----//
    //s = 17; r = 0; a = 0;
    ff_hevc_set_neighbour_available_hls_cand_up_ap_vld_r <= ff_hevc_set_neighbour_available_hls_cand_up_ap_vld;
    if (ff_hevc_set_neighbour_available_hls_cand_up_ap_vld) begin
        ff_hevc_set_neighbour_available_hls_cand_up_r <= ff_hevc_set_neighbour_available_hls_cand_up;
    end
    //------WRITE (scalar, global adr = 584) always block-----//
    //s = 18; r = 0; a = 0;
    ff_hevc_set_neighbour_available_hls_cand_left_ap_vld_r <= ff_hevc_set_neighbour_available_hls_cand_left_ap_vld;
    if (ff_hevc_set_neighbour_available_hls_cand_left_ap_vld) begin
        ff_hevc_set_neighbour_available_hls_cand_left_r <= ff_hevc_set_neighbour_available_hls_cand_left;
    end
    //------WRITE (scalar, global adr = 588) always block-----//
    //s = 19; r = 0; a = 0;
    ff_hevc_set_neighbour_available_hls_cand_up_left_ap_vld_r <= ff_hevc_set_neighbour_available_hls_cand_up_left_ap_vld;
    if (ff_hevc_set_neighbour_available_hls_cand_up_left_ap_vld) begin
        ff_hevc_set_neighbour_available_hls_cand_up_left_r <= ff_hevc_set_neighbour_available_hls_cand_up_left;
    end
    //------WRITE (scalar, global adr = 592) always block-----//
    //s = 20; r = 0; a = 0;
    ff_hevc_set_neighbour_available_hls_cand_up_right_sap_ap_vld_r <= ff_hevc_set_neighbour_available_hls_cand_up_right_sap_ap_vld;
    if (ff_hevc_set_neighbour_available_hls_cand_up_right_sap_ap_vld) begin
        ff_hevc_set_neighbour_available_hls_cand_up_right_sap_r <= ff_hevc_set_neighbour_available_hls_cand_up_right_sap;
    end
    //------WRITE (scalar, global adr = 596) always block-----//
    //s = 21; r = 0; a = 0;
    ff_hevc_set_neighbour_available_hls_cand_up_right_ap_vld_r <= ff_hevc_set_neighbour_available_hls_cand_up_right_ap_vld;
    if (ff_hevc_set_neighbour_available_hls_cand_up_right_ap_vld) begin
        ff_hevc_set_neighbour_available_hls_cand_up_right_r <= ff_hevc_set_neighbour_available_hls_cand_up_right;
    end
    //------WRITE (scalar, global adr = 600) always block-----//
    //s = 22; r = 0; a = 0;
    ff_hevc_set_neighbour_available_hls_cand_bottom_left_ap_vld_r <= ff_hevc_set_neighbour_available_hls_cand_bottom_left_ap_vld;
    if (ff_hevc_set_neighbour_available_hls_cand_bottom_left_ap_vld) begin
        ff_hevc_set_neighbour_available_hls_cand_bottom_left_r <= ff_hevc_set_neighbour_available_hls_cand_bottom_left;
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 6;
    if (scalar_rdat_vld[26][0][6]) begin
        ff_hevc_set_neighbour_available_hls_log2_ctb_size <= scalar_rdat  [26][0][6];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 0; a = 9;
    if (scalar_rdat_vld[23][0][9]) begin
        ff_hevc_set_neighbour_available_hls_ctb_up_flag <= scalar_rdat  [23][0][9];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 0; a = 7;
    if (scalar_rdat_vld[24][0][7]) begin
        ff_hevc_set_neighbour_available_hls_ctb_left_flag <= scalar_rdat  [24][0][7];
    end
    //------READ (scalar, global adr = 612) always block-----//
    //s = 25; r = 1; a = 5;
    if (scalar_rdat_vld[25][1][5]) begin
        ff_hevc_set_neighbour_available_hls_ctb_up_left_flag <= scalar_rdat  [25][1][5];
    end
    //------READ (scalar, global adr = 616) always block-----//
    //s = 26; r = 1; a = 5;
    if (scalar_rdat_vld[26][1][5]) begin
        ff_hevc_set_neighbour_available_hls_ctb_up_right_flag <= scalar_rdat  [26][1][5];
    end
    //------READ (scalar, global adr = 620) always block-----//
    //s = 27; r = 0; a = 4;
    if (scalar_rdat_vld[27][0][4]) begin
        ff_hevc_set_neighbour_available_hls_end_of_tiles_x <= scalar_rdat  [27][0][4];
    end
    //------READ (scalar, global adr = 624) always block-----//
    //s = 28; r = 1; a = 6;
    if (scalar_rdat_vld[28][1][6]) begin
        ff_hevc_set_neighbour_available_hls_end_of_tiles_y <= scalar_rdat  [28][1][6];
    end
    //------WRITE (scalar, global adr = 160) always block-----//
    //s = 8; r = 0; a = 0;
    ff_hevc_set_neighbour_available_hls_nPbW_ap_vld_r <= ff_hevc_set_neighbour_available_hls_nPbW_ap_vld;
    if (ff_hevc_set_neighbour_available_hls_nPbW_ap_vld) begin
        ff_hevc_set_neighbour_available_hls_nPbW_r <= ff_hevc_set_neighbour_available_hls_nPbW;
    end
    //------WRITE (scalar, global adr = 164) always block-----//
    //s = 9; r = 0; a = 0;
    ff_hevc_set_neighbour_available_hls_nPbH_ap_vld_r <= ff_hevc_set_neighbour_available_hls_nPbH_ap_vld;
    if (ff_hevc_set_neighbour_available_hls_nPbH_ap_vld) begin
        ff_hevc_set_neighbour_available_hls_nPbH_r <= ff_hevc_set_neighbour_available_hls_nPbH;
    end
`endif
        innerloop_ff_hevc_extract_rbsp_1_hls_ready_r <= innerloop_ff_hevc_extract_rbsp_1_hls_ready;
        innerloop_ff_hevc_extract_rbsp_2_hls_ready_r <= innerloop_ff_hevc_extract_rbsp_2_hls_ready;
        fill_ref_samples_mtdma_top_wrp_ready_r   <= fill_ref_samples_mtdma_top_wrp_ready;
        hevc_find_frame_end_hls_ready_r          <= hevc_find_frame_end_hls_ready;
        intra_prediction_unit_ex_hls_ready_r     <= intra_prediction_unit_ex_hls_ready;
        hls_transform_unit_ex_hls_ready_r        <= hls_transform_unit_ex_hls_ready;
        hls_transform_unit_ex_hls_dup1_ready_r   <= hls_transform_unit_ex_hls_dup1_ready;
        hls_transform_unit_ex_hls_dup2_ready_r   <= hls_transform_unit_ex_hls_dup2_ready;
        hls_transform_unit_ex_hls_dup3_ready_r   <= hls_transform_unit_ex_hls_dup3_ready;
        hls_transform_tree_hls_ready_r           <= hls_transform_tree_hls_ready;
        hls_transform_tree_hls_dup1_ready_r      <= hls_transform_tree_hls_dup1_ready;
        hls_transform_tree_hls_dup2_ready_r      <= hls_transform_tree_hls_dup2_ready;
        hls_transform_tree_hls_dup3_ready_r      <= hls_transform_tree_hls_dup3_ready;
        hls_coding_quadtree_hls_ready_r          <= hls_coding_quadtree_hls_ready;
        hls_coding_quadtree_hls_dup1_ready_r     <= hls_coding_quadtree_hls_dup1_ready;
        hls_coding_quadtree_hls_dup2_ready_r     <= hls_coding_quadtree_hls_dup2_ready;
        hls_coding_quadtree_hls_dup3_ready_r     <= hls_coding_quadtree_hls_dup3_ready;
        hls_coding_unit_hls_ready_r              <= hls_coding_unit_hls_ready;
        hls_coding_unit_hls_dup1_ready_r         <= hls_coding_unit_hls_dup1_ready;
        hls_coding_unit_hls_dup2_ready_r         <= hls_coding_unit_hls_dup2_ready;
        hls_coding_unit_hls_dup3_ready_r         <= hls_coding_unit_hls_dup3_ready;
        copy_top_left_pixel_hls_ready_r          <= copy_top_left_pixel_hls_ready;
        genPredCol_hls_ready_r                   <= genPredCol_hls_ready;
        ff_hevc_get_sub_cu_zscan_id_hls_ready_r  <= ff_hevc_get_sub_cu_zscan_id_hls_ready;
        ff_hevc_skip_flag_decode_hls_ready_r     <= ff_hevc_skip_flag_decode_hls_ready;
        ff_hevc_set_qPy_hls_ready_r              <= ff_hevc_set_qPy_hls_ready;
        hls_decode_neighbour_hls_ready_r         <= hls_decode_neighbour_hls_ready;
        set_tab_mvf_pred_flag_hls_ready_r        <= set_tab_mvf_pred_flag_hls_ready;
        init_intra_neighbors_hls_ready_r         <= init_intra_neighbors_hls_ready;
        init_intra_neighbors_chroma_hls_ready_r  <= init_intra_neighbors_chroma_hls_ready;
        ff_hevc_set_neighbour_available_hls_ready_r <= ff_hevc_set_neighbour_available_hls_ready;

    end
end


always_comb begin
    ap_part_w               = ap_part_r;
    ap_arb_start_running    = ap_arb_start_running_r;
    ap_arb_ret_running      = ap_arb_ret_running_r;
    ap_running              = ap_running_r;
    ap_start                = ap_start_r;
    ap_arb_reload_running   = ap_arb_reload_running_r;
    ap_arb_reload           = '{default: '0};
    scalar_argdone          = scalar_argdone_r;
    scalar_argAckdone		= scalar_argAckdone_r;
    array_argdone           = array_argdone_r;
    cyclic_argdone          = cyclic_argdone_r;

    scalar_argVld           = scalar_argVld_r;
    array_argVld            = array_argVld_r;
    cyclic_argVld           = cyclic_argVld_r;

    scalar_adr              = '{default: '0};
    scalar_wdat             = '{default: '0};
    scalar_argdone_all      = '{default: '0};
    scalar_argVld_all       = '{default: '0};
    scalar_argAckdone_all   = scalar_argAckdone_all_r;
    //array_adr             = '{default: '0};
    array_adr               = array_adr_r;
    array_wdat              = '{default: '0};
    cyclic_adr              = '{default: '0};
    cyclic_wdat             = '{default: '0};

    array_ap_ce             = '{default: '0};
    cyclic_ap_ce            = '{default: '0};
    innerloop_ff_hevc_extract_rbsp_1_hls_ready = innerloop_ff_hevc_extract_rbsp_1_hls_ready_r;
    innerloop_ff_hevc_extract_rbsp_2_hls_ready = innerloop_ff_hevc_extract_rbsp_2_hls_ready_r;
    fill_ref_samples_mtdma_top_wrp_ready     = fill_ref_samples_mtdma_top_wrp_ready_r;
    hevc_find_frame_end_hls_ready            = hevc_find_frame_end_hls_ready_r;
    intra_prediction_unit_ex_hls_ready       = intra_prediction_unit_ex_hls_ready_r;
    hls_transform_unit_ex_hls_ready          = hls_transform_unit_ex_hls_ready_r;
    hls_transform_unit_ex_hls_dup1_ready     = hls_transform_unit_ex_hls_dup1_ready_r;
    hls_transform_unit_ex_hls_dup2_ready     = hls_transform_unit_ex_hls_dup2_ready_r;
    hls_transform_unit_ex_hls_dup3_ready     = hls_transform_unit_ex_hls_dup3_ready_r;
    hls_transform_tree_hls_ready             = hls_transform_tree_hls_ready_r;
    hls_transform_tree_hls_dup1_ready        = hls_transform_tree_hls_dup1_ready_r;
    hls_transform_tree_hls_dup2_ready        = hls_transform_tree_hls_dup2_ready_r;
    hls_transform_tree_hls_dup3_ready        = hls_transform_tree_hls_dup3_ready_r;
    hls_coding_quadtree_hls_ready            = hls_coding_quadtree_hls_ready_r;
    hls_coding_quadtree_hls_dup1_ready       = hls_coding_quadtree_hls_dup1_ready_r;
    hls_coding_quadtree_hls_dup2_ready       = hls_coding_quadtree_hls_dup2_ready_r;
    hls_coding_quadtree_hls_dup3_ready       = hls_coding_quadtree_hls_dup3_ready_r;
    hls_coding_unit_hls_ready                = hls_coding_unit_hls_ready_r;
    hls_coding_unit_hls_dup1_ready           = hls_coding_unit_hls_dup1_ready_r;
    hls_coding_unit_hls_dup2_ready           = hls_coding_unit_hls_dup2_ready_r;
    hls_coding_unit_hls_dup3_ready           = hls_coding_unit_hls_dup3_ready_r;
    copy_top_left_pixel_hls_ready            = copy_top_left_pixel_hls_ready_r;
    genPredCol_hls_ready                     = genPredCol_hls_ready_r;
    ff_hevc_get_sub_cu_zscan_id_hls_ready    = ff_hevc_get_sub_cu_zscan_id_hls_ready_r;
    ff_hevc_skip_flag_decode_hls_ready       = ff_hevc_skip_flag_decode_hls_ready_r;
    ff_hevc_set_qPy_hls_ready                = ff_hevc_set_qPy_hls_ready_r;
    hls_decode_neighbour_hls_ready           = hls_decode_neighbour_hls_ready_r;
    set_tab_mvf_pred_flag_hls_ready          = set_tab_mvf_pred_flag_hls_ready_r;
    init_intra_neighbors_hls_ready           = init_intra_neighbors_hls_ready_r;
    init_intra_neighbors_chroma_hls_ready    = init_intra_neighbors_chroma_hls_ready_r;
    ff_hevc_set_neighbour_available_hls_ready = ff_hevc_set_neighbour_available_hls_ready_r;
    //============================================================
    //innerloop_ff_hevc_extract_rbsp_1_hls       (f = 1)
    //============================================================
`ifdef enable_connect_innerloop_ff_hevc_extract_rbsp_1_hls
    //------READ (scalar, global adr = 640) comb block-----//
    //s = 0; r = 1; a = 26;
    if (scalar_rdat_vld_r[0][1][26]) begin
        scalar_argdone [0][1][26] = 1;
    end
    scalar_adr[0][1][26] = {ap_part[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][26]) begin
        scalar_argVld[0][1][26] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        scalar_argVld[0][1][26] = 1;
    end

    //------WRITE (scalar, global adr = 640) comb block-----//
    //s = 0; r = 1; a = 8;
    if (scalar_argAck [0][1][8]) begin
        scalar_argVld [0][1][8] = 0;
        scalar_argAckdone [0][1][8] = 1;
    end
    if (innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_ap_vld_r) begin
        scalar_argVld [0][1][8] = 1;
        scalar_argAckdone [0][1][8] = 0;
        ap_part_w[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION] = ap_part[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][8] = innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_r;
    scalar_adr    [0][1][8] = {ap_part_w[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1116) comb block-----//
    //s = 23; r = 0; a = 26;
    if (scalar_rdat_vld_r[23][0][26]) begin
        scalar_argdone [23][0][26] = 1;
    end
    scalar_adr[23][0][26] = {ap_part[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][26]) begin
        scalar_argVld[23][0][26] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        scalar_argVld[23][0][26] = 1;
    end

    //------READ (scalar, global adr = 1124) comb block-----//
    //s = 25; r = 1; a = 16;
    if (scalar_rdat_vld_r[25][1][16]) begin
        scalar_argdone [25][1][16] = 1;
    end
    scalar_adr[25][1][16] = {ap_part[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][16]) begin
        scalar_argVld[25][1][16] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        scalar_argVld[25][1][16] = 1;
    end

    //------READ (scalar, global adr = 1120) comb block-----//
    //s = 24; r = 1; a = 19;
    if (scalar_rdat_vld_r[24][1][19]) begin
        scalar_argdone [24][1][19] = 1;
    end
    scalar_adr[24][1][19] = {ap_part[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][19]) begin
        scalar_argVld[24][1][19] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        scalar_argVld[24][1][19] = 1;
    end

    //------WRITE (scalar, global adr = 1128) comb block-----//
    //s = 26; r = 0; a = 3;
    if (scalar_argAck [26][0][3]) begin
        scalar_argVld [26][0][3] = 0;
        scalar_argAckdone [26][0][3] = 1;
    end
    if (innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_ap_vld_r) begin
        scalar_argVld [26][0][3] = 1;
        scalar_argAckdone [26][0][3] = 0;
        ap_part_w[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION] = ap_part[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][0][3] = innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_r;
    scalar_adr    [26][0][3] = {ap_part_w[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (ap_arb_ret[innerloop_ff_hevc_extract_rbsp_1_hls] & ~ap_arb_ret_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        ap_arb_ret_running[innerloop_ff_hevc_extract_rbsp_1_hls] = 1;
        innerloop_ff_hevc_extract_rbsp_1_hls_ready = 0;
    end

    scalar_argAckdone_all[innerloop_ff_hevc_extract_rbsp_1_hls] = scalar_argAckdone[0][1][8] &
                                                scalar_argAckdone[26][0][3];
    if (ap_arb_ret_running[innerloop_ff_hevc_extract_rbsp_1_hls] & scalar_argAckdone_all[innerloop_ff_hevc_extract_rbsp_1_hls] &~ ap_arb_reload_running_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        ap_arb_reload[innerloop_ff_hevc_extract_rbsp_1_hls] = 1;
        ap_arb_reload_running[innerloop_ff_hevc_extract_rbsp_1_hls] = 1;
    end

    if (ap_arb_start[innerloop_ff_hevc_extract_rbsp_1_hls] &~ ap_arb_start_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        ap_arb_start_running[innerloop_ff_hevc_extract_rbsp_1_hls] = 1;
    end

    if (ap_arb_start_running[innerloop_ff_hevc_extract_rbsp_1_hls] & ~scalar_writing_640) begin
        ap_arb_start_running[innerloop_ff_hevc_extract_rbsp_1_hls] = 0;
        ap_arb_reload[innerloop_ff_hevc_extract_rbsp_1_hls] = 1;
    end

    scalar_argdone_all[innerloop_ff_hevc_extract_rbsp_1_hls] = scalar_argdone[0][1][26] &
                                                                scalar_argdone[23][0][26] &
                                                                scalar_argdone[25][1][16] &
                                                                scalar_argdone[24][1][19];

    if (scalar_argdone_all_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        scalar_argdone[0][1][26] = 0;
        scalar_argdone[23][0][26] = 0;
        scalar_argdone[25][1][16] = 0;
        scalar_argdone[24][1][19] = 0;

        if (ap_arb_start_r[innerloop_ff_hevc_extract_rbsp_1_hls] & ~ap_running_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
            ap_start[innerloop_ff_hevc_extract_rbsp_1_hls] = 1;
            ap_running[innerloop_ff_hevc_extract_rbsp_1_hls] = 1;
        end
        else if (ap_arb_ret_running_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
            ap_arb_ret_running[innerloop_ff_hevc_extract_rbsp_1_hls] = 0;
            ap_arb_reload_running[innerloop_ff_hevc_extract_rbsp_1_hls] = 0;
            innerloop_ff_hevc_extract_rbsp_1_hls_ready = 1;
        end
    end

    if (ap_start_r[innerloop_ff_hevc_extract_rbsp_1_hls] & ap_ready_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        ap_start[innerloop_ff_hevc_extract_rbsp_1_hls] = 0;
    end

    if (ap_done_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        ap_running[innerloop_ff_hevc_extract_rbsp_1_hls] = 0;
    end
`endif
    //============================================================
    //innerloop_ff_hevc_extract_rbsp_2_hls       (f = 2)
    //============================================================
`ifdef enable_connect_innerloop_ff_hevc_extract_rbsp_2_hls
    //------READ (scalar, global adr = 632) comb block-----//
    //s = 30; r = 0; a = 14;
    if (scalar_rdat_vld_r[30][0][14]) begin
        scalar_argdone [30][0][14] = 1;
    end
    scalar_adr[30][0][14] = {ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][14]) begin
        scalar_argVld[30][0][14] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        scalar_argVld[30][0][14] = 1;
    end

    //------WRITE (scalar, global adr = 632) comb block-----//
    //s = 30; r = 1; a = 0;
    if (scalar_argAck [30][1][0]) begin
        scalar_argVld [30][1][0] = 0;
        scalar_argAckdone [30][1][0] = 1;
    end
    if (innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_ap_vld_r) begin
        scalar_argVld [30][1][0] = 1;
        scalar_argAckdone [30][1][0] = 0;
        ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION] = ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [30][1][0] = innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_r;
    scalar_adr    [30][1][0] = {ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 636) comb block-----//
    //s = 31; r = 1; a = 18;
    if (scalar_rdat_vld_r[31][1][18]) begin
        scalar_argdone [31][1][18] = 1;
    end
    scalar_adr[31][1][18] = {ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][18]) begin
        scalar_argVld[31][1][18] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        scalar_argVld[31][1][18] = 1;
    end

    //------WRITE (scalar, global adr = 636) comb block-----//
    //s = 31; r = 0; a = 0;
    if (scalar_argAck [31][0][0]) begin
        scalar_argVld [31][0][0] = 0;
        scalar_argAckdone [31][0][0] = 1;
    end
    if (innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_ap_vld_r) begin
        scalar_argVld [31][0][0] = 1;
        scalar_argAckdone [31][0][0] = 0;
        ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION] = ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][0] = innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_r;
    scalar_adr    [31][0][0] = {ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 640) comb block-----//
    //s = 0; r = 0; a = 28;
    if (scalar_rdat_vld_r[0][0][28]) begin
        scalar_argdone [0][0][28] = 1;
    end
    scalar_adr[0][0][28] = {ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][28]) begin
        scalar_argVld[0][0][28] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        scalar_argVld[0][0][28] = 1;
    end

    //------WRITE (scalar, global adr = 640) comb block-----//
    //s = 0; r = 0; a = 9;
    if (scalar_argAck [0][0][9]) begin
        scalar_argVld [0][0][9] = 0;
        scalar_argAckdone [0][0][9] = 1;
    end
    if (innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_ap_vld_r) begin
        scalar_argVld [0][0][9] = 1;
        scalar_argAckdone [0][0][9] = 0;
        ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION] = ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][9] = innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_r;
    scalar_adr    [0][0][9] = {ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 628) comb block-----//
    //s = 29; r = 1; a = 9;
    if (scalar_rdat_vld_r[29][1][9]) begin
        scalar_argdone [29][1][9] = 1;
    end
    scalar_adr[29][1][9] = {ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][9]) begin
        scalar_argVld[29][1][9] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        scalar_argVld[29][1][9] = 1;
    end

    //------WRITE (scalar, global adr = 628) comb block-----//
    //s = 29; r = 1; a = 2;
    if (scalar_argAck [29][1][2]) begin
        scalar_argVld [29][1][2] = 0;
        scalar_argAckdone [29][1][2] = 1;
    end
    if (innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_ap_vld_r) begin
        scalar_argVld [29][1][2] = 1;
        scalar_argAckdone [29][1][2] = 0;
        ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION] = ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][2] = innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_r;
    scalar_adr    [29][1][2] = {ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (array range, global adr = 8232, width=32, addr_width=10) -----//
    //s = 0; a = 0;
    array_argVld [0][0] = innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_pos_ce0 & innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_pos_we0;
    array_adr    [0][0][11:0] = innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_pos_address0 * 4;
    array_wdat   [0][0] = innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_pos_d0;

    //------READ (scalar, global adr = 1116) comb block-----//
    //s = 23; r = 1; a = 25;
    if (scalar_rdat_vld_r[23][1][25]) begin
        scalar_argdone [23][1][25] = 1;
    end
    scalar_adr[23][1][25] = {ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][25]) begin
        scalar_argVld[23][1][25] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        scalar_argVld[23][1][25] = 1;
    end

    //------READ (scalar, global adr = 1124) comb block-----//
    //s = 25; r = 0; a = 18;
    if (scalar_rdat_vld_r[25][0][18]) begin
        scalar_argdone [25][0][18] = 1;
    end
    scalar_adr[25][0][18] = {ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][18]) begin
        scalar_argVld[25][0][18] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        scalar_argVld[25][0][18] = 1;
    end

    //------READ (scalar, global adr = 1120) comb block-----//
    //s = 24; r = 0; a = 21;
    if (scalar_rdat_vld_r[24][0][21]) begin
        scalar_argdone [24][0][21] = 1;
    end
    scalar_adr[24][0][21] = {ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][21]) begin
        scalar_argVld[24][0][21] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        scalar_argVld[24][0][21] = 1;
    end

    //------WRITE (scalar, global adr = 1128) comb block-----//
    //s = 26; r = 1; a = 3;
    if (scalar_argAck [26][1][3]) begin
        scalar_argVld [26][1][3] = 0;
        scalar_argAckdone [26][1][3] = 1;
    end
    if (innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_ap_vld_r) begin
        scalar_argVld [26][1][3] = 1;
        scalar_argAckdone [26][1][3] = 0;
        ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION] = ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][1][3] = innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_r;
    scalar_adr    [26][1][3] = {ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    innerloop_ff_hevc_extract_rbsp_2_hls_ready = array_argRdy[0][0];
    array_ap_ce[0][0] = innerloop_ff_hevc_extract_rbsp_2_hls_ready;

    if (ap_arb_ret[innerloop_ff_hevc_extract_rbsp_2_hls] & ~ap_arb_ret_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        ap_arb_ret_running[innerloop_ff_hevc_extract_rbsp_2_hls] = 1;
        innerloop_ff_hevc_extract_rbsp_2_hls_ready = 0;
    end

    scalar_argAckdone_all[innerloop_ff_hevc_extract_rbsp_2_hls] = scalar_argAckdone[30][1][0] &
                                                scalar_argAckdone[31][0][0] &
                                                scalar_argAckdone[0][0][9] &
                                                scalar_argAckdone[29][1][2] &
                                                scalar_argAckdone[26][1][3];
    if (ap_arb_ret_running[innerloop_ff_hevc_extract_rbsp_2_hls] & scalar_argAckdone_all[innerloop_ff_hevc_extract_rbsp_2_hls] &~ ap_arb_reload_running_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        ap_arb_reload[innerloop_ff_hevc_extract_rbsp_2_hls] = 1;
        ap_arb_reload_running[innerloop_ff_hevc_extract_rbsp_2_hls] = 1;
    end

    if (ap_arb_start[innerloop_ff_hevc_extract_rbsp_2_hls] &~ ap_arb_start_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        ap_arb_start_running[innerloop_ff_hevc_extract_rbsp_2_hls] = 1;
    end

    if (ap_arb_start_running[innerloop_ff_hevc_extract_rbsp_2_hls] & ~scalar_writing_632& ~scalar_writing_636& ~scalar_writing_640& ~scalar_writing_628) begin
        ap_arb_start_running[innerloop_ff_hevc_extract_rbsp_2_hls] = 0;
        ap_arb_reload[innerloop_ff_hevc_extract_rbsp_2_hls] = 1;
    end

    scalar_argdone_all[innerloop_ff_hevc_extract_rbsp_2_hls] = scalar_argdone[30][0][14] &
                                                                scalar_argdone[31][1][18] &
                                                                scalar_argdone[0][0][28] &
                                                                scalar_argdone[29][1][9] &
                                                                scalar_argdone[23][1][25] &
                                                                scalar_argdone[25][0][18] &
                                                                scalar_argdone[24][0][21];

    if (scalar_argdone_all_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        scalar_argdone[30][0][14] = 0;
        scalar_argdone[31][1][18] = 0;
        scalar_argdone[0][0][28] = 0;
        scalar_argdone[29][1][9] = 0;
        scalar_argdone[23][1][25] = 0;
        scalar_argdone[25][0][18] = 0;
        scalar_argdone[24][0][21] = 0;

        if (ap_arb_start_r[innerloop_ff_hevc_extract_rbsp_2_hls] & ~ap_running_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
            ap_start[innerloop_ff_hevc_extract_rbsp_2_hls] = 1;
            ap_running[innerloop_ff_hevc_extract_rbsp_2_hls] = 1;
        end
        else if (ap_arb_ret_running_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
            ap_arb_ret_running[innerloop_ff_hevc_extract_rbsp_2_hls] = 0;
            ap_arb_reload_running[innerloop_ff_hevc_extract_rbsp_2_hls] = 0;
            innerloop_ff_hevc_extract_rbsp_2_hls_ready = 1;
        end
    end

    if (ap_start_r[innerloop_ff_hevc_extract_rbsp_2_hls] & ap_ready_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        ap_start[innerloop_ff_hevc_extract_rbsp_2_hls] = 0;
    end

    if (ap_done_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        ap_running[innerloop_ff_hevc_extract_rbsp_2_hls] = 0;
    end
`endif
    //============================================================
    //fill_ref_samples_mtdma_top_wrp       (f = 3)
    //============================================================
`ifdef enable_connect_fill_ref_samples_mtdma_top_wrp
    //------READ (scalar, global adr = 644) comb block-----//
    //s = 1; r = 0; a = 4;
    if (scalar_rdat_vld_r[1][0][4]) begin
        scalar_argdone [1][0][4] = 1;
    end
    scalar_adr[1][0][4] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][4]) begin
        scalar_argVld[1][0][4] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[1][0][4] = 1;
    end

    //------READ (scalar, global adr = 648) comb block-----//
    //s = 2; r = 1; a = 3;
    if (scalar_rdat_vld_r[2][1][3]) begin
        scalar_argdone [2][1][3] = 1;
    end
    scalar_adr[2][1][3] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][3]) begin
        scalar_argVld[2][1][3] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[2][1][3] = 1;
    end

    //------READ (scalar, global adr = 652) comb block-----//
    //s = 3; r = 0; a = 5;
    if (scalar_rdat_vld_r[3][0][5]) begin
        scalar_argdone [3][0][5] = 1;
    end
    scalar_adr[3][0][5] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][5]) begin
        scalar_argVld[3][0][5] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[3][0][5] = 1;
    end

    //------READ (scalar, global adr = 656) comb block-----//
    //s = 4; r = 0; a = 5;
    if (scalar_rdat_vld_r[4][0][5]) begin
        scalar_argdone [4][0][5] = 1;
    end
    scalar_adr[4][0][5] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][5]) begin
        scalar_argVld[4][0][5] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[4][0][5] = 1;
    end

    //------READ (scalar, global adr = 660) comb block-----//
    //s = 5; r = 1; a = 7;
    if (scalar_rdat_vld_r[5][1][7]) begin
        scalar_argdone [5][1][7] = 1;
    end
    scalar_adr[5][1][7] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][7]) begin
        scalar_argVld[5][1][7] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[5][1][7] = 1;
    end

    //------READ (scalar, global adr = 664) comb block-----//
    //s = 6; r = 0; a = 7;
    if (scalar_rdat_vld_r[6][0][7]) begin
        scalar_argdone [6][0][7] = 1;
    end
    scalar_adr[6][0][7] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][7]) begin
        scalar_argVld[6][0][7] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[6][0][7] = 1;
    end

    //------READ (scalar, global adr = 668) comb block-----//
    //s = 7; r = 1; a = 8;
    if (scalar_rdat_vld_r[7][1][8]) begin
        scalar_argdone [7][1][8] = 1;
    end
    scalar_adr[7][1][8] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][8]) begin
        scalar_argVld[7][1][8] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[7][1][8] = 1;
    end

    //------READ (scalar, global adr = 672) comb block-----//
    //s = 8; r = 0; a = 7;
    if (scalar_rdat_vld_r[8][0][7]) begin
        scalar_argdone [8][0][7] = 1;
    end
    scalar_adr[8][0][7] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][7]) begin
        scalar_argVld[8][0][7] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[8][0][7] = 1;
    end

    //------READ (scalar, global adr = 672) comb block-----//
    //s = 9; r = 0; a = 9;
    if (scalar_rdat_vld_r[9][0][9]) begin
        scalar_argdone [9][0][9] = 1;
    end
    scalar_adr[9][0][9] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][9]) begin
        scalar_argVld[9][0][9] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[9][0][9] = 1;
    end

    //------READ (scalar, global adr = 672) comb block-----//
    //s = 10; r = 1; a = 8;
    if (scalar_rdat_vld_r[10][1][8]) begin
        scalar_argdone [10][1][8] = 1;
    end
    scalar_adr[10][1][8] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][8]) begin
        scalar_argVld[10][1][8] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[10][1][8] = 1;
    end

    //------READ (scalar, global adr = 684) comb block-----//
    //s = 11; r = 0; a = 5;
    if (scalar_rdat_vld_r[11][0][5]) begin
        scalar_argdone [11][0][5] = 1;
    end
    scalar_adr[11][0][5] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][5]) begin
        scalar_argVld[11][0][5] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[11][0][5] = 1;
    end

    //------READ (scalar, global adr = 688) comb block-----//
    //s = 12; r = 1; a = 6;
    if (scalar_rdat_vld_r[12][1][6]) begin
        scalar_argdone [12][1][6] = 1;
    end
    scalar_adr[12][1][6] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][6]) begin
        scalar_argVld[12][1][6] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[12][1][6] = 1;
    end

    //------READ (scalar, global adr = 692) comb block-----//
    //s = 13; r = 1; a = 7;
    if (scalar_rdat_vld_r[13][1][7]) begin
        scalar_argdone [13][1][7] = 1;
    end
    scalar_adr[13][1][7] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][7]) begin
        scalar_argVld[13][1][7] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[13][1][7] = 1;
    end

    //------READ (scalar, global adr = 696) comb block-----//
    //s = 14; r = 0; a = 8;
    if (scalar_rdat_vld_r[14][0][8]) begin
        scalar_argdone [14][0][8] = 1;
    end
    scalar_adr[14][0][8] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][8]) begin
        scalar_argVld[14][0][8] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[14][0][8] = 1;
    end

    //------READ (scalar, global adr = 700) comb block-----//
    //s = 15; r = 0; a = 6;
    if (scalar_rdat_vld_r[15][0][6]) begin
        scalar_argdone [15][0][6] = 1;
    end
    scalar_adr[15][0][6] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][6]) begin
        scalar_argVld[15][0][6] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[15][0][6] = 1;
    end

    //------READ (scalar, global adr = 704) comb block-----//
    //s = 16; r = 0; a = 4;
    if (scalar_rdat_vld_r[16][0][4]) begin
        scalar_argdone [16][0][4] = 1;
    end
    scalar_adr[16][0][4] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][4]) begin
        scalar_argVld[16][0][4] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[16][0][4] = 1;
    end

    //------READ (scalar, global adr = 708) comb block-----//
    //s = 17; r = 0; a = 4;
    if (scalar_rdat_vld_r[17][0][4]) begin
        scalar_argdone [17][0][4] = 1;
    end
    scalar_adr[17][0][4] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][4]) begin
        scalar_argVld[17][0][4] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[17][0][4] = 1;
    end

    //------READ (scalar, global adr = 712) comb block-----//
    //s = 18; r = 0; a = 4;
    if (scalar_rdat_vld_r[18][0][4]) begin
        scalar_argdone [18][0][4] = 1;
    end
    scalar_adr[18][0][4] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][4]) begin
        scalar_argVld[18][0][4] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[18][0][4] = 1;
    end

    //------READ (scalar, global adr = 712) comb block-----//
    //s = 19; r = 1; a = 4;
    if (scalar_rdat_vld_r[19][1][4]) begin
        scalar_argdone [19][1][4] = 1;
    end
    scalar_adr[19][1][4] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][4]) begin
        scalar_argVld[19][1][4] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[19][1][4] = 1;
    end

    //------READ (scalar, global adr = 712) comb block-----//
    //s = 20; r = 1; a = 8;
    if (scalar_rdat_vld_r[20][1][8]) begin
        scalar_argdone [20][1][8] = 1;
    end
    scalar_adr[20][1][8] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][8]) begin
        scalar_argVld[20][1][8] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[20][1][8] = 1;
    end

    if (ap_arb_ret[fill_ref_samples_mtdma_top_wrp] & ~ap_arb_ret_r[fill_ref_samples_mtdma_top_wrp]) begin
        ap_arb_ret_running[fill_ref_samples_mtdma_top_wrp] = 1;
        fill_ref_samples_mtdma_top_wrp_ready = 0;
    end

    scalar_argAckdone_all[fill_ref_samples_mtdma_top_wrp] = 1;
    if (ap_arb_ret_running[fill_ref_samples_mtdma_top_wrp] & scalar_argAckdone_all[fill_ref_samples_mtdma_top_wrp] &~ ap_arb_reload_running_r[fill_ref_samples_mtdma_top_wrp]) begin
        ap_arb_reload[fill_ref_samples_mtdma_top_wrp] = 1;
        ap_arb_reload_running[fill_ref_samples_mtdma_top_wrp] = 1;
    end

    if (ap_arb_start[fill_ref_samples_mtdma_top_wrp] &~ ap_arb_start_r[fill_ref_samples_mtdma_top_wrp]) begin
        ap_arb_start_running[fill_ref_samples_mtdma_top_wrp] = 1;
    end

    if (ap_arb_start_running[fill_ref_samples_mtdma_top_wrp] & ~scalar_writing_644& ~scalar_writing_648& ~scalar_writing_652& ~scalar_writing_656& ~scalar_writing_660& ~scalar_writing_664& ~scalar_writing_668& ~scalar_writing_672& ~scalar_writing_684& ~scalar_writing_688& ~scalar_writing_692& ~scalar_writing_696& ~scalar_writing_700& ~scalar_writing_704& ~scalar_writing_708& ~scalar_writing_712) begin
        ap_arb_start_running[fill_ref_samples_mtdma_top_wrp] = 0;
        ap_arb_reload[fill_ref_samples_mtdma_top_wrp] = 1;
    end

    scalar_argdone_all[fill_ref_samples_mtdma_top_wrp] = scalar_argdone[1][0][4] &
                                                                scalar_argdone[2][1][3] &
                                                                scalar_argdone[3][0][5] &
                                                                scalar_argdone[4][0][5] &
                                                                scalar_argdone[5][1][7] &
                                                                scalar_argdone[6][0][7] &
                                                                scalar_argdone[7][1][8] &
                                                                scalar_argdone[8][0][7] &
                                                                scalar_argdone[9][0][9] &
                                                                scalar_argdone[10][1][8] &
                                                                scalar_argdone[11][0][5] &
                                                                scalar_argdone[12][1][6] &
                                                                scalar_argdone[13][1][7] &
                                                                scalar_argdone[14][0][8] &
                                                                scalar_argdone[15][0][6] &
                                                                scalar_argdone[16][0][4] &
                                                                scalar_argdone[17][0][4] &
                                                                scalar_argdone[18][0][4] &
                                                                scalar_argdone[19][1][4] &
                                                                scalar_argdone[20][1][8];

    if (scalar_argdone_all_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argdone[1][0][4] = 0;
        scalar_argdone[2][1][3] = 0;
        scalar_argdone[3][0][5] = 0;
        scalar_argdone[4][0][5] = 0;
        scalar_argdone[5][1][7] = 0;
        scalar_argdone[6][0][7] = 0;
        scalar_argdone[7][1][8] = 0;
        scalar_argdone[8][0][7] = 0;
        scalar_argdone[9][0][9] = 0;
        scalar_argdone[10][1][8] = 0;
        scalar_argdone[11][0][5] = 0;
        scalar_argdone[12][1][6] = 0;
        scalar_argdone[13][1][7] = 0;
        scalar_argdone[14][0][8] = 0;
        scalar_argdone[15][0][6] = 0;
        scalar_argdone[16][0][4] = 0;
        scalar_argdone[17][0][4] = 0;
        scalar_argdone[18][0][4] = 0;
        scalar_argdone[19][1][4] = 0;
        scalar_argdone[20][1][8] = 0;

        if (ap_arb_start_r[fill_ref_samples_mtdma_top_wrp] & ~ap_running_r[fill_ref_samples_mtdma_top_wrp]) begin
            ap_start[fill_ref_samples_mtdma_top_wrp] = 1;
            ap_running[fill_ref_samples_mtdma_top_wrp] = 1;
        end
        else if (ap_arb_ret_running_r[fill_ref_samples_mtdma_top_wrp]) begin
            ap_arb_ret_running[fill_ref_samples_mtdma_top_wrp] = 0;
            ap_arb_reload_running[fill_ref_samples_mtdma_top_wrp] = 0;
            fill_ref_samples_mtdma_top_wrp_ready = 1;
        end
    end

    if (ap_start_r[fill_ref_samples_mtdma_top_wrp] & ap_ready_r[fill_ref_samples_mtdma_top_wrp]) begin
        ap_start[fill_ref_samples_mtdma_top_wrp] = 0;
    end

    if (ap_done_r[fill_ref_samples_mtdma_top_wrp]) begin
        ap_running[fill_ref_samples_mtdma_top_wrp] = 0;
    end
`endif
    //============================================================
    //hevc_find_frame_end_hls       (f = 4)
    //============================================================
`ifdef enable_connect_hevc_find_frame_end_hls
    //------READ (scalar, global adr = 0) comb block-----//
    //s = 0; r = 1; a = 11;
    if (scalar_rdat_vld_r[0][1][11]) begin
        scalar_argdone [0][1][11] = 1;
    end
    scalar_adr[0][1][11] = {ap_part[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][11]) begin
        scalar_argVld[0][1][11] = 0;
    end
    if (ap_arb_reload_r[hevc_find_frame_end_hls]) begin
        scalar_argVld[0][1][11] = 1;
    end

    //------READ (scalar, global adr = 0) comb block-----//
    //s = 1; r = 1; a = 4;
    if (scalar_rdat_vld_r[1][1][4]) begin
        scalar_argdone [1][1][4] = 1;
    end
    scalar_adr[1][1][4] = {ap_part[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][4]) begin
        scalar_argVld[1][1][4] = 0;
    end
    if (ap_arb_reload_r[hevc_find_frame_end_hls]) begin
        scalar_argVld[1][1][4] = 1;
    end

    //------WRITE (scalar, global adr = 0) comb block-----//
    //s = 0; r = 0; a = 0;
    if (scalar_argAck [0][0][0]) begin
        scalar_argVld [0][0][0] = 0;
        scalar_argAckdone [0][0][0] = 1;
    end
    if (hevc_find_frame_end_hls_state64_0_o_ap_vld_r) begin
        scalar_argVld [0][0][0] = 1;
        scalar_argAckdone [0][0][0] = 0;
        ap_part_w[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION] = ap_part[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][0] = hevc_find_frame_end_hls_state64_0_o_r;
    scalar_adr    [0][0][0] = {ap_part_w[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 0) comb block-----//
    //s = 1; r = 0; a = 0;
    if (scalar_argAck [1][0][0]) begin
        scalar_argVld [1][0][0] = 0;
        scalar_argAckdone [1][0][0] = 1;
    end
    if (hevc_find_frame_end_hls_state64_1_o_ap_vld_r) begin
        scalar_argVld [1][0][0] = 1;
        scalar_argAckdone [1][0][0] = 0;
        ap_part_w[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION] = ap_part[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][0][0] = hevc_find_frame_end_hls_state64_1_o_r;
    scalar_adr    [1][0][0] = {ap_part_w[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 8) comb block-----//
    //s = 2; r = 0; a = 5;
    if (scalar_rdat_vld_r[2][0][5]) begin
        scalar_argdone [2][0][5] = 1;
    end
    scalar_adr[2][0][5] = {ap_part[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][5]) begin
        scalar_argVld[2][0][5] = 0;
    end
    if (ap_arb_reload_r[hevc_find_frame_end_hls]) begin
        scalar_argVld[2][0][5] = 1;
    end

    //------WRITE (scalar, global adr = 8) comb block-----//
    //s = 2; r = 0; a = 0;
    if (scalar_argAck [2][0][0]) begin
        scalar_argVld [2][0][0] = 0;
        scalar_argAckdone [2][0][0] = 1;
    end
    if (hevc_find_frame_end_hls_frame_start_found_o_ap_vld_r) begin
        scalar_argVld [2][0][0] = 1;
        scalar_argAckdone [2][0][0] = 0;
        ap_part_w[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION] = ap_part[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][0][0] = hevc_find_frame_end_hls_frame_start_found_o_r;
    scalar_adr    [2][0][0] = {ap_part_w[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (ap_arb_ret[hevc_find_frame_end_hls] & ~ap_arb_ret_r[hevc_find_frame_end_hls]) begin
        ap_arb_ret_running[hevc_find_frame_end_hls] = 1;
        hevc_find_frame_end_hls_ready = 0;
    end

    scalar_argAckdone_all[hevc_find_frame_end_hls] = scalar_argAckdone[0][0][0] &
                                                scalar_argAckdone[1][0][0] &
                                                scalar_argAckdone[2][0][0];
    if (ap_arb_ret_running[hevc_find_frame_end_hls] & scalar_argAckdone_all[hevc_find_frame_end_hls] &~ ap_arb_reload_running_r[hevc_find_frame_end_hls]) begin
        ap_arb_reload[hevc_find_frame_end_hls] = 1;
        ap_arb_reload_running[hevc_find_frame_end_hls] = 1;
    end

    if (ap_arb_start[hevc_find_frame_end_hls] &~ ap_arb_start_r[hevc_find_frame_end_hls]) begin
        ap_arb_start_running[hevc_find_frame_end_hls] = 1;
    end

    if (ap_arb_start_running[hevc_find_frame_end_hls] & ~scalar_writing_0& ~scalar_writing_8) begin
        ap_arb_start_running[hevc_find_frame_end_hls] = 0;
        ap_arb_reload[hevc_find_frame_end_hls] = 1;
    end

    scalar_argdone_all[hevc_find_frame_end_hls] = scalar_argdone[0][1][11] &
                                                                scalar_argdone[1][1][4] &
                                                                scalar_argdone[2][0][5];

    if (scalar_argdone_all_r[hevc_find_frame_end_hls]) begin
        scalar_argdone[0][1][11] = 0;
        scalar_argdone[1][1][4] = 0;
        scalar_argdone[2][0][5] = 0;

        if (ap_arb_start_r[hevc_find_frame_end_hls] & ~ap_running_r[hevc_find_frame_end_hls]) begin
            ap_start[hevc_find_frame_end_hls] = 1;
            ap_running[hevc_find_frame_end_hls] = 1;
        end
        else if (ap_arb_ret_running_r[hevc_find_frame_end_hls]) begin
            ap_arb_ret_running[hevc_find_frame_end_hls] = 0;
            ap_arb_reload_running[hevc_find_frame_end_hls] = 0;
            hevc_find_frame_end_hls_ready = 1;
        end
    end

    if (ap_start_r[hevc_find_frame_end_hls] & ap_ready_r[hevc_find_frame_end_hls]) begin
        ap_start[hevc_find_frame_end_hls] = 0;
    end

    if (ap_done_r[hevc_find_frame_end_hls]) begin
        ap_running[hevc_find_frame_end_hls] = 0;
    end
`endif
    //============================================================
    //intra_prediction_unit_ex_hls       (f = 5)
    //============================================================
`ifdef enable_connect_intra_prediction_unit_ex_hls
    //------READ (scalar, complete partition, global adr = 520) comb block-----//
    //s = 2; r = 1; a = 16;
    if (scalar_rdat_vld_r[2][1][16]) begin
        scalar_argdone [2][1][16] = 1;
    end
    scalar_adr    [2][1][16] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][16]) begin
        scalar_argVld [2][1][16] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld [2][1][16] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 520) comb block-----//
    //s = 2; r = 1; a = 1;
    if (scalar_argAck [2][1][1]) begin
        scalar_argVld [2][1][1] = 0;
        scalar_argAckdone [2][1][1] = 1;
    end
    if (intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_ap_vld_r) begin
        scalar_argVld [2][1][1] = 1;
        scalar_argAckdone [2][1][1] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][1][1] = intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_r;
    scalar_adr    [2][1][1] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 521) comb block-----//
    //s = 2; r = 0; a = 18;
    if (scalar_rdat_vld_r[2][0][18]) begin
        scalar_argdone [2][0][18] = 1;
    end
    scalar_adr    [2][0][18] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][18]) begin
        scalar_argVld [2][0][18] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld [2][0][18] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 521) comb block-----//
    //s = 2; r = 0; a = 2;
    if (scalar_argAck [2][0][2]) begin
        scalar_argVld [2][0][2] = 0;
        scalar_argAckdone [2][0][2] = 1;
    end
    if (intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_ap_vld_r) begin
        scalar_argVld [2][0][2] = 1;
        scalar_argAckdone [2][0][2] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][0][2] = intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_r;
    scalar_adr    [2][0][2] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 522) comb block-----//
    //s = 2; r = 1; a = 17;
    if (scalar_rdat_vld_r[2][1][17]) begin
        scalar_argdone [2][1][17] = 1;
    end
    scalar_adr    [2][1][17] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][17]) begin
        scalar_argVld [2][1][17] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld [2][1][17] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 522) comb block-----//
    //s = 2; r = 1; a = 2;
    if (scalar_argAck [2][1][2]) begin
        scalar_argVld [2][1][2] = 0;
        scalar_argAckdone [2][1][2] = 1;
    end
    if (intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_ap_vld_r) begin
        scalar_argVld [2][1][2] = 1;
        scalar_argAckdone [2][1][2] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][1][2] = intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_r;
    scalar_adr    [2][1][2] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 523) comb block-----//
    //s = 2; r = 0; a = 19;
    if (scalar_rdat_vld_r[2][0][19]) begin
        scalar_argdone [2][0][19] = 1;
    end
    scalar_adr    [2][0][19] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][19]) begin
        scalar_argVld [2][0][19] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld [2][0][19] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 523) comb block-----//
    //s = 2; r = 0; a = 3;
    if (scalar_argAck [2][0][3]) begin
        scalar_argVld [2][0][3] = 0;
        scalar_argAckdone [2][0][3] = 1;
    end
    if (intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_ap_vld_r) begin
        scalar_argVld [2][0][3] = 1;
        scalar_argAckdone [2][0][3] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][0][3] = intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_r;
    scalar_adr    [2][0][3] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 0; a = 26;
    if (scalar_rdat_vld_r[13][0][26]) begin
        scalar_argdone [13][0][26] = 1;
    end
    scalar_adr[13][0][26] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][26]) begin
        scalar_argVld[13][0][26] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[13][0][26] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 1; a = 5;
    if (scalar_rdat_vld_r[3][1][5]) begin
        scalar_argdone [3][1][5] = 1;
    end
    scalar_adr[3][1][5] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][5]) begin
        scalar_argVld[3][1][5] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[3][1][5] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 0; a = 11;
    if (scalar_rdat_vld_r[29][0][11]) begin
        scalar_argdone [29][0][11] = 1;
    end
    scalar_adr[29][0][11] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][11]) begin
        scalar_argVld[29][0][11] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[29][0][11] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 21;
    if (scalar_rdat_vld_r[26][1][21]) begin
        scalar_argdone [26][1][21] = 1;
    end
    scalar_adr[26][1][21] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][21]) begin
        scalar_argVld[26][1][21] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[26][1][21] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 0; a = 27;
    if (scalar_rdat_vld_r[23][0][27]) begin
        scalar_argdone [23][0][27] = 1;
    end
    scalar_adr[23][0][27] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][27]) begin
        scalar_argVld[23][0][27] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[23][0][27] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 20;
    if (scalar_rdat_vld_r[24][1][20]) begin
        scalar_argdone [24][1][20] = 1;
    end
    scalar_adr[24][1][20] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][20]) begin
        scalar_argVld[24][1][20] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[24][1][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 1; a = 27;
    if (scalar_rdat_vld_r[0][1][27]) begin
        scalar_argdone [0][1][27] = 1;
    end
    scalar_adr    [0][1][27] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][27]) begin
        scalar_argVld [0][1][27] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld [0][1][27] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 1; a = 9;
    if (scalar_argAck [0][1][9]) begin
        scalar_argVld [0][1][9] = 0;
        scalar_argAckdone [0][1][9] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_ap_vld_r) begin
        scalar_argVld [0][1][9] = 1;
        scalar_argAckdone [0][1][9] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][9] = intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_r;
    scalar_adr    [0][1][9] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 0; a = 29;
    if (scalar_rdat_vld_r[0][0][29]) begin
        scalar_argdone [0][0][29] = 1;
    end
    scalar_adr    [0][0][29] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][29]) begin
        scalar_argVld [0][0][29] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld [0][0][29] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 0; a = 10;
    if (scalar_argAck [0][0][10]) begin
        scalar_argVld [0][0][10] = 0;
        scalar_argAckdone [0][0][10] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_ap_vld_r) begin
        scalar_argVld [0][0][10] = 1;
        scalar_argAckdone [0][0][10] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][10] = intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_r;
    scalar_adr    [0][0][10] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 1; a = 28;
    if (scalar_rdat_vld_r[0][1][28]) begin
        scalar_argdone [0][1][28] = 1;
    end
    scalar_adr    [0][1][28] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][28]) begin
        scalar_argVld [0][1][28] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld [0][1][28] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 1; a = 10;
    if (scalar_argAck [0][1][10]) begin
        scalar_argVld [0][1][10] = 0;
        scalar_argAckdone [0][1][10] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_ap_vld_r) begin
        scalar_argVld [0][1][10] = 1;
        scalar_argAckdone [0][1][10] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][10] = intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_r;
    scalar_adr    [0][1][10] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 0; a = 30;
    if (scalar_rdat_vld_r[0][0][30]) begin
        scalar_argdone [0][0][30] = 1;
    end
    scalar_adr    [0][0][30] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][30]) begin
        scalar_argVld [0][0][30] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld [0][0][30] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 0; a = 11;
    if (scalar_argAck [0][0][11]) begin
        scalar_argVld [0][0][11] = 0;
        scalar_argAckdone [0][0][11] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_ap_vld_r) begin
        scalar_argVld [0][0][11] = 1;
        scalar_argAckdone [0][0][11] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][11] = intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_r;
    scalar_adr    [0][0][11] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 508) comb block-----//
    //s = 31; r = 1; a = 0;
    if (scalar_argAck [31][1][0]) begin
        scalar_argVld [31][1][0] = 0;
        scalar_argAckdone [31][1][0] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_ap_vld_r) begin
        scalar_argVld [31][1][0] = 1;
        scalar_argAckdone [31][1][0] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][1][0] = intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_r;
    scalar_adr    [31][1][0] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 509) comb block-----//
    //s = 31; r = 0; a = 1;
    if (scalar_argAck [31][0][1]) begin
        scalar_argVld [31][0][1] = 0;
        scalar_argAckdone [31][0][1] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_ap_vld_r) begin
        scalar_argVld [31][0][1] = 1;
        scalar_argAckdone [31][0][1] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][1] = intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_r;
    scalar_adr    [31][0][1] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 510) comb block-----//
    //s = 31; r = 1; a = 1;
    if (scalar_argAck [31][1][1]) begin
        scalar_argVld [31][1][1] = 0;
        scalar_argAckdone [31][1][1] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_ap_vld_r) begin
        scalar_argVld [31][1][1] = 1;
        scalar_argAckdone [31][1][1] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][1][1] = intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_r;
    scalar_adr    [31][1][1] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 511) comb block-----//
    //s = 31; r = 0; a = 2;
    if (scalar_argAck [31][0][2]) begin
        scalar_argVld [31][0][2] = 0;
        scalar_argAckdone [31][0][2] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_ap_vld_r) begin
        scalar_argVld [31][0][2] = 1;
        scalar_argAckdone [31][0][2] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][2] = intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_r;
    scalar_adr    [31][0][2] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 516) comb block-----//
    //s = 1; r = 1; a = 1;
    if (scalar_argAck [1][1][1]) begin
        scalar_argVld [1][1][1] = 0;
        scalar_argAckdone [1][1][1] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_ap_vld_r) begin
        scalar_argVld [1][1][1] = 1;
        scalar_argAckdone [1][1][1] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][1][1] = intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_r;
    scalar_adr    [1][1][1] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 517) comb block-----//
    //s = 1; r = 0; a = 2;
    if (scalar_argAck [1][0][2]) begin
        scalar_argVld [1][0][2] = 0;
        scalar_argAckdone [1][0][2] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_ap_vld_r) begin
        scalar_argVld [1][0][2] = 1;
        scalar_argAckdone [1][0][2] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][0][2] = intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_r;
    scalar_adr    [1][0][2] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 518) comb block-----//
    //s = 1; r = 1; a = 2;
    if (scalar_argAck [1][1][2]) begin
        scalar_argVld [1][1][2] = 0;
        scalar_argAckdone [1][1][2] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_ap_vld_r) begin
        scalar_argVld [1][1][2] = 1;
        scalar_argAckdone [1][1][2] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][1][2] = intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_r;
    scalar_adr    [1][1][2] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 519) comb block-----//
    //s = 1; r = 0; a = 3;
    if (scalar_argAck [1][0][3]) begin
        scalar_argVld [1][0][3] = 0;
        scalar_argAckdone [1][0][3] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_ap_vld_r) begin
        scalar_argVld [1][0][3] = 1;
        scalar_argAckdone [1][0][3] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][0][3] = intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_r;
    scalar_adr    [1][0][3] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 324) comb block-----//
    //s = 17; r = 0; a = 13;
    if (scalar_rdat_vld_r[17][0][13]) begin
        scalar_argdone [17][0][13] = 1;
    end
    scalar_adr[17][0][13] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][13]) begin
        scalar_argVld[17][0][13] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[17][0][13] = 1;
    end

    //------WRITE (scalar, global adr = 576) comb block-----//
    //s = 16; r = 0; a = 3;
    if (scalar_argAck [16][0][3]) begin
        scalar_argVld [16][0][3] = 0;
        scalar_argAckdone [16][0][3] = 1;
    end
    if (intra_prediction_unit_ex_hls_max_trafo_depth_ap_vld_r) begin
        scalar_argVld [16][0][3] = 1;
        scalar_argAckdone [16][0][3] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][0][3] = intra_prediction_unit_ex_hls_max_trafo_depth_r;
    scalar_adr    [16][0][3] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 384) comb block-----//
    //s = 0; r = 1; a = 29;
    if (scalar_rdat_vld_r[0][1][29]) begin
        scalar_argdone [0][1][29] = 1;
    end
    scalar_adr[0][1][29] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][29]) begin
        scalar_argVld[0][1][29] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[0][1][29] = 1;
    end

    //------READ (scalar, global adr = 568) comb block-----//
    //s = 14; r = 1; a = 22;
    if (scalar_rdat_vld_r[14][1][22]) begin
        scalar_argdone [14][1][22] = 1;
    end
    scalar_adr[14][1][22] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][22]) begin
        scalar_argVld[14][1][22] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[14][1][22] = 1;
    end

    //------READ (scalar, global adr = 1252) comb block-----//
    //s = 25; r = 1; a = 17;
    if (scalar_rdat_vld_r[25][1][17]) begin
        scalar_argdone [25][1][17] = 1;
    end
    scalar_adr[25][1][17] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][17]) begin
        scalar_argVld[25][1][17] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[25][1][17] = 1;
    end

    if (ap_arb_ret[intra_prediction_unit_ex_hls] & ~ap_arb_ret_r[intra_prediction_unit_ex_hls]) begin
        ap_arb_ret_running[intra_prediction_unit_ex_hls] = 1;
        intra_prediction_unit_ex_hls_ready = 0;
    end

    scalar_argAckdone_all[intra_prediction_unit_ex_hls] = scalar_argAckdone[2][1][1] &
                                                scalar_argAckdone[2][0][2] &
                                                scalar_argAckdone[2][1][2] &
                                                scalar_argAckdone[2][0][3] &
                                                scalar_argAckdone[0][1][9] &
                                                scalar_argAckdone[0][0][10] &
                                                scalar_argAckdone[0][1][10] &
                                                scalar_argAckdone[0][0][11] &
                                                scalar_argAckdone[31][1][0] &
                                                scalar_argAckdone[31][0][1] &
                                                scalar_argAckdone[31][1][1] &
                                                scalar_argAckdone[31][0][2] &
                                                scalar_argAckdone[1][1][1] &
                                                scalar_argAckdone[1][0][2] &
                                                scalar_argAckdone[1][1][2] &
                                                scalar_argAckdone[1][0][3] &
                                                scalar_argAckdone[16][0][3];
    if (ap_arb_ret_running[intra_prediction_unit_ex_hls] & scalar_argAckdone_all[intra_prediction_unit_ex_hls] &~ ap_arb_reload_running_r[intra_prediction_unit_ex_hls]) begin
        ap_arb_reload[intra_prediction_unit_ex_hls] = 1;
        ap_arb_reload_running[intra_prediction_unit_ex_hls] = 1;
    end

    if (ap_arb_start[intra_prediction_unit_ex_hls] &~ ap_arb_start_r[intra_prediction_unit_ex_hls]) begin
        ap_arb_start_running[intra_prediction_unit_ex_hls] = 1;
    end

    if (ap_arb_start_running[intra_prediction_unit_ex_hls] & ~scalar_writing_520& ~scalar_writing_521& ~scalar_writing_522& ~scalar_writing_523& ~scalar_writing_564& ~scalar_writing_604& ~scalar_writing_608& ~scalar_writing_512& ~scalar_writing_513& ~scalar_writing_514& ~scalar_writing_515& ~scalar_writing_568) begin
        ap_arb_start_running[intra_prediction_unit_ex_hls] = 0;
        ap_arb_reload[intra_prediction_unit_ex_hls] = 1;
    end

    scalar_argdone_all[intra_prediction_unit_ex_hls] = scalar_argdone[2][1][16] &
                                                                scalar_argdone[2][0][18] &
                                                                scalar_argdone[2][1][17] &
                                                                scalar_argdone[2][0][19] &
                                                                scalar_argdone[13][0][26] &
                                                                scalar_argdone[3][1][5] &
                                                                scalar_argdone[29][0][11] &
                                                                scalar_argdone[26][1][21] &
                                                                scalar_argdone[23][0][27] &
                                                                scalar_argdone[24][1][20] &
                                                                scalar_argdone[0][1][27] &
                                                                scalar_argdone[0][0][29] &
                                                                scalar_argdone[0][1][28] &
                                                                scalar_argdone[0][0][30] &
                                                                scalar_argdone[17][0][13] &
                                                                scalar_argdone[0][1][29] &
                                                                scalar_argdone[14][1][22] &
                                                                scalar_argdone[25][1][17];

    if (scalar_argdone_all_r[intra_prediction_unit_ex_hls]) begin
        scalar_argdone[2][1][16] = 0;
        scalar_argdone[2][0][18] = 0;
        scalar_argdone[2][1][17] = 0;
        scalar_argdone[2][0][19] = 0;
        scalar_argdone[13][0][26] = 0;
        scalar_argdone[3][1][5] = 0;
        scalar_argdone[29][0][11] = 0;
        scalar_argdone[26][1][21] = 0;
        scalar_argdone[23][0][27] = 0;
        scalar_argdone[24][1][20] = 0;
        scalar_argdone[0][1][27] = 0;
        scalar_argdone[0][0][29] = 0;
        scalar_argdone[0][1][28] = 0;
        scalar_argdone[0][0][30] = 0;
        scalar_argdone[17][0][13] = 0;
        scalar_argdone[0][1][29] = 0;
        scalar_argdone[14][1][22] = 0;
        scalar_argdone[25][1][17] = 0;

        if (ap_arb_start_r[intra_prediction_unit_ex_hls] & ~ap_running_r[intra_prediction_unit_ex_hls]) begin
            ap_start[intra_prediction_unit_ex_hls] = 1;
            ap_running[intra_prediction_unit_ex_hls] = 1;
        end
        else if (ap_arb_ret_running_r[intra_prediction_unit_ex_hls]) begin
            ap_arb_ret_running[intra_prediction_unit_ex_hls] = 0;
            ap_arb_reload_running[intra_prediction_unit_ex_hls] = 0;
            intra_prediction_unit_ex_hls_ready = 1;
        end
    end

    if (ap_start_r[intra_prediction_unit_ex_hls] & ap_ready_r[intra_prediction_unit_ex_hls]) begin
        ap_start[intra_prediction_unit_ex_hls] = 0;
    end

    if (ap_done_r[intra_prediction_unit_ex_hls]) begin
        ap_running[intra_prediction_unit_ex_hls] = 0;
    end
`endif
    //============================================================
    //hls_transform_unit_ex_hls       (f = 6)
    //============================================================
`ifdef enable_connect_hls_transform_unit_ex_hls
    //------READ (scalar, global adr = 20) comb block-----//
    //s = 5; r = 1; a = 10;
    if (scalar_rdat_vld_r[5][1][10]) begin
        scalar_argdone [5][1][10] = 1;
    end
    scalar_adr[5][1][10] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][10]) begin
        scalar_argVld[5][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[5][1][10] = 1;
    end

    //------READ (scalar, global adr = 16) comb block-----//
    //s = 4; r = 0; a = 8;
    if (scalar_rdat_vld_r[4][0][8]) begin
        scalar_argdone [4][0][8] = 1;
    end
    scalar_adr[4][0][8] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][8]) begin
        scalar_argVld[4][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[4][0][8] = 1;
    end

    //------READ (scalar, global adr = 1260) comb block-----//
    //s = 27; r = 0; a = 7;
    if (scalar_rdat_vld_r[27][0][7]) begin
        scalar_argdone [27][0][7] = 1;
    end
    scalar_adr[27][0][7] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][7]) begin
        scalar_argVld[27][0][7] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[27][0][7] = 1;
    end

    //------READ (scalar, global adr = 1156) comb block-----//
    //s = 1; r = 0; a = 16;
    if (scalar_rdat_vld_r[1][0][16]) begin
        scalar_argdone [1][0][16] = 1;
    end
    scalar_adr[1][0][16] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][16]) begin
        scalar_argVld[1][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[1][0][16] = 1;
    end

    //------READ (scalar, global adr = 1264) comb block-----//
    //s = 28; r = 1; a = 11;
    if (scalar_rdat_vld_r[28][1][11]) begin
        scalar_argdone [28][1][11] = 1;
    end
    scalar_adr[28][1][11] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][11]) begin
        scalar_argVld[28][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[28][1][11] = 1;
    end

    //------READ (scalar, global adr = 1268) comb block-----//
    //s = 29; r = 1; a = 3;
    if (scalar_rdat_vld_r[29][1][3]) begin
        scalar_argdone [29][1][3] = 1;
    end
    scalar_adr[29][1][3] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][3]) begin
        scalar_argVld[29][1][3] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[29][1][3] = 1;
    end

    //------READ (scalar, global adr = 1132) comb block-----//
    //s = 27; r = 1; a = 6;
    if (scalar_rdat_vld_r[27][1][6]) begin
        scalar_argdone [27][1][6] = 1;
    end
    scalar_adr[27][1][6] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][6]) begin
        scalar_argVld[27][1][6] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[27][1][6] = 1;
    end

    //------READ (scalar, global adr = 1272) comb block-----//
    //s = 30; r = 0; a = 9;
    if (scalar_rdat_vld_r[30][0][9]) begin
        scalar_argdone [30][0][9] = 1;
    end
    scalar_adr[30][0][9] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][9]) begin
        scalar_argVld[30][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[30][0][9] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 18;
    if (scalar_rdat_vld_r[12][0][18]) begin
        scalar_argdone [12][0][18] = 1;
    end
    scalar_adr[12][0][18] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][18]) begin
        scalar_argVld[12][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[12][0][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 0; a = 11;
    if (scalar_rdat_vld_r[20][0][11]) begin
        scalar_argdone [20][0][11] = 1;
    end
    scalar_adr    [20][0][11] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][11]) begin
        scalar_argVld [20][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [20][0][11] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 0; a = 17;
    if (scalar_rdat_vld_r[21][0][17]) begin
        scalar_argdone [21][0][17] = 1;
    end
    scalar_adr    [21][0][17] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][17]) begin
        scalar_argVld [21][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [21][0][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 0; a = 11;
    if (scalar_rdat_vld_r[22][0][11]) begin
        scalar_argdone [22][0][11] = 1;
    end
    scalar_adr    [22][0][11] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][11]) begin
        scalar_argVld [22][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [22][0][11] = 1;
    end

    //------READ (scalar, complete partition, global adr = 348) comb block-----//
    //s = 23; r = 0; a = 16;
    if (scalar_rdat_vld_r[23][0][16]) begin
        scalar_argdone [23][0][16] = 1;
    end
    scalar_adr    [23][0][16] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][16]) begin
        scalar_argVld [23][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [23][0][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 352) comb block-----//
    //s = 24; r = 0; a = 12;
    if (scalar_rdat_vld_r[24][0][12]) begin
        scalar_argdone [24][0][12] = 1;
    end
    scalar_adr    [24][0][12] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][12]) begin
        scalar_argVld [24][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [24][0][12] = 1;
    end

    //------READ (scalar, complete partition, global adr = 356) comb block-----//
    //s = 25; r = 0; a = 7;
    if (scalar_rdat_vld_r[25][0][7]) begin
        scalar_argdone [25][0][7] = 1;
    end
    scalar_adr    [25][0][7] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][7]) begin
        scalar_argVld [25][0][7] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [25][0][7] = 1;
    end

    //------READ (scalar, global adr = 484) comb block-----//
    //s = 25; r = 1; a = 6;
    if (scalar_rdat_vld_r[25][1][6]) begin
        scalar_argdone [25][1][6] = 1;
    end
    scalar_adr[25][1][6] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][6]) begin
        scalar_argVld[25][1][6] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[25][1][6] = 1;
    end

    //------READ (scalar, global adr = 488) comb block-----//
    //s = 26; r = 1; a = 13;
    if (scalar_rdat_vld_r[26][1][13]) begin
        scalar_argdone [26][1][13] = 1;
    end
    scalar_adr[26][1][13] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][13]) begin
        scalar_argVld[26][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[26][1][13] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 0; a = 15;
    if (scalar_rdat_vld_r[15][0][15]) begin
        scalar_argdone [15][0][15] = 1;
    end
    scalar_adr[15][0][15] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][15]) begin
        scalar_argVld[15][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[15][0][15] = 1;
    end

    //------WRITE (scalar, global adr = 492) comb block-----//
    //s = 27; r = 0; a = 1;
    if (scalar_argAck [27][0][1]) begin
        scalar_argVld [27][0][1] = 0;
        scalar_argAckdone [27][0][1] = 1;
    end
    if (hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_ap_vld_r) begin
        scalar_argVld [27][0][1] = 1;
        scalar_argAckdone [27][0][1] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][1] = hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_r;
    scalar_adr    [27][0][1] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 496) comb block-----//
    //s = 28; r = 1; a = 1;
    if (scalar_argAck [28][1][1]) begin
        scalar_argVld [28][1][1] = 0;
        scalar_argAckdone [28][1][1] = 1;
    end
    if (hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_ap_vld_r) begin
        scalar_argVld [28][1][1] = 1;
        scalar_argAckdone [28][1][1] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][1][1] = hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_r;
    scalar_adr    [28][1][1] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 14;
    if (scalar_rdat_vld_r[6][1][14]) begin
        scalar_argdone [6][1][14] = 1;
    end
    scalar_adr[6][1][14] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][14]) begin
        scalar_argVld[6][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[6][1][14] = 1;
    end

    //------WRITE (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 4;
    if (scalar_argAck [6][1][4]) begin
        scalar_argVld [6][1][4] = 0;
        scalar_argAckdone [6][1][4] = 1;
    end
    if (hls_transform_unit_ex_hls_qp_y_o_ap_vld_r) begin
        scalar_argVld [6][1][4] = 1;
        scalar_argAckdone [6][1][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][4] = hls_transform_unit_ex_hls_qp_y_o_r;
    scalar_adr    [6][1][4] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 168) comb block-----//
    //s = 10; r = 0; a = 6;
    if (scalar_argAck [10][0][6]) begin
        scalar_argVld [10][0][6] = 0;
        scalar_argAckdone [10][0][6] = 1;
    end
    if (hls_transform_unit_ex_hls_log2_trafo_size_ap_vld_r) begin
        scalar_argVld [10][0][6] = 1;
        scalar_argAckdone [10][0][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][6] = hls_transform_unit_ex_hls_log2_trafo_size_r;
    scalar_adr    [10][0][6] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 56) comb block-----//
    //s = 14; r = 1; a = 19;
    if (scalar_rdat_vld_r[14][1][19]) begin
        scalar_argdone [14][1][19] = 1;
    end
    scalar_adr[14][1][19] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][19]) begin
        scalar_argVld[14][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[14][1][19] = 1;
    end

    //------WRITE (scalar, global adr = 56) comb block-----//
    //s = 14; r = 1; a = 4;
    if (scalar_argAck [14][1][4]) begin
        scalar_argVld [14][1][4] = 0;
        scalar_argAckdone [14][1][4] = 1;
    end
    if (hls_transform_unit_ex_hls_log2_trafo_size_c_o_ap_vld_r) begin
        scalar_argVld [14][1][4] = 1;
        scalar_argAckdone [14][1][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][4] = hls_transform_unit_ex_hls_log2_trafo_size_c_o_r;
    scalar_adr    [14][1][4] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 48) comb block-----//
    //s = 12; r = 1; a = 17;
    if (scalar_rdat_vld_r[12][1][17]) begin
        scalar_argdone [12][1][17] = 1;
    end
    scalar_adr[12][1][17] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][17]) begin
        scalar_argVld[12][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[12][1][17] = 1;
    end

    //------WRITE (scalar, global adr = 48) comb block-----//
    //s = 12; r = 0; a = 4;
    if (scalar_argAck [12][0][4]) begin
        scalar_argVld [12][0][4] = 0;
        scalar_argAckdone [12][0][4] = 1;
    end
    if (hls_transform_unit_ex_hls_scan_idx_o_ap_vld_r) begin
        scalar_argVld [12][0][4] = 1;
        scalar_argAckdone [12][0][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][4] = hls_transform_unit_ex_hls_scan_idx_o_r;
    scalar_adr    [12][0][4] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 52) comb block-----//
    //s = 13; r = 1; a = 4;
    if (scalar_argAck [13][1][4]) begin
        scalar_argVld [13][1][4] = 0;
        scalar_argAckdone [13][1][4] = 1;
    end
    if (hls_transform_unit_ex_hls_scan_idx_c_ap_vld_r) begin
        scalar_argVld [13][1][4] = 1;
        scalar_argAckdone [13][1][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][4] = hls_transform_unit_ex_hls_scan_idx_c_r;
    scalar_adr    [13][1][4] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1136) comb block-----//
    //s = 28; r = 0; a = 12;
    if (scalar_rdat_vld_r[28][0][12]) begin
        scalar_argdone [28][0][12] = 1;
    end
    scalar_adr[28][0][12] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][12]) begin
        scalar_argVld[28][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[28][0][12] = 1;
    end

    //------WRITE (scalar, global adr = 1136) comb block-----//
    //s = 28; r = 0; a = 2;
    if (scalar_argAck [28][0][2]) begin
        scalar_argVld [28][0][2] = 0;
        scalar_argAckdone [28][0][2] = 1;
    end
    if (hls_transform_unit_ex_hls_cmdr_run_o_ap_vld_r) begin
        scalar_argVld [28][0][2] = 1;
        scalar_argAckdone [28][0][2] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][0][2] = hls_transform_unit_ex_hls_cmdr_run_o_r;
    scalar_adr    [28][0][2] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1240) comb block-----//
    //s = 22; r = 1; a = 10;
    if (scalar_rdat_vld_r[22][1][10]) begin
        scalar_argdone [22][1][10] = 1;
    end
    scalar_adr    [22][1][10] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][10]) begin
        scalar_argVld [22][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [22][1][10] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1244) comb block-----//
    //s = 23; r = 1; a = 15;
    if (scalar_rdat_vld_r[23][1][15]) begin
        scalar_argdone [23][1][15] = 1;
    end
    scalar_adr    [23][1][15] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][15]) begin
        scalar_argVld [23][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [23][1][15] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1248) comb block-----//
    //s = 24; r = 1; a = 11;
    if (scalar_rdat_vld_r[24][1][11]) begin
        scalar_argdone [24][1][11] = 1;
    end
    scalar_adr    [24][1][11] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][11]) begin
        scalar_argVld [24][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [24][1][11] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1144) comb block-----//
    //s = 30; r = 1; a = 9;
    if (scalar_rdat_vld_r[30][1][9]) begin
        scalar_argdone [30][1][9] = 1;
    end
    scalar_adr    [30][1][9] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][9]) begin
        scalar_argVld [30][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [30][1][9] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1148) comb block-----//
    //s = 31; r = 1; a = 15;
    if (scalar_rdat_vld_r[31][1][15]) begin
        scalar_argdone [31][1][15] = 1;
    end
    scalar_adr    [31][1][15] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][15]) begin
        scalar_argVld [31][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [31][1][15] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1152) comb block-----//
    //s = 0; r = 1; a = 24;
    if (scalar_rdat_vld_r[0][1][24]) begin
        scalar_argdone [0][1][24] = 1;
    end
    scalar_adr    [0][1][24] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][24]) begin
        scalar_argVld [0][1][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [0][1][24] = 1;
    end

    //------READ (scalar, global adr = 1140) comb block-----//
    //s = 29; r = 0; a = 5;
    if (scalar_rdat_vld_r[29][0][5]) begin
        scalar_argdone [29][0][5] = 1;
    end
    scalar_adr[29][0][5] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][5]) begin
        scalar_argVld[29][0][5] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[29][0][5] = 1;
    end

    //------WRITE (scalar, global adr = 160) comb block-----//
    //s = 8; r = 1; a = 4;
    if (scalar_argAck [8][1][4]) begin
        scalar_argVld [8][1][4] = 0;
        scalar_argAckdone [8][1][4] = 1;
    end
    if (hls_transform_unit_ex_hls_nPbW_ap_vld_r) begin
        scalar_argVld [8][1][4] = 1;
        scalar_argAckdone [8][1][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][4] = hls_transform_unit_ex_hls_nPbW_r;
    scalar_adr    [8][1][4] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 164) comb block-----//
    //s = 9; r = 1; a = 6;
    if (scalar_argAck [9][1][6]) begin
        scalar_argVld [9][1][6] = 0;
        scalar_argAckdone [9][1][6] = 1;
    end
    if (hls_transform_unit_ex_hls_nPbH_ap_vld_r) begin
        scalar_argVld [9][1][6] = 1;
        scalar_argAckdone [9][1][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][6] = hls_transform_unit_ex_hls_nPbH_r;
    scalar_adr    [9][1][6] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 580) comb block-----//
    //s = 17; r = 0; a = 1;
    if (scalar_argAck [17][0][1]) begin
        scalar_argVld [17][0][1] = 0;
        scalar_argAckdone [17][0][1] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_up_ap_vld_r) begin
        scalar_argVld [17][0][1] = 1;
        scalar_argAckdone [17][0][1] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][0][1] = hls_transform_unit_ex_hls_cand_up_r;
    scalar_adr    [17][0][1] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 584) comb block-----//
    //s = 18; r = 0; a = 1;
    if (scalar_argAck [18][0][1]) begin
        scalar_argVld [18][0][1] = 0;
        scalar_argAckdone [18][0][1] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_left_ap_vld_r) begin
        scalar_argVld [18][0][1] = 1;
        scalar_argAckdone [18][0][1] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][0][1] = hls_transform_unit_ex_hls_cand_left_r;
    scalar_adr    [18][0][1] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 588) comb block-----//
    //s = 19; r = 0; a = 1;
    if (scalar_argAck [19][0][1]) begin
        scalar_argVld [19][0][1] = 0;
        scalar_argAckdone [19][0][1] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_up_left_ap_vld_r) begin
        scalar_argVld [19][0][1] = 1;
        scalar_argAckdone [19][0][1] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][0][1] = hls_transform_unit_ex_hls_cand_up_left_r;
    scalar_adr    [19][0][1] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 592) comb block-----//
    //s = 20; r = 0; a = 3;
    if (scalar_argAck [20][0][3]) begin
        scalar_argVld [20][0][3] = 0;
        scalar_argAckdone [20][0][3] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_up_right_sap_ap_vld_r) begin
        scalar_argVld [20][0][3] = 1;
        scalar_argAckdone [20][0][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][3] = hls_transform_unit_ex_hls_cand_up_right_sap_r;
    scalar_adr    [20][0][3] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 596) comb block-----//
    //s = 21; r = 0; a = 3;
    if (scalar_argAck [21][0][3]) begin
        scalar_argVld [21][0][3] = 0;
        scalar_argAckdone [21][0][3] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_up_right_ap_vld_r) begin
        scalar_argVld [21][0][3] = 1;
        scalar_argAckdone [21][0][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][3] = hls_transform_unit_ex_hls_cand_up_right_r;
    scalar_adr    [21][0][3] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 600) comb block-----//
    //s = 22; r = 0; a = 12;
    if (scalar_rdat_vld_r[22][0][12]) begin
        scalar_argdone [22][0][12] = 1;
    end
    scalar_adr[22][0][12] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][12]) begin
        scalar_argVld[22][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[22][0][12] = 1;
    end

    //------WRITE (scalar, global adr = 600) comb block-----//
    //s = 22; r = 0; a = 3;
    if (scalar_argAck [22][0][3]) begin
        scalar_argVld [22][0][3] = 0;
        scalar_argAckdone [22][0][3] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_bottom_left_o_ap_vld_r) begin
        scalar_argVld [22][0][3] = 1;
        scalar_argAckdone [22][0][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][3] = hls_transform_unit_ex_hls_cand_bottom_left_o_r;
    scalar_adr    [22][0][3] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1488) comb block-----//
    //s = 20; r = 1; a = 3;
    if (scalar_argAck [20][1][3]) begin
        scalar_argVld [20][1][3] = 0;
        scalar_argAckdone [20][1][3] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_up_c_ap_vld_r) begin
        scalar_argVld [20][1][3] = 1;
        scalar_argAckdone [20][1][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][3] = hls_transform_unit_ex_hls_cand_up_c_r;
    scalar_adr    [20][1][3] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1492) comb block-----//
    //s = 21; r = 1; a = 3;
    if (scalar_argAck [21][1][3]) begin
        scalar_argVld [21][1][3] = 0;
        scalar_argAckdone [21][1][3] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_left_c_ap_vld_r) begin
        scalar_argVld [21][1][3] = 1;
        scalar_argAckdone [21][1][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][3] = hls_transform_unit_ex_hls_cand_left_c_r;
    scalar_adr    [21][1][3] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1496) comb block-----//
    //s = 22; r = 1; a = 3;
    if (scalar_argAck [22][1][3]) begin
        scalar_argVld [22][1][3] = 0;
        scalar_argAckdone [22][1][3] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_up_left_c_ap_vld_r) begin
        scalar_argVld [22][1][3] = 1;
        scalar_argAckdone [22][1][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][3] = hls_transform_unit_ex_hls_cand_up_left_c_r;
    scalar_adr    [22][1][3] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1500) comb block-----//
    //s = 23; r = 0; a = 3;
    if (scalar_argAck [23][0][3]) begin
        scalar_argVld [23][0][3] = 0;
        scalar_argAckdone [23][0][3] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_up_right_sap_c_ap_vld_r) begin
        scalar_argVld [23][0][3] = 1;
        scalar_argAckdone [23][0][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][3] = hls_transform_unit_ex_hls_cand_up_right_sap_c_r;
    scalar_adr    [23][0][3] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1504) comb block-----//
    //s = 24; r = 0; a = 3;
    if (scalar_argAck [24][0][3]) begin
        scalar_argVld [24][0][3] = 0;
        scalar_argAckdone [24][0][3] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_up_right_c_ap_vld_r) begin
        scalar_argVld [24][0][3] = 1;
        scalar_argAckdone [24][0][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][0][3] = hls_transform_unit_ex_hls_cand_up_right_c_r;
    scalar_adr    [24][0][3] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1508) comb block-----//
    //s = 25; r = 0; a = 8;
    if (scalar_rdat_vld_r[25][0][8]) begin
        scalar_argdone [25][0][8] = 1;
    end
    scalar_adr[25][0][8] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][8]) begin
        scalar_argVld[25][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[25][0][8] = 1;
    end

    //------WRITE (scalar, global adr = 1508) comb block-----//
    //s = 25; r = 0; a = 3;
    if (scalar_argAck [25][0][3]) begin
        scalar_argVld [25][0][3] = 0;
        scalar_argAckdone [25][0][3] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_bottom_left_c_o_ap_vld_r) begin
        scalar_argVld [25][0][3] = 1;
        scalar_argAckdone [25][0][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][0][3] = hls_transform_unit_ex_hls_cand_bottom_left_c_o_r;
    scalar_adr    [25][0][3] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 15;
    if (scalar_rdat_vld_r[26][0][15]) begin
        scalar_argdone [26][0][15] = 1;
    end
    scalar_adr[26][0][15] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][15]) begin
        scalar_argVld[26][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[26][0][15] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 0; a = 17;
    if (scalar_rdat_vld_r[23][0][17]) begin
        scalar_argdone [23][0][17] = 1;
    end
    scalar_adr[23][0][17] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][17]) begin
        scalar_argVld[23][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[23][0][17] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 0; a = 13;
    if (scalar_rdat_vld_r[24][0][13]) begin
        scalar_argdone [24][0][13] = 1;
    end
    scalar_adr[24][0][13] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][13]) begin
        scalar_argVld[24][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[24][0][13] = 1;
    end

    //------READ (scalar, global adr = 612) comb block-----//
    //s = 25; r = 1; a = 7;
    if (scalar_rdat_vld_r[25][1][7]) begin
        scalar_argdone [25][1][7] = 1;
    end
    scalar_adr[25][1][7] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][7]) begin
        scalar_argVld[25][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[25][1][7] = 1;
    end

    //------READ (scalar, global adr = 616) comb block-----//
    //s = 26; r = 1; a = 14;
    if (scalar_rdat_vld_r[26][1][14]) begin
        scalar_argdone [26][1][14] = 1;
    end
    scalar_adr[26][1][14] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][14]) begin
        scalar_argVld[26][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[26][1][14] = 1;
    end

    //------READ (scalar, global adr = 620) comb block-----//
    //s = 27; r = 0; a = 8;
    if (scalar_rdat_vld_r[27][0][8]) begin
        scalar_argdone [27][0][8] = 1;
    end
    scalar_adr[27][0][8] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][8]) begin
        scalar_argVld[27][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[27][0][8] = 1;
    end

    //------READ (scalar, global adr = 624) comb block-----//
    //s = 28; r = 1; a = 12;
    if (scalar_rdat_vld_r[28][1][12]) begin
        scalar_argdone [28][1][12] = 1;
    end
    scalar_adr[28][1][12] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][12]) begin
        scalar_argVld[28][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[28][1][12] = 1;
    end

    //------READ (scalar, global adr = 472) comb block-----//
    //s = 22; r = 1; a = 11;
    if (scalar_rdat_vld_r[22][1][11]) begin
        scalar_argdone [22][1][11] = 1;
    end
    scalar_adr[22][1][11] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][11]) begin
        scalar_argVld[22][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[22][1][11] = 1;
    end

    //------WRITE (scalar, global adr = 472) comb block-----//
    //s = 22; r = 0; a = 4;
    if (scalar_argAck [22][0][4]) begin
        scalar_argVld [22][0][4] = 0;
        scalar_argAckdone [22][0][4] = 1;
    end
    if (hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r) begin
        scalar_argVld [22][0][4] = 1;
        scalar_argAckdone [22][0][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][4] = hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_r;
    scalar_adr    [22][0][4] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 16;
    if (scalar_rdat_vld_r[23][1][16]) begin
        scalar_argdone [23][1][16] = 1;
    end
    scalar_adr[23][1][16] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][16]) begin
        scalar_argVld[23][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[23][1][16] = 1;
    end

    //------WRITE (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 3;
    if (scalar_argAck [23][1][3]) begin
        scalar_argVld [23][1][3] = 0;
        scalar_argAckdone [23][1][3] = 1;
    end
    if (hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_ap_vld_r) begin
        scalar_argVld [23][1][3] = 1;
        scalar_argAckdone [23][1][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][1][3] = hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_r;
    scalar_adr    [23][1][3] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 468) comb block-----//
    //s = 21; r = 0; a = 4;
    if (scalar_argAck [21][0][4]) begin
        scalar_argVld [21][0][4] = 0;
        scalar_argAckdone [21][0][4] = 1;
    end
    if (hls_transform_unit_ex_hls_tu_cu_qp_delta_ap_vld_r) begin
        scalar_argVld [21][0][4] = 1;
        scalar_argAckdone [21][0][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][4] = hls_transform_unit_ex_hls_tu_cu_qp_delta_r;
    scalar_adr    [21][0][4] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 500) comb block-----//
    //s = 29; r = 1; a = 0;
    if (scalar_argAck [29][1][0]) begin
        scalar_argVld [29][1][0] = 0;
        scalar_argAckdone [29][1][0] = 1;
    end
    if (hls_transform_unit_ex_hls_tu_cross_pf_ap_vld_r) begin
        scalar_argVld [29][1][0] = 1;
        scalar_argAckdone [29][1][0] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][0] = hls_transform_unit_ex_hls_tu_cross_pf_r;
    scalar_adr    [29][1][0] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 532) comb block-----//
    //s = 5; r = 0; a = 12;
    if (scalar_rdat_vld_r[5][0][12]) begin
        scalar_argdone [5][0][12] = 1;
    end
    scalar_adr[5][0][12] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][12]) begin
        scalar_argVld[5][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[5][0][12] = 1;
    end

    //------WRITE (scalar, global adr = 532) comb block-----//
    //s = 5; r = 0; a = 5;
    if (scalar_argAck [5][0][5]) begin
        scalar_argVld [5][0][5] = 0;
        scalar_argAckdone [5][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_first_qp_group_o_ap_vld_r) begin
        scalar_argVld [5][0][5] = 1;
        scalar_argAckdone [5][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][5] = hls_transform_unit_ex_hls_first_qp_group_o_r;
    scalar_adr    [5][0][5] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 328) comb block-----//
    //s = 18; r = 1; a = 8;
    if (scalar_rdat_vld_r[18][1][8]) begin
        scalar_argdone [18][1][8] = 1;
    end
    scalar_adr[18][1][8] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][8]) begin
        scalar_argVld[18][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[18][1][8] = 1;
    end

    //------READ (scalar, global adr = 448) comb block-----//
    //s = 16; r = 1; a = 12;
    if (scalar_rdat_vld_r[16][1][12]) begin
        scalar_argdone [16][1][12] = 1;
    end
    scalar_adr[16][1][12] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][12]) begin
        scalar_argVld[16][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[16][1][12] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 0; a = 16;
    if (scalar_rdat_vld_r[11][0][16]) begin
        scalar_argdone [11][0][16] = 1;
    end
    scalar_adr[11][0][16] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][16]) begin
        scalar_argVld[11][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[11][0][16] = 1;
    end

    //------READ (scalar, global adr = 540) comb block-----//
    //s = 7; r = 1; a = 13;
    if (scalar_rdat_vld_r[7][1][13]) begin
        scalar_argdone [7][1][13] = 1;
    end
    scalar_adr[7][1][13] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][13]) begin
        scalar_argVld[7][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[7][1][13] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 0; a = 23;
    if (scalar_rdat_vld_r[13][0][23]) begin
        scalar_argdone [13][0][23] = 1;
    end
    scalar_adr[13][0][23] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][23]) begin
        scalar_argVld[13][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[13][0][23] = 1;
    end

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 0; a = 13;
    if (scalar_rdat_vld_r[28][0][13]) begin
        scalar_argdone [28][0][13] = 1;
    end
    scalar_adr[28][0][13] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][13]) begin
        scalar_argVld[28][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[28][0][13] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 1; a = 14;
    if (scalar_rdat_vld_r[2][1][14]) begin
        scalar_argdone [2][1][14] = 1;
    end
    scalar_adr[2][1][14] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][14]) begin
        scalar_argVld[2][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[2][1][14] = 1;
    end

    //------READ (scalar, global adr = 460) comb block-----//
    //s = 19; r = 1; a = 7;
    if (scalar_rdat_vld_r[19][1][7]) begin
        scalar_argdone [19][1][7] = 1;
    end
    scalar_adr[19][1][7] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][7]) begin
        scalar_argVld[19][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[19][1][7] = 1;
    end

    if (ap_arb_ret[hls_transform_unit_ex_hls] & ~ap_arb_ret_r[hls_transform_unit_ex_hls]) begin
        ap_arb_ret_running[hls_transform_unit_ex_hls] = 1;
        hls_transform_unit_ex_hls_ready = 0;
    end

    scalar_argAckdone_all[hls_transform_unit_ex_hls] = scalar_argAckdone[27][0][1] &
                                                scalar_argAckdone[28][1][1] &
                                                scalar_argAckdone[6][1][4] &
                                                scalar_argAckdone[10][0][6] &
                                                scalar_argAckdone[14][1][4] &
                                                scalar_argAckdone[12][0][4] &
                                                scalar_argAckdone[13][1][4] &
                                                scalar_argAckdone[28][0][2] &
                                                scalar_argAckdone[8][1][4] &
                                                scalar_argAckdone[9][1][6] &
                                                scalar_argAckdone[17][0][1] &
                                                scalar_argAckdone[18][0][1] &
                                                scalar_argAckdone[19][0][1] &
                                                scalar_argAckdone[20][0][3] &
                                                scalar_argAckdone[21][0][3] &
                                                scalar_argAckdone[22][0][3] &
                                                scalar_argAckdone[20][1][3] &
                                                scalar_argAckdone[21][1][3] &
                                                scalar_argAckdone[22][1][3] &
                                                scalar_argAckdone[23][0][3] &
                                                scalar_argAckdone[24][0][3] &
                                                scalar_argAckdone[25][0][3] &
                                                scalar_argAckdone[22][0][4] &
                                                scalar_argAckdone[23][1][3] &
                                                scalar_argAckdone[21][0][4] &
                                                scalar_argAckdone[29][1][0] &
                                                scalar_argAckdone[5][0][5];
    if (ap_arb_ret_running[hls_transform_unit_ex_hls] & scalar_argAckdone_all[hls_transform_unit_ex_hls] &~ ap_arb_reload_running_r[hls_transform_unit_ex_hls]) begin
        ap_arb_reload[hls_transform_unit_ex_hls] = 1;
        ap_arb_reload_running[hls_transform_unit_ex_hls] = 1;
    end

    if (ap_arb_start[hls_transform_unit_ex_hls] &~ ap_arb_start_r[hls_transform_unit_ex_hls]) begin
        ap_arb_start_running[hls_transform_unit_ex_hls] = 1;
    end

    if (ap_arb_start_running[hls_transform_unit_ex_hls] & ~scalar_writing_20& ~scalar_writing_16& ~scalar_writing_560& ~scalar_writing_484& ~scalar_writing_488& ~scalar_writing_572& ~scalar_writing_536& ~scalar_writing_56& ~scalar_writing_48& ~scalar_writing_1136& ~scalar_writing_600& ~scalar_writing_1508& ~scalar_writing_604& ~scalar_writing_608& ~scalar_writing_612& ~scalar_writing_616& ~scalar_writing_620& ~scalar_writing_624& ~scalar_writing_472& ~scalar_writing_476& ~scalar_writing_532& ~scalar_writing_540) begin
        ap_arb_start_running[hls_transform_unit_ex_hls] = 0;
        ap_arb_reload[hls_transform_unit_ex_hls] = 1;
    end

    scalar_argdone_all[hls_transform_unit_ex_hls] = scalar_argdone[5][1][10] &
                                                                scalar_argdone[4][0][8] &
                                                                scalar_argdone[27][0][7] &
                                                                scalar_argdone[1][0][16] &
                                                                scalar_argdone[28][1][11] &
                                                                scalar_argdone[29][1][3] &
                                                                scalar_argdone[27][1][6] &
                                                                scalar_argdone[30][0][9] &
                                                                scalar_argdone[12][0][18] &
                                                                scalar_argdone[20][0][11] &
                                                                scalar_argdone[21][0][17] &
                                                                scalar_argdone[22][0][11] &
                                                                scalar_argdone[23][0][16] &
                                                                scalar_argdone[24][0][12] &
                                                                scalar_argdone[25][0][7] &
                                                                scalar_argdone[25][1][6] &
                                                                scalar_argdone[26][1][13] &
                                                                scalar_argdone[15][0][15] &
                                                                scalar_argdone[6][1][14] &
                                                                scalar_argdone[14][1][19] &
                                                                scalar_argdone[12][1][17] &
                                                                scalar_argdone[28][0][12] &
                                                                scalar_argdone[22][1][10] &
                                                                scalar_argdone[23][1][15] &
                                                                scalar_argdone[24][1][11] &
                                                                scalar_argdone[30][1][9] &
                                                                scalar_argdone[31][1][15] &
                                                                scalar_argdone[0][1][24] &
                                                                scalar_argdone[29][0][5] &
                                                                scalar_argdone[22][0][12] &
                                                                scalar_argdone[25][0][8] &
                                                                scalar_argdone[26][0][15] &
                                                                scalar_argdone[23][0][17] &
                                                                scalar_argdone[24][0][13] &
                                                                scalar_argdone[25][1][7] &
                                                                scalar_argdone[26][1][14] &
                                                                scalar_argdone[27][0][8] &
                                                                scalar_argdone[28][1][12] &
                                                                scalar_argdone[22][1][11] &
                                                                scalar_argdone[23][1][16] &
                                                                scalar_argdone[5][0][12] &
                                                                scalar_argdone[18][1][8] &
                                                                scalar_argdone[16][1][12] &
                                                                scalar_argdone[11][0][16] &
                                                                scalar_argdone[7][1][13] &
                                                                scalar_argdone[13][0][23] &
                                                                scalar_argdone[28][0][13] &
                                                                scalar_argdone[2][1][14] &
                                                                scalar_argdone[19][1][7];

    if (scalar_argdone_all_r[hls_transform_unit_ex_hls]) begin
        scalar_argdone[5][1][10] = 0;
        scalar_argdone[4][0][8] = 0;
        scalar_argdone[27][0][7] = 0;
        scalar_argdone[1][0][16] = 0;
        scalar_argdone[28][1][11] = 0;
        scalar_argdone[29][1][3] = 0;
        scalar_argdone[27][1][6] = 0;
        scalar_argdone[30][0][9] = 0;
        scalar_argdone[12][0][18] = 0;
        scalar_argdone[20][0][11] = 0;
        scalar_argdone[21][0][17] = 0;
        scalar_argdone[22][0][11] = 0;
        scalar_argdone[23][0][16] = 0;
        scalar_argdone[24][0][12] = 0;
        scalar_argdone[25][0][7] = 0;
        scalar_argdone[25][1][6] = 0;
        scalar_argdone[26][1][13] = 0;
        scalar_argdone[15][0][15] = 0;
        scalar_argdone[6][1][14] = 0;
        scalar_argdone[14][1][19] = 0;
        scalar_argdone[12][1][17] = 0;
        scalar_argdone[28][0][12] = 0;
        scalar_argdone[22][1][10] = 0;
        scalar_argdone[23][1][15] = 0;
        scalar_argdone[24][1][11] = 0;
        scalar_argdone[30][1][9] = 0;
        scalar_argdone[31][1][15] = 0;
        scalar_argdone[0][1][24] = 0;
        scalar_argdone[29][0][5] = 0;
        scalar_argdone[22][0][12] = 0;
        scalar_argdone[25][0][8] = 0;
        scalar_argdone[26][0][15] = 0;
        scalar_argdone[23][0][17] = 0;
        scalar_argdone[24][0][13] = 0;
        scalar_argdone[25][1][7] = 0;
        scalar_argdone[26][1][14] = 0;
        scalar_argdone[27][0][8] = 0;
        scalar_argdone[28][1][12] = 0;
        scalar_argdone[22][1][11] = 0;
        scalar_argdone[23][1][16] = 0;
        scalar_argdone[5][0][12] = 0;
        scalar_argdone[18][1][8] = 0;
        scalar_argdone[16][1][12] = 0;
        scalar_argdone[11][0][16] = 0;
        scalar_argdone[7][1][13] = 0;
        scalar_argdone[13][0][23] = 0;
        scalar_argdone[28][0][13] = 0;
        scalar_argdone[2][1][14] = 0;
        scalar_argdone[19][1][7] = 0;

        if (ap_arb_start_r[hls_transform_unit_ex_hls] & ~ap_running_r[hls_transform_unit_ex_hls]) begin
            ap_start[hls_transform_unit_ex_hls] = 1;
            ap_running[hls_transform_unit_ex_hls] = 1;
        end
        else if (ap_arb_ret_running_r[hls_transform_unit_ex_hls]) begin
            ap_arb_ret_running[hls_transform_unit_ex_hls] = 0;
            ap_arb_reload_running[hls_transform_unit_ex_hls] = 0;
            hls_transform_unit_ex_hls_ready = 1;
        end
    end

    if (ap_start_r[hls_transform_unit_ex_hls] & ap_ready_r[hls_transform_unit_ex_hls]) begin
        ap_start[hls_transform_unit_ex_hls] = 0;
    end

    if (ap_done_r[hls_transform_unit_ex_hls]) begin
        ap_running[hls_transform_unit_ex_hls] = 0;
    end
`endif
    //============================================================
    //hls_transform_unit_ex_hls_dup1       (f = 7)
    //============================================================
`ifdef enable_connect_hls_transform_unit_ex_hls_dup1
    //------READ (scalar, global adr = 20) comb block-----//
    //s = 5; r = 1; a = 11;
    if (scalar_rdat_vld_r[5][1][11]) begin
        scalar_argdone [5][1][11] = 1;
    end
    scalar_adr[5][1][11] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][11]) begin
        scalar_argVld[5][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[5][1][11] = 1;
    end

    //------READ (scalar, global adr = 16) comb block-----//
    //s = 4; r = 1; a = 7;
    if (scalar_rdat_vld_r[4][1][7]) begin
        scalar_argdone [4][1][7] = 1;
    end
    scalar_adr[4][1][7] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][1][7]) begin
        scalar_argVld[4][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[4][1][7] = 1;
    end

    //------READ (scalar, global adr = 1260) comb block-----//
    //s = 27; r = 1; a = 7;
    if (scalar_rdat_vld_r[27][1][7]) begin
        scalar_argdone [27][1][7] = 1;
    end
    scalar_adr[27][1][7] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][7]) begin
        scalar_argVld[27][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[27][1][7] = 1;
    end

    //------READ (scalar, global adr = 1156) comb block-----//
    //s = 1; r = 1; a = 15;
    if (scalar_rdat_vld_r[1][1][15]) begin
        scalar_argdone [1][1][15] = 1;
    end
    scalar_adr[1][1][15] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][15]) begin
        scalar_argVld[1][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[1][1][15] = 1;
    end

    //------READ (scalar, global adr = 1264) comb block-----//
    //s = 28; r = 1; a = 13;
    if (scalar_rdat_vld_r[28][1][13]) begin
        scalar_argdone [28][1][13] = 1;
    end
    scalar_adr[28][1][13] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][13]) begin
        scalar_argVld[28][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[28][1][13] = 1;
    end

    //------READ (scalar, global adr = 1268) comb block-----//
    //s = 29; r = 1; a = 4;
    if (scalar_rdat_vld_r[29][1][4]) begin
        scalar_argdone [29][1][4] = 1;
    end
    scalar_adr[29][1][4] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][4]) begin
        scalar_argVld[29][1][4] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[29][1][4] = 1;
    end

    //------READ (scalar, global adr = 1132) comb block-----//
    //s = 27; r = 0; a = 9;
    if (scalar_rdat_vld_r[27][0][9]) begin
        scalar_argdone [27][0][9] = 1;
    end
    scalar_adr[27][0][9] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][9]) begin
        scalar_argVld[27][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[27][0][9] = 1;
    end

    //------READ (scalar, global adr = 1272) comb block-----//
    //s = 30; r = 0; a = 10;
    if (scalar_rdat_vld_r[30][0][10]) begin
        scalar_argdone [30][0][10] = 1;
    end
    scalar_adr[30][0][10] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][10]) begin
        scalar_argVld[30][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[30][0][10] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 19;
    if (scalar_rdat_vld_r[12][0][19]) begin
        scalar_argdone [12][0][19] = 1;
    end
    scalar_adr[12][0][19] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][19]) begin
        scalar_argVld[12][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[12][0][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 1; a = 11;
    if (scalar_rdat_vld_r[20][1][11]) begin
        scalar_argdone [20][1][11] = 1;
    end
    scalar_adr    [20][1][11] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][11]) begin
        scalar_argVld [20][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [20][1][11] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 1; a = 16;
    if (scalar_rdat_vld_r[21][1][16]) begin
        scalar_argdone [21][1][16] = 1;
    end
    scalar_adr    [21][1][16] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][16]) begin
        scalar_argVld [21][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [21][1][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 0; a = 13;
    if (scalar_rdat_vld_r[22][0][13]) begin
        scalar_argdone [22][0][13] = 1;
    end
    scalar_adr    [22][0][13] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][13]) begin
        scalar_argVld [22][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [22][0][13] = 1;
    end

    //------READ (scalar, complete partition, global adr = 348) comb block-----//
    //s = 23; r = 0; a = 18;
    if (scalar_rdat_vld_r[23][0][18]) begin
        scalar_argdone [23][0][18] = 1;
    end
    scalar_adr    [23][0][18] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][18]) begin
        scalar_argVld [23][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [23][0][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 352) comb block-----//
    //s = 24; r = 1; a = 12;
    if (scalar_rdat_vld_r[24][1][12]) begin
        scalar_argdone [24][1][12] = 1;
    end
    scalar_adr    [24][1][12] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][12]) begin
        scalar_argVld [24][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [24][1][12] = 1;
    end

    //------READ (scalar, complete partition, global adr = 356) comb block-----//
    //s = 25; r = 0; a = 9;
    if (scalar_rdat_vld_r[25][0][9]) begin
        scalar_argdone [25][0][9] = 1;
    end
    scalar_adr    [25][0][9] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][9]) begin
        scalar_argVld [25][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [25][0][9] = 1;
    end

    //------READ (scalar, global adr = 484) comb block-----//
    //s = 25; r = 1; a = 8;
    if (scalar_rdat_vld_r[25][1][8]) begin
        scalar_argdone [25][1][8] = 1;
    end
    scalar_adr[25][1][8] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][8]) begin
        scalar_argVld[25][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[25][1][8] = 1;
    end

    //------READ (scalar, global adr = 488) comb block-----//
    //s = 26; r = 0; a = 16;
    if (scalar_rdat_vld_r[26][0][16]) begin
        scalar_argdone [26][0][16] = 1;
    end
    scalar_adr[26][0][16] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][16]) begin
        scalar_argVld[26][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[26][0][16] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 14;
    if (scalar_rdat_vld_r[15][1][14]) begin
        scalar_argdone [15][1][14] = 1;
    end
    scalar_adr[15][1][14] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][14]) begin
        scalar_argVld[15][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[15][1][14] = 1;
    end

    //------WRITE (scalar, global adr = 492) comb block-----//
    //s = 27; r = 1; a = 1;
    if (scalar_argAck [27][1][1]) begin
        scalar_argVld [27][1][1] = 0;
        scalar_argAckdone [27][1][1] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_ap_vld_r) begin
        scalar_argVld [27][1][1] = 1;
        scalar_argAckdone [27][1][1] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][1][1] = hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_r;
    scalar_adr    [27][1][1] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 496) comb block-----//
    //s = 28; r = 1; a = 2;
    if (scalar_argAck [28][1][2]) begin
        scalar_argVld [28][1][2] = 0;
        scalar_argAckdone [28][1][2] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_ap_vld_r) begin
        scalar_argVld [28][1][2] = 1;
        scalar_argAckdone [28][1][2] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][1][2] = hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_r;
    scalar_adr    [28][1][2] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 0; a = 15;
    if (scalar_rdat_vld_r[6][0][15]) begin
        scalar_argdone [6][0][15] = 1;
    end
    scalar_adr[6][0][15] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][15]) begin
        scalar_argVld[6][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[6][0][15] = 1;
    end

    //------WRITE (scalar, global adr = 536) comb block-----//
    //s = 6; r = 0; a = 5;
    if (scalar_argAck [6][0][5]) begin
        scalar_argVld [6][0][5] = 0;
        scalar_argAckdone [6][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_qp_y_o_ap_vld_r) begin
        scalar_argVld [6][0][5] = 1;
        scalar_argAckdone [6][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][5] = hls_transform_unit_ex_hls_dup1_qp_y_o_r;
    scalar_adr    [6][0][5] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 168) comb block-----//
    //s = 10; r = 1; a = 6;
    if (scalar_argAck [10][1][6]) begin
        scalar_argVld [10][1][6] = 0;
        scalar_argAckdone [10][1][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_log2_trafo_size_ap_vld_r) begin
        scalar_argVld [10][1][6] = 1;
        scalar_argAckdone [10][1][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][6] = hls_transform_unit_ex_hls_dup1_log2_trafo_size_r;
    scalar_adr    [10][1][6] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 56) comb block-----//
    //s = 14; r = 0; a = 21;
    if (scalar_rdat_vld_r[14][0][21]) begin
        scalar_argdone [14][0][21] = 1;
    end
    scalar_adr[14][0][21] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][21]) begin
        scalar_argVld[14][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[14][0][21] = 1;
    end

    //------WRITE (scalar, global adr = 56) comb block-----//
    //s = 14; r = 0; a = 5;
    if (scalar_argAck [14][0][5]) begin
        scalar_argVld [14][0][5] = 0;
        scalar_argAckdone [14][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_ap_vld_r) begin
        scalar_argVld [14][0][5] = 1;
        scalar_argAckdone [14][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][5] = hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_r;
    scalar_adr    [14][0][5] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 48) comb block-----//
    //s = 12; r = 1; a = 18;
    if (scalar_rdat_vld_r[12][1][18]) begin
        scalar_argdone [12][1][18] = 1;
    end
    scalar_adr[12][1][18] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][18]) begin
        scalar_argVld[12][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[12][1][18] = 1;
    end

    //------WRITE (scalar, global adr = 48) comb block-----//
    //s = 12; r = 1; a = 4;
    if (scalar_argAck [12][1][4]) begin
        scalar_argVld [12][1][4] = 0;
        scalar_argAckdone [12][1][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_scan_idx_o_ap_vld_r) begin
        scalar_argVld [12][1][4] = 1;
        scalar_argAckdone [12][1][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][4] = hls_transform_unit_ex_hls_dup1_scan_idx_o_r;
    scalar_adr    [12][1][4] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 52) comb block-----//
    //s = 13; r = 0; a = 5;
    if (scalar_argAck [13][0][5]) begin
        scalar_argVld [13][0][5] = 0;
        scalar_argAckdone [13][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_scan_idx_c_ap_vld_r) begin
        scalar_argVld [13][0][5] = 1;
        scalar_argAckdone [13][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][5] = hls_transform_unit_ex_hls_dup1_scan_idx_c_r;
    scalar_adr    [13][0][5] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1136) comb block-----//
    //s = 28; r = 0; a = 14;
    if (scalar_rdat_vld_r[28][0][14]) begin
        scalar_argdone [28][0][14] = 1;
    end
    scalar_adr[28][0][14] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][14]) begin
        scalar_argVld[28][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[28][0][14] = 1;
    end

    //------WRITE (scalar, global adr = 1136) comb block-----//
    //s = 28; r = 0; a = 3;
    if (scalar_argAck [28][0][3]) begin
        scalar_argVld [28][0][3] = 0;
        scalar_argAckdone [28][0][3] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cmdr_run_o_ap_vld_r) begin
        scalar_argVld [28][0][3] = 1;
        scalar_argAckdone [28][0][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][0][3] = hls_transform_unit_ex_hls_dup1_cmdr_run_o_r;
    scalar_adr    [28][0][3] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1240) comb block-----//
    //s = 22; r = 1; a = 12;
    if (scalar_rdat_vld_r[22][1][12]) begin
        scalar_argdone [22][1][12] = 1;
    end
    scalar_adr    [22][1][12] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][12]) begin
        scalar_argVld [22][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [22][1][12] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1244) comb block-----//
    //s = 23; r = 1; a = 17;
    if (scalar_rdat_vld_r[23][1][17]) begin
        scalar_argdone [23][1][17] = 1;
    end
    scalar_adr    [23][1][17] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][17]) begin
        scalar_argVld [23][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [23][1][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1248) comb block-----//
    //s = 24; r = 0; a = 14;
    if (scalar_rdat_vld_r[24][0][14]) begin
        scalar_argdone [24][0][14] = 1;
    end
    scalar_adr    [24][0][14] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][14]) begin
        scalar_argVld [24][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [24][0][14] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1144) comb block-----//
    //s = 30; r = 1; a = 10;
    if (scalar_rdat_vld_r[30][1][10]) begin
        scalar_argdone [30][1][10] = 1;
    end
    scalar_adr    [30][1][10] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][10]) begin
        scalar_argVld [30][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [30][1][10] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1148) comb block-----//
    //s = 31; r = 0; a = 17;
    if (scalar_rdat_vld_r[31][0][17]) begin
        scalar_argdone [31][0][17] = 1;
    end
    scalar_adr    [31][0][17] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][17]) begin
        scalar_argVld [31][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [31][0][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1152) comb block-----//
    //s = 0; r = 0; a = 26;
    if (scalar_rdat_vld_r[0][0][26]) begin
        scalar_argdone [0][0][26] = 1;
    end
    scalar_adr    [0][0][26] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][26]) begin
        scalar_argVld [0][0][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [0][0][26] = 1;
    end

    //------READ (scalar, global adr = 1140) comb block-----//
    //s = 29; r = 0; a = 6;
    if (scalar_rdat_vld_r[29][0][6]) begin
        scalar_argdone [29][0][6] = 1;
    end
    scalar_adr[29][0][6] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][6]) begin
        scalar_argVld[29][0][6] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[29][0][6] = 1;
    end

    //------WRITE (scalar, global adr = 160) comb block-----//
    //s = 8; r = 0; a = 5;
    if (scalar_argAck [8][0][5]) begin
        scalar_argVld [8][0][5] = 0;
        scalar_argAckdone [8][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_nPbW_ap_vld_r) begin
        scalar_argVld [8][0][5] = 1;
        scalar_argAckdone [8][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][5] = hls_transform_unit_ex_hls_dup1_nPbW_r;
    scalar_adr    [8][0][5] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 164) comb block-----//
    //s = 9; r = 0; a = 7;
    if (scalar_argAck [9][0][7]) begin
        scalar_argVld [9][0][7] = 0;
        scalar_argAckdone [9][0][7] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_nPbH_ap_vld_r) begin
        scalar_argVld [9][0][7] = 1;
        scalar_argAckdone [9][0][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][7] = hls_transform_unit_ex_hls_dup1_nPbH_r;
    scalar_adr    [9][0][7] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 580) comb block-----//
    //s = 17; r = 1; a = 1;
    if (scalar_argAck [17][1][1]) begin
        scalar_argVld [17][1][1] = 0;
        scalar_argAckdone [17][1][1] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_up_ap_vld_r) begin
        scalar_argVld [17][1][1] = 1;
        scalar_argAckdone [17][1][1] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][1][1] = hls_transform_unit_ex_hls_dup1_cand_up_r;
    scalar_adr    [17][1][1] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 584) comb block-----//
    //s = 18; r = 1; a = 1;
    if (scalar_argAck [18][1][1]) begin
        scalar_argVld [18][1][1] = 0;
        scalar_argAckdone [18][1][1] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_left_ap_vld_r) begin
        scalar_argVld [18][1][1] = 1;
        scalar_argAckdone [18][1][1] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][1][1] = hls_transform_unit_ex_hls_dup1_cand_left_r;
    scalar_adr    [18][1][1] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 588) comb block-----//
    //s = 19; r = 1; a = 1;
    if (scalar_argAck [19][1][1]) begin
        scalar_argVld [19][1][1] = 0;
        scalar_argAckdone [19][1][1] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_up_left_ap_vld_r) begin
        scalar_argVld [19][1][1] = 1;
        scalar_argAckdone [19][1][1] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][1][1] = hls_transform_unit_ex_hls_dup1_cand_up_left_r;
    scalar_adr    [19][1][1] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 592) comb block-----//
    //s = 20; r = 0; a = 4;
    if (scalar_argAck [20][0][4]) begin
        scalar_argVld [20][0][4] = 0;
        scalar_argAckdone [20][0][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_up_right_sap_ap_vld_r) begin
        scalar_argVld [20][0][4] = 1;
        scalar_argAckdone [20][0][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][4] = hls_transform_unit_ex_hls_dup1_cand_up_right_sap_r;
    scalar_adr    [20][0][4] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 596) comb block-----//
    //s = 21; r = 1; a = 4;
    if (scalar_argAck [21][1][4]) begin
        scalar_argVld [21][1][4] = 0;
        scalar_argAckdone [21][1][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_up_right_ap_vld_r) begin
        scalar_argVld [21][1][4] = 1;
        scalar_argAckdone [21][1][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][4] = hls_transform_unit_ex_hls_dup1_cand_up_right_r;
    scalar_adr    [21][1][4] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 600) comb block-----//
    //s = 22; r = 0; a = 14;
    if (scalar_rdat_vld_r[22][0][14]) begin
        scalar_argdone [22][0][14] = 1;
    end
    scalar_adr[22][0][14] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][14]) begin
        scalar_argVld[22][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[22][0][14] = 1;
    end

    //------WRITE (scalar, global adr = 600) comb block-----//
    //s = 22; r = 1; a = 4;
    if (scalar_argAck [22][1][4]) begin
        scalar_argVld [22][1][4] = 0;
        scalar_argAckdone [22][1][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_ap_vld_r) begin
        scalar_argVld [22][1][4] = 1;
        scalar_argAckdone [22][1][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][4] = hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_r;
    scalar_adr    [22][1][4] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1488) comb block-----//
    //s = 20; r = 1; a = 4;
    if (scalar_argAck [20][1][4]) begin
        scalar_argVld [20][1][4] = 0;
        scalar_argAckdone [20][1][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_up_c_ap_vld_r) begin
        scalar_argVld [20][1][4] = 1;
        scalar_argAckdone [20][1][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][4] = hls_transform_unit_ex_hls_dup1_cand_up_c_r;
    scalar_adr    [20][1][4] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1492) comb block-----//
    //s = 21; r = 0; a = 5;
    if (scalar_argAck [21][0][5]) begin
        scalar_argVld [21][0][5] = 0;
        scalar_argAckdone [21][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_left_c_ap_vld_r) begin
        scalar_argVld [21][0][5] = 1;
        scalar_argAckdone [21][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][5] = hls_transform_unit_ex_hls_dup1_cand_left_c_r;
    scalar_adr    [21][0][5] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1496) comb block-----//
    //s = 22; r = 0; a = 5;
    if (scalar_argAck [22][0][5]) begin
        scalar_argVld [22][0][5] = 0;
        scalar_argAckdone [22][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_up_left_c_ap_vld_r) begin
        scalar_argVld [22][0][5] = 1;
        scalar_argAckdone [22][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][5] = hls_transform_unit_ex_hls_dup1_cand_up_left_c_r;
    scalar_adr    [22][0][5] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1500) comb block-----//
    //s = 23; r = 0; a = 4;
    if (scalar_argAck [23][0][4]) begin
        scalar_argVld [23][0][4] = 0;
        scalar_argAckdone [23][0][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_ap_vld_r) begin
        scalar_argVld [23][0][4] = 1;
        scalar_argAckdone [23][0][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][4] = hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_r;
    scalar_adr    [23][0][4] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1504) comb block-----//
    //s = 24; r = 1; a = 3;
    if (scalar_argAck [24][1][3]) begin
        scalar_argVld [24][1][3] = 0;
        scalar_argAckdone [24][1][3] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_up_right_c_ap_vld_r) begin
        scalar_argVld [24][1][3] = 1;
        scalar_argAckdone [24][1][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][1][3] = hls_transform_unit_ex_hls_dup1_cand_up_right_c_r;
    scalar_adr    [24][1][3] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1508) comb block-----//
    //s = 25; r = 0; a = 10;
    if (scalar_rdat_vld_r[25][0][10]) begin
        scalar_argdone [25][0][10] = 1;
    end
    scalar_adr[25][0][10] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][10]) begin
        scalar_argVld[25][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[25][0][10] = 1;
    end

    //------WRITE (scalar, global adr = 1508) comb block-----//
    //s = 25; r = 1; a = 3;
    if (scalar_argAck [25][1][3]) begin
        scalar_argVld [25][1][3] = 0;
        scalar_argAckdone [25][1][3] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_ap_vld_r) begin
        scalar_argVld [25][1][3] = 1;
        scalar_argAckdone [25][1][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][1][3] = hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_r;
    scalar_adr    [25][1][3] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 15;
    if (scalar_rdat_vld_r[26][1][15]) begin
        scalar_argdone [26][1][15] = 1;
    end
    scalar_adr[26][1][15] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][15]) begin
        scalar_argVld[26][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[26][1][15] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 0; a = 19;
    if (scalar_rdat_vld_r[23][0][19]) begin
        scalar_argdone [23][0][19] = 1;
    end
    scalar_adr[23][0][19] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][19]) begin
        scalar_argVld[23][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[23][0][19] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 13;
    if (scalar_rdat_vld_r[24][1][13]) begin
        scalar_argdone [24][1][13] = 1;
    end
    scalar_adr[24][1][13] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][13]) begin
        scalar_argVld[24][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[24][1][13] = 1;
    end

    //------READ (scalar, global adr = 612) comb block-----//
    //s = 25; r = 1; a = 9;
    if (scalar_rdat_vld_r[25][1][9]) begin
        scalar_argdone [25][1][9] = 1;
    end
    scalar_adr[25][1][9] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][9]) begin
        scalar_argVld[25][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[25][1][9] = 1;
    end

    //------READ (scalar, global adr = 616) comb block-----//
    //s = 26; r = 0; a = 17;
    if (scalar_rdat_vld_r[26][0][17]) begin
        scalar_argdone [26][0][17] = 1;
    end
    scalar_adr[26][0][17] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][17]) begin
        scalar_argVld[26][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[26][0][17] = 1;
    end

    //------READ (scalar, global adr = 620) comb block-----//
    //s = 27; r = 1; a = 8;
    if (scalar_rdat_vld_r[27][1][8]) begin
        scalar_argdone [27][1][8] = 1;
    end
    scalar_adr[27][1][8] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][8]) begin
        scalar_argVld[27][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[27][1][8] = 1;
    end

    //------READ (scalar, global adr = 624) comb block-----//
    //s = 28; r = 1; a = 14;
    if (scalar_rdat_vld_r[28][1][14]) begin
        scalar_argdone [28][1][14] = 1;
    end
    scalar_adr[28][1][14] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][14]) begin
        scalar_argVld[28][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[28][1][14] = 1;
    end

    //------READ (scalar, global adr = 472) comb block-----//
    //s = 22; r = 1; a = 13;
    if (scalar_rdat_vld_r[22][1][13]) begin
        scalar_argdone [22][1][13] = 1;
    end
    scalar_adr[22][1][13] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][13]) begin
        scalar_argVld[22][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[22][1][13] = 1;
    end

    //------WRITE (scalar, global adr = 472) comb block-----//
    //s = 22; r = 1; a = 5;
    if (scalar_argAck [22][1][5]) begin
        scalar_argVld [22][1][5] = 0;
        scalar_argAckdone [22][1][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r) begin
        scalar_argVld [22][1][5] = 1;
        scalar_argAckdone [22][1][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][5] = hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_r;
    scalar_adr    [22][1][5] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 18;
    if (scalar_rdat_vld_r[23][1][18]) begin
        scalar_argdone [23][1][18] = 1;
    end
    scalar_adr[23][1][18] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][18]) begin
        scalar_argVld[23][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[23][1][18] = 1;
    end

    //------WRITE (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 4;
    if (scalar_argAck [23][1][4]) begin
        scalar_argVld [23][1][4] = 0;
        scalar_argAckdone [23][1][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_ap_vld_r) begin
        scalar_argVld [23][1][4] = 1;
        scalar_argAckdone [23][1][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][1][4] = hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_r;
    scalar_adr    [23][1][4] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 468) comb block-----//
    //s = 21; r = 1; a = 5;
    if (scalar_argAck [21][1][5]) begin
        scalar_argVld [21][1][5] = 0;
        scalar_argAckdone [21][1][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_ap_vld_r) begin
        scalar_argVld [21][1][5] = 1;
        scalar_argAckdone [21][1][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][5] = hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_r;
    scalar_adr    [21][1][5] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 500) comb block-----//
    //s = 29; r = 0; a = 1;
    if (scalar_argAck [29][0][1]) begin
        scalar_argVld [29][0][1] = 0;
        scalar_argAckdone [29][0][1] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_tu_cross_pf_ap_vld_r) begin
        scalar_argVld [29][0][1] = 1;
        scalar_argAckdone [29][0][1] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][1] = hls_transform_unit_ex_hls_dup1_tu_cross_pf_r;
    scalar_adr    [29][0][1] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 532) comb block-----//
    //s = 5; r = 0; a = 13;
    if (scalar_rdat_vld_r[5][0][13]) begin
        scalar_argdone [5][0][13] = 1;
    end
    scalar_adr[5][0][13] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][13]) begin
        scalar_argVld[5][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[5][0][13] = 1;
    end

    //------WRITE (scalar, global adr = 532) comb block-----//
    //s = 5; r = 1; a = 5;
    if (scalar_argAck [5][1][5]) begin
        scalar_argVld [5][1][5] = 0;
        scalar_argAckdone [5][1][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_first_qp_group_o_ap_vld_r) begin
        scalar_argVld [5][1][5] = 1;
        scalar_argAckdone [5][1][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][5] = hls_transform_unit_ex_hls_dup1_first_qp_group_o_r;
    scalar_adr    [5][1][5] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 328) comb block-----//
    //s = 18; r = 0; a = 9;
    if (scalar_rdat_vld_r[18][0][9]) begin
        scalar_argdone [18][0][9] = 1;
    end
    scalar_adr[18][0][9] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][9]) begin
        scalar_argVld[18][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[18][0][9] = 1;
    end

    //------READ (scalar, global adr = 448) comb block-----//
    //s = 16; r = 0; a = 13;
    if (scalar_rdat_vld_r[16][0][13]) begin
        scalar_argdone [16][0][13] = 1;
    end
    scalar_adr[16][0][13] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][13]) begin
        scalar_argVld[16][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[16][0][13] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 1; a = 15;
    if (scalar_rdat_vld_r[11][1][15]) begin
        scalar_argdone [11][1][15] = 1;
    end
    scalar_adr[11][1][15] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][15]) begin
        scalar_argVld[11][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[11][1][15] = 1;
    end

    //------READ (scalar, global adr = 540) comb block-----//
    //s = 7; r = 0; a = 15;
    if (scalar_rdat_vld_r[7][0][15]) begin
        scalar_argdone [7][0][15] = 1;
    end
    scalar_adr[7][0][15] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][15]) begin
        scalar_argVld[7][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[7][0][15] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 1; a = 22;
    if (scalar_rdat_vld_r[13][1][22]) begin
        scalar_argdone [13][1][22] = 1;
    end
    scalar_adr[13][1][22] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][22]) begin
        scalar_argVld[13][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[13][1][22] = 1;
    end

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 0; a = 15;
    if (scalar_rdat_vld_r[28][0][15]) begin
        scalar_argdone [28][0][15] = 1;
    end
    scalar_adr[28][0][15] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][15]) begin
        scalar_argVld[28][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[28][0][15] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 0; a = 16;
    if (scalar_rdat_vld_r[2][0][16]) begin
        scalar_argdone [2][0][16] = 1;
    end
    scalar_adr[2][0][16] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][16]) begin
        scalar_argVld[2][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[2][0][16] = 1;
    end

    //------READ (scalar, global adr = 460) comb block-----//
    //s = 19; r = 0; a = 8;
    if (scalar_rdat_vld_r[19][0][8]) begin
        scalar_argdone [19][0][8] = 1;
    end
    scalar_adr[19][0][8] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][8]) begin
        scalar_argVld[19][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[19][0][8] = 1;
    end

    if (ap_arb_ret[hls_transform_unit_ex_hls_dup1] & ~ap_arb_ret_r[hls_transform_unit_ex_hls_dup1]) begin
        ap_arb_ret_running[hls_transform_unit_ex_hls_dup1] = 1;
        hls_transform_unit_ex_hls_dup1_ready = 0;
    end

    scalar_argAckdone_all[hls_transform_unit_ex_hls_dup1] = scalar_argAckdone[27][1][1] &
                                                scalar_argAckdone[28][1][2] &
                                                scalar_argAckdone[6][0][5] &
                                                scalar_argAckdone[10][1][6] &
                                                scalar_argAckdone[14][0][5] &
                                                scalar_argAckdone[12][1][4] &
                                                scalar_argAckdone[13][0][5] &
                                                scalar_argAckdone[28][0][3] &
                                                scalar_argAckdone[8][0][5] &
                                                scalar_argAckdone[9][0][7] &
                                                scalar_argAckdone[17][1][1] &
                                                scalar_argAckdone[18][1][1] &
                                                scalar_argAckdone[19][1][1] &
                                                scalar_argAckdone[20][0][4] &
                                                scalar_argAckdone[21][1][4] &
                                                scalar_argAckdone[22][1][4] &
                                                scalar_argAckdone[20][1][4] &
                                                scalar_argAckdone[21][0][5] &
                                                scalar_argAckdone[22][0][5] &
                                                scalar_argAckdone[23][0][4] &
                                                scalar_argAckdone[24][1][3] &
                                                scalar_argAckdone[25][1][3] &
                                                scalar_argAckdone[22][1][5] &
                                                scalar_argAckdone[23][1][4] &
                                                scalar_argAckdone[21][1][5] &
                                                scalar_argAckdone[29][0][1] &
                                                scalar_argAckdone[5][1][5];
    if (ap_arb_ret_running[hls_transform_unit_ex_hls_dup1] & scalar_argAckdone_all[hls_transform_unit_ex_hls_dup1] &~ ap_arb_reload_running_r[hls_transform_unit_ex_hls_dup1]) begin
        ap_arb_reload[hls_transform_unit_ex_hls_dup1] = 1;
        ap_arb_reload_running[hls_transform_unit_ex_hls_dup1] = 1;
    end

    if (ap_arb_start[hls_transform_unit_ex_hls_dup1] &~ ap_arb_start_r[hls_transform_unit_ex_hls_dup1]) begin
        ap_arb_start_running[hls_transform_unit_ex_hls_dup1] = 1;
    end

    if (ap_arb_start_running[hls_transform_unit_ex_hls_dup1] & ~scalar_writing_20& ~scalar_writing_16& ~scalar_writing_560& ~scalar_writing_484& ~scalar_writing_488& ~scalar_writing_572& ~scalar_writing_536& ~scalar_writing_56& ~scalar_writing_48& ~scalar_writing_1136& ~scalar_writing_600& ~scalar_writing_1508& ~scalar_writing_604& ~scalar_writing_608& ~scalar_writing_612& ~scalar_writing_616& ~scalar_writing_620& ~scalar_writing_624& ~scalar_writing_472& ~scalar_writing_476& ~scalar_writing_532& ~scalar_writing_540) begin
        ap_arb_start_running[hls_transform_unit_ex_hls_dup1] = 0;
        ap_arb_reload[hls_transform_unit_ex_hls_dup1] = 1;
    end

    scalar_argdone_all[hls_transform_unit_ex_hls_dup1] = scalar_argdone[5][1][11] &
                                                                scalar_argdone[4][1][7] &
                                                                scalar_argdone[27][1][7] &
                                                                scalar_argdone[1][1][15] &
                                                                scalar_argdone[28][1][13] &
                                                                scalar_argdone[29][1][4] &
                                                                scalar_argdone[27][0][9] &
                                                                scalar_argdone[30][0][10] &
                                                                scalar_argdone[12][0][19] &
                                                                scalar_argdone[20][1][11] &
                                                                scalar_argdone[21][1][16] &
                                                                scalar_argdone[22][0][13] &
                                                                scalar_argdone[23][0][18] &
                                                                scalar_argdone[24][1][12] &
                                                                scalar_argdone[25][0][9] &
                                                                scalar_argdone[25][1][8] &
                                                                scalar_argdone[26][0][16] &
                                                                scalar_argdone[15][1][14] &
                                                                scalar_argdone[6][0][15] &
                                                                scalar_argdone[14][0][21] &
                                                                scalar_argdone[12][1][18] &
                                                                scalar_argdone[28][0][14] &
                                                                scalar_argdone[22][1][12] &
                                                                scalar_argdone[23][1][17] &
                                                                scalar_argdone[24][0][14] &
                                                                scalar_argdone[30][1][10] &
                                                                scalar_argdone[31][0][17] &
                                                                scalar_argdone[0][0][26] &
                                                                scalar_argdone[29][0][6] &
                                                                scalar_argdone[22][0][14] &
                                                                scalar_argdone[25][0][10] &
                                                                scalar_argdone[26][1][15] &
                                                                scalar_argdone[23][0][19] &
                                                                scalar_argdone[24][1][13] &
                                                                scalar_argdone[25][1][9] &
                                                                scalar_argdone[26][0][17] &
                                                                scalar_argdone[27][1][8] &
                                                                scalar_argdone[28][1][14] &
                                                                scalar_argdone[22][1][13] &
                                                                scalar_argdone[23][1][18] &
                                                                scalar_argdone[5][0][13] &
                                                                scalar_argdone[18][0][9] &
                                                                scalar_argdone[16][0][13] &
                                                                scalar_argdone[11][1][15] &
                                                                scalar_argdone[7][0][15] &
                                                                scalar_argdone[13][1][22] &
                                                                scalar_argdone[28][0][15] &
                                                                scalar_argdone[2][0][16] &
                                                                scalar_argdone[19][0][8];

    if (scalar_argdone_all_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argdone[5][1][11] = 0;
        scalar_argdone[4][1][7] = 0;
        scalar_argdone[27][1][7] = 0;
        scalar_argdone[1][1][15] = 0;
        scalar_argdone[28][1][13] = 0;
        scalar_argdone[29][1][4] = 0;
        scalar_argdone[27][0][9] = 0;
        scalar_argdone[30][0][10] = 0;
        scalar_argdone[12][0][19] = 0;
        scalar_argdone[20][1][11] = 0;
        scalar_argdone[21][1][16] = 0;
        scalar_argdone[22][0][13] = 0;
        scalar_argdone[23][0][18] = 0;
        scalar_argdone[24][1][12] = 0;
        scalar_argdone[25][0][9] = 0;
        scalar_argdone[25][1][8] = 0;
        scalar_argdone[26][0][16] = 0;
        scalar_argdone[15][1][14] = 0;
        scalar_argdone[6][0][15] = 0;
        scalar_argdone[14][0][21] = 0;
        scalar_argdone[12][1][18] = 0;
        scalar_argdone[28][0][14] = 0;
        scalar_argdone[22][1][12] = 0;
        scalar_argdone[23][1][17] = 0;
        scalar_argdone[24][0][14] = 0;
        scalar_argdone[30][1][10] = 0;
        scalar_argdone[31][0][17] = 0;
        scalar_argdone[0][0][26] = 0;
        scalar_argdone[29][0][6] = 0;
        scalar_argdone[22][0][14] = 0;
        scalar_argdone[25][0][10] = 0;
        scalar_argdone[26][1][15] = 0;
        scalar_argdone[23][0][19] = 0;
        scalar_argdone[24][1][13] = 0;
        scalar_argdone[25][1][9] = 0;
        scalar_argdone[26][0][17] = 0;
        scalar_argdone[27][1][8] = 0;
        scalar_argdone[28][1][14] = 0;
        scalar_argdone[22][1][13] = 0;
        scalar_argdone[23][1][18] = 0;
        scalar_argdone[5][0][13] = 0;
        scalar_argdone[18][0][9] = 0;
        scalar_argdone[16][0][13] = 0;
        scalar_argdone[11][1][15] = 0;
        scalar_argdone[7][0][15] = 0;
        scalar_argdone[13][1][22] = 0;
        scalar_argdone[28][0][15] = 0;
        scalar_argdone[2][0][16] = 0;
        scalar_argdone[19][0][8] = 0;

        if (ap_arb_start_r[hls_transform_unit_ex_hls_dup1] & ~ap_running_r[hls_transform_unit_ex_hls_dup1]) begin
            ap_start[hls_transform_unit_ex_hls_dup1] = 1;
            ap_running[hls_transform_unit_ex_hls_dup1] = 1;
        end
        else if (ap_arb_ret_running_r[hls_transform_unit_ex_hls_dup1]) begin
            ap_arb_ret_running[hls_transform_unit_ex_hls_dup1] = 0;
            ap_arb_reload_running[hls_transform_unit_ex_hls_dup1] = 0;
            hls_transform_unit_ex_hls_dup1_ready = 1;
        end
    end

    if (ap_start_r[hls_transform_unit_ex_hls_dup1] & ap_ready_r[hls_transform_unit_ex_hls_dup1]) begin
        ap_start[hls_transform_unit_ex_hls_dup1] = 0;
    end

    if (ap_done_r[hls_transform_unit_ex_hls_dup1]) begin
        ap_running[hls_transform_unit_ex_hls_dup1] = 0;
    end
`endif
    //============================================================
    //hls_transform_unit_ex_hls_dup2       (f = 8)
    //============================================================
`ifdef enable_connect_hls_transform_unit_ex_hls_dup2
    //------READ (scalar, global adr = 20) comb block-----//
    //s = 5; r = 1; a = 12;
    if (scalar_rdat_vld_r[5][1][12]) begin
        scalar_argdone [5][1][12] = 1;
    end
    scalar_adr[5][1][12] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][12]) begin
        scalar_argVld[5][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[5][1][12] = 1;
    end

    //------READ (scalar, global adr = 16) comb block-----//
    //s = 4; r = 0; a = 9;
    if (scalar_rdat_vld_r[4][0][9]) begin
        scalar_argdone [4][0][9] = 1;
    end
    scalar_adr[4][0][9] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][9]) begin
        scalar_argVld[4][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[4][0][9] = 1;
    end

    //------READ (scalar, global adr = 1260) comb block-----//
    //s = 27; r = 0; a = 10;
    if (scalar_rdat_vld_r[27][0][10]) begin
        scalar_argdone [27][0][10] = 1;
    end
    scalar_adr[27][0][10] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][10]) begin
        scalar_argVld[27][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[27][0][10] = 1;
    end

    //------READ (scalar, global adr = 1156) comb block-----//
    //s = 1; r = 0; a = 17;
    if (scalar_rdat_vld_r[1][0][17]) begin
        scalar_argdone [1][0][17] = 1;
    end
    scalar_adr[1][0][17] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][17]) begin
        scalar_argVld[1][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[1][0][17] = 1;
    end

    //------READ (scalar, global adr = 1264) comb block-----//
    //s = 28; r = 1; a = 15;
    if (scalar_rdat_vld_r[28][1][15]) begin
        scalar_argdone [28][1][15] = 1;
    end
    scalar_adr[28][1][15] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][15]) begin
        scalar_argVld[28][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[28][1][15] = 1;
    end

    //------READ (scalar, global adr = 1268) comb block-----//
    //s = 29; r = 1; a = 5;
    if (scalar_rdat_vld_r[29][1][5]) begin
        scalar_argdone [29][1][5] = 1;
    end
    scalar_adr[29][1][5] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][5]) begin
        scalar_argVld[29][1][5] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[29][1][5] = 1;
    end

    //------READ (scalar, global adr = 1132) comb block-----//
    //s = 27; r = 1; a = 9;
    if (scalar_rdat_vld_r[27][1][9]) begin
        scalar_argdone [27][1][9] = 1;
    end
    scalar_adr[27][1][9] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][9]) begin
        scalar_argVld[27][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[27][1][9] = 1;
    end

    //------READ (scalar, global adr = 1272) comb block-----//
    //s = 30; r = 0; a = 11;
    if (scalar_rdat_vld_r[30][0][11]) begin
        scalar_argdone [30][0][11] = 1;
    end
    scalar_adr[30][0][11] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][11]) begin
        scalar_argVld[30][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[30][0][11] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 20;
    if (scalar_rdat_vld_r[12][0][20]) begin
        scalar_argdone [12][0][20] = 1;
    end
    scalar_adr[12][0][20] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][20]) begin
        scalar_argVld[12][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[12][0][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 0; a = 12;
    if (scalar_rdat_vld_r[20][0][12]) begin
        scalar_argdone [20][0][12] = 1;
    end
    scalar_adr    [20][0][12] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][12]) begin
        scalar_argVld [20][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [20][0][12] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 0; a = 18;
    if (scalar_rdat_vld_r[21][0][18]) begin
        scalar_argdone [21][0][18] = 1;
    end
    scalar_adr    [21][0][18] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][18]) begin
        scalar_argVld [21][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [21][0][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 0; a = 15;
    if (scalar_rdat_vld_r[22][0][15]) begin
        scalar_argdone [22][0][15] = 1;
    end
    scalar_adr    [22][0][15] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][15]) begin
        scalar_argVld [22][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [22][0][15] = 1;
    end

    //------READ (scalar, complete partition, global adr = 348) comb block-----//
    //s = 23; r = 0; a = 20;
    if (scalar_rdat_vld_r[23][0][20]) begin
        scalar_argdone [23][0][20] = 1;
    end
    scalar_adr    [23][0][20] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][20]) begin
        scalar_argVld [23][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [23][0][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 352) comb block-----//
    //s = 24; r = 0; a = 15;
    if (scalar_rdat_vld_r[24][0][15]) begin
        scalar_argdone [24][0][15] = 1;
    end
    scalar_adr    [24][0][15] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][15]) begin
        scalar_argVld [24][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [24][0][15] = 1;
    end

    //------READ (scalar, complete partition, global adr = 356) comb block-----//
    //s = 25; r = 0; a = 11;
    if (scalar_rdat_vld_r[25][0][11]) begin
        scalar_argdone [25][0][11] = 1;
    end
    scalar_adr    [25][0][11] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][11]) begin
        scalar_argVld [25][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [25][0][11] = 1;
    end

    //------READ (scalar, global adr = 484) comb block-----//
    //s = 25; r = 1; a = 10;
    if (scalar_rdat_vld_r[25][1][10]) begin
        scalar_argdone [25][1][10] = 1;
    end
    scalar_adr[25][1][10] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][10]) begin
        scalar_argVld[25][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[25][1][10] = 1;
    end

    //------READ (scalar, global adr = 488) comb block-----//
    //s = 26; r = 1; a = 16;
    if (scalar_rdat_vld_r[26][1][16]) begin
        scalar_argdone [26][1][16] = 1;
    end
    scalar_adr[26][1][16] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][16]) begin
        scalar_argVld[26][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[26][1][16] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 0; a = 16;
    if (scalar_rdat_vld_r[15][0][16]) begin
        scalar_argdone [15][0][16] = 1;
    end
    scalar_adr[15][0][16] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][16]) begin
        scalar_argVld[15][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[15][0][16] = 1;
    end

    //------WRITE (scalar, global adr = 492) comb block-----//
    //s = 27; r = 0; a = 2;
    if (scalar_argAck [27][0][2]) begin
        scalar_argVld [27][0][2] = 0;
        scalar_argAckdone [27][0][2] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_ap_vld_r) begin
        scalar_argVld [27][0][2] = 1;
        scalar_argAckdone [27][0][2] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][2] = hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_r;
    scalar_adr    [27][0][2] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 496) comb block-----//
    //s = 28; r = 1; a = 3;
    if (scalar_argAck [28][1][3]) begin
        scalar_argVld [28][1][3] = 0;
        scalar_argAckdone [28][1][3] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_ap_vld_r) begin
        scalar_argVld [28][1][3] = 1;
        scalar_argAckdone [28][1][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][1][3] = hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_r;
    scalar_adr    [28][1][3] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 15;
    if (scalar_rdat_vld_r[6][1][15]) begin
        scalar_argdone [6][1][15] = 1;
    end
    scalar_adr[6][1][15] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][15]) begin
        scalar_argVld[6][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[6][1][15] = 1;
    end

    //------WRITE (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 5;
    if (scalar_argAck [6][1][5]) begin
        scalar_argVld [6][1][5] = 0;
        scalar_argAckdone [6][1][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_qp_y_o_ap_vld_r) begin
        scalar_argVld [6][1][5] = 1;
        scalar_argAckdone [6][1][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][5] = hls_transform_unit_ex_hls_dup2_qp_y_o_r;
    scalar_adr    [6][1][5] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 168) comb block-----//
    //s = 10; r = 0; a = 7;
    if (scalar_argAck [10][0][7]) begin
        scalar_argVld [10][0][7] = 0;
        scalar_argAckdone [10][0][7] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_log2_trafo_size_ap_vld_r) begin
        scalar_argVld [10][0][7] = 1;
        scalar_argAckdone [10][0][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][7] = hls_transform_unit_ex_hls_dup2_log2_trafo_size_r;
    scalar_adr    [10][0][7] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 56) comb block-----//
    //s = 14; r = 1; a = 20;
    if (scalar_rdat_vld_r[14][1][20]) begin
        scalar_argdone [14][1][20] = 1;
    end
    scalar_adr[14][1][20] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][20]) begin
        scalar_argVld[14][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[14][1][20] = 1;
    end

    //------WRITE (scalar, global adr = 56) comb block-----//
    //s = 14; r = 1; a = 5;
    if (scalar_argAck [14][1][5]) begin
        scalar_argVld [14][1][5] = 0;
        scalar_argAckdone [14][1][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_ap_vld_r) begin
        scalar_argVld [14][1][5] = 1;
        scalar_argAckdone [14][1][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][5] = hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_r;
    scalar_adr    [14][1][5] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 48) comb block-----//
    //s = 12; r = 1; a = 19;
    if (scalar_rdat_vld_r[12][1][19]) begin
        scalar_argdone [12][1][19] = 1;
    end
    scalar_adr[12][1][19] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][19]) begin
        scalar_argVld[12][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[12][1][19] = 1;
    end

    //------WRITE (scalar, global adr = 48) comb block-----//
    //s = 12; r = 0; a = 5;
    if (scalar_argAck [12][0][5]) begin
        scalar_argVld [12][0][5] = 0;
        scalar_argAckdone [12][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_scan_idx_o_ap_vld_r) begin
        scalar_argVld [12][0][5] = 1;
        scalar_argAckdone [12][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][5] = hls_transform_unit_ex_hls_dup2_scan_idx_o_r;
    scalar_adr    [12][0][5] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 52) comb block-----//
    //s = 13; r = 1; a = 5;
    if (scalar_argAck [13][1][5]) begin
        scalar_argVld [13][1][5] = 0;
        scalar_argAckdone [13][1][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_scan_idx_c_ap_vld_r) begin
        scalar_argVld [13][1][5] = 1;
        scalar_argAckdone [13][1][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][5] = hls_transform_unit_ex_hls_dup2_scan_idx_c_r;
    scalar_adr    [13][1][5] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1136) comb block-----//
    //s = 28; r = 0; a = 16;
    if (scalar_rdat_vld_r[28][0][16]) begin
        scalar_argdone [28][0][16] = 1;
    end
    scalar_adr[28][0][16] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][16]) begin
        scalar_argVld[28][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[28][0][16] = 1;
    end

    //------WRITE (scalar, global adr = 1136) comb block-----//
    //s = 28; r = 0; a = 4;
    if (scalar_argAck [28][0][4]) begin
        scalar_argVld [28][0][4] = 0;
        scalar_argAckdone [28][0][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cmdr_run_o_ap_vld_r) begin
        scalar_argVld [28][0][4] = 1;
        scalar_argAckdone [28][0][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][0][4] = hls_transform_unit_ex_hls_dup2_cmdr_run_o_r;
    scalar_adr    [28][0][4] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1240) comb block-----//
    //s = 22; r = 1; a = 14;
    if (scalar_rdat_vld_r[22][1][14]) begin
        scalar_argdone [22][1][14] = 1;
    end
    scalar_adr    [22][1][14] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][14]) begin
        scalar_argVld [22][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [22][1][14] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1244) comb block-----//
    //s = 23; r = 1; a = 19;
    if (scalar_rdat_vld_r[23][1][19]) begin
        scalar_argdone [23][1][19] = 1;
    end
    scalar_adr    [23][1][19] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][19]) begin
        scalar_argVld [23][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [23][1][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1248) comb block-----//
    //s = 24; r = 1; a = 14;
    if (scalar_rdat_vld_r[24][1][14]) begin
        scalar_argdone [24][1][14] = 1;
    end
    scalar_adr    [24][1][14] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][14]) begin
        scalar_argVld [24][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [24][1][14] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1144) comb block-----//
    //s = 30; r = 1; a = 11;
    if (scalar_rdat_vld_r[30][1][11]) begin
        scalar_argdone [30][1][11] = 1;
    end
    scalar_adr    [30][1][11] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][11]) begin
        scalar_argVld [30][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [30][1][11] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1148) comb block-----//
    //s = 31; r = 1; a = 16;
    if (scalar_rdat_vld_r[31][1][16]) begin
        scalar_argdone [31][1][16] = 1;
    end
    scalar_adr    [31][1][16] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][16]) begin
        scalar_argVld [31][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [31][1][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1152) comb block-----//
    //s = 0; r = 1; a = 25;
    if (scalar_rdat_vld_r[0][1][25]) begin
        scalar_argdone [0][1][25] = 1;
    end
    scalar_adr    [0][1][25] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][25]) begin
        scalar_argVld [0][1][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [0][1][25] = 1;
    end

    //------READ (scalar, global adr = 1140) comb block-----//
    //s = 29; r = 0; a = 7;
    if (scalar_rdat_vld_r[29][0][7]) begin
        scalar_argdone [29][0][7] = 1;
    end
    scalar_adr[29][0][7] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][7]) begin
        scalar_argVld[29][0][7] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[29][0][7] = 1;
    end

    //------WRITE (scalar, global adr = 160) comb block-----//
    //s = 8; r = 1; a = 5;
    if (scalar_argAck [8][1][5]) begin
        scalar_argVld [8][1][5] = 0;
        scalar_argAckdone [8][1][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_nPbW_ap_vld_r) begin
        scalar_argVld [8][1][5] = 1;
        scalar_argAckdone [8][1][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][5] = hls_transform_unit_ex_hls_dup2_nPbW_r;
    scalar_adr    [8][1][5] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 164) comb block-----//
    //s = 9; r = 1; a = 7;
    if (scalar_argAck [9][1][7]) begin
        scalar_argVld [9][1][7] = 0;
        scalar_argAckdone [9][1][7] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_nPbH_ap_vld_r) begin
        scalar_argVld [9][1][7] = 1;
        scalar_argAckdone [9][1][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][7] = hls_transform_unit_ex_hls_dup2_nPbH_r;
    scalar_adr    [9][1][7] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 580) comb block-----//
    //s = 17; r = 0; a = 2;
    if (scalar_argAck [17][0][2]) begin
        scalar_argVld [17][0][2] = 0;
        scalar_argAckdone [17][0][2] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_up_ap_vld_r) begin
        scalar_argVld [17][0][2] = 1;
        scalar_argAckdone [17][0][2] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][0][2] = hls_transform_unit_ex_hls_dup2_cand_up_r;
    scalar_adr    [17][0][2] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 584) comb block-----//
    //s = 18; r = 0; a = 2;
    if (scalar_argAck [18][0][2]) begin
        scalar_argVld [18][0][2] = 0;
        scalar_argAckdone [18][0][2] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_left_ap_vld_r) begin
        scalar_argVld [18][0][2] = 1;
        scalar_argAckdone [18][0][2] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][0][2] = hls_transform_unit_ex_hls_dup2_cand_left_r;
    scalar_adr    [18][0][2] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 588) comb block-----//
    //s = 19; r = 0; a = 2;
    if (scalar_argAck [19][0][2]) begin
        scalar_argVld [19][0][2] = 0;
        scalar_argAckdone [19][0][2] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_up_left_ap_vld_r) begin
        scalar_argVld [19][0][2] = 1;
        scalar_argAckdone [19][0][2] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][0][2] = hls_transform_unit_ex_hls_dup2_cand_up_left_r;
    scalar_adr    [19][0][2] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 592) comb block-----//
    //s = 20; r = 0; a = 5;
    if (scalar_argAck [20][0][5]) begin
        scalar_argVld [20][0][5] = 0;
        scalar_argAckdone [20][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_up_right_sap_ap_vld_r) begin
        scalar_argVld [20][0][5] = 1;
        scalar_argAckdone [20][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][5] = hls_transform_unit_ex_hls_dup2_cand_up_right_sap_r;
    scalar_adr    [20][0][5] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 596) comb block-----//
    //s = 21; r = 0; a = 6;
    if (scalar_argAck [21][0][6]) begin
        scalar_argVld [21][0][6] = 0;
        scalar_argAckdone [21][0][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_up_right_ap_vld_r) begin
        scalar_argVld [21][0][6] = 1;
        scalar_argAckdone [21][0][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][6] = hls_transform_unit_ex_hls_dup2_cand_up_right_r;
    scalar_adr    [21][0][6] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 600) comb block-----//
    //s = 22; r = 0; a = 16;
    if (scalar_rdat_vld_r[22][0][16]) begin
        scalar_argdone [22][0][16] = 1;
    end
    scalar_adr[22][0][16] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][16]) begin
        scalar_argVld[22][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[22][0][16] = 1;
    end

    //------WRITE (scalar, global adr = 600) comb block-----//
    //s = 22; r = 0; a = 6;
    if (scalar_argAck [22][0][6]) begin
        scalar_argVld [22][0][6] = 0;
        scalar_argAckdone [22][0][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_ap_vld_r) begin
        scalar_argVld [22][0][6] = 1;
        scalar_argAckdone [22][0][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][6] = hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_r;
    scalar_adr    [22][0][6] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1488) comb block-----//
    //s = 20; r = 1; a = 5;
    if (scalar_argAck [20][1][5]) begin
        scalar_argVld [20][1][5] = 0;
        scalar_argAckdone [20][1][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_up_c_ap_vld_r) begin
        scalar_argVld [20][1][5] = 1;
        scalar_argAckdone [20][1][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][5] = hls_transform_unit_ex_hls_dup2_cand_up_c_r;
    scalar_adr    [20][1][5] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1492) comb block-----//
    //s = 21; r = 1; a = 6;
    if (scalar_argAck [21][1][6]) begin
        scalar_argVld [21][1][6] = 0;
        scalar_argAckdone [21][1][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_left_c_ap_vld_r) begin
        scalar_argVld [21][1][6] = 1;
        scalar_argAckdone [21][1][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][6] = hls_transform_unit_ex_hls_dup2_cand_left_c_r;
    scalar_adr    [21][1][6] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1496) comb block-----//
    //s = 22; r = 1; a = 6;
    if (scalar_argAck [22][1][6]) begin
        scalar_argVld [22][1][6] = 0;
        scalar_argAckdone [22][1][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_up_left_c_ap_vld_r) begin
        scalar_argVld [22][1][6] = 1;
        scalar_argAckdone [22][1][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][6] = hls_transform_unit_ex_hls_dup2_cand_up_left_c_r;
    scalar_adr    [22][1][6] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1500) comb block-----//
    //s = 23; r = 0; a = 5;
    if (scalar_argAck [23][0][5]) begin
        scalar_argVld [23][0][5] = 0;
        scalar_argAckdone [23][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_ap_vld_r) begin
        scalar_argVld [23][0][5] = 1;
        scalar_argAckdone [23][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][5] = hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_r;
    scalar_adr    [23][0][5] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1504) comb block-----//
    //s = 24; r = 0; a = 4;
    if (scalar_argAck [24][0][4]) begin
        scalar_argVld [24][0][4] = 0;
        scalar_argAckdone [24][0][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_up_right_c_ap_vld_r) begin
        scalar_argVld [24][0][4] = 1;
        scalar_argAckdone [24][0][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][0][4] = hls_transform_unit_ex_hls_dup2_cand_up_right_c_r;
    scalar_adr    [24][0][4] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1508) comb block-----//
    //s = 25; r = 0; a = 12;
    if (scalar_rdat_vld_r[25][0][12]) begin
        scalar_argdone [25][0][12] = 1;
    end
    scalar_adr[25][0][12] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][12]) begin
        scalar_argVld[25][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[25][0][12] = 1;
    end

    //------WRITE (scalar, global adr = 1508) comb block-----//
    //s = 25; r = 0; a = 4;
    if (scalar_argAck [25][0][4]) begin
        scalar_argVld [25][0][4] = 0;
        scalar_argAckdone [25][0][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_ap_vld_r) begin
        scalar_argVld [25][0][4] = 1;
        scalar_argAckdone [25][0][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][0][4] = hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_r;
    scalar_adr    [25][0][4] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 18;
    if (scalar_rdat_vld_r[26][0][18]) begin
        scalar_argdone [26][0][18] = 1;
    end
    scalar_adr[26][0][18] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][18]) begin
        scalar_argVld[26][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[26][0][18] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 0; a = 21;
    if (scalar_rdat_vld_r[23][0][21]) begin
        scalar_argdone [23][0][21] = 1;
    end
    scalar_adr[23][0][21] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][21]) begin
        scalar_argVld[23][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[23][0][21] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 0; a = 16;
    if (scalar_rdat_vld_r[24][0][16]) begin
        scalar_argdone [24][0][16] = 1;
    end
    scalar_adr[24][0][16] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][16]) begin
        scalar_argVld[24][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[24][0][16] = 1;
    end

    //------READ (scalar, global adr = 612) comb block-----//
    //s = 25; r = 1; a = 11;
    if (scalar_rdat_vld_r[25][1][11]) begin
        scalar_argdone [25][1][11] = 1;
    end
    scalar_adr[25][1][11] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][11]) begin
        scalar_argVld[25][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[25][1][11] = 1;
    end

    //------READ (scalar, global adr = 616) comb block-----//
    //s = 26; r = 1; a = 17;
    if (scalar_rdat_vld_r[26][1][17]) begin
        scalar_argdone [26][1][17] = 1;
    end
    scalar_adr[26][1][17] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][17]) begin
        scalar_argVld[26][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[26][1][17] = 1;
    end

    //------READ (scalar, global adr = 620) comb block-----//
    //s = 27; r = 0; a = 11;
    if (scalar_rdat_vld_r[27][0][11]) begin
        scalar_argdone [27][0][11] = 1;
    end
    scalar_adr[27][0][11] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][11]) begin
        scalar_argVld[27][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[27][0][11] = 1;
    end

    //------READ (scalar, global adr = 624) comb block-----//
    //s = 28; r = 1; a = 16;
    if (scalar_rdat_vld_r[28][1][16]) begin
        scalar_argdone [28][1][16] = 1;
    end
    scalar_adr[28][1][16] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][16]) begin
        scalar_argVld[28][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[28][1][16] = 1;
    end

    //------READ (scalar, global adr = 472) comb block-----//
    //s = 22; r = 1; a = 15;
    if (scalar_rdat_vld_r[22][1][15]) begin
        scalar_argdone [22][1][15] = 1;
    end
    scalar_adr[22][1][15] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][15]) begin
        scalar_argVld[22][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[22][1][15] = 1;
    end

    //------WRITE (scalar, global adr = 472) comb block-----//
    //s = 22; r = 0; a = 7;
    if (scalar_argAck [22][0][7]) begin
        scalar_argVld [22][0][7] = 0;
        scalar_argAckdone [22][0][7] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r) begin
        scalar_argVld [22][0][7] = 1;
        scalar_argAckdone [22][0][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][7] = hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_r;
    scalar_adr    [22][0][7] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 20;
    if (scalar_rdat_vld_r[23][1][20]) begin
        scalar_argdone [23][1][20] = 1;
    end
    scalar_adr[23][1][20] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][20]) begin
        scalar_argVld[23][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[23][1][20] = 1;
    end

    //------WRITE (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 5;
    if (scalar_argAck [23][1][5]) begin
        scalar_argVld [23][1][5] = 0;
        scalar_argAckdone [23][1][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_ap_vld_r) begin
        scalar_argVld [23][1][5] = 1;
        scalar_argAckdone [23][1][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][1][5] = hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_r;
    scalar_adr    [23][1][5] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 468) comb block-----//
    //s = 21; r = 0; a = 7;
    if (scalar_argAck [21][0][7]) begin
        scalar_argVld [21][0][7] = 0;
        scalar_argAckdone [21][0][7] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_ap_vld_r) begin
        scalar_argVld [21][0][7] = 1;
        scalar_argAckdone [21][0][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][7] = hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_r;
    scalar_adr    [21][0][7] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 500) comb block-----//
    //s = 29; r = 1; a = 1;
    if (scalar_argAck [29][1][1]) begin
        scalar_argVld [29][1][1] = 0;
        scalar_argAckdone [29][1][1] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_tu_cross_pf_ap_vld_r) begin
        scalar_argVld [29][1][1] = 1;
        scalar_argAckdone [29][1][1] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][1] = hls_transform_unit_ex_hls_dup2_tu_cross_pf_r;
    scalar_adr    [29][1][1] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 532) comb block-----//
    //s = 5; r = 0; a = 14;
    if (scalar_rdat_vld_r[5][0][14]) begin
        scalar_argdone [5][0][14] = 1;
    end
    scalar_adr[5][0][14] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][14]) begin
        scalar_argVld[5][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[5][0][14] = 1;
    end

    //------WRITE (scalar, global adr = 532) comb block-----//
    //s = 5; r = 0; a = 6;
    if (scalar_argAck [5][0][6]) begin
        scalar_argVld [5][0][6] = 0;
        scalar_argAckdone [5][0][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_first_qp_group_o_ap_vld_r) begin
        scalar_argVld [5][0][6] = 1;
        scalar_argAckdone [5][0][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][6] = hls_transform_unit_ex_hls_dup2_first_qp_group_o_r;
    scalar_adr    [5][0][6] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 328) comb block-----//
    //s = 18; r = 1; a = 9;
    if (scalar_rdat_vld_r[18][1][9]) begin
        scalar_argdone [18][1][9] = 1;
    end
    scalar_adr[18][1][9] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][9]) begin
        scalar_argVld[18][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[18][1][9] = 1;
    end

    //------READ (scalar, global adr = 448) comb block-----//
    //s = 16; r = 1; a = 13;
    if (scalar_rdat_vld_r[16][1][13]) begin
        scalar_argdone [16][1][13] = 1;
    end
    scalar_adr[16][1][13] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][13]) begin
        scalar_argVld[16][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[16][1][13] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 0; a = 17;
    if (scalar_rdat_vld_r[11][0][17]) begin
        scalar_argdone [11][0][17] = 1;
    end
    scalar_adr[11][0][17] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][17]) begin
        scalar_argVld[11][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[11][0][17] = 1;
    end

    //------READ (scalar, global adr = 540) comb block-----//
    //s = 7; r = 1; a = 14;
    if (scalar_rdat_vld_r[7][1][14]) begin
        scalar_argdone [7][1][14] = 1;
    end
    scalar_adr[7][1][14] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][14]) begin
        scalar_argVld[7][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[7][1][14] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 0; a = 24;
    if (scalar_rdat_vld_r[13][0][24]) begin
        scalar_argdone [13][0][24] = 1;
    end
    scalar_adr[13][0][24] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][24]) begin
        scalar_argVld[13][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[13][0][24] = 1;
    end

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 0; a = 17;
    if (scalar_rdat_vld_r[28][0][17]) begin
        scalar_argdone [28][0][17] = 1;
    end
    scalar_adr[28][0][17] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][17]) begin
        scalar_argVld[28][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[28][0][17] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 1; a = 15;
    if (scalar_rdat_vld_r[2][1][15]) begin
        scalar_argdone [2][1][15] = 1;
    end
    scalar_adr[2][1][15] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][15]) begin
        scalar_argVld[2][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[2][1][15] = 1;
    end

    //------READ (scalar, global adr = 460) comb block-----//
    //s = 19; r = 1; a = 8;
    if (scalar_rdat_vld_r[19][1][8]) begin
        scalar_argdone [19][1][8] = 1;
    end
    scalar_adr[19][1][8] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][8]) begin
        scalar_argVld[19][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[19][1][8] = 1;
    end

    if (ap_arb_ret[hls_transform_unit_ex_hls_dup2] & ~ap_arb_ret_r[hls_transform_unit_ex_hls_dup2]) begin
        ap_arb_ret_running[hls_transform_unit_ex_hls_dup2] = 1;
        hls_transform_unit_ex_hls_dup2_ready = 0;
    end

    scalar_argAckdone_all[hls_transform_unit_ex_hls_dup2] = scalar_argAckdone[27][0][2] &
                                                scalar_argAckdone[28][1][3] &
                                                scalar_argAckdone[6][1][5] &
                                                scalar_argAckdone[10][0][7] &
                                                scalar_argAckdone[14][1][5] &
                                                scalar_argAckdone[12][0][5] &
                                                scalar_argAckdone[13][1][5] &
                                                scalar_argAckdone[28][0][4] &
                                                scalar_argAckdone[8][1][5] &
                                                scalar_argAckdone[9][1][7] &
                                                scalar_argAckdone[17][0][2] &
                                                scalar_argAckdone[18][0][2] &
                                                scalar_argAckdone[19][0][2] &
                                                scalar_argAckdone[20][0][5] &
                                                scalar_argAckdone[21][0][6] &
                                                scalar_argAckdone[22][0][6] &
                                                scalar_argAckdone[20][1][5] &
                                                scalar_argAckdone[21][1][6] &
                                                scalar_argAckdone[22][1][6] &
                                                scalar_argAckdone[23][0][5] &
                                                scalar_argAckdone[24][0][4] &
                                                scalar_argAckdone[25][0][4] &
                                                scalar_argAckdone[22][0][7] &
                                                scalar_argAckdone[23][1][5] &
                                                scalar_argAckdone[21][0][7] &
                                                scalar_argAckdone[29][1][1] &
                                                scalar_argAckdone[5][0][6];
    if (ap_arb_ret_running[hls_transform_unit_ex_hls_dup2] & scalar_argAckdone_all[hls_transform_unit_ex_hls_dup2] &~ ap_arb_reload_running_r[hls_transform_unit_ex_hls_dup2]) begin
        ap_arb_reload[hls_transform_unit_ex_hls_dup2] = 1;
        ap_arb_reload_running[hls_transform_unit_ex_hls_dup2] = 1;
    end

    if (ap_arb_start[hls_transform_unit_ex_hls_dup2] &~ ap_arb_start_r[hls_transform_unit_ex_hls_dup2]) begin
        ap_arb_start_running[hls_transform_unit_ex_hls_dup2] = 1;
    end

    if (ap_arb_start_running[hls_transform_unit_ex_hls_dup2] & ~scalar_writing_20& ~scalar_writing_16& ~scalar_writing_560& ~scalar_writing_484& ~scalar_writing_488& ~scalar_writing_572& ~scalar_writing_536& ~scalar_writing_56& ~scalar_writing_48& ~scalar_writing_1136& ~scalar_writing_600& ~scalar_writing_1508& ~scalar_writing_604& ~scalar_writing_608& ~scalar_writing_612& ~scalar_writing_616& ~scalar_writing_620& ~scalar_writing_624& ~scalar_writing_472& ~scalar_writing_476& ~scalar_writing_532& ~scalar_writing_540) begin
        ap_arb_start_running[hls_transform_unit_ex_hls_dup2] = 0;
        ap_arb_reload[hls_transform_unit_ex_hls_dup2] = 1;
    end

    scalar_argdone_all[hls_transform_unit_ex_hls_dup2] = scalar_argdone[5][1][12] &
                                                                scalar_argdone[4][0][9] &
                                                                scalar_argdone[27][0][10] &
                                                                scalar_argdone[1][0][17] &
                                                                scalar_argdone[28][1][15] &
                                                                scalar_argdone[29][1][5] &
                                                                scalar_argdone[27][1][9] &
                                                                scalar_argdone[30][0][11] &
                                                                scalar_argdone[12][0][20] &
                                                                scalar_argdone[20][0][12] &
                                                                scalar_argdone[21][0][18] &
                                                                scalar_argdone[22][0][15] &
                                                                scalar_argdone[23][0][20] &
                                                                scalar_argdone[24][0][15] &
                                                                scalar_argdone[25][0][11] &
                                                                scalar_argdone[25][1][10] &
                                                                scalar_argdone[26][1][16] &
                                                                scalar_argdone[15][0][16] &
                                                                scalar_argdone[6][1][15] &
                                                                scalar_argdone[14][1][20] &
                                                                scalar_argdone[12][1][19] &
                                                                scalar_argdone[28][0][16] &
                                                                scalar_argdone[22][1][14] &
                                                                scalar_argdone[23][1][19] &
                                                                scalar_argdone[24][1][14] &
                                                                scalar_argdone[30][1][11] &
                                                                scalar_argdone[31][1][16] &
                                                                scalar_argdone[0][1][25] &
                                                                scalar_argdone[29][0][7] &
                                                                scalar_argdone[22][0][16] &
                                                                scalar_argdone[25][0][12] &
                                                                scalar_argdone[26][0][18] &
                                                                scalar_argdone[23][0][21] &
                                                                scalar_argdone[24][0][16] &
                                                                scalar_argdone[25][1][11] &
                                                                scalar_argdone[26][1][17] &
                                                                scalar_argdone[27][0][11] &
                                                                scalar_argdone[28][1][16] &
                                                                scalar_argdone[22][1][15] &
                                                                scalar_argdone[23][1][20] &
                                                                scalar_argdone[5][0][14] &
                                                                scalar_argdone[18][1][9] &
                                                                scalar_argdone[16][1][13] &
                                                                scalar_argdone[11][0][17] &
                                                                scalar_argdone[7][1][14] &
                                                                scalar_argdone[13][0][24] &
                                                                scalar_argdone[28][0][17] &
                                                                scalar_argdone[2][1][15] &
                                                                scalar_argdone[19][1][8];

    if (scalar_argdone_all_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argdone[5][1][12] = 0;
        scalar_argdone[4][0][9] = 0;
        scalar_argdone[27][0][10] = 0;
        scalar_argdone[1][0][17] = 0;
        scalar_argdone[28][1][15] = 0;
        scalar_argdone[29][1][5] = 0;
        scalar_argdone[27][1][9] = 0;
        scalar_argdone[30][0][11] = 0;
        scalar_argdone[12][0][20] = 0;
        scalar_argdone[20][0][12] = 0;
        scalar_argdone[21][0][18] = 0;
        scalar_argdone[22][0][15] = 0;
        scalar_argdone[23][0][20] = 0;
        scalar_argdone[24][0][15] = 0;
        scalar_argdone[25][0][11] = 0;
        scalar_argdone[25][1][10] = 0;
        scalar_argdone[26][1][16] = 0;
        scalar_argdone[15][0][16] = 0;
        scalar_argdone[6][1][15] = 0;
        scalar_argdone[14][1][20] = 0;
        scalar_argdone[12][1][19] = 0;
        scalar_argdone[28][0][16] = 0;
        scalar_argdone[22][1][14] = 0;
        scalar_argdone[23][1][19] = 0;
        scalar_argdone[24][1][14] = 0;
        scalar_argdone[30][1][11] = 0;
        scalar_argdone[31][1][16] = 0;
        scalar_argdone[0][1][25] = 0;
        scalar_argdone[29][0][7] = 0;
        scalar_argdone[22][0][16] = 0;
        scalar_argdone[25][0][12] = 0;
        scalar_argdone[26][0][18] = 0;
        scalar_argdone[23][0][21] = 0;
        scalar_argdone[24][0][16] = 0;
        scalar_argdone[25][1][11] = 0;
        scalar_argdone[26][1][17] = 0;
        scalar_argdone[27][0][11] = 0;
        scalar_argdone[28][1][16] = 0;
        scalar_argdone[22][1][15] = 0;
        scalar_argdone[23][1][20] = 0;
        scalar_argdone[5][0][14] = 0;
        scalar_argdone[18][1][9] = 0;
        scalar_argdone[16][1][13] = 0;
        scalar_argdone[11][0][17] = 0;
        scalar_argdone[7][1][14] = 0;
        scalar_argdone[13][0][24] = 0;
        scalar_argdone[28][0][17] = 0;
        scalar_argdone[2][1][15] = 0;
        scalar_argdone[19][1][8] = 0;

        if (ap_arb_start_r[hls_transform_unit_ex_hls_dup2] & ~ap_running_r[hls_transform_unit_ex_hls_dup2]) begin
            ap_start[hls_transform_unit_ex_hls_dup2] = 1;
            ap_running[hls_transform_unit_ex_hls_dup2] = 1;
        end
        else if (ap_arb_ret_running_r[hls_transform_unit_ex_hls_dup2]) begin
            ap_arb_ret_running[hls_transform_unit_ex_hls_dup2] = 0;
            ap_arb_reload_running[hls_transform_unit_ex_hls_dup2] = 0;
            hls_transform_unit_ex_hls_dup2_ready = 1;
        end
    end

    if (ap_start_r[hls_transform_unit_ex_hls_dup2] & ap_ready_r[hls_transform_unit_ex_hls_dup2]) begin
        ap_start[hls_transform_unit_ex_hls_dup2] = 0;
    end

    if (ap_done_r[hls_transform_unit_ex_hls_dup2]) begin
        ap_running[hls_transform_unit_ex_hls_dup2] = 0;
    end
`endif
    //============================================================
    //hls_transform_unit_ex_hls_dup3       (f = 9)
    //============================================================
`ifdef enable_connect_hls_transform_unit_ex_hls_dup3
    //------READ (scalar, global adr = 20) comb block-----//
    //s = 5; r = 1; a = 13;
    if (scalar_rdat_vld_r[5][1][13]) begin
        scalar_argdone [5][1][13] = 1;
    end
    scalar_adr[5][1][13] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][13]) begin
        scalar_argVld[5][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[5][1][13] = 1;
    end

    //------READ (scalar, global adr = 16) comb block-----//
    //s = 4; r = 1; a = 8;
    if (scalar_rdat_vld_r[4][1][8]) begin
        scalar_argdone [4][1][8] = 1;
    end
    scalar_adr[4][1][8] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][1][8]) begin
        scalar_argVld[4][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[4][1][8] = 1;
    end

    //------READ (scalar, global adr = 1260) comb block-----//
    //s = 27; r = 1; a = 10;
    if (scalar_rdat_vld_r[27][1][10]) begin
        scalar_argdone [27][1][10] = 1;
    end
    scalar_adr[27][1][10] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][10]) begin
        scalar_argVld[27][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[27][1][10] = 1;
    end

    //------READ (scalar, global adr = 1156) comb block-----//
    //s = 1; r = 1; a = 16;
    if (scalar_rdat_vld_r[1][1][16]) begin
        scalar_argdone [1][1][16] = 1;
    end
    scalar_adr[1][1][16] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][16]) begin
        scalar_argVld[1][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[1][1][16] = 1;
    end

    //------READ (scalar, global adr = 1264) comb block-----//
    //s = 28; r = 1; a = 17;
    if (scalar_rdat_vld_r[28][1][17]) begin
        scalar_argdone [28][1][17] = 1;
    end
    scalar_adr[28][1][17] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][17]) begin
        scalar_argVld[28][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[28][1][17] = 1;
    end

    //------READ (scalar, global adr = 1268) comb block-----//
    //s = 29; r = 1; a = 6;
    if (scalar_rdat_vld_r[29][1][6]) begin
        scalar_argdone [29][1][6] = 1;
    end
    scalar_adr[29][1][6] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][6]) begin
        scalar_argVld[29][1][6] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[29][1][6] = 1;
    end

    //------READ (scalar, global adr = 1132) comb block-----//
    //s = 27; r = 0; a = 12;
    if (scalar_rdat_vld_r[27][0][12]) begin
        scalar_argdone [27][0][12] = 1;
    end
    scalar_adr[27][0][12] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][12]) begin
        scalar_argVld[27][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[27][0][12] = 1;
    end

    //------READ (scalar, global adr = 1272) comb block-----//
    //s = 30; r = 0; a = 12;
    if (scalar_rdat_vld_r[30][0][12]) begin
        scalar_argdone [30][0][12] = 1;
    end
    scalar_adr[30][0][12] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][12]) begin
        scalar_argVld[30][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[30][0][12] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 21;
    if (scalar_rdat_vld_r[12][0][21]) begin
        scalar_argdone [12][0][21] = 1;
    end
    scalar_adr[12][0][21] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][21]) begin
        scalar_argVld[12][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[12][0][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 1; a = 12;
    if (scalar_rdat_vld_r[20][1][12]) begin
        scalar_argdone [20][1][12] = 1;
    end
    scalar_adr    [20][1][12] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][12]) begin
        scalar_argVld [20][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [20][1][12] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 1; a = 17;
    if (scalar_rdat_vld_r[21][1][17]) begin
        scalar_argdone [21][1][17] = 1;
    end
    scalar_adr    [21][1][17] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][17]) begin
        scalar_argVld [21][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [21][1][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 0; a = 17;
    if (scalar_rdat_vld_r[22][0][17]) begin
        scalar_argdone [22][0][17] = 1;
    end
    scalar_adr    [22][0][17] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][17]) begin
        scalar_argVld [22][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [22][0][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 348) comb block-----//
    //s = 23; r = 0; a = 22;
    if (scalar_rdat_vld_r[23][0][22]) begin
        scalar_argdone [23][0][22] = 1;
    end
    scalar_adr    [23][0][22] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][22]) begin
        scalar_argVld [23][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [23][0][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 352) comb block-----//
    //s = 24; r = 1; a = 15;
    if (scalar_rdat_vld_r[24][1][15]) begin
        scalar_argdone [24][1][15] = 1;
    end
    scalar_adr    [24][1][15] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][15]) begin
        scalar_argVld [24][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [24][1][15] = 1;
    end

    //------READ (scalar, complete partition, global adr = 356) comb block-----//
    //s = 25; r = 0; a = 13;
    if (scalar_rdat_vld_r[25][0][13]) begin
        scalar_argdone [25][0][13] = 1;
    end
    scalar_adr    [25][0][13] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][13]) begin
        scalar_argVld [25][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [25][0][13] = 1;
    end

    //------READ (scalar, global adr = 484) comb block-----//
    //s = 25; r = 1; a = 12;
    if (scalar_rdat_vld_r[25][1][12]) begin
        scalar_argdone [25][1][12] = 1;
    end
    scalar_adr[25][1][12] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][12]) begin
        scalar_argVld[25][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[25][1][12] = 1;
    end

    //------READ (scalar, global adr = 488) comb block-----//
    //s = 26; r = 0; a = 19;
    if (scalar_rdat_vld_r[26][0][19]) begin
        scalar_argdone [26][0][19] = 1;
    end
    scalar_adr[26][0][19] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][19]) begin
        scalar_argVld[26][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[26][0][19] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 15;
    if (scalar_rdat_vld_r[15][1][15]) begin
        scalar_argdone [15][1][15] = 1;
    end
    scalar_adr[15][1][15] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][15]) begin
        scalar_argVld[15][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[15][1][15] = 1;
    end

    //------WRITE (scalar, global adr = 492) comb block-----//
    //s = 27; r = 1; a = 2;
    if (scalar_argAck [27][1][2]) begin
        scalar_argVld [27][1][2] = 0;
        scalar_argAckdone [27][1][2] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_ap_vld_r) begin
        scalar_argVld [27][1][2] = 1;
        scalar_argAckdone [27][1][2] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][1][2] = hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_r;
    scalar_adr    [27][1][2] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 496) comb block-----//
    //s = 28; r = 1; a = 4;
    if (scalar_argAck [28][1][4]) begin
        scalar_argVld [28][1][4] = 0;
        scalar_argAckdone [28][1][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_ap_vld_r) begin
        scalar_argVld [28][1][4] = 1;
        scalar_argAckdone [28][1][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][1][4] = hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_r;
    scalar_adr    [28][1][4] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 0; a = 16;
    if (scalar_rdat_vld_r[6][0][16]) begin
        scalar_argdone [6][0][16] = 1;
    end
    scalar_adr[6][0][16] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][16]) begin
        scalar_argVld[6][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[6][0][16] = 1;
    end

    //------WRITE (scalar, global adr = 536) comb block-----//
    //s = 6; r = 0; a = 6;
    if (scalar_argAck [6][0][6]) begin
        scalar_argVld [6][0][6] = 0;
        scalar_argAckdone [6][0][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_qp_y_o_ap_vld_r) begin
        scalar_argVld [6][0][6] = 1;
        scalar_argAckdone [6][0][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][6] = hls_transform_unit_ex_hls_dup3_qp_y_o_r;
    scalar_adr    [6][0][6] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 168) comb block-----//
    //s = 10; r = 1; a = 7;
    if (scalar_argAck [10][1][7]) begin
        scalar_argVld [10][1][7] = 0;
        scalar_argAckdone [10][1][7] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_log2_trafo_size_ap_vld_r) begin
        scalar_argVld [10][1][7] = 1;
        scalar_argAckdone [10][1][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][7] = hls_transform_unit_ex_hls_dup3_log2_trafo_size_r;
    scalar_adr    [10][1][7] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 56) comb block-----//
    //s = 14; r = 0; a = 22;
    if (scalar_rdat_vld_r[14][0][22]) begin
        scalar_argdone [14][0][22] = 1;
    end
    scalar_adr[14][0][22] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][22]) begin
        scalar_argVld[14][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[14][0][22] = 1;
    end

    //------WRITE (scalar, global adr = 56) comb block-----//
    //s = 14; r = 0; a = 6;
    if (scalar_argAck [14][0][6]) begin
        scalar_argVld [14][0][6] = 0;
        scalar_argAckdone [14][0][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_ap_vld_r) begin
        scalar_argVld [14][0][6] = 1;
        scalar_argAckdone [14][0][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][6] = hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_r;
    scalar_adr    [14][0][6] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 48) comb block-----//
    //s = 12; r = 1; a = 20;
    if (scalar_rdat_vld_r[12][1][20]) begin
        scalar_argdone [12][1][20] = 1;
    end
    scalar_adr[12][1][20] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][20]) begin
        scalar_argVld[12][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[12][1][20] = 1;
    end

    //------WRITE (scalar, global adr = 48) comb block-----//
    //s = 12; r = 1; a = 5;
    if (scalar_argAck [12][1][5]) begin
        scalar_argVld [12][1][5] = 0;
        scalar_argAckdone [12][1][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_scan_idx_o_ap_vld_r) begin
        scalar_argVld [12][1][5] = 1;
        scalar_argAckdone [12][1][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][5] = hls_transform_unit_ex_hls_dup3_scan_idx_o_r;
    scalar_adr    [12][1][5] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 52) comb block-----//
    //s = 13; r = 0; a = 6;
    if (scalar_argAck [13][0][6]) begin
        scalar_argVld [13][0][6] = 0;
        scalar_argAckdone [13][0][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_scan_idx_c_ap_vld_r) begin
        scalar_argVld [13][0][6] = 1;
        scalar_argAckdone [13][0][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][6] = hls_transform_unit_ex_hls_dup3_scan_idx_c_r;
    scalar_adr    [13][0][6] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1136) comb block-----//
    //s = 28; r = 0; a = 18;
    if (scalar_rdat_vld_r[28][0][18]) begin
        scalar_argdone [28][0][18] = 1;
    end
    scalar_adr[28][0][18] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][18]) begin
        scalar_argVld[28][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[28][0][18] = 1;
    end

    //------WRITE (scalar, global adr = 1136) comb block-----//
    //s = 28; r = 0; a = 5;
    if (scalar_argAck [28][0][5]) begin
        scalar_argVld [28][0][5] = 0;
        scalar_argAckdone [28][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cmdr_run_o_ap_vld_r) begin
        scalar_argVld [28][0][5] = 1;
        scalar_argAckdone [28][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][0][5] = hls_transform_unit_ex_hls_dup3_cmdr_run_o_r;
    scalar_adr    [28][0][5] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1240) comb block-----//
    //s = 22; r = 1; a = 16;
    if (scalar_rdat_vld_r[22][1][16]) begin
        scalar_argdone [22][1][16] = 1;
    end
    scalar_adr    [22][1][16] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][16]) begin
        scalar_argVld [22][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [22][1][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1244) comb block-----//
    //s = 23; r = 1; a = 21;
    if (scalar_rdat_vld_r[23][1][21]) begin
        scalar_argdone [23][1][21] = 1;
    end
    scalar_adr    [23][1][21] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][21]) begin
        scalar_argVld [23][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [23][1][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1248) comb block-----//
    //s = 24; r = 0; a = 17;
    if (scalar_rdat_vld_r[24][0][17]) begin
        scalar_argdone [24][0][17] = 1;
    end
    scalar_adr    [24][0][17] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][17]) begin
        scalar_argVld [24][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [24][0][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1144) comb block-----//
    //s = 30; r = 1; a = 12;
    if (scalar_rdat_vld_r[30][1][12]) begin
        scalar_argdone [30][1][12] = 1;
    end
    scalar_adr    [30][1][12] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][12]) begin
        scalar_argVld [30][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [30][1][12] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1148) comb block-----//
    //s = 31; r = 0; a = 18;
    if (scalar_rdat_vld_r[31][0][18]) begin
        scalar_argdone [31][0][18] = 1;
    end
    scalar_adr    [31][0][18] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][18]) begin
        scalar_argVld [31][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [31][0][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1152) comb block-----//
    //s = 0; r = 0; a = 27;
    if (scalar_rdat_vld_r[0][0][27]) begin
        scalar_argdone [0][0][27] = 1;
    end
    scalar_adr    [0][0][27] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][27]) begin
        scalar_argVld [0][0][27] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [0][0][27] = 1;
    end

    //------READ (scalar, global adr = 1140) comb block-----//
    //s = 29; r = 0; a = 8;
    if (scalar_rdat_vld_r[29][0][8]) begin
        scalar_argdone [29][0][8] = 1;
    end
    scalar_adr[29][0][8] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][8]) begin
        scalar_argVld[29][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[29][0][8] = 1;
    end

    //------WRITE (scalar, global adr = 160) comb block-----//
    //s = 8; r = 0; a = 6;
    if (scalar_argAck [8][0][6]) begin
        scalar_argVld [8][0][6] = 0;
        scalar_argAckdone [8][0][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_nPbW_ap_vld_r) begin
        scalar_argVld [8][0][6] = 1;
        scalar_argAckdone [8][0][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][6] = hls_transform_unit_ex_hls_dup3_nPbW_r;
    scalar_adr    [8][0][6] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 164) comb block-----//
    //s = 9; r = 0; a = 8;
    if (scalar_argAck [9][0][8]) begin
        scalar_argVld [9][0][8] = 0;
        scalar_argAckdone [9][0][8] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_nPbH_ap_vld_r) begin
        scalar_argVld [9][0][8] = 1;
        scalar_argAckdone [9][0][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][8] = hls_transform_unit_ex_hls_dup3_nPbH_r;
    scalar_adr    [9][0][8] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 580) comb block-----//
    //s = 17; r = 1; a = 2;
    if (scalar_argAck [17][1][2]) begin
        scalar_argVld [17][1][2] = 0;
        scalar_argAckdone [17][1][2] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_up_ap_vld_r) begin
        scalar_argVld [17][1][2] = 1;
        scalar_argAckdone [17][1][2] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][1][2] = hls_transform_unit_ex_hls_dup3_cand_up_r;
    scalar_adr    [17][1][2] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 584) comb block-----//
    //s = 18; r = 1; a = 2;
    if (scalar_argAck [18][1][2]) begin
        scalar_argVld [18][1][2] = 0;
        scalar_argAckdone [18][1][2] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_left_ap_vld_r) begin
        scalar_argVld [18][1][2] = 1;
        scalar_argAckdone [18][1][2] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][1][2] = hls_transform_unit_ex_hls_dup3_cand_left_r;
    scalar_adr    [18][1][2] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 588) comb block-----//
    //s = 19; r = 1; a = 2;
    if (scalar_argAck [19][1][2]) begin
        scalar_argVld [19][1][2] = 0;
        scalar_argAckdone [19][1][2] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_up_left_ap_vld_r) begin
        scalar_argVld [19][1][2] = 1;
        scalar_argAckdone [19][1][2] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][1][2] = hls_transform_unit_ex_hls_dup3_cand_up_left_r;
    scalar_adr    [19][1][2] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 592) comb block-----//
    //s = 20; r = 0; a = 6;
    if (scalar_argAck [20][0][6]) begin
        scalar_argVld [20][0][6] = 0;
        scalar_argAckdone [20][0][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_up_right_sap_ap_vld_r) begin
        scalar_argVld [20][0][6] = 1;
        scalar_argAckdone [20][0][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][6] = hls_transform_unit_ex_hls_dup3_cand_up_right_sap_r;
    scalar_adr    [20][0][6] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 596) comb block-----//
    //s = 21; r = 1; a = 7;
    if (scalar_argAck [21][1][7]) begin
        scalar_argVld [21][1][7] = 0;
        scalar_argAckdone [21][1][7] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_up_right_ap_vld_r) begin
        scalar_argVld [21][1][7] = 1;
        scalar_argAckdone [21][1][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][7] = hls_transform_unit_ex_hls_dup3_cand_up_right_r;
    scalar_adr    [21][1][7] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 600) comb block-----//
    //s = 22; r = 0; a = 18;
    if (scalar_rdat_vld_r[22][0][18]) begin
        scalar_argdone [22][0][18] = 1;
    end
    scalar_adr[22][0][18] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][18]) begin
        scalar_argVld[22][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[22][0][18] = 1;
    end

    //------WRITE (scalar, global adr = 600) comb block-----//
    //s = 22; r = 1; a = 7;
    if (scalar_argAck [22][1][7]) begin
        scalar_argVld [22][1][7] = 0;
        scalar_argAckdone [22][1][7] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_ap_vld_r) begin
        scalar_argVld [22][1][7] = 1;
        scalar_argAckdone [22][1][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][7] = hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_r;
    scalar_adr    [22][1][7] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1488) comb block-----//
    //s = 20; r = 1; a = 6;
    if (scalar_argAck [20][1][6]) begin
        scalar_argVld [20][1][6] = 0;
        scalar_argAckdone [20][1][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_up_c_ap_vld_r) begin
        scalar_argVld [20][1][6] = 1;
        scalar_argAckdone [20][1][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][6] = hls_transform_unit_ex_hls_dup3_cand_up_c_r;
    scalar_adr    [20][1][6] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1492) comb block-----//
    //s = 21; r = 0; a = 8;
    if (scalar_argAck [21][0][8]) begin
        scalar_argVld [21][0][8] = 0;
        scalar_argAckdone [21][0][8] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_left_c_ap_vld_r) begin
        scalar_argVld [21][0][8] = 1;
        scalar_argAckdone [21][0][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][8] = hls_transform_unit_ex_hls_dup3_cand_left_c_r;
    scalar_adr    [21][0][8] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1496) comb block-----//
    //s = 22; r = 0; a = 8;
    if (scalar_argAck [22][0][8]) begin
        scalar_argVld [22][0][8] = 0;
        scalar_argAckdone [22][0][8] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_up_left_c_ap_vld_r) begin
        scalar_argVld [22][0][8] = 1;
        scalar_argAckdone [22][0][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][8] = hls_transform_unit_ex_hls_dup3_cand_up_left_c_r;
    scalar_adr    [22][0][8] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1500) comb block-----//
    //s = 23; r = 0; a = 6;
    if (scalar_argAck [23][0][6]) begin
        scalar_argVld [23][0][6] = 0;
        scalar_argAckdone [23][0][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_ap_vld_r) begin
        scalar_argVld [23][0][6] = 1;
        scalar_argAckdone [23][0][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][6] = hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_r;
    scalar_adr    [23][0][6] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1504) comb block-----//
    //s = 24; r = 1; a = 4;
    if (scalar_argAck [24][1][4]) begin
        scalar_argVld [24][1][4] = 0;
        scalar_argAckdone [24][1][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_up_right_c_ap_vld_r) begin
        scalar_argVld [24][1][4] = 1;
        scalar_argAckdone [24][1][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][1][4] = hls_transform_unit_ex_hls_dup3_cand_up_right_c_r;
    scalar_adr    [24][1][4] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1508) comb block-----//
    //s = 25; r = 0; a = 14;
    if (scalar_rdat_vld_r[25][0][14]) begin
        scalar_argdone [25][0][14] = 1;
    end
    scalar_adr[25][0][14] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][14]) begin
        scalar_argVld[25][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[25][0][14] = 1;
    end

    //------WRITE (scalar, global adr = 1508) comb block-----//
    //s = 25; r = 1; a = 4;
    if (scalar_argAck [25][1][4]) begin
        scalar_argVld [25][1][4] = 0;
        scalar_argAckdone [25][1][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_ap_vld_r) begin
        scalar_argVld [25][1][4] = 1;
        scalar_argAckdone [25][1][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][1][4] = hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_r;
    scalar_adr    [25][1][4] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 18;
    if (scalar_rdat_vld_r[26][1][18]) begin
        scalar_argdone [26][1][18] = 1;
    end
    scalar_adr[26][1][18] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][18]) begin
        scalar_argVld[26][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[26][1][18] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 0; a = 23;
    if (scalar_rdat_vld_r[23][0][23]) begin
        scalar_argdone [23][0][23] = 1;
    end
    scalar_adr[23][0][23] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][23]) begin
        scalar_argVld[23][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[23][0][23] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 16;
    if (scalar_rdat_vld_r[24][1][16]) begin
        scalar_argdone [24][1][16] = 1;
    end
    scalar_adr[24][1][16] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][16]) begin
        scalar_argVld[24][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[24][1][16] = 1;
    end

    //------READ (scalar, global adr = 612) comb block-----//
    //s = 25; r = 1; a = 13;
    if (scalar_rdat_vld_r[25][1][13]) begin
        scalar_argdone [25][1][13] = 1;
    end
    scalar_adr[25][1][13] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][13]) begin
        scalar_argVld[25][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[25][1][13] = 1;
    end

    //------READ (scalar, global adr = 616) comb block-----//
    //s = 26; r = 0; a = 20;
    if (scalar_rdat_vld_r[26][0][20]) begin
        scalar_argdone [26][0][20] = 1;
    end
    scalar_adr[26][0][20] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][20]) begin
        scalar_argVld[26][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[26][0][20] = 1;
    end

    //------READ (scalar, global adr = 620) comb block-----//
    //s = 27; r = 1; a = 11;
    if (scalar_rdat_vld_r[27][1][11]) begin
        scalar_argdone [27][1][11] = 1;
    end
    scalar_adr[27][1][11] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][11]) begin
        scalar_argVld[27][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[27][1][11] = 1;
    end

    //------READ (scalar, global adr = 624) comb block-----//
    //s = 28; r = 1; a = 18;
    if (scalar_rdat_vld_r[28][1][18]) begin
        scalar_argdone [28][1][18] = 1;
    end
    scalar_adr[28][1][18] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][18]) begin
        scalar_argVld[28][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[28][1][18] = 1;
    end

    //------READ (scalar, global adr = 472) comb block-----//
    //s = 22; r = 1; a = 17;
    if (scalar_rdat_vld_r[22][1][17]) begin
        scalar_argdone [22][1][17] = 1;
    end
    scalar_adr[22][1][17] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][17]) begin
        scalar_argVld[22][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[22][1][17] = 1;
    end

    //------WRITE (scalar, global adr = 472) comb block-----//
    //s = 22; r = 1; a = 8;
    if (scalar_argAck [22][1][8]) begin
        scalar_argVld [22][1][8] = 0;
        scalar_argAckdone [22][1][8] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r) begin
        scalar_argVld [22][1][8] = 1;
        scalar_argAckdone [22][1][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][8] = hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_r;
    scalar_adr    [22][1][8] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 22;
    if (scalar_rdat_vld_r[23][1][22]) begin
        scalar_argdone [23][1][22] = 1;
    end
    scalar_adr[23][1][22] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][22]) begin
        scalar_argVld[23][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[23][1][22] = 1;
    end

    //------WRITE (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 6;
    if (scalar_argAck [23][1][6]) begin
        scalar_argVld [23][1][6] = 0;
        scalar_argAckdone [23][1][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_ap_vld_r) begin
        scalar_argVld [23][1][6] = 1;
        scalar_argAckdone [23][1][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][1][6] = hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_r;
    scalar_adr    [23][1][6] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 468) comb block-----//
    //s = 21; r = 1; a = 8;
    if (scalar_argAck [21][1][8]) begin
        scalar_argVld [21][1][8] = 0;
        scalar_argAckdone [21][1][8] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_ap_vld_r) begin
        scalar_argVld [21][1][8] = 1;
        scalar_argAckdone [21][1][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][8] = hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_r;
    scalar_adr    [21][1][8] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 500) comb block-----//
    //s = 29; r = 0; a = 2;
    if (scalar_argAck [29][0][2]) begin
        scalar_argVld [29][0][2] = 0;
        scalar_argAckdone [29][0][2] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_tu_cross_pf_ap_vld_r) begin
        scalar_argVld [29][0][2] = 1;
        scalar_argAckdone [29][0][2] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][2] = hls_transform_unit_ex_hls_dup3_tu_cross_pf_r;
    scalar_adr    [29][0][2] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 532) comb block-----//
    //s = 5; r = 0; a = 15;
    if (scalar_rdat_vld_r[5][0][15]) begin
        scalar_argdone [5][0][15] = 1;
    end
    scalar_adr[5][0][15] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][15]) begin
        scalar_argVld[5][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[5][0][15] = 1;
    end

    //------WRITE (scalar, global adr = 532) comb block-----//
    //s = 5; r = 1; a = 6;
    if (scalar_argAck [5][1][6]) begin
        scalar_argVld [5][1][6] = 0;
        scalar_argAckdone [5][1][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_first_qp_group_o_ap_vld_r) begin
        scalar_argVld [5][1][6] = 1;
        scalar_argAckdone [5][1][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][6] = hls_transform_unit_ex_hls_dup3_first_qp_group_o_r;
    scalar_adr    [5][1][6] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 328) comb block-----//
    //s = 18; r = 0; a = 10;
    if (scalar_rdat_vld_r[18][0][10]) begin
        scalar_argdone [18][0][10] = 1;
    end
    scalar_adr[18][0][10] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][10]) begin
        scalar_argVld[18][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[18][0][10] = 1;
    end

    //------READ (scalar, global adr = 448) comb block-----//
    //s = 16; r = 0; a = 14;
    if (scalar_rdat_vld_r[16][0][14]) begin
        scalar_argdone [16][0][14] = 1;
    end
    scalar_adr[16][0][14] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][14]) begin
        scalar_argVld[16][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[16][0][14] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 1; a = 16;
    if (scalar_rdat_vld_r[11][1][16]) begin
        scalar_argdone [11][1][16] = 1;
    end
    scalar_adr[11][1][16] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][16]) begin
        scalar_argVld[11][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[11][1][16] = 1;
    end

    //------READ (scalar, global adr = 540) comb block-----//
    //s = 7; r = 0; a = 16;
    if (scalar_rdat_vld_r[7][0][16]) begin
        scalar_argdone [7][0][16] = 1;
    end
    scalar_adr[7][0][16] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][16]) begin
        scalar_argVld[7][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[7][0][16] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 1; a = 23;
    if (scalar_rdat_vld_r[13][1][23]) begin
        scalar_argdone [13][1][23] = 1;
    end
    scalar_adr[13][1][23] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][23]) begin
        scalar_argVld[13][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[13][1][23] = 1;
    end

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 0; a = 19;
    if (scalar_rdat_vld_r[28][0][19]) begin
        scalar_argdone [28][0][19] = 1;
    end
    scalar_adr[28][0][19] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][19]) begin
        scalar_argVld[28][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[28][0][19] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 0; a = 17;
    if (scalar_rdat_vld_r[2][0][17]) begin
        scalar_argdone [2][0][17] = 1;
    end
    scalar_adr[2][0][17] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][17]) begin
        scalar_argVld[2][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[2][0][17] = 1;
    end

    //------READ (scalar, global adr = 460) comb block-----//
    //s = 19; r = 0; a = 9;
    if (scalar_rdat_vld_r[19][0][9]) begin
        scalar_argdone [19][0][9] = 1;
    end
    scalar_adr[19][0][9] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][9]) begin
        scalar_argVld[19][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[19][0][9] = 1;
    end

    if (ap_arb_ret[hls_transform_unit_ex_hls_dup3] & ~ap_arb_ret_r[hls_transform_unit_ex_hls_dup3]) begin
        ap_arb_ret_running[hls_transform_unit_ex_hls_dup3] = 1;
        hls_transform_unit_ex_hls_dup3_ready = 0;
    end

    scalar_argAckdone_all[hls_transform_unit_ex_hls_dup3] = scalar_argAckdone[27][1][2] &
                                                scalar_argAckdone[28][1][4] &
                                                scalar_argAckdone[6][0][6] &
                                                scalar_argAckdone[10][1][7] &
                                                scalar_argAckdone[14][0][6] &
                                                scalar_argAckdone[12][1][5] &
                                                scalar_argAckdone[13][0][6] &
                                                scalar_argAckdone[28][0][5] &
                                                scalar_argAckdone[8][0][6] &
                                                scalar_argAckdone[9][0][8] &
                                                scalar_argAckdone[17][1][2] &
                                                scalar_argAckdone[18][1][2] &
                                                scalar_argAckdone[19][1][2] &
                                                scalar_argAckdone[20][0][6] &
                                                scalar_argAckdone[21][1][7] &
                                                scalar_argAckdone[22][1][7] &
                                                scalar_argAckdone[20][1][6] &
                                                scalar_argAckdone[21][0][8] &
                                                scalar_argAckdone[22][0][8] &
                                                scalar_argAckdone[23][0][6] &
                                                scalar_argAckdone[24][1][4] &
                                                scalar_argAckdone[25][1][4] &
                                                scalar_argAckdone[22][1][8] &
                                                scalar_argAckdone[23][1][6] &
                                                scalar_argAckdone[21][1][8] &
                                                scalar_argAckdone[29][0][2] &
                                                scalar_argAckdone[5][1][6];
    if (ap_arb_ret_running[hls_transform_unit_ex_hls_dup3] & scalar_argAckdone_all[hls_transform_unit_ex_hls_dup3] &~ ap_arb_reload_running_r[hls_transform_unit_ex_hls_dup3]) begin
        ap_arb_reload[hls_transform_unit_ex_hls_dup3] = 1;
        ap_arb_reload_running[hls_transform_unit_ex_hls_dup3] = 1;
    end

    if (ap_arb_start[hls_transform_unit_ex_hls_dup3] &~ ap_arb_start_r[hls_transform_unit_ex_hls_dup3]) begin
        ap_arb_start_running[hls_transform_unit_ex_hls_dup3] = 1;
    end

    if (ap_arb_start_running[hls_transform_unit_ex_hls_dup3] & ~scalar_writing_20& ~scalar_writing_16& ~scalar_writing_560& ~scalar_writing_484& ~scalar_writing_488& ~scalar_writing_572& ~scalar_writing_536& ~scalar_writing_56& ~scalar_writing_48& ~scalar_writing_1136& ~scalar_writing_600& ~scalar_writing_1508& ~scalar_writing_604& ~scalar_writing_608& ~scalar_writing_612& ~scalar_writing_616& ~scalar_writing_620& ~scalar_writing_624& ~scalar_writing_472& ~scalar_writing_476& ~scalar_writing_532& ~scalar_writing_540) begin
        ap_arb_start_running[hls_transform_unit_ex_hls_dup3] = 0;
        ap_arb_reload[hls_transform_unit_ex_hls_dup3] = 1;
    end

    scalar_argdone_all[hls_transform_unit_ex_hls_dup3] = scalar_argdone[5][1][13] &
                                                                scalar_argdone[4][1][8] &
                                                                scalar_argdone[27][1][10] &
                                                                scalar_argdone[1][1][16] &
                                                                scalar_argdone[28][1][17] &
                                                                scalar_argdone[29][1][6] &
                                                                scalar_argdone[27][0][12] &
                                                                scalar_argdone[30][0][12] &
                                                                scalar_argdone[12][0][21] &
                                                                scalar_argdone[20][1][12] &
                                                                scalar_argdone[21][1][17] &
                                                                scalar_argdone[22][0][17] &
                                                                scalar_argdone[23][0][22] &
                                                                scalar_argdone[24][1][15] &
                                                                scalar_argdone[25][0][13] &
                                                                scalar_argdone[25][1][12] &
                                                                scalar_argdone[26][0][19] &
                                                                scalar_argdone[15][1][15] &
                                                                scalar_argdone[6][0][16] &
                                                                scalar_argdone[14][0][22] &
                                                                scalar_argdone[12][1][20] &
                                                                scalar_argdone[28][0][18] &
                                                                scalar_argdone[22][1][16] &
                                                                scalar_argdone[23][1][21] &
                                                                scalar_argdone[24][0][17] &
                                                                scalar_argdone[30][1][12] &
                                                                scalar_argdone[31][0][18] &
                                                                scalar_argdone[0][0][27] &
                                                                scalar_argdone[29][0][8] &
                                                                scalar_argdone[22][0][18] &
                                                                scalar_argdone[25][0][14] &
                                                                scalar_argdone[26][1][18] &
                                                                scalar_argdone[23][0][23] &
                                                                scalar_argdone[24][1][16] &
                                                                scalar_argdone[25][1][13] &
                                                                scalar_argdone[26][0][20] &
                                                                scalar_argdone[27][1][11] &
                                                                scalar_argdone[28][1][18] &
                                                                scalar_argdone[22][1][17] &
                                                                scalar_argdone[23][1][22] &
                                                                scalar_argdone[5][0][15] &
                                                                scalar_argdone[18][0][10] &
                                                                scalar_argdone[16][0][14] &
                                                                scalar_argdone[11][1][16] &
                                                                scalar_argdone[7][0][16] &
                                                                scalar_argdone[13][1][23] &
                                                                scalar_argdone[28][0][19] &
                                                                scalar_argdone[2][0][17] &
                                                                scalar_argdone[19][0][9];

    if (scalar_argdone_all_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argdone[5][1][13] = 0;
        scalar_argdone[4][1][8] = 0;
        scalar_argdone[27][1][10] = 0;
        scalar_argdone[1][1][16] = 0;
        scalar_argdone[28][1][17] = 0;
        scalar_argdone[29][1][6] = 0;
        scalar_argdone[27][0][12] = 0;
        scalar_argdone[30][0][12] = 0;
        scalar_argdone[12][0][21] = 0;
        scalar_argdone[20][1][12] = 0;
        scalar_argdone[21][1][17] = 0;
        scalar_argdone[22][0][17] = 0;
        scalar_argdone[23][0][22] = 0;
        scalar_argdone[24][1][15] = 0;
        scalar_argdone[25][0][13] = 0;
        scalar_argdone[25][1][12] = 0;
        scalar_argdone[26][0][19] = 0;
        scalar_argdone[15][1][15] = 0;
        scalar_argdone[6][0][16] = 0;
        scalar_argdone[14][0][22] = 0;
        scalar_argdone[12][1][20] = 0;
        scalar_argdone[28][0][18] = 0;
        scalar_argdone[22][1][16] = 0;
        scalar_argdone[23][1][21] = 0;
        scalar_argdone[24][0][17] = 0;
        scalar_argdone[30][1][12] = 0;
        scalar_argdone[31][0][18] = 0;
        scalar_argdone[0][0][27] = 0;
        scalar_argdone[29][0][8] = 0;
        scalar_argdone[22][0][18] = 0;
        scalar_argdone[25][0][14] = 0;
        scalar_argdone[26][1][18] = 0;
        scalar_argdone[23][0][23] = 0;
        scalar_argdone[24][1][16] = 0;
        scalar_argdone[25][1][13] = 0;
        scalar_argdone[26][0][20] = 0;
        scalar_argdone[27][1][11] = 0;
        scalar_argdone[28][1][18] = 0;
        scalar_argdone[22][1][17] = 0;
        scalar_argdone[23][1][22] = 0;
        scalar_argdone[5][0][15] = 0;
        scalar_argdone[18][0][10] = 0;
        scalar_argdone[16][0][14] = 0;
        scalar_argdone[11][1][16] = 0;
        scalar_argdone[7][0][16] = 0;
        scalar_argdone[13][1][23] = 0;
        scalar_argdone[28][0][19] = 0;
        scalar_argdone[2][0][17] = 0;
        scalar_argdone[19][0][9] = 0;

        if (ap_arb_start_r[hls_transform_unit_ex_hls_dup3] & ~ap_running_r[hls_transform_unit_ex_hls_dup3]) begin
            ap_start[hls_transform_unit_ex_hls_dup3] = 1;
            ap_running[hls_transform_unit_ex_hls_dup3] = 1;
        end
        else if (ap_arb_ret_running_r[hls_transform_unit_ex_hls_dup3]) begin
            ap_arb_ret_running[hls_transform_unit_ex_hls_dup3] = 0;
            ap_arb_reload_running[hls_transform_unit_ex_hls_dup3] = 0;
            hls_transform_unit_ex_hls_dup3_ready = 1;
        end
    end

    if (ap_start_r[hls_transform_unit_ex_hls_dup3] & ap_ready_r[hls_transform_unit_ex_hls_dup3]) begin
        ap_start[hls_transform_unit_ex_hls_dup3] = 0;
    end

    if (ap_done_r[hls_transform_unit_ex_hls_dup3]) begin
        ap_running[hls_transform_unit_ex_hls_dup3] = 0;
    end
`endif
    //============================================================
    //hls_transform_tree_hls       (f = 10)
    //============================================================
`ifdef enable_connect_hls_transform_tree_hls
    //------WRITE (scalar, global adr = 168) comb block-----//
    //s = 10; r = 0; a = 4;
    if (scalar_argAck [10][0][4]) begin
        scalar_argVld [10][0][4] = 0;
        scalar_argAckdone [10][0][4] = 1;
    end
    if (hls_transform_tree_hls_log2_trafo_size_ap_vld_r) begin
        scalar_argVld [10][0][4] = 1;
        scalar_argAckdone [10][0][4] = 0;
        ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][4] = hls_transform_tree_hls_log2_trafo_size_r;
    scalar_adr    [10][0][4] = {ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 12) comb block-----//
    //s = 3; r = 0; a = 2;
    if (scalar_argAck [3][0][2]) begin
        scalar_argVld [3][0][2] = 0;
        scalar_argAckdone [3][0][2] = 1;
    end
    if (hls_transform_tree_hls_split_transform_flag_ap_vld_r) begin
        scalar_argVld [3][0][2] = 1;
        scalar_argAckdone [3][0][2] = 0;
        ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][0][2] = hls_transform_tree_hls_split_transform_flag_r;
    scalar_adr    [3][0][2] = {ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 16) comb block-----//
    //s = 4; r = 0; a = 2;
    if (scalar_argAck [4][0][2]) begin
        scalar_argVld [4][0][2] = 0;
        scalar_argAckdone [4][0][2] = 1;
    end
    if (hls_transform_tree_hls_cbf_data_ap_vld_r) begin
        scalar_argVld [4][0][2] = 1;
        scalar_argAckdone [4][0][2] = 0;
        ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][0][2] = hls_transform_tree_hls_cbf_data_r;
    scalar_adr    [4][0][2] = {ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1160) comb block-----//
    //s = 2; r = 1; a = 12;
    if (scalar_rdat_vld_r[2][1][12]) begin
        scalar_argdone [2][1][12] = 1;
    end
    scalar_adr[2][1][12] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][12]) begin
        scalar_argVld[2][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[2][1][12] = 1;
    end

    //------READ (scalar, global adr = 440) comb block-----//
    //s = 14; r = 1; a = 13;
    if (scalar_rdat_vld_r[14][1][13]) begin
        scalar_argdone [14][1][13] = 1;
    end
    scalar_adr[14][1][13] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][13]) begin
        scalar_argVld[14][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[14][1][13] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 0; a = 13;
    if (scalar_rdat_vld_r[15][0][13]) begin
        scalar_argdone [15][0][13] = 1;
    end
    scalar_adr[15][0][13] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][13]) begin
        scalar_argVld[15][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[15][0][13] = 1;
    end

    //------WRITE (scalar, global adr = 480) comb block-----//
    //s = 24; r = 0; a = 1;
    if (scalar_argAck [24][0][1]) begin
        scalar_argVld [24][0][1] = 0;
        scalar_argAckdone [24][0][1] = 1;
    end
    if (hls_transform_tree_hls_tu_chroma_mode_c_ap_vld_r) begin
        scalar_argVld [24][0][1] = 1;
        scalar_argAckdone [24][0][1] = 0;
        ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][0][1] = hls_transform_tree_hls_tu_chroma_mode_c_r;
    scalar_adr    [24][0][1] = {ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 484) comb block-----//
    //s = 25; r = 0; a = 1;
    if (scalar_argAck [25][0][1]) begin
        scalar_argVld [25][0][1] = 0;
        scalar_argAckdone [25][0][1] = 1;
    end
    if (hls_transform_tree_hls_tu_intra_pred_mode_ap_vld_r) begin
        scalar_argVld [25][0][1] = 1;
        scalar_argAckdone [25][0][1] = 0;
        ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][0][1] = hls_transform_tree_hls_tu_intra_pred_mode_r;
    scalar_adr    [25][0][1] = {ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 488) comb block-----//
    //s = 26; r = 0; a = 1;
    if (scalar_argAck [26][0][1]) begin
        scalar_argVld [26][0][1] = 0;
        scalar_argAckdone [26][0][1] = 1;
    end
    if (hls_transform_tree_hls_tu_intra_pred_mode_c_ap_vld_r) begin
        scalar_argVld [26][0][1] = 1;
        scalar_argAckdone [26][0][1] = 0;
        ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][0][1] = hls_transform_tree_hls_tu_intra_pred_mode_c_r;
    scalar_adr    [26][0][1] = {ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 508) comb block-----//
    //s = 31; r = 1; a = 5;
    if (scalar_rdat_vld_r[31][1][5]) begin
        scalar_argdone [31][1][5] = 1;
    end
    scalar_adr    [31][1][5] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][5]) begin
        scalar_argVld [31][1][5] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [31][1][5] = 1;
    end

    //------READ (scalar, complete partition, global adr = 509) comb block-----//
    //s = 31; r = 0; a = 7;
    if (scalar_rdat_vld_r[31][0][7]) begin
        scalar_argdone [31][0][7] = 1;
    end
    scalar_adr    [31][0][7] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][7]) begin
        scalar_argVld [31][0][7] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [31][0][7] = 1;
    end

    //------READ (scalar, complete partition, global adr = 510) comb block-----//
    //s = 31; r = 1; a = 6;
    if (scalar_rdat_vld_r[31][1][6]) begin
        scalar_argdone [31][1][6] = 1;
    end
    scalar_adr    [31][1][6] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][6]) begin
        scalar_argVld [31][1][6] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [31][1][6] = 1;
    end

    //------READ (scalar, complete partition, global adr = 511) comb block-----//
    //s = 31; r = 0; a = 8;
    if (scalar_rdat_vld_r[31][0][8]) begin
        scalar_argdone [31][0][8] = 1;
    end
    scalar_adr    [31][0][8] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][8]) begin
        scalar_argVld [31][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [31][0][8] = 1;
    end

    //------READ (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 1; a = 16;
    if (scalar_rdat_vld_r[0][1][16]) begin
        scalar_argdone [0][1][16] = 1;
    end
    scalar_adr    [0][1][16] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][16]) begin
        scalar_argVld [0][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [0][1][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 0; a = 18;
    if (scalar_rdat_vld_r[0][0][18]) begin
        scalar_argdone [0][0][18] = 1;
    end
    scalar_adr    [0][0][18] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][18]) begin
        scalar_argVld [0][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [0][0][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 1; a = 17;
    if (scalar_rdat_vld_r[0][1][17]) begin
        scalar_argdone [0][1][17] = 1;
    end
    scalar_adr    [0][1][17] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][17]) begin
        scalar_argVld [0][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [0][1][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 0; a = 19;
    if (scalar_rdat_vld_r[0][0][19]) begin
        scalar_argdone [0][0][19] = 1;
    end
    scalar_adr    [0][0][19] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][19]) begin
        scalar_argVld [0][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [0][0][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 516) comb block-----//
    //s = 1; r = 0; a = 6;
    if (scalar_rdat_vld_r[1][0][6]) begin
        scalar_argdone [1][0][6] = 1;
    end
    scalar_adr    [1][0][6] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][6]) begin
        scalar_argVld [1][0][6] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [1][0][6] = 1;
    end

    //------READ (scalar, complete partition, global adr = 517) comb block-----//
    //s = 1; r = 1; a = 5;
    if (scalar_rdat_vld_r[1][1][5]) begin
        scalar_argdone [1][1][5] = 1;
    end
    scalar_adr    [1][1][5] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][5]) begin
        scalar_argVld [1][1][5] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [1][1][5] = 1;
    end

    //------READ (scalar, complete partition, global adr = 518) comb block-----//
    //s = 1; r = 0; a = 7;
    if (scalar_rdat_vld_r[1][0][7]) begin
        scalar_argdone [1][0][7] = 1;
    end
    scalar_adr    [1][0][7] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][7]) begin
        scalar_argVld [1][0][7] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [1][0][7] = 1;
    end

    //------READ (scalar, complete partition, global adr = 519) comb block-----//
    //s = 1; r = 1; a = 6;
    if (scalar_rdat_vld_r[1][1][6]) begin
        scalar_argdone [1][1][6] = 1;
    end
    scalar_adr    [1][1][6] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][6]) begin
        scalar_argVld [1][1][6] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [1][1][6] = 1;
    end

    //------READ (scalar, global adr = 568) comb block-----//
    //s = 14; r = 0; a = 15;
    if (scalar_rdat_vld_r[14][0][15]) begin
        scalar_argdone [14][0][15] = 1;
    end
    scalar_adr[14][0][15] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][15]) begin
        scalar_argVld[14][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[14][0][15] = 1;
    end

    //------READ (scalar, global adr = 364) comb block-----//
    //s = 27; r = 0; a = 5;
    if (scalar_rdat_vld_r[27][0][5]) begin
        scalar_argdone [27][0][5] = 1;
    end
    scalar_adr[27][0][5] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][5]) begin
        scalar_argVld[27][0][5] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[27][0][5] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 0; a = 7;
    if (scalar_rdat_vld_r[30][0][7]) begin
        scalar_argdone [30][0][7] = 1;
    end
    scalar_adr[30][0][7] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][7]) begin
        scalar_argVld[30][0][7] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[30][0][7] = 1;
    end

    //------READ (scalar, global adr = 576) comb block-----//
    //s = 16; r = 1; a = 10;
    if (scalar_rdat_vld_r[16][1][10]) begin
        scalar_argdone [16][1][10] = 1;
    end
    scalar_adr[16][1][10] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][10]) begin
        scalar_argVld[16][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[16][1][10] = 1;
    end

    //------READ (scalar, global adr = 380) comb block-----//
    //s = 31; r = 1; a = 7;
    if (scalar_rdat_vld_r[31][1][7]) begin
        scalar_argdone [31][1][7] = 1;
    end
    scalar_adr[31][1][7] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][7]) begin
        scalar_argVld[31][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[31][1][7] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 14;
    if (scalar_rdat_vld_r[12][0][14]) begin
        scalar_argdone [12][0][14] = 1;
    end
    scalar_adr[12][0][14] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][14]) begin
        scalar_argVld[12][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[12][0][14] = 1;
    end

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 0; a = 19;
    if (scalar_rdat_vld_r[13][0][19]) begin
        scalar_argdone [13][0][19] = 1;
    end
    scalar_adr[13][0][19] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][19]) begin
        scalar_argVld[13][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[13][0][19] = 1;
    end

    //------READ (scalar, global adr = 324) comb block-----//
    //s = 17; r = 1; a = 8;
    if (scalar_rdat_vld_r[17][1][8]) begin
        scalar_argdone [17][1][8] = 1;
    end
    scalar_adr[17][1][8] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][8]) begin
        scalar_argVld[17][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[17][1][8] = 1;
    end

    //------READ (scalar, global adr = 328) comb block-----//
    //s = 18; r = 1; a = 6;
    if (scalar_rdat_vld_r[18][1][6]) begin
        scalar_argdone [18][1][6] = 1;
    end
    scalar_adr[18][1][6] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][6]) begin
        scalar_argVld[18][1][6] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[18][1][6] = 1;
    end

    //------READ (scalar, global adr = 20) comb block-----//
    //s = 5; r = 1; a = 8;
    if (scalar_rdat_vld_r[5][1][8]) begin
        scalar_argdone [5][1][8] = 1;
    end
    scalar_adr[5][1][8] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][8]) begin
        scalar_argVld[5][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[5][1][8] = 1;
    end

    //------WRITE (scalar, global adr = 20) comb block-----//
    //s = 5; r = 0; a = 3;
    if (scalar_argAck [5][0][3]) begin
        scalar_argVld [5][0][3] = 0;
        scalar_argAckdone [5][0][3] = 1;
    end
    if (hls_transform_tree_hls_cbf_luma_o_ap_vld_r) begin
        scalar_argVld [5][0][3] = 1;
        scalar_argAckdone [5][0][3] = 0;
        ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][3] = hls_transform_tree_hls_cbf_luma_o_r;
    scalar_adr    [5][0][3] = {ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1328) comb block-----//
    //s = 12; r = 1; a = 13;
    if (scalar_rdat_vld_r[12][1][13]) begin
        scalar_argdone [12][1][13] = 1;
    end
    scalar_adr[12][1][13] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][13]) begin
        scalar_argVld[12][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[12][1][13] = 1;
    end

    //------READ (scalar, global adr = 1332) comb block-----//
    //s = 13; r = 1; a = 18;
    if (scalar_rdat_vld_r[13][1][18]) begin
        scalar_argdone [13][1][18] = 1;
    end
    scalar_adr[13][1][18] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][18]) begin
        scalar_argVld[13][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[13][1][18] = 1;
    end

    //------READ (scalar, global adr = 1336) comb block-----//
    //s = 14; r = 1; a = 14;
    if (scalar_rdat_vld_r[14][1][14]) begin
        scalar_argdone [14][1][14] = 1;
    end
    scalar_adr[14][1][14] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][14]) begin
        scalar_argVld[14][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[14][1][14] = 1;
    end

    //------READ (scalar, global adr = 1236) comb block-----//
    //s = 21; r = 0; a = 15;
    if (scalar_rdat_vld_r[21][0][15]) begin
        scalar_argdone [21][0][15] = 1;
    end
    scalar_adr[21][0][15] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][15]) begin
        scalar_argVld[21][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[21][0][15] = 1;
    end

    //------READ (scalar, global adr = 388) comb block-----//
    //s = 1; r = 0; a = 8;
    if (scalar_rdat_vld_r[1][0][8]) begin
        scalar_argdone [1][0][8] = 1;
    end
    scalar_adr[1][0][8] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][8]) begin
        scalar_argVld[1][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[1][0][8] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 11;
    if (scalar_rdat_vld_r[26][1][11]) begin
        scalar_argdone [26][1][11] = 1;
    end
    scalar_adr[26][1][11] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][11]) begin
        scalar_argVld[26][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[26][1][11] = 1;
    end

    if (ap_arb_ret[hls_transform_tree_hls] & ~ap_arb_ret_r[hls_transform_tree_hls]) begin
        ap_arb_ret_running[hls_transform_tree_hls] = 1;
        hls_transform_tree_hls_ready = 0;
    end

    scalar_argAckdone_all[hls_transform_tree_hls] = scalar_argAckdone[10][0][4] &
                                                scalar_argAckdone[3][0][2] &
                                                scalar_argAckdone[4][0][2] &
                                                scalar_argAckdone[24][0][1] &
                                                scalar_argAckdone[25][0][1] &
                                                scalar_argAckdone[26][0][1] &
                                                scalar_argAckdone[5][0][3];
    if (ap_arb_ret_running[hls_transform_tree_hls] & scalar_argAckdone_all[hls_transform_tree_hls] &~ ap_arb_reload_running_r[hls_transform_tree_hls]) begin
        ap_arb_reload[hls_transform_tree_hls] = 1;
        ap_arb_reload_running[hls_transform_tree_hls] = 1;
    end

    if (ap_arb_start[hls_transform_tree_hls] &~ ap_arb_start_r[hls_transform_tree_hls]) begin
        ap_arb_start_running[hls_transform_tree_hls] = 1;
    end

    if (ap_arb_start_running[hls_transform_tree_hls] & ~scalar_writing_572& ~scalar_writing_508& ~scalar_writing_509& ~scalar_writing_510& ~scalar_writing_511& ~scalar_writing_512& ~scalar_writing_513& ~scalar_writing_514& ~scalar_writing_515& ~scalar_writing_516& ~scalar_writing_517& ~scalar_writing_518& ~scalar_writing_519& ~scalar_writing_568& ~scalar_writing_576& ~scalar_writing_560& ~scalar_writing_564& ~scalar_writing_20) begin
        ap_arb_start_running[hls_transform_tree_hls] = 0;
        ap_arb_reload[hls_transform_tree_hls] = 1;
    end

    scalar_argdone_all[hls_transform_tree_hls] = scalar_argdone[2][1][12] &
                                                                scalar_argdone[14][1][13] &
                                                                scalar_argdone[15][0][13] &
                                                                scalar_argdone[31][1][5] &
                                                                scalar_argdone[31][0][7] &
                                                                scalar_argdone[31][1][6] &
                                                                scalar_argdone[31][0][8] &
                                                                scalar_argdone[0][1][16] &
                                                                scalar_argdone[0][0][18] &
                                                                scalar_argdone[0][1][17] &
                                                                scalar_argdone[0][0][19] &
                                                                scalar_argdone[1][0][6] &
                                                                scalar_argdone[1][1][5] &
                                                                scalar_argdone[1][0][7] &
                                                                scalar_argdone[1][1][6] &
                                                                scalar_argdone[14][0][15] &
                                                                scalar_argdone[27][0][5] &
                                                                scalar_argdone[30][0][7] &
                                                                scalar_argdone[16][1][10] &
                                                                scalar_argdone[31][1][7] &
                                                                scalar_argdone[12][0][14] &
                                                                scalar_argdone[13][0][19] &
                                                                scalar_argdone[17][1][8] &
                                                                scalar_argdone[18][1][6] &
                                                                scalar_argdone[5][1][8] &
                                                                scalar_argdone[12][1][13] &
                                                                scalar_argdone[13][1][18] &
                                                                scalar_argdone[14][1][14] &
                                                                scalar_argdone[21][0][15] &
                                                                scalar_argdone[1][0][8] &
                                                                scalar_argdone[26][1][11];

    if (scalar_argdone_all_r[hls_transform_tree_hls]) begin
        scalar_argdone[2][1][12] = 0;
        scalar_argdone[14][1][13] = 0;
        scalar_argdone[15][0][13] = 0;
        scalar_argdone[31][1][5] = 0;
        scalar_argdone[31][0][7] = 0;
        scalar_argdone[31][1][6] = 0;
        scalar_argdone[31][0][8] = 0;
        scalar_argdone[0][1][16] = 0;
        scalar_argdone[0][0][18] = 0;
        scalar_argdone[0][1][17] = 0;
        scalar_argdone[0][0][19] = 0;
        scalar_argdone[1][0][6] = 0;
        scalar_argdone[1][1][5] = 0;
        scalar_argdone[1][0][7] = 0;
        scalar_argdone[1][1][6] = 0;
        scalar_argdone[14][0][15] = 0;
        scalar_argdone[27][0][5] = 0;
        scalar_argdone[30][0][7] = 0;
        scalar_argdone[16][1][10] = 0;
        scalar_argdone[31][1][7] = 0;
        scalar_argdone[12][0][14] = 0;
        scalar_argdone[13][0][19] = 0;
        scalar_argdone[17][1][8] = 0;
        scalar_argdone[18][1][6] = 0;
        scalar_argdone[5][1][8] = 0;
        scalar_argdone[12][1][13] = 0;
        scalar_argdone[13][1][18] = 0;
        scalar_argdone[14][1][14] = 0;
        scalar_argdone[21][0][15] = 0;
        scalar_argdone[1][0][8] = 0;
        scalar_argdone[26][1][11] = 0;

        if (ap_arb_start_r[hls_transform_tree_hls] & ~ap_running_r[hls_transform_tree_hls]) begin
            ap_start[hls_transform_tree_hls] = 1;
            ap_running[hls_transform_tree_hls] = 1;
        end
        else if (ap_arb_ret_running_r[hls_transform_tree_hls]) begin
            ap_arb_ret_running[hls_transform_tree_hls] = 0;
            ap_arb_reload_running[hls_transform_tree_hls] = 0;
            hls_transform_tree_hls_ready = 1;
        end
    end

    if (ap_start_r[hls_transform_tree_hls] & ap_ready_r[hls_transform_tree_hls]) begin
        ap_start[hls_transform_tree_hls] = 0;
    end

    if (ap_done_r[hls_transform_tree_hls]) begin
        ap_running[hls_transform_tree_hls] = 0;
    end
`endif
    //============================================================
    //hls_transform_tree_hls_dup1       (f = 11)
    //============================================================
`ifdef enable_connect_hls_transform_tree_hls_dup1
    //------WRITE (scalar, global adr = 168) comb block-----//
    //s = 10; r = 1; a = 4;
    if (scalar_argAck [10][1][4]) begin
        scalar_argVld [10][1][4] = 0;
        scalar_argAckdone [10][1][4] = 1;
    end
    if (hls_transform_tree_hls_dup1_log2_trafo_size_ap_vld_r) begin
        scalar_argVld [10][1][4] = 1;
        scalar_argAckdone [10][1][4] = 0;
        ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][4] = hls_transform_tree_hls_dup1_log2_trafo_size_r;
    scalar_adr    [10][1][4] = {ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 12) comb block-----//
    //s = 3; r = 1; a = 2;
    if (scalar_argAck [3][1][2]) begin
        scalar_argVld [3][1][2] = 0;
        scalar_argAckdone [3][1][2] = 1;
    end
    if (hls_transform_tree_hls_dup1_split_transform_flag_ap_vld_r) begin
        scalar_argVld [3][1][2] = 1;
        scalar_argAckdone [3][1][2] = 0;
        ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][1][2] = hls_transform_tree_hls_dup1_split_transform_flag_r;
    scalar_adr    [3][1][2] = {ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 16) comb block-----//
    //s = 4; r = 1; a = 2;
    if (scalar_argAck [4][1][2]) begin
        scalar_argVld [4][1][2] = 0;
        scalar_argAckdone [4][1][2] = 1;
    end
    if (hls_transform_tree_hls_dup1_cbf_data_ap_vld_r) begin
        scalar_argVld [4][1][2] = 1;
        scalar_argAckdone [4][1][2] = 0;
        ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][1][2] = hls_transform_tree_hls_dup1_cbf_data_r;
    scalar_adr    [4][1][2] = {ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1160) comb block-----//
    //s = 2; r = 0; a = 14;
    if (scalar_rdat_vld_r[2][0][14]) begin
        scalar_argdone [2][0][14] = 1;
    end
    scalar_adr[2][0][14] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][14]) begin
        scalar_argVld[2][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[2][0][14] = 1;
    end

    //------READ (scalar, global adr = 440) comb block-----//
    //s = 14; r = 0; a = 16;
    if (scalar_rdat_vld_r[14][0][16]) begin
        scalar_argdone [14][0][16] = 1;
    end
    scalar_adr[14][0][16] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][16]) begin
        scalar_argVld[14][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[14][0][16] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 12;
    if (scalar_rdat_vld_r[15][1][12]) begin
        scalar_argdone [15][1][12] = 1;
    end
    scalar_adr[15][1][12] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][12]) begin
        scalar_argVld[15][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[15][1][12] = 1;
    end

    //------WRITE (scalar, global adr = 480) comb block-----//
    //s = 24; r = 1; a = 1;
    if (scalar_argAck [24][1][1]) begin
        scalar_argVld [24][1][1] = 0;
        scalar_argAckdone [24][1][1] = 1;
    end
    if (hls_transform_tree_hls_dup1_tu_chroma_mode_c_ap_vld_r) begin
        scalar_argVld [24][1][1] = 1;
        scalar_argAckdone [24][1][1] = 0;
        ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][1][1] = hls_transform_tree_hls_dup1_tu_chroma_mode_c_r;
    scalar_adr    [24][1][1] = {ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 484) comb block-----//
    //s = 25; r = 1; a = 1;
    if (scalar_argAck [25][1][1]) begin
        scalar_argVld [25][1][1] = 0;
        scalar_argAckdone [25][1][1] = 1;
    end
    if (hls_transform_tree_hls_dup1_tu_intra_pred_mode_ap_vld_r) begin
        scalar_argVld [25][1][1] = 1;
        scalar_argAckdone [25][1][1] = 0;
        ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][1][1] = hls_transform_tree_hls_dup1_tu_intra_pred_mode_r;
    scalar_adr    [25][1][1] = {ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 488) comb block-----//
    //s = 26; r = 1; a = 1;
    if (scalar_argAck [26][1][1]) begin
        scalar_argVld [26][1][1] = 0;
        scalar_argAckdone [26][1][1] = 1;
    end
    if (hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_ap_vld_r) begin
        scalar_argVld [26][1][1] = 1;
        scalar_argAckdone [26][1][1] = 0;
        ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][1][1] = hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_r;
    scalar_adr    [26][1][1] = {ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 508) comb block-----//
    //s = 31; r = 0; a = 9;
    if (scalar_rdat_vld_r[31][0][9]) begin
        scalar_argdone [31][0][9] = 1;
    end
    scalar_adr    [31][0][9] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][9]) begin
        scalar_argVld [31][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [31][0][9] = 1;
    end

    //------READ (scalar, complete partition, global adr = 509) comb block-----//
    //s = 31; r = 1; a = 8;
    if (scalar_rdat_vld_r[31][1][8]) begin
        scalar_argdone [31][1][8] = 1;
    end
    scalar_adr    [31][1][8] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][8]) begin
        scalar_argVld [31][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [31][1][8] = 1;
    end

    //------READ (scalar, complete partition, global adr = 510) comb block-----//
    //s = 31; r = 0; a = 10;
    if (scalar_rdat_vld_r[31][0][10]) begin
        scalar_argdone [31][0][10] = 1;
    end
    scalar_adr    [31][0][10] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][10]) begin
        scalar_argVld [31][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [31][0][10] = 1;
    end

    //------READ (scalar, complete partition, global adr = 511) comb block-----//
    //s = 31; r = 1; a = 9;
    if (scalar_rdat_vld_r[31][1][9]) begin
        scalar_argdone [31][1][9] = 1;
    end
    scalar_adr    [31][1][9] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][9]) begin
        scalar_argVld [31][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [31][1][9] = 1;
    end

    //------READ (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 1; a = 18;
    if (scalar_rdat_vld_r[0][1][18]) begin
        scalar_argdone [0][1][18] = 1;
    end
    scalar_adr    [0][1][18] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][18]) begin
        scalar_argVld [0][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [0][1][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 0; a = 20;
    if (scalar_rdat_vld_r[0][0][20]) begin
        scalar_argdone [0][0][20] = 1;
    end
    scalar_adr    [0][0][20] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][20]) begin
        scalar_argVld [0][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [0][0][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 1; a = 19;
    if (scalar_rdat_vld_r[0][1][19]) begin
        scalar_argdone [0][1][19] = 1;
    end
    scalar_adr    [0][1][19] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][19]) begin
        scalar_argVld [0][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [0][1][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 0; a = 21;
    if (scalar_rdat_vld_r[0][0][21]) begin
        scalar_argdone [0][0][21] = 1;
    end
    scalar_adr    [0][0][21] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][21]) begin
        scalar_argVld [0][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [0][0][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 516) comb block-----//
    //s = 1; r = 1; a = 7;
    if (scalar_rdat_vld_r[1][1][7]) begin
        scalar_argdone [1][1][7] = 1;
    end
    scalar_adr    [1][1][7] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][7]) begin
        scalar_argVld [1][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [1][1][7] = 1;
    end

    //------READ (scalar, complete partition, global adr = 517) comb block-----//
    //s = 1; r = 0; a = 9;
    if (scalar_rdat_vld_r[1][0][9]) begin
        scalar_argdone [1][0][9] = 1;
    end
    scalar_adr    [1][0][9] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][9]) begin
        scalar_argVld [1][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [1][0][9] = 1;
    end

    //------READ (scalar, complete partition, global adr = 518) comb block-----//
    //s = 1; r = 1; a = 8;
    if (scalar_rdat_vld_r[1][1][8]) begin
        scalar_argdone [1][1][8] = 1;
    end
    scalar_adr    [1][1][8] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][8]) begin
        scalar_argVld [1][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [1][1][8] = 1;
    end

    //------READ (scalar, complete partition, global adr = 519) comb block-----//
    //s = 1; r = 0; a = 10;
    if (scalar_rdat_vld_r[1][0][10]) begin
        scalar_argdone [1][0][10] = 1;
    end
    scalar_adr    [1][0][10] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][10]) begin
        scalar_argVld [1][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [1][0][10] = 1;
    end

    //------READ (scalar, global adr = 568) comb block-----//
    //s = 14; r = 1; a = 15;
    if (scalar_rdat_vld_r[14][1][15]) begin
        scalar_argdone [14][1][15] = 1;
    end
    scalar_adr[14][1][15] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][15]) begin
        scalar_argVld[14][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[14][1][15] = 1;
    end

    //------READ (scalar, global adr = 364) comb block-----//
    //s = 27; r = 1; a = 4;
    if (scalar_rdat_vld_r[27][1][4]) begin
        scalar_argdone [27][1][4] = 1;
    end
    scalar_adr[27][1][4] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][4]) begin
        scalar_argVld[27][1][4] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[27][1][4] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 1; a = 7;
    if (scalar_rdat_vld_r[30][1][7]) begin
        scalar_argdone [30][1][7] = 1;
    end
    scalar_adr[30][1][7] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][7]) begin
        scalar_argVld[30][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[30][1][7] = 1;
    end

    //------READ (scalar, global adr = 576) comb block-----//
    //s = 16; r = 0; a = 11;
    if (scalar_rdat_vld_r[16][0][11]) begin
        scalar_argdone [16][0][11] = 1;
    end
    scalar_adr[16][0][11] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][11]) begin
        scalar_argVld[16][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[16][0][11] = 1;
    end

    //------READ (scalar, global adr = 380) comb block-----//
    //s = 31; r = 0; a = 11;
    if (scalar_rdat_vld_r[31][0][11]) begin
        scalar_argdone [31][0][11] = 1;
    end
    scalar_adr[31][0][11] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][11]) begin
        scalar_argVld[31][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[31][0][11] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 15;
    if (scalar_rdat_vld_r[12][0][15]) begin
        scalar_argdone [12][0][15] = 1;
    end
    scalar_adr[12][0][15] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][15]) begin
        scalar_argVld[12][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[12][0][15] = 1;
    end

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 0; a = 20;
    if (scalar_rdat_vld_r[13][0][20]) begin
        scalar_argdone [13][0][20] = 1;
    end
    scalar_adr[13][0][20] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][20]) begin
        scalar_argVld[13][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[13][0][20] = 1;
    end

    //------READ (scalar, global adr = 324) comb block-----//
    //s = 17; r = 0; a = 9;
    if (scalar_rdat_vld_r[17][0][9]) begin
        scalar_argdone [17][0][9] = 1;
    end
    scalar_adr[17][0][9] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][9]) begin
        scalar_argVld[17][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[17][0][9] = 1;
    end

    //------READ (scalar, global adr = 328) comb block-----//
    //s = 18; r = 0; a = 7;
    if (scalar_rdat_vld_r[18][0][7]) begin
        scalar_argdone [18][0][7] = 1;
    end
    scalar_adr[18][0][7] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][7]) begin
        scalar_argVld[18][0][7] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[18][0][7] = 1;
    end

    //------READ (scalar, global adr = 20) comb block-----//
    //s = 5; r = 0; a = 10;
    if (scalar_rdat_vld_r[5][0][10]) begin
        scalar_argdone [5][0][10] = 1;
    end
    scalar_adr[5][0][10] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][10]) begin
        scalar_argVld[5][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[5][0][10] = 1;
    end

    //------WRITE (scalar, global adr = 20) comb block-----//
    //s = 5; r = 1; a = 3;
    if (scalar_argAck [5][1][3]) begin
        scalar_argVld [5][1][3] = 0;
        scalar_argAckdone [5][1][3] = 1;
    end
    if (hls_transform_tree_hls_dup1_cbf_luma_o_ap_vld_r) begin
        scalar_argVld [5][1][3] = 1;
        scalar_argAckdone [5][1][3] = 0;
        ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][3] = hls_transform_tree_hls_dup1_cbf_luma_o_r;
    scalar_adr    [5][1][3] = {ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1328) comb block-----//
    //s = 12; r = 1; a = 14;
    if (scalar_rdat_vld_r[12][1][14]) begin
        scalar_argdone [12][1][14] = 1;
    end
    scalar_adr[12][1][14] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][14]) begin
        scalar_argVld[12][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[12][1][14] = 1;
    end

    //------READ (scalar, global adr = 1332) comb block-----//
    //s = 13; r = 1; a = 19;
    if (scalar_rdat_vld_r[13][1][19]) begin
        scalar_argdone [13][1][19] = 1;
    end
    scalar_adr[13][1][19] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][19]) begin
        scalar_argVld[13][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[13][1][19] = 1;
    end

    //------READ (scalar, global adr = 1336) comb block-----//
    //s = 14; r = 0; a = 17;
    if (scalar_rdat_vld_r[14][0][17]) begin
        scalar_argdone [14][0][17] = 1;
    end
    scalar_adr[14][0][17] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][17]) begin
        scalar_argVld[14][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[14][0][17] = 1;
    end

    //------READ (scalar, global adr = 1236) comb block-----//
    //s = 21; r = 1; a = 14;
    if (scalar_rdat_vld_r[21][1][14]) begin
        scalar_argdone [21][1][14] = 1;
    end
    scalar_adr[21][1][14] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][14]) begin
        scalar_argVld[21][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[21][1][14] = 1;
    end

    //------READ (scalar, global adr = 388) comb block-----//
    //s = 1; r = 1; a = 9;
    if (scalar_rdat_vld_r[1][1][9]) begin
        scalar_argdone [1][1][9] = 1;
    end
    scalar_adr[1][1][9] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][9]) begin
        scalar_argVld[1][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[1][1][9] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 13;
    if (scalar_rdat_vld_r[26][0][13]) begin
        scalar_argdone [26][0][13] = 1;
    end
    scalar_adr[26][0][13] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][13]) begin
        scalar_argVld[26][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[26][0][13] = 1;
    end

    if (ap_arb_ret[hls_transform_tree_hls_dup1] & ~ap_arb_ret_r[hls_transform_tree_hls_dup1]) begin
        ap_arb_ret_running[hls_transform_tree_hls_dup1] = 1;
        hls_transform_tree_hls_dup1_ready = 0;
    end

    scalar_argAckdone_all[hls_transform_tree_hls_dup1] = scalar_argAckdone[10][1][4] &
                                                scalar_argAckdone[3][1][2] &
                                                scalar_argAckdone[4][1][2] &
                                                scalar_argAckdone[24][1][1] &
                                                scalar_argAckdone[25][1][1] &
                                                scalar_argAckdone[26][1][1] &
                                                scalar_argAckdone[5][1][3];
    if (ap_arb_ret_running[hls_transform_tree_hls_dup1] & scalar_argAckdone_all[hls_transform_tree_hls_dup1] &~ ap_arb_reload_running_r[hls_transform_tree_hls_dup1]) begin
        ap_arb_reload[hls_transform_tree_hls_dup1] = 1;
        ap_arb_reload_running[hls_transform_tree_hls_dup1] = 1;
    end

    if (ap_arb_start[hls_transform_tree_hls_dup1] &~ ap_arb_start_r[hls_transform_tree_hls_dup1]) begin
        ap_arb_start_running[hls_transform_tree_hls_dup1] = 1;
    end

    if (ap_arb_start_running[hls_transform_tree_hls_dup1] & ~scalar_writing_572& ~scalar_writing_508& ~scalar_writing_509& ~scalar_writing_510& ~scalar_writing_511& ~scalar_writing_512& ~scalar_writing_513& ~scalar_writing_514& ~scalar_writing_515& ~scalar_writing_516& ~scalar_writing_517& ~scalar_writing_518& ~scalar_writing_519& ~scalar_writing_568& ~scalar_writing_576& ~scalar_writing_560& ~scalar_writing_564& ~scalar_writing_20) begin
        ap_arb_start_running[hls_transform_tree_hls_dup1] = 0;
        ap_arb_reload[hls_transform_tree_hls_dup1] = 1;
    end

    scalar_argdone_all[hls_transform_tree_hls_dup1] = scalar_argdone[2][0][14] &
                                                                scalar_argdone[14][0][16] &
                                                                scalar_argdone[15][1][12] &
                                                                scalar_argdone[31][0][9] &
                                                                scalar_argdone[31][1][8] &
                                                                scalar_argdone[31][0][10] &
                                                                scalar_argdone[31][1][9] &
                                                                scalar_argdone[0][1][18] &
                                                                scalar_argdone[0][0][20] &
                                                                scalar_argdone[0][1][19] &
                                                                scalar_argdone[0][0][21] &
                                                                scalar_argdone[1][1][7] &
                                                                scalar_argdone[1][0][9] &
                                                                scalar_argdone[1][1][8] &
                                                                scalar_argdone[1][0][10] &
                                                                scalar_argdone[14][1][15] &
                                                                scalar_argdone[27][1][4] &
                                                                scalar_argdone[30][1][7] &
                                                                scalar_argdone[16][0][11] &
                                                                scalar_argdone[31][0][11] &
                                                                scalar_argdone[12][0][15] &
                                                                scalar_argdone[13][0][20] &
                                                                scalar_argdone[17][0][9] &
                                                                scalar_argdone[18][0][7] &
                                                                scalar_argdone[5][0][10] &
                                                                scalar_argdone[12][1][14] &
                                                                scalar_argdone[13][1][19] &
                                                                scalar_argdone[14][0][17] &
                                                                scalar_argdone[21][1][14] &
                                                                scalar_argdone[1][1][9] &
                                                                scalar_argdone[26][0][13];

    if (scalar_argdone_all_r[hls_transform_tree_hls_dup1]) begin
        scalar_argdone[2][0][14] = 0;
        scalar_argdone[14][0][16] = 0;
        scalar_argdone[15][1][12] = 0;
        scalar_argdone[31][0][9] = 0;
        scalar_argdone[31][1][8] = 0;
        scalar_argdone[31][0][10] = 0;
        scalar_argdone[31][1][9] = 0;
        scalar_argdone[0][1][18] = 0;
        scalar_argdone[0][0][20] = 0;
        scalar_argdone[0][1][19] = 0;
        scalar_argdone[0][0][21] = 0;
        scalar_argdone[1][1][7] = 0;
        scalar_argdone[1][0][9] = 0;
        scalar_argdone[1][1][8] = 0;
        scalar_argdone[1][0][10] = 0;
        scalar_argdone[14][1][15] = 0;
        scalar_argdone[27][1][4] = 0;
        scalar_argdone[30][1][7] = 0;
        scalar_argdone[16][0][11] = 0;
        scalar_argdone[31][0][11] = 0;
        scalar_argdone[12][0][15] = 0;
        scalar_argdone[13][0][20] = 0;
        scalar_argdone[17][0][9] = 0;
        scalar_argdone[18][0][7] = 0;
        scalar_argdone[5][0][10] = 0;
        scalar_argdone[12][1][14] = 0;
        scalar_argdone[13][1][19] = 0;
        scalar_argdone[14][0][17] = 0;
        scalar_argdone[21][1][14] = 0;
        scalar_argdone[1][1][9] = 0;
        scalar_argdone[26][0][13] = 0;

        if (ap_arb_start_r[hls_transform_tree_hls_dup1] & ~ap_running_r[hls_transform_tree_hls_dup1]) begin
            ap_start[hls_transform_tree_hls_dup1] = 1;
            ap_running[hls_transform_tree_hls_dup1] = 1;
        end
        else if (ap_arb_ret_running_r[hls_transform_tree_hls_dup1]) begin
            ap_arb_ret_running[hls_transform_tree_hls_dup1] = 0;
            ap_arb_reload_running[hls_transform_tree_hls_dup1] = 0;
            hls_transform_tree_hls_dup1_ready = 1;
        end
    end

    if (ap_start_r[hls_transform_tree_hls_dup1] & ap_ready_r[hls_transform_tree_hls_dup1]) begin
        ap_start[hls_transform_tree_hls_dup1] = 0;
    end

    if (ap_done_r[hls_transform_tree_hls_dup1]) begin
        ap_running[hls_transform_tree_hls_dup1] = 0;
    end
`endif
    //============================================================
    //hls_transform_tree_hls_dup2       (f = 12)
    //============================================================
`ifdef enable_connect_hls_transform_tree_hls_dup2
    //------WRITE (scalar, global adr = 168) comb block-----//
    //s = 10; r = 0; a = 5;
    if (scalar_argAck [10][0][5]) begin
        scalar_argVld [10][0][5] = 0;
        scalar_argAckdone [10][0][5] = 1;
    end
    if (hls_transform_tree_hls_dup2_log2_trafo_size_ap_vld_r) begin
        scalar_argVld [10][0][5] = 1;
        scalar_argAckdone [10][0][5] = 0;
        ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][5] = hls_transform_tree_hls_dup2_log2_trafo_size_r;
    scalar_adr    [10][0][5] = {ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 12) comb block-----//
    //s = 3; r = 0; a = 3;
    if (scalar_argAck [3][0][3]) begin
        scalar_argVld [3][0][3] = 0;
        scalar_argAckdone [3][0][3] = 1;
    end
    if (hls_transform_tree_hls_dup2_split_transform_flag_ap_vld_r) begin
        scalar_argVld [3][0][3] = 1;
        scalar_argAckdone [3][0][3] = 0;
        ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][0][3] = hls_transform_tree_hls_dup2_split_transform_flag_r;
    scalar_adr    [3][0][3] = {ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 16) comb block-----//
    //s = 4; r = 0; a = 3;
    if (scalar_argAck [4][0][3]) begin
        scalar_argVld [4][0][3] = 0;
        scalar_argAckdone [4][0][3] = 1;
    end
    if (hls_transform_tree_hls_dup2_cbf_data_ap_vld_r) begin
        scalar_argVld [4][0][3] = 1;
        scalar_argAckdone [4][0][3] = 0;
        ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][0][3] = hls_transform_tree_hls_dup2_cbf_data_r;
    scalar_adr    [4][0][3] = {ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1160) comb block-----//
    //s = 2; r = 1; a = 13;
    if (scalar_rdat_vld_r[2][1][13]) begin
        scalar_argdone [2][1][13] = 1;
    end
    scalar_adr[2][1][13] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][13]) begin
        scalar_argVld[2][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[2][1][13] = 1;
    end

    //------READ (scalar, global adr = 440) comb block-----//
    //s = 14; r = 1; a = 16;
    if (scalar_rdat_vld_r[14][1][16]) begin
        scalar_argdone [14][1][16] = 1;
    end
    scalar_adr[14][1][16] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][16]) begin
        scalar_argVld[14][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[14][1][16] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 0; a = 14;
    if (scalar_rdat_vld_r[15][0][14]) begin
        scalar_argdone [15][0][14] = 1;
    end
    scalar_adr[15][0][14] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][14]) begin
        scalar_argVld[15][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[15][0][14] = 1;
    end

    //------WRITE (scalar, global adr = 480) comb block-----//
    //s = 24; r = 0; a = 2;
    if (scalar_argAck [24][0][2]) begin
        scalar_argVld [24][0][2] = 0;
        scalar_argAckdone [24][0][2] = 1;
    end
    if (hls_transform_tree_hls_dup2_tu_chroma_mode_c_ap_vld_r) begin
        scalar_argVld [24][0][2] = 1;
        scalar_argAckdone [24][0][2] = 0;
        ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][0][2] = hls_transform_tree_hls_dup2_tu_chroma_mode_c_r;
    scalar_adr    [24][0][2] = {ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 484) comb block-----//
    //s = 25; r = 0; a = 2;
    if (scalar_argAck [25][0][2]) begin
        scalar_argVld [25][0][2] = 0;
        scalar_argAckdone [25][0][2] = 1;
    end
    if (hls_transform_tree_hls_dup2_tu_intra_pred_mode_ap_vld_r) begin
        scalar_argVld [25][0][2] = 1;
        scalar_argAckdone [25][0][2] = 0;
        ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][0][2] = hls_transform_tree_hls_dup2_tu_intra_pred_mode_r;
    scalar_adr    [25][0][2] = {ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 488) comb block-----//
    //s = 26; r = 0; a = 2;
    if (scalar_argAck [26][0][2]) begin
        scalar_argVld [26][0][2] = 0;
        scalar_argAckdone [26][0][2] = 1;
    end
    if (hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_ap_vld_r) begin
        scalar_argVld [26][0][2] = 1;
        scalar_argAckdone [26][0][2] = 0;
        ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][0][2] = hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_r;
    scalar_adr    [26][0][2] = {ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 508) comb block-----//
    //s = 31; r = 1; a = 10;
    if (scalar_rdat_vld_r[31][1][10]) begin
        scalar_argdone [31][1][10] = 1;
    end
    scalar_adr    [31][1][10] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][10]) begin
        scalar_argVld [31][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [31][1][10] = 1;
    end

    //------READ (scalar, complete partition, global adr = 509) comb block-----//
    //s = 31; r = 0; a = 12;
    if (scalar_rdat_vld_r[31][0][12]) begin
        scalar_argdone [31][0][12] = 1;
    end
    scalar_adr    [31][0][12] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][12]) begin
        scalar_argVld [31][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [31][0][12] = 1;
    end

    //------READ (scalar, complete partition, global adr = 510) comb block-----//
    //s = 31; r = 1; a = 11;
    if (scalar_rdat_vld_r[31][1][11]) begin
        scalar_argdone [31][1][11] = 1;
    end
    scalar_adr    [31][1][11] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][11]) begin
        scalar_argVld [31][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [31][1][11] = 1;
    end

    //------READ (scalar, complete partition, global adr = 511) comb block-----//
    //s = 31; r = 0; a = 13;
    if (scalar_rdat_vld_r[31][0][13]) begin
        scalar_argdone [31][0][13] = 1;
    end
    scalar_adr    [31][0][13] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][13]) begin
        scalar_argVld [31][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [31][0][13] = 1;
    end

    //------READ (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 1; a = 20;
    if (scalar_rdat_vld_r[0][1][20]) begin
        scalar_argdone [0][1][20] = 1;
    end
    scalar_adr    [0][1][20] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][20]) begin
        scalar_argVld [0][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [0][1][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 0; a = 22;
    if (scalar_rdat_vld_r[0][0][22]) begin
        scalar_argdone [0][0][22] = 1;
    end
    scalar_adr    [0][0][22] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][22]) begin
        scalar_argVld [0][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [0][0][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 1; a = 21;
    if (scalar_rdat_vld_r[0][1][21]) begin
        scalar_argdone [0][1][21] = 1;
    end
    scalar_adr    [0][1][21] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][21]) begin
        scalar_argVld [0][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [0][1][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 0; a = 23;
    if (scalar_rdat_vld_r[0][0][23]) begin
        scalar_argdone [0][0][23] = 1;
    end
    scalar_adr    [0][0][23] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][23]) begin
        scalar_argVld [0][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [0][0][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 516) comb block-----//
    //s = 1; r = 0; a = 11;
    if (scalar_rdat_vld_r[1][0][11]) begin
        scalar_argdone [1][0][11] = 1;
    end
    scalar_adr    [1][0][11] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][11]) begin
        scalar_argVld [1][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [1][0][11] = 1;
    end

    //------READ (scalar, complete partition, global adr = 517) comb block-----//
    //s = 1; r = 1; a = 10;
    if (scalar_rdat_vld_r[1][1][10]) begin
        scalar_argdone [1][1][10] = 1;
    end
    scalar_adr    [1][1][10] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][10]) begin
        scalar_argVld [1][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [1][1][10] = 1;
    end

    //------READ (scalar, complete partition, global adr = 518) comb block-----//
    //s = 1; r = 0; a = 12;
    if (scalar_rdat_vld_r[1][0][12]) begin
        scalar_argdone [1][0][12] = 1;
    end
    scalar_adr    [1][0][12] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][12]) begin
        scalar_argVld [1][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [1][0][12] = 1;
    end

    //------READ (scalar, complete partition, global adr = 519) comb block-----//
    //s = 1; r = 1; a = 11;
    if (scalar_rdat_vld_r[1][1][11]) begin
        scalar_argdone [1][1][11] = 1;
    end
    scalar_adr    [1][1][11] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][11]) begin
        scalar_argVld [1][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [1][1][11] = 1;
    end

    //------READ (scalar, global adr = 568) comb block-----//
    //s = 14; r = 0; a = 18;
    if (scalar_rdat_vld_r[14][0][18]) begin
        scalar_argdone [14][0][18] = 1;
    end
    scalar_adr[14][0][18] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][18]) begin
        scalar_argVld[14][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[14][0][18] = 1;
    end

    //------READ (scalar, global adr = 364) comb block-----//
    //s = 27; r = 0; a = 6;
    if (scalar_rdat_vld_r[27][0][6]) begin
        scalar_argdone [27][0][6] = 1;
    end
    scalar_adr[27][0][6] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][6]) begin
        scalar_argVld[27][0][6] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[27][0][6] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 0; a = 8;
    if (scalar_rdat_vld_r[30][0][8]) begin
        scalar_argdone [30][0][8] = 1;
    end
    scalar_adr[30][0][8] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][8]) begin
        scalar_argVld[30][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[30][0][8] = 1;
    end

    //------READ (scalar, global adr = 576) comb block-----//
    //s = 16; r = 1; a = 11;
    if (scalar_rdat_vld_r[16][1][11]) begin
        scalar_argdone [16][1][11] = 1;
    end
    scalar_adr[16][1][11] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][11]) begin
        scalar_argVld[16][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[16][1][11] = 1;
    end

    //------READ (scalar, global adr = 380) comb block-----//
    //s = 31; r = 1; a = 12;
    if (scalar_rdat_vld_r[31][1][12]) begin
        scalar_argdone [31][1][12] = 1;
    end
    scalar_adr[31][1][12] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][12]) begin
        scalar_argVld[31][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[31][1][12] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 16;
    if (scalar_rdat_vld_r[12][0][16]) begin
        scalar_argdone [12][0][16] = 1;
    end
    scalar_adr[12][0][16] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][16]) begin
        scalar_argVld[12][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[12][0][16] = 1;
    end

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 0; a = 21;
    if (scalar_rdat_vld_r[13][0][21]) begin
        scalar_argdone [13][0][21] = 1;
    end
    scalar_adr[13][0][21] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][21]) begin
        scalar_argVld[13][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[13][0][21] = 1;
    end

    //------READ (scalar, global adr = 324) comb block-----//
    //s = 17; r = 1; a = 9;
    if (scalar_rdat_vld_r[17][1][9]) begin
        scalar_argdone [17][1][9] = 1;
    end
    scalar_adr[17][1][9] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][9]) begin
        scalar_argVld[17][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[17][1][9] = 1;
    end

    //------READ (scalar, global adr = 328) comb block-----//
    //s = 18; r = 1; a = 7;
    if (scalar_rdat_vld_r[18][1][7]) begin
        scalar_argdone [18][1][7] = 1;
    end
    scalar_adr[18][1][7] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][7]) begin
        scalar_argVld[18][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[18][1][7] = 1;
    end

    //------READ (scalar, global adr = 20) comb block-----//
    //s = 5; r = 1; a = 9;
    if (scalar_rdat_vld_r[5][1][9]) begin
        scalar_argdone [5][1][9] = 1;
    end
    scalar_adr[5][1][9] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][9]) begin
        scalar_argVld[5][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[5][1][9] = 1;
    end

    //------WRITE (scalar, global adr = 20) comb block-----//
    //s = 5; r = 0; a = 4;
    if (scalar_argAck [5][0][4]) begin
        scalar_argVld [5][0][4] = 0;
        scalar_argAckdone [5][0][4] = 1;
    end
    if (hls_transform_tree_hls_dup2_cbf_luma_o_ap_vld_r) begin
        scalar_argVld [5][0][4] = 1;
        scalar_argAckdone [5][0][4] = 0;
        ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][4] = hls_transform_tree_hls_dup2_cbf_luma_o_r;
    scalar_adr    [5][0][4] = {ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1328) comb block-----//
    //s = 12; r = 1; a = 15;
    if (scalar_rdat_vld_r[12][1][15]) begin
        scalar_argdone [12][1][15] = 1;
    end
    scalar_adr[12][1][15] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][15]) begin
        scalar_argVld[12][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[12][1][15] = 1;
    end

    //------READ (scalar, global adr = 1332) comb block-----//
    //s = 13; r = 1; a = 20;
    if (scalar_rdat_vld_r[13][1][20]) begin
        scalar_argdone [13][1][20] = 1;
    end
    scalar_adr[13][1][20] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][20]) begin
        scalar_argVld[13][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[13][1][20] = 1;
    end

    //------READ (scalar, global adr = 1336) comb block-----//
    //s = 14; r = 1; a = 17;
    if (scalar_rdat_vld_r[14][1][17]) begin
        scalar_argdone [14][1][17] = 1;
    end
    scalar_adr[14][1][17] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][17]) begin
        scalar_argVld[14][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[14][1][17] = 1;
    end

    //------READ (scalar, global adr = 1236) comb block-----//
    //s = 21; r = 0; a = 16;
    if (scalar_rdat_vld_r[21][0][16]) begin
        scalar_argdone [21][0][16] = 1;
    end
    scalar_adr[21][0][16] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][16]) begin
        scalar_argVld[21][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[21][0][16] = 1;
    end

    //------READ (scalar, global adr = 388) comb block-----//
    //s = 1; r = 0; a = 13;
    if (scalar_rdat_vld_r[1][0][13]) begin
        scalar_argdone [1][0][13] = 1;
    end
    scalar_adr[1][0][13] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][13]) begin
        scalar_argVld[1][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[1][0][13] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 12;
    if (scalar_rdat_vld_r[26][1][12]) begin
        scalar_argdone [26][1][12] = 1;
    end
    scalar_adr[26][1][12] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][12]) begin
        scalar_argVld[26][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[26][1][12] = 1;
    end

    if (ap_arb_ret[hls_transform_tree_hls_dup2] & ~ap_arb_ret_r[hls_transform_tree_hls_dup2]) begin
        ap_arb_ret_running[hls_transform_tree_hls_dup2] = 1;
        hls_transform_tree_hls_dup2_ready = 0;
    end

    scalar_argAckdone_all[hls_transform_tree_hls_dup2] = scalar_argAckdone[10][0][5] &
                                                scalar_argAckdone[3][0][3] &
                                                scalar_argAckdone[4][0][3] &
                                                scalar_argAckdone[24][0][2] &
                                                scalar_argAckdone[25][0][2] &
                                                scalar_argAckdone[26][0][2] &
                                                scalar_argAckdone[5][0][4];
    if (ap_arb_ret_running[hls_transform_tree_hls_dup2] & scalar_argAckdone_all[hls_transform_tree_hls_dup2] &~ ap_arb_reload_running_r[hls_transform_tree_hls_dup2]) begin
        ap_arb_reload[hls_transform_tree_hls_dup2] = 1;
        ap_arb_reload_running[hls_transform_tree_hls_dup2] = 1;
    end

    if (ap_arb_start[hls_transform_tree_hls_dup2] &~ ap_arb_start_r[hls_transform_tree_hls_dup2]) begin
        ap_arb_start_running[hls_transform_tree_hls_dup2] = 1;
    end

    if (ap_arb_start_running[hls_transform_tree_hls_dup2] & ~scalar_writing_572& ~scalar_writing_508& ~scalar_writing_509& ~scalar_writing_510& ~scalar_writing_511& ~scalar_writing_512& ~scalar_writing_513& ~scalar_writing_514& ~scalar_writing_515& ~scalar_writing_516& ~scalar_writing_517& ~scalar_writing_518& ~scalar_writing_519& ~scalar_writing_568& ~scalar_writing_576& ~scalar_writing_560& ~scalar_writing_564& ~scalar_writing_20) begin
        ap_arb_start_running[hls_transform_tree_hls_dup2] = 0;
        ap_arb_reload[hls_transform_tree_hls_dup2] = 1;
    end

    scalar_argdone_all[hls_transform_tree_hls_dup2] = scalar_argdone[2][1][13] &
                                                                scalar_argdone[14][1][16] &
                                                                scalar_argdone[15][0][14] &
                                                                scalar_argdone[31][1][10] &
                                                                scalar_argdone[31][0][12] &
                                                                scalar_argdone[31][1][11] &
                                                                scalar_argdone[31][0][13] &
                                                                scalar_argdone[0][1][20] &
                                                                scalar_argdone[0][0][22] &
                                                                scalar_argdone[0][1][21] &
                                                                scalar_argdone[0][0][23] &
                                                                scalar_argdone[1][0][11] &
                                                                scalar_argdone[1][1][10] &
                                                                scalar_argdone[1][0][12] &
                                                                scalar_argdone[1][1][11] &
                                                                scalar_argdone[14][0][18] &
                                                                scalar_argdone[27][0][6] &
                                                                scalar_argdone[30][0][8] &
                                                                scalar_argdone[16][1][11] &
                                                                scalar_argdone[31][1][12] &
                                                                scalar_argdone[12][0][16] &
                                                                scalar_argdone[13][0][21] &
                                                                scalar_argdone[17][1][9] &
                                                                scalar_argdone[18][1][7] &
                                                                scalar_argdone[5][1][9] &
                                                                scalar_argdone[12][1][15] &
                                                                scalar_argdone[13][1][20] &
                                                                scalar_argdone[14][1][17] &
                                                                scalar_argdone[21][0][16] &
                                                                scalar_argdone[1][0][13] &
                                                                scalar_argdone[26][1][12];

    if (scalar_argdone_all_r[hls_transform_tree_hls_dup2]) begin
        scalar_argdone[2][1][13] = 0;
        scalar_argdone[14][1][16] = 0;
        scalar_argdone[15][0][14] = 0;
        scalar_argdone[31][1][10] = 0;
        scalar_argdone[31][0][12] = 0;
        scalar_argdone[31][1][11] = 0;
        scalar_argdone[31][0][13] = 0;
        scalar_argdone[0][1][20] = 0;
        scalar_argdone[0][0][22] = 0;
        scalar_argdone[0][1][21] = 0;
        scalar_argdone[0][0][23] = 0;
        scalar_argdone[1][0][11] = 0;
        scalar_argdone[1][1][10] = 0;
        scalar_argdone[1][0][12] = 0;
        scalar_argdone[1][1][11] = 0;
        scalar_argdone[14][0][18] = 0;
        scalar_argdone[27][0][6] = 0;
        scalar_argdone[30][0][8] = 0;
        scalar_argdone[16][1][11] = 0;
        scalar_argdone[31][1][12] = 0;
        scalar_argdone[12][0][16] = 0;
        scalar_argdone[13][0][21] = 0;
        scalar_argdone[17][1][9] = 0;
        scalar_argdone[18][1][7] = 0;
        scalar_argdone[5][1][9] = 0;
        scalar_argdone[12][1][15] = 0;
        scalar_argdone[13][1][20] = 0;
        scalar_argdone[14][1][17] = 0;
        scalar_argdone[21][0][16] = 0;
        scalar_argdone[1][0][13] = 0;
        scalar_argdone[26][1][12] = 0;

        if (ap_arb_start_r[hls_transform_tree_hls_dup2] & ~ap_running_r[hls_transform_tree_hls_dup2]) begin
            ap_start[hls_transform_tree_hls_dup2] = 1;
            ap_running[hls_transform_tree_hls_dup2] = 1;
        end
        else if (ap_arb_ret_running_r[hls_transform_tree_hls_dup2]) begin
            ap_arb_ret_running[hls_transform_tree_hls_dup2] = 0;
            ap_arb_reload_running[hls_transform_tree_hls_dup2] = 0;
            hls_transform_tree_hls_dup2_ready = 1;
        end
    end

    if (ap_start_r[hls_transform_tree_hls_dup2] & ap_ready_r[hls_transform_tree_hls_dup2]) begin
        ap_start[hls_transform_tree_hls_dup2] = 0;
    end

    if (ap_done_r[hls_transform_tree_hls_dup2]) begin
        ap_running[hls_transform_tree_hls_dup2] = 0;
    end
`endif
    //============================================================
    //hls_transform_tree_hls_dup3       (f = 13)
    //============================================================
`ifdef enable_connect_hls_transform_tree_hls_dup3
    //------WRITE (scalar, global adr = 168) comb block-----//
    //s = 10; r = 1; a = 5;
    if (scalar_argAck [10][1][5]) begin
        scalar_argVld [10][1][5] = 0;
        scalar_argAckdone [10][1][5] = 1;
    end
    if (hls_transform_tree_hls_dup3_log2_trafo_size_ap_vld_r) begin
        scalar_argVld [10][1][5] = 1;
        scalar_argAckdone [10][1][5] = 0;
        ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][5] = hls_transform_tree_hls_dup3_log2_trafo_size_r;
    scalar_adr    [10][1][5] = {ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 12) comb block-----//
    //s = 3; r = 1; a = 3;
    if (scalar_argAck [3][1][3]) begin
        scalar_argVld [3][1][3] = 0;
        scalar_argAckdone [3][1][3] = 1;
    end
    if (hls_transform_tree_hls_dup3_split_transform_flag_ap_vld_r) begin
        scalar_argVld [3][1][3] = 1;
        scalar_argAckdone [3][1][3] = 0;
        ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][1][3] = hls_transform_tree_hls_dup3_split_transform_flag_r;
    scalar_adr    [3][1][3] = {ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 16) comb block-----//
    //s = 4; r = 1; a = 3;
    if (scalar_argAck [4][1][3]) begin
        scalar_argVld [4][1][3] = 0;
        scalar_argAckdone [4][1][3] = 1;
    end
    if (hls_transform_tree_hls_dup3_cbf_data_ap_vld_r) begin
        scalar_argVld [4][1][3] = 1;
        scalar_argAckdone [4][1][3] = 0;
        ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][1][3] = hls_transform_tree_hls_dup3_cbf_data_r;
    scalar_adr    [4][1][3] = {ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1160) comb block-----//
    //s = 2; r = 0; a = 15;
    if (scalar_rdat_vld_r[2][0][15]) begin
        scalar_argdone [2][0][15] = 1;
    end
    scalar_adr[2][0][15] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][15]) begin
        scalar_argVld[2][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[2][0][15] = 1;
    end

    //------READ (scalar, global adr = 440) comb block-----//
    //s = 14; r = 0; a = 19;
    if (scalar_rdat_vld_r[14][0][19]) begin
        scalar_argdone [14][0][19] = 1;
    end
    scalar_adr[14][0][19] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][19]) begin
        scalar_argVld[14][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[14][0][19] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 13;
    if (scalar_rdat_vld_r[15][1][13]) begin
        scalar_argdone [15][1][13] = 1;
    end
    scalar_adr[15][1][13] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][13]) begin
        scalar_argVld[15][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[15][1][13] = 1;
    end

    //------WRITE (scalar, global adr = 480) comb block-----//
    //s = 24; r = 1; a = 2;
    if (scalar_argAck [24][1][2]) begin
        scalar_argVld [24][1][2] = 0;
        scalar_argAckdone [24][1][2] = 1;
    end
    if (hls_transform_tree_hls_dup3_tu_chroma_mode_c_ap_vld_r) begin
        scalar_argVld [24][1][2] = 1;
        scalar_argAckdone [24][1][2] = 0;
        ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][1][2] = hls_transform_tree_hls_dup3_tu_chroma_mode_c_r;
    scalar_adr    [24][1][2] = {ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 484) comb block-----//
    //s = 25; r = 1; a = 2;
    if (scalar_argAck [25][1][2]) begin
        scalar_argVld [25][1][2] = 0;
        scalar_argAckdone [25][1][2] = 1;
    end
    if (hls_transform_tree_hls_dup3_tu_intra_pred_mode_ap_vld_r) begin
        scalar_argVld [25][1][2] = 1;
        scalar_argAckdone [25][1][2] = 0;
        ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][1][2] = hls_transform_tree_hls_dup3_tu_intra_pred_mode_r;
    scalar_adr    [25][1][2] = {ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 488) comb block-----//
    //s = 26; r = 1; a = 2;
    if (scalar_argAck [26][1][2]) begin
        scalar_argVld [26][1][2] = 0;
        scalar_argAckdone [26][1][2] = 1;
    end
    if (hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_ap_vld_r) begin
        scalar_argVld [26][1][2] = 1;
        scalar_argAckdone [26][1][2] = 0;
        ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][1][2] = hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_r;
    scalar_adr    [26][1][2] = {ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 508) comb block-----//
    //s = 31; r = 0; a = 14;
    if (scalar_rdat_vld_r[31][0][14]) begin
        scalar_argdone [31][0][14] = 1;
    end
    scalar_adr    [31][0][14] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][14]) begin
        scalar_argVld [31][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [31][0][14] = 1;
    end

    //------READ (scalar, complete partition, global adr = 509) comb block-----//
    //s = 31; r = 1; a = 13;
    if (scalar_rdat_vld_r[31][1][13]) begin
        scalar_argdone [31][1][13] = 1;
    end
    scalar_adr    [31][1][13] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][13]) begin
        scalar_argVld [31][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [31][1][13] = 1;
    end

    //------READ (scalar, complete partition, global adr = 510) comb block-----//
    //s = 31; r = 0; a = 15;
    if (scalar_rdat_vld_r[31][0][15]) begin
        scalar_argdone [31][0][15] = 1;
    end
    scalar_adr    [31][0][15] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][15]) begin
        scalar_argVld [31][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [31][0][15] = 1;
    end

    //------READ (scalar, complete partition, global adr = 511) comb block-----//
    //s = 31; r = 1; a = 14;
    if (scalar_rdat_vld_r[31][1][14]) begin
        scalar_argdone [31][1][14] = 1;
    end
    scalar_adr    [31][1][14] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][14]) begin
        scalar_argVld [31][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [31][1][14] = 1;
    end

    //------READ (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 1; a = 22;
    if (scalar_rdat_vld_r[0][1][22]) begin
        scalar_argdone [0][1][22] = 1;
    end
    scalar_adr    [0][1][22] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][22]) begin
        scalar_argVld [0][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [0][1][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 0; a = 24;
    if (scalar_rdat_vld_r[0][0][24]) begin
        scalar_argdone [0][0][24] = 1;
    end
    scalar_adr    [0][0][24] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][24]) begin
        scalar_argVld [0][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [0][0][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 1; a = 23;
    if (scalar_rdat_vld_r[0][1][23]) begin
        scalar_argdone [0][1][23] = 1;
    end
    scalar_adr    [0][1][23] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][23]) begin
        scalar_argVld [0][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [0][1][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 0; a = 25;
    if (scalar_rdat_vld_r[0][0][25]) begin
        scalar_argdone [0][0][25] = 1;
    end
    scalar_adr    [0][0][25] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][25]) begin
        scalar_argVld [0][0][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [0][0][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 516) comb block-----//
    //s = 1; r = 1; a = 12;
    if (scalar_rdat_vld_r[1][1][12]) begin
        scalar_argdone [1][1][12] = 1;
    end
    scalar_adr    [1][1][12] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][12]) begin
        scalar_argVld [1][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [1][1][12] = 1;
    end

    //------READ (scalar, complete partition, global adr = 517) comb block-----//
    //s = 1; r = 0; a = 14;
    if (scalar_rdat_vld_r[1][0][14]) begin
        scalar_argdone [1][0][14] = 1;
    end
    scalar_adr    [1][0][14] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][14]) begin
        scalar_argVld [1][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [1][0][14] = 1;
    end

    //------READ (scalar, complete partition, global adr = 518) comb block-----//
    //s = 1; r = 1; a = 13;
    if (scalar_rdat_vld_r[1][1][13]) begin
        scalar_argdone [1][1][13] = 1;
    end
    scalar_adr    [1][1][13] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][13]) begin
        scalar_argVld [1][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [1][1][13] = 1;
    end

    //------READ (scalar, complete partition, global adr = 519) comb block-----//
    //s = 1; r = 0; a = 15;
    if (scalar_rdat_vld_r[1][0][15]) begin
        scalar_argdone [1][0][15] = 1;
    end
    scalar_adr    [1][0][15] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][15]) begin
        scalar_argVld [1][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [1][0][15] = 1;
    end

    //------READ (scalar, global adr = 568) comb block-----//
    //s = 14; r = 1; a = 18;
    if (scalar_rdat_vld_r[14][1][18]) begin
        scalar_argdone [14][1][18] = 1;
    end
    scalar_adr[14][1][18] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][18]) begin
        scalar_argVld[14][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[14][1][18] = 1;
    end

    //------READ (scalar, global adr = 364) comb block-----//
    //s = 27; r = 1; a = 5;
    if (scalar_rdat_vld_r[27][1][5]) begin
        scalar_argdone [27][1][5] = 1;
    end
    scalar_adr[27][1][5] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][5]) begin
        scalar_argVld[27][1][5] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[27][1][5] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 1; a = 8;
    if (scalar_rdat_vld_r[30][1][8]) begin
        scalar_argdone [30][1][8] = 1;
    end
    scalar_adr[30][1][8] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][8]) begin
        scalar_argVld[30][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[30][1][8] = 1;
    end

    //------READ (scalar, global adr = 576) comb block-----//
    //s = 16; r = 0; a = 12;
    if (scalar_rdat_vld_r[16][0][12]) begin
        scalar_argdone [16][0][12] = 1;
    end
    scalar_adr[16][0][12] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][12]) begin
        scalar_argVld[16][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[16][0][12] = 1;
    end

    //------READ (scalar, global adr = 380) comb block-----//
    //s = 31; r = 0; a = 16;
    if (scalar_rdat_vld_r[31][0][16]) begin
        scalar_argdone [31][0][16] = 1;
    end
    scalar_adr[31][0][16] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][16]) begin
        scalar_argVld[31][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[31][0][16] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 17;
    if (scalar_rdat_vld_r[12][0][17]) begin
        scalar_argdone [12][0][17] = 1;
    end
    scalar_adr[12][0][17] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][17]) begin
        scalar_argVld[12][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[12][0][17] = 1;
    end

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 0; a = 22;
    if (scalar_rdat_vld_r[13][0][22]) begin
        scalar_argdone [13][0][22] = 1;
    end
    scalar_adr[13][0][22] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][22]) begin
        scalar_argVld[13][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[13][0][22] = 1;
    end

    //------READ (scalar, global adr = 324) comb block-----//
    //s = 17; r = 0; a = 10;
    if (scalar_rdat_vld_r[17][0][10]) begin
        scalar_argdone [17][0][10] = 1;
    end
    scalar_adr[17][0][10] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][10]) begin
        scalar_argVld[17][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[17][0][10] = 1;
    end

    //------READ (scalar, global adr = 328) comb block-----//
    //s = 18; r = 0; a = 8;
    if (scalar_rdat_vld_r[18][0][8]) begin
        scalar_argdone [18][0][8] = 1;
    end
    scalar_adr[18][0][8] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][8]) begin
        scalar_argVld[18][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[18][0][8] = 1;
    end

    //------READ (scalar, global adr = 20) comb block-----//
    //s = 5; r = 0; a = 11;
    if (scalar_rdat_vld_r[5][0][11]) begin
        scalar_argdone [5][0][11] = 1;
    end
    scalar_adr[5][0][11] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][11]) begin
        scalar_argVld[5][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[5][0][11] = 1;
    end

    //------WRITE (scalar, global adr = 20) comb block-----//
    //s = 5; r = 1; a = 4;
    if (scalar_argAck [5][1][4]) begin
        scalar_argVld [5][1][4] = 0;
        scalar_argAckdone [5][1][4] = 1;
    end
    if (hls_transform_tree_hls_dup3_cbf_luma_o_ap_vld_r) begin
        scalar_argVld [5][1][4] = 1;
        scalar_argAckdone [5][1][4] = 0;
        ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][4] = hls_transform_tree_hls_dup3_cbf_luma_o_r;
    scalar_adr    [5][1][4] = {ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1328) comb block-----//
    //s = 12; r = 1; a = 16;
    if (scalar_rdat_vld_r[12][1][16]) begin
        scalar_argdone [12][1][16] = 1;
    end
    scalar_adr[12][1][16] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][16]) begin
        scalar_argVld[12][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[12][1][16] = 1;
    end

    //------READ (scalar, global adr = 1332) comb block-----//
    //s = 13; r = 1; a = 21;
    if (scalar_rdat_vld_r[13][1][21]) begin
        scalar_argdone [13][1][21] = 1;
    end
    scalar_adr[13][1][21] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][21]) begin
        scalar_argVld[13][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[13][1][21] = 1;
    end

    //------READ (scalar, global adr = 1336) comb block-----//
    //s = 14; r = 0; a = 20;
    if (scalar_rdat_vld_r[14][0][20]) begin
        scalar_argdone [14][0][20] = 1;
    end
    scalar_adr[14][0][20] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][20]) begin
        scalar_argVld[14][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[14][0][20] = 1;
    end

    //------READ (scalar, global adr = 1236) comb block-----//
    //s = 21; r = 1; a = 15;
    if (scalar_rdat_vld_r[21][1][15]) begin
        scalar_argdone [21][1][15] = 1;
    end
    scalar_adr[21][1][15] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][15]) begin
        scalar_argVld[21][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[21][1][15] = 1;
    end

    //------READ (scalar, global adr = 388) comb block-----//
    //s = 1; r = 1; a = 14;
    if (scalar_rdat_vld_r[1][1][14]) begin
        scalar_argdone [1][1][14] = 1;
    end
    scalar_adr[1][1][14] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][14]) begin
        scalar_argVld[1][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[1][1][14] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 14;
    if (scalar_rdat_vld_r[26][0][14]) begin
        scalar_argdone [26][0][14] = 1;
    end
    scalar_adr[26][0][14] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][14]) begin
        scalar_argVld[26][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[26][0][14] = 1;
    end

    if (ap_arb_ret[hls_transform_tree_hls_dup3] & ~ap_arb_ret_r[hls_transform_tree_hls_dup3]) begin
        ap_arb_ret_running[hls_transform_tree_hls_dup3] = 1;
        hls_transform_tree_hls_dup3_ready = 0;
    end

    scalar_argAckdone_all[hls_transform_tree_hls_dup3] = scalar_argAckdone[10][1][5] &
                                                scalar_argAckdone[3][1][3] &
                                                scalar_argAckdone[4][1][3] &
                                                scalar_argAckdone[24][1][2] &
                                                scalar_argAckdone[25][1][2] &
                                                scalar_argAckdone[26][1][2] &
                                                scalar_argAckdone[5][1][4];
    if (ap_arb_ret_running[hls_transform_tree_hls_dup3] & scalar_argAckdone_all[hls_transform_tree_hls_dup3] &~ ap_arb_reload_running_r[hls_transform_tree_hls_dup3]) begin
        ap_arb_reload[hls_transform_tree_hls_dup3] = 1;
        ap_arb_reload_running[hls_transform_tree_hls_dup3] = 1;
    end

    if (ap_arb_start[hls_transform_tree_hls_dup3] &~ ap_arb_start_r[hls_transform_tree_hls_dup3]) begin
        ap_arb_start_running[hls_transform_tree_hls_dup3] = 1;
    end

    if (ap_arb_start_running[hls_transform_tree_hls_dup3] & ~scalar_writing_572& ~scalar_writing_508& ~scalar_writing_509& ~scalar_writing_510& ~scalar_writing_511& ~scalar_writing_512& ~scalar_writing_513& ~scalar_writing_514& ~scalar_writing_515& ~scalar_writing_516& ~scalar_writing_517& ~scalar_writing_518& ~scalar_writing_519& ~scalar_writing_568& ~scalar_writing_576& ~scalar_writing_560& ~scalar_writing_564& ~scalar_writing_20) begin
        ap_arb_start_running[hls_transform_tree_hls_dup3] = 0;
        ap_arb_reload[hls_transform_tree_hls_dup3] = 1;
    end

    scalar_argdone_all[hls_transform_tree_hls_dup3] = scalar_argdone[2][0][15] &
                                                                scalar_argdone[14][0][19] &
                                                                scalar_argdone[15][1][13] &
                                                                scalar_argdone[31][0][14] &
                                                                scalar_argdone[31][1][13] &
                                                                scalar_argdone[31][0][15] &
                                                                scalar_argdone[31][1][14] &
                                                                scalar_argdone[0][1][22] &
                                                                scalar_argdone[0][0][24] &
                                                                scalar_argdone[0][1][23] &
                                                                scalar_argdone[0][0][25] &
                                                                scalar_argdone[1][1][12] &
                                                                scalar_argdone[1][0][14] &
                                                                scalar_argdone[1][1][13] &
                                                                scalar_argdone[1][0][15] &
                                                                scalar_argdone[14][1][18] &
                                                                scalar_argdone[27][1][5] &
                                                                scalar_argdone[30][1][8] &
                                                                scalar_argdone[16][0][12] &
                                                                scalar_argdone[31][0][16] &
                                                                scalar_argdone[12][0][17] &
                                                                scalar_argdone[13][0][22] &
                                                                scalar_argdone[17][0][10] &
                                                                scalar_argdone[18][0][8] &
                                                                scalar_argdone[5][0][11] &
                                                                scalar_argdone[12][1][16] &
                                                                scalar_argdone[13][1][21] &
                                                                scalar_argdone[14][0][20] &
                                                                scalar_argdone[21][1][15] &
                                                                scalar_argdone[1][1][14] &
                                                                scalar_argdone[26][0][14];

    if (scalar_argdone_all_r[hls_transform_tree_hls_dup3]) begin
        scalar_argdone[2][0][15] = 0;
        scalar_argdone[14][0][19] = 0;
        scalar_argdone[15][1][13] = 0;
        scalar_argdone[31][0][14] = 0;
        scalar_argdone[31][1][13] = 0;
        scalar_argdone[31][0][15] = 0;
        scalar_argdone[31][1][14] = 0;
        scalar_argdone[0][1][22] = 0;
        scalar_argdone[0][0][24] = 0;
        scalar_argdone[0][1][23] = 0;
        scalar_argdone[0][0][25] = 0;
        scalar_argdone[1][1][12] = 0;
        scalar_argdone[1][0][14] = 0;
        scalar_argdone[1][1][13] = 0;
        scalar_argdone[1][0][15] = 0;
        scalar_argdone[14][1][18] = 0;
        scalar_argdone[27][1][5] = 0;
        scalar_argdone[30][1][8] = 0;
        scalar_argdone[16][0][12] = 0;
        scalar_argdone[31][0][16] = 0;
        scalar_argdone[12][0][17] = 0;
        scalar_argdone[13][0][22] = 0;
        scalar_argdone[17][0][10] = 0;
        scalar_argdone[18][0][8] = 0;
        scalar_argdone[5][0][11] = 0;
        scalar_argdone[12][1][16] = 0;
        scalar_argdone[13][1][21] = 0;
        scalar_argdone[14][0][20] = 0;
        scalar_argdone[21][1][15] = 0;
        scalar_argdone[1][1][14] = 0;
        scalar_argdone[26][0][14] = 0;

        if (ap_arb_start_r[hls_transform_tree_hls_dup3] & ~ap_running_r[hls_transform_tree_hls_dup3]) begin
            ap_start[hls_transform_tree_hls_dup3] = 1;
            ap_running[hls_transform_tree_hls_dup3] = 1;
        end
        else if (ap_arb_ret_running_r[hls_transform_tree_hls_dup3]) begin
            ap_arb_ret_running[hls_transform_tree_hls_dup3] = 0;
            ap_arb_reload_running[hls_transform_tree_hls_dup3] = 0;
            hls_transform_tree_hls_dup3_ready = 1;
        end
    end

    if (ap_start_r[hls_transform_tree_hls_dup3] & ap_ready_r[hls_transform_tree_hls_dup3]) begin
        ap_start[hls_transform_tree_hls_dup3] = 0;
    end

    if (ap_done_r[hls_transform_tree_hls_dup3]) begin
        ap_running[hls_transform_tree_hls_dup3] = 0;
    end
`endif
    //============================================================
    //hls_coding_quadtree_hls       (f = 14)
    //============================================================
`ifdef enable_connect_hls_coding_quadtree_hls
    //------READ (scalar, global adr = 300) comb block-----//
    //s = 11; r = 0; a = 6;
    if (scalar_rdat_vld_r[11][0][6]) begin
        scalar_argdone [11][0][6] = 1;
    end
    scalar_adr[11][0][6] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][6]) begin
        scalar_argVld[11][0][6] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[11][0][6] = 1;
    end

    //------WRITE (scalar, global adr = 300) comb block-----//
    //s = 11; r = 0; a = 0;
    if (scalar_argAck [11][0][0]) begin
        scalar_argVld [11][0][0] = 0;
        scalar_argAckdone [11][0][0] = 1;
    end
    if (hls_coding_quadtree_hls_x1_o_ap_vld_r) begin
        scalar_argVld [11][0][0] = 1;
        scalar_argAckdone [11][0][0] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][0][0] = hls_coding_quadtree_hls_x1_o_r;
    scalar_adr    [11][0][0] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 304) comb block-----//
    //s = 12; r = 0; a = 8;
    if (scalar_rdat_vld_r[12][0][8]) begin
        scalar_argdone [12][0][8] = 1;
    end
    scalar_adr[12][0][8] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][8]) begin
        scalar_argVld[12][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[12][0][8] = 1;
    end

    //------WRITE (scalar, global adr = 304) comb block-----//
    //s = 12; r = 0; a = 0;
    if (scalar_argAck [12][0][0]) begin
        scalar_argVld [12][0][0] = 0;
        scalar_argAckdone [12][0][0] = 1;
    end
    if (hls_coding_quadtree_hls_y1_o_ap_vld_r) begin
        scalar_argVld [12][0][0] = 1;
        scalar_argAckdone [12][0][0] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][0] = hls_coding_quadtree_hls_y1_o_r;
    scalar_adr    [12][0][0] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 312) comb block-----//
    //s = 14; r = 1; a = 7;
    if (scalar_rdat_vld_r[14][1][7]) begin
        scalar_argdone [14][1][7] = 1;
    end
    scalar_adr[14][1][7] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][7]) begin
        scalar_argVld[14][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[14][1][7] = 1;
    end

    //------WRITE (scalar, global adr = 312) comb block-----//
    //s = 14; r = 1; a = 0;
    if (scalar_argAck [14][1][0]) begin
        scalar_argVld [14][1][0] = 0;
        scalar_argAckdone [14][1][0] = 1;
    end
    if (hls_coding_quadtree_hls_log2_cb_size_minus_one_o_ap_vld_r) begin
        scalar_argVld [14][1][0] = 1;
        scalar_argAckdone [14][1][0] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][0] = hls_coding_quadtree_hls_log2_cb_size_minus_one_o_r;
    scalar_adr    [14][1][0] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 316) comb block-----//
    //s = 15; r = 1; a = 5;
    if (scalar_rdat_vld_r[15][1][5]) begin
        scalar_argdone [15][1][5] = 1;
    end
    scalar_adr[15][1][5] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][5]) begin
        scalar_argVld[15][1][5] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[15][1][5] = 1;
    end

    //------WRITE (scalar, global adr = 316) comb block-----//
    //s = 15; r = 1; a = 0;
    if (scalar_argAck [15][1][0]) begin
        scalar_argVld [15][1][0] = 0;
        scalar_argAckdone [15][1][0] = 1;
    end
    if (hls_coding_quadtree_hls_cb_depth_plus_one_o_ap_vld_r) begin
        scalar_argVld [15][1][0] = 1;
        scalar_argAckdone [15][1][0] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][0] = hls_coding_quadtree_hls_cb_depth_plus_one_o_r;
    scalar_adr    [15][1][0] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 1; a = 7;
    if (scalar_rdat_vld_r[6][1][7]) begin
        scalar_argdone [6][1][7] = 1;
    end
    scalar_adr[6][1][7] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][7]) begin
        scalar_argVld[6][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[6][1][7] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 0; a = 5;
    if (scalar_rdat_vld_r[19][0][5]) begin
        scalar_argdone [19][0][5] = 1;
    end
    scalar_adr[19][0][5] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][5]) begin
        scalar_argVld[19][0][5] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[19][0][5] = 1;
    end

    //------READ (scalar, global adr = 292) comb block-----//
    //s = 9; r = 1; a = 9;
    if (scalar_rdat_vld_r[9][1][9]) begin
        scalar_argdone [9][1][9] = 1;
    end
    scalar_adr[9][1][9] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][9]) begin
        scalar_argVld[9][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[9][1][9] = 1;
    end

    //------WRITE (scalar, global adr = 292) comb block-----//
    //s = 9; r = 1; a = 0;
    if (scalar_argAck [9][1][0]) begin
        scalar_argVld [9][1][0] = 0;
        scalar_argAckdone [9][1][0] = 1;
    end
    if (hls_coding_quadtree_hls_split_cu_flag_o_ap_vld_r) begin
        scalar_argVld [9][1][0] = 1;
        scalar_argAckdone [9][1][0] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][0] = hls_coding_quadtree_hls_split_cu_flag_o_r;
    scalar_adr    [9][1][0] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 296) comb block-----//
    //s = 10; r = 0; a = 10;
    if (scalar_rdat_vld_r[10][0][10]) begin
        scalar_argdone [10][0][10] = 1;
    end
    scalar_adr[10][0][10] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][10]) begin
        scalar_argVld[10][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[10][0][10] = 1;
    end

    //------WRITE (scalar, global adr = 296) comb block-----//
    //s = 10; r = 0; a = 0;
    if (scalar_argAck [10][0][0]) begin
        scalar_argVld [10][0][0] = 0;
        scalar_argAckdone [10][0][0] = 1;
    end
    if (hls_coding_quadtree_hls_more_data_o_ap_vld_r) begin
        scalar_argVld [10][0][0] = 1;
        scalar_argAckdone [10][0][0] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][0] = hls_coding_quadtree_hls_more_data_o_r;
    scalar_adr    [10][0][0] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1324) comb block-----//
    //s = 11; r = 1; a = 5;
    if (scalar_rdat_vld_r[11][1][5]) begin
        scalar_argdone [11][1][5] = 1;
    end
    scalar_adr[11][1][5] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][5]) begin
        scalar_argVld[11][1][5] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[11][1][5] = 1;
    end

    //------READ (scalar, global adr = 1236) comb block-----//
    //s = 21; r = 0; a = 11;
    if (scalar_rdat_vld_r[21][0][11]) begin
        scalar_argdone [21][0][11] = 1;
    end
    scalar_adr[21][0][11] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][11]) begin
        scalar_argVld[21][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[21][0][11] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 8;
    if (scalar_rdat_vld_r[26][0][8]) begin
        scalar_argdone [26][0][8] = 1;
    end
    scalar_adr[26][0][8] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][8]) begin
        scalar_argVld[26][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[26][0][8] = 1;
    end

    //------WRITE (scalar, global adr = 540) comb block-----//
    //s = 7; r = 0; a = 0;
    if (scalar_argAck [7][0][0]) begin
        scalar_argVld [7][0][0] = 0;
        scalar_argAckdone [7][0][0] = 1;
    end
    if (hls_coding_quadtree_hls_qPy_pred_ap_vld_r) begin
        scalar_argVld [7][0][0] = 1;
        scalar_argAckdone [7][0][0] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][0] = hls_coding_quadtree_hls_qPy_pred_r;
    scalar_adr    [7][0][0] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 0; a = 8;
    if (scalar_rdat_vld_r[6][0][8]) begin
        scalar_argdone [6][0][8] = 1;
    end
    scalar_adr[6][0][8] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][8]) begin
        scalar_argVld[6][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[6][0][8] = 1;
    end

    //------READ (scalar, global adr = 40) comb block-----//
    //s = 10; r = 1; a = 9;
    if (scalar_rdat_vld_r[10][1][9]) begin
        scalar_argdone [10][1][9] = 1;
    end
    scalar_adr[10][1][9] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][9]) begin
        scalar_argVld[10][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[10][1][9] = 1;
    end

    //------WRITE (scalar, global adr = 40) comb block-----//
    //s = 10; r = 1; a = 0;
    if (scalar_argAck [10][1][0]) begin
        scalar_argVld [10][1][0] = 0;
        scalar_argAckdone [10][1][0] = 1;
    end
    if (hls_coding_quadtree_hls_qp_block_mask_o_ap_vld_r) begin
        scalar_argVld [10][1][0] = 1;
        scalar_argAckdone [10][1][0] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][0] = hls_coding_quadtree_hls_qp_block_mask_o_r;
    scalar_adr    [10][1][0] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 308) comb block-----//
    //s = 13; r = 0; a = 9;
    if (scalar_rdat_vld_r[13][0][9]) begin
        scalar_argdone [13][0][9] = 1;
    end
    scalar_adr[13][0][9] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][9]) begin
        scalar_argVld[13][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[13][0][9] = 1;
    end

    //------WRITE (scalar, global adr = 308) comb block-----//
    //s = 13; r = 1; a = 0;
    if (scalar_argAck [13][1][0]) begin
        scalar_argVld [13][1][0] = 0;
        scalar_argAckdone [13][1][0] = 1;
    end
    if (hls_coding_quadtree_hls_cb_size_split_o_ap_vld_r) begin
        scalar_argVld [13][1][0] = 1;
        scalar_argAckdone [13][1][0] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][0] = hls_coding_quadtree_hls_cb_size_split_o_r;
    scalar_adr    [13][1][0] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 1; a = 7;
    if (scalar_rdat_vld_r[28][1][7]) begin
        scalar_argdone [28][1][7] = 1;
    end
    scalar_adr[28][1][7] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][7]) begin
        scalar_argVld[28][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[28][1][7] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 1; a = 4;
    if (scalar_rdat_vld_r[2][1][4]) begin
        scalar_argdone [2][1][4] = 1;
    end
    scalar_adr[2][1][4] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][4]) begin
        scalar_argVld[2][1][4] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[2][1][4] = 1;
    end

    //------WRITE (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 0;
    if (scalar_argAck [23][1][0]) begin
        scalar_argVld [23][1][0] = 0;
        scalar_argAckdone [23][1][0] = 1;
    end
    if (hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_ap_vld_r) begin
        scalar_argVld [23][1][0] = 1;
        scalar_argAckdone [23][1][0] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][1][0] = hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_r;
    scalar_adr    [23][1][0] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 468) comb block-----//
    //s = 21; r = 0; a = 1;
    if (scalar_argAck [21][0][1]) begin
        scalar_argVld [21][0][1] = 0;
        scalar_argAckdone [21][0][1] = 1;
    end
    if (hls_coding_quadtree_hls_tu_cu_qp_delta_ap_vld_r) begin
        scalar_argVld [21][0][1] = 1;
        scalar_argAckdone [21][0][1] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][1] = hls_coding_quadtree_hls_tu_cu_qp_delta_r;
    scalar_adr    [21][0][1] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 472) comb block-----//
    //s = 22; r = 0; a = 1;
    if (scalar_argAck [22][0][1]) begin
        scalar_argVld [22][0][1] = 0;
        scalar_argAckdone [22][0][1] = 1;
    end
    if (hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_ap_vld_r) begin
        scalar_argVld [22][0][1] = 1;
        scalar_argAckdone [22][0][1] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][1] = hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_r;
    scalar_adr    [22][0][1] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 464) comb block-----//
    //s = 20; r = 0; a = 1;
    if (scalar_argAck [20][0][1]) begin
        scalar_argVld [20][0][1] = 0;
        scalar_argAckdone [20][0][1] = 1;
    end
    if (hls_coding_quadtree_hls_depth_ap_vld_r) begin
        scalar_argVld [20][0][1] = 1;
        scalar_argAckdone [20][0][1] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][1] = hls_coding_quadtree_hls_depth_r;
    scalar_adr    [20][0][1] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 0; a = 8;
    if (scalar_rdat_vld_r[24][0][8]) begin
        scalar_argdone [24][0][8] = 1;
    end
    scalar_adr[24][0][8] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][8]) begin
        scalar_argVld[24][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[24][0][8] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 0; a = 10;
    if (scalar_rdat_vld_r[23][0][10]) begin
        scalar_argdone [23][0][10] = 1;
    end
    scalar_adr[23][0][10] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][10]) begin
        scalar_argVld[23][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[23][0][10] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 0; a = 7;
    if (scalar_rdat_vld_r[11][0][7]) begin
        scalar_argdone [11][0][7] = 1;
    end
    scalar_adr[11][0][7] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][7]) begin
        scalar_argVld[11][0][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[11][0][7] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 1; a = 8;
    if (scalar_rdat_vld_r[13][1][8]) begin
        scalar_argdone [13][1][8] = 1;
    end
    scalar_adr[13][1][8] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][8]) begin
        scalar_argVld[13][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[13][1][8] = 1;
    end

    //------READ (scalar, global adr = 448) comb block-----//
    //s = 16; r = 1; a = 4;
    if (scalar_rdat_vld_r[16][1][4]) begin
        scalar_argdone [16][1][4] = 1;
    end
    scalar_adr[16][1][4] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][4]) begin
        scalar_argVld[16][1][4] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[16][1][4] = 1;
    end

    //------READ (scalar, global adr = 432) comb block-----//
    //s = 12; r = 1; a = 7;
    if (scalar_rdat_vld_r[12][1][7]) begin
        scalar_argdone [12][1][7] = 1;
    end
    scalar_adr[12][1][7] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][7]) begin
        scalar_argVld[12][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[12][1][7] = 1;
    end

    //------READ (scalar, global adr = 1280) comb block-----//
    //s = 0; r = 0; a = 13;
    if (scalar_rdat_vld_r[0][0][13]) begin
        scalar_argdone [0][0][13] = 1;
    end
    scalar_adr[0][0][13] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][13]) begin
        scalar_argVld[0][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[0][0][13] = 1;
    end

    if (ap_arb_ret[hls_coding_quadtree_hls] & ~ap_arb_ret_r[hls_coding_quadtree_hls]) begin
        ap_arb_ret_running[hls_coding_quadtree_hls] = 1;
        hls_coding_quadtree_hls_ready = 0;
    end

    scalar_argAckdone_all[hls_coding_quadtree_hls] = scalar_argAckdone[11][0][0] &
                                                scalar_argAckdone[12][0][0] &
                                                scalar_argAckdone[14][1][0] &
                                                scalar_argAckdone[15][1][0] &
                                                scalar_argAckdone[9][1][0] &
                                                scalar_argAckdone[10][0][0] &
                                                scalar_argAckdone[7][0][0] &
                                                scalar_argAckdone[10][1][0] &
                                                scalar_argAckdone[13][1][0] &
                                                scalar_argAckdone[23][1][0] &
                                                scalar_argAckdone[21][0][1] &
                                                scalar_argAckdone[22][0][1] &
                                                scalar_argAckdone[20][0][1];
    if (ap_arb_ret_running[hls_coding_quadtree_hls] & scalar_argAckdone_all[hls_coding_quadtree_hls] &~ ap_arb_reload_running_r[hls_coding_quadtree_hls]) begin
        ap_arb_reload[hls_coding_quadtree_hls] = 1;
        ap_arb_reload_running[hls_coding_quadtree_hls] = 1;
    end

    if (ap_arb_start[hls_coding_quadtree_hls] &~ ap_arb_start_r[hls_coding_quadtree_hls]) begin
        ap_arb_start_running[hls_coding_quadtree_hls] = 1;
    end

    if (ap_arb_start_running[hls_coding_quadtree_hls] & ~scalar_writing_300& ~scalar_writing_304& ~scalar_writing_312& ~scalar_writing_316& ~scalar_writing_292& ~scalar_writing_296& ~scalar_writing_536& ~scalar_writing_40& ~scalar_writing_308& ~scalar_writing_608& ~scalar_writing_604) begin
        ap_arb_start_running[hls_coding_quadtree_hls] = 0;
        ap_arb_reload[hls_coding_quadtree_hls] = 1;
    end

    scalar_argdone_all[hls_coding_quadtree_hls] = scalar_argdone[11][0][6] &
                                                                scalar_argdone[12][0][8] &
                                                                scalar_argdone[14][1][7] &
                                                                scalar_argdone[15][1][5] &
                                                                scalar_argdone[6][1][7] &
                                                                scalar_argdone[19][0][5] &
                                                                scalar_argdone[9][1][9] &
                                                                scalar_argdone[10][0][10] &
                                                                scalar_argdone[11][1][5] &
                                                                scalar_argdone[21][0][11] &
                                                                scalar_argdone[26][0][8] &
                                                                scalar_argdone[6][0][8] &
                                                                scalar_argdone[10][1][9] &
                                                                scalar_argdone[13][0][9] &
                                                                scalar_argdone[28][1][7] &
                                                                scalar_argdone[2][1][4] &
                                                                scalar_argdone[24][0][8] &
                                                                scalar_argdone[23][0][10] &
                                                                scalar_argdone[11][0][7] &
                                                                scalar_argdone[13][1][8] &
                                                                scalar_argdone[16][1][4] &
                                                                scalar_argdone[12][1][7] &
                                                                scalar_argdone[0][0][13];

    if (scalar_argdone_all_r[hls_coding_quadtree_hls]) begin
        scalar_argdone[11][0][6] = 0;
        scalar_argdone[12][0][8] = 0;
        scalar_argdone[14][1][7] = 0;
        scalar_argdone[15][1][5] = 0;
        scalar_argdone[6][1][7] = 0;
        scalar_argdone[19][0][5] = 0;
        scalar_argdone[9][1][9] = 0;
        scalar_argdone[10][0][10] = 0;
        scalar_argdone[11][1][5] = 0;
        scalar_argdone[21][0][11] = 0;
        scalar_argdone[26][0][8] = 0;
        scalar_argdone[6][0][8] = 0;
        scalar_argdone[10][1][9] = 0;
        scalar_argdone[13][0][9] = 0;
        scalar_argdone[28][1][7] = 0;
        scalar_argdone[2][1][4] = 0;
        scalar_argdone[24][0][8] = 0;
        scalar_argdone[23][0][10] = 0;
        scalar_argdone[11][0][7] = 0;
        scalar_argdone[13][1][8] = 0;
        scalar_argdone[16][1][4] = 0;
        scalar_argdone[12][1][7] = 0;
        scalar_argdone[0][0][13] = 0;

        if (ap_arb_start_r[hls_coding_quadtree_hls] & ~ap_running_r[hls_coding_quadtree_hls]) begin
            ap_start[hls_coding_quadtree_hls] = 1;
            ap_running[hls_coding_quadtree_hls] = 1;
        end
        else if (ap_arb_ret_running_r[hls_coding_quadtree_hls]) begin
            ap_arb_ret_running[hls_coding_quadtree_hls] = 0;
            ap_arb_reload_running[hls_coding_quadtree_hls] = 0;
            hls_coding_quadtree_hls_ready = 1;
        end
    end

    if (ap_start_r[hls_coding_quadtree_hls] & ap_ready_r[hls_coding_quadtree_hls]) begin
        ap_start[hls_coding_quadtree_hls] = 0;
    end

    if (ap_done_r[hls_coding_quadtree_hls]) begin
        ap_running[hls_coding_quadtree_hls] = 0;
    end
`endif
    //============================================================
    //hls_coding_quadtree_hls_dup1       (f = 15)
    //============================================================
`ifdef enable_connect_hls_coding_quadtree_hls_dup1
    //------READ (scalar, global adr = 300) comb block-----//
    //s = 11; r = 1; a = 6;
    if (scalar_rdat_vld_r[11][1][6]) begin
        scalar_argdone [11][1][6] = 1;
    end
    scalar_adr[11][1][6] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][6]) begin
        scalar_argVld[11][1][6] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[11][1][6] = 1;
    end

    //------WRITE (scalar, global adr = 300) comb block-----//
    //s = 11; r = 1; a = 0;
    if (scalar_argAck [11][1][0]) begin
        scalar_argVld [11][1][0] = 0;
        scalar_argAckdone [11][1][0] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_x1_o_ap_vld_r) begin
        scalar_argVld [11][1][0] = 1;
        scalar_argAckdone [11][1][0] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][1][0] = hls_coding_quadtree_hls_dup1_x1_o_r;
    scalar_adr    [11][1][0] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 304) comb block-----//
    //s = 12; r = 0; a = 9;
    if (scalar_rdat_vld_r[12][0][9]) begin
        scalar_argdone [12][0][9] = 1;
    end
    scalar_adr[12][0][9] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][9]) begin
        scalar_argVld[12][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[12][0][9] = 1;
    end

    //------WRITE (scalar, global adr = 304) comb block-----//
    //s = 12; r = 1; a = 0;
    if (scalar_argAck [12][1][0]) begin
        scalar_argVld [12][1][0] = 0;
        scalar_argAckdone [12][1][0] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_y1_o_ap_vld_r) begin
        scalar_argVld [12][1][0] = 1;
        scalar_argAckdone [12][1][0] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][0] = hls_coding_quadtree_hls_dup1_y1_o_r;
    scalar_adr    [12][1][0] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 312) comb block-----//
    //s = 14; r = 0; a = 9;
    if (scalar_rdat_vld_r[14][0][9]) begin
        scalar_argdone [14][0][9] = 1;
    end
    scalar_adr[14][0][9] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][9]) begin
        scalar_argVld[14][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[14][0][9] = 1;
    end

    //------WRITE (scalar, global adr = 312) comb block-----//
    //s = 14; r = 0; a = 1;
    if (scalar_argAck [14][0][1]) begin
        scalar_argVld [14][0][1] = 0;
        scalar_argAckdone [14][0][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_ap_vld_r) begin
        scalar_argVld [14][0][1] = 1;
        scalar_argAckdone [14][0][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][1] = hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_r;
    scalar_adr    [14][0][1] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 316) comb block-----//
    //s = 15; r = 0; a = 7;
    if (scalar_rdat_vld_r[15][0][7]) begin
        scalar_argdone [15][0][7] = 1;
    end
    scalar_adr[15][0][7] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][7]) begin
        scalar_argVld[15][0][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[15][0][7] = 1;
    end

    //------WRITE (scalar, global adr = 316) comb block-----//
    //s = 15; r = 0; a = 1;
    if (scalar_argAck [15][0][1]) begin
        scalar_argVld [15][0][1] = 0;
        scalar_argAckdone [15][0][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_ap_vld_r) begin
        scalar_argVld [15][0][1] = 1;
        scalar_argAckdone [15][0][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][1] = hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_r;
    scalar_adr    [15][0][1] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 1; a = 8;
    if (scalar_rdat_vld_r[6][1][8]) begin
        scalar_argdone [6][1][8] = 1;
    end
    scalar_adr[6][1][8] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][8]) begin
        scalar_argVld[6][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[6][1][8] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 1; a = 5;
    if (scalar_rdat_vld_r[19][1][5]) begin
        scalar_argdone [19][1][5] = 1;
    end
    scalar_adr[19][1][5] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][5]) begin
        scalar_argVld[19][1][5] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[19][1][5] = 1;
    end

    //------READ (scalar, global adr = 292) comb block-----//
    //s = 9; r = 0; a = 10;
    if (scalar_rdat_vld_r[9][0][10]) begin
        scalar_argdone [9][0][10] = 1;
    end
    scalar_adr[9][0][10] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][10]) begin
        scalar_argVld[9][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[9][0][10] = 1;
    end

    //------WRITE (scalar, global adr = 292) comb block-----//
    //s = 9; r = 0; a = 1;
    if (scalar_argAck [9][0][1]) begin
        scalar_argVld [9][0][1] = 0;
        scalar_argAckdone [9][0][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_split_cu_flag_o_ap_vld_r) begin
        scalar_argVld [9][0][1] = 1;
        scalar_argAckdone [9][0][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][1] = hls_coding_quadtree_hls_dup1_split_cu_flag_o_r;
    scalar_adr    [9][0][1] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 296) comb block-----//
    //s = 10; r = 0; a = 11;
    if (scalar_rdat_vld_r[10][0][11]) begin
        scalar_argdone [10][0][11] = 1;
    end
    scalar_adr[10][0][11] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][11]) begin
        scalar_argVld[10][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[10][0][11] = 1;
    end

    //------WRITE (scalar, global adr = 296) comb block-----//
    //s = 10; r = 0; a = 1;
    if (scalar_argAck [10][0][1]) begin
        scalar_argVld [10][0][1] = 0;
        scalar_argAckdone [10][0][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_more_data_o_ap_vld_r) begin
        scalar_argVld [10][0][1] = 1;
        scalar_argAckdone [10][0][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][1] = hls_coding_quadtree_hls_dup1_more_data_o_r;
    scalar_adr    [10][0][1] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1324) comb block-----//
    //s = 11; r = 0; a = 8;
    if (scalar_rdat_vld_r[11][0][8]) begin
        scalar_argdone [11][0][8] = 1;
    end
    scalar_adr[11][0][8] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][8]) begin
        scalar_argVld[11][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[11][0][8] = 1;
    end

    //------READ (scalar, global adr = 1236) comb block-----//
    //s = 21; r = 1; a = 10;
    if (scalar_rdat_vld_r[21][1][10]) begin
        scalar_argdone [21][1][10] = 1;
    end
    scalar_adr[21][1][10] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][10]) begin
        scalar_argVld[21][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[21][1][10] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 7;
    if (scalar_rdat_vld_r[26][1][7]) begin
        scalar_argdone [26][1][7] = 1;
    end
    scalar_adr[26][1][7] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][7]) begin
        scalar_argVld[26][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[26][1][7] = 1;
    end

    //------WRITE (scalar, global adr = 540) comb block-----//
    //s = 7; r = 1; a = 0;
    if (scalar_argAck [7][1][0]) begin
        scalar_argVld [7][1][0] = 0;
        scalar_argAckdone [7][1][0] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_qPy_pred_ap_vld_r) begin
        scalar_argVld [7][1][0] = 1;
        scalar_argAckdone [7][1][0] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][0] = hls_coding_quadtree_hls_dup1_qPy_pred_r;
    scalar_adr    [7][1][0] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 0; a = 9;
    if (scalar_rdat_vld_r[6][0][9]) begin
        scalar_argdone [6][0][9] = 1;
    end
    scalar_adr[6][0][9] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][9]) begin
        scalar_argVld[6][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[6][0][9] = 1;
    end

    //------READ (scalar, global adr = 40) comb block-----//
    //s = 10; r = 1; a = 10;
    if (scalar_rdat_vld_r[10][1][10]) begin
        scalar_argdone [10][1][10] = 1;
    end
    scalar_adr[10][1][10] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][10]) begin
        scalar_argVld[10][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[10][1][10] = 1;
    end

    //------WRITE (scalar, global adr = 40) comb block-----//
    //s = 10; r = 1; a = 1;
    if (scalar_argAck [10][1][1]) begin
        scalar_argVld [10][1][1] = 0;
        scalar_argAckdone [10][1][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_qp_block_mask_o_ap_vld_r) begin
        scalar_argVld [10][1][1] = 1;
        scalar_argAckdone [10][1][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][1] = hls_coding_quadtree_hls_dup1_qp_block_mask_o_r;
    scalar_adr    [10][1][1] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 308) comb block-----//
    //s = 13; r = 0; a = 10;
    if (scalar_rdat_vld_r[13][0][10]) begin
        scalar_argdone [13][0][10] = 1;
    end
    scalar_adr[13][0][10] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][10]) begin
        scalar_argVld[13][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[13][0][10] = 1;
    end

    //------WRITE (scalar, global adr = 308) comb block-----//
    //s = 13; r = 0; a = 1;
    if (scalar_argAck [13][0][1]) begin
        scalar_argVld [13][0][1] = 0;
        scalar_argAckdone [13][0][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_cb_size_split_o_ap_vld_r) begin
        scalar_argVld [13][0][1] = 1;
        scalar_argAckdone [13][0][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][1] = hls_coding_quadtree_hls_dup1_cb_size_split_o_r;
    scalar_adr    [13][0][1] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 0; a = 8;
    if (scalar_rdat_vld_r[28][0][8]) begin
        scalar_argdone [28][0][8] = 1;
    end
    scalar_adr[28][0][8] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][8]) begin
        scalar_argVld[28][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[28][0][8] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 0; a = 6;
    if (scalar_rdat_vld_r[2][0][6]) begin
        scalar_argdone [2][0][6] = 1;
    end
    scalar_adr[2][0][6] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][6]) begin
        scalar_argVld[2][0][6] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[2][0][6] = 1;
    end

    //------WRITE (scalar, global adr = 476) comb block-----//
    //s = 23; r = 0; a = 1;
    if (scalar_argAck [23][0][1]) begin
        scalar_argVld [23][0][1] = 0;
        scalar_argAckdone [23][0][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_ap_vld_r) begin
        scalar_argVld [23][0][1] = 1;
        scalar_argAckdone [23][0][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][1] = hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_r;
    scalar_adr    [23][0][1] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 468) comb block-----//
    //s = 21; r = 1; a = 1;
    if (scalar_argAck [21][1][1]) begin
        scalar_argVld [21][1][1] = 0;
        scalar_argAckdone [21][1][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_ap_vld_r) begin
        scalar_argVld [21][1][1] = 1;
        scalar_argAckdone [21][1][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][1] = hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_r;
    scalar_adr    [21][1][1] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 472) comb block-----//
    //s = 22; r = 1; a = 1;
    if (scalar_argAck [22][1][1]) begin
        scalar_argVld [22][1][1] = 0;
        scalar_argAckdone [22][1][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_ap_vld_r) begin
        scalar_argVld [22][1][1] = 1;
        scalar_argAckdone [22][1][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][1] = hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_r;
    scalar_adr    [22][1][1] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 464) comb block-----//
    //s = 20; r = 1; a = 1;
    if (scalar_argAck [20][1][1]) begin
        scalar_argVld [20][1][1] = 0;
        scalar_argAckdone [20][1][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_depth_ap_vld_r) begin
        scalar_argVld [20][1][1] = 1;
        scalar_argAckdone [20][1][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][1] = hls_coding_quadtree_hls_dup1_depth_r;
    scalar_adr    [20][1][1] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 7;
    if (scalar_rdat_vld_r[24][1][7]) begin
        scalar_argdone [24][1][7] = 1;
    end
    scalar_adr[24][1][7] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][7]) begin
        scalar_argVld[24][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[24][1][7] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 9;
    if (scalar_rdat_vld_r[23][1][9]) begin
        scalar_argdone [23][1][9] = 1;
    end
    scalar_adr[23][1][9] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][9]) begin
        scalar_argVld[23][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[23][1][9] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 1; a = 7;
    if (scalar_rdat_vld_r[11][1][7]) begin
        scalar_argdone [11][1][7] = 1;
    end
    scalar_adr[11][1][7] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][7]) begin
        scalar_argVld[11][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[11][1][7] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 1; a = 9;
    if (scalar_rdat_vld_r[13][1][9]) begin
        scalar_argdone [13][1][9] = 1;
    end
    scalar_adr[13][1][9] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][9]) begin
        scalar_argVld[13][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[13][1][9] = 1;
    end

    //------READ (scalar, global adr = 448) comb block-----//
    //s = 16; r = 0; a = 5;
    if (scalar_rdat_vld_r[16][0][5]) begin
        scalar_argdone [16][0][5] = 1;
    end
    scalar_adr[16][0][5] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][5]) begin
        scalar_argVld[16][0][5] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[16][0][5] = 1;
    end

    //------READ (scalar, global adr = 432) comb block-----//
    //s = 12; r = 1; a = 8;
    if (scalar_rdat_vld_r[12][1][8]) begin
        scalar_argdone [12][1][8] = 1;
    end
    scalar_adr[12][1][8] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][8]) begin
        scalar_argVld[12][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[12][1][8] = 1;
    end

    //------READ (scalar, global adr = 1280) comb block-----//
    //s = 0; r = 1; a = 12;
    if (scalar_rdat_vld_r[0][1][12]) begin
        scalar_argdone [0][1][12] = 1;
    end
    scalar_adr[0][1][12] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][12]) begin
        scalar_argVld[0][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[0][1][12] = 1;
    end

    if (ap_arb_ret[hls_coding_quadtree_hls_dup1] & ~ap_arb_ret_r[hls_coding_quadtree_hls_dup1]) begin
        ap_arb_ret_running[hls_coding_quadtree_hls_dup1] = 1;
        hls_coding_quadtree_hls_dup1_ready = 0;
    end

    scalar_argAckdone_all[hls_coding_quadtree_hls_dup1] = scalar_argAckdone[11][1][0] &
                                                scalar_argAckdone[12][1][0] &
                                                scalar_argAckdone[14][0][1] &
                                                scalar_argAckdone[15][0][1] &
                                                scalar_argAckdone[9][0][1] &
                                                scalar_argAckdone[10][0][1] &
                                                scalar_argAckdone[7][1][0] &
                                                scalar_argAckdone[10][1][1] &
                                                scalar_argAckdone[13][0][1] &
                                                scalar_argAckdone[23][0][1] &
                                                scalar_argAckdone[21][1][1] &
                                                scalar_argAckdone[22][1][1] &
                                                scalar_argAckdone[20][1][1];
    if (ap_arb_ret_running[hls_coding_quadtree_hls_dup1] & scalar_argAckdone_all[hls_coding_quadtree_hls_dup1] &~ ap_arb_reload_running_r[hls_coding_quadtree_hls_dup1]) begin
        ap_arb_reload[hls_coding_quadtree_hls_dup1] = 1;
        ap_arb_reload_running[hls_coding_quadtree_hls_dup1] = 1;
    end

    if (ap_arb_start[hls_coding_quadtree_hls_dup1] &~ ap_arb_start_r[hls_coding_quadtree_hls_dup1]) begin
        ap_arb_start_running[hls_coding_quadtree_hls_dup1] = 1;
    end

    if (ap_arb_start_running[hls_coding_quadtree_hls_dup1] & ~scalar_writing_300& ~scalar_writing_304& ~scalar_writing_312& ~scalar_writing_316& ~scalar_writing_292& ~scalar_writing_296& ~scalar_writing_536& ~scalar_writing_40& ~scalar_writing_308& ~scalar_writing_608& ~scalar_writing_604) begin
        ap_arb_start_running[hls_coding_quadtree_hls_dup1] = 0;
        ap_arb_reload[hls_coding_quadtree_hls_dup1] = 1;
    end

    scalar_argdone_all[hls_coding_quadtree_hls_dup1] = scalar_argdone[11][1][6] &
                                                                scalar_argdone[12][0][9] &
                                                                scalar_argdone[14][0][9] &
                                                                scalar_argdone[15][0][7] &
                                                                scalar_argdone[6][1][8] &
                                                                scalar_argdone[19][1][5] &
                                                                scalar_argdone[9][0][10] &
                                                                scalar_argdone[10][0][11] &
                                                                scalar_argdone[11][0][8] &
                                                                scalar_argdone[21][1][10] &
                                                                scalar_argdone[26][1][7] &
                                                                scalar_argdone[6][0][9] &
                                                                scalar_argdone[10][1][10] &
                                                                scalar_argdone[13][0][10] &
                                                                scalar_argdone[28][0][8] &
                                                                scalar_argdone[2][0][6] &
                                                                scalar_argdone[24][1][7] &
                                                                scalar_argdone[23][1][9] &
                                                                scalar_argdone[11][1][7] &
                                                                scalar_argdone[13][1][9] &
                                                                scalar_argdone[16][0][5] &
                                                                scalar_argdone[12][1][8] &
                                                                scalar_argdone[0][1][12];

    if (scalar_argdone_all_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argdone[11][1][6] = 0;
        scalar_argdone[12][0][9] = 0;
        scalar_argdone[14][0][9] = 0;
        scalar_argdone[15][0][7] = 0;
        scalar_argdone[6][1][8] = 0;
        scalar_argdone[19][1][5] = 0;
        scalar_argdone[9][0][10] = 0;
        scalar_argdone[10][0][11] = 0;
        scalar_argdone[11][0][8] = 0;
        scalar_argdone[21][1][10] = 0;
        scalar_argdone[26][1][7] = 0;
        scalar_argdone[6][0][9] = 0;
        scalar_argdone[10][1][10] = 0;
        scalar_argdone[13][0][10] = 0;
        scalar_argdone[28][0][8] = 0;
        scalar_argdone[2][0][6] = 0;
        scalar_argdone[24][1][7] = 0;
        scalar_argdone[23][1][9] = 0;
        scalar_argdone[11][1][7] = 0;
        scalar_argdone[13][1][9] = 0;
        scalar_argdone[16][0][5] = 0;
        scalar_argdone[12][1][8] = 0;
        scalar_argdone[0][1][12] = 0;

        if (ap_arb_start_r[hls_coding_quadtree_hls_dup1] & ~ap_running_r[hls_coding_quadtree_hls_dup1]) begin
            ap_start[hls_coding_quadtree_hls_dup1] = 1;
            ap_running[hls_coding_quadtree_hls_dup1] = 1;
        end
        else if (ap_arb_ret_running_r[hls_coding_quadtree_hls_dup1]) begin
            ap_arb_ret_running[hls_coding_quadtree_hls_dup1] = 0;
            ap_arb_reload_running[hls_coding_quadtree_hls_dup1] = 0;
            hls_coding_quadtree_hls_dup1_ready = 1;
        end
    end

    if (ap_start_r[hls_coding_quadtree_hls_dup1] & ap_ready_r[hls_coding_quadtree_hls_dup1]) begin
        ap_start[hls_coding_quadtree_hls_dup1] = 0;
    end

    if (ap_done_r[hls_coding_quadtree_hls_dup1]) begin
        ap_running[hls_coding_quadtree_hls_dup1] = 0;
    end
`endif
    //============================================================
    //hls_coding_quadtree_hls_dup2       (f = 16)
    //============================================================
`ifdef enable_connect_hls_coding_quadtree_hls_dup2
    //------READ (scalar, global adr = 300) comb block-----//
    //s = 11; r = 0; a = 9;
    if (scalar_rdat_vld_r[11][0][9]) begin
        scalar_argdone [11][0][9] = 1;
    end
    scalar_adr[11][0][9] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][9]) begin
        scalar_argVld[11][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[11][0][9] = 1;
    end

    //------WRITE (scalar, global adr = 300) comb block-----//
    //s = 11; r = 0; a = 1;
    if (scalar_argAck [11][0][1]) begin
        scalar_argVld [11][0][1] = 0;
        scalar_argAckdone [11][0][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_x1_o_ap_vld_r) begin
        scalar_argVld [11][0][1] = 1;
        scalar_argAckdone [11][0][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][0][1] = hls_coding_quadtree_hls_dup2_x1_o_r;
    scalar_adr    [11][0][1] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 304) comb block-----//
    //s = 12; r = 0; a = 10;
    if (scalar_rdat_vld_r[12][0][10]) begin
        scalar_argdone [12][0][10] = 1;
    end
    scalar_adr[12][0][10] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][10]) begin
        scalar_argVld[12][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[12][0][10] = 1;
    end

    //------WRITE (scalar, global adr = 304) comb block-----//
    //s = 12; r = 0; a = 1;
    if (scalar_argAck [12][0][1]) begin
        scalar_argVld [12][0][1] = 0;
        scalar_argAckdone [12][0][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_y1_o_ap_vld_r) begin
        scalar_argVld [12][0][1] = 1;
        scalar_argAckdone [12][0][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][1] = hls_coding_quadtree_hls_dup2_y1_o_r;
    scalar_adr    [12][0][1] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 312) comb block-----//
    //s = 14; r = 1; a = 8;
    if (scalar_rdat_vld_r[14][1][8]) begin
        scalar_argdone [14][1][8] = 1;
    end
    scalar_adr[14][1][8] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][8]) begin
        scalar_argVld[14][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[14][1][8] = 1;
    end

    //------WRITE (scalar, global adr = 312) comb block-----//
    //s = 14; r = 1; a = 1;
    if (scalar_argAck [14][1][1]) begin
        scalar_argVld [14][1][1] = 0;
        scalar_argAckdone [14][1][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_ap_vld_r) begin
        scalar_argVld [14][1][1] = 1;
        scalar_argAckdone [14][1][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][1] = hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_r;
    scalar_adr    [14][1][1] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 316) comb block-----//
    //s = 15; r = 1; a = 6;
    if (scalar_rdat_vld_r[15][1][6]) begin
        scalar_argdone [15][1][6] = 1;
    end
    scalar_adr[15][1][6] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][6]) begin
        scalar_argVld[15][1][6] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[15][1][6] = 1;
    end

    //------WRITE (scalar, global adr = 316) comb block-----//
    //s = 15; r = 1; a = 1;
    if (scalar_argAck [15][1][1]) begin
        scalar_argVld [15][1][1] = 0;
        scalar_argAckdone [15][1][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_ap_vld_r) begin
        scalar_argVld [15][1][1] = 1;
        scalar_argAckdone [15][1][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][1] = hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_r;
    scalar_adr    [15][1][1] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 1; a = 9;
    if (scalar_rdat_vld_r[6][1][9]) begin
        scalar_argdone [6][1][9] = 1;
    end
    scalar_adr[6][1][9] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][9]) begin
        scalar_argVld[6][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[6][1][9] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 0; a = 6;
    if (scalar_rdat_vld_r[19][0][6]) begin
        scalar_argdone [19][0][6] = 1;
    end
    scalar_adr[19][0][6] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][6]) begin
        scalar_argVld[19][0][6] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[19][0][6] = 1;
    end

    //------READ (scalar, global adr = 292) comb block-----//
    //s = 9; r = 1; a = 10;
    if (scalar_rdat_vld_r[9][1][10]) begin
        scalar_argdone [9][1][10] = 1;
    end
    scalar_adr[9][1][10] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][10]) begin
        scalar_argVld[9][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[9][1][10] = 1;
    end

    //------WRITE (scalar, global adr = 292) comb block-----//
    //s = 9; r = 1; a = 1;
    if (scalar_argAck [9][1][1]) begin
        scalar_argVld [9][1][1] = 0;
        scalar_argAckdone [9][1][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_split_cu_flag_o_ap_vld_r) begin
        scalar_argVld [9][1][1] = 1;
        scalar_argAckdone [9][1][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][1] = hls_coding_quadtree_hls_dup2_split_cu_flag_o_r;
    scalar_adr    [9][1][1] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 296) comb block-----//
    //s = 10; r = 0; a = 12;
    if (scalar_rdat_vld_r[10][0][12]) begin
        scalar_argdone [10][0][12] = 1;
    end
    scalar_adr[10][0][12] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][12]) begin
        scalar_argVld[10][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[10][0][12] = 1;
    end

    //------WRITE (scalar, global adr = 296) comb block-----//
    //s = 10; r = 0; a = 2;
    if (scalar_argAck [10][0][2]) begin
        scalar_argVld [10][0][2] = 0;
        scalar_argAckdone [10][0][2] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_more_data_o_ap_vld_r) begin
        scalar_argVld [10][0][2] = 1;
        scalar_argAckdone [10][0][2] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][2] = hls_coding_quadtree_hls_dup2_more_data_o_r;
    scalar_adr    [10][0][2] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1324) comb block-----//
    //s = 11; r = 1; a = 8;
    if (scalar_rdat_vld_r[11][1][8]) begin
        scalar_argdone [11][1][8] = 1;
    end
    scalar_adr[11][1][8] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][8]) begin
        scalar_argVld[11][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[11][1][8] = 1;
    end

    //------READ (scalar, global adr = 1236) comb block-----//
    //s = 21; r = 0; a = 12;
    if (scalar_rdat_vld_r[21][0][12]) begin
        scalar_argdone [21][0][12] = 1;
    end
    scalar_adr[21][0][12] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][12]) begin
        scalar_argVld[21][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[21][0][12] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 9;
    if (scalar_rdat_vld_r[26][0][9]) begin
        scalar_argdone [26][0][9] = 1;
    end
    scalar_adr[26][0][9] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][9]) begin
        scalar_argVld[26][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[26][0][9] = 1;
    end

    //------WRITE (scalar, global adr = 540) comb block-----//
    //s = 7; r = 0; a = 1;
    if (scalar_argAck [7][0][1]) begin
        scalar_argVld [7][0][1] = 0;
        scalar_argAckdone [7][0][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_qPy_pred_ap_vld_r) begin
        scalar_argVld [7][0][1] = 1;
        scalar_argAckdone [7][0][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][1] = hls_coding_quadtree_hls_dup2_qPy_pred_r;
    scalar_adr    [7][0][1] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 0; a = 10;
    if (scalar_rdat_vld_r[6][0][10]) begin
        scalar_argdone [6][0][10] = 1;
    end
    scalar_adr[6][0][10] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][10]) begin
        scalar_argVld[6][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[6][0][10] = 1;
    end

    //------READ (scalar, global adr = 40) comb block-----//
    //s = 10; r = 1; a = 11;
    if (scalar_rdat_vld_r[10][1][11]) begin
        scalar_argdone [10][1][11] = 1;
    end
    scalar_adr[10][1][11] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][11]) begin
        scalar_argVld[10][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[10][1][11] = 1;
    end

    //------WRITE (scalar, global adr = 40) comb block-----//
    //s = 10; r = 1; a = 2;
    if (scalar_argAck [10][1][2]) begin
        scalar_argVld [10][1][2] = 0;
        scalar_argAckdone [10][1][2] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_qp_block_mask_o_ap_vld_r) begin
        scalar_argVld [10][1][2] = 1;
        scalar_argAckdone [10][1][2] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][2] = hls_coding_quadtree_hls_dup2_qp_block_mask_o_r;
    scalar_adr    [10][1][2] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 308) comb block-----//
    //s = 13; r = 0; a = 11;
    if (scalar_rdat_vld_r[13][0][11]) begin
        scalar_argdone [13][0][11] = 1;
    end
    scalar_adr[13][0][11] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][11]) begin
        scalar_argVld[13][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[13][0][11] = 1;
    end

    //------WRITE (scalar, global adr = 308) comb block-----//
    //s = 13; r = 1; a = 1;
    if (scalar_argAck [13][1][1]) begin
        scalar_argVld [13][1][1] = 0;
        scalar_argAckdone [13][1][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_cb_size_split_o_ap_vld_r) begin
        scalar_argVld [13][1][1] = 1;
        scalar_argAckdone [13][1][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][1] = hls_coding_quadtree_hls_dup2_cb_size_split_o_r;
    scalar_adr    [13][1][1] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 1; a = 8;
    if (scalar_rdat_vld_r[28][1][8]) begin
        scalar_argdone [28][1][8] = 1;
    end
    scalar_adr[28][1][8] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][8]) begin
        scalar_argVld[28][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[28][1][8] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 1; a = 5;
    if (scalar_rdat_vld_r[2][1][5]) begin
        scalar_argdone [2][1][5] = 1;
    end
    scalar_adr[2][1][5] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][5]) begin
        scalar_argVld[2][1][5] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[2][1][5] = 1;
    end

    //------WRITE (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 1;
    if (scalar_argAck [23][1][1]) begin
        scalar_argVld [23][1][1] = 0;
        scalar_argAckdone [23][1][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_ap_vld_r) begin
        scalar_argVld [23][1][1] = 1;
        scalar_argAckdone [23][1][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][1][1] = hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_r;
    scalar_adr    [23][1][1] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 468) comb block-----//
    //s = 21; r = 0; a = 2;
    if (scalar_argAck [21][0][2]) begin
        scalar_argVld [21][0][2] = 0;
        scalar_argAckdone [21][0][2] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_ap_vld_r) begin
        scalar_argVld [21][0][2] = 1;
        scalar_argAckdone [21][0][2] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][2] = hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_r;
    scalar_adr    [21][0][2] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 472) comb block-----//
    //s = 22; r = 0; a = 2;
    if (scalar_argAck [22][0][2]) begin
        scalar_argVld [22][0][2] = 0;
        scalar_argAckdone [22][0][2] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_ap_vld_r) begin
        scalar_argVld [22][0][2] = 1;
        scalar_argAckdone [22][0][2] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][2] = hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_r;
    scalar_adr    [22][0][2] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 464) comb block-----//
    //s = 20; r = 0; a = 2;
    if (scalar_argAck [20][0][2]) begin
        scalar_argVld [20][0][2] = 0;
        scalar_argAckdone [20][0][2] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_depth_ap_vld_r) begin
        scalar_argVld [20][0][2] = 1;
        scalar_argAckdone [20][0][2] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][2] = hls_coding_quadtree_hls_dup2_depth_r;
    scalar_adr    [20][0][2] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 0; a = 9;
    if (scalar_rdat_vld_r[24][0][9]) begin
        scalar_argdone [24][0][9] = 1;
    end
    scalar_adr[24][0][9] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][9]) begin
        scalar_argVld[24][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[24][0][9] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 0; a = 11;
    if (scalar_rdat_vld_r[23][0][11]) begin
        scalar_argdone [23][0][11] = 1;
    end
    scalar_adr[23][0][11] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][11]) begin
        scalar_argVld[23][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[23][0][11] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 0; a = 10;
    if (scalar_rdat_vld_r[11][0][10]) begin
        scalar_argdone [11][0][10] = 1;
    end
    scalar_adr[11][0][10] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][10]) begin
        scalar_argVld[11][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[11][0][10] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 1; a = 10;
    if (scalar_rdat_vld_r[13][1][10]) begin
        scalar_argdone [13][1][10] = 1;
    end
    scalar_adr[13][1][10] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][10]) begin
        scalar_argVld[13][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[13][1][10] = 1;
    end

    //------READ (scalar, global adr = 448) comb block-----//
    //s = 16; r = 1; a = 5;
    if (scalar_rdat_vld_r[16][1][5]) begin
        scalar_argdone [16][1][5] = 1;
    end
    scalar_adr[16][1][5] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][5]) begin
        scalar_argVld[16][1][5] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[16][1][5] = 1;
    end

    //------READ (scalar, global adr = 432) comb block-----//
    //s = 12; r = 1; a = 9;
    if (scalar_rdat_vld_r[12][1][9]) begin
        scalar_argdone [12][1][9] = 1;
    end
    scalar_adr[12][1][9] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][9]) begin
        scalar_argVld[12][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[12][1][9] = 1;
    end

    //------READ (scalar, global adr = 1280) comb block-----//
    //s = 0; r = 0; a = 14;
    if (scalar_rdat_vld_r[0][0][14]) begin
        scalar_argdone [0][0][14] = 1;
    end
    scalar_adr[0][0][14] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][14]) begin
        scalar_argVld[0][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[0][0][14] = 1;
    end

    if (ap_arb_ret[hls_coding_quadtree_hls_dup2] & ~ap_arb_ret_r[hls_coding_quadtree_hls_dup2]) begin
        ap_arb_ret_running[hls_coding_quadtree_hls_dup2] = 1;
        hls_coding_quadtree_hls_dup2_ready = 0;
    end

    scalar_argAckdone_all[hls_coding_quadtree_hls_dup2] = scalar_argAckdone[11][0][1] &
                                                scalar_argAckdone[12][0][1] &
                                                scalar_argAckdone[14][1][1] &
                                                scalar_argAckdone[15][1][1] &
                                                scalar_argAckdone[9][1][1] &
                                                scalar_argAckdone[10][0][2] &
                                                scalar_argAckdone[7][0][1] &
                                                scalar_argAckdone[10][1][2] &
                                                scalar_argAckdone[13][1][1] &
                                                scalar_argAckdone[23][1][1] &
                                                scalar_argAckdone[21][0][2] &
                                                scalar_argAckdone[22][0][2] &
                                                scalar_argAckdone[20][0][2];
    if (ap_arb_ret_running[hls_coding_quadtree_hls_dup2] & scalar_argAckdone_all[hls_coding_quadtree_hls_dup2] &~ ap_arb_reload_running_r[hls_coding_quadtree_hls_dup2]) begin
        ap_arb_reload[hls_coding_quadtree_hls_dup2] = 1;
        ap_arb_reload_running[hls_coding_quadtree_hls_dup2] = 1;
    end

    if (ap_arb_start[hls_coding_quadtree_hls_dup2] &~ ap_arb_start_r[hls_coding_quadtree_hls_dup2]) begin
        ap_arb_start_running[hls_coding_quadtree_hls_dup2] = 1;
    end

    if (ap_arb_start_running[hls_coding_quadtree_hls_dup2] & ~scalar_writing_300& ~scalar_writing_304& ~scalar_writing_312& ~scalar_writing_316& ~scalar_writing_292& ~scalar_writing_296& ~scalar_writing_536& ~scalar_writing_40& ~scalar_writing_308& ~scalar_writing_608& ~scalar_writing_604) begin
        ap_arb_start_running[hls_coding_quadtree_hls_dup2] = 0;
        ap_arb_reload[hls_coding_quadtree_hls_dup2] = 1;
    end

    scalar_argdone_all[hls_coding_quadtree_hls_dup2] = scalar_argdone[11][0][9] &
                                                                scalar_argdone[12][0][10] &
                                                                scalar_argdone[14][1][8] &
                                                                scalar_argdone[15][1][6] &
                                                                scalar_argdone[6][1][9] &
                                                                scalar_argdone[19][0][6] &
                                                                scalar_argdone[9][1][10] &
                                                                scalar_argdone[10][0][12] &
                                                                scalar_argdone[11][1][8] &
                                                                scalar_argdone[21][0][12] &
                                                                scalar_argdone[26][0][9] &
                                                                scalar_argdone[6][0][10] &
                                                                scalar_argdone[10][1][11] &
                                                                scalar_argdone[13][0][11] &
                                                                scalar_argdone[28][1][8] &
                                                                scalar_argdone[2][1][5] &
                                                                scalar_argdone[24][0][9] &
                                                                scalar_argdone[23][0][11] &
                                                                scalar_argdone[11][0][10] &
                                                                scalar_argdone[13][1][10] &
                                                                scalar_argdone[16][1][5] &
                                                                scalar_argdone[12][1][9] &
                                                                scalar_argdone[0][0][14];

    if (scalar_argdone_all_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argdone[11][0][9] = 0;
        scalar_argdone[12][0][10] = 0;
        scalar_argdone[14][1][8] = 0;
        scalar_argdone[15][1][6] = 0;
        scalar_argdone[6][1][9] = 0;
        scalar_argdone[19][0][6] = 0;
        scalar_argdone[9][1][10] = 0;
        scalar_argdone[10][0][12] = 0;
        scalar_argdone[11][1][8] = 0;
        scalar_argdone[21][0][12] = 0;
        scalar_argdone[26][0][9] = 0;
        scalar_argdone[6][0][10] = 0;
        scalar_argdone[10][1][11] = 0;
        scalar_argdone[13][0][11] = 0;
        scalar_argdone[28][1][8] = 0;
        scalar_argdone[2][1][5] = 0;
        scalar_argdone[24][0][9] = 0;
        scalar_argdone[23][0][11] = 0;
        scalar_argdone[11][0][10] = 0;
        scalar_argdone[13][1][10] = 0;
        scalar_argdone[16][1][5] = 0;
        scalar_argdone[12][1][9] = 0;
        scalar_argdone[0][0][14] = 0;

        if (ap_arb_start_r[hls_coding_quadtree_hls_dup2] & ~ap_running_r[hls_coding_quadtree_hls_dup2]) begin
            ap_start[hls_coding_quadtree_hls_dup2] = 1;
            ap_running[hls_coding_quadtree_hls_dup2] = 1;
        end
        else if (ap_arb_ret_running_r[hls_coding_quadtree_hls_dup2]) begin
            ap_arb_ret_running[hls_coding_quadtree_hls_dup2] = 0;
            ap_arb_reload_running[hls_coding_quadtree_hls_dup2] = 0;
            hls_coding_quadtree_hls_dup2_ready = 1;
        end
    end

    if (ap_start_r[hls_coding_quadtree_hls_dup2] & ap_ready_r[hls_coding_quadtree_hls_dup2]) begin
        ap_start[hls_coding_quadtree_hls_dup2] = 0;
    end

    if (ap_done_r[hls_coding_quadtree_hls_dup2]) begin
        ap_running[hls_coding_quadtree_hls_dup2] = 0;
    end
`endif
    //============================================================
    //hls_coding_quadtree_hls_dup3       (f = 17)
    //============================================================
`ifdef enable_connect_hls_coding_quadtree_hls_dup3
    //------READ (scalar, global adr = 300) comb block-----//
    //s = 11; r = 1; a = 9;
    if (scalar_rdat_vld_r[11][1][9]) begin
        scalar_argdone [11][1][9] = 1;
    end
    scalar_adr[11][1][9] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][9]) begin
        scalar_argVld[11][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[11][1][9] = 1;
    end

    //------WRITE (scalar, global adr = 300) comb block-----//
    //s = 11; r = 1; a = 1;
    if (scalar_argAck [11][1][1]) begin
        scalar_argVld [11][1][1] = 0;
        scalar_argAckdone [11][1][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_x1_o_ap_vld_r) begin
        scalar_argVld [11][1][1] = 1;
        scalar_argAckdone [11][1][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][1][1] = hls_coding_quadtree_hls_dup3_x1_o_r;
    scalar_adr    [11][1][1] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 304) comb block-----//
    //s = 12; r = 0; a = 11;
    if (scalar_rdat_vld_r[12][0][11]) begin
        scalar_argdone [12][0][11] = 1;
    end
    scalar_adr[12][0][11] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][11]) begin
        scalar_argVld[12][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[12][0][11] = 1;
    end

    //------WRITE (scalar, global adr = 304) comb block-----//
    //s = 12; r = 1; a = 1;
    if (scalar_argAck [12][1][1]) begin
        scalar_argVld [12][1][1] = 0;
        scalar_argAckdone [12][1][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_y1_o_ap_vld_r) begin
        scalar_argVld [12][1][1] = 1;
        scalar_argAckdone [12][1][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][1] = hls_coding_quadtree_hls_dup3_y1_o_r;
    scalar_adr    [12][1][1] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 312) comb block-----//
    //s = 14; r = 0; a = 10;
    if (scalar_rdat_vld_r[14][0][10]) begin
        scalar_argdone [14][0][10] = 1;
    end
    scalar_adr[14][0][10] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][10]) begin
        scalar_argVld[14][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[14][0][10] = 1;
    end

    //------WRITE (scalar, global adr = 312) comb block-----//
    //s = 14; r = 0; a = 2;
    if (scalar_argAck [14][0][2]) begin
        scalar_argVld [14][0][2] = 0;
        scalar_argAckdone [14][0][2] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_ap_vld_r) begin
        scalar_argVld [14][0][2] = 1;
        scalar_argAckdone [14][0][2] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][2] = hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_r;
    scalar_adr    [14][0][2] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 316) comb block-----//
    //s = 15; r = 0; a = 8;
    if (scalar_rdat_vld_r[15][0][8]) begin
        scalar_argdone [15][0][8] = 1;
    end
    scalar_adr[15][0][8] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][8]) begin
        scalar_argVld[15][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[15][0][8] = 1;
    end

    //------WRITE (scalar, global adr = 316) comb block-----//
    //s = 15; r = 0; a = 2;
    if (scalar_argAck [15][0][2]) begin
        scalar_argVld [15][0][2] = 0;
        scalar_argAckdone [15][0][2] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_ap_vld_r) begin
        scalar_argVld [15][0][2] = 1;
        scalar_argAckdone [15][0][2] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][2] = hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_r;
    scalar_adr    [15][0][2] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 1; a = 10;
    if (scalar_rdat_vld_r[6][1][10]) begin
        scalar_argdone [6][1][10] = 1;
    end
    scalar_adr[6][1][10] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][10]) begin
        scalar_argVld[6][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[6][1][10] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 1; a = 6;
    if (scalar_rdat_vld_r[19][1][6]) begin
        scalar_argdone [19][1][6] = 1;
    end
    scalar_adr[19][1][6] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][6]) begin
        scalar_argVld[19][1][6] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[19][1][6] = 1;
    end

    //------READ (scalar, global adr = 292) comb block-----//
    //s = 9; r = 0; a = 11;
    if (scalar_rdat_vld_r[9][0][11]) begin
        scalar_argdone [9][0][11] = 1;
    end
    scalar_adr[9][0][11] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][11]) begin
        scalar_argVld[9][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[9][0][11] = 1;
    end

    //------WRITE (scalar, global adr = 292) comb block-----//
    //s = 9; r = 0; a = 2;
    if (scalar_argAck [9][0][2]) begin
        scalar_argVld [9][0][2] = 0;
        scalar_argAckdone [9][0][2] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_split_cu_flag_o_ap_vld_r) begin
        scalar_argVld [9][0][2] = 1;
        scalar_argAckdone [9][0][2] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][2] = hls_coding_quadtree_hls_dup3_split_cu_flag_o_r;
    scalar_adr    [9][0][2] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 296) comb block-----//
    //s = 10; r = 0; a = 13;
    if (scalar_rdat_vld_r[10][0][13]) begin
        scalar_argdone [10][0][13] = 1;
    end
    scalar_adr[10][0][13] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][13]) begin
        scalar_argVld[10][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[10][0][13] = 1;
    end

    //------WRITE (scalar, global adr = 296) comb block-----//
    //s = 10; r = 0; a = 3;
    if (scalar_argAck [10][0][3]) begin
        scalar_argVld [10][0][3] = 0;
        scalar_argAckdone [10][0][3] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_more_data_o_ap_vld_r) begin
        scalar_argVld [10][0][3] = 1;
        scalar_argAckdone [10][0][3] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][3] = hls_coding_quadtree_hls_dup3_more_data_o_r;
    scalar_adr    [10][0][3] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1324) comb block-----//
    //s = 11; r = 0; a = 11;
    if (scalar_rdat_vld_r[11][0][11]) begin
        scalar_argdone [11][0][11] = 1;
    end
    scalar_adr[11][0][11] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][11]) begin
        scalar_argVld[11][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[11][0][11] = 1;
    end

    //------READ (scalar, global adr = 1236) comb block-----//
    //s = 21; r = 1; a = 11;
    if (scalar_rdat_vld_r[21][1][11]) begin
        scalar_argdone [21][1][11] = 1;
    end
    scalar_adr[21][1][11] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][11]) begin
        scalar_argVld[21][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[21][1][11] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 8;
    if (scalar_rdat_vld_r[26][1][8]) begin
        scalar_argdone [26][1][8] = 1;
    end
    scalar_adr[26][1][8] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][8]) begin
        scalar_argVld[26][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[26][1][8] = 1;
    end

    //------WRITE (scalar, global adr = 540) comb block-----//
    //s = 7; r = 1; a = 1;
    if (scalar_argAck [7][1][1]) begin
        scalar_argVld [7][1][1] = 0;
        scalar_argAckdone [7][1][1] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_qPy_pred_ap_vld_r) begin
        scalar_argVld [7][1][1] = 1;
        scalar_argAckdone [7][1][1] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][1] = hls_coding_quadtree_hls_dup3_qPy_pred_r;
    scalar_adr    [7][1][1] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 0; a = 11;
    if (scalar_rdat_vld_r[6][0][11]) begin
        scalar_argdone [6][0][11] = 1;
    end
    scalar_adr[6][0][11] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][11]) begin
        scalar_argVld[6][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[6][0][11] = 1;
    end

    //------READ (scalar, global adr = 40) comb block-----//
    //s = 10; r = 1; a = 12;
    if (scalar_rdat_vld_r[10][1][12]) begin
        scalar_argdone [10][1][12] = 1;
    end
    scalar_adr[10][1][12] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][12]) begin
        scalar_argVld[10][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[10][1][12] = 1;
    end

    //------WRITE (scalar, global adr = 40) comb block-----//
    //s = 10; r = 1; a = 3;
    if (scalar_argAck [10][1][3]) begin
        scalar_argVld [10][1][3] = 0;
        scalar_argAckdone [10][1][3] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_qp_block_mask_o_ap_vld_r) begin
        scalar_argVld [10][1][3] = 1;
        scalar_argAckdone [10][1][3] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][3] = hls_coding_quadtree_hls_dup3_qp_block_mask_o_r;
    scalar_adr    [10][1][3] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 308) comb block-----//
    //s = 13; r = 0; a = 12;
    if (scalar_rdat_vld_r[13][0][12]) begin
        scalar_argdone [13][0][12] = 1;
    end
    scalar_adr[13][0][12] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][12]) begin
        scalar_argVld[13][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[13][0][12] = 1;
    end

    //------WRITE (scalar, global adr = 308) comb block-----//
    //s = 13; r = 0; a = 2;
    if (scalar_argAck [13][0][2]) begin
        scalar_argVld [13][0][2] = 0;
        scalar_argAckdone [13][0][2] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_cb_size_split_o_ap_vld_r) begin
        scalar_argVld [13][0][2] = 1;
        scalar_argAckdone [13][0][2] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][2] = hls_coding_quadtree_hls_dup3_cb_size_split_o_r;
    scalar_adr    [13][0][2] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 0; a = 9;
    if (scalar_rdat_vld_r[28][0][9]) begin
        scalar_argdone [28][0][9] = 1;
    end
    scalar_adr[28][0][9] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][9]) begin
        scalar_argVld[28][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[28][0][9] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 0; a = 7;
    if (scalar_rdat_vld_r[2][0][7]) begin
        scalar_argdone [2][0][7] = 1;
    end
    scalar_adr[2][0][7] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][7]) begin
        scalar_argVld[2][0][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[2][0][7] = 1;
    end

    //------WRITE (scalar, global adr = 476) comb block-----//
    //s = 23; r = 0; a = 2;
    if (scalar_argAck [23][0][2]) begin
        scalar_argVld [23][0][2] = 0;
        scalar_argAckdone [23][0][2] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_ap_vld_r) begin
        scalar_argVld [23][0][2] = 1;
        scalar_argAckdone [23][0][2] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][2] = hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_r;
    scalar_adr    [23][0][2] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 468) comb block-----//
    //s = 21; r = 1; a = 2;
    if (scalar_argAck [21][1][2]) begin
        scalar_argVld [21][1][2] = 0;
        scalar_argAckdone [21][1][2] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_ap_vld_r) begin
        scalar_argVld [21][1][2] = 1;
        scalar_argAckdone [21][1][2] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][2] = hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_r;
    scalar_adr    [21][1][2] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 472) comb block-----//
    //s = 22; r = 1; a = 2;
    if (scalar_argAck [22][1][2]) begin
        scalar_argVld [22][1][2] = 0;
        scalar_argAckdone [22][1][2] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_ap_vld_r) begin
        scalar_argVld [22][1][2] = 1;
        scalar_argAckdone [22][1][2] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][2] = hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_r;
    scalar_adr    [22][1][2] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 464) comb block-----//
    //s = 20; r = 1; a = 2;
    if (scalar_argAck [20][1][2]) begin
        scalar_argVld [20][1][2] = 0;
        scalar_argAckdone [20][1][2] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_depth_ap_vld_r) begin
        scalar_argVld [20][1][2] = 1;
        scalar_argAckdone [20][1][2] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][2] = hls_coding_quadtree_hls_dup3_depth_r;
    scalar_adr    [20][1][2] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 8;
    if (scalar_rdat_vld_r[24][1][8]) begin
        scalar_argdone [24][1][8] = 1;
    end
    scalar_adr[24][1][8] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][8]) begin
        scalar_argVld[24][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[24][1][8] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 10;
    if (scalar_rdat_vld_r[23][1][10]) begin
        scalar_argdone [23][1][10] = 1;
    end
    scalar_adr[23][1][10] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][10]) begin
        scalar_argVld[23][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[23][1][10] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 1; a = 10;
    if (scalar_rdat_vld_r[11][1][10]) begin
        scalar_argdone [11][1][10] = 1;
    end
    scalar_adr[11][1][10] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][10]) begin
        scalar_argVld[11][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[11][1][10] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 1; a = 11;
    if (scalar_rdat_vld_r[13][1][11]) begin
        scalar_argdone [13][1][11] = 1;
    end
    scalar_adr[13][1][11] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][11]) begin
        scalar_argVld[13][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[13][1][11] = 1;
    end

    //------READ (scalar, global adr = 448) comb block-----//
    //s = 16; r = 0; a = 6;
    if (scalar_rdat_vld_r[16][0][6]) begin
        scalar_argdone [16][0][6] = 1;
    end
    scalar_adr[16][0][6] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][6]) begin
        scalar_argVld[16][0][6] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[16][0][6] = 1;
    end

    //------READ (scalar, global adr = 432) comb block-----//
    //s = 12; r = 1; a = 10;
    if (scalar_rdat_vld_r[12][1][10]) begin
        scalar_argdone [12][1][10] = 1;
    end
    scalar_adr[12][1][10] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][10]) begin
        scalar_argVld[12][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[12][1][10] = 1;
    end

    //------READ (scalar, global adr = 1280) comb block-----//
    //s = 0; r = 1; a = 13;
    if (scalar_rdat_vld_r[0][1][13]) begin
        scalar_argdone [0][1][13] = 1;
    end
    scalar_adr[0][1][13] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][13]) begin
        scalar_argVld[0][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[0][1][13] = 1;
    end

    if (ap_arb_ret[hls_coding_quadtree_hls_dup3] & ~ap_arb_ret_r[hls_coding_quadtree_hls_dup3]) begin
        ap_arb_ret_running[hls_coding_quadtree_hls_dup3] = 1;
        hls_coding_quadtree_hls_dup3_ready = 0;
    end

    scalar_argAckdone_all[hls_coding_quadtree_hls_dup3] = scalar_argAckdone[11][1][1] &
                                                scalar_argAckdone[12][1][1] &
                                                scalar_argAckdone[14][0][2] &
                                                scalar_argAckdone[15][0][2] &
                                                scalar_argAckdone[9][0][2] &
                                                scalar_argAckdone[10][0][3] &
                                                scalar_argAckdone[7][1][1] &
                                                scalar_argAckdone[10][1][3] &
                                                scalar_argAckdone[13][0][2] &
                                                scalar_argAckdone[23][0][2] &
                                                scalar_argAckdone[21][1][2] &
                                                scalar_argAckdone[22][1][2] &
                                                scalar_argAckdone[20][1][2];
    if (ap_arb_ret_running[hls_coding_quadtree_hls_dup3] & scalar_argAckdone_all[hls_coding_quadtree_hls_dup3] &~ ap_arb_reload_running_r[hls_coding_quadtree_hls_dup3]) begin
        ap_arb_reload[hls_coding_quadtree_hls_dup3] = 1;
        ap_arb_reload_running[hls_coding_quadtree_hls_dup3] = 1;
    end

    if (ap_arb_start[hls_coding_quadtree_hls_dup3] &~ ap_arb_start_r[hls_coding_quadtree_hls_dup3]) begin
        ap_arb_start_running[hls_coding_quadtree_hls_dup3] = 1;
    end

    if (ap_arb_start_running[hls_coding_quadtree_hls_dup3] & ~scalar_writing_300& ~scalar_writing_304& ~scalar_writing_312& ~scalar_writing_316& ~scalar_writing_292& ~scalar_writing_296& ~scalar_writing_536& ~scalar_writing_40& ~scalar_writing_308& ~scalar_writing_608& ~scalar_writing_604) begin
        ap_arb_start_running[hls_coding_quadtree_hls_dup3] = 0;
        ap_arb_reload[hls_coding_quadtree_hls_dup3] = 1;
    end

    scalar_argdone_all[hls_coding_quadtree_hls_dup3] = scalar_argdone[11][1][9] &
                                                                scalar_argdone[12][0][11] &
                                                                scalar_argdone[14][0][10] &
                                                                scalar_argdone[15][0][8] &
                                                                scalar_argdone[6][1][10] &
                                                                scalar_argdone[19][1][6] &
                                                                scalar_argdone[9][0][11] &
                                                                scalar_argdone[10][0][13] &
                                                                scalar_argdone[11][0][11] &
                                                                scalar_argdone[21][1][11] &
                                                                scalar_argdone[26][1][8] &
                                                                scalar_argdone[6][0][11] &
                                                                scalar_argdone[10][1][12] &
                                                                scalar_argdone[13][0][12] &
                                                                scalar_argdone[28][0][9] &
                                                                scalar_argdone[2][0][7] &
                                                                scalar_argdone[24][1][8] &
                                                                scalar_argdone[23][1][10] &
                                                                scalar_argdone[11][1][10] &
                                                                scalar_argdone[13][1][11] &
                                                                scalar_argdone[16][0][6] &
                                                                scalar_argdone[12][1][10] &
                                                                scalar_argdone[0][1][13];

    if (scalar_argdone_all_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argdone[11][1][9] = 0;
        scalar_argdone[12][0][11] = 0;
        scalar_argdone[14][0][10] = 0;
        scalar_argdone[15][0][8] = 0;
        scalar_argdone[6][1][10] = 0;
        scalar_argdone[19][1][6] = 0;
        scalar_argdone[9][0][11] = 0;
        scalar_argdone[10][0][13] = 0;
        scalar_argdone[11][0][11] = 0;
        scalar_argdone[21][1][11] = 0;
        scalar_argdone[26][1][8] = 0;
        scalar_argdone[6][0][11] = 0;
        scalar_argdone[10][1][12] = 0;
        scalar_argdone[13][0][12] = 0;
        scalar_argdone[28][0][9] = 0;
        scalar_argdone[2][0][7] = 0;
        scalar_argdone[24][1][8] = 0;
        scalar_argdone[23][1][10] = 0;
        scalar_argdone[11][1][10] = 0;
        scalar_argdone[13][1][11] = 0;
        scalar_argdone[16][0][6] = 0;
        scalar_argdone[12][1][10] = 0;
        scalar_argdone[0][1][13] = 0;

        if (ap_arb_start_r[hls_coding_quadtree_hls_dup3] & ~ap_running_r[hls_coding_quadtree_hls_dup3]) begin
            ap_start[hls_coding_quadtree_hls_dup3] = 1;
            ap_running[hls_coding_quadtree_hls_dup3] = 1;
        end
        else if (ap_arb_ret_running_r[hls_coding_quadtree_hls_dup3]) begin
            ap_arb_ret_running[hls_coding_quadtree_hls_dup3] = 0;
            ap_arb_reload_running[hls_coding_quadtree_hls_dup3] = 0;
            hls_coding_quadtree_hls_dup3_ready = 1;
        end
    end

    if (ap_start_r[hls_coding_quadtree_hls_dup3] & ap_ready_r[hls_coding_quadtree_hls_dup3]) begin
        ap_start[hls_coding_quadtree_hls_dup3] = 0;
    end

    if (ap_done_r[hls_coding_quadtree_hls_dup3]) begin
        ap_running[hls_coding_quadtree_hls_dup3] = 0;
    end
`endif
    //============================================================
    //hls_coding_unit_hls       (f = 18)
    //============================================================
`ifdef enable_connect_hls_coding_unit_hls
    //------READ (scalar, global adr = 420) comb block-----//
    //s = 9; r = 1; a = 11;
    if (scalar_rdat_vld_r[9][1][11]) begin
        scalar_argdone [9][1][11] = 1;
    end
    scalar_adr[9][1][11] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][11]) begin
        scalar_argVld[9][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[9][1][11] = 1;
    end

    //------READ (scalar, global adr = 380) comb block-----//
    //s = 31; r = 0; a = 4;
    if (scalar_rdat_vld_r[31][0][4]) begin
        scalar_argdone [31][0][4] = 1;
    end
    scalar_adr[31][0][4] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][4]) begin
        scalar_argVld[31][0][4] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[31][0][4] = 1;
    end

    //------READ (scalar, global adr = 1160) comb block-----//
    //s = 2; r = 1; a = 6;
    if (scalar_rdat_vld_r[2][1][6]) begin
        scalar_argdone [2][1][6] = 1;
    end
    scalar_adr[2][1][6] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][6]) begin
        scalar_argVld[2][1][6] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[2][1][6] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 0; a = 12;
    if (scalar_rdat_vld_r[11][0][12]) begin
        scalar_argdone [11][0][12] = 1;
    end
    scalar_adr[11][0][12] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][12]) begin
        scalar_argVld[11][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[11][0][12] = 1;
    end

    //------READ (scalar, global adr = 476) comb block-----//
    //s = 23; r = 0; a = 12;
    if (scalar_rdat_vld_r[23][0][12]) begin
        scalar_argdone [23][0][12] = 1;
    end
    scalar_adr[23][0][12] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][12]) begin
        scalar_argVld[23][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[23][0][12] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 7;
    if (scalar_rdat_vld_r[15][1][7]) begin
        scalar_argdone [15][1][7] = 1;
    end
    scalar_adr[15][1][7] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][7]) begin
        scalar_argVld[15][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[15][1][7] = 1;
    end

    //------WRITE (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 2;
    if (scalar_argAck [15][1][2]) begin
        scalar_argVld [15][1][2] = 0;
        scalar_argAckdone [15][1][2] = 1;
    end
    if (hls_coding_unit_hls_cu_transquant_bypass_flag_o_ap_vld_r) begin
        scalar_argVld [15][1][2] = 1;
        scalar_argAckdone [15][1][2] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][2] = hls_coding_unit_hls_cu_transquant_bypass_flag_o_r;
    scalar_adr    [15][1][2] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 28) comb block-----//
    //s = 7; r = 0; a = 10;
    if (scalar_rdat_vld_r[7][0][10]) begin
        scalar_argdone [7][0][10] = 1;
    end
    scalar_adr[7][0][10] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][10]) begin
        scalar_argVld[7][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[7][0][10] = 1;
    end

    //------WRITE (scalar, global adr = 28) comb block-----//
    //s = 7; r = 0; a = 2;
    if (scalar_argAck [7][0][2]) begin
        scalar_argVld [7][0][2] = 0;
        scalar_argAckdone [7][0][2] = 1;
    end
    if (hls_coding_unit_hls_pcm_flag_o_ap_vld_r) begin
        scalar_argVld [7][0][2] = 1;
        scalar_argAckdone [7][0][2] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][2] = hls_coding_unit_hls_pcm_flag_o_r;
    scalar_adr    [7][0][2] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 504) comb block-----//
    //s = 30; r = 0; a = 3;
    if (scalar_rdat_vld_r[30][0][3]) begin
        scalar_argdone [30][0][3] = 1;
    end
    scalar_adr[30][0][3] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][3]) begin
        scalar_argVld[30][0][3] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[30][0][3] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 12;
    if (scalar_rdat_vld_r[12][0][12]) begin
        scalar_argdone [12][0][12] = 1;
    end
    scalar_adr[12][0][12] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][12]) begin
        scalar_argVld[12][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[12][0][12] = 1;
    end

    //------WRITE (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 2;
    if (scalar_argAck [12][0][2]) begin
        scalar_argVld [12][0][2] = 0;
        scalar_argAckdone [12][0][2] = 1;
    end
    if (hls_coding_unit_hls_pred_mode_o_ap_vld_r) begin
        scalar_argVld [12][0][2] = 1;
        scalar_argAckdone [12][0][2] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][2] = hls_coding_unit_hls_pred_mode_o_r;
    scalar_adr    [12][0][2] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 0; a = 13;
    if (scalar_rdat_vld_r[13][0][13]) begin
        scalar_argdone [13][0][13] = 1;
    end
    scalar_adr[13][0][13] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][13]) begin
        scalar_argVld[13][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[13][0][13] = 1;
    end

    //------WRITE (scalar, global adr = 564) comb block-----//
    //s = 13; r = 1; a = 2;
    if (scalar_argAck [13][1][2]) begin
        scalar_argVld [13][1][2] = 0;
        scalar_argAckdone [13][1][2] = 1;
    end
    if (hls_coding_unit_hls_part_mode_o_ap_vld_r) begin
        scalar_argVld [13][1][2] = 1;
        scalar_argAckdone [13][1][2] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][2] = hls_coding_unit_hls_part_mode_o_r;
    scalar_adr    [13][1][2] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 576) comb block-----//
    //s = 16; r = 1; a = 0;
    if (scalar_argAck [16][1][0]) begin
        scalar_argVld [16][1][0] = 0;
        scalar_argAckdone [16][1][0] = 1;
    end
    if (hls_coding_unit_hls_max_trafo_depth_ap_vld_r) begin
        scalar_argVld [16][1][0] = 1;
        scalar_argAckdone [16][1][0] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][1][0] = hls_coding_unit_hls_max_trafo_depth_r;
    scalar_adr    [16][1][0] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 32) comb block-----//
    //s = 8; r = 1; a = 7;
    if (scalar_rdat_vld_r[8][1][7]) begin
        scalar_argdone [8][1][7] = 1;
    end
    scalar_adr[8][1][7] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][7]) begin
        scalar_argVld[8][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[8][1][7] = 1;
    end

    //------WRITE (scalar, global adr = 32) comb block-----//
    //s = 8; r = 1; a = 0;
    if (scalar_argAck [8][1][0]) begin
        scalar_argVld [8][1][0] = 0;
        scalar_argAckdone [8][1][0] = 1;
    end
    if (hls_coding_unit_hls_cb_size_o_ap_vld_r) begin
        scalar_argVld [8][1][0] = 1;
        scalar_argAckdone [8][1][0] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][0] = hls_coding_unit_hls_cb_size_o_r;
    scalar_adr    [8][1][0] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 44) comb block-----//
    //s = 11; r = 1; a = 11;
    if (scalar_rdat_vld_r[11][1][11]) begin
        scalar_argdone [11][1][11] = 1;
    end
    scalar_adr[11][1][11] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][11]) begin
        scalar_argVld[11][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[11][1][11] = 1;
    end

    //------WRITE (scalar, global adr = 44) comb block-----//
    //s = 11; r = 0; a = 2;
    if (scalar_argAck [11][0][2]) begin
        scalar_argVld [11][0][2] = 0;
        scalar_argAckdone [11][0][2] = 1;
    end
    if (hls_coding_unit_hls_idx_o_ap_vld_r) begin
        scalar_argVld [11][0][2] = 1;
        scalar_argAckdone [11][0][2] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][0][2] = hls_coding_unit_hls_idx_o_r;
    scalar_adr    [11][0][2] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1164) comb block-----//
    //s = 3; r = 0; a = 0;
    if (scalar_argAck [3][0][0]) begin
        scalar_argVld [3][0][0] = 0;
        scalar_argAckdone [3][0][0] = 1;
    end
    if (hls_coding_unit_hls_xm_xBase_ap_vld_r) begin
        scalar_argVld [3][0][0] = 1;
        scalar_argAckdone [3][0][0] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][0][0] = hls_coding_unit_hls_xm_xBase_r;
    scalar_adr    [3][0][0] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1168) comb block-----//
    //s = 4; r = 0; a = 0;
    if (scalar_argAck [4][0][0]) begin
        scalar_argVld [4][0][0] = 0;
        scalar_argAckdone [4][0][0] = 1;
    end
    if (hls_coding_unit_hls_xm_yBase_ap_vld_r) begin
        scalar_argVld [4][0][0] = 1;
        scalar_argAckdone [4][0][0] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][0][0] = hls_coding_unit_hls_xm_yBase_r;
    scalar_adr    [4][0][0] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1172) comb block-----//
    //s = 5; r = 1; a = 0;
    if (scalar_argAck [5][1][0]) begin
        scalar_argVld [5][1][0] = 0;
        scalar_argAckdone [5][1][0] = 1;
    end
    if (hls_coding_unit_hls_xm_cb_xBase_ap_vld_r) begin
        scalar_argVld [5][1][0] = 1;
        scalar_argAckdone [5][1][0] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][0] = hls_coding_unit_hls_xm_cb_xBase_r;
    scalar_adr    [5][1][0] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1176) comb block-----//
    //s = 6; r = 1; a = 0;
    if (scalar_argAck [6][1][0]) begin
        scalar_argVld [6][1][0] = 0;
        scalar_argAckdone [6][1][0] = 1;
    end
    if (hls_coding_unit_hls_xm_cb_yBase_ap_vld_r) begin
        scalar_argVld [6][1][0] = 1;
        scalar_argAckdone [6][1][0] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][0] = hls_coding_unit_hls_xm_cb_yBase_r;
    scalar_adr    [6][1][0] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1180) comb block-----//
    //s = 7; r = 1; a = 2;
    if (scalar_argAck [7][1][2]) begin
        scalar_argVld [7][1][2] = 0;
        scalar_argAckdone [7][1][2] = 1;
    end
    if (hls_coding_unit_hls_xm_log2_cb_size_ap_vld_r) begin
        scalar_argVld [7][1][2] = 1;
        scalar_argAckdone [7][1][2] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][2] = hls_coding_unit_hls_xm_log2_cb_size_r;
    scalar_adr    [7][1][2] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1336) comb block-----//
    //s = 14; r = 1; a = 9;
    if (scalar_rdat_vld_r[14][1][9]) begin
        scalar_argdone [14][1][9] = 1;
    end
    scalar_adr[14][1][9] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][9]) begin
        scalar_argVld[14][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[14][1][9] = 1;
    end

    //------READ (scalar, global adr = 1332) comb block-----//
    //s = 13; r = 1; a = 12;
    if (scalar_rdat_vld_r[13][1][12]) begin
        scalar_argdone [13][1][12] = 1;
    end
    scalar_adr[13][1][12] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][12]) begin
        scalar_argVld[13][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[13][1][12] = 1;
    end

    //------READ (scalar, global adr = 1340) comb block-----//
    //s = 15; r = 0; a = 9;
    if (scalar_rdat_vld_r[15][0][9]) begin
        scalar_argdone [15][0][9] = 1;
    end
    scalar_adr[15][0][9] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][9]) begin
        scalar_argVld[15][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[15][0][9] = 1;
    end

    //------READ (scalar, global adr = 1344) comb block-----//
    //s = 16; r = 1; a = 6;
    if (scalar_rdat_vld_r[16][1][6]) begin
        scalar_argdone [16][1][6] = 1;
    end
    scalar_adr[16][1][6] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][6]) begin
        scalar_argVld[16][1][6] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[16][1][6] = 1;
    end

    //------READ (scalar, global adr = 1348) comb block-----//
    //s = 17; r = 1; a = 4;
    if (scalar_rdat_vld_r[17][1][4]) begin
        scalar_argdone [17][1][4] = 1;
    end
    scalar_adr[17][1][4] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][4]) begin
        scalar_argVld[17][1][4] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[17][1][4] = 1;
    end

    //------READ (scalar, global adr = 1352) comb block-----//
    //s = 18; r = 1; a = 4;
    if (scalar_rdat_vld_r[18][1][4]) begin
        scalar_argdone [18][1][4] = 1;
    end
    scalar_adr[18][1][4] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][4]) begin
        scalar_argVld[18][1][4] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[18][1][4] = 1;
    end

    //------READ (scalar, global adr = 1236) comb block-----//
    //s = 21; r = 0; a = 13;
    if (scalar_rdat_vld_r[21][0][13]) begin
        scalar_argdone [21][0][13] = 1;
    end
    scalar_adr[21][0][13] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][13]) begin
        scalar_argVld[21][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[21][0][13] = 1;
    end

    //------WRITE (scalar, global adr = 36) comb block-----//
    //s = 9; r = 1; a = 2;
    if (scalar_argAck [9][1][2]) begin
        scalar_argVld [9][1][2] = 0;
        scalar_argAckdone [9][1][2] = 1;
    end
    if (hls_coding_unit_hls_length_r_ap_vld_r) begin
        scalar_argVld [9][1][2] = 1;
        scalar_argAckdone [9][1][2] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][2] = hls_coding_unit_hls_length_r_r;
    scalar_adr    [9][1][2] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 544) comb block-----//
    //s = 8; r = 0; a = 1;
    if (scalar_argAck [8][0][1]) begin
        scalar_argVld [8][0][1] = 0;
        scalar_argAckdone [8][0][1] = 1;
    end
    if (hls_coding_unit_hls_xm_x_ap_vld_r) begin
        scalar_argVld [8][0][1] = 1;
        scalar_argAckdone [8][0][1] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][1] = hls_coding_unit_hls_xm_x_r;
    scalar_adr    [8][0][1] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 548) comb block-----//
    //s = 9; r = 0; a = 3;
    if (scalar_argAck [9][0][3]) begin
        scalar_argVld [9][0][3] = 0;
        scalar_argAckdone [9][0][3] = 1;
    end
    if (hls_coding_unit_hls_xm_y_ap_vld_r) begin
        scalar_argVld [9][0][3] = 1;
        scalar_argAckdone [9][0][3] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][3] = hls_coding_unit_hls_xm_y_r;
    scalar_adr    [9][0][3] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 1; a = 0;
    if (scalar_argAck [0][1][0]) begin
        scalar_argVld [0][1][0] = 0;
        scalar_argAckdone [0][1][0] = 1;
    end
    if (hls_coding_unit_hls_pu_intra_pred_mode_0_ap_vld_r) begin
        scalar_argVld [0][1][0] = 1;
        scalar_argAckdone [0][1][0] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][0] = hls_coding_unit_hls_pu_intra_pred_mode_0_r;
    scalar_adr    [0][1][0] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 0; a = 1;
    if (scalar_argAck [0][0][1]) begin
        scalar_argVld [0][0][1] = 0;
        scalar_argAckdone [0][0][1] = 1;
    end
    if (hls_coding_unit_hls_pu_intra_pred_mode_1_ap_vld_r) begin
        scalar_argVld [0][0][1] = 1;
        scalar_argAckdone [0][0][1] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][1] = hls_coding_unit_hls_pu_intra_pred_mode_1_r;
    scalar_adr    [0][0][1] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 1; a = 1;
    if (scalar_argAck [0][1][1]) begin
        scalar_argVld [0][1][1] = 0;
        scalar_argAckdone [0][1][1] = 1;
    end
    if (hls_coding_unit_hls_pu_intra_pred_mode_2_ap_vld_r) begin
        scalar_argVld [0][1][1] = 1;
        scalar_argAckdone [0][1][1] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][1] = hls_coding_unit_hls_pu_intra_pred_mode_2_r;
    scalar_adr    [0][1][1] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 0; a = 2;
    if (scalar_argAck [0][0][2]) begin
        scalar_argVld [0][0][2] = 0;
        scalar_argAckdone [0][0][2] = 1;
    end
    if (hls_coding_unit_hls_pu_intra_pred_mode_3_ap_vld_r) begin
        scalar_argVld [0][0][2] = 1;
        scalar_argAckdone [0][0][2] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][2] = hls_coding_unit_hls_pu_intra_pred_mode_3_r;
    scalar_adr    [0][0][2] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 540) comb block-----//
    //s = 7; r = 0; a = 3;
    if (scalar_argAck [7][0][3]) begin
        scalar_argVld [7][0][3] = 0;
        scalar_argAckdone [7][0][3] = 1;
    end
    if (hls_coding_unit_hls_qPy_pred_ap_vld_r) begin
        scalar_argVld [7][0][3] = 1;
        scalar_argAckdone [7][0][3] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][3] = hls_coding_unit_hls_qPy_pred_r;
    scalar_adr    [7][0][3] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 24) comb block-----//
    //s = 6; r = 0; a = 1;
    if (scalar_argAck [6][0][1]) begin
        scalar_argVld [6][0][1] = 0;
        scalar_argAckdone [6][0][1] = 1;
    end
    if (hls_coding_unit_hls_skip_flag_start_ap_vld_r) begin
        scalar_argVld [6][0][1] = 1;
        scalar_argAckdone [6][0][1] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][1] = hls_coding_unit_hls_skip_flag_start_r;
    scalar_adr    [6][0][1] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 1; a = 9;
    if (scalar_rdat_vld_r[28][1][9]) begin
        scalar_argdone [28][1][9] = 1;
    end
    scalar_adr[28][1][9] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][9]) begin
        scalar_argVld[28][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[28][1][9] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 10;
    if (scalar_rdat_vld_r[26][0][10]) begin
        scalar_argdone [26][0][10] = 1;
    end
    scalar_adr[26][0][10] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][10]) begin
        scalar_argVld[26][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[26][0][10] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 0; a = 14;
    if (scalar_rdat_vld_r[13][0][14]) begin
        scalar_argdone [13][0][14] = 1;
    end
    scalar_adr[13][0][14] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][14]) begin
        scalar_argVld[13][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[13][0][14] = 1;
    end

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 11;
    if (scalar_rdat_vld_r[6][1][11]) begin
        scalar_argdone [6][1][11] = 1;
    end
    scalar_adr[6][1][11] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][11]) begin
        scalar_argVld[6][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[6][1][11] = 1;
    end

    //------READ (scalar, global adr = 440) comb block-----//
    //s = 14; r = 0; a = 11;
    if (scalar_rdat_vld_r[14][0][11]) begin
        scalar_argdone [14][0][11] = 1;
    end
    scalar_adr[14][0][11] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][11]) begin
        scalar_argVld[14][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[14][0][11] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 0; a = 8;
    if (scalar_rdat_vld_r[2][0][8]) begin
        scalar_argdone [2][0][8] = 1;
    end
    scalar_adr[2][0][8] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][8]) begin
        scalar_argVld[2][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[2][0][8] = 1;
    end

    //------WRITE (scalar, global adr = 568) comb block-----//
    //s = 14; r = 1; a = 2;
    if (scalar_argAck [14][1][2]) begin
        scalar_argVld [14][1][2] = 0;
        scalar_argAckdone [14][1][2] = 1;
    end
    if (hls_coding_unit_hls_intra_split_flag_ap_vld_r) begin
        scalar_argVld [14][1][2] = 1;
        scalar_argAckdone [14][1][2] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][2] = hls_coding_unit_hls_intra_split_flag_r;
    scalar_adr    [14][1][2] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 0; a = 5;
    if (scalar_rdat_vld_r[17][0][5]) begin
        scalar_argdone [17][0][5] = 1;
    end
    scalar_adr[17][0][5] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][5]) begin
        scalar_argVld[17][0][5] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[17][0][5] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 0; a = 10;
    if (scalar_rdat_vld_r[24][0][10]) begin
        scalar_argdone [24][0][10] = 1;
    end
    scalar_adr[24][0][10] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][10]) begin
        scalar_argVld[24][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[24][0][10] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 11;
    if (scalar_rdat_vld_r[23][1][11]) begin
        scalar_argdone [23][1][11] = 1;
    end
    scalar_adr[23][1][11] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][11]) begin
        scalar_argVld[23][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[23][1][11] = 1;
    end

    //------READ (scalar, global adr = 320) comb block-----//
    //s = 16; r = 0; a = 7;
    if (scalar_rdat_vld_r[16][0][7]) begin
        scalar_argdone [16][0][7] = 1;
    end
    scalar_adr[16][0][7] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][7]) begin
        scalar_argVld[16][0][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[16][0][7] = 1;
    end

    //------READ (scalar, global adr = 400) comb block-----//
    //s = 4; r = 1; a = 4;
    if (scalar_rdat_vld_r[4][1][4]) begin
        scalar_argdone [4][1][4] = 1;
    end
    scalar_adr[4][1][4] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][1][4]) begin
        scalar_argVld[4][1][4] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[4][1][4] = 1;
    end

    //------READ (scalar, global adr = 412) comb block-----//
    //s = 7; r = 1; a = 9;
    if (scalar_rdat_vld_r[7][1][9]) begin
        scalar_argdone [7][1][9] = 1;
    end
    scalar_adr[7][1][9] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][9]) begin
        scalar_argVld[7][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[7][1][9] = 1;
    end

    //------READ (scalar, global adr = 416) comb block-----//
    //s = 8; r = 0; a = 8;
    if (scalar_rdat_vld_r[8][0][8]) begin
        scalar_argdone [8][0][8] = 1;
    end
    scalar_adr[8][0][8] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][8]) begin
        scalar_argVld[8][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[8][0][8] = 1;
    end

    //------READ (scalar, global adr = 464) comb block-----//
    //s = 20; r = 0; a = 9;
    if (scalar_rdat_vld_r[20][0][9]) begin
        scalar_argdone [20][0][9] = 1;
    end
    scalar_adr[20][0][9] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][9]) begin
        scalar_argVld[20][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[20][0][9] = 1;
    end

    //------READ (scalar, global adr = 1288) comb block-----//
    //s = 2; r = 1; a = 7;
    if (scalar_rdat_vld_r[2][1][7]) begin
        scalar_argdone [2][1][7] = 1;
    end
    scalar_adr[2][1][7] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][7]) begin
        scalar_argVld[2][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[2][1][7] = 1;
    end

    //------READ (scalar, global adr = 1272) comb block-----//
    //s = 30; r = 1; a = 3;
    if (scalar_rdat_vld_r[30][1][3]) begin
        scalar_argdone [30][1][3] = 1;
    end
    scalar_adr[30][1][3] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][3]) begin
        scalar_argVld[30][1][3] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[30][1][3] = 1;
    end

    //------READ (scalar, global adr = 1280) comb block-----//
    //s = 0; r = 0; a = 15;
    if (scalar_rdat_vld_r[0][0][15]) begin
        scalar_argdone [0][0][15] = 1;
    end
    scalar_adr[0][0][15] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][15]) begin
        scalar_argVld[0][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[0][0][15] = 1;
    end

    if (ap_arb_ret[hls_coding_unit_hls] & ~ap_arb_ret_r[hls_coding_unit_hls]) begin
        ap_arb_ret_running[hls_coding_unit_hls] = 1;
        hls_coding_unit_hls_ready = 0;
    end

    scalar_argAckdone_all[hls_coding_unit_hls] = scalar_argAckdone[15][1][2] &
                                                scalar_argAckdone[7][0][2] &
                                                scalar_argAckdone[12][0][2] &
                                                scalar_argAckdone[13][1][2] &
                                                scalar_argAckdone[16][1][0] &
                                                scalar_argAckdone[8][1][0] &
                                                scalar_argAckdone[11][0][2] &
                                                scalar_argAckdone[3][0][0] &
                                                scalar_argAckdone[4][0][0] &
                                                scalar_argAckdone[5][1][0] &
                                                scalar_argAckdone[6][1][0] &
                                                scalar_argAckdone[7][1][2] &
                                                scalar_argAckdone[9][1][2] &
                                                scalar_argAckdone[8][0][1] &
                                                scalar_argAckdone[9][0][3] &
                                                scalar_argAckdone[0][1][0] &
                                                scalar_argAckdone[0][0][1] &
                                                scalar_argAckdone[0][1][1] &
                                                scalar_argAckdone[0][0][2] &
                                                scalar_argAckdone[7][0][3] &
                                                scalar_argAckdone[6][0][1] &
                                                scalar_argAckdone[14][1][2];
    if (ap_arb_ret_running[hls_coding_unit_hls] & scalar_argAckdone_all[hls_coding_unit_hls] &~ ap_arb_reload_running_r[hls_coding_unit_hls]) begin
        ap_arb_reload[hls_coding_unit_hls] = 1;
        ap_arb_reload_running[hls_coding_unit_hls] = 1;
    end

    if (ap_arb_start[hls_coding_unit_hls] &~ ap_arb_start_r[hls_coding_unit_hls]) begin
        ap_arb_start_running[hls_coding_unit_hls] = 1;
    end

    if (ap_arb_start_running[hls_coding_unit_hls] & ~scalar_writing_476& ~scalar_writing_572& ~scalar_writing_28& ~scalar_writing_560& ~scalar_writing_564& ~scalar_writing_32& ~scalar_writing_44& ~scalar_writing_536& ~scalar_writing_608& ~scalar_writing_604& ~scalar_writing_464) begin
        ap_arb_start_running[hls_coding_unit_hls] = 0;
        ap_arb_reload[hls_coding_unit_hls] = 1;
    end

    scalar_argdone_all[hls_coding_unit_hls] = scalar_argdone[9][1][11] &
                                                                scalar_argdone[31][0][4] &
                                                                scalar_argdone[2][1][6] &
                                                                scalar_argdone[11][0][12] &
                                                                scalar_argdone[23][0][12] &
                                                                scalar_argdone[15][1][7] &
                                                                scalar_argdone[7][0][10] &
                                                                scalar_argdone[30][0][3] &
                                                                scalar_argdone[12][0][12] &
                                                                scalar_argdone[13][0][13] &
                                                                scalar_argdone[8][1][7] &
                                                                scalar_argdone[11][1][11] &
                                                                scalar_argdone[14][1][9] &
                                                                scalar_argdone[13][1][12] &
                                                                scalar_argdone[15][0][9] &
                                                                scalar_argdone[16][1][6] &
                                                                scalar_argdone[17][1][4] &
                                                                scalar_argdone[18][1][4] &
                                                                scalar_argdone[21][0][13] &
                                                                scalar_argdone[28][1][9] &
                                                                scalar_argdone[26][0][10] &
                                                                scalar_argdone[13][0][14] &
                                                                scalar_argdone[6][1][11] &
                                                                scalar_argdone[14][0][11] &
                                                                scalar_argdone[2][0][8] &
                                                                scalar_argdone[17][0][5] &
                                                                scalar_argdone[24][0][10] &
                                                                scalar_argdone[23][1][11] &
                                                                scalar_argdone[16][0][7] &
                                                                scalar_argdone[4][1][4] &
                                                                scalar_argdone[7][1][9] &
                                                                scalar_argdone[8][0][8] &
                                                                scalar_argdone[20][0][9] &
                                                                scalar_argdone[2][1][7] &
                                                                scalar_argdone[30][1][3] &
                                                                scalar_argdone[0][0][15];

    if (scalar_argdone_all_r[hls_coding_unit_hls]) begin
        scalar_argdone[9][1][11] = 0;
        scalar_argdone[31][0][4] = 0;
        scalar_argdone[2][1][6] = 0;
        scalar_argdone[11][0][12] = 0;
        scalar_argdone[23][0][12] = 0;
        scalar_argdone[15][1][7] = 0;
        scalar_argdone[7][0][10] = 0;
        scalar_argdone[30][0][3] = 0;
        scalar_argdone[12][0][12] = 0;
        scalar_argdone[13][0][13] = 0;
        scalar_argdone[8][1][7] = 0;
        scalar_argdone[11][1][11] = 0;
        scalar_argdone[14][1][9] = 0;
        scalar_argdone[13][1][12] = 0;
        scalar_argdone[15][0][9] = 0;
        scalar_argdone[16][1][6] = 0;
        scalar_argdone[17][1][4] = 0;
        scalar_argdone[18][1][4] = 0;
        scalar_argdone[21][0][13] = 0;
        scalar_argdone[28][1][9] = 0;
        scalar_argdone[26][0][10] = 0;
        scalar_argdone[13][0][14] = 0;
        scalar_argdone[6][1][11] = 0;
        scalar_argdone[14][0][11] = 0;
        scalar_argdone[2][0][8] = 0;
        scalar_argdone[17][0][5] = 0;
        scalar_argdone[24][0][10] = 0;
        scalar_argdone[23][1][11] = 0;
        scalar_argdone[16][0][7] = 0;
        scalar_argdone[4][1][4] = 0;
        scalar_argdone[7][1][9] = 0;
        scalar_argdone[8][0][8] = 0;
        scalar_argdone[20][0][9] = 0;
        scalar_argdone[2][1][7] = 0;
        scalar_argdone[30][1][3] = 0;
        scalar_argdone[0][0][15] = 0;

        if (ap_arb_start_r[hls_coding_unit_hls] & ~ap_running_r[hls_coding_unit_hls]) begin
            ap_start[hls_coding_unit_hls] = 1;
            ap_running[hls_coding_unit_hls] = 1;
        end
        else if (ap_arb_ret_running_r[hls_coding_unit_hls]) begin
            ap_arb_ret_running[hls_coding_unit_hls] = 0;
            ap_arb_reload_running[hls_coding_unit_hls] = 0;
            hls_coding_unit_hls_ready = 1;
        end
    end

    if (ap_start_r[hls_coding_unit_hls] & ap_ready_r[hls_coding_unit_hls]) begin
        ap_start[hls_coding_unit_hls] = 0;
    end

    if (ap_done_r[hls_coding_unit_hls]) begin
        ap_running[hls_coding_unit_hls] = 0;
    end
`endif
    //============================================================
    //hls_coding_unit_hls_dup1       (f = 19)
    //============================================================
`ifdef enable_connect_hls_coding_unit_hls_dup1
    //------READ (scalar, global adr = 420) comb block-----//
    //s = 9; r = 0; a = 12;
    if (scalar_rdat_vld_r[9][0][12]) begin
        scalar_argdone [9][0][12] = 1;
    end
    scalar_adr[9][0][12] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][12]) begin
        scalar_argVld[9][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[9][0][12] = 1;
    end

    //------READ (scalar, global adr = 380) comb block-----//
    //s = 31; r = 1; a = 3;
    if (scalar_rdat_vld_r[31][1][3]) begin
        scalar_argdone [31][1][3] = 1;
    end
    scalar_adr[31][1][3] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][3]) begin
        scalar_argVld[31][1][3] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[31][1][3] = 1;
    end

    //------READ (scalar, global adr = 1160) comb block-----//
    //s = 2; r = 0; a = 9;
    if (scalar_rdat_vld_r[2][0][9]) begin
        scalar_argdone [2][0][9] = 1;
    end
    scalar_adr[2][0][9] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][9]) begin
        scalar_argVld[2][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[2][0][9] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 0; a = 13;
    if (scalar_rdat_vld_r[11][0][13]) begin
        scalar_argdone [11][0][13] = 1;
    end
    scalar_adr[11][0][13] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][13]) begin
        scalar_argVld[11][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[11][0][13] = 1;
    end

    //------READ (scalar, global adr = 476) comb block-----//
    //s = 23; r = 0; a = 13;
    if (scalar_rdat_vld_r[23][0][13]) begin
        scalar_argdone [23][0][13] = 1;
    end
    scalar_adr[23][0][13] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][13]) begin
        scalar_argVld[23][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[23][0][13] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 8;
    if (scalar_rdat_vld_r[15][1][8]) begin
        scalar_argdone [15][1][8] = 1;
    end
    scalar_adr[15][1][8] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][8]) begin
        scalar_argVld[15][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[15][1][8] = 1;
    end

    //------WRITE (scalar, global adr = 572) comb block-----//
    //s = 15; r = 0; a = 3;
    if (scalar_argAck [15][0][3]) begin
        scalar_argVld [15][0][3] = 0;
        scalar_argAckdone [15][0][3] = 1;
    end
    if (hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_ap_vld_r) begin
        scalar_argVld [15][0][3] = 1;
        scalar_argAckdone [15][0][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][3] = hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_r;
    scalar_adr    [15][0][3] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 28) comb block-----//
    //s = 7; r = 0; a = 11;
    if (scalar_rdat_vld_r[7][0][11]) begin
        scalar_argdone [7][0][11] = 1;
    end
    scalar_adr[7][0][11] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][11]) begin
        scalar_argVld[7][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[7][0][11] = 1;
    end

    //------WRITE (scalar, global adr = 28) comb block-----//
    //s = 7; r = 1; a = 3;
    if (scalar_argAck [7][1][3]) begin
        scalar_argVld [7][1][3] = 0;
        scalar_argAckdone [7][1][3] = 1;
    end
    if (hls_coding_unit_hls_dup1_pcm_flag_o_ap_vld_r) begin
        scalar_argVld [7][1][3] = 1;
        scalar_argAckdone [7][1][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][3] = hls_coding_unit_hls_dup1_pcm_flag_o_r;
    scalar_adr    [7][1][3] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 504) comb block-----//
    //s = 30; r = 0; a = 4;
    if (scalar_rdat_vld_r[30][0][4]) begin
        scalar_argdone [30][0][4] = 1;
    end
    scalar_adr[30][0][4] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][4]) begin
        scalar_argVld[30][0][4] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[30][0][4] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 1; a = 11;
    if (scalar_rdat_vld_r[12][1][11]) begin
        scalar_argdone [12][1][11] = 1;
    end
    scalar_adr[12][1][11] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][11]) begin
        scalar_argVld[12][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[12][1][11] = 1;
    end

    //------WRITE (scalar, global adr = 560) comb block-----//
    //s = 12; r = 1; a = 2;
    if (scalar_argAck [12][1][2]) begin
        scalar_argVld [12][1][2] = 0;
        scalar_argAckdone [12][1][2] = 1;
    end
    if (hls_coding_unit_hls_dup1_pred_mode_o_ap_vld_r) begin
        scalar_argVld [12][1][2] = 1;
        scalar_argAckdone [12][1][2] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][2] = hls_coding_unit_hls_dup1_pred_mode_o_r;
    scalar_adr    [12][1][2] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 1; a = 13;
    if (scalar_rdat_vld_r[13][1][13]) begin
        scalar_argdone [13][1][13] = 1;
    end
    scalar_adr[13][1][13] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][13]) begin
        scalar_argVld[13][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[13][1][13] = 1;
    end

    //------WRITE (scalar, global adr = 564) comb block-----//
    //s = 13; r = 0; a = 3;
    if (scalar_argAck [13][0][3]) begin
        scalar_argVld [13][0][3] = 0;
        scalar_argAckdone [13][0][3] = 1;
    end
    if (hls_coding_unit_hls_dup1_part_mode_o_ap_vld_r) begin
        scalar_argVld [13][0][3] = 1;
        scalar_argAckdone [13][0][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][3] = hls_coding_unit_hls_dup1_part_mode_o_r;
    scalar_adr    [13][0][3] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 576) comb block-----//
    //s = 16; r = 0; a = 1;
    if (scalar_argAck [16][0][1]) begin
        scalar_argVld [16][0][1] = 0;
        scalar_argAckdone [16][0][1] = 1;
    end
    if (hls_coding_unit_hls_dup1_max_trafo_depth_ap_vld_r) begin
        scalar_argVld [16][0][1] = 1;
        scalar_argAckdone [16][0][1] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][0][1] = hls_coding_unit_hls_dup1_max_trafo_depth_r;
    scalar_adr    [16][0][1] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 32) comb block-----//
    //s = 8; r = 1; a = 8;
    if (scalar_rdat_vld_r[8][1][8]) begin
        scalar_argdone [8][1][8] = 1;
    end
    scalar_adr[8][1][8] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][8]) begin
        scalar_argVld[8][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[8][1][8] = 1;
    end

    //------WRITE (scalar, global adr = 32) comb block-----//
    //s = 8; r = 1; a = 1;
    if (scalar_argAck [8][1][1]) begin
        scalar_argVld [8][1][1] = 0;
        scalar_argAckdone [8][1][1] = 1;
    end
    if (hls_coding_unit_hls_dup1_cb_size_o_ap_vld_r) begin
        scalar_argVld [8][1][1] = 1;
        scalar_argAckdone [8][1][1] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][1] = hls_coding_unit_hls_dup1_cb_size_o_r;
    scalar_adr    [8][1][1] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 44) comb block-----//
    //s = 11; r = 1; a = 12;
    if (scalar_rdat_vld_r[11][1][12]) begin
        scalar_argdone [11][1][12] = 1;
    end
    scalar_adr[11][1][12] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][12]) begin
        scalar_argVld[11][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[11][1][12] = 1;
    end

    //------WRITE (scalar, global adr = 44) comb block-----//
    //s = 11; r = 1; a = 2;
    if (scalar_argAck [11][1][2]) begin
        scalar_argVld [11][1][2] = 0;
        scalar_argAckdone [11][1][2] = 1;
    end
    if (hls_coding_unit_hls_dup1_idx_o_ap_vld_r) begin
        scalar_argVld [11][1][2] = 1;
        scalar_argAckdone [11][1][2] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][1][2] = hls_coding_unit_hls_dup1_idx_o_r;
    scalar_adr    [11][1][2] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1164) comb block-----//
    //s = 3; r = 1; a = 0;
    if (scalar_argAck [3][1][0]) begin
        scalar_argVld [3][1][0] = 0;
        scalar_argAckdone [3][1][0] = 1;
    end
    if (hls_coding_unit_hls_dup1_xm_xBase_ap_vld_r) begin
        scalar_argVld [3][1][0] = 1;
        scalar_argAckdone [3][1][0] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][1][0] = hls_coding_unit_hls_dup1_xm_xBase_r;
    scalar_adr    [3][1][0] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1168) comb block-----//
    //s = 4; r = 1; a = 0;
    if (scalar_argAck [4][1][0]) begin
        scalar_argVld [4][1][0] = 0;
        scalar_argAckdone [4][1][0] = 1;
    end
    if (hls_coding_unit_hls_dup1_xm_yBase_ap_vld_r) begin
        scalar_argVld [4][1][0] = 1;
        scalar_argAckdone [4][1][0] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][1][0] = hls_coding_unit_hls_dup1_xm_yBase_r;
    scalar_adr    [4][1][0] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1172) comb block-----//
    //s = 5; r = 0; a = 1;
    if (scalar_argAck [5][0][1]) begin
        scalar_argVld [5][0][1] = 0;
        scalar_argAckdone [5][0][1] = 1;
    end
    if (hls_coding_unit_hls_dup1_xm_cb_xBase_ap_vld_r) begin
        scalar_argVld [5][0][1] = 1;
        scalar_argAckdone [5][0][1] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][1] = hls_coding_unit_hls_dup1_xm_cb_xBase_r;
    scalar_adr    [5][0][1] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1176) comb block-----//
    //s = 6; r = 1; a = 1;
    if (scalar_argAck [6][1][1]) begin
        scalar_argVld [6][1][1] = 0;
        scalar_argAckdone [6][1][1] = 1;
    end
    if (hls_coding_unit_hls_dup1_xm_cb_yBase_ap_vld_r) begin
        scalar_argVld [6][1][1] = 1;
        scalar_argAckdone [6][1][1] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][1] = hls_coding_unit_hls_dup1_xm_cb_yBase_r;
    scalar_adr    [6][1][1] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1180) comb block-----//
    //s = 7; r = 0; a = 4;
    if (scalar_argAck [7][0][4]) begin
        scalar_argVld [7][0][4] = 0;
        scalar_argAckdone [7][0][4] = 1;
    end
    if (hls_coding_unit_hls_dup1_xm_log2_cb_size_ap_vld_r) begin
        scalar_argVld [7][0][4] = 1;
        scalar_argAckdone [7][0][4] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][4] = hls_coding_unit_hls_dup1_xm_log2_cb_size_r;
    scalar_adr    [7][0][4] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1336) comb block-----//
    //s = 14; r = 1; a = 10;
    if (scalar_rdat_vld_r[14][1][10]) begin
        scalar_argdone [14][1][10] = 1;
    end
    scalar_adr[14][1][10] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][10]) begin
        scalar_argVld[14][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[14][1][10] = 1;
    end

    //------READ (scalar, global adr = 1332) comb block-----//
    //s = 13; r = 0; a = 15;
    if (scalar_rdat_vld_r[13][0][15]) begin
        scalar_argdone [13][0][15] = 1;
    end
    scalar_adr[13][0][15] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][15]) begin
        scalar_argVld[13][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[13][0][15] = 1;
    end

    //------READ (scalar, global adr = 1340) comb block-----//
    //s = 15; r = 0; a = 10;
    if (scalar_rdat_vld_r[15][0][10]) begin
        scalar_argdone [15][0][10] = 1;
    end
    scalar_adr[15][0][10] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][10]) begin
        scalar_argVld[15][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[15][0][10] = 1;
    end

    //------READ (scalar, global adr = 1344) comb block-----//
    //s = 16; r = 1; a = 7;
    if (scalar_rdat_vld_r[16][1][7]) begin
        scalar_argdone [16][1][7] = 1;
    end
    scalar_adr[16][1][7] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][7]) begin
        scalar_argVld[16][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[16][1][7] = 1;
    end

    //------READ (scalar, global adr = 1348) comb block-----//
    //s = 17; r = 1; a = 5;
    if (scalar_rdat_vld_r[17][1][5]) begin
        scalar_argdone [17][1][5] = 1;
    end
    scalar_adr[17][1][5] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][5]) begin
        scalar_argVld[17][1][5] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[17][1][5] = 1;
    end

    //------READ (scalar, global adr = 1352) comb block-----//
    //s = 18; r = 0; a = 5;
    if (scalar_rdat_vld_r[18][0][5]) begin
        scalar_argdone [18][0][5] = 1;
    end
    scalar_adr[18][0][5] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][5]) begin
        scalar_argVld[18][0][5] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[18][0][5] = 1;
    end

    //------READ (scalar, global adr = 1236) comb block-----//
    //s = 21; r = 1; a = 12;
    if (scalar_rdat_vld_r[21][1][12]) begin
        scalar_argdone [21][1][12] = 1;
    end
    scalar_adr[21][1][12] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][12]) begin
        scalar_argVld[21][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[21][1][12] = 1;
    end

    //------WRITE (scalar, global adr = 36) comb block-----//
    //s = 9; r = 1; a = 3;
    if (scalar_argAck [9][1][3]) begin
        scalar_argVld [9][1][3] = 0;
        scalar_argAckdone [9][1][3] = 1;
    end
    if (hls_coding_unit_hls_dup1_length_r_ap_vld_r) begin
        scalar_argVld [9][1][3] = 1;
        scalar_argAckdone [9][1][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][3] = hls_coding_unit_hls_dup1_length_r_r;
    scalar_adr    [9][1][3] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 544) comb block-----//
    //s = 8; r = 0; a = 2;
    if (scalar_argAck [8][0][2]) begin
        scalar_argVld [8][0][2] = 0;
        scalar_argAckdone [8][0][2] = 1;
    end
    if (hls_coding_unit_hls_dup1_xm_x_ap_vld_r) begin
        scalar_argVld [8][0][2] = 1;
        scalar_argAckdone [8][0][2] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][2] = hls_coding_unit_hls_dup1_xm_x_r;
    scalar_adr    [8][0][2] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 548) comb block-----//
    //s = 9; r = 0; a = 4;
    if (scalar_argAck [9][0][4]) begin
        scalar_argVld [9][0][4] = 0;
        scalar_argAckdone [9][0][4] = 1;
    end
    if (hls_coding_unit_hls_dup1_xm_y_ap_vld_r) begin
        scalar_argVld [9][0][4] = 1;
        scalar_argAckdone [9][0][4] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][4] = hls_coding_unit_hls_dup1_xm_y_r;
    scalar_adr    [9][0][4] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 1; a = 2;
    if (scalar_argAck [0][1][2]) begin
        scalar_argVld [0][1][2] = 0;
        scalar_argAckdone [0][1][2] = 1;
    end
    if (hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_ap_vld_r) begin
        scalar_argVld [0][1][2] = 1;
        scalar_argAckdone [0][1][2] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][2] = hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_r;
    scalar_adr    [0][1][2] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 0; a = 3;
    if (scalar_argAck [0][0][3]) begin
        scalar_argVld [0][0][3] = 0;
        scalar_argAckdone [0][0][3] = 1;
    end
    if (hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_ap_vld_r) begin
        scalar_argVld [0][0][3] = 1;
        scalar_argAckdone [0][0][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][3] = hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_r;
    scalar_adr    [0][0][3] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 1; a = 3;
    if (scalar_argAck [0][1][3]) begin
        scalar_argVld [0][1][3] = 0;
        scalar_argAckdone [0][1][3] = 1;
    end
    if (hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_ap_vld_r) begin
        scalar_argVld [0][1][3] = 1;
        scalar_argAckdone [0][1][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][3] = hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_r;
    scalar_adr    [0][1][3] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 0; a = 4;
    if (scalar_argAck [0][0][4]) begin
        scalar_argVld [0][0][4] = 0;
        scalar_argAckdone [0][0][4] = 1;
    end
    if (hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_ap_vld_r) begin
        scalar_argVld [0][0][4] = 1;
        scalar_argAckdone [0][0][4] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][4] = hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_r;
    scalar_adr    [0][0][4] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 540) comb block-----//
    //s = 7; r = 1; a = 4;
    if (scalar_argAck [7][1][4]) begin
        scalar_argVld [7][1][4] = 0;
        scalar_argAckdone [7][1][4] = 1;
    end
    if (hls_coding_unit_hls_dup1_qPy_pred_ap_vld_r) begin
        scalar_argVld [7][1][4] = 1;
        scalar_argAckdone [7][1][4] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][4] = hls_coding_unit_hls_dup1_qPy_pred_r;
    scalar_adr    [7][1][4] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 24) comb block-----//
    //s = 6; r = 0; a = 2;
    if (scalar_argAck [6][0][2]) begin
        scalar_argVld [6][0][2] = 0;
        scalar_argAckdone [6][0][2] = 1;
    end
    if (hls_coding_unit_hls_dup1_skip_flag_start_ap_vld_r) begin
        scalar_argVld [6][0][2] = 1;
        scalar_argAckdone [6][0][2] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][2] = hls_coding_unit_hls_dup1_skip_flag_start_r;
    scalar_adr    [6][0][2] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 0; a = 10;
    if (scalar_rdat_vld_r[28][0][10]) begin
        scalar_argdone [28][0][10] = 1;
    end
    scalar_adr[28][0][10] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][10]) begin
        scalar_argVld[28][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[28][0][10] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 9;
    if (scalar_rdat_vld_r[26][1][9]) begin
        scalar_argdone [26][1][9] = 1;
    end
    scalar_adr[26][1][9] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][9]) begin
        scalar_argVld[26][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[26][1][9] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 1; a = 14;
    if (scalar_rdat_vld_r[13][1][14]) begin
        scalar_argdone [13][1][14] = 1;
    end
    scalar_adr[13][1][14] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][14]) begin
        scalar_argVld[13][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[13][1][14] = 1;
    end

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 0; a = 12;
    if (scalar_rdat_vld_r[6][0][12]) begin
        scalar_argdone [6][0][12] = 1;
    end
    scalar_adr[6][0][12] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][12]) begin
        scalar_argVld[6][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[6][0][12] = 1;
    end

    //------READ (scalar, global adr = 440) comb block-----//
    //s = 14; r = 0; a = 12;
    if (scalar_rdat_vld_r[14][0][12]) begin
        scalar_argdone [14][0][12] = 1;
    end
    scalar_adr[14][0][12] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][12]) begin
        scalar_argVld[14][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[14][0][12] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 1; a = 8;
    if (scalar_rdat_vld_r[2][1][8]) begin
        scalar_argdone [2][1][8] = 1;
    end
    scalar_adr[2][1][8] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][8]) begin
        scalar_argVld[2][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[2][1][8] = 1;
    end

    //------WRITE (scalar, global adr = 568) comb block-----//
    //s = 14; r = 0; a = 3;
    if (scalar_argAck [14][0][3]) begin
        scalar_argVld [14][0][3] = 0;
        scalar_argAckdone [14][0][3] = 1;
    end
    if (hls_coding_unit_hls_dup1_intra_split_flag_ap_vld_r) begin
        scalar_argVld [14][0][3] = 1;
        scalar_argAckdone [14][0][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][3] = hls_coding_unit_hls_dup1_intra_split_flag_r;
    scalar_adr    [14][0][3] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 0; a = 6;
    if (scalar_rdat_vld_r[17][0][6]) begin
        scalar_argdone [17][0][6] = 1;
    end
    scalar_adr[17][0][6] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][6]) begin
        scalar_argVld[17][0][6] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[17][0][6] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 9;
    if (scalar_rdat_vld_r[24][1][9]) begin
        scalar_argdone [24][1][9] = 1;
    end
    scalar_adr[24][1][9] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][9]) begin
        scalar_argVld[24][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[24][1][9] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 12;
    if (scalar_rdat_vld_r[23][1][12]) begin
        scalar_argdone [23][1][12] = 1;
    end
    scalar_adr[23][1][12] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][12]) begin
        scalar_argVld[23][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[23][1][12] = 1;
    end

    //------READ (scalar, global adr = 320) comb block-----//
    //s = 16; r = 0; a = 8;
    if (scalar_rdat_vld_r[16][0][8]) begin
        scalar_argdone [16][0][8] = 1;
    end
    scalar_adr[16][0][8] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][8]) begin
        scalar_argVld[16][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[16][0][8] = 1;
    end

    //------READ (scalar, global adr = 400) comb block-----//
    //s = 4; r = 0; a = 6;
    if (scalar_rdat_vld_r[4][0][6]) begin
        scalar_argdone [4][0][6] = 1;
    end
    scalar_adr[4][0][6] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][6]) begin
        scalar_argVld[4][0][6] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[4][0][6] = 1;
    end

    //------READ (scalar, global adr = 412) comb block-----//
    //s = 7; r = 1; a = 10;
    if (scalar_rdat_vld_r[7][1][10]) begin
        scalar_argdone [7][1][10] = 1;
    end
    scalar_adr[7][1][10] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][10]) begin
        scalar_argVld[7][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[7][1][10] = 1;
    end

    //------READ (scalar, global adr = 416) comb block-----//
    //s = 8; r = 0; a = 9;
    if (scalar_rdat_vld_r[8][0][9]) begin
        scalar_argdone [8][0][9] = 1;
    end
    scalar_adr[8][0][9] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][9]) begin
        scalar_argVld[8][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[8][0][9] = 1;
    end

    //------READ (scalar, global adr = 464) comb block-----//
    //s = 20; r = 1; a = 9;
    if (scalar_rdat_vld_r[20][1][9]) begin
        scalar_argdone [20][1][9] = 1;
    end
    scalar_adr[20][1][9] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][9]) begin
        scalar_argVld[20][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[20][1][9] = 1;
    end

    //------READ (scalar, global adr = 1288) comb block-----//
    //s = 2; r = 0; a = 10;
    if (scalar_rdat_vld_r[2][0][10]) begin
        scalar_argdone [2][0][10] = 1;
    end
    scalar_adr[2][0][10] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][10]) begin
        scalar_argVld[2][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[2][0][10] = 1;
    end

    //------READ (scalar, global adr = 1272) comb block-----//
    //s = 30; r = 1; a = 4;
    if (scalar_rdat_vld_r[30][1][4]) begin
        scalar_argdone [30][1][4] = 1;
    end
    scalar_adr[30][1][4] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][4]) begin
        scalar_argVld[30][1][4] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[30][1][4] = 1;
    end

    //------READ (scalar, global adr = 1280) comb block-----//
    //s = 0; r = 1; a = 14;
    if (scalar_rdat_vld_r[0][1][14]) begin
        scalar_argdone [0][1][14] = 1;
    end
    scalar_adr[0][1][14] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][14]) begin
        scalar_argVld[0][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[0][1][14] = 1;
    end

    if (ap_arb_ret[hls_coding_unit_hls_dup1] & ~ap_arb_ret_r[hls_coding_unit_hls_dup1]) begin
        ap_arb_ret_running[hls_coding_unit_hls_dup1] = 1;
        hls_coding_unit_hls_dup1_ready = 0;
    end

    scalar_argAckdone_all[hls_coding_unit_hls_dup1] = scalar_argAckdone[15][0][3] &
                                                scalar_argAckdone[7][1][3] &
                                                scalar_argAckdone[12][1][2] &
                                                scalar_argAckdone[13][0][3] &
                                                scalar_argAckdone[16][0][1] &
                                                scalar_argAckdone[8][1][1] &
                                                scalar_argAckdone[11][1][2] &
                                                scalar_argAckdone[3][1][0] &
                                                scalar_argAckdone[4][1][0] &
                                                scalar_argAckdone[5][0][1] &
                                                scalar_argAckdone[6][1][1] &
                                                scalar_argAckdone[7][0][4] &
                                                scalar_argAckdone[9][1][3] &
                                                scalar_argAckdone[8][0][2] &
                                                scalar_argAckdone[9][0][4] &
                                                scalar_argAckdone[0][1][2] &
                                                scalar_argAckdone[0][0][3] &
                                                scalar_argAckdone[0][1][3] &
                                                scalar_argAckdone[0][0][4] &
                                                scalar_argAckdone[7][1][4] &
                                                scalar_argAckdone[6][0][2] &
                                                scalar_argAckdone[14][0][3];
    if (ap_arb_ret_running[hls_coding_unit_hls_dup1] & scalar_argAckdone_all[hls_coding_unit_hls_dup1] &~ ap_arb_reload_running_r[hls_coding_unit_hls_dup1]) begin
        ap_arb_reload[hls_coding_unit_hls_dup1] = 1;
        ap_arb_reload_running[hls_coding_unit_hls_dup1] = 1;
    end

    if (ap_arb_start[hls_coding_unit_hls_dup1] &~ ap_arb_start_r[hls_coding_unit_hls_dup1]) begin
        ap_arb_start_running[hls_coding_unit_hls_dup1] = 1;
    end

    if (ap_arb_start_running[hls_coding_unit_hls_dup1] & ~scalar_writing_476& ~scalar_writing_572& ~scalar_writing_28& ~scalar_writing_560& ~scalar_writing_564& ~scalar_writing_32& ~scalar_writing_44& ~scalar_writing_536& ~scalar_writing_608& ~scalar_writing_604& ~scalar_writing_464) begin
        ap_arb_start_running[hls_coding_unit_hls_dup1] = 0;
        ap_arb_reload[hls_coding_unit_hls_dup1] = 1;
    end

    scalar_argdone_all[hls_coding_unit_hls_dup1] = scalar_argdone[9][0][12] &
                                                                scalar_argdone[31][1][3] &
                                                                scalar_argdone[2][0][9] &
                                                                scalar_argdone[11][0][13] &
                                                                scalar_argdone[23][0][13] &
                                                                scalar_argdone[15][1][8] &
                                                                scalar_argdone[7][0][11] &
                                                                scalar_argdone[30][0][4] &
                                                                scalar_argdone[12][1][11] &
                                                                scalar_argdone[13][1][13] &
                                                                scalar_argdone[8][1][8] &
                                                                scalar_argdone[11][1][12] &
                                                                scalar_argdone[14][1][10] &
                                                                scalar_argdone[13][0][15] &
                                                                scalar_argdone[15][0][10] &
                                                                scalar_argdone[16][1][7] &
                                                                scalar_argdone[17][1][5] &
                                                                scalar_argdone[18][0][5] &
                                                                scalar_argdone[21][1][12] &
                                                                scalar_argdone[28][0][10] &
                                                                scalar_argdone[26][1][9] &
                                                                scalar_argdone[13][1][14] &
                                                                scalar_argdone[6][0][12] &
                                                                scalar_argdone[14][0][12] &
                                                                scalar_argdone[2][1][8] &
                                                                scalar_argdone[17][0][6] &
                                                                scalar_argdone[24][1][9] &
                                                                scalar_argdone[23][1][12] &
                                                                scalar_argdone[16][0][8] &
                                                                scalar_argdone[4][0][6] &
                                                                scalar_argdone[7][1][10] &
                                                                scalar_argdone[8][0][9] &
                                                                scalar_argdone[20][1][9] &
                                                                scalar_argdone[2][0][10] &
                                                                scalar_argdone[30][1][4] &
                                                                scalar_argdone[0][1][14];

    if (scalar_argdone_all_r[hls_coding_unit_hls_dup1]) begin
        scalar_argdone[9][0][12] = 0;
        scalar_argdone[31][1][3] = 0;
        scalar_argdone[2][0][9] = 0;
        scalar_argdone[11][0][13] = 0;
        scalar_argdone[23][0][13] = 0;
        scalar_argdone[15][1][8] = 0;
        scalar_argdone[7][0][11] = 0;
        scalar_argdone[30][0][4] = 0;
        scalar_argdone[12][1][11] = 0;
        scalar_argdone[13][1][13] = 0;
        scalar_argdone[8][1][8] = 0;
        scalar_argdone[11][1][12] = 0;
        scalar_argdone[14][1][10] = 0;
        scalar_argdone[13][0][15] = 0;
        scalar_argdone[15][0][10] = 0;
        scalar_argdone[16][1][7] = 0;
        scalar_argdone[17][1][5] = 0;
        scalar_argdone[18][0][5] = 0;
        scalar_argdone[21][1][12] = 0;
        scalar_argdone[28][0][10] = 0;
        scalar_argdone[26][1][9] = 0;
        scalar_argdone[13][1][14] = 0;
        scalar_argdone[6][0][12] = 0;
        scalar_argdone[14][0][12] = 0;
        scalar_argdone[2][1][8] = 0;
        scalar_argdone[17][0][6] = 0;
        scalar_argdone[24][1][9] = 0;
        scalar_argdone[23][1][12] = 0;
        scalar_argdone[16][0][8] = 0;
        scalar_argdone[4][0][6] = 0;
        scalar_argdone[7][1][10] = 0;
        scalar_argdone[8][0][9] = 0;
        scalar_argdone[20][1][9] = 0;
        scalar_argdone[2][0][10] = 0;
        scalar_argdone[30][1][4] = 0;
        scalar_argdone[0][1][14] = 0;

        if (ap_arb_start_r[hls_coding_unit_hls_dup1] & ~ap_running_r[hls_coding_unit_hls_dup1]) begin
            ap_start[hls_coding_unit_hls_dup1] = 1;
            ap_running[hls_coding_unit_hls_dup1] = 1;
        end
        else if (ap_arb_ret_running_r[hls_coding_unit_hls_dup1]) begin
            ap_arb_ret_running[hls_coding_unit_hls_dup1] = 0;
            ap_arb_reload_running[hls_coding_unit_hls_dup1] = 0;
            hls_coding_unit_hls_dup1_ready = 1;
        end
    end

    if (ap_start_r[hls_coding_unit_hls_dup1] & ap_ready_r[hls_coding_unit_hls_dup1]) begin
        ap_start[hls_coding_unit_hls_dup1] = 0;
    end

    if (ap_done_r[hls_coding_unit_hls_dup1]) begin
        ap_running[hls_coding_unit_hls_dup1] = 0;
    end
`endif
    //============================================================
    //hls_coding_unit_hls_dup2       (f = 20)
    //============================================================
`ifdef enable_connect_hls_coding_unit_hls_dup2
    //------READ (scalar, global adr = 420) comb block-----//
    //s = 9; r = 1; a = 12;
    if (scalar_rdat_vld_r[9][1][12]) begin
        scalar_argdone [9][1][12] = 1;
    end
    scalar_adr[9][1][12] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][12]) begin
        scalar_argVld[9][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[9][1][12] = 1;
    end

    //------READ (scalar, global adr = 380) comb block-----//
    //s = 31; r = 0; a = 5;
    if (scalar_rdat_vld_r[31][0][5]) begin
        scalar_argdone [31][0][5] = 1;
    end
    scalar_adr[31][0][5] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][5]) begin
        scalar_argVld[31][0][5] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[31][0][5] = 1;
    end

    //------READ (scalar, global adr = 1160) comb block-----//
    //s = 2; r = 1; a = 9;
    if (scalar_rdat_vld_r[2][1][9]) begin
        scalar_argdone [2][1][9] = 1;
    end
    scalar_adr[2][1][9] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][9]) begin
        scalar_argVld[2][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[2][1][9] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 0; a = 14;
    if (scalar_rdat_vld_r[11][0][14]) begin
        scalar_argdone [11][0][14] = 1;
    end
    scalar_adr[11][0][14] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][14]) begin
        scalar_argVld[11][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[11][0][14] = 1;
    end

    //------READ (scalar, global adr = 476) comb block-----//
    //s = 23; r = 0; a = 14;
    if (scalar_rdat_vld_r[23][0][14]) begin
        scalar_argdone [23][0][14] = 1;
    end
    scalar_adr[23][0][14] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][14]) begin
        scalar_argVld[23][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[23][0][14] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 9;
    if (scalar_rdat_vld_r[15][1][9]) begin
        scalar_argdone [15][1][9] = 1;
    end
    scalar_adr[15][1][9] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][9]) begin
        scalar_argVld[15][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[15][1][9] = 1;
    end

    //------WRITE (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 3;
    if (scalar_argAck [15][1][3]) begin
        scalar_argVld [15][1][3] = 0;
        scalar_argAckdone [15][1][3] = 1;
    end
    if (hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_ap_vld_r) begin
        scalar_argVld [15][1][3] = 1;
        scalar_argAckdone [15][1][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][3] = hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_r;
    scalar_adr    [15][1][3] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 28) comb block-----//
    //s = 7; r = 0; a = 12;
    if (scalar_rdat_vld_r[7][0][12]) begin
        scalar_argdone [7][0][12] = 1;
    end
    scalar_adr[7][0][12] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][12]) begin
        scalar_argVld[7][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[7][0][12] = 1;
    end

    //------WRITE (scalar, global adr = 28) comb block-----//
    //s = 7; r = 0; a = 5;
    if (scalar_argAck [7][0][5]) begin
        scalar_argVld [7][0][5] = 0;
        scalar_argAckdone [7][0][5] = 1;
    end
    if (hls_coding_unit_hls_dup2_pcm_flag_o_ap_vld_r) begin
        scalar_argVld [7][0][5] = 1;
        scalar_argAckdone [7][0][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][5] = hls_coding_unit_hls_dup2_pcm_flag_o_r;
    scalar_adr    [7][0][5] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 504) comb block-----//
    //s = 30; r = 0; a = 5;
    if (scalar_rdat_vld_r[30][0][5]) begin
        scalar_argdone [30][0][5] = 1;
    end
    scalar_adr[30][0][5] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][5]) begin
        scalar_argVld[30][0][5] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[30][0][5] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 13;
    if (scalar_rdat_vld_r[12][0][13]) begin
        scalar_argdone [12][0][13] = 1;
    end
    scalar_adr[12][0][13] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][13]) begin
        scalar_argVld[12][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[12][0][13] = 1;
    end

    //------WRITE (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 3;
    if (scalar_argAck [12][0][3]) begin
        scalar_argVld [12][0][3] = 0;
        scalar_argAckdone [12][0][3] = 1;
    end
    if (hls_coding_unit_hls_dup2_pred_mode_o_ap_vld_r) begin
        scalar_argVld [12][0][3] = 1;
        scalar_argAckdone [12][0][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][3] = hls_coding_unit_hls_dup2_pred_mode_o_r;
    scalar_adr    [12][0][3] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 0; a = 16;
    if (scalar_rdat_vld_r[13][0][16]) begin
        scalar_argdone [13][0][16] = 1;
    end
    scalar_adr[13][0][16] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][16]) begin
        scalar_argVld[13][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[13][0][16] = 1;
    end

    //------WRITE (scalar, global adr = 564) comb block-----//
    //s = 13; r = 1; a = 3;
    if (scalar_argAck [13][1][3]) begin
        scalar_argVld [13][1][3] = 0;
        scalar_argAckdone [13][1][3] = 1;
    end
    if (hls_coding_unit_hls_dup2_part_mode_o_ap_vld_r) begin
        scalar_argVld [13][1][3] = 1;
        scalar_argAckdone [13][1][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][3] = hls_coding_unit_hls_dup2_part_mode_o_r;
    scalar_adr    [13][1][3] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 576) comb block-----//
    //s = 16; r = 1; a = 1;
    if (scalar_argAck [16][1][1]) begin
        scalar_argVld [16][1][1] = 0;
        scalar_argAckdone [16][1][1] = 1;
    end
    if (hls_coding_unit_hls_dup2_max_trafo_depth_ap_vld_r) begin
        scalar_argVld [16][1][1] = 1;
        scalar_argAckdone [16][1][1] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][1][1] = hls_coding_unit_hls_dup2_max_trafo_depth_r;
    scalar_adr    [16][1][1] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 32) comb block-----//
    //s = 8; r = 1; a = 9;
    if (scalar_rdat_vld_r[8][1][9]) begin
        scalar_argdone [8][1][9] = 1;
    end
    scalar_adr[8][1][9] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][9]) begin
        scalar_argVld[8][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[8][1][9] = 1;
    end

    //------WRITE (scalar, global adr = 32) comb block-----//
    //s = 8; r = 1; a = 2;
    if (scalar_argAck [8][1][2]) begin
        scalar_argVld [8][1][2] = 0;
        scalar_argAckdone [8][1][2] = 1;
    end
    if (hls_coding_unit_hls_dup2_cb_size_o_ap_vld_r) begin
        scalar_argVld [8][1][2] = 1;
        scalar_argAckdone [8][1][2] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][2] = hls_coding_unit_hls_dup2_cb_size_o_r;
    scalar_adr    [8][1][2] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 44) comb block-----//
    //s = 11; r = 1; a = 13;
    if (scalar_rdat_vld_r[11][1][13]) begin
        scalar_argdone [11][1][13] = 1;
    end
    scalar_adr[11][1][13] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][13]) begin
        scalar_argVld[11][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[11][1][13] = 1;
    end

    //------WRITE (scalar, global adr = 44) comb block-----//
    //s = 11; r = 0; a = 3;
    if (scalar_argAck [11][0][3]) begin
        scalar_argVld [11][0][3] = 0;
        scalar_argAckdone [11][0][3] = 1;
    end
    if (hls_coding_unit_hls_dup2_idx_o_ap_vld_r) begin
        scalar_argVld [11][0][3] = 1;
        scalar_argAckdone [11][0][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][0][3] = hls_coding_unit_hls_dup2_idx_o_r;
    scalar_adr    [11][0][3] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1164) comb block-----//
    //s = 3; r = 0; a = 1;
    if (scalar_argAck [3][0][1]) begin
        scalar_argVld [3][0][1] = 0;
        scalar_argAckdone [3][0][1] = 1;
    end
    if (hls_coding_unit_hls_dup2_xm_xBase_ap_vld_r) begin
        scalar_argVld [3][0][1] = 1;
        scalar_argAckdone [3][0][1] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][0][1] = hls_coding_unit_hls_dup2_xm_xBase_r;
    scalar_adr    [3][0][1] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1168) comb block-----//
    //s = 4; r = 0; a = 1;
    if (scalar_argAck [4][0][1]) begin
        scalar_argVld [4][0][1] = 0;
        scalar_argAckdone [4][0][1] = 1;
    end
    if (hls_coding_unit_hls_dup2_xm_yBase_ap_vld_r) begin
        scalar_argVld [4][0][1] = 1;
        scalar_argAckdone [4][0][1] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][0][1] = hls_coding_unit_hls_dup2_xm_yBase_r;
    scalar_adr    [4][0][1] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1172) comb block-----//
    //s = 5; r = 1; a = 1;
    if (scalar_argAck [5][1][1]) begin
        scalar_argVld [5][1][1] = 0;
        scalar_argAckdone [5][1][1] = 1;
    end
    if (hls_coding_unit_hls_dup2_xm_cb_xBase_ap_vld_r) begin
        scalar_argVld [5][1][1] = 1;
        scalar_argAckdone [5][1][1] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][1] = hls_coding_unit_hls_dup2_xm_cb_xBase_r;
    scalar_adr    [5][1][1] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1176) comb block-----//
    //s = 6; r = 1; a = 2;
    if (scalar_argAck [6][1][2]) begin
        scalar_argVld [6][1][2] = 0;
        scalar_argAckdone [6][1][2] = 1;
    end
    if (hls_coding_unit_hls_dup2_xm_cb_yBase_ap_vld_r) begin
        scalar_argVld [6][1][2] = 1;
        scalar_argAckdone [6][1][2] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][2] = hls_coding_unit_hls_dup2_xm_cb_yBase_r;
    scalar_adr    [6][1][2] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1180) comb block-----//
    //s = 7; r = 1; a = 5;
    if (scalar_argAck [7][1][5]) begin
        scalar_argVld [7][1][5] = 0;
        scalar_argAckdone [7][1][5] = 1;
    end
    if (hls_coding_unit_hls_dup2_xm_log2_cb_size_ap_vld_r) begin
        scalar_argVld [7][1][5] = 1;
        scalar_argAckdone [7][1][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][5] = hls_coding_unit_hls_dup2_xm_log2_cb_size_r;
    scalar_adr    [7][1][5] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1336) comb block-----//
    //s = 14; r = 1; a = 11;
    if (scalar_rdat_vld_r[14][1][11]) begin
        scalar_argdone [14][1][11] = 1;
    end
    scalar_adr[14][1][11] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][11]) begin
        scalar_argVld[14][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[14][1][11] = 1;
    end

    //------READ (scalar, global adr = 1332) comb block-----//
    //s = 13; r = 1; a = 15;
    if (scalar_rdat_vld_r[13][1][15]) begin
        scalar_argdone [13][1][15] = 1;
    end
    scalar_adr[13][1][15] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][15]) begin
        scalar_argVld[13][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[13][1][15] = 1;
    end

    //------READ (scalar, global adr = 1340) comb block-----//
    //s = 15; r = 0; a = 11;
    if (scalar_rdat_vld_r[15][0][11]) begin
        scalar_argdone [15][0][11] = 1;
    end
    scalar_adr[15][0][11] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][11]) begin
        scalar_argVld[15][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[15][0][11] = 1;
    end

    //------READ (scalar, global adr = 1344) comb block-----//
    //s = 16; r = 1; a = 8;
    if (scalar_rdat_vld_r[16][1][8]) begin
        scalar_argdone [16][1][8] = 1;
    end
    scalar_adr[16][1][8] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][8]) begin
        scalar_argVld[16][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[16][1][8] = 1;
    end

    //------READ (scalar, global adr = 1348) comb block-----//
    //s = 17; r = 1; a = 6;
    if (scalar_rdat_vld_r[17][1][6]) begin
        scalar_argdone [17][1][6] = 1;
    end
    scalar_adr[17][1][6] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][6]) begin
        scalar_argVld[17][1][6] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[17][1][6] = 1;
    end

    //------READ (scalar, global adr = 1352) comb block-----//
    //s = 18; r = 1; a = 5;
    if (scalar_rdat_vld_r[18][1][5]) begin
        scalar_argdone [18][1][5] = 1;
    end
    scalar_adr[18][1][5] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][5]) begin
        scalar_argVld[18][1][5] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[18][1][5] = 1;
    end

    //------READ (scalar, global adr = 1236) comb block-----//
    //s = 21; r = 0; a = 14;
    if (scalar_rdat_vld_r[21][0][14]) begin
        scalar_argdone [21][0][14] = 1;
    end
    scalar_adr[21][0][14] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][14]) begin
        scalar_argVld[21][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[21][0][14] = 1;
    end

    //------WRITE (scalar, global adr = 36) comb block-----//
    //s = 9; r = 1; a = 4;
    if (scalar_argAck [9][1][4]) begin
        scalar_argVld [9][1][4] = 0;
        scalar_argAckdone [9][1][4] = 1;
    end
    if (hls_coding_unit_hls_dup2_length_r_ap_vld_r) begin
        scalar_argVld [9][1][4] = 1;
        scalar_argAckdone [9][1][4] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][4] = hls_coding_unit_hls_dup2_length_r_r;
    scalar_adr    [9][1][4] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 544) comb block-----//
    //s = 8; r = 0; a = 3;
    if (scalar_argAck [8][0][3]) begin
        scalar_argVld [8][0][3] = 0;
        scalar_argAckdone [8][0][3] = 1;
    end
    if (hls_coding_unit_hls_dup2_xm_x_ap_vld_r) begin
        scalar_argVld [8][0][3] = 1;
        scalar_argAckdone [8][0][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][3] = hls_coding_unit_hls_dup2_xm_x_r;
    scalar_adr    [8][0][3] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 548) comb block-----//
    //s = 9; r = 0; a = 5;
    if (scalar_argAck [9][0][5]) begin
        scalar_argVld [9][0][5] = 0;
        scalar_argAckdone [9][0][5] = 1;
    end
    if (hls_coding_unit_hls_dup2_xm_y_ap_vld_r) begin
        scalar_argVld [9][0][5] = 1;
        scalar_argAckdone [9][0][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][5] = hls_coding_unit_hls_dup2_xm_y_r;
    scalar_adr    [9][0][5] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 1; a = 4;
    if (scalar_argAck [0][1][4]) begin
        scalar_argVld [0][1][4] = 0;
        scalar_argAckdone [0][1][4] = 1;
    end
    if (hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_ap_vld_r) begin
        scalar_argVld [0][1][4] = 1;
        scalar_argAckdone [0][1][4] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][4] = hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_r;
    scalar_adr    [0][1][4] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 0; a = 5;
    if (scalar_argAck [0][0][5]) begin
        scalar_argVld [0][0][5] = 0;
        scalar_argAckdone [0][0][5] = 1;
    end
    if (hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_ap_vld_r) begin
        scalar_argVld [0][0][5] = 1;
        scalar_argAckdone [0][0][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][5] = hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_r;
    scalar_adr    [0][0][5] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 1; a = 5;
    if (scalar_argAck [0][1][5]) begin
        scalar_argVld [0][1][5] = 0;
        scalar_argAckdone [0][1][5] = 1;
    end
    if (hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_ap_vld_r) begin
        scalar_argVld [0][1][5] = 1;
        scalar_argAckdone [0][1][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][5] = hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_r;
    scalar_adr    [0][1][5] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 0; a = 6;
    if (scalar_argAck [0][0][6]) begin
        scalar_argVld [0][0][6] = 0;
        scalar_argAckdone [0][0][6] = 1;
    end
    if (hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_ap_vld_r) begin
        scalar_argVld [0][0][6] = 1;
        scalar_argAckdone [0][0][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][6] = hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_r;
    scalar_adr    [0][0][6] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 540) comb block-----//
    //s = 7; r = 0; a = 6;
    if (scalar_argAck [7][0][6]) begin
        scalar_argVld [7][0][6] = 0;
        scalar_argAckdone [7][0][6] = 1;
    end
    if (hls_coding_unit_hls_dup2_qPy_pred_ap_vld_r) begin
        scalar_argVld [7][0][6] = 1;
        scalar_argAckdone [7][0][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][6] = hls_coding_unit_hls_dup2_qPy_pred_r;
    scalar_adr    [7][0][6] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 24) comb block-----//
    //s = 6; r = 0; a = 3;
    if (scalar_argAck [6][0][3]) begin
        scalar_argVld [6][0][3] = 0;
        scalar_argAckdone [6][0][3] = 1;
    end
    if (hls_coding_unit_hls_dup2_skip_flag_start_ap_vld_r) begin
        scalar_argVld [6][0][3] = 1;
        scalar_argAckdone [6][0][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][3] = hls_coding_unit_hls_dup2_skip_flag_start_r;
    scalar_adr    [6][0][3] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 1; a = 10;
    if (scalar_rdat_vld_r[28][1][10]) begin
        scalar_argdone [28][1][10] = 1;
    end
    scalar_adr[28][1][10] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][10]) begin
        scalar_argVld[28][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[28][1][10] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 11;
    if (scalar_rdat_vld_r[26][0][11]) begin
        scalar_argdone [26][0][11] = 1;
    end
    scalar_adr[26][0][11] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][11]) begin
        scalar_argVld[26][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[26][0][11] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 0; a = 17;
    if (scalar_rdat_vld_r[13][0][17]) begin
        scalar_argdone [13][0][17] = 1;
    end
    scalar_adr[13][0][17] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][17]) begin
        scalar_argVld[13][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[13][0][17] = 1;
    end

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 12;
    if (scalar_rdat_vld_r[6][1][12]) begin
        scalar_argdone [6][1][12] = 1;
    end
    scalar_adr[6][1][12] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][12]) begin
        scalar_argVld[6][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[6][1][12] = 1;
    end

    //------READ (scalar, global adr = 440) comb block-----//
    //s = 14; r = 0; a = 13;
    if (scalar_rdat_vld_r[14][0][13]) begin
        scalar_argdone [14][0][13] = 1;
    end
    scalar_adr[14][0][13] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][13]) begin
        scalar_argVld[14][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[14][0][13] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 0; a = 11;
    if (scalar_rdat_vld_r[2][0][11]) begin
        scalar_argdone [2][0][11] = 1;
    end
    scalar_adr[2][0][11] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][11]) begin
        scalar_argVld[2][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[2][0][11] = 1;
    end

    //------WRITE (scalar, global adr = 568) comb block-----//
    //s = 14; r = 1; a = 3;
    if (scalar_argAck [14][1][3]) begin
        scalar_argVld [14][1][3] = 0;
        scalar_argAckdone [14][1][3] = 1;
    end
    if (hls_coding_unit_hls_dup2_intra_split_flag_ap_vld_r) begin
        scalar_argVld [14][1][3] = 1;
        scalar_argAckdone [14][1][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][3] = hls_coding_unit_hls_dup2_intra_split_flag_r;
    scalar_adr    [14][1][3] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 0; a = 7;
    if (scalar_rdat_vld_r[17][0][7]) begin
        scalar_argdone [17][0][7] = 1;
    end
    scalar_adr[17][0][7] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][7]) begin
        scalar_argVld[17][0][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[17][0][7] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 0; a = 11;
    if (scalar_rdat_vld_r[24][0][11]) begin
        scalar_argdone [24][0][11] = 1;
    end
    scalar_adr[24][0][11] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][11]) begin
        scalar_argVld[24][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[24][0][11] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 13;
    if (scalar_rdat_vld_r[23][1][13]) begin
        scalar_argdone [23][1][13] = 1;
    end
    scalar_adr[23][1][13] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][13]) begin
        scalar_argVld[23][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[23][1][13] = 1;
    end

    //------READ (scalar, global adr = 320) comb block-----//
    //s = 16; r = 0; a = 9;
    if (scalar_rdat_vld_r[16][0][9]) begin
        scalar_argdone [16][0][9] = 1;
    end
    scalar_adr[16][0][9] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][9]) begin
        scalar_argVld[16][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[16][0][9] = 1;
    end

    //------READ (scalar, global adr = 400) comb block-----//
    //s = 4; r = 1; a = 5;
    if (scalar_rdat_vld_r[4][1][5]) begin
        scalar_argdone [4][1][5] = 1;
    end
    scalar_adr[4][1][5] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][1][5]) begin
        scalar_argVld[4][1][5] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[4][1][5] = 1;
    end

    //------READ (scalar, global adr = 412) comb block-----//
    //s = 7; r = 1; a = 11;
    if (scalar_rdat_vld_r[7][1][11]) begin
        scalar_argdone [7][1][11] = 1;
    end
    scalar_adr[7][1][11] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][11]) begin
        scalar_argVld[7][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[7][1][11] = 1;
    end

    //------READ (scalar, global adr = 416) comb block-----//
    //s = 8; r = 0; a = 10;
    if (scalar_rdat_vld_r[8][0][10]) begin
        scalar_argdone [8][0][10] = 1;
    end
    scalar_adr[8][0][10] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][10]) begin
        scalar_argVld[8][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[8][0][10] = 1;
    end

    //------READ (scalar, global adr = 464) comb block-----//
    //s = 20; r = 0; a = 10;
    if (scalar_rdat_vld_r[20][0][10]) begin
        scalar_argdone [20][0][10] = 1;
    end
    scalar_adr[20][0][10] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][10]) begin
        scalar_argVld[20][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[20][0][10] = 1;
    end

    //------READ (scalar, global adr = 1288) comb block-----//
    //s = 2; r = 1; a = 10;
    if (scalar_rdat_vld_r[2][1][10]) begin
        scalar_argdone [2][1][10] = 1;
    end
    scalar_adr[2][1][10] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][10]) begin
        scalar_argVld[2][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[2][1][10] = 1;
    end

    //------READ (scalar, global adr = 1272) comb block-----//
    //s = 30; r = 1; a = 5;
    if (scalar_rdat_vld_r[30][1][5]) begin
        scalar_argdone [30][1][5] = 1;
    end
    scalar_adr[30][1][5] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][5]) begin
        scalar_argVld[30][1][5] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[30][1][5] = 1;
    end

    //------READ (scalar, global adr = 1280) comb block-----//
    //s = 0; r = 0; a = 16;
    if (scalar_rdat_vld_r[0][0][16]) begin
        scalar_argdone [0][0][16] = 1;
    end
    scalar_adr[0][0][16] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][16]) begin
        scalar_argVld[0][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[0][0][16] = 1;
    end

    if (ap_arb_ret[hls_coding_unit_hls_dup2] & ~ap_arb_ret_r[hls_coding_unit_hls_dup2]) begin
        ap_arb_ret_running[hls_coding_unit_hls_dup2] = 1;
        hls_coding_unit_hls_dup2_ready = 0;
    end

    scalar_argAckdone_all[hls_coding_unit_hls_dup2] = scalar_argAckdone[15][1][3] &
                                                scalar_argAckdone[7][0][5] &
                                                scalar_argAckdone[12][0][3] &
                                                scalar_argAckdone[13][1][3] &
                                                scalar_argAckdone[16][1][1] &
                                                scalar_argAckdone[8][1][2] &
                                                scalar_argAckdone[11][0][3] &
                                                scalar_argAckdone[3][0][1] &
                                                scalar_argAckdone[4][0][1] &
                                                scalar_argAckdone[5][1][1] &
                                                scalar_argAckdone[6][1][2] &
                                                scalar_argAckdone[7][1][5] &
                                                scalar_argAckdone[9][1][4] &
                                                scalar_argAckdone[8][0][3] &
                                                scalar_argAckdone[9][0][5] &
                                                scalar_argAckdone[0][1][4] &
                                                scalar_argAckdone[0][0][5] &
                                                scalar_argAckdone[0][1][5] &
                                                scalar_argAckdone[0][0][6] &
                                                scalar_argAckdone[7][0][6] &
                                                scalar_argAckdone[6][0][3] &
                                                scalar_argAckdone[14][1][3];
    if (ap_arb_ret_running[hls_coding_unit_hls_dup2] & scalar_argAckdone_all[hls_coding_unit_hls_dup2] &~ ap_arb_reload_running_r[hls_coding_unit_hls_dup2]) begin
        ap_arb_reload[hls_coding_unit_hls_dup2] = 1;
        ap_arb_reload_running[hls_coding_unit_hls_dup2] = 1;
    end

    if (ap_arb_start[hls_coding_unit_hls_dup2] &~ ap_arb_start_r[hls_coding_unit_hls_dup2]) begin
        ap_arb_start_running[hls_coding_unit_hls_dup2] = 1;
    end

    if (ap_arb_start_running[hls_coding_unit_hls_dup2] & ~scalar_writing_476& ~scalar_writing_572& ~scalar_writing_28& ~scalar_writing_560& ~scalar_writing_564& ~scalar_writing_32& ~scalar_writing_44& ~scalar_writing_536& ~scalar_writing_608& ~scalar_writing_604& ~scalar_writing_464) begin
        ap_arb_start_running[hls_coding_unit_hls_dup2] = 0;
        ap_arb_reload[hls_coding_unit_hls_dup2] = 1;
    end

    scalar_argdone_all[hls_coding_unit_hls_dup2] = scalar_argdone[9][1][12] &
                                                                scalar_argdone[31][0][5] &
                                                                scalar_argdone[2][1][9] &
                                                                scalar_argdone[11][0][14] &
                                                                scalar_argdone[23][0][14] &
                                                                scalar_argdone[15][1][9] &
                                                                scalar_argdone[7][0][12] &
                                                                scalar_argdone[30][0][5] &
                                                                scalar_argdone[12][0][13] &
                                                                scalar_argdone[13][0][16] &
                                                                scalar_argdone[8][1][9] &
                                                                scalar_argdone[11][1][13] &
                                                                scalar_argdone[14][1][11] &
                                                                scalar_argdone[13][1][15] &
                                                                scalar_argdone[15][0][11] &
                                                                scalar_argdone[16][1][8] &
                                                                scalar_argdone[17][1][6] &
                                                                scalar_argdone[18][1][5] &
                                                                scalar_argdone[21][0][14] &
                                                                scalar_argdone[28][1][10] &
                                                                scalar_argdone[26][0][11] &
                                                                scalar_argdone[13][0][17] &
                                                                scalar_argdone[6][1][12] &
                                                                scalar_argdone[14][0][13] &
                                                                scalar_argdone[2][0][11] &
                                                                scalar_argdone[17][0][7] &
                                                                scalar_argdone[24][0][11] &
                                                                scalar_argdone[23][1][13] &
                                                                scalar_argdone[16][0][9] &
                                                                scalar_argdone[4][1][5] &
                                                                scalar_argdone[7][1][11] &
                                                                scalar_argdone[8][0][10] &
                                                                scalar_argdone[20][0][10] &
                                                                scalar_argdone[2][1][10] &
                                                                scalar_argdone[30][1][5] &
                                                                scalar_argdone[0][0][16];

    if (scalar_argdone_all_r[hls_coding_unit_hls_dup2]) begin
        scalar_argdone[9][1][12] = 0;
        scalar_argdone[31][0][5] = 0;
        scalar_argdone[2][1][9] = 0;
        scalar_argdone[11][0][14] = 0;
        scalar_argdone[23][0][14] = 0;
        scalar_argdone[15][1][9] = 0;
        scalar_argdone[7][0][12] = 0;
        scalar_argdone[30][0][5] = 0;
        scalar_argdone[12][0][13] = 0;
        scalar_argdone[13][0][16] = 0;
        scalar_argdone[8][1][9] = 0;
        scalar_argdone[11][1][13] = 0;
        scalar_argdone[14][1][11] = 0;
        scalar_argdone[13][1][15] = 0;
        scalar_argdone[15][0][11] = 0;
        scalar_argdone[16][1][8] = 0;
        scalar_argdone[17][1][6] = 0;
        scalar_argdone[18][1][5] = 0;
        scalar_argdone[21][0][14] = 0;
        scalar_argdone[28][1][10] = 0;
        scalar_argdone[26][0][11] = 0;
        scalar_argdone[13][0][17] = 0;
        scalar_argdone[6][1][12] = 0;
        scalar_argdone[14][0][13] = 0;
        scalar_argdone[2][0][11] = 0;
        scalar_argdone[17][0][7] = 0;
        scalar_argdone[24][0][11] = 0;
        scalar_argdone[23][1][13] = 0;
        scalar_argdone[16][0][9] = 0;
        scalar_argdone[4][1][5] = 0;
        scalar_argdone[7][1][11] = 0;
        scalar_argdone[8][0][10] = 0;
        scalar_argdone[20][0][10] = 0;
        scalar_argdone[2][1][10] = 0;
        scalar_argdone[30][1][5] = 0;
        scalar_argdone[0][0][16] = 0;

        if (ap_arb_start_r[hls_coding_unit_hls_dup2] & ~ap_running_r[hls_coding_unit_hls_dup2]) begin
            ap_start[hls_coding_unit_hls_dup2] = 1;
            ap_running[hls_coding_unit_hls_dup2] = 1;
        end
        else if (ap_arb_ret_running_r[hls_coding_unit_hls_dup2]) begin
            ap_arb_ret_running[hls_coding_unit_hls_dup2] = 0;
            ap_arb_reload_running[hls_coding_unit_hls_dup2] = 0;
            hls_coding_unit_hls_dup2_ready = 1;
        end
    end

    if (ap_start_r[hls_coding_unit_hls_dup2] & ap_ready_r[hls_coding_unit_hls_dup2]) begin
        ap_start[hls_coding_unit_hls_dup2] = 0;
    end

    if (ap_done_r[hls_coding_unit_hls_dup2]) begin
        ap_running[hls_coding_unit_hls_dup2] = 0;
    end
`endif
    //============================================================
    //hls_coding_unit_hls_dup3       (f = 21)
    //============================================================
`ifdef enable_connect_hls_coding_unit_hls_dup3
    //------READ (scalar, global adr = 420) comb block-----//
    //s = 9; r = 0; a = 13;
    if (scalar_rdat_vld_r[9][0][13]) begin
        scalar_argdone [9][0][13] = 1;
    end
    scalar_adr[9][0][13] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][13]) begin
        scalar_argVld[9][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[9][0][13] = 1;
    end

    //------READ (scalar, global adr = 380) comb block-----//
    //s = 31; r = 1; a = 4;
    if (scalar_rdat_vld_r[31][1][4]) begin
        scalar_argdone [31][1][4] = 1;
    end
    scalar_adr[31][1][4] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][4]) begin
        scalar_argVld[31][1][4] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[31][1][4] = 1;
    end

    //------READ (scalar, global adr = 1160) comb block-----//
    //s = 2; r = 0; a = 12;
    if (scalar_rdat_vld_r[2][0][12]) begin
        scalar_argdone [2][0][12] = 1;
    end
    scalar_adr[2][0][12] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][12]) begin
        scalar_argVld[2][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[2][0][12] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 0; a = 15;
    if (scalar_rdat_vld_r[11][0][15]) begin
        scalar_argdone [11][0][15] = 1;
    end
    scalar_adr[11][0][15] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][15]) begin
        scalar_argVld[11][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[11][0][15] = 1;
    end

    //------READ (scalar, global adr = 476) comb block-----//
    //s = 23; r = 0; a = 15;
    if (scalar_rdat_vld_r[23][0][15]) begin
        scalar_argdone [23][0][15] = 1;
    end
    scalar_adr[23][0][15] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][15]) begin
        scalar_argVld[23][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[23][0][15] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 10;
    if (scalar_rdat_vld_r[15][1][10]) begin
        scalar_argdone [15][1][10] = 1;
    end
    scalar_adr[15][1][10] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][10]) begin
        scalar_argVld[15][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[15][1][10] = 1;
    end

    //------WRITE (scalar, global adr = 572) comb block-----//
    //s = 15; r = 0; a = 4;
    if (scalar_argAck [15][0][4]) begin
        scalar_argVld [15][0][4] = 0;
        scalar_argAckdone [15][0][4] = 1;
    end
    if (hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_ap_vld_r) begin
        scalar_argVld [15][0][4] = 1;
        scalar_argAckdone [15][0][4] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][4] = hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_r;
    scalar_adr    [15][0][4] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 28) comb block-----//
    //s = 7; r = 0; a = 13;
    if (scalar_rdat_vld_r[7][0][13]) begin
        scalar_argdone [7][0][13] = 1;
    end
    scalar_adr[7][0][13] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][13]) begin
        scalar_argVld[7][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[7][0][13] = 1;
    end

    //------WRITE (scalar, global adr = 28) comb block-----//
    //s = 7; r = 1; a = 6;
    if (scalar_argAck [7][1][6]) begin
        scalar_argVld [7][1][6] = 0;
        scalar_argAckdone [7][1][6] = 1;
    end
    if (hls_coding_unit_hls_dup3_pcm_flag_o_ap_vld_r) begin
        scalar_argVld [7][1][6] = 1;
        scalar_argAckdone [7][1][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][6] = hls_coding_unit_hls_dup3_pcm_flag_o_r;
    scalar_adr    [7][1][6] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 504) comb block-----//
    //s = 30; r = 0; a = 6;
    if (scalar_rdat_vld_r[30][0][6]) begin
        scalar_argdone [30][0][6] = 1;
    end
    scalar_adr[30][0][6] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][6]) begin
        scalar_argVld[30][0][6] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[30][0][6] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 1; a = 12;
    if (scalar_rdat_vld_r[12][1][12]) begin
        scalar_argdone [12][1][12] = 1;
    end
    scalar_adr[12][1][12] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][12]) begin
        scalar_argVld[12][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[12][1][12] = 1;
    end

    //------WRITE (scalar, global adr = 560) comb block-----//
    //s = 12; r = 1; a = 3;
    if (scalar_argAck [12][1][3]) begin
        scalar_argVld [12][1][3] = 0;
        scalar_argAckdone [12][1][3] = 1;
    end
    if (hls_coding_unit_hls_dup3_pred_mode_o_ap_vld_r) begin
        scalar_argVld [12][1][3] = 1;
        scalar_argAckdone [12][1][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][3] = hls_coding_unit_hls_dup3_pred_mode_o_r;
    scalar_adr    [12][1][3] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 1; a = 16;
    if (scalar_rdat_vld_r[13][1][16]) begin
        scalar_argdone [13][1][16] = 1;
    end
    scalar_adr[13][1][16] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][16]) begin
        scalar_argVld[13][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[13][1][16] = 1;
    end

    //------WRITE (scalar, global adr = 564) comb block-----//
    //s = 13; r = 0; a = 4;
    if (scalar_argAck [13][0][4]) begin
        scalar_argVld [13][0][4] = 0;
        scalar_argAckdone [13][0][4] = 1;
    end
    if (hls_coding_unit_hls_dup3_part_mode_o_ap_vld_r) begin
        scalar_argVld [13][0][4] = 1;
        scalar_argAckdone [13][0][4] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][4] = hls_coding_unit_hls_dup3_part_mode_o_r;
    scalar_adr    [13][0][4] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 576) comb block-----//
    //s = 16; r = 0; a = 2;
    if (scalar_argAck [16][0][2]) begin
        scalar_argVld [16][0][2] = 0;
        scalar_argAckdone [16][0][2] = 1;
    end
    if (hls_coding_unit_hls_dup3_max_trafo_depth_ap_vld_r) begin
        scalar_argVld [16][0][2] = 1;
        scalar_argAckdone [16][0][2] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][0][2] = hls_coding_unit_hls_dup3_max_trafo_depth_r;
    scalar_adr    [16][0][2] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 32) comb block-----//
    //s = 8; r = 1; a = 10;
    if (scalar_rdat_vld_r[8][1][10]) begin
        scalar_argdone [8][1][10] = 1;
    end
    scalar_adr[8][1][10] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][10]) begin
        scalar_argVld[8][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[8][1][10] = 1;
    end

    //------WRITE (scalar, global adr = 32) comb block-----//
    //s = 8; r = 1; a = 3;
    if (scalar_argAck [8][1][3]) begin
        scalar_argVld [8][1][3] = 0;
        scalar_argAckdone [8][1][3] = 1;
    end
    if (hls_coding_unit_hls_dup3_cb_size_o_ap_vld_r) begin
        scalar_argVld [8][1][3] = 1;
        scalar_argAckdone [8][1][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][3] = hls_coding_unit_hls_dup3_cb_size_o_r;
    scalar_adr    [8][1][3] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 44) comb block-----//
    //s = 11; r = 1; a = 14;
    if (scalar_rdat_vld_r[11][1][14]) begin
        scalar_argdone [11][1][14] = 1;
    end
    scalar_adr[11][1][14] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][14]) begin
        scalar_argVld[11][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[11][1][14] = 1;
    end

    //------WRITE (scalar, global adr = 44) comb block-----//
    //s = 11; r = 1; a = 3;
    if (scalar_argAck [11][1][3]) begin
        scalar_argVld [11][1][3] = 0;
        scalar_argAckdone [11][1][3] = 1;
    end
    if (hls_coding_unit_hls_dup3_idx_o_ap_vld_r) begin
        scalar_argVld [11][1][3] = 1;
        scalar_argAckdone [11][1][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][1][3] = hls_coding_unit_hls_dup3_idx_o_r;
    scalar_adr    [11][1][3] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1164) comb block-----//
    //s = 3; r = 1; a = 1;
    if (scalar_argAck [3][1][1]) begin
        scalar_argVld [3][1][1] = 0;
        scalar_argAckdone [3][1][1] = 1;
    end
    if (hls_coding_unit_hls_dup3_xm_xBase_ap_vld_r) begin
        scalar_argVld [3][1][1] = 1;
        scalar_argAckdone [3][1][1] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][1][1] = hls_coding_unit_hls_dup3_xm_xBase_r;
    scalar_adr    [3][1][1] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1168) comb block-----//
    //s = 4; r = 1; a = 1;
    if (scalar_argAck [4][1][1]) begin
        scalar_argVld [4][1][1] = 0;
        scalar_argAckdone [4][1][1] = 1;
    end
    if (hls_coding_unit_hls_dup3_xm_yBase_ap_vld_r) begin
        scalar_argVld [4][1][1] = 1;
        scalar_argAckdone [4][1][1] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][1][1] = hls_coding_unit_hls_dup3_xm_yBase_r;
    scalar_adr    [4][1][1] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1172) comb block-----//
    //s = 5; r = 0; a = 2;
    if (scalar_argAck [5][0][2]) begin
        scalar_argVld [5][0][2] = 0;
        scalar_argAckdone [5][0][2] = 1;
    end
    if (hls_coding_unit_hls_dup3_xm_cb_xBase_ap_vld_r) begin
        scalar_argVld [5][0][2] = 1;
        scalar_argAckdone [5][0][2] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][2] = hls_coding_unit_hls_dup3_xm_cb_xBase_r;
    scalar_adr    [5][0][2] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1176) comb block-----//
    //s = 6; r = 1; a = 3;
    if (scalar_argAck [6][1][3]) begin
        scalar_argVld [6][1][3] = 0;
        scalar_argAckdone [6][1][3] = 1;
    end
    if (hls_coding_unit_hls_dup3_xm_cb_yBase_ap_vld_r) begin
        scalar_argVld [6][1][3] = 1;
        scalar_argAckdone [6][1][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][3] = hls_coding_unit_hls_dup3_xm_cb_yBase_r;
    scalar_adr    [6][1][3] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1180) comb block-----//
    //s = 7; r = 0; a = 7;
    if (scalar_argAck [7][0][7]) begin
        scalar_argVld [7][0][7] = 0;
        scalar_argAckdone [7][0][7] = 1;
    end
    if (hls_coding_unit_hls_dup3_xm_log2_cb_size_ap_vld_r) begin
        scalar_argVld [7][0][7] = 1;
        scalar_argAckdone [7][0][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][7] = hls_coding_unit_hls_dup3_xm_log2_cb_size_r;
    scalar_adr    [7][0][7] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1336) comb block-----//
    //s = 14; r = 1; a = 12;
    if (scalar_rdat_vld_r[14][1][12]) begin
        scalar_argdone [14][1][12] = 1;
    end
    scalar_adr[14][1][12] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][12]) begin
        scalar_argVld[14][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[14][1][12] = 1;
    end

    //------READ (scalar, global adr = 1332) comb block-----//
    //s = 13; r = 0; a = 18;
    if (scalar_rdat_vld_r[13][0][18]) begin
        scalar_argdone [13][0][18] = 1;
    end
    scalar_adr[13][0][18] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][18]) begin
        scalar_argVld[13][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[13][0][18] = 1;
    end

    //------READ (scalar, global adr = 1340) comb block-----//
    //s = 15; r = 0; a = 12;
    if (scalar_rdat_vld_r[15][0][12]) begin
        scalar_argdone [15][0][12] = 1;
    end
    scalar_adr[15][0][12] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][12]) begin
        scalar_argVld[15][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[15][0][12] = 1;
    end

    //------READ (scalar, global adr = 1344) comb block-----//
    //s = 16; r = 1; a = 9;
    if (scalar_rdat_vld_r[16][1][9]) begin
        scalar_argdone [16][1][9] = 1;
    end
    scalar_adr[16][1][9] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][9]) begin
        scalar_argVld[16][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[16][1][9] = 1;
    end

    //------READ (scalar, global adr = 1348) comb block-----//
    //s = 17; r = 1; a = 7;
    if (scalar_rdat_vld_r[17][1][7]) begin
        scalar_argdone [17][1][7] = 1;
    end
    scalar_adr[17][1][7] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][7]) begin
        scalar_argVld[17][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[17][1][7] = 1;
    end

    //------READ (scalar, global adr = 1352) comb block-----//
    //s = 18; r = 0; a = 6;
    if (scalar_rdat_vld_r[18][0][6]) begin
        scalar_argdone [18][0][6] = 1;
    end
    scalar_adr[18][0][6] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][6]) begin
        scalar_argVld[18][0][6] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[18][0][6] = 1;
    end

    //------READ (scalar, global adr = 1236) comb block-----//
    //s = 21; r = 1; a = 13;
    if (scalar_rdat_vld_r[21][1][13]) begin
        scalar_argdone [21][1][13] = 1;
    end
    scalar_adr[21][1][13] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][13]) begin
        scalar_argVld[21][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[21][1][13] = 1;
    end

    //------WRITE (scalar, global adr = 36) comb block-----//
    //s = 9; r = 1; a = 5;
    if (scalar_argAck [9][1][5]) begin
        scalar_argVld [9][1][5] = 0;
        scalar_argAckdone [9][1][5] = 1;
    end
    if (hls_coding_unit_hls_dup3_length_r_ap_vld_r) begin
        scalar_argVld [9][1][5] = 1;
        scalar_argAckdone [9][1][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][5] = hls_coding_unit_hls_dup3_length_r_r;
    scalar_adr    [9][1][5] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 544) comb block-----//
    //s = 8; r = 0; a = 4;
    if (scalar_argAck [8][0][4]) begin
        scalar_argVld [8][0][4] = 0;
        scalar_argAckdone [8][0][4] = 1;
    end
    if (hls_coding_unit_hls_dup3_xm_x_ap_vld_r) begin
        scalar_argVld [8][0][4] = 1;
        scalar_argAckdone [8][0][4] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][4] = hls_coding_unit_hls_dup3_xm_x_r;
    scalar_adr    [8][0][4] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 548) comb block-----//
    //s = 9; r = 0; a = 6;
    if (scalar_argAck [9][0][6]) begin
        scalar_argVld [9][0][6] = 0;
        scalar_argAckdone [9][0][6] = 1;
    end
    if (hls_coding_unit_hls_dup3_xm_y_ap_vld_r) begin
        scalar_argVld [9][0][6] = 1;
        scalar_argAckdone [9][0][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][6] = hls_coding_unit_hls_dup3_xm_y_r;
    scalar_adr    [9][0][6] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 1; a = 6;
    if (scalar_argAck [0][1][6]) begin
        scalar_argVld [0][1][6] = 0;
        scalar_argAckdone [0][1][6] = 1;
    end
    if (hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_ap_vld_r) begin
        scalar_argVld [0][1][6] = 1;
        scalar_argAckdone [0][1][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][6] = hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_r;
    scalar_adr    [0][1][6] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 0; a = 7;
    if (scalar_argAck [0][0][7]) begin
        scalar_argVld [0][0][7] = 0;
        scalar_argAckdone [0][0][7] = 1;
    end
    if (hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_ap_vld_r) begin
        scalar_argVld [0][0][7] = 1;
        scalar_argAckdone [0][0][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][7] = hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_r;
    scalar_adr    [0][0][7] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 1; a = 7;
    if (scalar_argAck [0][1][7]) begin
        scalar_argVld [0][1][7] = 0;
        scalar_argAckdone [0][1][7] = 1;
    end
    if (hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_ap_vld_r) begin
        scalar_argVld [0][1][7] = 1;
        scalar_argAckdone [0][1][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][7] = hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_r;
    scalar_adr    [0][1][7] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 0; a = 8;
    if (scalar_argAck [0][0][8]) begin
        scalar_argVld [0][0][8] = 0;
        scalar_argAckdone [0][0][8] = 1;
    end
    if (hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_ap_vld_r) begin
        scalar_argVld [0][0][8] = 1;
        scalar_argAckdone [0][0][8] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][8] = hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_r;
    scalar_adr    [0][0][8] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 540) comb block-----//
    //s = 7; r = 1; a = 7;
    if (scalar_argAck [7][1][7]) begin
        scalar_argVld [7][1][7] = 0;
        scalar_argAckdone [7][1][7] = 1;
    end
    if (hls_coding_unit_hls_dup3_qPy_pred_ap_vld_r) begin
        scalar_argVld [7][1][7] = 1;
        scalar_argAckdone [7][1][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][7] = hls_coding_unit_hls_dup3_qPy_pred_r;
    scalar_adr    [7][1][7] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 24) comb block-----//
    //s = 6; r = 0; a = 4;
    if (scalar_argAck [6][0][4]) begin
        scalar_argVld [6][0][4] = 0;
        scalar_argAckdone [6][0][4] = 1;
    end
    if (hls_coding_unit_hls_dup3_skip_flag_start_ap_vld_r) begin
        scalar_argVld [6][0][4] = 1;
        scalar_argAckdone [6][0][4] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][4] = hls_coding_unit_hls_dup3_skip_flag_start_r;
    scalar_adr    [6][0][4] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 0; a = 11;
    if (scalar_rdat_vld_r[28][0][11]) begin
        scalar_argdone [28][0][11] = 1;
    end
    scalar_adr[28][0][11] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][11]) begin
        scalar_argVld[28][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[28][0][11] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 10;
    if (scalar_rdat_vld_r[26][1][10]) begin
        scalar_argdone [26][1][10] = 1;
    end
    scalar_adr[26][1][10] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][10]) begin
        scalar_argVld[26][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[26][1][10] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 1; a = 17;
    if (scalar_rdat_vld_r[13][1][17]) begin
        scalar_argdone [13][1][17] = 1;
    end
    scalar_adr[13][1][17] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][17]) begin
        scalar_argVld[13][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[13][1][17] = 1;
    end

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 0; a = 13;
    if (scalar_rdat_vld_r[6][0][13]) begin
        scalar_argdone [6][0][13] = 1;
    end
    scalar_adr[6][0][13] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][13]) begin
        scalar_argVld[6][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[6][0][13] = 1;
    end

    //------READ (scalar, global adr = 440) comb block-----//
    //s = 14; r = 0; a = 14;
    if (scalar_rdat_vld_r[14][0][14]) begin
        scalar_argdone [14][0][14] = 1;
    end
    scalar_adr[14][0][14] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][14]) begin
        scalar_argVld[14][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[14][0][14] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 1; a = 11;
    if (scalar_rdat_vld_r[2][1][11]) begin
        scalar_argdone [2][1][11] = 1;
    end
    scalar_adr[2][1][11] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][11]) begin
        scalar_argVld[2][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[2][1][11] = 1;
    end

    //------WRITE (scalar, global adr = 568) comb block-----//
    //s = 14; r = 0; a = 4;
    if (scalar_argAck [14][0][4]) begin
        scalar_argVld [14][0][4] = 0;
        scalar_argAckdone [14][0][4] = 1;
    end
    if (hls_coding_unit_hls_dup3_intra_split_flag_ap_vld_r) begin
        scalar_argVld [14][0][4] = 1;
        scalar_argAckdone [14][0][4] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][4] = hls_coding_unit_hls_dup3_intra_split_flag_r;
    scalar_adr    [14][0][4] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 0; a = 8;
    if (scalar_rdat_vld_r[17][0][8]) begin
        scalar_argdone [17][0][8] = 1;
    end
    scalar_adr[17][0][8] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][8]) begin
        scalar_argVld[17][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[17][0][8] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 10;
    if (scalar_rdat_vld_r[24][1][10]) begin
        scalar_argdone [24][1][10] = 1;
    end
    scalar_adr[24][1][10] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][10]) begin
        scalar_argVld[24][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[24][1][10] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 14;
    if (scalar_rdat_vld_r[23][1][14]) begin
        scalar_argdone [23][1][14] = 1;
    end
    scalar_adr[23][1][14] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][14]) begin
        scalar_argVld[23][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[23][1][14] = 1;
    end

    //------READ (scalar, global adr = 320) comb block-----//
    //s = 16; r = 0; a = 10;
    if (scalar_rdat_vld_r[16][0][10]) begin
        scalar_argdone [16][0][10] = 1;
    end
    scalar_adr[16][0][10] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][10]) begin
        scalar_argVld[16][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[16][0][10] = 1;
    end

    //------READ (scalar, global adr = 400) comb block-----//
    //s = 4; r = 0; a = 7;
    if (scalar_rdat_vld_r[4][0][7]) begin
        scalar_argdone [4][0][7] = 1;
    end
    scalar_adr[4][0][7] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][7]) begin
        scalar_argVld[4][0][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[4][0][7] = 1;
    end

    //------READ (scalar, global adr = 412) comb block-----//
    //s = 7; r = 1; a = 12;
    if (scalar_rdat_vld_r[7][1][12]) begin
        scalar_argdone [7][1][12] = 1;
    end
    scalar_adr[7][1][12] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][12]) begin
        scalar_argVld[7][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[7][1][12] = 1;
    end

    //------READ (scalar, global adr = 416) comb block-----//
    //s = 8; r = 0; a = 11;
    if (scalar_rdat_vld_r[8][0][11]) begin
        scalar_argdone [8][0][11] = 1;
    end
    scalar_adr[8][0][11] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][11]) begin
        scalar_argVld[8][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[8][0][11] = 1;
    end

    //------READ (scalar, global adr = 464) comb block-----//
    //s = 20; r = 1; a = 10;
    if (scalar_rdat_vld_r[20][1][10]) begin
        scalar_argdone [20][1][10] = 1;
    end
    scalar_adr[20][1][10] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][10]) begin
        scalar_argVld[20][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[20][1][10] = 1;
    end

    //------READ (scalar, global adr = 1288) comb block-----//
    //s = 2; r = 0; a = 13;
    if (scalar_rdat_vld_r[2][0][13]) begin
        scalar_argdone [2][0][13] = 1;
    end
    scalar_adr[2][0][13] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][13]) begin
        scalar_argVld[2][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[2][0][13] = 1;
    end

    //------READ (scalar, global adr = 1272) comb block-----//
    //s = 30; r = 1; a = 6;
    if (scalar_rdat_vld_r[30][1][6]) begin
        scalar_argdone [30][1][6] = 1;
    end
    scalar_adr[30][1][6] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][6]) begin
        scalar_argVld[30][1][6] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[30][1][6] = 1;
    end

    //------READ (scalar, global adr = 1280) comb block-----//
    //s = 0; r = 1; a = 15;
    if (scalar_rdat_vld_r[0][1][15]) begin
        scalar_argdone [0][1][15] = 1;
    end
    scalar_adr[0][1][15] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][15]) begin
        scalar_argVld[0][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[0][1][15] = 1;
    end

    if (ap_arb_ret[hls_coding_unit_hls_dup3] & ~ap_arb_ret_r[hls_coding_unit_hls_dup3]) begin
        ap_arb_ret_running[hls_coding_unit_hls_dup3] = 1;
        hls_coding_unit_hls_dup3_ready = 0;
    end

    scalar_argAckdone_all[hls_coding_unit_hls_dup3] = scalar_argAckdone[15][0][4] &
                                                scalar_argAckdone[7][1][6] &
                                                scalar_argAckdone[12][1][3] &
                                                scalar_argAckdone[13][0][4] &
                                                scalar_argAckdone[16][0][2] &
                                                scalar_argAckdone[8][1][3] &
                                                scalar_argAckdone[11][1][3] &
                                                scalar_argAckdone[3][1][1] &
                                                scalar_argAckdone[4][1][1] &
                                                scalar_argAckdone[5][0][2] &
                                                scalar_argAckdone[6][1][3] &
                                                scalar_argAckdone[7][0][7] &
                                                scalar_argAckdone[9][1][5] &
                                                scalar_argAckdone[8][0][4] &
                                                scalar_argAckdone[9][0][6] &
                                                scalar_argAckdone[0][1][6] &
                                                scalar_argAckdone[0][0][7] &
                                                scalar_argAckdone[0][1][7] &
                                                scalar_argAckdone[0][0][8] &
                                                scalar_argAckdone[7][1][7] &
                                                scalar_argAckdone[6][0][4] &
                                                scalar_argAckdone[14][0][4];
    if (ap_arb_ret_running[hls_coding_unit_hls_dup3] & scalar_argAckdone_all[hls_coding_unit_hls_dup3] &~ ap_arb_reload_running_r[hls_coding_unit_hls_dup3]) begin
        ap_arb_reload[hls_coding_unit_hls_dup3] = 1;
        ap_arb_reload_running[hls_coding_unit_hls_dup3] = 1;
    end

    if (ap_arb_start[hls_coding_unit_hls_dup3] &~ ap_arb_start_r[hls_coding_unit_hls_dup3]) begin
        ap_arb_start_running[hls_coding_unit_hls_dup3] = 1;
    end

    if (ap_arb_start_running[hls_coding_unit_hls_dup3] & ~scalar_writing_476& ~scalar_writing_572& ~scalar_writing_28& ~scalar_writing_560& ~scalar_writing_564& ~scalar_writing_32& ~scalar_writing_44& ~scalar_writing_536& ~scalar_writing_608& ~scalar_writing_604& ~scalar_writing_464) begin
        ap_arb_start_running[hls_coding_unit_hls_dup3] = 0;
        ap_arb_reload[hls_coding_unit_hls_dup3] = 1;
    end

    scalar_argdone_all[hls_coding_unit_hls_dup3] = scalar_argdone[9][0][13] &
                                                                scalar_argdone[31][1][4] &
                                                                scalar_argdone[2][0][12] &
                                                                scalar_argdone[11][0][15] &
                                                                scalar_argdone[23][0][15] &
                                                                scalar_argdone[15][1][10] &
                                                                scalar_argdone[7][0][13] &
                                                                scalar_argdone[30][0][6] &
                                                                scalar_argdone[12][1][12] &
                                                                scalar_argdone[13][1][16] &
                                                                scalar_argdone[8][1][10] &
                                                                scalar_argdone[11][1][14] &
                                                                scalar_argdone[14][1][12] &
                                                                scalar_argdone[13][0][18] &
                                                                scalar_argdone[15][0][12] &
                                                                scalar_argdone[16][1][9] &
                                                                scalar_argdone[17][1][7] &
                                                                scalar_argdone[18][0][6] &
                                                                scalar_argdone[21][1][13] &
                                                                scalar_argdone[28][0][11] &
                                                                scalar_argdone[26][1][10] &
                                                                scalar_argdone[13][1][17] &
                                                                scalar_argdone[6][0][13] &
                                                                scalar_argdone[14][0][14] &
                                                                scalar_argdone[2][1][11] &
                                                                scalar_argdone[17][0][8] &
                                                                scalar_argdone[24][1][10] &
                                                                scalar_argdone[23][1][14] &
                                                                scalar_argdone[16][0][10] &
                                                                scalar_argdone[4][0][7] &
                                                                scalar_argdone[7][1][12] &
                                                                scalar_argdone[8][0][11] &
                                                                scalar_argdone[20][1][10] &
                                                                scalar_argdone[2][0][13] &
                                                                scalar_argdone[30][1][6] &
                                                                scalar_argdone[0][1][15];

    if (scalar_argdone_all_r[hls_coding_unit_hls_dup3]) begin
        scalar_argdone[9][0][13] = 0;
        scalar_argdone[31][1][4] = 0;
        scalar_argdone[2][0][12] = 0;
        scalar_argdone[11][0][15] = 0;
        scalar_argdone[23][0][15] = 0;
        scalar_argdone[15][1][10] = 0;
        scalar_argdone[7][0][13] = 0;
        scalar_argdone[30][0][6] = 0;
        scalar_argdone[12][1][12] = 0;
        scalar_argdone[13][1][16] = 0;
        scalar_argdone[8][1][10] = 0;
        scalar_argdone[11][1][14] = 0;
        scalar_argdone[14][1][12] = 0;
        scalar_argdone[13][0][18] = 0;
        scalar_argdone[15][0][12] = 0;
        scalar_argdone[16][1][9] = 0;
        scalar_argdone[17][1][7] = 0;
        scalar_argdone[18][0][6] = 0;
        scalar_argdone[21][1][13] = 0;
        scalar_argdone[28][0][11] = 0;
        scalar_argdone[26][1][10] = 0;
        scalar_argdone[13][1][17] = 0;
        scalar_argdone[6][0][13] = 0;
        scalar_argdone[14][0][14] = 0;
        scalar_argdone[2][1][11] = 0;
        scalar_argdone[17][0][8] = 0;
        scalar_argdone[24][1][10] = 0;
        scalar_argdone[23][1][14] = 0;
        scalar_argdone[16][0][10] = 0;
        scalar_argdone[4][0][7] = 0;
        scalar_argdone[7][1][12] = 0;
        scalar_argdone[8][0][11] = 0;
        scalar_argdone[20][1][10] = 0;
        scalar_argdone[2][0][13] = 0;
        scalar_argdone[30][1][6] = 0;
        scalar_argdone[0][1][15] = 0;

        if (ap_arb_start_r[hls_coding_unit_hls_dup3] & ~ap_running_r[hls_coding_unit_hls_dup3]) begin
            ap_start[hls_coding_unit_hls_dup3] = 1;
            ap_running[hls_coding_unit_hls_dup3] = 1;
        end
        else if (ap_arb_ret_running_r[hls_coding_unit_hls_dup3]) begin
            ap_arb_ret_running[hls_coding_unit_hls_dup3] = 0;
            ap_arb_reload_running[hls_coding_unit_hls_dup3] = 0;
            hls_coding_unit_hls_dup3_ready = 1;
        end
    end

    if (ap_start_r[hls_coding_unit_hls_dup3] & ap_ready_r[hls_coding_unit_hls_dup3]) begin
        ap_start[hls_coding_unit_hls_dup3] = 0;
    end

    if (ap_done_r[hls_coding_unit_hls_dup3]) begin
        ap_running[hls_coding_unit_hls_dup3] = 0;
    end
`endif
    //============================================================
    //copy_top_left_pixel_hls       (f = 22)
    //============================================================
`ifdef enable_connect_copy_top_left_pixel_hls
    //------READ (scalar, global adr = 168) comb block-----//
    //s = 10; r = 0; a = 9;
    if (scalar_rdat_vld_r[10][0][9]) begin
        scalar_argdone [10][0][9] = 1;
    end
    scalar_adr[10][0][9] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][9]) begin
        scalar_argVld[10][0][9] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld[10][0][9] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 5;
    if (scalar_rdat_vld_r[26][0][5]) begin
        scalar_argdone [26][0][5] = 1;
    end
    scalar_adr[26][0][5] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][5]) begin
        scalar_argVld[26][0][5] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld[26][0][5] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 0; a = 1;
    if (scalar_rdat_vld_r[30][0][1]) begin
        scalar_argdone [30][0][1] = 1;
    end
    scalar_adr[30][0][1] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][1]) begin
        scalar_argVld[30][0][1] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld[30][0][1] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 7;
    if (scalar_rdat_vld_r[12][0][7]) begin
        scalar_argdone [12][0][7] = 1;
    end
    scalar_adr[12][0][7] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][7]) begin
        scalar_argVld[12][0][7] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld[12][0][7] = 1;
    end

    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 0; a = 8;
    if (scalar_rdat_vld_r[20][0][8]) begin
        scalar_argdone [20][0][8] = 1;
    end
    scalar_adr    [20][0][8] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][8]) begin
        scalar_argVld [20][0][8] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [20][0][8] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 0; a = 10;
    if (scalar_rdat_vld_r[21][0][10]) begin
        scalar_argdone [21][0][10] = 1;
    end
    scalar_adr    [21][0][10] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][10]) begin
        scalar_argVld [21][0][10] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [21][0][10] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 0; a = 10;
    if (scalar_rdat_vld_r[22][0][10]) begin
        scalar_argdone [22][0][10] = 1;
    end
    scalar_adr    [22][0][10] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][10]) begin
        scalar_argVld [22][0][10] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [22][0][10] = 1;
    end

    //------READ (scalar, complete partition, global adr = 348) comb block-----//
    //s = 23; r = 0; a = 8;
    if (scalar_rdat_vld_r[23][0][8]) begin
        scalar_argdone [23][0][8] = 1;
    end
    scalar_adr    [23][0][8] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][8]) begin
        scalar_argVld [23][0][8] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [23][0][8] = 1;
    end

    //------READ (scalar, complete partition, global adr = 352) comb block-----//
    //s = 24; r = 0; a = 6;
    if (scalar_rdat_vld_r[24][0][6]) begin
        scalar_argdone [24][0][6] = 1;
    end
    scalar_adr    [24][0][6] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][6]) begin
        scalar_argVld [24][0][6] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [24][0][6] = 1;
    end

    //------READ (scalar, complete partition, global adr = 356) comb block-----//
    //s = 25; r = 0; a = 6;
    if (scalar_rdat_vld_r[25][0][6]) begin
        scalar_argdone [25][0][6] = 1;
    end
    scalar_adr    [25][0][6] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][6]) begin
        scalar_argVld [25][0][6] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [25][0][6] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1240) comb block-----//
    //s = 22; r = 1; a = 9;
    if (scalar_rdat_vld_r[22][1][9]) begin
        scalar_argdone [22][1][9] = 1;
    end
    scalar_adr    [22][1][9] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][9]) begin
        scalar_argVld [22][1][9] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [22][1][9] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1244) comb block-----//
    //s = 23; r = 1; a = 7;
    if (scalar_rdat_vld_r[23][1][7]) begin
        scalar_argdone [23][1][7] = 1;
    end
    scalar_adr    [23][1][7] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][7]) begin
        scalar_argVld [23][1][7] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [23][1][7] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1248) comb block-----//
    //s = 24; r = 1; a = 5;
    if (scalar_rdat_vld_r[24][1][5]) begin
        scalar_argdone [24][1][5] = 1;
    end
    scalar_adr    [24][1][5] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][5]) begin
        scalar_argVld [24][1][5] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [24][1][5] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1144) comb block-----//
    //s = 30; r = 1; a = 1;
    if (scalar_rdat_vld_r[30][1][1]) begin
        scalar_argdone [30][1][1] = 1;
    end
    scalar_adr    [30][1][1] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][1]) begin
        scalar_argVld [30][1][1] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [30][1][1] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1148) comb block-----//
    //s = 31; r = 0; a = 3;
    if (scalar_rdat_vld_r[31][0][3]) begin
        scalar_argdone [31][0][3] = 1;
    end
    scalar_adr    [31][0][3] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][3]) begin
        scalar_argVld [31][0][3] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [31][0][3] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1152) comb block-----//
    //s = 0; r = 0; a = 12;
    if (scalar_rdat_vld_r[0][0][12]) begin
        scalar_argdone [0][0][12] = 1;
    end
    scalar_adr    [0][0][12] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][12]) begin
        scalar_argVld [0][0][12] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [0][0][12] = 1;
    end

    //------READ (scalar, global adr = 1136) comb block-----//
    //s = 28; r = 0; a = 6;
    if (scalar_rdat_vld_r[28][0][6]) begin
        scalar_argdone [28][0][6] = 1;
    end
    scalar_adr[28][0][6] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][6]) begin
        scalar_argVld[28][0][6] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld[28][0][6] = 1;
    end

    //------WRITE (scalar, global adr = 1136) comb block-----//
    //s = 28; r = 0; a = 0;
    if (scalar_argAck [28][0][0]) begin
        scalar_argVld [28][0][0] = 0;
        scalar_argAckdone [28][0][0] = 1;
    end
    if (copy_top_left_pixel_hls_cmdr_run_o_ap_vld_r) begin
        scalar_argVld [28][0][0] = 1;
        scalar_argAckdone [28][0][0] = 0;
        ap_part_w[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION] = ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][0][0] = copy_top_left_pixel_hls_cmdr_run_o_r;
    scalar_adr    [28][0][0] = {ap_part_w[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (ap_arb_ret[copy_top_left_pixel_hls] & ~ap_arb_ret_r[copy_top_left_pixel_hls]) begin
        ap_arb_ret_running[copy_top_left_pixel_hls] = 1;
        copy_top_left_pixel_hls_ready = 0;
    end

    scalar_argAckdone_all[copy_top_left_pixel_hls] = scalar_argAckdone[28][0][0];
    if (ap_arb_ret_running[copy_top_left_pixel_hls] & scalar_argAckdone_all[copy_top_left_pixel_hls] &~ ap_arb_reload_running_r[copy_top_left_pixel_hls]) begin
        ap_arb_reload[copy_top_left_pixel_hls] = 1;
        ap_arb_reload_running[copy_top_left_pixel_hls] = 1;
    end

    if (ap_arb_start[copy_top_left_pixel_hls] &~ ap_arb_start_r[copy_top_left_pixel_hls]) begin
        ap_arb_start_running[copy_top_left_pixel_hls] = 1;
    end

    if (ap_arb_start_running[copy_top_left_pixel_hls] & ~scalar_writing_168& ~scalar_writing_560& ~scalar_writing_1136) begin
        ap_arb_start_running[copy_top_left_pixel_hls] = 0;
        ap_arb_reload[copy_top_left_pixel_hls] = 1;
    end

    scalar_argdone_all[copy_top_left_pixel_hls] = scalar_argdone[10][0][9] &
                                                                scalar_argdone[26][0][5] &
                                                                scalar_argdone[30][0][1] &
                                                                scalar_argdone[12][0][7] &
                                                                scalar_argdone[20][0][8] &
                                                                scalar_argdone[21][0][10] &
                                                                scalar_argdone[22][0][10] &
                                                                scalar_argdone[23][0][8] &
                                                                scalar_argdone[24][0][6] &
                                                                scalar_argdone[25][0][6] &
                                                                scalar_argdone[22][1][9] &
                                                                scalar_argdone[23][1][7] &
                                                                scalar_argdone[24][1][5] &
                                                                scalar_argdone[30][1][1] &
                                                                scalar_argdone[31][0][3] &
                                                                scalar_argdone[0][0][12] &
                                                                scalar_argdone[28][0][6];

    if (scalar_argdone_all_r[copy_top_left_pixel_hls]) begin
        scalar_argdone[10][0][9] = 0;
        scalar_argdone[26][0][5] = 0;
        scalar_argdone[30][0][1] = 0;
        scalar_argdone[12][0][7] = 0;
        scalar_argdone[20][0][8] = 0;
        scalar_argdone[21][0][10] = 0;
        scalar_argdone[22][0][10] = 0;
        scalar_argdone[23][0][8] = 0;
        scalar_argdone[24][0][6] = 0;
        scalar_argdone[25][0][6] = 0;
        scalar_argdone[22][1][9] = 0;
        scalar_argdone[23][1][7] = 0;
        scalar_argdone[24][1][5] = 0;
        scalar_argdone[30][1][1] = 0;
        scalar_argdone[31][0][3] = 0;
        scalar_argdone[0][0][12] = 0;
        scalar_argdone[28][0][6] = 0;

        if (ap_arb_start_r[copy_top_left_pixel_hls] & ~ap_running_r[copy_top_left_pixel_hls]) begin
            ap_start[copy_top_left_pixel_hls] = 1;
            ap_running[copy_top_left_pixel_hls] = 1;
        end
        else if (ap_arb_ret_running_r[copy_top_left_pixel_hls]) begin
            ap_arb_ret_running[copy_top_left_pixel_hls] = 0;
            ap_arb_reload_running[copy_top_left_pixel_hls] = 0;
            copy_top_left_pixel_hls_ready = 1;
        end
    end

    if (ap_start_r[copy_top_left_pixel_hls] & ap_ready_r[copy_top_left_pixel_hls]) begin
        ap_start[copy_top_left_pixel_hls] = 0;
    end

    if (ap_done_r[copy_top_left_pixel_hls]) begin
        ap_running[copy_top_left_pixel_hls] = 0;
    end
`endif
    //============================================================
    //genPredCol_hls       (f = 23)
    //============================================================
`ifdef enable_connect_genPredCol_hls
    //------WRITE (scalar, complete partition, global adr = 180) comb block-----//
    //s = 13; r = 0; a = 0;
    if (scalar_argAck [13][0][0]) begin
        scalar_argVld [13][0][0] = 0;
        scalar_argAckdone [13][0][0] = 1;
    end
    if (genPredCol_hls_predColBuf_0_ap_vld_r) begin
        scalar_argVld [13][0][0] = 1;
        scalar_argAckdone [13][0][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][0] = genPredCol_hls_predColBuf_0_r;
    scalar_adr    [13][0][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 184) comb block-----//
    //s = 14; r = 0; a = 0;
    if (scalar_argAck [14][0][0]) begin
        scalar_argVld [14][0][0] = 0;
        scalar_argAckdone [14][0][0] = 1;
    end
    if (genPredCol_hls_predColBuf_1_ap_vld_r) begin
        scalar_argVld [14][0][0] = 1;
        scalar_argAckdone [14][0][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][0] = genPredCol_hls_predColBuf_1_r;
    scalar_adr    [14][0][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 188) comb block-----//
    //s = 15; r = 0; a = 0;
    if (scalar_argAck [15][0][0]) begin
        scalar_argVld [15][0][0] = 0;
        scalar_argAckdone [15][0][0] = 1;
    end
    if (genPredCol_hls_predColBuf_2_ap_vld_r) begin
        scalar_argVld [15][0][0] = 1;
        scalar_argAckdone [15][0][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][0] = genPredCol_hls_predColBuf_2_r;
    scalar_adr    [15][0][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 192) comb block-----//
    //s = 16; r = 0; a = 0;
    if (scalar_argAck [16][0][0]) begin
        scalar_argVld [16][0][0] = 0;
        scalar_argAckdone [16][0][0] = 1;
    end
    if (genPredCol_hls_predColBuf_3_ap_vld_r) begin
        scalar_argVld [16][0][0] = 1;
        scalar_argAckdone [16][0][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][0][0] = genPredCol_hls_predColBuf_3_r;
    scalar_adr    [16][0][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 196) comb block-----//
    //s = 17; r = 1; a = 0;
    if (scalar_argAck [17][1][0]) begin
        scalar_argVld [17][1][0] = 0;
        scalar_argAckdone [17][1][0] = 1;
    end
    if (genPredCol_hls_predColBuf_4_ap_vld_r) begin
        scalar_argVld [17][1][0] = 1;
        scalar_argAckdone [17][1][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][1][0] = genPredCol_hls_predColBuf_4_r;
    scalar_adr    [17][1][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 200) comb block-----//
    //s = 18; r = 1; a = 0;
    if (scalar_argAck [18][1][0]) begin
        scalar_argVld [18][1][0] = 0;
        scalar_argAckdone [18][1][0] = 1;
    end
    if (genPredCol_hls_predColBuf_5_ap_vld_r) begin
        scalar_argVld [18][1][0] = 1;
        scalar_argAckdone [18][1][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][1][0] = genPredCol_hls_predColBuf_5_r;
    scalar_adr    [18][1][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 204) comb block-----//
    //s = 19; r = 1; a = 0;
    if (scalar_argAck [19][1][0]) begin
        scalar_argVld [19][1][0] = 0;
        scalar_argAckdone [19][1][0] = 1;
    end
    if (genPredCol_hls_predColBuf_6_ap_vld_r) begin
        scalar_argVld [19][1][0] = 1;
        scalar_argAckdone [19][1][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][1][0] = genPredCol_hls_predColBuf_6_r;
    scalar_adr    [19][1][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 208) comb block-----//
    //s = 20; r = 1; a = 0;
    if (scalar_argAck [20][1][0]) begin
        scalar_argVld [20][1][0] = 0;
        scalar_argAckdone [20][1][0] = 1;
    end
    if (genPredCol_hls_predColBuf_7_ap_vld_r) begin
        scalar_argVld [20][1][0] = 1;
        scalar_argAckdone [20][1][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][0] = genPredCol_hls_predColBuf_7_r;
    scalar_adr    [20][1][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 212) comb block-----//
    //s = 21; r = 1; a = 0;
    if (scalar_argAck [21][1][0]) begin
        scalar_argVld [21][1][0] = 0;
        scalar_argAckdone [21][1][0] = 1;
    end
    if (genPredCol_hls_predColBuf_8_ap_vld_r) begin
        scalar_argVld [21][1][0] = 1;
        scalar_argAckdone [21][1][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][0] = genPredCol_hls_predColBuf_8_r;
    scalar_adr    [21][1][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 216) comb block-----//
    //s = 22; r = 1; a = 0;
    if (scalar_argAck [22][1][0]) begin
        scalar_argVld [22][1][0] = 0;
        scalar_argAckdone [22][1][0] = 1;
    end
    if (genPredCol_hls_predColBuf_9_ap_vld_r) begin
        scalar_argVld [22][1][0] = 1;
        scalar_argAckdone [22][1][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][0] = genPredCol_hls_predColBuf_9_r;
    scalar_adr    [22][1][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 220) comb block-----//
    //s = 23; r = 0; a = 0;
    if (scalar_argAck [23][0][0]) begin
        scalar_argVld [23][0][0] = 0;
        scalar_argAckdone [23][0][0] = 1;
    end
    if (genPredCol_hls_predColBuf_10_ap_vld_r) begin
        scalar_argVld [23][0][0] = 1;
        scalar_argAckdone [23][0][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][0] = genPredCol_hls_predColBuf_10_r;
    scalar_adr    [23][0][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 224) comb block-----//
    //s = 24; r = 0; a = 0;
    if (scalar_argAck [24][0][0]) begin
        scalar_argVld [24][0][0] = 0;
        scalar_argAckdone [24][0][0] = 1;
    end
    if (genPredCol_hls_predColBuf_11_ap_vld_r) begin
        scalar_argVld [24][0][0] = 1;
        scalar_argAckdone [24][0][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][0][0] = genPredCol_hls_predColBuf_11_r;
    scalar_adr    [24][0][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 228) comb block-----//
    //s = 25; r = 0; a = 0;
    if (scalar_argAck [25][0][0]) begin
        scalar_argVld [25][0][0] = 0;
        scalar_argAckdone [25][0][0] = 1;
    end
    if (genPredCol_hls_predColBuf_12_ap_vld_r) begin
        scalar_argVld [25][0][0] = 1;
        scalar_argAckdone [25][0][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][0][0] = genPredCol_hls_predColBuf_12_r;
    scalar_adr    [25][0][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 232) comb block-----//
    //s = 26; r = 0; a = 0;
    if (scalar_argAck [26][0][0]) begin
        scalar_argVld [26][0][0] = 0;
        scalar_argAckdone [26][0][0] = 1;
    end
    if (genPredCol_hls_predColBuf_13_ap_vld_r) begin
        scalar_argVld [26][0][0] = 1;
        scalar_argAckdone [26][0][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][0][0] = genPredCol_hls_predColBuf_13_r;
    scalar_adr    [26][0][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 236) comb block-----//
    //s = 27; r = 0; a = 0;
    if (scalar_argAck [27][0][0]) begin
        scalar_argVld [27][0][0] = 0;
        scalar_argAckdone [27][0][0] = 1;
    end
    if (genPredCol_hls_predColBuf_14_ap_vld_r) begin
        scalar_argVld [27][0][0] = 1;
        scalar_argAckdone [27][0][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][0] = genPredCol_hls_predColBuf_14_r;
    scalar_adr    [27][0][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 240) comb block-----//
    //s = 28; r = 1; a = 0;
    if (scalar_argAck [28][1][0]) begin
        scalar_argVld [28][1][0] = 0;
        scalar_argAckdone [28][1][0] = 1;
    end
    if (genPredCol_hls_predColBuf_15_ap_vld_r) begin
        scalar_argVld [28][1][0] = 1;
        scalar_argAckdone [28][1][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][1][0] = genPredCol_hls_predColBuf_15_r;
    scalar_adr    [28][1][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 244) comb block-----//
    //s = 29; r = 0; a = 4;
    if (scalar_rdat_vld_r[29][0][4]) begin
        scalar_argdone [29][0][4] = 1;
    end
    scalar_adr    [29][0][4] = {ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][4]) begin
        scalar_argVld [29][0][4] = 0;
    end
    if (ap_arb_reload_r[genPredCol_hls]) begin
        scalar_argVld [29][0][4] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 244) comb block-----//
    //s = 29; r = 0; a = 0;
    if (scalar_argAck [29][0][0]) begin
        scalar_argVld [29][0][0] = 0;
        scalar_argAckdone [29][0][0] = 1;
    end
    if (genPredCol_hls_predColBuf_16_o_ap_vld_r) begin
        scalar_argVld [29][0][0] = 1;
        scalar_argAckdone [29][0][0] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][0] = genPredCol_hls_predColBuf_16_o_r;
    scalar_adr    [29][0][0] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 1; a = 4;
    if (scalar_rdat_vld_r[11][1][4]) begin
        scalar_argdone [11][1][4] = 1;
    end
    scalar_adr[11][1][4] = {ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][4]) begin
        scalar_argVld[11][1][4] = 0;
    end
    if (ap_arb_reload_r[genPredCol_hls]) begin
        scalar_argVld[11][1][4] = 1;
    end

    //------READ (scalar, global adr = 1276) comb block-----//
    //s = 31; r = 1; a = 2;
    if (scalar_rdat_vld_r[31][1][2]) begin
        scalar_argdone [31][1][2] = 1;
    end
    scalar_adr[31][1][2] = {ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][2]) begin
        scalar_argVld[31][1][2] = 0;
    end
    if (ap_arb_reload_r[genPredCol_hls]) begin
        scalar_argVld[31][1][2] = 1;
    end

    //------READ (scalar, global adr = 1284) comb block-----//
    //s = 1; r = 1; a = 3;
    if (scalar_rdat_vld_r[1][1][3]) begin
        scalar_argdone [1][1][3] = 1;
    end
    scalar_adr[1][1][3] = {ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][3]) begin
        scalar_argVld[1][1][3] = 0;
    end
    if (ap_arb_reload_r[genPredCol_hls]) begin
        scalar_argVld[1][1][3] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 1; a = 2;
    if (scalar_rdat_vld_r[30][1][2]) begin
        scalar_argdone [30][1][2] = 1;
    end
    scalar_adr[30][1][2] = {ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][2]) begin
        scalar_argVld[30][1][2] = 0;
    end
    if (ap_arb_reload_r[genPredCol_hls]) begin
        scalar_argVld[30][1][2] = 1;
    end

    //------READ (scalar, global adr = 388) comb block-----//
    //s = 1; r = 0; a = 5;
    if (scalar_rdat_vld_r[1][0][5]) begin
        scalar_argdone [1][0][5] = 1;
    end
    scalar_adr[1][0][5] = {ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][5]) begin
        scalar_argVld[1][0][5] = 0;
    end
    if (ap_arb_reload_r[genPredCol_hls]) begin
        scalar_argVld[1][0][5] = 1;
    end

    if (ap_arb_ret[genPredCol_hls] & ~ap_arb_ret_r[genPredCol_hls]) begin
        ap_arb_ret_running[genPredCol_hls] = 1;
        genPredCol_hls_ready = 0;
    end

    scalar_argAckdone_all[genPredCol_hls] = scalar_argAckdone[13][0][0] &
                                                scalar_argAckdone[14][0][0] &
                                                scalar_argAckdone[15][0][0] &
                                                scalar_argAckdone[16][0][0] &
                                                scalar_argAckdone[17][1][0] &
                                                scalar_argAckdone[18][1][0] &
                                                scalar_argAckdone[19][1][0] &
                                                scalar_argAckdone[20][1][0] &
                                                scalar_argAckdone[21][1][0] &
                                                scalar_argAckdone[22][1][0] &
                                                scalar_argAckdone[23][0][0] &
                                                scalar_argAckdone[24][0][0] &
                                                scalar_argAckdone[25][0][0] &
                                                scalar_argAckdone[26][0][0] &
                                                scalar_argAckdone[27][0][0] &
                                                scalar_argAckdone[28][1][0] &
                                                scalar_argAckdone[29][0][0];
    if (ap_arb_ret_running[genPredCol_hls] & scalar_argAckdone_all[genPredCol_hls] &~ ap_arb_reload_running_r[genPredCol_hls]) begin
        ap_arb_reload[genPredCol_hls] = 1;
        ap_arb_reload_running[genPredCol_hls] = 1;
    end

    if (ap_arb_start[genPredCol_hls] &~ ap_arb_start_r[genPredCol_hls]) begin
        ap_arb_start_running[genPredCol_hls] = 1;
    end

    if (ap_arb_start_running[genPredCol_hls] & ~scalar_writing_244) begin
        ap_arb_start_running[genPredCol_hls] = 0;
        ap_arb_reload[genPredCol_hls] = 1;
    end

    scalar_argdone_all[genPredCol_hls] = scalar_argdone[29][0][4] &
                                                                scalar_argdone[11][1][4] &
                                                                scalar_argdone[31][1][2] &
                                                                scalar_argdone[1][1][3] &
                                                                scalar_argdone[30][1][2] &
                                                                scalar_argdone[1][0][5];

    if (scalar_argdone_all_r[genPredCol_hls]) begin
        scalar_argdone[29][0][4] = 0;
        scalar_argdone[11][1][4] = 0;
        scalar_argdone[31][1][2] = 0;
        scalar_argdone[1][1][3] = 0;
        scalar_argdone[30][1][2] = 0;
        scalar_argdone[1][0][5] = 0;

        if (ap_arb_start_r[genPredCol_hls] & ~ap_running_r[genPredCol_hls]) begin
            ap_start[genPredCol_hls] = 1;
            ap_running[genPredCol_hls] = 1;
        end
        else if (ap_arb_ret_running_r[genPredCol_hls]) begin
            ap_arb_ret_running[genPredCol_hls] = 0;
            ap_arb_reload_running[genPredCol_hls] = 0;
            genPredCol_hls_ready = 1;
        end
    end

    if (ap_start_r[genPredCol_hls] & ap_ready_r[genPredCol_hls]) begin
        ap_start[genPredCol_hls] = 0;
    end

    if (ap_done_r[genPredCol_hls]) begin
        ap_running[genPredCol_hls] = 0;
    end
`endif
    //============================================================
    //ff_hevc_get_sub_cu_zscan_id_hls       (f = 24)
    //============================================================
`ifdef enable_connect_ff_hevc_get_sub_cu_zscan_id_hls
    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 4;
    if (scalar_rdat_vld_r[26][1][4]) begin
        scalar_argdone [26][1][4] = 1;
    end
    scalar_adr[26][1][4] = {ap_part[ff_hevc_get_sub_cu_zscan_id_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][4]) begin
        scalar_argVld[26][1][4] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
        scalar_argVld[26][1][4] = 1;
    end

    //------WRITE (scalar, global adr = 248) comb block-----//
    //s = 30; r = 0; a = 0;
    if (scalar_argAck [30][0][0]) begin
        scalar_argVld [30][0][0] = 0;
        scalar_argAckdone [30][0][0] = 1;
    end
    if (ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_ap_vld_r) begin
        scalar_argVld [30][0][0] = 1;
        scalar_argAckdone [30][0][0] = 0;
        ap_part_w[ff_hevc_get_sub_cu_zscan_id_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_get_sub_cu_zscan_id_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [30][0][0] = ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_r;
    scalar_adr    [30][0][0] = {ap_part_w[ff_hevc_get_sub_cu_zscan_id_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (ap_arb_ret[ff_hevc_get_sub_cu_zscan_id_hls] & ~ap_arb_ret_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
        ap_arb_ret_running[ff_hevc_get_sub_cu_zscan_id_hls] = 1;
        ff_hevc_get_sub_cu_zscan_id_hls_ready = 0;
    end

    scalar_argAckdone_all[ff_hevc_get_sub_cu_zscan_id_hls] = scalar_argAckdone[30][0][0];
    if (ap_arb_ret_running[ff_hevc_get_sub_cu_zscan_id_hls] & scalar_argAckdone_all[ff_hevc_get_sub_cu_zscan_id_hls] &~ ap_arb_reload_running_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
        ap_arb_reload[ff_hevc_get_sub_cu_zscan_id_hls] = 1;
        ap_arb_reload_running[ff_hevc_get_sub_cu_zscan_id_hls] = 1;
    end

    if (ap_arb_start[ff_hevc_get_sub_cu_zscan_id_hls] &~ ap_arb_start_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
        ap_arb_start_running[ff_hevc_get_sub_cu_zscan_id_hls] = 1;
    end

    if (ap_arb_start_running[ff_hevc_get_sub_cu_zscan_id_hls] ) begin
        ap_arb_start_running[ff_hevc_get_sub_cu_zscan_id_hls] = 0;
        ap_arb_reload[ff_hevc_get_sub_cu_zscan_id_hls] = 1;
    end

    scalar_argdone_all[ff_hevc_get_sub_cu_zscan_id_hls] = scalar_argdone[26][1][4];

    if (scalar_argdone_all_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
        scalar_argdone[26][1][4] = 0;

        if (ap_arb_start_r[ff_hevc_get_sub_cu_zscan_id_hls] & ~ap_running_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
            ap_start[ff_hevc_get_sub_cu_zscan_id_hls] = 1;
            ap_running[ff_hevc_get_sub_cu_zscan_id_hls] = 1;
        end
        else if (ap_arb_ret_running_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
            ap_arb_ret_running[ff_hevc_get_sub_cu_zscan_id_hls] = 0;
            ap_arb_reload_running[ff_hevc_get_sub_cu_zscan_id_hls] = 0;
            ff_hevc_get_sub_cu_zscan_id_hls_ready = 1;
        end
    end

    if (ap_start_r[ff_hevc_get_sub_cu_zscan_id_hls] & ap_ready_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
        ap_start[ff_hevc_get_sub_cu_zscan_id_hls] = 0;
    end

    if (ap_done_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
        ap_running[ff_hevc_get_sub_cu_zscan_id_hls] = 0;
    end
`endif
    //============================================================
    //ff_hevc_skip_flag_decode_hls       (f = 25)
    //============================================================
`ifdef enable_connect_ff_hevc_skip_flag_decode_hls
    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 6;
    if (scalar_rdat_vld_r[26][1][6]) begin
        scalar_argdone [26][1][6] = 1;
    end
    scalar_adr[26][1][6] = {ap_part[ff_hevc_skip_flag_decode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][6]) begin
        scalar_argVld[26][1][6] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_skip_flag_decode_hls]) begin
        scalar_argVld[26][1][6] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 6;
    if (scalar_rdat_vld_r[24][1][6]) begin
        scalar_argdone [24][1][6] = 1;
    end
    scalar_adr[24][1][6] = {ap_part[ff_hevc_skip_flag_decode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][6]) begin
        scalar_argVld[24][1][6] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_skip_flag_decode_hls]) begin
        scalar_argVld[24][1][6] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 8;
    if (scalar_rdat_vld_r[23][1][8]) begin
        scalar_argdone [23][1][8] = 1;
    end
    scalar_adr[23][1][8] = {ap_part[ff_hevc_skip_flag_decode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][8]) begin
        scalar_argVld[23][1][8] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_skip_flag_decode_hls]) begin
        scalar_argVld[23][1][8] = 1;
    end

    if (ap_arb_ret[ff_hevc_skip_flag_decode_hls] & ~ap_arb_ret_r[ff_hevc_skip_flag_decode_hls]) begin
        ap_arb_ret_running[ff_hevc_skip_flag_decode_hls] = 1;
        ff_hevc_skip_flag_decode_hls_ready = 0;
    end

    scalar_argAckdone_all[ff_hevc_skip_flag_decode_hls] = 1;
    if (ap_arb_ret_running[ff_hevc_skip_flag_decode_hls] & scalar_argAckdone_all[ff_hevc_skip_flag_decode_hls] &~ ap_arb_reload_running_r[ff_hevc_skip_flag_decode_hls]) begin
        ap_arb_reload[ff_hevc_skip_flag_decode_hls] = 1;
        ap_arb_reload_running[ff_hevc_skip_flag_decode_hls] = 1;
    end

    if (ap_arb_start[ff_hevc_skip_flag_decode_hls] &~ ap_arb_start_r[ff_hevc_skip_flag_decode_hls]) begin
        ap_arb_start_running[ff_hevc_skip_flag_decode_hls] = 1;
    end

    if (ap_arb_start_running[ff_hevc_skip_flag_decode_hls] & ~scalar_writing_608& ~scalar_writing_604) begin
        ap_arb_start_running[ff_hevc_skip_flag_decode_hls] = 0;
        ap_arb_reload[ff_hevc_skip_flag_decode_hls] = 1;
    end

    scalar_argdone_all[ff_hevc_skip_flag_decode_hls] = scalar_argdone[26][1][6] &
                                                                scalar_argdone[24][1][6] &
                                                                scalar_argdone[23][1][8];

    if (scalar_argdone_all_r[ff_hevc_skip_flag_decode_hls]) begin
        scalar_argdone[26][1][6] = 0;
        scalar_argdone[24][1][6] = 0;
        scalar_argdone[23][1][8] = 0;

        if (ap_arb_start_r[ff_hevc_skip_flag_decode_hls] & ~ap_running_r[ff_hevc_skip_flag_decode_hls]) begin
            ap_start[ff_hevc_skip_flag_decode_hls] = 1;
            ap_running[ff_hevc_skip_flag_decode_hls] = 1;
        end
        else if (ap_arb_ret_running_r[ff_hevc_skip_flag_decode_hls]) begin
            ap_arb_ret_running[ff_hevc_skip_flag_decode_hls] = 0;
            ap_arb_reload_running[ff_hevc_skip_flag_decode_hls] = 0;
            ff_hevc_skip_flag_decode_hls_ready = 1;
        end
    end

    if (ap_start_r[ff_hevc_skip_flag_decode_hls] & ap_ready_r[ff_hevc_skip_flag_decode_hls]) begin
        ap_start[ff_hevc_skip_flag_decode_hls] = 0;
    end

    if (ap_done_r[ff_hevc_skip_flag_decode_hls]) begin
        ap_running[ff_hevc_skip_flag_decode_hls] = 0;
    end
`endif
    //============================================================
    //ff_hevc_set_qPy_hls       (f = 26)
    //============================================================
`ifdef enable_connect_ff_hevc_set_qPy_hls
    //------WRITE (scalar, global adr = 536) comb block-----//
    //s = 6; r = 0; a = 0;
    if (scalar_argAck [6][0][0]) begin
        scalar_argVld [6][0][0] = 0;
        scalar_argAckdone [6][0][0] = 1;
    end
    if (ff_hevc_set_qPy_hls_qp_y_ap_vld_r) begin
        scalar_argVld [6][0][0] = 1;
        scalar_argAckdone [6][0][0] = 0;
        ap_part_w[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][0] = ff_hevc_set_qPy_hls_qp_y_r;
    scalar_adr    [6][0][0] = {ap_part_w[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 532) comb block-----//
    //s = 5; r = 0; a = 8;
    if (scalar_rdat_vld_r[5][0][8]) begin
        scalar_argdone [5][0][8] = 1;
    end
    scalar_adr[5][0][8] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][8]) begin
        scalar_argVld[5][0][8] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[5][0][8] = 1;
    end

    //------WRITE (scalar, global adr = 532) comb block-----//
    //s = 5; r = 0; a = 0;
    if (scalar_argAck [5][0][0]) begin
        scalar_argVld [5][0][0] = 0;
        scalar_argAckdone [5][0][0] = 1;
    end
    if (ff_hevc_set_qPy_hls_first_qp_group_o_ap_vld_r) begin
        scalar_argVld [5][0][0] = 1;
        scalar_argAckdone [5][0][0] = 0;
        ap_part_w[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][0] = ff_hevc_set_qPy_hls_first_qp_group_o_r;
    scalar_adr    [5][0][0] = {ap_part_w[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 540) comb block-----//
    //s = 7; r = 0; a = 9;
    if (scalar_rdat_vld_r[7][0][9]) begin
        scalar_argdone [7][0][9] = 1;
    end
    scalar_adr[7][0][9] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][9]) begin
        scalar_argVld[7][0][9] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[7][0][9] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 7;
    if (scalar_rdat_vld_r[26][0][7]) begin
        scalar_argdone [26][0][7] = 1;
    end
    scalar_adr[26][0][7] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][7]) begin
        scalar_argVld[26][0][7] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[26][0][7] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 0; a = 8;
    if (scalar_rdat_vld_r[13][0][8]) begin
        scalar_argdone [13][0][8] = 1;
    end
    scalar_adr[13][0][8] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][8]) begin
        scalar_argVld[13][0][8] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[13][0][8] = 1;
    end

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 0; a = 7;
    if (scalar_rdat_vld_r[28][0][7]) begin
        scalar_argdone [28][0][7] = 1;
    end
    scalar_adr[28][0][7] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][7]) begin
        scalar_argVld[28][0][7] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[28][0][7] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 0; a = 4;
    if (scalar_rdat_vld_r[2][0][4]) begin
        scalar_argdone [2][0][4] = 1;
    end
    scalar_adr[2][0][4] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][4]) begin
        scalar_argVld[2][0][4] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[2][0][4] = 1;
    end

    //------READ (scalar, global adr = 460) comb block-----//
    //s = 19; r = 0; a = 4;
    if (scalar_rdat_vld_r[19][0][4]) begin
        scalar_argdone [19][0][4] = 1;
    end
    scalar_adr[19][0][4] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][4]) begin
        scalar_argVld[19][0][4] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[19][0][4] = 1;
    end

    //------READ (scalar, global adr = 1272) comb block-----//
    //s = 30; r = 0; a = 2;
    if (scalar_rdat_vld_r[30][0][2]) begin
        scalar_argdone [30][0][2] = 1;
    end
    scalar_adr[30][0][2] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][2]) begin
        scalar_argVld[30][0][2] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[30][0][2] = 1;
    end

    //------READ (scalar, global adr = 468) comb block-----//
    //s = 21; r = 1; a = 9;
    if (scalar_rdat_vld_r[21][1][9]) begin
        scalar_argdone [21][1][9] = 1;
    end
    scalar_adr[21][1][9] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][9]) begin
        scalar_argVld[21][1][9] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[21][1][9] = 1;
    end

    //------READ (scalar, global adr = 1132) comb block-----//
    //s = 27; r = 1; a = 3;
    if (scalar_rdat_vld_r[27][1][3]) begin
        scalar_argdone [27][1][3] = 1;
    end
    scalar_adr[27][1][3] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][3]) begin
        scalar_argVld[27][1][3] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[27][1][3] = 1;
    end

    if (ap_arb_ret[ff_hevc_set_qPy_hls] & ~ap_arb_ret_r[ff_hevc_set_qPy_hls]) begin
        ap_arb_ret_running[ff_hevc_set_qPy_hls] = 1;
        ff_hevc_set_qPy_hls_ready = 0;
    end

    scalar_argAckdone_all[ff_hevc_set_qPy_hls] = scalar_argAckdone[6][0][0] &
                                                scalar_argAckdone[5][0][0];
    if (ap_arb_ret_running[ff_hevc_set_qPy_hls] & scalar_argAckdone_all[ff_hevc_set_qPy_hls] &~ ap_arb_reload_running_r[ff_hevc_set_qPy_hls]) begin
        ap_arb_reload[ff_hevc_set_qPy_hls] = 1;
        ap_arb_reload_running[ff_hevc_set_qPy_hls] = 1;
    end

    if (ap_arb_start[ff_hevc_set_qPy_hls] &~ ap_arb_start_r[ff_hevc_set_qPy_hls]) begin
        ap_arb_start_running[ff_hevc_set_qPy_hls] = 1;
    end

    if (ap_arb_start_running[ff_hevc_set_qPy_hls] & ~scalar_writing_532& ~scalar_writing_540& ~scalar_writing_468) begin
        ap_arb_start_running[ff_hevc_set_qPy_hls] = 0;
        ap_arb_reload[ff_hevc_set_qPy_hls] = 1;
    end

    scalar_argdone_all[ff_hevc_set_qPy_hls] = scalar_argdone[5][0][8] &
                                                                scalar_argdone[7][0][9] &
                                                                scalar_argdone[26][0][7] &
                                                                scalar_argdone[13][0][8] &
                                                                scalar_argdone[28][0][7] &
                                                                scalar_argdone[2][0][4] &
                                                                scalar_argdone[19][0][4] &
                                                                scalar_argdone[30][0][2] &
                                                                scalar_argdone[21][1][9] &
                                                                scalar_argdone[27][1][3];

    if (scalar_argdone_all_r[ff_hevc_set_qPy_hls]) begin
        scalar_argdone[5][0][8] = 0;
        scalar_argdone[7][0][9] = 0;
        scalar_argdone[26][0][7] = 0;
        scalar_argdone[13][0][8] = 0;
        scalar_argdone[28][0][7] = 0;
        scalar_argdone[2][0][4] = 0;
        scalar_argdone[19][0][4] = 0;
        scalar_argdone[30][0][2] = 0;
        scalar_argdone[21][1][9] = 0;
        scalar_argdone[27][1][3] = 0;

        if (ap_arb_start_r[ff_hevc_set_qPy_hls] & ~ap_running_r[ff_hevc_set_qPy_hls]) begin
            ap_start[ff_hevc_set_qPy_hls] = 1;
            ap_running[ff_hevc_set_qPy_hls] = 1;
        end
        else if (ap_arb_ret_running_r[ff_hevc_set_qPy_hls]) begin
            ap_arb_ret_running[ff_hevc_set_qPy_hls] = 0;
            ap_arb_reload_running[ff_hevc_set_qPy_hls] = 0;
            ff_hevc_set_qPy_hls_ready = 1;
        end
    end

    if (ap_start_r[ff_hevc_set_qPy_hls] & ap_ready_r[ff_hevc_set_qPy_hls]) begin
        ap_start[ff_hevc_set_qPy_hls] = 0;
    end

    if (ap_done_r[ff_hevc_set_qPy_hls]) begin
        ap_running[ff_hevc_set_qPy_hls] = 0;
    end
`endif
    //============================================================
    //hls_decode_neighbour_hls       (f = 27)
    //============================================================
`ifdef enable_connect_hls_decode_neighbour_hls
    //------WRITE (scalar, global adr = 532) comb block-----//
    //s = 5; r = 1; a = 2;
    if (scalar_argAck [5][1][2]) begin
        scalar_argVld [5][1][2] = 0;
        scalar_argAckdone [5][1][2] = 1;
    end
    if (hls_decode_neighbour_hls_first_qp_group_ap_vld_r) begin
        scalar_argVld [5][1][2] = 1;
        scalar_argAckdone [5][1][2] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][2] = hls_decode_neighbour_hls_first_qp_group_r;
    scalar_adr    [5][1][2] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 620) comb block-----//
    //s = 27; r = 1; a = 0;
    if (scalar_argAck [27][1][0]) begin
        scalar_argVld [27][1][0] = 0;
        scalar_argAckdone [27][1][0] = 1;
    end
    if (hls_decode_neighbour_hls_end_of_tiles_x_ap_vld_r) begin
        scalar_argVld [27][1][0] = 1;
        scalar_argAckdone [27][1][0] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][1][0] = hls_decode_neighbour_hls_end_of_tiles_x_r;
    scalar_adr    [27][1][0] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 624) comb block-----//
    //s = 28; r = 0; a = 1;
    if (scalar_argAck [28][0][1]) begin
        scalar_argVld [28][0][1] = 0;
        scalar_argAckdone [28][0][1] = 1;
    end
    if (hls_decode_neighbour_hls_end_of_tiles_y_ap_vld_r) begin
        scalar_argVld [28][0][1] = 1;
        scalar_argAckdone [28][0][1] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][0][1] = hls_decode_neighbour_hls_end_of_tiles_y_r;
    scalar_adr    [28][0][1] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 260) comb block-----//
    //s = 1; r = 1; a = 0;
    if (scalar_argAck [1][1][0]) begin
        scalar_argVld [1][1][0] = 0;
        scalar_argAckdone [1][1][0] = 1;
    end
    if (hls_decode_neighbour_hls_slice_or_tiles_left_boundary_ap_vld_r) begin
        scalar_argVld [1][1][0] = 1;
        scalar_argAckdone [1][1][0] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][1][0] = hls_decode_neighbour_hls_slice_or_tiles_left_boundary_r;
    scalar_adr    [1][1][0] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 264) comb block-----//
    //s = 2; r = 1; a = 0;
    if (scalar_argAck [2][1][0]) begin
        scalar_argVld [2][1][0] = 0;
        scalar_argAckdone [2][1][0] = 1;
    end
    if (hls_decode_neighbour_hls_slice_or_tiles_up_boundary_ap_vld_r) begin
        scalar_argVld [2][1][0] = 1;
        scalar_argAckdone [2][1][0] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][1][0] = hls_decode_neighbour_hls_slice_or_tiles_up_boundary_r;
    scalar_adr    [2][1][0] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 0;
    if (scalar_argAck [24][1][0]) begin
        scalar_argVld [24][1][0] = 0;
        scalar_argAckdone [24][1][0] = 1;
    end
    if (hls_decode_neighbour_hls_ctb_left_flag_ap_vld_r) begin
        scalar_argVld [24][1][0] = 1;
        scalar_argAckdone [24][1][0] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][1][0] = hls_decode_neighbour_hls_ctb_left_flag_r;
    scalar_adr    [24][1][0] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 2;
    if (scalar_argAck [23][1][2]) begin
        scalar_argVld [23][1][2] = 0;
        scalar_argAckdone [23][1][2] = 1;
    end
    if (hls_decode_neighbour_hls_ctb_up_flag_ap_vld_r) begin
        scalar_argVld [23][1][2] = 1;
        scalar_argAckdone [23][1][2] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][1][2] = hls_decode_neighbour_hls_ctb_up_flag_r;
    scalar_adr    [23][1][2] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 616) comb block-----//
    //s = 26; r = 1; a = 0;
    if (scalar_argAck [26][1][0]) begin
        scalar_argVld [26][1][0] = 0;
        scalar_argAckdone [26][1][0] = 1;
    end
    if (hls_decode_neighbour_hls_ctb_up_right_flag_ap_vld_r) begin
        scalar_argVld [26][1][0] = 1;
        scalar_argAckdone [26][1][0] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][1][0] = hls_decode_neighbour_hls_ctb_up_right_flag_r;
    scalar_adr    [26][1][0] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 612) comb block-----//
    //s = 25; r = 1; a = 0;
    if (scalar_argAck [25][1][0]) begin
        scalar_argVld [25][1][0] = 0;
        scalar_argAckdone [25][1][0] = 1;
    end
    if (hls_decode_neighbour_hls_ctb_up_left_flag_ap_vld_r) begin
        scalar_argVld [25][1][0] = 1;
        scalar_argAckdone [25][1][0] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][1][0] = hls_decode_neighbour_hls_ctb_up_left_flag_r;
    scalar_adr    [25][1][0] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 272) comb block-----//
    //s = 4; r = 1; a = 6;
    if (scalar_rdat_vld_r[4][1][6]) begin
        scalar_argdone [4][1][6] = 1;
    end
    scalar_adr[4][1][6] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][1][6]) begin
        scalar_argVld[4][1][6] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[4][1][6] = 1;
    end

    //------READ (scalar, global adr = 276) comb block-----//
    //s = 5; r = 0; a = 9;
    if (scalar_rdat_vld_r[5][0][9]) begin
        scalar_argdone [5][0][9] = 1;
    end
    scalar_adr[5][0][9] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][9]) begin
        scalar_argVld[5][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[5][0][9] = 1;
    end

    //------READ (scalar, global adr = 280) comb block-----//
    //s = 6; r = 1; a = 13;
    if (scalar_rdat_vld_r[6][1][13]) begin
        scalar_argdone [6][1][13] = 1;
    end
    scalar_adr[6][1][13] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][13]) begin
        scalar_argVld[6][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[6][1][13] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 12;
    if (scalar_rdat_vld_r[26][0][12]) begin
        scalar_argdone [26][0][12] = 1;
    end
    scalar_adr[26][0][12] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][12]) begin
        scalar_argVld[26][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[26][0][12] = 1;
    end

    //------READ (scalar, global adr = 284) comb block-----//
    //s = 7; r = 0; a = 14;
    if (scalar_rdat_vld_r[7][0][14]) begin
        scalar_argdone [7][0][14] = 1;
    end
    scalar_adr[7][0][14] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][14]) begin
        scalar_argVld[7][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[7][0][14] = 1;
    end

    //------READ (scalar, global adr = 288) comb block-----//
    //s = 8; r = 1; a = 11;
    if (scalar_rdat_vld_r[8][1][11]) begin
        scalar_argdone [8][1][11] = 1;
    end
    scalar_adr[8][1][11] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][11]) begin
        scalar_argVld[8][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[8][1][11] = 1;
    end

    //------READ (scalar, global adr = 252) comb block-----//
    //s = 31; r = 0; a = 6;
    if (scalar_rdat_vld_r[31][0][6]) begin
        scalar_argdone [31][0][6] = 1;
    end
    scalar_adr[31][0][6] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][6]) begin
        scalar_argVld[31][0][6] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[31][0][6] = 1;
    end

    //------READ (scalar, global adr = 256) comb block-----//
    //s = 0; r = 0; a = 17;
    if (scalar_rdat_vld_r[0][0][17]) begin
        scalar_argdone [0][0][17] = 1;
    end
    scalar_adr[0][0][17] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][17]) begin
        scalar_argVld[0][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[0][0][17] = 1;
    end

    //------READ (scalar, global adr = 444) comb block-----//
    //s = 15; r = 1; a = 11;
    if (scalar_rdat_vld_r[15][1][11]) begin
        scalar_argdone [15][1][11] = 1;
    end
    scalar_adr[15][1][11] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][11]) begin
        scalar_argVld[15][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[15][1][11] = 1;
    end

    //------READ (array range, global adr = 8192, width=16, addr_width=5) -----//
    //s = 0; a = 1;
    hls_decode_neighbour_hls_column_width_q0 = array_rdat  [0][1];
    array_argVld [0][1] = hls_decode_neighbour_hls_column_width_ce0;
    array_adr    [0][1][5:0] = hls_decode_neighbour_hls_column_width_address0 * 2;

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 0; a = 14;
    if (scalar_rdat_vld_r[6][0][14]) begin
        scalar_argdone [6][0][14] = 1;
    end
    scalar_adr[6][0][14] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][14]) begin
        scalar_argVld[6][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[6][0][14] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 0; a = 7;
    if (scalar_rdat_vld_r[19][0][7]) begin
        scalar_argdone [19][0][7] = 1;
    end
    scalar_adr[19][0][7] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][7]) begin
        scalar_argVld[19][0][7] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[19][0][7] = 1;
    end

    hls_decode_neighbour_hls_ready = array_argRdy[0][1];
    array_ap_ce[0][1] = hls_decode_neighbour_hls_ready;

    if (ap_arb_ret[hls_decode_neighbour_hls] & ~ap_arb_ret_r[hls_decode_neighbour_hls]) begin
        ap_arb_ret_running[hls_decode_neighbour_hls] = 1;
        hls_decode_neighbour_hls_ready = 0;
    end

    scalar_argAckdone_all[hls_decode_neighbour_hls] = scalar_argAckdone[5][1][2] &
                                                scalar_argAckdone[27][1][0] &
                                                scalar_argAckdone[28][0][1] &
                                                scalar_argAckdone[1][1][0] &
                                                scalar_argAckdone[2][1][0] &
                                                scalar_argAckdone[24][1][0] &
                                                scalar_argAckdone[23][1][2] &
                                                scalar_argAckdone[26][1][0] &
                                                scalar_argAckdone[25][1][0];
    if (ap_arb_ret_running[hls_decode_neighbour_hls] & scalar_argAckdone_all[hls_decode_neighbour_hls] &~ ap_arb_reload_running_r[hls_decode_neighbour_hls]) begin
        ap_arb_reload[hls_decode_neighbour_hls] = 1;
        ap_arb_reload_running[hls_decode_neighbour_hls] = 1;
    end

    if (ap_arb_start[hls_decode_neighbour_hls] &~ ap_arb_start_r[hls_decode_neighbour_hls]) begin
        ap_arb_start_running[hls_decode_neighbour_hls] = 1;
    end

    if (ap_arb_start_running[hls_decode_neighbour_hls] ) begin
        ap_arb_start_running[hls_decode_neighbour_hls] = 0;
        ap_arb_reload[hls_decode_neighbour_hls] = 1;
    end

    scalar_argdone_all[hls_decode_neighbour_hls] = scalar_argdone[4][1][6] &
                                                                scalar_argdone[5][0][9] &
                                                                scalar_argdone[6][1][13] &
                                                                scalar_argdone[26][0][12] &
                                                                scalar_argdone[7][0][14] &
                                                                scalar_argdone[8][1][11] &
                                                                scalar_argdone[31][0][6] &
                                                                scalar_argdone[0][0][17] &
                                                                scalar_argdone[15][1][11] &
                                                                scalar_argdone[6][0][14] &
                                                                scalar_argdone[19][0][7];

    if (scalar_argdone_all_r[hls_decode_neighbour_hls]) begin
        scalar_argdone[4][1][6] = 0;
        scalar_argdone[5][0][9] = 0;
        scalar_argdone[6][1][13] = 0;
        scalar_argdone[26][0][12] = 0;
        scalar_argdone[7][0][14] = 0;
        scalar_argdone[8][1][11] = 0;
        scalar_argdone[31][0][6] = 0;
        scalar_argdone[0][0][17] = 0;
        scalar_argdone[15][1][11] = 0;
        scalar_argdone[6][0][14] = 0;
        scalar_argdone[19][0][7] = 0;

        if (ap_arb_start_r[hls_decode_neighbour_hls] & ~ap_running_r[hls_decode_neighbour_hls]) begin
            ap_start[hls_decode_neighbour_hls] = 1;
            ap_running[hls_decode_neighbour_hls] = 1;
        end
        else if (ap_arb_ret_running_r[hls_decode_neighbour_hls]) begin
            ap_arb_ret_running[hls_decode_neighbour_hls] = 0;
            ap_arb_reload_running[hls_decode_neighbour_hls] = 0;
            hls_decode_neighbour_hls_ready = 1;
        end
    end

    if (ap_start_r[hls_decode_neighbour_hls] & ap_ready_r[hls_decode_neighbour_hls]) begin
        ap_start[hls_decode_neighbour_hls] = 0;
    end

    if (ap_done_r[hls_decode_neighbour_hls]) begin
        ap_running[hls_decode_neighbour_hls] = 0;
    end
`endif
    //============================================================
    //set_tab_mvf_pred_flag_hls       (f = 28)
    //============================================================
`ifdef enable_connect_set_tab_mvf_pred_flag_hls
    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 1; a = 10;
    if (scalar_rdat_vld_r[29][1][10]) begin
        scalar_argdone [29][1][10] = 1;
    end
    scalar_adr[29][1][10] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][10]) begin
        scalar_argVld[29][1][10] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld[29][1][10] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 0; a = 7;
    if (scalar_rdat_vld_r[3][0][7]) begin
        scalar_argdone [3][0][7] = 1;
    end
    scalar_adr[3][0][7] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][7]) begin
        scalar_argVld[3][0][7] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld[3][0][7] = 1;
    end

    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 0; a = 19;
    if (scalar_rdat_vld_r[11][0][19]) begin
        scalar_argdone [11][0][19] = 1;
    end
    scalar_adr[11][0][19] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][19]) begin
        scalar_argVld[11][0][19] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld[11][0][19] = 1;
    end

    //------READ (scalar, global adr = 1276) comb block-----//
    //s = 31; r = 0; a = 20;
    if (scalar_rdat_vld_r[31][0][20]) begin
        scalar_argdone [31][0][20] = 1;
    end
    scalar_adr[31][0][20] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][20]) begin
        scalar_argVld[31][0][20] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld[31][0][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 180) comb block-----//
    //s = 13; r = 1; a = 25;
    if (scalar_rdat_vld_r[13][1][25]) begin
        scalar_argdone [13][1][25] = 1;
    end
    scalar_adr    [13][1][25] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][25]) begin
        scalar_argVld [13][1][25] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [13][1][25] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 180) comb block-----//
    //s = 13; r = 0; a = 7;
    if (scalar_argAck [13][0][7]) begin
        scalar_argVld [13][0][7] = 0;
        scalar_argAckdone [13][0][7] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_0_o_ap_vld_r) begin
        scalar_argVld [13][0][7] = 1;
        scalar_argAckdone [13][0][7] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][7] = set_tab_mvf_pred_flag_hls_predColBuf_0_o_r;
    scalar_adr    [13][0][7] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 184) comb block-----//
    //s = 14; r = 0; a = 24;
    if (scalar_rdat_vld_r[14][0][24]) begin
        scalar_argdone [14][0][24] = 1;
    end
    scalar_adr    [14][0][24] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][24]) begin
        scalar_argVld [14][0][24] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [14][0][24] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 184) comb block-----//
    //s = 14; r = 0; a = 7;
    if (scalar_argAck [14][0][7]) begin
        scalar_argVld [14][0][7] = 0;
        scalar_argAckdone [14][0][7] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_1_o_ap_vld_r) begin
        scalar_argVld [14][0][7] = 1;
        scalar_argAckdone [14][0][7] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][7] = set_tab_mvf_pred_flag_hls_predColBuf_1_o_r;
    scalar_adr    [14][0][7] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 188) comb block-----//
    //s = 15; r = 0; a = 18;
    if (scalar_rdat_vld_r[15][0][18]) begin
        scalar_argdone [15][0][18] = 1;
    end
    scalar_adr    [15][0][18] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][18]) begin
        scalar_argVld [15][0][18] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [15][0][18] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 188) comb block-----//
    //s = 15; r = 0; a = 5;
    if (scalar_argAck [15][0][5]) begin
        scalar_argVld [15][0][5] = 0;
        scalar_argAckdone [15][0][5] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_2_o_ap_vld_r) begin
        scalar_argVld [15][0][5] = 1;
        scalar_argAckdone [15][0][5] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][5] = set_tab_mvf_pred_flag_hls_predColBuf_2_o_r;
    scalar_adr    [15][0][5] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 192) comb block-----//
    //s = 16; r = 1; a = 15;
    if (scalar_rdat_vld_r[16][1][15]) begin
        scalar_argdone [16][1][15] = 1;
    end
    scalar_adr    [16][1][15] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][15]) begin
        scalar_argVld [16][1][15] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [16][1][15] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 192) comb block-----//
    //s = 16; r = 1; a = 3;
    if (scalar_argAck [16][1][3]) begin
        scalar_argVld [16][1][3] = 0;
        scalar_argAckdone [16][1][3] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_3_o_ap_vld_r) begin
        scalar_argVld [16][1][3] = 1;
        scalar_argAckdone [16][1][3] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][1][3] = set_tab_mvf_pred_flag_hls_predColBuf_3_o_r;
    scalar_adr    [16][1][3] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 196) comb block-----//
    //s = 17; r = 1; a = 13;
    if (scalar_rdat_vld_r[17][1][13]) begin
        scalar_argdone [17][1][13] = 1;
    end
    scalar_adr    [17][1][13] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][13]) begin
        scalar_argVld [17][1][13] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [17][1][13] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 196) comb block-----//
    //s = 17; r = 1; a = 3;
    if (scalar_argAck [17][1][3]) begin
        scalar_argVld [17][1][3] = 0;
        scalar_argAckdone [17][1][3] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_4_o_ap_vld_r) begin
        scalar_argVld [17][1][3] = 1;
        scalar_argAckdone [17][1][3] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][1][3] = set_tab_mvf_pred_flag_hls_predColBuf_4_o_r;
    scalar_adr    [17][1][3] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 200) comb block-----//
    //s = 18; r = 1; a = 12;
    if (scalar_rdat_vld_r[18][1][12]) begin
        scalar_argdone [18][1][12] = 1;
    end
    scalar_adr    [18][1][12] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][12]) begin
        scalar_argVld [18][1][12] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [18][1][12] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 200) comb block-----//
    //s = 18; r = 1; a = 3;
    if (scalar_argAck [18][1][3]) begin
        scalar_argVld [18][1][3] = 0;
        scalar_argAckdone [18][1][3] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_5_o_ap_vld_r) begin
        scalar_argVld [18][1][3] = 1;
        scalar_argAckdone [18][1][3] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][1][3] = set_tab_mvf_pred_flag_hls_predColBuf_5_o_r;
    scalar_adr    [18][1][3] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 204) comb block-----//
    //s = 19; r = 1; a = 12;
    if (scalar_rdat_vld_r[19][1][12]) begin
        scalar_argdone [19][1][12] = 1;
    end
    scalar_adr    [19][1][12] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][12]) begin
        scalar_argVld [19][1][12] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [19][1][12] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 204) comb block-----//
    //s = 19; r = 1; a = 3;
    if (scalar_argAck [19][1][3]) begin
        scalar_argVld [19][1][3] = 0;
        scalar_argAckdone [19][1][3] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_6_o_ap_vld_r) begin
        scalar_argVld [19][1][3] = 1;
        scalar_argAckdone [19][1][3] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][1][3] = set_tab_mvf_pred_flag_hls_predColBuf_6_o_r;
    scalar_adr    [19][1][3] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 208) comb block-----//
    //s = 20; r = 0; a = 16;
    if (scalar_rdat_vld_r[20][0][16]) begin
        scalar_argdone [20][0][16] = 1;
    end
    scalar_adr    [20][0][16] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][16]) begin
        scalar_argVld [20][0][16] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [20][0][16] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 208) comb block-----//
    //s = 20; r = 1; a = 7;
    if (scalar_argAck [20][1][7]) begin
        scalar_argVld [20][1][7] = 0;
        scalar_argAckdone [20][1][7] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_7_o_ap_vld_r) begin
        scalar_argVld [20][1][7] = 1;
        scalar_argAckdone [20][1][7] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][7] = set_tab_mvf_pred_flag_hls_predColBuf_7_o_r;
    scalar_adr    [20][1][7] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 212) comb block-----//
    //s = 21; r = 0; a = 22;
    if (scalar_rdat_vld_r[21][0][22]) begin
        scalar_argdone [21][0][22] = 1;
    end
    scalar_adr    [21][0][22] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][22]) begin
        scalar_argVld [21][0][22] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [21][0][22] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 212) comb block-----//
    //s = 21; r = 0; a = 9;
    if (scalar_argAck [21][0][9]) begin
        scalar_argVld [21][0][9] = 0;
        scalar_argAckdone [21][0][9] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_8_o_ap_vld_r) begin
        scalar_argVld [21][0][9] = 1;
        scalar_argAckdone [21][0][9] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][9] = set_tab_mvf_pred_flag_hls_predColBuf_8_o_r;
    scalar_adr    [21][0][9] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 216) comb block-----//
    //s = 22; r = 0; a = 22;
    if (scalar_rdat_vld_r[22][0][22]) begin
        scalar_argdone [22][0][22] = 1;
    end
    scalar_adr    [22][0][22] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][22]) begin
        scalar_argVld [22][0][22] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [22][0][22] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 216) comb block-----//
    //s = 22; r = 0; a = 9;
    if (scalar_argAck [22][0][9]) begin
        scalar_argVld [22][0][9] = 0;
        scalar_argAckdone [22][0][9] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_9_o_ap_vld_r) begin
        scalar_argVld [22][0][9] = 1;
        scalar_argAckdone [22][0][9] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][9] = set_tab_mvf_pred_flag_hls_predColBuf_9_o_r;
    scalar_adr    [22][0][9] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 220) comb block-----//
    //s = 23; r = 1; a = 26;
    if (scalar_rdat_vld_r[23][1][26]) begin
        scalar_argdone [23][1][26] = 1;
    end
    scalar_adr    [23][1][26] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][26]) begin
        scalar_argVld [23][1][26] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [23][1][26] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 220) comb block-----//
    //s = 23; r = 0; a = 7;
    if (scalar_argAck [23][0][7]) begin
        scalar_argVld [23][0][7] = 0;
        scalar_argAckdone [23][0][7] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_10_o_ap_vld_r) begin
        scalar_argVld [23][0][7] = 1;
        scalar_argAckdone [23][0][7] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][7] = set_tab_mvf_pred_flag_hls_predColBuf_10_o_r;
    scalar_adr    [23][0][7] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 224) comb block-----//
    //s = 24; r = 0; a = 22;
    if (scalar_rdat_vld_r[24][0][22]) begin
        scalar_argdone [24][0][22] = 1;
    end
    scalar_adr    [24][0][22] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][22]) begin
        scalar_argVld [24][0][22] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [24][0][22] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 224) comb block-----//
    //s = 24; r = 0; a = 5;
    if (scalar_argAck [24][0][5]) begin
        scalar_argVld [24][0][5] = 0;
        scalar_argAckdone [24][0][5] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_11_o_ap_vld_r) begin
        scalar_argVld [24][0][5] = 1;
        scalar_argAckdone [24][0][5] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][0][5] = set_tab_mvf_pred_flag_hls_predColBuf_11_o_r;
    scalar_adr    [24][0][5] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 228) comb block-----//
    //s = 25; r = 0; a = 19;
    if (scalar_rdat_vld_r[25][0][19]) begin
        scalar_argdone [25][0][19] = 1;
    end
    scalar_adr    [25][0][19] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][19]) begin
        scalar_argVld [25][0][19] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [25][0][19] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 228) comb block-----//
    //s = 25; r = 0; a = 5;
    if (scalar_argAck [25][0][5]) begin
        scalar_argVld [25][0][5] = 0;
        scalar_argAckdone [25][0][5] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_12_o_ap_vld_r) begin
        scalar_argVld [25][0][5] = 1;
        scalar_argAckdone [25][0][5] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][0][5] = set_tab_mvf_pred_flag_hls_predColBuf_12_o_r;
    scalar_adr    [25][0][5] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 232) comb block-----//
    //s = 26; r = 0; a = 23;
    if (scalar_rdat_vld_r[26][0][23]) begin
        scalar_argdone [26][0][23] = 1;
    end
    scalar_adr    [26][0][23] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][23]) begin
        scalar_argVld [26][0][23] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [26][0][23] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 232) comb block-----//
    //s = 26; r = 0; a = 4;
    if (scalar_argAck [26][0][4]) begin
        scalar_argVld [26][0][4] = 0;
        scalar_argAckdone [26][0][4] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_13_o_ap_vld_r) begin
        scalar_argVld [26][0][4] = 1;
        scalar_argAckdone [26][0][4] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][0][4] = set_tab_mvf_pred_flag_hls_predColBuf_13_o_r;
    scalar_adr    [26][0][4] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 236) comb block-----//
    //s = 27; r = 0; a = 15;
    if (scalar_rdat_vld_r[27][0][15]) begin
        scalar_argdone [27][0][15] = 1;
    end
    scalar_adr    [27][0][15] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][15]) begin
        scalar_argVld [27][0][15] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [27][0][15] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 236) comb block-----//
    //s = 27; r = 0; a = 3;
    if (scalar_argAck [27][0][3]) begin
        scalar_argVld [27][0][3] = 0;
        scalar_argAckdone [27][0][3] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_14_o_ap_vld_r) begin
        scalar_argVld [27][0][3] = 1;
        scalar_argAckdone [27][0][3] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][3] = set_tab_mvf_pred_flag_hls_predColBuf_14_o_r;
    scalar_adr    [27][0][3] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 240) comb block-----//
    //s = 28; r = 1; a = 20;
    if (scalar_rdat_vld_r[28][1][20]) begin
        scalar_argdone [28][1][20] = 1;
    end
    scalar_adr    [28][1][20] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][20]) begin
        scalar_argVld [28][1][20] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [28][1][20] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 240) comb block-----//
    //s = 28; r = 1; a = 5;
    if (scalar_argAck [28][1][5]) begin
        scalar_argVld [28][1][5] = 0;
        scalar_argAckdone [28][1][5] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_15_o_ap_vld_r) begin
        scalar_argVld [28][1][5] = 1;
        scalar_argAckdone [28][1][5] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][1][5] = set_tab_mvf_pred_flag_hls_predColBuf_15_o_r;
    scalar_adr    [28][1][5] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 244) comb block-----//
    //s = 29; r = 0; a = 12;
    if (scalar_rdat_vld_r[29][0][12]) begin
        scalar_argdone [29][0][12] = 1;
    end
    scalar_adr    [29][0][12] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][12]) begin
        scalar_argVld [29][0][12] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [29][0][12] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 244) comb block-----//
    //s = 29; r = 0; a = 3;
    if (scalar_argAck [29][0][3]) begin
        scalar_argVld [29][0][3] = 0;
        scalar_argAckdone [29][0][3] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_16_o_ap_vld_r) begin
        scalar_argVld [29][0][3] = 1;
        scalar_argAckdone [29][0][3] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][3] = set_tab_mvf_pred_flag_hls_predColBuf_16_o_r;
    scalar_adr    [29][0][3] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (ap_arb_ret[set_tab_mvf_pred_flag_hls] & ~ap_arb_ret_r[set_tab_mvf_pred_flag_hls]) begin
        ap_arb_ret_running[set_tab_mvf_pred_flag_hls] = 1;
        set_tab_mvf_pred_flag_hls_ready = 0;
    end

    scalar_argAckdone_all[set_tab_mvf_pred_flag_hls] = scalar_argAckdone[13][0][7] &
                                                scalar_argAckdone[14][0][7] &
                                                scalar_argAckdone[15][0][5] &
                                                scalar_argAckdone[16][1][3] &
                                                scalar_argAckdone[17][1][3] &
                                                scalar_argAckdone[18][1][3] &
                                                scalar_argAckdone[19][1][3] &
                                                scalar_argAckdone[20][1][7] &
                                                scalar_argAckdone[21][0][9] &
                                                scalar_argAckdone[22][0][9] &
                                                scalar_argAckdone[23][0][7] &
                                                scalar_argAckdone[24][0][5] &
                                                scalar_argAckdone[25][0][5] &
                                                scalar_argAckdone[26][0][4] &
                                                scalar_argAckdone[27][0][3] &
                                                scalar_argAckdone[28][1][5] &
                                                scalar_argAckdone[29][0][3];
    if (ap_arb_ret_running[set_tab_mvf_pred_flag_hls] & scalar_argAckdone_all[set_tab_mvf_pred_flag_hls] &~ ap_arb_reload_running_r[set_tab_mvf_pred_flag_hls]) begin
        ap_arb_reload[set_tab_mvf_pred_flag_hls] = 1;
        ap_arb_reload_running[set_tab_mvf_pred_flag_hls] = 1;
    end

    if (ap_arb_start[set_tab_mvf_pred_flag_hls] &~ ap_arb_start_r[set_tab_mvf_pred_flag_hls]) begin
        ap_arb_start_running[set_tab_mvf_pred_flag_hls] = 1;
    end

    if (ap_arb_start_running[set_tab_mvf_pred_flag_hls] & ~scalar_writing_180& ~scalar_writing_184& ~scalar_writing_188& ~scalar_writing_192& ~scalar_writing_196& ~scalar_writing_200& ~scalar_writing_204& ~scalar_writing_208& ~scalar_writing_212& ~scalar_writing_216& ~scalar_writing_220& ~scalar_writing_224& ~scalar_writing_228& ~scalar_writing_232& ~scalar_writing_236& ~scalar_writing_240& ~scalar_writing_244) begin
        ap_arb_start_running[set_tab_mvf_pred_flag_hls] = 0;
        ap_arb_reload[set_tab_mvf_pred_flag_hls] = 1;
    end

    scalar_argdone_all[set_tab_mvf_pred_flag_hls] = scalar_argdone[29][1][10] &
                                                                scalar_argdone[3][0][7] &
                                                                scalar_argdone[11][0][19] &
                                                                scalar_argdone[31][0][20] &
                                                                scalar_argdone[13][1][25] &
                                                                scalar_argdone[14][0][24] &
                                                                scalar_argdone[15][0][18] &
                                                                scalar_argdone[16][1][15] &
                                                                scalar_argdone[17][1][13] &
                                                                scalar_argdone[18][1][12] &
                                                                scalar_argdone[19][1][12] &
                                                                scalar_argdone[20][0][16] &
                                                                scalar_argdone[21][0][22] &
                                                                scalar_argdone[22][0][22] &
                                                                scalar_argdone[23][1][26] &
                                                                scalar_argdone[24][0][22] &
                                                                scalar_argdone[25][0][19] &
                                                                scalar_argdone[26][0][23] &
                                                                scalar_argdone[27][0][15] &
                                                                scalar_argdone[28][1][20] &
                                                                scalar_argdone[29][0][12];

    if (scalar_argdone_all_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argdone[29][1][10] = 0;
        scalar_argdone[3][0][7] = 0;
        scalar_argdone[11][0][19] = 0;
        scalar_argdone[31][0][20] = 0;
        scalar_argdone[13][1][25] = 0;
        scalar_argdone[14][0][24] = 0;
        scalar_argdone[15][0][18] = 0;
        scalar_argdone[16][1][15] = 0;
        scalar_argdone[17][1][13] = 0;
        scalar_argdone[18][1][12] = 0;
        scalar_argdone[19][1][12] = 0;
        scalar_argdone[20][0][16] = 0;
        scalar_argdone[21][0][22] = 0;
        scalar_argdone[22][0][22] = 0;
        scalar_argdone[23][1][26] = 0;
        scalar_argdone[24][0][22] = 0;
        scalar_argdone[25][0][19] = 0;
        scalar_argdone[26][0][23] = 0;
        scalar_argdone[27][0][15] = 0;
        scalar_argdone[28][1][20] = 0;
        scalar_argdone[29][0][12] = 0;

        if (ap_arb_start_r[set_tab_mvf_pred_flag_hls] & ~ap_running_r[set_tab_mvf_pred_flag_hls]) begin
            ap_start[set_tab_mvf_pred_flag_hls] = 1;
            ap_running[set_tab_mvf_pred_flag_hls] = 1;
        end
        else if (ap_arb_ret_running_r[set_tab_mvf_pred_flag_hls]) begin
            ap_arb_ret_running[set_tab_mvf_pred_flag_hls] = 0;
            ap_arb_reload_running[set_tab_mvf_pred_flag_hls] = 0;
            set_tab_mvf_pred_flag_hls_ready = 1;
        end
    end

    if (ap_start_r[set_tab_mvf_pred_flag_hls] & ap_ready_r[set_tab_mvf_pred_flag_hls]) begin
        ap_start[set_tab_mvf_pred_flag_hls] = 0;
    end

    if (ap_done_r[set_tab_mvf_pred_flag_hls]) begin
        ap_running[set_tab_mvf_pred_flag_hls] = 0;
    end
`endif
    //============================================================
    //init_intra_neighbors_hls       (f = 29)
    //============================================================
`ifdef enable_connect_init_intra_neighbors_hls
    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 0; a = 15;
    if (scalar_rdat_vld_r[20][0][15]) begin
        scalar_argdone [20][0][15] = 1;
    end
    scalar_adr    [20][0][15] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][15]) begin
        scalar_argVld [20][0][15] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [20][0][15] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 1; a = 19;
    if (scalar_rdat_vld_r[21][1][19]) begin
        scalar_argdone [21][1][19] = 1;
    end
    scalar_adr    [21][1][19] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][19]) begin
        scalar_argVld [21][1][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [21][1][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 1; a = 19;
    if (scalar_rdat_vld_r[22][1][19]) begin
        scalar_argdone [22][1][19] = 1;
    end
    scalar_adr    [22][1][19] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][19]) begin
        scalar_argVld [22][1][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [22][1][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 348) comb block-----//
    //s = 23; r = 0; a = 25;
    if (scalar_rdat_vld_r[23][0][25]) begin
        scalar_argdone [23][0][25] = 1;
    end
    scalar_adr    [23][0][25] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][25]) begin
        scalar_argVld [23][0][25] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [23][0][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 352) comb block-----//
    //s = 24; r = 1; a = 18;
    if (scalar_rdat_vld_r[24][1][18]) begin
        scalar_argdone [24][1][18] = 1;
    end
    scalar_adr    [24][1][18] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][18]) begin
        scalar_argVld [24][1][18] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [24][1][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 356) comb block-----//
    //s = 25; r = 1; a = 15;
    if (scalar_rdat_vld_r[25][1][15]) begin
        scalar_argdone [25][1][15] = 1;
    end
    scalar_adr    [25][1][15] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][15]) begin
        scalar_argVld [25][1][15] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [25][1][15] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 1; a = 8;
    if (scalar_rdat_vld_r[29][1][8]) begin
        scalar_argdone [29][1][8] = 1;
    end
    scalar_adr[29][1][8] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][8]) begin
        scalar_argVld[29][1][8] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[29][1][8] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 1; a = 13;
    if (scalar_rdat_vld_r[30][1][13]) begin
        scalar_argdone [30][1][13] = 1;
    end
    scalar_adr[30][1][13] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][13]) begin
        scalar_argVld[30][1][13] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[30][1][13] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 20;
    if (scalar_rdat_vld_r[26][1][20]) begin
        scalar_argdone [26][1][20] = 1;
    end
    scalar_adr[26][1][20] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][20]) begin
        scalar_argVld[26][1][20] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[26][1][20] = 1;
    end

    //------READ (scalar, global adr = 404) comb block-----//
    //s = 5; r = 0; a = 16;
    if (scalar_rdat_vld_r[5][0][16]) begin
        scalar_argdone [5][0][16] = 1;
    end
    scalar_adr[5][0][16] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][16]) begin
        scalar_argVld[5][0][16] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[5][0][16] = 1;
    end

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 0; a = 17;
    if (scalar_rdat_vld_r[6][0][17]) begin
        scalar_argdone [6][0][17] = 1;
    end
    scalar_adr[6][0][17] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][17]) begin
        scalar_argVld[6][0][17] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[6][0][17] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 0; a = 11;
    if (scalar_rdat_vld_r[19][0][11]) begin
        scalar_argdone [19][0][11] = 1;
    end
    scalar_adr[19][0][11] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][11]) begin
        scalar_argVld[19][0][11] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[19][0][11] = 1;
    end

    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 1; a = 17;
    if (scalar_rdat_vld_r[11][1][17]) begin
        scalar_argdone [11][1][17] = 1;
    end
    scalar_adr[11][1][17] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][17]) begin
        scalar_argVld[11][1][17] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[11][1][17] = 1;
    end

    //------READ (scalar, global adr = 176) comb block-----//
    //s = 12; r = 1; a = 21;
    if (scalar_rdat_vld_r[12][1][21]) begin
        scalar_argdone [12][1][21] = 1;
    end
    scalar_adr[12][1][21] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][21]) begin
        scalar_argVld[12][1][21] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[12][1][21] = 1;
    end

    //------READ (scalar, global adr = 424) comb block-----//
    //s = 10; r = 1; a = 13;
    if (scalar_rdat_vld_r[10][1][13]) begin
        scalar_argdone [10][1][13] = 1;
    end
    scalar_adr[10][1][13] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][13]) begin
        scalar_argVld[10][1][13] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[10][1][13] = 1;
    end

    //------READ (scalar, global adr = 1260) comb block-----//
    //s = 27; r = 0; a = 14;
    if (scalar_rdat_vld_r[27][0][14]) begin
        scalar_argdone [27][0][14] = 1;
    end
    scalar_adr[27][0][14] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][14]) begin
        scalar_argVld[27][0][14] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[27][0][14] = 1;
    end

    //------READ (scalar, global adr = 600) comb block-----//
    //s = 22; r = 0; a = 21;
    if (scalar_rdat_vld_r[22][0][21]) begin
        scalar_argdone [22][0][21] = 1;
    end
    scalar_adr[22][0][21] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][21]) begin
        scalar_argVld[22][0][21] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[22][0][21] = 1;
    end

    //------READ (scalar, global adr = 584) comb block-----//
    //s = 18; r = 1; a = 11;
    if (scalar_rdat_vld_r[18][1][11]) begin
        scalar_argdone [18][1][11] = 1;
    end
    scalar_adr[18][1][11] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][11]) begin
        scalar_argVld[18][1][11] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[18][1][11] = 1;
    end

    //------READ (scalar, global adr = 588) comb block-----//
    //s = 19; r = 1; a = 11;
    if (scalar_rdat_vld_r[19][1][11]) begin
        scalar_argdone [19][1][11] = 1;
    end
    scalar_adr[19][1][11] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][11]) begin
        scalar_argVld[19][1][11] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[19][1][11] = 1;
    end

    //------READ (scalar, global adr = 580) comb block-----//
    //s = 17; r = 1; a = 11;
    if (scalar_rdat_vld_r[17][1][11]) begin
        scalar_argdone [17][1][11] = 1;
    end
    scalar_adr[17][1][11] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][11]) begin
        scalar_argVld[17][1][11] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[17][1][11] = 1;
    end

    //------READ (scalar, global adr = 596) comb block-----//
    //s = 21; r = 0; a = 21;
    if (scalar_rdat_vld_r[21][0][21]) begin
        scalar_argdone [21][0][21] = 1;
    end
    scalar_adr[21][0][21] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][21]) begin
        scalar_argVld[21][0][21] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[21][0][21] = 1;
    end

    //------WRITE (scalar, global adr = 644) comb block-----//
    //s = 1; r = 0; a = 1;
    if (scalar_argAck [1][0][1]) begin
        scalar_argVld [1][0][1] = 0;
        scalar_argAckdone [1][0][1] = 1;
    end
    if (init_intra_neighbors_hls_numIntraNeighbor_ap_vld_r) begin
        scalar_argVld [1][0][1] = 1;
        scalar_argAckdone [1][0][1] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][0][1] = init_intra_neighbors_hls_numIntraNeighbor_r;
    scalar_adr    [1][0][1] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 648) comb block-----//
    //s = 2; r = 0; a = 1;
    if (scalar_argAck [2][0][1]) begin
        scalar_argVld [2][0][1] = 0;
        scalar_argAckdone [2][0][1] = 1;
    end
    if (init_intra_neighbors_hls_totalUnits_ap_vld_r) begin
        scalar_argVld [2][0][1] = 1;
        scalar_argAckdone [2][0][1] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][0][1] = init_intra_neighbors_hls_totalUnits_r;
    scalar_adr    [2][0][1] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 652) comb block-----//
    //s = 3; r = 0; a = 4;
    if (scalar_argAck [3][0][4]) begin
        scalar_argVld [3][0][4] = 0;
        scalar_argAckdone [3][0][4] = 1;
    end
    if (init_intra_neighbors_hls_aboveUnits_ap_vld_r) begin
        scalar_argVld [3][0][4] = 1;
        scalar_argAckdone [3][0][4] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][0][4] = init_intra_neighbors_hls_aboveUnits_r;
    scalar_adr    [3][0][4] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 656) comb block-----//
    //s = 4; r = 0; a = 4;
    if (scalar_argAck [4][0][4]) begin
        scalar_argVld [4][0][4] = 0;
        scalar_argAckdone [4][0][4] = 1;
    end
    if (init_intra_neighbors_hls_leftUnits_ap_vld_r) begin
        scalar_argVld [4][0][4] = 1;
        scalar_argAckdone [4][0][4] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][0][4] = init_intra_neighbors_hls_leftUnits_r;
    scalar_adr    [4][0][4] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 660) comb block-----//
    //s = 5; r = 0; a = 7;
    if (scalar_argAck [5][0][7]) begin
        scalar_argVld [5][0][7] = 0;
        scalar_argAckdone [5][0][7] = 1;
    end
    if (init_intra_neighbors_hls_unitWidth_ap_vld_r) begin
        scalar_argVld [5][0][7] = 1;
        scalar_argAckdone [5][0][7] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][7] = init_intra_neighbors_hls_unitWidth_r;
    scalar_adr    [5][0][7] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 664) comb block-----//
    //s = 6; r = 1; a = 6;
    if (scalar_argAck [6][1][6]) begin
        scalar_argVld [6][1][6] = 0;
        scalar_argAckdone [6][1][6] = 1;
    end
    if (init_intra_neighbors_hls_unitHeight_ap_vld_r) begin
        scalar_argVld [6][1][6] = 1;
        scalar_argAckdone [6][1][6] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][6] = init_intra_neighbors_hls_unitHeight_r;
    scalar_adr    [6][1][6] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 668) comb block-----//
    //s = 7; r = 0; a = 8;
    if (scalar_argAck [7][0][8]) begin
        scalar_argVld [7][0][8] = 0;
        scalar_argAckdone [7][0][8] = 1;
    end
    if (init_intra_neighbors_hls_log2TrSize_ap_vld_r) begin
        scalar_argVld [7][0][8] = 1;
        scalar_argAckdone [7][0][8] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][8] = init_intra_neighbors_hls_log2TrSize_r;
    scalar_adr    [7][0][8] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 672) comb block-----//
    //s = 8; r = 0; a = 12;
    if (scalar_rdat_vld_r[8][0][12]) begin
        scalar_argdone [8][0][12] = 1;
    end
    scalar_adr[8][0][12] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][12]) begin
        scalar_argVld[8][0][12] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[8][0][12] = 1;
    end

    //------READ (scalar, global adr = 672) comb block-----//
    //s = 9; r = 1; a = 13;
    if (scalar_rdat_vld_r[9][1][13]) begin
        scalar_argdone [9][1][13] = 1;
    end
    scalar_adr[9][1][13] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][13]) begin
        scalar_argVld[9][1][13] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[9][1][13] = 1;
    end

    //------READ (scalar, global adr = 672) comb block-----//
    //s = 10; r = 0; a = 15;
    if (scalar_rdat_vld_r[10][0][15]) begin
        scalar_argdone [10][0][15] = 1;
    end
    scalar_adr[10][0][15] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][15]) begin
        scalar_argVld[10][0][15] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[10][0][15] = 1;
    end

    //------WRITE (scalar, global adr = 672) comb block-----//
    //s = 8; r = 1; a = 6;
    if (scalar_argAck [8][1][6]) begin
        scalar_argVld [8][1][6] = 0;
        scalar_argAckdone [8][1][6] = 1;
    end
    if (init_intra_neighbors_hls_bNeighborFlags_0_o_ap_vld_r) begin
        scalar_argVld [8][1][6] = 1;
        scalar_argAckdone [8][1][6] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][6] = init_intra_neighbors_hls_bNeighborFlags_0_o_r;
    scalar_adr    [8][1][6] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 672) comb block-----//
    //s = 9; r = 1; a = 8;
    if (scalar_argAck [9][1][8]) begin
        scalar_argVld [9][1][8] = 0;
        scalar_argAckdone [9][1][8] = 1;
    end
    if (init_intra_neighbors_hls_bNeighborFlags_1_o_ap_vld_r) begin
        scalar_argVld [9][1][8] = 1;
        scalar_argAckdone [9][1][8] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][8] = init_intra_neighbors_hls_bNeighborFlags_1_o_r;
    scalar_adr    [9][1][8] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 672) comb block-----//
    //s = 10; r = 0; a = 8;
    if (scalar_argAck [10][0][8]) begin
        scalar_argVld [10][0][8] = 0;
        scalar_argAckdone [10][0][8] = 1;
    end
    if (init_intra_neighbors_hls_bNeighborFlags_2_o_ap_vld_r) begin
        scalar_argVld [10][0][8] = 1;
        scalar_argAckdone [10][0][8] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][8] = init_intra_neighbors_hls_bNeighborFlags_2_o_r;
    scalar_adr    [10][0][8] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 0; a = 6;
    if (scalar_rdat_vld_r[3][0][6]) begin
        scalar_argdone [3][0][6] = 1;
    end
    scalar_adr[3][0][6] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][6]) begin
        scalar_argVld[3][0][6] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[3][0][6] = 1;
    end

    //------READ (scalar, global adr = 1276) comb block-----//
    //s = 31; r = 0; a = 19;
    if (scalar_rdat_vld_r[31][0][19]) begin
        scalar_argdone [31][0][19] = 1;
    end
    scalar_adr[31][0][19] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][19]) begin
        scalar_argVld[31][0][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[31][0][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 180) comb block-----//
    //s = 13; r = 1; a = 24;
    if (scalar_rdat_vld_r[13][1][24]) begin
        scalar_argdone [13][1][24] = 1;
    end
    scalar_adr    [13][1][24] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][24]) begin
        scalar_argVld [13][1][24] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [13][1][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 184) comb block-----//
    //s = 14; r = 0; a = 23;
    if (scalar_rdat_vld_r[14][0][23]) begin
        scalar_argdone [14][0][23] = 1;
    end
    scalar_adr    [14][0][23] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][23]) begin
        scalar_argVld [14][0][23] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [14][0][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 188) comb block-----//
    //s = 15; r = 1; a = 16;
    if (scalar_rdat_vld_r[15][1][16]) begin
        scalar_argdone [15][1][16] = 1;
    end
    scalar_adr    [15][1][16] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][16]) begin
        scalar_argVld [15][1][16] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [15][1][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 192) comb block-----//
    //s = 16; r = 0; a = 15;
    if (scalar_rdat_vld_r[16][0][15]) begin
        scalar_argdone [16][0][15] = 1;
    end
    scalar_adr    [16][0][15] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][15]) begin
        scalar_argVld [16][0][15] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [16][0][15] = 1;
    end

    //------READ (scalar, complete partition, global adr = 196) comb block-----//
    //s = 17; r = 0; a = 12;
    if (scalar_rdat_vld_r[17][0][12]) begin
        scalar_argdone [17][0][12] = 1;
    end
    scalar_adr    [17][0][12] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][12]) begin
        scalar_argVld [17][0][12] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [17][0][12] = 1;
    end

    //------READ (scalar, complete partition, global adr = 200) comb block-----//
    //s = 18; r = 0; a = 12;
    if (scalar_rdat_vld_r[18][0][12]) begin
        scalar_argdone [18][0][12] = 1;
    end
    scalar_adr    [18][0][12] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][12]) begin
        scalar_argVld [18][0][12] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [18][0][12] = 1;
    end

    //------READ (scalar, complete partition, global adr = 204) comb block-----//
    //s = 19; r = 0; a = 12;
    if (scalar_rdat_vld_r[19][0][12]) begin
        scalar_argdone [19][0][12] = 1;
    end
    scalar_adr    [19][0][12] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][12]) begin
        scalar_argVld [19][0][12] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [19][0][12] = 1;
    end

    //------READ (scalar, complete partition, global adr = 208) comb block-----//
    //s = 20; r = 1; a = 15;
    if (scalar_rdat_vld_r[20][1][15]) begin
        scalar_argdone [20][1][15] = 1;
    end
    scalar_adr    [20][1][15] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][15]) begin
        scalar_argVld [20][1][15] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [20][1][15] = 1;
    end

    //------READ (scalar, complete partition, global adr = 212) comb block-----//
    //s = 21; r = 1; a = 20;
    if (scalar_rdat_vld_r[21][1][20]) begin
        scalar_argdone [21][1][20] = 1;
    end
    scalar_adr    [21][1][20] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][20]) begin
        scalar_argVld [21][1][20] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [21][1][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 216) comb block-----//
    //s = 22; r = 1; a = 20;
    if (scalar_rdat_vld_r[22][1][20]) begin
        scalar_argdone [22][1][20] = 1;
    end
    scalar_adr    [22][1][20] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][20]) begin
        scalar_argVld [22][1][20] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [22][1][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 220) comb block-----//
    //s = 23; r = 1; a = 24;
    if (scalar_rdat_vld_r[23][1][24]) begin
        scalar_argdone [23][1][24] = 1;
    end
    scalar_adr    [23][1][24] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][24]) begin
        scalar_argVld [23][1][24] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [23][1][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 224) comb block-----//
    //s = 24; r = 0; a = 20;
    if (scalar_rdat_vld_r[24][0][20]) begin
        scalar_argdone [24][0][20] = 1;
    end
    scalar_adr    [24][0][20] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][20]) begin
        scalar_argVld [24][0][20] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [24][0][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 228) comb block-----//
    //s = 25; r = 0; a = 17;
    if (scalar_rdat_vld_r[25][0][17]) begin
        scalar_argdone [25][0][17] = 1;
    end
    scalar_adr    [25][0][17] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][17]) begin
        scalar_argVld [25][0][17] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [25][0][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 232) comb block-----//
    //s = 26; r = 0; a = 22;
    if (scalar_rdat_vld_r[26][0][22]) begin
        scalar_argdone [26][0][22] = 1;
    end
    scalar_adr    [26][0][22] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][22]) begin
        scalar_argVld [26][0][22] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [26][0][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 236) comb block-----//
    //s = 27; r = 1; a = 13;
    if (scalar_rdat_vld_r[27][1][13]) begin
        scalar_argdone [27][1][13] = 1;
    end
    scalar_adr    [27][1][13] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][13]) begin
        scalar_argVld [27][1][13] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [27][1][13] = 1;
    end

    //------READ (scalar, complete partition, global adr = 240) comb block-----//
    //s = 28; r = 0; a = 20;
    if (scalar_rdat_vld_r[28][0][20]) begin
        scalar_argdone [28][0][20] = 1;
    end
    scalar_adr    [28][0][20] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][20]) begin
        scalar_argVld [28][0][20] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [28][0][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 244) comb block-----//
    //s = 29; r = 0; a = 10;
    if (scalar_rdat_vld_r[29][0][10]) begin
        scalar_argdone [29][0][10] = 1;
    end
    scalar_adr    [29][0][10] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][10]) begin
        scalar_argVld [29][0][10] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [29][0][10] = 1;
    end

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 1; a = 12;
    if (scalar_rdat_vld_r[17][1][12]) begin
        scalar_argdone [17][1][12] = 1;
    end
    scalar_adr[17][1][12] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][12]) begin
        scalar_argVld[17][1][12] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[17][1][12] = 1;
    end

    if (ap_arb_ret[init_intra_neighbors_hls] & ~ap_arb_ret_r[init_intra_neighbors_hls]) begin
        ap_arb_ret_running[init_intra_neighbors_hls] = 1;
        init_intra_neighbors_hls_ready = 0;
    end

    scalar_argAckdone_all[init_intra_neighbors_hls] = scalar_argAckdone[1][0][1] &
                                                scalar_argAckdone[2][0][1] &
                                                scalar_argAckdone[3][0][4] &
                                                scalar_argAckdone[4][0][4] &
                                                scalar_argAckdone[5][0][7] &
                                                scalar_argAckdone[6][1][6] &
                                                scalar_argAckdone[7][0][8] &
                                                scalar_argAckdone[8][1][6] &
                                                scalar_argAckdone[9][1][8] &
                                                scalar_argAckdone[10][0][8];
    if (ap_arb_ret_running[init_intra_neighbors_hls] & scalar_argAckdone_all[init_intra_neighbors_hls] &~ ap_arb_reload_running_r[init_intra_neighbors_hls]) begin
        ap_arb_reload[init_intra_neighbors_hls] = 1;
        ap_arb_reload_running[init_intra_neighbors_hls] = 1;
    end

    if (ap_arb_start[init_intra_neighbors_hls] &~ ap_arb_start_r[init_intra_neighbors_hls]) begin
        ap_arb_start_running[init_intra_neighbors_hls] = 1;
    end

    if (ap_arb_start_running[init_intra_neighbors_hls] & ~scalar_writing_600& ~scalar_writing_584& ~scalar_writing_588& ~scalar_writing_580& ~scalar_writing_596& ~scalar_writing_672& ~scalar_writing_180& ~scalar_writing_184& ~scalar_writing_188& ~scalar_writing_192& ~scalar_writing_196& ~scalar_writing_200& ~scalar_writing_204& ~scalar_writing_208& ~scalar_writing_212& ~scalar_writing_216& ~scalar_writing_220& ~scalar_writing_224& ~scalar_writing_228& ~scalar_writing_232& ~scalar_writing_236& ~scalar_writing_240& ~scalar_writing_244) begin
        ap_arb_start_running[init_intra_neighbors_hls] = 0;
        ap_arb_reload[init_intra_neighbors_hls] = 1;
    end

    scalar_argdone_all[init_intra_neighbors_hls] = scalar_argdone[20][0][15] &
                                                                scalar_argdone[21][1][19] &
                                                                scalar_argdone[22][1][19] &
                                                                scalar_argdone[23][0][25] &
                                                                scalar_argdone[24][1][18] &
                                                                scalar_argdone[25][1][15] &
                                                                scalar_argdone[29][1][8] &
                                                                scalar_argdone[30][1][13] &
                                                                scalar_argdone[26][1][20] &
                                                                scalar_argdone[5][0][16] &
                                                                scalar_argdone[6][0][17] &
                                                                scalar_argdone[19][0][11] &
                                                                scalar_argdone[11][1][17] &
                                                                scalar_argdone[12][1][21] &
                                                                scalar_argdone[10][1][13] &
                                                                scalar_argdone[27][0][14] &
                                                                scalar_argdone[22][0][21] &
                                                                scalar_argdone[18][1][11] &
                                                                scalar_argdone[19][1][11] &
                                                                scalar_argdone[17][1][11] &
                                                                scalar_argdone[21][0][21] &
                                                                scalar_argdone[8][0][12] &
                                                                scalar_argdone[9][1][13] &
                                                                scalar_argdone[10][0][15] &
                                                                scalar_argdone[3][0][6] &
                                                                scalar_argdone[31][0][19] &
                                                                scalar_argdone[13][1][24] &
                                                                scalar_argdone[14][0][23] &
                                                                scalar_argdone[15][1][16] &
                                                                scalar_argdone[16][0][15] &
                                                                scalar_argdone[17][0][12] &
                                                                scalar_argdone[18][0][12] &
                                                                scalar_argdone[19][0][12] &
                                                                scalar_argdone[20][1][15] &
                                                                scalar_argdone[21][1][20] &
                                                                scalar_argdone[22][1][20] &
                                                                scalar_argdone[23][1][24] &
                                                                scalar_argdone[24][0][20] &
                                                                scalar_argdone[25][0][17] &
                                                                scalar_argdone[26][0][22] &
                                                                scalar_argdone[27][1][13] &
                                                                scalar_argdone[28][0][20] &
                                                                scalar_argdone[29][0][10] &
                                                                scalar_argdone[17][1][12];

    if (scalar_argdone_all_r[init_intra_neighbors_hls]) begin
        scalar_argdone[20][0][15] = 0;
        scalar_argdone[21][1][19] = 0;
        scalar_argdone[22][1][19] = 0;
        scalar_argdone[23][0][25] = 0;
        scalar_argdone[24][1][18] = 0;
        scalar_argdone[25][1][15] = 0;
        scalar_argdone[29][1][8] = 0;
        scalar_argdone[30][1][13] = 0;
        scalar_argdone[26][1][20] = 0;
        scalar_argdone[5][0][16] = 0;
        scalar_argdone[6][0][17] = 0;
        scalar_argdone[19][0][11] = 0;
        scalar_argdone[11][1][17] = 0;
        scalar_argdone[12][1][21] = 0;
        scalar_argdone[10][1][13] = 0;
        scalar_argdone[27][0][14] = 0;
        scalar_argdone[22][0][21] = 0;
        scalar_argdone[18][1][11] = 0;
        scalar_argdone[19][1][11] = 0;
        scalar_argdone[17][1][11] = 0;
        scalar_argdone[21][0][21] = 0;
        scalar_argdone[8][0][12] = 0;
        scalar_argdone[9][1][13] = 0;
        scalar_argdone[10][0][15] = 0;
        scalar_argdone[3][0][6] = 0;
        scalar_argdone[31][0][19] = 0;
        scalar_argdone[13][1][24] = 0;
        scalar_argdone[14][0][23] = 0;
        scalar_argdone[15][1][16] = 0;
        scalar_argdone[16][0][15] = 0;
        scalar_argdone[17][0][12] = 0;
        scalar_argdone[18][0][12] = 0;
        scalar_argdone[19][0][12] = 0;
        scalar_argdone[20][1][15] = 0;
        scalar_argdone[21][1][20] = 0;
        scalar_argdone[22][1][20] = 0;
        scalar_argdone[23][1][24] = 0;
        scalar_argdone[24][0][20] = 0;
        scalar_argdone[25][0][17] = 0;
        scalar_argdone[26][0][22] = 0;
        scalar_argdone[27][1][13] = 0;
        scalar_argdone[28][0][20] = 0;
        scalar_argdone[29][0][10] = 0;
        scalar_argdone[17][1][12] = 0;

        if (ap_arb_start_r[init_intra_neighbors_hls] & ~ap_running_r[init_intra_neighbors_hls]) begin
            ap_start[init_intra_neighbors_hls] = 1;
            ap_running[init_intra_neighbors_hls] = 1;
        end
        else if (ap_arb_ret_running_r[init_intra_neighbors_hls]) begin
            ap_arb_ret_running[init_intra_neighbors_hls] = 0;
            ap_arb_reload_running[init_intra_neighbors_hls] = 0;
            init_intra_neighbors_hls_ready = 1;
        end
    end

    if (ap_start_r[init_intra_neighbors_hls] & ap_ready_r[init_intra_neighbors_hls]) begin
        ap_start[init_intra_neighbors_hls] = 0;
    end

    if (ap_done_r[init_intra_neighbors_hls]) begin
        ap_running[init_intra_neighbors_hls] = 0;
    end
`endif
    //============================================================
    //init_intra_neighbors_chroma_hls       (f = 30)
    //============================================================
`ifdef enable_connect_init_intra_neighbors_chroma_hls
    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 0; a = 13;
    if (scalar_rdat_vld_r[20][0][13]) begin
        scalar_argdone [20][0][13] = 1;
    end
    scalar_adr    [20][0][13] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][13]) begin
        scalar_argVld [20][0][13] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [20][0][13] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 0; a = 19;
    if (scalar_rdat_vld_r[21][0][19]) begin
        scalar_argdone [21][0][19] = 1;
    end
    scalar_adr    [21][0][19] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][19]) begin
        scalar_argVld [21][0][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [21][0][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 0; a = 19;
    if (scalar_rdat_vld_r[22][0][19]) begin
        scalar_argdone [22][0][19] = 1;
    end
    scalar_adr    [22][0][19] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][19]) begin
        scalar_argVld [22][0][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [22][0][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 348) comb block-----//
    //s = 23; r = 0; a = 24;
    if (scalar_rdat_vld_r[23][0][24]) begin
        scalar_argdone [23][0][24] = 1;
    end
    scalar_adr    [23][0][24] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][24]) begin
        scalar_argVld [23][0][24] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [23][0][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 352) comb block-----//
    //s = 24; r = 0; a = 18;
    if (scalar_rdat_vld_r[24][0][18]) begin
        scalar_argdone [24][0][18] = 1;
    end
    scalar_adr    [24][0][18] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][18]) begin
        scalar_argVld [24][0][18] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [24][0][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 356) comb block-----//
    //s = 25; r = 0; a = 15;
    if (scalar_rdat_vld_r[25][0][15]) begin
        scalar_argdone [25][0][15] = 1;
    end
    scalar_adr    [25][0][15] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][15]) begin
        scalar_argVld [25][0][15] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [25][0][15] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 1; a = 7;
    if (scalar_rdat_vld_r[29][1][7]) begin
        scalar_argdone [29][1][7] = 1;
    end
    scalar_adr[29][1][7] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][7]) begin
        scalar_argVld[29][1][7] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[29][1][7] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 0; a = 13;
    if (scalar_rdat_vld_r[30][0][13]) begin
        scalar_argdone [30][0][13] = 1;
    end
    scalar_adr[30][0][13] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][13]) begin
        scalar_argVld[30][0][13] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[30][0][13] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 19;
    if (scalar_rdat_vld_r[26][1][19]) begin
        scalar_argdone [26][1][19] = 1;
    end
    scalar_adr[26][1][19] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][19]) begin
        scalar_argVld[26][1][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[26][1][19] = 1;
    end

    //------READ (scalar, global adr = 404) comb block-----//
    //s = 5; r = 1; a = 14;
    if (scalar_rdat_vld_r[5][1][14]) begin
        scalar_argdone [5][1][14] = 1;
    end
    scalar_adr[5][1][14] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][14]) begin
        scalar_argVld[5][1][14] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[5][1][14] = 1;
    end

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 1; a = 16;
    if (scalar_rdat_vld_r[6][1][16]) begin
        scalar_argdone [6][1][16] = 1;
    end
    scalar_adr[6][1][16] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][16]) begin
        scalar_argVld[6][1][16] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[6][1][16] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 1; a = 9;
    if (scalar_rdat_vld_r[19][1][9]) begin
        scalar_argdone [19][1][9] = 1;
    end
    scalar_adr[19][1][9] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][9]) begin
        scalar_argVld[19][1][9] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[19][1][9] = 1;
    end

    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 0; a = 18;
    if (scalar_rdat_vld_r[11][0][18]) begin
        scalar_argdone [11][0][18] = 1;
    end
    scalar_adr[11][0][18] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][18]) begin
        scalar_argVld[11][0][18] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[11][0][18] = 1;
    end

    //------READ (scalar, global adr = 176) comb block-----//
    //s = 12; r = 0; a = 22;
    if (scalar_rdat_vld_r[12][0][22]) begin
        scalar_argdone [12][0][22] = 1;
    end
    scalar_adr[12][0][22] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][22]) begin
        scalar_argVld[12][0][22] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[12][0][22] = 1;
    end

    //------READ (scalar, global adr = 424) comb block-----//
    //s = 10; r = 0; a = 14;
    if (scalar_rdat_vld_r[10][0][14]) begin
        scalar_argdone [10][0][14] = 1;
    end
    scalar_adr[10][0][14] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][14]) begin
        scalar_argVld[10][0][14] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[10][0][14] = 1;
    end

    //------READ (scalar, global adr = 1260) comb block-----//
    //s = 27; r = 0; a = 13;
    if (scalar_rdat_vld_r[27][0][13]) begin
        scalar_argdone [27][0][13] = 1;
    end
    scalar_adr[27][0][13] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][13]) begin
        scalar_argVld[27][0][13] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[27][0][13] = 1;
    end

    //------READ (scalar, global adr = 1508) comb block-----//
    //s = 25; r = 1; a = 14;
    if (scalar_rdat_vld_r[25][1][14]) begin
        scalar_argdone [25][1][14] = 1;
    end
    scalar_adr[25][1][14] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][14]) begin
        scalar_argVld[25][1][14] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[25][1][14] = 1;
    end

    //------READ (scalar, global adr = 1492) comb block-----//
    //s = 21; r = 1; a = 18;
    if (scalar_rdat_vld_r[21][1][18]) begin
        scalar_argdone [21][1][18] = 1;
    end
    scalar_adr[21][1][18] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][18]) begin
        scalar_argVld[21][1][18] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[21][1][18] = 1;
    end

    //------READ (scalar, global adr = 1496) comb block-----//
    //s = 22; r = 1; a = 18;
    if (scalar_rdat_vld_r[22][1][18]) begin
        scalar_argdone [22][1][18] = 1;
    end
    scalar_adr[22][1][18] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][18]) begin
        scalar_argVld[22][1][18] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[22][1][18] = 1;
    end

    //------READ (scalar, global adr = 1488) comb block-----//
    //s = 20; r = 1; a = 13;
    if (scalar_rdat_vld_r[20][1][13]) begin
        scalar_argdone [20][1][13] = 1;
    end
    scalar_adr[20][1][13] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][13]) begin
        scalar_argVld[20][1][13] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[20][1][13] = 1;
    end

    //------READ (scalar, global adr = 1504) comb block-----//
    //s = 24; r = 1; a = 17;
    if (scalar_rdat_vld_r[24][1][17]) begin
        scalar_argdone [24][1][17] = 1;
    end
    scalar_adr[24][1][17] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][17]) begin
        scalar_argVld[24][1][17] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[24][1][17] = 1;
    end

    //------WRITE (scalar, global adr = 684) comb block-----//
    //s = 11; r = 0; a = 4;
    if (scalar_argAck [11][0][4]) begin
        scalar_argVld [11][0][4] = 0;
        scalar_argAckdone [11][0][4] = 1;
    end
    if (init_intra_neighbors_chroma_hls_numIntraNeighbor_c_ap_vld_r) begin
        scalar_argVld [11][0][4] = 1;
        scalar_argAckdone [11][0][4] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][0][4] = init_intra_neighbors_chroma_hls_numIntraNeighbor_c_r;
    scalar_adr    [11][0][4] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 688) comb block-----//
    //s = 12; r = 0; a = 6;
    if (scalar_argAck [12][0][6]) begin
        scalar_argVld [12][0][6] = 0;
        scalar_argAckdone [12][0][6] = 1;
    end
    if (init_intra_neighbors_chroma_hls_totalUnits_c_ap_vld_r) begin
        scalar_argVld [12][0][6] = 1;
        scalar_argAckdone [12][0][6] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][6] = init_intra_neighbors_chroma_hls_totalUnits_c_r;
    scalar_adr    [12][0][6] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 692) comb block-----//
    //s = 13; r = 1; a = 6;
    if (scalar_argAck [13][1][6]) begin
        scalar_argVld [13][1][6] = 0;
        scalar_argAckdone [13][1][6] = 1;
    end
    if (init_intra_neighbors_chroma_hls_aboveUnits_c_ap_vld_r) begin
        scalar_argVld [13][1][6] = 1;
        scalar_argAckdone [13][1][6] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][6] = init_intra_neighbors_chroma_hls_aboveUnits_c_r;
    scalar_adr    [13][1][6] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 696) comb block-----//
    //s = 14; r = 1; a = 6;
    if (scalar_argAck [14][1][6]) begin
        scalar_argVld [14][1][6] = 0;
        scalar_argAckdone [14][1][6] = 1;
    end
    if (init_intra_neighbors_chroma_hls_leftUnits_c_ap_vld_r) begin
        scalar_argVld [14][1][6] = 1;
        scalar_argAckdone [14][1][6] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][6] = init_intra_neighbors_chroma_hls_leftUnits_c_r;
    scalar_adr    [14][1][6] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 700) comb block-----//
    //s = 15; r = 1; a = 4;
    if (scalar_argAck [15][1][4]) begin
        scalar_argVld [15][1][4] = 0;
        scalar_argAckdone [15][1][4] = 1;
    end
    if (init_intra_neighbors_chroma_hls_unitWidth_c_ap_vld_r) begin
        scalar_argVld [15][1][4] = 1;
        scalar_argAckdone [15][1][4] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][4] = init_intra_neighbors_chroma_hls_unitWidth_c_r;
    scalar_adr    [15][1][4] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 704) comb block-----//
    //s = 16; r = 1; a = 2;
    if (scalar_argAck [16][1][2]) begin
        scalar_argVld [16][1][2] = 0;
        scalar_argAckdone [16][1][2] = 1;
    end
    if (init_intra_neighbors_chroma_hls_unitHeight_c_ap_vld_r) begin
        scalar_argVld [16][1][2] = 1;
        scalar_argAckdone [16][1][2] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][1][2] = init_intra_neighbors_chroma_hls_unitHeight_c_r;
    scalar_adr    [16][1][2] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 708) comb block-----//
    //s = 17; r = 0; a = 3;
    if (scalar_argAck [17][0][3]) begin
        scalar_argVld [17][0][3] = 0;
        scalar_argAckdone [17][0][3] = 1;
    end
    if (init_intra_neighbors_chroma_hls_log2TrSize_c_ap_vld_r) begin
        scalar_argVld [17][0][3] = 1;
        scalar_argAckdone [17][0][3] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][0][3] = init_intra_neighbors_chroma_hls_log2TrSize_c_r;
    scalar_adr    [17][0][3] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 712) comb block-----//
    //s = 18; r = 1; a = 10;
    if (scalar_rdat_vld_r[18][1][10]) begin
        scalar_argdone [18][1][10] = 1;
    end
    scalar_adr[18][1][10] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][10]) begin
        scalar_argVld[18][1][10] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[18][1][10] = 1;
    end

    //------READ (scalar, global adr = 712) comb block-----//
    //s = 19; r = 0; a = 10;
    if (scalar_rdat_vld_r[19][0][10]) begin
        scalar_argdone [19][0][10] = 1;
    end
    scalar_adr[19][0][10] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][10]) begin
        scalar_argVld[19][0][10] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[19][0][10] = 1;
    end

    //------READ (scalar, global adr = 712) comb block-----//
    //s = 20; r = 0; a = 14;
    if (scalar_rdat_vld_r[20][0][14]) begin
        scalar_argdone [20][0][14] = 1;
    end
    scalar_adr[20][0][14] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][14]) begin
        scalar_argVld[20][0][14] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[20][0][14] = 1;
    end

    //------WRITE (scalar, global adr = 712) comb block-----//
    //s = 18; r = 0; a = 3;
    if (scalar_argAck [18][0][3]) begin
        scalar_argVld [18][0][3] = 0;
        scalar_argAckdone [18][0][3] = 1;
    end
    if (init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_ap_vld_r) begin
        scalar_argVld [18][0][3] = 1;
        scalar_argAckdone [18][0][3] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][0][3] = init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_r;
    scalar_adr    [18][0][3] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 712) comb block-----//
    //s = 19; r = 0; a = 3;
    if (scalar_argAck [19][0][3]) begin
        scalar_argVld [19][0][3] = 0;
        scalar_argAckdone [19][0][3] = 1;
    end
    if (init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_ap_vld_r) begin
        scalar_argVld [19][0][3] = 1;
        scalar_argAckdone [19][0][3] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][0][3] = init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_r;
    scalar_adr    [19][0][3] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 712) comb block-----//
    //s = 20; r = 0; a = 7;
    if (scalar_argAck [20][0][7]) begin
        scalar_argVld [20][0][7] = 0;
        scalar_argAckdone [20][0][7] = 1;
    end
    if (init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_ap_vld_r) begin
        scalar_argVld [20][0][7] = 1;
        scalar_argAckdone [20][0][7] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][7] = init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_r;
    scalar_adr    [20][0][7] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 1; a = 4;
    if (scalar_rdat_vld_r[3][1][4]) begin
        scalar_argdone [3][1][4] = 1;
    end
    scalar_adr[3][1][4] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][4]) begin
        scalar_argVld[3][1][4] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[3][1][4] = 1;
    end

    //------READ (scalar, global adr = 1276) comb block-----//
    //s = 31; r = 1; a = 17;
    if (scalar_rdat_vld_r[31][1][17]) begin
        scalar_argdone [31][1][17] = 1;
    end
    scalar_adr[31][1][17] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][17]) begin
        scalar_argVld[31][1][17] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[31][1][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 180) comb block-----//
    //s = 13; r = 0; a = 25;
    if (scalar_rdat_vld_r[13][0][25]) begin
        scalar_argdone [13][0][25] = 1;
    end
    scalar_adr    [13][0][25] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][25]) begin
        scalar_argVld [13][0][25] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [13][0][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 184) comb block-----//
    //s = 14; r = 1; a = 21;
    if (scalar_rdat_vld_r[14][1][21]) begin
        scalar_argdone [14][1][21] = 1;
    end
    scalar_adr    [14][1][21] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][21]) begin
        scalar_argVld [14][1][21] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [14][1][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 188) comb block-----//
    //s = 15; r = 0; a = 17;
    if (scalar_rdat_vld_r[15][0][17]) begin
        scalar_argdone [15][0][17] = 1;
    end
    scalar_adr    [15][0][17] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][17]) begin
        scalar_argVld [15][0][17] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [15][0][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 192) comb block-----//
    //s = 16; r = 1; a = 14;
    if (scalar_rdat_vld_r[16][1][14]) begin
        scalar_argdone [16][1][14] = 1;
    end
    scalar_adr    [16][1][14] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][14]) begin
        scalar_argVld [16][1][14] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [16][1][14] = 1;
    end

    //------READ (scalar, complete partition, global adr = 196) comb block-----//
    //s = 17; r = 1; a = 10;
    if (scalar_rdat_vld_r[17][1][10]) begin
        scalar_argdone [17][1][10] = 1;
    end
    scalar_adr    [17][1][10] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][10]) begin
        scalar_argVld [17][1][10] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [17][1][10] = 1;
    end

    //------READ (scalar, complete partition, global adr = 200) comb block-----//
    //s = 18; r = 0; a = 11;
    if (scalar_rdat_vld_r[18][0][11]) begin
        scalar_argdone [18][0][11] = 1;
    end
    scalar_adr    [18][0][11] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][11]) begin
        scalar_argVld [18][0][11] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [18][0][11] = 1;
    end

    //------READ (scalar, complete partition, global adr = 204) comb block-----//
    //s = 19; r = 1; a = 10;
    if (scalar_rdat_vld_r[19][1][10]) begin
        scalar_argdone [19][1][10] = 1;
    end
    scalar_adr    [19][1][10] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][10]) begin
        scalar_argVld [19][1][10] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [19][1][10] = 1;
    end

    //------READ (scalar, complete partition, global adr = 208) comb block-----//
    //s = 20; r = 1; a = 14;
    if (scalar_rdat_vld_r[20][1][14]) begin
        scalar_argdone [20][1][14] = 1;
    end
    scalar_adr    [20][1][14] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][14]) begin
        scalar_argVld [20][1][14] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [20][1][14] = 1;
    end

    //------READ (scalar, complete partition, global adr = 212) comb block-----//
    //s = 21; r = 0; a = 20;
    if (scalar_rdat_vld_r[21][0][20]) begin
        scalar_argdone [21][0][20] = 1;
    end
    scalar_adr    [21][0][20] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][20]) begin
        scalar_argVld [21][0][20] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [21][0][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 216) comb block-----//
    //s = 22; r = 0; a = 20;
    if (scalar_rdat_vld_r[22][0][20]) begin
        scalar_argdone [22][0][20] = 1;
    end
    scalar_adr    [22][0][20] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][20]) begin
        scalar_argVld [22][0][20] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [22][0][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 220) comb block-----//
    //s = 23; r = 1; a = 23;
    if (scalar_rdat_vld_r[23][1][23]) begin
        scalar_argdone [23][1][23] = 1;
    end
    scalar_adr    [23][1][23] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][23]) begin
        scalar_argVld [23][1][23] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [23][1][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 224) comb block-----//
    //s = 24; r = 0; a = 19;
    if (scalar_rdat_vld_r[24][0][19]) begin
        scalar_argdone [24][0][19] = 1;
    end
    scalar_adr    [24][0][19] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][19]) begin
        scalar_argVld [24][0][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [24][0][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 228) comb block-----//
    //s = 25; r = 0; a = 16;
    if (scalar_rdat_vld_r[25][0][16]) begin
        scalar_argdone [25][0][16] = 1;
    end
    scalar_adr    [25][0][16] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][16]) begin
        scalar_argVld [25][0][16] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [25][0][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 232) comb block-----//
    //s = 26; r = 0; a = 21;
    if (scalar_rdat_vld_r[26][0][21]) begin
        scalar_argdone [26][0][21] = 1;
    end
    scalar_adr    [26][0][21] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][21]) begin
        scalar_argVld [26][0][21] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [26][0][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 236) comb block-----//
    //s = 27; r = 1; a = 12;
    if (scalar_rdat_vld_r[27][1][12]) begin
        scalar_argdone [27][1][12] = 1;
    end
    scalar_adr    [27][1][12] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][12]) begin
        scalar_argVld [27][1][12] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [27][1][12] = 1;
    end

    //------READ (scalar, complete partition, global adr = 240) comb block-----//
    //s = 28; r = 1; a = 19;
    if (scalar_rdat_vld_r[28][1][19]) begin
        scalar_argdone [28][1][19] = 1;
    end
    scalar_adr    [28][1][19] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][19]) begin
        scalar_argVld [28][1][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [28][1][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 244) comb block-----//
    //s = 29; r = 0; a = 9;
    if (scalar_rdat_vld_r[29][0][9]) begin
        scalar_argdone [29][0][9] = 1;
    end
    scalar_adr    [29][0][9] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][9]) begin
        scalar_argVld [29][0][9] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [29][0][9] = 1;
    end

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 0; a = 11;
    if (scalar_rdat_vld_r[17][0][11]) begin
        scalar_argdone [17][0][11] = 1;
    end
    scalar_adr[17][0][11] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][11]) begin
        scalar_argVld[17][0][11] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[17][0][11] = 1;
    end

    if (ap_arb_ret[init_intra_neighbors_chroma_hls] & ~ap_arb_ret_r[init_intra_neighbors_chroma_hls]) begin
        ap_arb_ret_running[init_intra_neighbors_chroma_hls] = 1;
        init_intra_neighbors_chroma_hls_ready = 0;
    end

    scalar_argAckdone_all[init_intra_neighbors_chroma_hls] = scalar_argAckdone[11][0][4] &
                                                scalar_argAckdone[12][0][6] &
                                                scalar_argAckdone[13][1][6] &
                                                scalar_argAckdone[14][1][6] &
                                                scalar_argAckdone[15][1][4] &
                                                scalar_argAckdone[16][1][2] &
                                                scalar_argAckdone[17][0][3] &
                                                scalar_argAckdone[18][0][3] &
                                                scalar_argAckdone[19][0][3] &
                                                scalar_argAckdone[20][0][7];
    if (ap_arb_ret_running[init_intra_neighbors_chroma_hls] & scalar_argAckdone_all[init_intra_neighbors_chroma_hls] &~ ap_arb_reload_running_r[init_intra_neighbors_chroma_hls]) begin
        ap_arb_reload[init_intra_neighbors_chroma_hls] = 1;
        ap_arb_reload_running[init_intra_neighbors_chroma_hls] = 1;
    end

    if (ap_arb_start[init_intra_neighbors_chroma_hls] &~ ap_arb_start_r[init_intra_neighbors_chroma_hls]) begin
        ap_arb_start_running[init_intra_neighbors_chroma_hls] = 1;
    end

    if (ap_arb_start_running[init_intra_neighbors_chroma_hls] & ~scalar_writing_1508& ~scalar_writing_1492& ~scalar_writing_1496& ~scalar_writing_1488& ~scalar_writing_1504& ~scalar_writing_712& ~scalar_writing_180& ~scalar_writing_184& ~scalar_writing_188& ~scalar_writing_192& ~scalar_writing_196& ~scalar_writing_200& ~scalar_writing_204& ~scalar_writing_208& ~scalar_writing_212& ~scalar_writing_216& ~scalar_writing_220& ~scalar_writing_224& ~scalar_writing_228& ~scalar_writing_232& ~scalar_writing_236& ~scalar_writing_240& ~scalar_writing_244) begin
        ap_arb_start_running[init_intra_neighbors_chroma_hls] = 0;
        ap_arb_reload[init_intra_neighbors_chroma_hls] = 1;
    end

    scalar_argdone_all[init_intra_neighbors_chroma_hls] = scalar_argdone[20][0][13] &
                                                                scalar_argdone[21][0][19] &
                                                                scalar_argdone[22][0][19] &
                                                                scalar_argdone[23][0][24] &
                                                                scalar_argdone[24][0][18] &
                                                                scalar_argdone[25][0][15] &
                                                                scalar_argdone[29][1][7] &
                                                                scalar_argdone[30][0][13] &
                                                                scalar_argdone[26][1][19] &
                                                                scalar_argdone[5][1][14] &
                                                                scalar_argdone[6][1][16] &
                                                                scalar_argdone[19][1][9] &
                                                                scalar_argdone[11][0][18] &
                                                                scalar_argdone[12][0][22] &
                                                                scalar_argdone[10][0][14] &
                                                                scalar_argdone[27][0][13] &
                                                                scalar_argdone[25][1][14] &
                                                                scalar_argdone[21][1][18] &
                                                                scalar_argdone[22][1][18] &
                                                                scalar_argdone[20][1][13] &
                                                                scalar_argdone[24][1][17] &
                                                                scalar_argdone[18][1][10] &
                                                                scalar_argdone[19][0][10] &
                                                                scalar_argdone[20][0][14] &
                                                                scalar_argdone[3][1][4] &
                                                                scalar_argdone[31][1][17] &
                                                                scalar_argdone[13][0][25] &
                                                                scalar_argdone[14][1][21] &
                                                                scalar_argdone[15][0][17] &
                                                                scalar_argdone[16][1][14] &
                                                                scalar_argdone[17][1][10] &
                                                                scalar_argdone[18][0][11] &
                                                                scalar_argdone[19][1][10] &
                                                                scalar_argdone[20][1][14] &
                                                                scalar_argdone[21][0][20] &
                                                                scalar_argdone[22][0][20] &
                                                                scalar_argdone[23][1][23] &
                                                                scalar_argdone[24][0][19] &
                                                                scalar_argdone[25][0][16] &
                                                                scalar_argdone[26][0][21] &
                                                                scalar_argdone[27][1][12] &
                                                                scalar_argdone[28][1][19] &
                                                                scalar_argdone[29][0][9] &
                                                                scalar_argdone[17][0][11];

    if (scalar_argdone_all_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argdone[20][0][13] = 0;
        scalar_argdone[21][0][19] = 0;
        scalar_argdone[22][0][19] = 0;
        scalar_argdone[23][0][24] = 0;
        scalar_argdone[24][0][18] = 0;
        scalar_argdone[25][0][15] = 0;
        scalar_argdone[29][1][7] = 0;
        scalar_argdone[30][0][13] = 0;
        scalar_argdone[26][1][19] = 0;
        scalar_argdone[5][1][14] = 0;
        scalar_argdone[6][1][16] = 0;
        scalar_argdone[19][1][9] = 0;
        scalar_argdone[11][0][18] = 0;
        scalar_argdone[12][0][22] = 0;
        scalar_argdone[10][0][14] = 0;
        scalar_argdone[27][0][13] = 0;
        scalar_argdone[25][1][14] = 0;
        scalar_argdone[21][1][18] = 0;
        scalar_argdone[22][1][18] = 0;
        scalar_argdone[20][1][13] = 0;
        scalar_argdone[24][1][17] = 0;
        scalar_argdone[18][1][10] = 0;
        scalar_argdone[19][0][10] = 0;
        scalar_argdone[20][0][14] = 0;
        scalar_argdone[3][1][4] = 0;
        scalar_argdone[31][1][17] = 0;
        scalar_argdone[13][0][25] = 0;
        scalar_argdone[14][1][21] = 0;
        scalar_argdone[15][0][17] = 0;
        scalar_argdone[16][1][14] = 0;
        scalar_argdone[17][1][10] = 0;
        scalar_argdone[18][0][11] = 0;
        scalar_argdone[19][1][10] = 0;
        scalar_argdone[20][1][14] = 0;
        scalar_argdone[21][0][20] = 0;
        scalar_argdone[22][0][20] = 0;
        scalar_argdone[23][1][23] = 0;
        scalar_argdone[24][0][19] = 0;
        scalar_argdone[25][0][16] = 0;
        scalar_argdone[26][0][21] = 0;
        scalar_argdone[27][1][12] = 0;
        scalar_argdone[28][1][19] = 0;
        scalar_argdone[29][0][9] = 0;
        scalar_argdone[17][0][11] = 0;

        if (ap_arb_start_r[init_intra_neighbors_chroma_hls] & ~ap_running_r[init_intra_neighbors_chroma_hls]) begin
            ap_start[init_intra_neighbors_chroma_hls] = 1;
            ap_running[init_intra_neighbors_chroma_hls] = 1;
        end
        else if (ap_arb_ret_running_r[init_intra_neighbors_chroma_hls]) begin
            ap_arb_ret_running[init_intra_neighbors_chroma_hls] = 0;
            ap_arb_reload_running[init_intra_neighbors_chroma_hls] = 0;
            init_intra_neighbors_chroma_hls_ready = 1;
        end
    end

    if (ap_start_r[init_intra_neighbors_chroma_hls] & ap_ready_r[init_intra_neighbors_chroma_hls]) begin
        ap_start[init_intra_neighbors_chroma_hls] = 0;
    end

    if (ap_done_r[init_intra_neighbors_chroma_hls]) begin
        ap_running[init_intra_neighbors_chroma_hls] = 0;
    end
`endif
    //============================================================
    //ff_hevc_set_neighbour_available_hls       (f = 31)
    //============================================================
`ifdef enable_connect_ff_hevc_set_neighbour_available_hls
    //------WRITE (scalar, global adr = 580) comb block-----//
    //s = 17; r = 0; a = 0;
    if (scalar_argAck [17][0][0]) begin
        scalar_argVld [17][0][0] = 0;
        scalar_argAckdone [17][0][0] = 1;
    end
    if (ff_hevc_set_neighbour_available_hls_cand_up_ap_vld_r) begin
        scalar_argVld [17][0][0] = 1;
        scalar_argAckdone [17][0][0] = 0;
        ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][0][0] = ff_hevc_set_neighbour_available_hls_cand_up_r;
    scalar_adr    [17][0][0] = {ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 584) comb block-----//
    //s = 18; r = 0; a = 0;
    if (scalar_argAck [18][0][0]) begin
        scalar_argVld [18][0][0] = 0;
        scalar_argAckdone [18][0][0] = 1;
    end
    if (ff_hevc_set_neighbour_available_hls_cand_left_ap_vld_r) begin
        scalar_argVld [18][0][0] = 1;
        scalar_argAckdone [18][0][0] = 0;
        ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][0][0] = ff_hevc_set_neighbour_available_hls_cand_left_r;
    scalar_adr    [18][0][0] = {ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 588) comb block-----//
    //s = 19; r = 0; a = 0;
    if (scalar_argAck [19][0][0]) begin
        scalar_argVld [19][0][0] = 0;
        scalar_argAckdone [19][0][0] = 1;
    end
    if (ff_hevc_set_neighbour_available_hls_cand_up_left_ap_vld_r) begin
        scalar_argVld [19][0][0] = 1;
        scalar_argAckdone [19][0][0] = 0;
        ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][0][0] = ff_hevc_set_neighbour_available_hls_cand_up_left_r;
    scalar_adr    [19][0][0] = {ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 592) comb block-----//
    //s = 20; r = 0; a = 0;
    if (scalar_argAck [20][0][0]) begin
        scalar_argVld [20][0][0] = 0;
        scalar_argAckdone [20][0][0] = 1;
    end
    if (ff_hevc_set_neighbour_available_hls_cand_up_right_sap_ap_vld_r) begin
        scalar_argVld [20][0][0] = 1;
        scalar_argAckdone [20][0][0] = 0;
        ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][0] = ff_hevc_set_neighbour_available_hls_cand_up_right_sap_r;
    scalar_adr    [20][0][0] = {ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 596) comb block-----//
    //s = 21; r = 0; a = 0;
    if (scalar_argAck [21][0][0]) begin
        scalar_argVld [21][0][0] = 0;
        scalar_argAckdone [21][0][0] = 1;
    end
    if (ff_hevc_set_neighbour_available_hls_cand_up_right_ap_vld_r) begin
        scalar_argVld [21][0][0] = 1;
        scalar_argAckdone [21][0][0] = 0;
        ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][0] = ff_hevc_set_neighbour_available_hls_cand_up_right_r;
    scalar_adr    [21][0][0] = {ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 600) comb block-----//
    //s = 22; r = 0; a = 0;
    if (scalar_argAck [22][0][0]) begin
        scalar_argVld [22][0][0] = 0;
        scalar_argAckdone [22][0][0] = 1;
    end
    if (ff_hevc_set_neighbour_available_hls_cand_bottom_left_ap_vld_r) begin
        scalar_argVld [22][0][0] = 1;
        scalar_argAckdone [22][0][0] = 0;
        ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][0] = ff_hevc_set_neighbour_available_hls_cand_bottom_left_r;
    scalar_adr    [22][0][0] = {ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 6;
    if (scalar_rdat_vld_r[26][0][6]) begin
        scalar_argdone [26][0][6] = 1;
    end
    scalar_adr[26][0][6] = {ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][6]) begin
        scalar_argVld[26][0][6] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_neighbour_available_hls]) begin
        scalar_argVld[26][0][6] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 0; a = 9;
    if (scalar_rdat_vld_r[23][0][9]) begin
        scalar_argdone [23][0][9] = 1;
    end
    scalar_adr[23][0][9] = {ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][9]) begin
        scalar_argVld[23][0][9] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_neighbour_available_hls]) begin
        scalar_argVld[23][0][9] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 0; a = 7;
    if (scalar_rdat_vld_r[24][0][7]) begin
        scalar_argdone [24][0][7] = 1;
    end
    scalar_adr[24][0][7] = {ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][7]) begin
        scalar_argVld[24][0][7] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_neighbour_available_hls]) begin
        scalar_argVld[24][0][7] = 1;
    end

    //------READ (scalar, global adr = 612) comb block-----//
    //s = 25; r = 1; a = 5;
    if (scalar_rdat_vld_r[25][1][5]) begin
        scalar_argdone [25][1][5] = 1;
    end
    scalar_adr[25][1][5] = {ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][5]) begin
        scalar_argVld[25][1][5] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_neighbour_available_hls]) begin
        scalar_argVld[25][1][5] = 1;
    end

    //------READ (scalar, global adr = 616) comb block-----//
    //s = 26; r = 1; a = 5;
    if (scalar_rdat_vld_r[26][1][5]) begin
        scalar_argdone [26][1][5] = 1;
    end
    scalar_adr[26][1][5] = {ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][5]) begin
        scalar_argVld[26][1][5] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_neighbour_available_hls]) begin
        scalar_argVld[26][1][5] = 1;
    end

    //------READ (scalar, global adr = 620) comb block-----//
    //s = 27; r = 0; a = 4;
    if (scalar_rdat_vld_r[27][0][4]) begin
        scalar_argdone [27][0][4] = 1;
    end
    scalar_adr[27][0][4] = {ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][4]) begin
        scalar_argVld[27][0][4] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_neighbour_available_hls]) begin
        scalar_argVld[27][0][4] = 1;
    end

    //------READ (scalar, global adr = 624) comb block-----//
    //s = 28; r = 1; a = 6;
    if (scalar_rdat_vld_r[28][1][6]) begin
        scalar_argdone [28][1][6] = 1;
    end
    scalar_adr[28][1][6] = {ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][6]) begin
        scalar_argVld[28][1][6] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_neighbour_available_hls]) begin
        scalar_argVld[28][1][6] = 1;
    end

    //------WRITE (scalar, global adr = 160) comb block-----//
    //s = 8; r = 0; a = 0;
    if (scalar_argAck [8][0][0]) begin
        scalar_argVld [8][0][0] = 0;
        scalar_argAckdone [8][0][0] = 1;
    end
    if (ff_hevc_set_neighbour_available_hls_nPbW_ap_vld_r) begin
        scalar_argVld [8][0][0] = 1;
        scalar_argAckdone [8][0][0] = 0;
        ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][0] = ff_hevc_set_neighbour_available_hls_nPbW_r;
    scalar_adr    [8][0][0] = {ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 164) comb block-----//
    //s = 9; r = 0; a = 0;
    if (scalar_argAck [9][0][0]) begin
        scalar_argVld [9][0][0] = 0;
        scalar_argAckdone [9][0][0] = 1;
    end
    if (ff_hevc_set_neighbour_available_hls_nPbH_ap_vld_r) begin
        scalar_argVld [9][0][0] = 1;
        scalar_argAckdone [9][0][0] = 0;
        ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][0] = ff_hevc_set_neighbour_available_hls_nPbH_r;
    scalar_adr    [9][0][0] = {ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (ap_arb_ret[ff_hevc_set_neighbour_available_hls] & ~ap_arb_ret_r[ff_hevc_set_neighbour_available_hls]) begin
        ap_arb_ret_running[ff_hevc_set_neighbour_available_hls] = 1;
        ff_hevc_set_neighbour_available_hls_ready = 0;
    end

    scalar_argAckdone_all[ff_hevc_set_neighbour_available_hls] = scalar_argAckdone[17][0][0] &
                                                scalar_argAckdone[18][0][0] &
                                                scalar_argAckdone[19][0][0] &
                                                scalar_argAckdone[20][0][0] &
                                                scalar_argAckdone[21][0][0] &
                                                scalar_argAckdone[22][0][0] &
                                                scalar_argAckdone[8][0][0] &
                                                scalar_argAckdone[9][0][0];
    if (ap_arb_ret_running[ff_hevc_set_neighbour_available_hls] & scalar_argAckdone_all[ff_hevc_set_neighbour_available_hls] &~ ap_arb_reload_running_r[ff_hevc_set_neighbour_available_hls]) begin
        ap_arb_reload[ff_hevc_set_neighbour_available_hls] = 1;
        ap_arb_reload_running[ff_hevc_set_neighbour_available_hls] = 1;
    end

    if (ap_arb_start[ff_hevc_set_neighbour_available_hls] &~ ap_arb_start_r[ff_hevc_set_neighbour_available_hls]) begin
        ap_arb_start_running[ff_hevc_set_neighbour_available_hls] = 1;
    end

    if (ap_arb_start_running[ff_hevc_set_neighbour_available_hls] & ~scalar_writing_604& ~scalar_writing_608& ~scalar_writing_612& ~scalar_writing_616& ~scalar_writing_620& ~scalar_writing_624) begin
        ap_arb_start_running[ff_hevc_set_neighbour_available_hls] = 0;
        ap_arb_reload[ff_hevc_set_neighbour_available_hls] = 1;
    end

    scalar_argdone_all[ff_hevc_set_neighbour_available_hls] = scalar_argdone[26][0][6] &
                                                                scalar_argdone[23][0][9] &
                                                                scalar_argdone[24][0][7] &
                                                                scalar_argdone[25][1][5] &
                                                                scalar_argdone[26][1][5] &
                                                                scalar_argdone[27][0][4] &
                                                                scalar_argdone[28][1][6];

    if (scalar_argdone_all_r[ff_hevc_set_neighbour_available_hls]) begin
        scalar_argdone[26][0][6] = 0;
        scalar_argdone[23][0][9] = 0;
        scalar_argdone[24][0][7] = 0;
        scalar_argdone[25][1][5] = 0;
        scalar_argdone[26][1][5] = 0;
        scalar_argdone[27][0][4] = 0;
        scalar_argdone[28][1][6] = 0;

        if (ap_arb_start_r[ff_hevc_set_neighbour_available_hls] & ~ap_running_r[ff_hevc_set_neighbour_available_hls]) begin
            ap_start[ff_hevc_set_neighbour_available_hls] = 1;
            ap_running[ff_hevc_set_neighbour_available_hls] = 1;
        end
        else if (ap_arb_ret_running_r[ff_hevc_set_neighbour_available_hls]) begin
            ap_arb_ret_running[ff_hevc_set_neighbour_available_hls] = 0;
            ap_arb_reload_running[ff_hevc_set_neighbour_available_hls] = 0;
            ff_hevc_set_neighbour_available_hls_ready = 1;
        end
    end

    if (ap_start_r[ff_hevc_set_neighbour_available_hls] & ap_ready_r[ff_hevc_set_neighbour_available_hls]) begin
        ap_start[ff_hevc_set_neighbour_available_hls] = 0;
    end

    if (ap_done_r[ff_hevc_set_neighbour_available_hls]) begin
        ap_running[ff_hevc_set_neighbour_available_hls] = 0;
    end
`endif
end

always_comb begin
    scalar_writing_0          = ~scalar_argAckdone[0][0][0]    /*hevc_find_frame_end_hls.state64_0_o*/  |
                                ~scalar_argAckdone[1][0][0]    /*hevc_find_frame_end_hls.state64_1_o*/;

    scalar_writing_8          = ~scalar_argAckdone[2][0][0]    /*hevc_find_frame_end_hls.frame_start_found_o*/;

    scalar_writing_16         = ~scalar_argAckdone[4][0][2]    /*hls_transform_tree_hls.cbf_data*/  |
                                ~scalar_argAckdone[4][1][2]    /*hls_transform_tree_hls_dup1.cbf_data*/  |
                                ~scalar_argAckdone[4][0][3]    /*hls_transform_tree_hls_dup2.cbf_data*/  |
                                ~scalar_argAckdone[4][1][3]    /*hls_transform_tree_hls_dup3.cbf_data*/;

    scalar_writing_20         = ~scalar_argAckdone[5][0][3]    /*hls_transform_tree_hls.cbf_luma_o*/  |
                                ~scalar_argAckdone[5][1][3]    /*hls_transform_tree_hls_dup1.cbf_luma_o*/  |
                                ~scalar_argAckdone[5][0][4]    /*hls_transform_tree_hls_dup2.cbf_luma_o*/  |
                                ~scalar_argAckdone[5][1][4]    /*hls_transform_tree_hls_dup3.cbf_luma_o*/;

    scalar_writing_28         = ~scalar_argAckdone[7][0][2]    /*hls_coding_unit_hls.pcm_flag_o*/  |
                                ~scalar_argAckdone[7][1][3]    /*hls_coding_unit_hls_dup1.pcm_flag_o*/  |
                                ~scalar_argAckdone[7][0][5]    /*hls_coding_unit_hls_dup2.pcm_flag_o*/  |
                                ~scalar_argAckdone[7][1][6]    /*hls_coding_unit_hls_dup3.pcm_flag_o*/;

    scalar_writing_32         = ~scalar_argAckdone[8][1][0]    /*hls_coding_unit_hls.cb_size_o*/  |
                                ~scalar_argAckdone[8][1][1]    /*hls_coding_unit_hls_dup1.cb_size_o*/  |
                                ~scalar_argAckdone[8][1][2]    /*hls_coding_unit_hls_dup2.cb_size_o*/  |
                                ~scalar_argAckdone[8][1][3]    /*hls_coding_unit_hls_dup3.cb_size_o*/;

    scalar_writing_40         = ~scalar_argAckdone[10][1][0]    /*hls_coding_quadtree_hls.qp_block_mask_o*/  |
                                ~scalar_argAckdone[10][1][1]    /*hls_coding_quadtree_hls_dup1.qp_block_mask_o*/  |
                                ~scalar_argAckdone[10][1][2]    /*hls_coding_quadtree_hls_dup2.qp_block_mask_o*/  |
                                ~scalar_argAckdone[10][1][3]    /*hls_coding_quadtree_hls_dup3.qp_block_mask_o*/;

    scalar_writing_44         = ~scalar_argAckdone[11][0][2]    /*hls_coding_unit_hls.idx_o*/  |
                                ~scalar_argAckdone[11][1][2]    /*hls_coding_unit_hls_dup1.idx_o*/  |
                                ~scalar_argAckdone[11][0][3]    /*hls_coding_unit_hls_dup2.idx_o*/  |
                                ~scalar_argAckdone[11][1][3]    /*hls_coding_unit_hls_dup3.idx_o*/;

    scalar_writing_48         = ~scalar_argAckdone[12][0][4]    /*hls_transform_unit_ex_hls.scan_idx_o*/  |
                                ~scalar_argAckdone[12][1][4]    /*hls_transform_unit_ex_hls_dup1.scan_idx_o*/  |
                                ~scalar_argAckdone[12][0][5]    /*hls_transform_unit_ex_hls_dup2.scan_idx_o*/  |
                                ~scalar_argAckdone[12][1][5]    /*hls_transform_unit_ex_hls_dup3.scan_idx_o*/;

    scalar_writing_56         = ~scalar_argAckdone[14][1][4]    /*hls_transform_unit_ex_hls.log2_trafo_size_c_o*/  |
                                ~scalar_argAckdone[14][0][5]    /*hls_transform_unit_ex_hls_dup1.log2_trafo_size_c_o*/  |
                                ~scalar_argAckdone[14][1][5]    /*hls_transform_unit_ex_hls_dup2.log2_trafo_size_c_o*/  |
                                ~scalar_argAckdone[14][0][6]    /*hls_transform_unit_ex_hls_dup3.log2_trafo_size_c_o*/;

    scalar_writing_168        = ~scalar_argAckdone[10][0][6]    /*hls_transform_unit_ex_hls.log2_trafo_size*/  |
                                ~scalar_argAckdone[10][1][6]    /*hls_transform_unit_ex_hls_dup1.log2_trafo_size*/  |
                                ~scalar_argAckdone[10][0][7]    /*hls_transform_unit_ex_hls_dup2.log2_trafo_size*/  |
                                ~scalar_argAckdone[10][1][7]    /*hls_transform_unit_ex_hls_dup3.log2_trafo_size*/  |
                                ~scalar_argAckdone[10][0][4]    /*hls_transform_tree_hls.log2_trafo_size*/  |
                                ~scalar_argAckdone[10][1][4]    /*hls_transform_tree_hls_dup1.log2_trafo_size*/  |
                                ~scalar_argAckdone[10][0][5]    /*hls_transform_tree_hls_dup2.log2_trafo_size*/  |
                                ~scalar_argAckdone[10][1][5]    /*hls_transform_tree_hls_dup3.log2_trafo_size*/;

    scalar_writing_180        = ~scalar_argAckdone[13][0][0]    /*genPredCol_hls.predColBuf_0*/  |
                                ~scalar_argAckdone[13][0][7]    /*set_tab_mvf_pred_flag_hls.predColBuf_0_o*/;

    scalar_writing_184        = ~scalar_argAckdone[14][0][0]    /*genPredCol_hls.predColBuf_1*/  |
                                ~scalar_argAckdone[14][0][7]    /*set_tab_mvf_pred_flag_hls.predColBuf_1_o*/;

    scalar_writing_188        = ~scalar_argAckdone[15][0][0]    /*genPredCol_hls.predColBuf_2*/  |
                                ~scalar_argAckdone[15][0][5]    /*set_tab_mvf_pred_flag_hls.predColBuf_2_o*/;

    scalar_writing_192        = ~scalar_argAckdone[16][0][0]    /*genPredCol_hls.predColBuf_3*/  |
                                ~scalar_argAckdone[16][1][3]    /*set_tab_mvf_pred_flag_hls.predColBuf_3_o*/;

    scalar_writing_196        = ~scalar_argAckdone[17][1][0]    /*genPredCol_hls.predColBuf_4*/  |
                                ~scalar_argAckdone[17][1][3]    /*set_tab_mvf_pred_flag_hls.predColBuf_4_o*/;

    scalar_writing_200        = ~scalar_argAckdone[18][1][0]    /*genPredCol_hls.predColBuf_5*/  |
                                ~scalar_argAckdone[18][1][3]    /*set_tab_mvf_pred_flag_hls.predColBuf_5_o*/;

    scalar_writing_204        = ~scalar_argAckdone[19][1][0]    /*genPredCol_hls.predColBuf_6*/  |
                                ~scalar_argAckdone[19][1][3]    /*set_tab_mvf_pred_flag_hls.predColBuf_6_o*/;

    scalar_writing_208        = ~scalar_argAckdone[20][1][0]    /*genPredCol_hls.predColBuf_7*/  |
                                ~scalar_argAckdone[20][1][7]    /*set_tab_mvf_pred_flag_hls.predColBuf_7_o*/;

    scalar_writing_212        = ~scalar_argAckdone[21][1][0]    /*genPredCol_hls.predColBuf_8*/  |
                                ~scalar_argAckdone[21][0][9]    /*set_tab_mvf_pred_flag_hls.predColBuf_8_o*/;

    scalar_writing_216        = ~scalar_argAckdone[22][1][0]    /*genPredCol_hls.predColBuf_9*/  |
                                ~scalar_argAckdone[22][0][9]    /*set_tab_mvf_pred_flag_hls.predColBuf_9_o*/;

    scalar_writing_220        = ~scalar_argAckdone[23][0][0]    /*genPredCol_hls.predColBuf_10*/  |
                                ~scalar_argAckdone[23][0][7]    /*set_tab_mvf_pred_flag_hls.predColBuf_10_o*/;

    scalar_writing_224        = ~scalar_argAckdone[24][0][0]    /*genPredCol_hls.predColBuf_11*/  |
                                ~scalar_argAckdone[24][0][5]    /*set_tab_mvf_pred_flag_hls.predColBuf_11_o*/;

    scalar_writing_228        = ~scalar_argAckdone[25][0][0]    /*genPredCol_hls.predColBuf_12*/  |
                                ~scalar_argAckdone[25][0][5]    /*set_tab_mvf_pred_flag_hls.predColBuf_12_o*/;

    scalar_writing_232        = ~scalar_argAckdone[26][0][0]    /*genPredCol_hls.predColBuf_13*/  |
                                ~scalar_argAckdone[26][0][4]    /*set_tab_mvf_pred_flag_hls.predColBuf_13_o*/;

    scalar_writing_236        = ~scalar_argAckdone[27][0][0]    /*genPredCol_hls.predColBuf_14*/  |
                                ~scalar_argAckdone[27][0][3]    /*set_tab_mvf_pred_flag_hls.predColBuf_14_o*/;

    scalar_writing_240        = ~scalar_argAckdone[28][1][0]    /*genPredCol_hls.predColBuf_15*/  |
                                ~scalar_argAckdone[28][1][5]    /*set_tab_mvf_pred_flag_hls.predColBuf_15_o*/;

    scalar_writing_244        = ~scalar_argAckdone[29][0][0]    /*genPredCol_hls.predColBuf_16_o*/  |
                                ~scalar_argAckdone[29][0][3]    /*set_tab_mvf_pred_flag_hls.predColBuf_16_o*/;

    scalar_writing_292        = ~scalar_argAckdone[9][1][0]    /*hls_coding_quadtree_hls.split_cu_flag_o*/  |
                                ~scalar_argAckdone[9][0][1]    /*hls_coding_quadtree_hls_dup1.split_cu_flag_o*/  |
                                ~scalar_argAckdone[9][1][1]    /*hls_coding_quadtree_hls_dup2.split_cu_flag_o*/  |
                                ~scalar_argAckdone[9][0][2]    /*hls_coding_quadtree_hls_dup3.split_cu_flag_o*/;

    scalar_writing_296        = ~scalar_argAckdone[10][0][0]    /*hls_coding_quadtree_hls.more_data_o*/  |
                                ~scalar_argAckdone[10][0][1]    /*hls_coding_quadtree_hls_dup1.more_data_o*/  |
                                ~scalar_argAckdone[10][0][2]    /*hls_coding_quadtree_hls_dup2.more_data_o*/  |
                                ~scalar_argAckdone[10][0][3]    /*hls_coding_quadtree_hls_dup3.more_data_o*/;

    scalar_writing_300        = ~scalar_argAckdone[11][0][0]    /*hls_coding_quadtree_hls.x1_o*/  |
                                ~scalar_argAckdone[11][1][0]    /*hls_coding_quadtree_hls_dup1.x1_o*/  |
                                ~scalar_argAckdone[11][0][1]    /*hls_coding_quadtree_hls_dup2.x1_o*/  |
                                ~scalar_argAckdone[11][1][1]    /*hls_coding_quadtree_hls_dup3.x1_o*/;

    scalar_writing_304        = ~scalar_argAckdone[12][0][0]    /*hls_coding_quadtree_hls.y1_o*/  |
                                ~scalar_argAckdone[12][1][0]    /*hls_coding_quadtree_hls_dup1.y1_o*/  |
                                ~scalar_argAckdone[12][0][1]    /*hls_coding_quadtree_hls_dup2.y1_o*/  |
                                ~scalar_argAckdone[12][1][1]    /*hls_coding_quadtree_hls_dup3.y1_o*/;

    scalar_writing_308        = ~scalar_argAckdone[13][1][0]    /*hls_coding_quadtree_hls.cb_size_split_o*/  |
                                ~scalar_argAckdone[13][0][1]    /*hls_coding_quadtree_hls_dup1.cb_size_split_o*/  |
                                ~scalar_argAckdone[13][1][1]    /*hls_coding_quadtree_hls_dup2.cb_size_split_o*/  |
                                ~scalar_argAckdone[13][0][2]    /*hls_coding_quadtree_hls_dup3.cb_size_split_o*/;

    scalar_writing_312        = ~scalar_argAckdone[14][1][0]    /*hls_coding_quadtree_hls.log2_cb_size_minus_one_o*/  |
                                ~scalar_argAckdone[14][0][1]    /*hls_coding_quadtree_hls_dup1.log2_cb_size_minus_one_o*/  |
                                ~scalar_argAckdone[14][1][1]    /*hls_coding_quadtree_hls_dup2.log2_cb_size_minus_one_o*/  |
                                ~scalar_argAckdone[14][0][2]    /*hls_coding_quadtree_hls_dup3.log2_cb_size_minus_one_o*/;

    scalar_writing_316        = ~scalar_argAckdone[15][1][0]    /*hls_coding_quadtree_hls.cb_depth_plus_one_o*/  |
                                ~scalar_argAckdone[15][0][1]    /*hls_coding_quadtree_hls_dup1.cb_depth_plus_one_o*/  |
                                ~scalar_argAckdone[15][1][1]    /*hls_coding_quadtree_hls_dup2.cb_depth_plus_one_o*/  |
                                ~scalar_argAckdone[15][0][2]    /*hls_coding_quadtree_hls_dup3.cb_depth_plus_one_o*/;

    scalar_writing_464        = ~scalar_argAckdone[20][0][1]    /*hls_coding_quadtree_hls.depth*/  |
                                ~scalar_argAckdone[20][1][1]    /*hls_coding_quadtree_hls_dup1.depth*/  |
                                ~scalar_argAckdone[20][0][2]    /*hls_coding_quadtree_hls_dup2.depth*/  |
                                ~scalar_argAckdone[20][1][2]    /*hls_coding_quadtree_hls_dup3.depth*/;

    scalar_writing_468        = ~scalar_argAckdone[21][0][4]    /*hls_transform_unit_ex_hls.tu_cu_qp_delta*/  |
                                ~scalar_argAckdone[21][1][5]    /*hls_transform_unit_ex_hls_dup1.tu_cu_qp_delta*/  |
                                ~scalar_argAckdone[21][0][7]    /*hls_transform_unit_ex_hls_dup2.tu_cu_qp_delta*/  |
                                ~scalar_argAckdone[21][1][8]    /*hls_transform_unit_ex_hls_dup3.tu_cu_qp_delta*/  |
                                ~scalar_argAckdone[21][0][1]    /*hls_coding_quadtree_hls.tu_cu_qp_delta*/  |
                                ~scalar_argAckdone[21][1][1]    /*hls_coding_quadtree_hls_dup1.tu_cu_qp_delta*/  |
                                ~scalar_argAckdone[21][0][2]    /*hls_coding_quadtree_hls_dup2.tu_cu_qp_delta*/  |
                                ~scalar_argAckdone[21][1][2]    /*hls_coding_quadtree_hls_dup3.tu_cu_qp_delta*/;

    scalar_writing_472        = ~scalar_argAckdone[22][0][4]    /*hls_transform_unit_ex_hls.tu_is_cu_chroma_qp_offset_coded_o*/  |
                                ~scalar_argAckdone[22][1][5]    /*hls_transform_unit_ex_hls_dup1.tu_is_cu_chroma_qp_offset_coded_o*/  |
                                ~scalar_argAckdone[22][0][7]    /*hls_transform_unit_ex_hls_dup2.tu_is_cu_chroma_qp_offset_coded_o*/  |
                                ~scalar_argAckdone[22][1][8]    /*hls_transform_unit_ex_hls_dup3.tu_is_cu_chroma_qp_offset_coded_o*/  |
                                ~scalar_argAckdone[22][0][1]    /*hls_coding_quadtree_hls.tu_is_cu_chroma_qp_offset_coded*/  |
                                ~scalar_argAckdone[22][1][1]    /*hls_coding_quadtree_hls_dup1.tu_is_cu_chroma_qp_offset_coded*/  |
                                ~scalar_argAckdone[22][0][2]    /*hls_coding_quadtree_hls_dup2.tu_is_cu_chroma_qp_offset_coded*/  |
                                ~scalar_argAckdone[22][1][2]    /*hls_coding_quadtree_hls_dup3.tu_is_cu_chroma_qp_offset_coded*/;

    scalar_writing_476        = ~scalar_argAckdone[23][1][3]    /*hls_transform_unit_ex_hls.tu_is_cu_qp_delta_coded_o*/  |
                                ~scalar_argAckdone[23][1][4]    /*hls_transform_unit_ex_hls_dup1.tu_is_cu_qp_delta_coded_o*/  |
                                ~scalar_argAckdone[23][1][5]    /*hls_transform_unit_ex_hls_dup2.tu_is_cu_qp_delta_coded_o*/  |
                                ~scalar_argAckdone[23][1][6]    /*hls_transform_unit_ex_hls_dup3.tu_is_cu_qp_delta_coded_o*/  |
                                ~scalar_argAckdone[23][1][0]    /*hls_coding_quadtree_hls.tu_is_cu_qp_delta_coded*/  |
                                ~scalar_argAckdone[23][0][1]    /*hls_coding_quadtree_hls_dup1.tu_is_cu_qp_delta_coded*/  |
                                ~scalar_argAckdone[23][1][1]    /*hls_coding_quadtree_hls_dup2.tu_is_cu_qp_delta_coded*/  |
                                ~scalar_argAckdone[23][0][2]    /*hls_coding_quadtree_hls_dup3.tu_is_cu_qp_delta_coded*/;

    scalar_writing_484        = ~scalar_argAckdone[25][0][1]    /*hls_transform_tree_hls.tu_intra_pred_mode*/  |
                                ~scalar_argAckdone[25][1][1]    /*hls_transform_tree_hls_dup1.tu_intra_pred_mode*/  |
                                ~scalar_argAckdone[25][0][2]    /*hls_transform_tree_hls_dup2.tu_intra_pred_mode*/  |
                                ~scalar_argAckdone[25][1][2]    /*hls_transform_tree_hls_dup3.tu_intra_pred_mode*/;

    scalar_writing_488        = ~scalar_argAckdone[26][0][1]    /*hls_transform_tree_hls.tu_intra_pred_mode_c*/  |
                                ~scalar_argAckdone[26][1][1]    /*hls_transform_tree_hls_dup1.tu_intra_pred_mode_c*/  |
                                ~scalar_argAckdone[26][0][2]    /*hls_transform_tree_hls_dup2.tu_intra_pred_mode_c*/  |
                                ~scalar_argAckdone[26][1][2]    /*hls_transform_tree_hls_dup3.tu_intra_pred_mode_c*/;

    scalar_writing_508        = ~scalar_argAckdone[31][1][0]    /*intra_prediction_unit_ex_hls.pu_chroma_mode_c_0*/;

    scalar_writing_509        = ~scalar_argAckdone[31][0][1]    /*intra_prediction_unit_ex_hls.pu_chroma_mode_c_1*/;

    scalar_writing_510        = ~scalar_argAckdone[31][1][1]    /*intra_prediction_unit_ex_hls.pu_chroma_mode_c_2*/;

    scalar_writing_511        = ~scalar_argAckdone[31][0][2]    /*intra_prediction_unit_ex_hls.pu_chroma_mode_c_3*/;

    scalar_writing_512        = ~scalar_argAckdone[0][1][9]    /*intra_prediction_unit_ex_hls.pu_intra_pred_mode_0_o*/  |
                                ~scalar_argAckdone[0][1][0]    /*hls_coding_unit_hls.pu_intra_pred_mode_0*/  |
                                ~scalar_argAckdone[0][1][2]    /*hls_coding_unit_hls_dup1.pu_intra_pred_mode_0*/  |
                                ~scalar_argAckdone[0][1][4]    /*hls_coding_unit_hls_dup2.pu_intra_pred_mode_0*/  |
                                ~scalar_argAckdone[0][1][6]    /*hls_coding_unit_hls_dup3.pu_intra_pred_mode_0*/;

    scalar_writing_513        = ~scalar_argAckdone[0][0][10]    /*intra_prediction_unit_ex_hls.pu_intra_pred_mode_1_o*/  |
                                ~scalar_argAckdone[0][0][1]    /*hls_coding_unit_hls.pu_intra_pred_mode_1*/  |
                                ~scalar_argAckdone[0][0][3]    /*hls_coding_unit_hls_dup1.pu_intra_pred_mode_1*/  |
                                ~scalar_argAckdone[0][0][5]    /*hls_coding_unit_hls_dup2.pu_intra_pred_mode_1*/  |
                                ~scalar_argAckdone[0][0][7]    /*hls_coding_unit_hls_dup3.pu_intra_pred_mode_1*/;

    scalar_writing_514        = ~scalar_argAckdone[0][1][10]    /*intra_prediction_unit_ex_hls.pu_intra_pred_mode_2_o*/  |
                                ~scalar_argAckdone[0][1][1]    /*hls_coding_unit_hls.pu_intra_pred_mode_2*/  |
                                ~scalar_argAckdone[0][1][3]    /*hls_coding_unit_hls_dup1.pu_intra_pred_mode_2*/  |
                                ~scalar_argAckdone[0][1][5]    /*hls_coding_unit_hls_dup2.pu_intra_pred_mode_2*/  |
                                ~scalar_argAckdone[0][1][7]    /*hls_coding_unit_hls_dup3.pu_intra_pred_mode_2*/;

    scalar_writing_515        = ~scalar_argAckdone[0][0][11]    /*intra_prediction_unit_ex_hls.pu_intra_pred_mode_3_o*/  |
                                ~scalar_argAckdone[0][0][2]    /*hls_coding_unit_hls.pu_intra_pred_mode_3*/  |
                                ~scalar_argAckdone[0][0][4]    /*hls_coding_unit_hls_dup1.pu_intra_pred_mode_3*/  |
                                ~scalar_argAckdone[0][0][6]    /*hls_coding_unit_hls_dup2.pu_intra_pred_mode_3*/  |
                                ~scalar_argAckdone[0][0][8]    /*hls_coding_unit_hls_dup3.pu_intra_pred_mode_3*/;

    scalar_writing_516        = ~scalar_argAckdone[1][1][1]    /*intra_prediction_unit_ex_hls.pu_intra_pred_mode_c_0*/;

    scalar_writing_517        = ~scalar_argAckdone[1][0][2]    /*intra_prediction_unit_ex_hls.pu_intra_pred_mode_c_1*/;

    scalar_writing_518        = ~scalar_argAckdone[1][1][2]    /*intra_prediction_unit_ex_hls.pu_intra_pred_mode_c_2*/;

    scalar_writing_519        = ~scalar_argAckdone[1][0][3]    /*intra_prediction_unit_ex_hls.pu_intra_pred_mode_c_3*/;

    scalar_writing_520        = ~scalar_argAckdone[2][1][1]    /*intra_prediction_unit_ex_hls.prev_intra_luma_pred_flag_0_o*/;

    scalar_writing_521        = ~scalar_argAckdone[2][0][2]    /*intra_prediction_unit_ex_hls.prev_intra_luma_pred_flag_1_o*/;

    scalar_writing_522        = ~scalar_argAckdone[2][1][2]    /*intra_prediction_unit_ex_hls.prev_intra_luma_pred_flag_2_o*/;

    scalar_writing_523        = ~scalar_argAckdone[2][0][3]    /*intra_prediction_unit_ex_hls.prev_intra_luma_pred_flag_3_o*/;

    scalar_writing_532        = ~scalar_argAckdone[5][0][5]    /*hls_transform_unit_ex_hls.first_qp_group_o*/  |
                                ~scalar_argAckdone[5][1][5]    /*hls_transform_unit_ex_hls_dup1.first_qp_group_o*/  |
                                ~scalar_argAckdone[5][0][6]    /*hls_transform_unit_ex_hls_dup2.first_qp_group_o*/  |
                                ~scalar_argAckdone[5][1][6]    /*hls_transform_unit_ex_hls_dup3.first_qp_group_o*/  |
                                ~scalar_argAckdone[5][0][0]    /*ff_hevc_set_qPy_hls.first_qp_group_o*/  |
                                ~scalar_argAckdone[5][1][2]    /*hls_decode_neighbour_hls.first_qp_group*/;

    scalar_writing_536        = ~scalar_argAckdone[6][1][4]    /*hls_transform_unit_ex_hls.qp_y_o*/  |
                                ~scalar_argAckdone[6][0][5]    /*hls_transform_unit_ex_hls_dup1.qp_y_o*/  |
                                ~scalar_argAckdone[6][1][5]    /*hls_transform_unit_ex_hls_dup2.qp_y_o*/  |
                                ~scalar_argAckdone[6][0][6]    /*hls_transform_unit_ex_hls_dup3.qp_y_o*/  |
                                ~scalar_argAckdone[6][0][0]    /*ff_hevc_set_qPy_hls.qp_y*/;

    scalar_writing_540        = ~scalar_argAckdone[7][0][0]    /*hls_coding_quadtree_hls.qPy_pred*/  |
                                ~scalar_argAckdone[7][1][0]    /*hls_coding_quadtree_hls_dup1.qPy_pred*/  |
                                ~scalar_argAckdone[7][0][1]    /*hls_coding_quadtree_hls_dup2.qPy_pred*/  |
                                ~scalar_argAckdone[7][1][1]    /*hls_coding_quadtree_hls_dup3.qPy_pred*/  |
                                ~scalar_argAckdone[7][0][3]    /*hls_coding_unit_hls.qPy_pred*/  |
                                ~scalar_argAckdone[7][1][4]    /*hls_coding_unit_hls_dup1.qPy_pred*/  |
                                ~scalar_argAckdone[7][0][6]    /*hls_coding_unit_hls_dup2.qPy_pred*/  |
                                ~scalar_argAckdone[7][1][7]    /*hls_coding_unit_hls_dup3.qPy_pred*/;

    scalar_writing_560        = ~scalar_argAckdone[12][0][2]    /*hls_coding_unit_hls.pred_mode_o*/  |
                                ~scalar_argAckdone[12][1][2]    /*hls_coding_unit_hls_dup1.pred_mode_o*/  |
                                ~scalar_argAckdone[12][0][3]    /*hls_coding_unit_hls_dup2.pred_mode_o*/  |
                                ~scalar_argAckdone[12][1][3]    /*hls_coding_unit_hls_dup3.pred_mode_o*/;

    scalar_writing_564        = ~scalar_argAckdone[13][1][2]    /*hls_coding_unit_hls.part_mode_o*/  |
                                ~scalar_argAckdone[13][0][3]    /*hls_coding_unit_hls_dup1.part_mode_o*/  |
                                ~scalar_argAckdone[13][1][3]    /*hls_coding_unit_hls_dup2.part_mode_o*/  |
                                ~scalar_argAckdone[13][0][4]    /*hls_coding_unit_hls_dup3.part_mode_o*/;

    scalar_writing_568        = ~scalar_argAckdone[14][1][2]    /*hls_coding_unit_hls.intra_split_flag*/  |
                                ~scalar_argAckdone[14][0][3]    /*hls_coding_unit_hls_dup1.intra_split_flag*/  |
                                ~scalar_argAckdone[14][1][3]    /*hls_coding_unit_hls_dup2.intra_split_flag*/  |
                                ~scalar_argAckdone[14][0][4]    /*hls_coding_unit_hls_dup3.intra_split_flag*/;

    scalar_writing_572        = ~scalar_argAckdone[15][1][2]    /*hls_coding_unit_hls.cu_transquant_bypass_flag_o*/  |
                                ~scalar_argAckdone[15][0][3]    /*hls_coding_unit_hls_dup1.cu_transquant_bypass_flag_o*/  |
                                ~scalar_argAckdone[15][1][3]    /*hls_coding_unit_hls_dup2.cu_transquant_bypass_flag_o*/  |
                                ~scalar_argAckdone[15][0][4]    /*hls_coding_unit_hls_dup3.cu_transquant_bypass_flag_o*/;

    scalar_writing_576        = ~scalar_argAckdone[16][0][3]    /*intra_prediction_unit_ex_hls.max_trafo_depth*/  |
                                ~scalar_argAckdone[16][1][0]    /*hls_coding_unit_hls.max_trafo_depth*/  |
                                ~scalar_argAckdone[16][0][1]    /*hls_coding_unit_hls_dup1.max_trafo_depth*/  |
                                ~scalar_argAckdone[16][1][1]    /*hls_coding_unit_hls_dup2.max_trafo_depth*/  |
                                ~scalar_argAckdone[16][0][2]    /*hls_coding_unit_hls_dup3.max_trafo_depth*/;

    scalar_writing_580        = ~scalar_argAckdone[17][0][1]    /*hls_transform_unit_ex_hls.cand_up*/  |
                                ~scalar_argAckdone[17][1][1]    /*hls_transform_unit_ex_hls_dup1.cand_up*/  |
                                ~scalar_argAckdone[17][0][2]    /*hls_transform_unit_ex_hls_dup2.cand_up*/  |
                                ~scalar_argAckdone[17][1][2]    /*hls_transform_unit_ex_hls_dup3.cand_up*/  |
                                ~scalar_argAckdone[17][0][0]    /*ff_hevc_set_neighbour_available_hls.cand_up*/;

    scalar_writing_584        = ~scalar_argAckdone[18][0][1]    /*hls_transform_unit_ex_hls.cand_left*/  |
                                ~scalar_argAckdone[18][1][1]    /*hls_transform_unit_ex_hls_dup1.cand_left*/  |
                                ~scalar_argAckdone[18][0][2]    /*hls_transform_unit_ex_hls_dup2.cand_left*/  |
                                ~scalar_argAckdone[18][1][2]    /*hls_transform_unit_ex_hls_dup3.cand_left*/  |
                                ~scalar_argAckdone[18][0][0]    /*ff_hevc_set_neighbour_available_hls.cand_left*/;

    scalar_writing_588        = ~scalar_argAckdone[19][0][1]    /*hls_transform_unit_ex_hls.cand_up_left*/  |
                                ~scalar_argAckdone[19][1][1]    /*hls_transform_unit_ex_hls_dup1.cand_up_left*/  |
                                ~scalar_argAckdone[19][0][2]    /*hls_transform_unit_ex_hls_dup2.cand_up_left*/  |
                                ~scalar_argAckdone[19][1][2]    /*hls_transform_unit_ex_hls_dup3.cand_up_left*/  |
                                ~scalar_argAckdone[19][0][0]    /*ff_hevc_set_neighbour_available_hls.cand_up_left*/;

    scalar_writing_596        = ~scalar_argAckdone[21][0][3]    /*hls_transform_unit_ex_hls.cand_up_right*/  |
                                ~scalar_argAckdone[21][1][4]    /*hls_transform_unit_ex_hls_dup1.cand_up_right*/  |
                                ~scalar_argAckdone[21][0][6]    /*hls_transform_unit_ex_hls_dup2.cand_up_right*/  |
                                ~scalar_argAckdone[21][1][7]    /*hls_transform_unit_ex_hls_dup3.cand_up_right*/  |
                                ~scalar_argAckdone[21][0][0]    /*ff_hevc_set_neighbour_available_hls.cand_up_right*/;

    scalar_writing_600        = ~scalar_argAckdone[22][0][3]    /*hls_transform_unit_ex_hls.cand_bottom_left_o*/  |
                                ~scalar_argAckdone[22][1][4]    /*hls_transform_unit_ex_hls_dup1.cand_bottom_left_o*/  |
                                ~scalar_argAckdone[22][0][6]    /*hls_transform_unit_ex_hls_dup2.cand_bottom_left_o*/  |
                                ~scalar_argAckdone[22][1][7]    /*hls_transform_unit_ex_hls_dup3.cand_bottom_left_o*/  |
                                ~scalar_argAckdone[22][0][0]    /*ff_hevc_set_neighbour_available_hls.cand_bottom_left*/;

    scalar_writing_604        = ~scalar_argAckdone[23][1][2]    /*hls_decode_neighbour_hls.ctb_up_flag*/;

    scalar_writing_608        = ~scalar_argAckdone[24][1][0]    /*hls_decode_neighbour_hls.ctb_left_flag*/;

    scalar_writing_612        = ~scalar_argAckdone[25][1][0]    /*hls_decode_neighbour_hls.ctb_up_left_flag*/;

    scalar_writing_616        = ~scalar_argAckdone[26][1][0]    /*hls_decode_neighbour_hls.ctb_up_right_flag*/;

    scalar_writing_620        = ~scalar_argAckdone[27][1][0]    /*hls_decode_neighbour_hls.end_of_tiles_x*/;

    scalar_writing_624        = ~scalar_argAckdone[28][0][1]    /*hls_decode_neighbour_hls.end_of_tiles_y*/;

    scalar_writing_628        = ~scalar_argAckdone[29][1][2]    /*innerloop_ff_hevc_extract_rbsp_2_hls.skipped_bytes_o*/;

    scalar_writing_632        = ~scalar_argAckdone[30][1][0]    /*innerloop_ff_hevc_extract_rbsp_2_hls.si_loop_o*/;

    scalar_writing_636        = ~scalar_argAckdone[31][0][0]    /*innerloop_ff_hevc_extract_rbsp_2_hls.di_loop_o*/;

    scalar_writing_640        = ~scalar_argAckdone[0][1][8]    /*innerloop_ff_hevc_extract_rbsp_1_hls.zero_o*/  |
                                ~scalar_argAckdone[0][0][9]    /*innerloop_ff_hevc_extract_rbsp_2_hls.zero_o*/;

    scalar_writing_644        = ~scalar_argAckdone[1][0][1]    /*init_intra_neighbors_hls.numIntraNeighbor*/;

    scalar_writing_648        = ~scalar_argAckdone[2][0][1]    /*init_intra_neighbors_hls.totalUnits*/;

    scalar_writing_652        = ~scalar_argAckdone[3][0][4]    /*init_intra_neighbors_hls.aboveUnits*/;

    scalar_writing_656        = ~scalar_argAckdone[4][0][4]    /*init_intra_neighbors_hls.leftUnits*/;

    scalar_writing_660        = ~scalar_argAckdone[5][0][7]    /*init_intra_neighbors_hls.unitWidth*/;

    scalar_writing_664        = ~scalar_argAckdone[6][1][6]    /*init_intra_neighbors_hls.unitHeight*/;

    scalar_writing_668        = ~scalar_argAckdone[7][0][8]    /*init_intra_neighbors_hls.log2TrSize*/;

    scalar_writing_672        = ~scalar_argAckdone[8][1][6]    /*init_intra_neighbors_hls.bNeighborFlags_0_o*/  |
                                ~scalar_argAckdone[9][1][8]    /*init_intra_neighbors_hls.bNeighborFlags_1_o*/  |
                                ~scalar_argAckdone[10][0][8]    /*init_intra_neighbors_hls.bNeighborFlags_2_o*/;

    scalar_writing_684        = ~scalar_argAckdone[11][0][4]    /*init_intra_neighbors_chroma_hls.numIntraNeighbor_c*/;

    scalar_writing_688        = ~scalar_argAckdone[12][0][6]    /*init_intra_neighbors_chroma_hls.totalUnits_c*/;

    scalar_writing_692        = ~scalar_argAckdone[13][1][6]    /*init_intra_neighbors_chroma_hls.aboveUnits_c*/;

    scalar_writing_696        = ~scalar_argAckdone[14][1][6]    /*init_intra_neighbors_chroma_hls.leftUnits_c*/;

    scalar_writing_700        = ~scalar_argAckdone[15][1][4]    /*init_intra_neighbors_chroma_hls.unitWidth_c*/;

    scalar_writing_704        = ~scalar_argAckdone[16][1][2]    /*init_intra_neighbors_chroma_hls.unitHeight_c*/;

    scalar_writing_708        = ~scalar_argAckdone[17][0][3]    /*init_intra_neighbors_chroma_hls.log2TrSize_c*/;

    scalar_writing_712        = ~scalar_argAckdone[18][0][3]    /*init_intra_neighbors_chroma_hls.bNeighborFlags_c_0_o*/  |
                                ~scalar_argAckdone[19][0][3]    /*init_intra_neighbors_chroma_hls.bNeighborFlags_c_1_o*/  |
                                ~scalar_argAckdone[20][0][7]    /*init_intra_neighbors_chroma_hls.bNeighborFlags_c_2_o*/;

    scalar_writing_1136       = ~scalar_argAckdone[28][0][2]    /*hls_transform_unit_ex_hls.cmdr_run_o*/  |
                                ~scalar_argAckdone[28][0][3]    /*hls_transform_unit_ex_hls_dup1.cmdr_run_o*/  |
                                ~scalar_argAckdone[28][0][4]    /*hls_transform_unit_ex_hls_dup2.cmdr_run_o*/  |
                                ~scalar_argAckdone[28][0][5]    /*hls_transform_unit_ex_hls_dup3.cmdr_run_o*/  |
                                ~scalar_argAckdone[28][0][0]    /*copy_top_left_pixel_hls.cmdr_run_o*/;

    scalar_writing_1488       = ~scalar_argAckdone[20][1][3]    /*hls_transform_unit_ex_hls.cand_up_c*/  |
                                ~scalar_argAckdone[20][1][4]    /*hls_transform_unit_ex_hls_dup1.cand_up_c*/  |
                                ~scalar_argAckdone[20][1][5]    /*hls_transform_unit_ex_hls_dup2.cand_up_c*/  |
                                ~scalar_argAckdone[20][1][6]    /*hls_transform_unit_ex_hls_dup3.cand_up_c*/;

    scalar_writing_1492       = ~scalar_argAckdone[21][1][3]    /*hls_transform_unit_ex_hls.cand_left_c*/  |
                                ~scalar_argAckdone[21][0][5]    /*hls_transform_unit_ex_hls_dup1.cand_left_c*/  |
                                ~scalar_argAckdone[21][1][6]    /*hls_transform_unit_ex_hls_dup2.cand_left_c*/  |
                                ~scalar_argAckdone[21][0][8]    /*hls_transform_unit_ex_hls_dup3.cand_left_c*/;

    scalar_writing_1496       = ~scalar_argAckdone[22][1][3]    /*hls_transform_unit_ex_hls.cand_up_left_c*/  |
                                ~scalar_argAckdone[22][0][5]    /*hls_transform_unit_ex_hls_dup1.cand_up_left_c*/  |
                                ~scalar_argAckdone[22][1][6]    /*hls_transform_unit_ex_hls_dup2.cand_up_left_c*/  |
                                ~scalar_argAckdone[22][0][8]    /*hls_transform_unit_ex_hls_dup3.cand_up_left_c*/;

    scalar_writing_1504       = ~scalar_argAckdone[24][0][3]    /*hls_transform_unit_ex_hls.cand_up_right_c*/  |
                                ~scalar_argAckdone[24][1][3]    /*hls_transform_unit_ex_hls_dup1.cand_up_right_c*/  |
                                ~scalar_argAckdone[24][0][4]    /*hls_transform_unit_ex_hls_dup2.cand_up_right_c*/  |
                                ~scalar_argAckdone[24][1][4]    /*hls_transform_unit_ex_hls_dup3.cand_up_right_c*/;

    scalar_writing_1508       = ~scalar_argAckdone[25][0][3]    /*hls_transform_unit_ex_hls.cand_bottom_left_c_o*/  |
                                ~scalar_argAckdone[25][1][3]    /*hls_transform_unit_ex_hls_dup1.cand_bottom_left_c_o*/  |
                                ~scalar_argAckdone[25][0][4]    /*hls_transform_unit_ex_hls_dup2.cand_bottom_left_c_o*/  |
                                ~scalar_argAckdone[25][1][4]    /*hls_transform_unit_ex_hls_dup3.cand_bottom_left_c_o*/;

    innerloop_ff_hevc_extract_rbsp_1_hls_zero_i = innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_r;    //bidir;
    innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_i = innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_r;    //bidir;
    innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_i = innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_r;    //bidir;
    innerloop_ff_hevc_extract_rbsp_2_hls_zero_i = innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_r;    //bidir;
    innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_i = innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_r;    //bidir;
    hevc_find_frame_end_hls_state64_0_i      = hevc_find_frame_end_hls_state64_0_o_r;    //bidir;
    hevc_find_frame_end_hls_state64_1_i      = hevc_find_frame_end_hls_state64_1_o_r;    //bidir;
    hevc_find_frame_end_hls_frame_start_found_i = hevc_find_frame_end_hls_frame_start_found_o_r;    //bidir;
    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_i = intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_r;    //bidir;
    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_i = intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_r;    //bidir;
    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_i = intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_r;    //bidir;
    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_i = intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_r;    //bidir;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_i = intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_r;    //bidir;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_i = intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_r;    //bidir;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_i = intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_r;    //bidir;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_i = intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_r;    //bidir;
    hls_transform_unit_ex_hls_qp_y_i         = hls_transform_unit_ex_hls_qp_y_o_r;    //bidir;
    hls_transform_unit_ex_hls_log2_trafo_size_c_i = hls_transform_unit_ex_hls_log2_trafo_size_c_o_r;    //bidir;
    hls_transform_unit_ex_hls_scan_idx_i     = hls_transform_unit_ex_hls_scan_idx_o_r;    //bidir;
    hls_transform_unit_ex_hls_cmdr_run_i     = hls_transform_unit_ex_hls_cmdr_run_o_r;    //bidir;
    hls_transform_unit_ex_hls_cand_bottom_left_i = hls_transform_unit_ex_hls_cand_bottom_left_o_r;    //bidir;
    hls_transform_unit_ex_hls_cand_bottom_left_c_i = hls_transform_unit_ex_hls_cand_bottom_left_c_o_r;    //bidir;
    hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_i = hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_r;    //bidir;
    hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_i = hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_r;    //bidir;
    hls_transform_unit_ex_hls_first_qp_group_i = hls_transform_unit_ex_hls_first_qp_group_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_qp_y_i    = hls_transform_unit_ex_hls_dup1_qp_y_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_i = hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_scan_idx_i = hls_transform_unit_ex_hls_dup1_scan_idx_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_cmdr_run_i = hls_transform_unit_ex_hls_dup1_cmdr_run_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_cand_bottom_left_i = hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_i = hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_i = hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_i = hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_first_qp_group_i = hls_transform_unit_ex_hls_dup1_first_qp_group_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_qp_y_i    = hls_transform_unit_ex_hls_dup2_qp_y_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_i = hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_scan_idx_i = hls_transform_unit_ex_hls_dup2_scan_idx_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_cmdr_run_i = hls_transform_unit_ex_hls_dup2_cmdr_run_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_cand_bottom_left_i = hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_i = hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_i = hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_i = hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_first_qp_group_i = hls_transform_unit_ex_hls_dup2_first_qp_group_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_qp_y_i    = hls_transform_unit_ex_hls_dup3_qp_y_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_i = hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_scan_idx_i = hls_transform_unit_ex_hls_dup3_scan_idx_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_cmdr_run_i = hls_transform_unit_ex_hls_dup3_cmdr_run_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_cand_bottom_left_i = hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_i = hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_i = hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_i = hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_first_qp_group_i = hls_transform_unit_ex_hls_dup3_first_qp_group_o_r;    //bidir;
    hls_transform_tree_hls_cbf_luma_i        = hls_transform_tree_hls_cbf_luma_o_r;    //bidir;
    hls_transform_tree_hls_dup1_cbf_luma_i   = hls_transform_tree_hls_dup1_cbf_luma_o_r;    //bidir;
    hls_transform_tree_hls_dup2_cbf_luma_i   = hls_transform_tree_hls_dup2_cbf_luma_o_r;    //bidir;
    hls_transform_tree_hls_dup3_cbf_luma_i   = hls_transform_tree_hls_dup3_cbf_luma_o_r;    //bidir;
    hls_coding_quadtree_hls_x1_i             = hls_coding_quadtree_hls_x1_o_r;    //bidir;
    hls_coding_quadtree_hls_y1_i             = hls_coding_quadtree_hls_y1_o_r;    //bidir;
    hls_coding_quadtree_hls_log2_cb_size_minus_one_i = hls_coding_quadtree_hls_log2_cb_size_minus_one_o_r;    //bidir;
    hls_coding_quadtree_hls_cb_depth_plus_one_i = hls_coding_quadtree_hls_cb_depth_plus_one_o_r;    //bidir;
    hls_coding_quadtree_hls_split_cu_flag_i  = hls_coding_quadtree_hls_split_cu_flag_o_r;    //bidir;
    hls_coding_quadtree_hls_more_data_i      = hls_coding_quadtree_hls_more_data_o_r;    //bidir;
    hls_coding_quadtree_hls_qp_block_mask_i  = hls_coding_quadtree_hls_qp_block_mask_o_r;    //bidir;
    hls_coding_quadtree_hls_cb_size_split_i  = hls_coding_quadtree_hls_cb_size_split_o_r;    //bidir;
    hls_coding_quadtree_hls_dup1_x1_i        = hls_coding_quadtree_hls_dup1_x1_o_r;    //bidir;
    hls_coding_quadtree_hls_dup1_y1_i        = hls_coding_quadtree_hls_dup1_y1_o_r;    //bidir;
    hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_i = hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_r;    //bidir;
    hls_coding_quadtree_hls_dup1_cb_depth_plus_one_i = hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_r;    //bidir;
    hls_coding_quadtree_hls_dup1_split_cu_flag_i = hls_coding_quadtree_hls_dup1_split_cu_flag_o_r;    //bidir;
    hls_coding_quadtree_hls_dup1_more_data_i = hls_coding_quadtree_hls_dup1_more_data_o_r;    //bidir;
    hls_coding_quadtree_hls_dup1_qp_block_mask_i = hls_coding_quadtree_hls_dup1_qp_block_mask_o_r;    //bidir;
    hls_coding_quadtree_hls_dup1_cb_size_split_i = hls_coding_quadtree_hls_dup1_cb_size_split_o_r;    //bidir;
    hls_coding_quadtree_hls_dup2_x1_i        = hls_coding_quadtree_hls_dup2_x1_o_r;    //bidir;
    hls_coding_quadtree_hls_dup2_y1_i        = hls_coding_quadtree_hls_dup2_y1_o_r;    //bidir;
    hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_i = hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_r;    //bidir;
    hls_coding_quadtree_hls_dup2_cb_depth_plus_one_i = hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_r;    //bidir;
    hls_coding_quadtree_hls_dup2_split_cu_flag_i = hls_coding_quadtree_hls_dup2_split_cu_flag_o_r;    //bidir;
    hls_coding_quadtree_hls_dup2_more_data_i = hls_coding_quadtree_hls_dup2_more_data_o_r;    //bidir;
    hls_coding_quadtree_hls_dup2_qp_block_mask_i = hls_coding_quadtree_hls_dup2_qp_block_mask_o_r;    //bidir;
    hls_coding_quadtree_hls_dup2_cb_size_split_i = hls_coding_quadtree_hls_dup2_cb_size_split_o_r;    //bidir;
    hls_coding_quadtree_hls_dup3_x1_i        = hls_coding_quadtree_hls_dup3_x1_o_r;    //bidir;
    hls_coding_quadtree_hls_dup3_y1_i        = hls_coding_quadtree_hls_dup3_y1_o_r;    //bidir;
    hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_i = hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_r;    //bidir;
    hls_coding_quadtree_hls_dup3_cb_depth_plus_one_i = hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_r;    //bidir;
    hls_coding_quadtree_hls_dup3_split_cu_flag_i = hls_coding_quadtree_hls_dup3_split_cu_flag_o_r;    //bidir;
    hls_coding_quadtree_hls_dup3_more_data_i = hls_coding_quadtree_hls_dup3_more_data_o_r;    //bidir;
    hls_coding_quadtree_hls_dup3_qp_block_mask_i = hls_coding_quadtree_hls_dup3_qp_block_mask_o_r;    //bidir;
    hls_coding_quadtree_hls_dup3_cb_size_split_i = hls_coding_quadtree_hls_dup3_cb_size_split_o_r;    //bidir;
    hls_coding_unit_hls_cu_transquant_bypass_flag_i = hls_coding_unit_hls_cu_transquant_bypass_flag_o_r;    //bidir;
    hls_coding_unit_hls_pcm_flag_i           = hls_coding_unit_hls_pcm_flag_o_r;    //bidir;
    hls_coding_unit_hls_pred_mode_i          = hls_coding_unit_hls_pred_mode_o_r;    //bidir;
    hls_coding_unit_hls_part_mode_i          = hls_coding_unit_hls_part_mode_o_r;    //bidir;
    hls_coding_unit_hls_cb_size_i            = hls_coding_unit_hls_cb_size_o_r;    //bidir;
    hls_coding_unit_hls_idx_i                = hls_coding_unit_hls_idx_o_r;    //bidir;
    hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_i = hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_r;    //bidir;
    hls_coding_unit_hls_dup1_pcm_flag_i      = hls_coding_unit_hls_dup1_pcm_flag_o_r;    //bidir;
    hls_coding_unit_hls_dup1_pred_mode_i     = hls_coding_unit_hls_dup1_pred_mode_o_r;    //bidir;
    hls_coding_unit_hls_dup1_part_mode_i     = hls_coding_unit_hls_dup1_part_mode_o_r;    //bidir;
    hls_coding_unit_hls_dup1_cb_size_i       = hls_coding_unit_hls_dup1_cb_size_o_r;    //bidir;
    hls_coding_unit_hls_dup1_idx_i           = hls_coding_unit_hls_dup1_idx_o_r;    //bidir;
    hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_i = hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_r;    //bidir;
    hls_coding_unit_hls_dup2_pcm_flag_i      = hls_coding_unit_hls_dup2_pcm_flag_o_r;    //bidir;
    hls_coding_unit_hls_dup2_pred_mode_i     = hls_coding_unit_hls_dup2_pred_mode_o_r;    //bidir;
    hls_coding_unit_hls_dup2_part_mode_i     = hls_coding_unit_hls_dup2_part_mode_o_r;    //bidir;
    hls_coding_unit_hls_dup2_cb_size_i       = hls_coding_unit_hls_dup2_cb_size_o_r;    //bidir;
    hls_coding_unit_hls_dup2_idx_i           = hls_coding_unit_hls_dup2_idx_o_r;    //bidir;
    hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_i = hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_r;    //bidir;
    hls_coding_unit_hls_dup3_pcm_flag_i      = hls_coding_unit_hls_dup3_pcm_flag_o_r;    //bidir;
    hls_coding_unit_hls_dup3_pred_mode_i     = hls_coding_unit_hls_dup3_pred_mode_o_r;    //bidir;
    hls_coding_unit_hls_dup3_part_mode_i     = hls_coding_unit_hls_dup3_part_mode_o_r;    //bidir;
    hls_coding_unit_hls_dup3_cb_size_i       = hls_coding_unit_hls_dup3_cb_size_o_r;    //bidir;
    hls_coding_unit_hls_dup3_idx_i           = hls_coding_unit_hls_dup3_idx_o_r;    //bidir;
    copy_top_left_pixel_hls_cmdr_run_i       = copy_top_left_pixel_hls_cmdr_run_o_r;    //bidir;
    genPredCol_hls_predColBuf_16_i           = genPredCol_hls_predColBuf_16_o_r;    //bidir;
    ff_hevc_set_qPy_hls_first_qp_group_i     = ff_hevc_set_qPy_hls_first_qp_group_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_0_i = set_tab_mvf_pred_flag_hls_predColBuf_0_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_1_i = set_tab_mvf_pred_flag_hls_predColBuf_1_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_2_i = set_tab_mvf_pred_flag_hls_predColBuf_2_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_3_i = set_tab_mvf_pred_flag_hls_predColBuf_3_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_4_i = set_tab_mvf_pred_flag_hls_predColBuf_4_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_5_i = set_tab_mvf_pred_flag_hls_predColBuf_5_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_6_i = set_tab_mvf_pred_flag_hls_predColBuf_6_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_7_i = set_tab_mvf_pred_flag_hls_predColBuf_7_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_8_i = set_tab_mvf_pred_flag_hls_predColBuf_8_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_9_i = set_tab_mvf_pred_flag_hls_predColBuf_9_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_10_i = set_tab_mvf_pred_flag_hls_predColBuf_10_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_11_i = set_tab_mvf_pred_flag_hls_predColBuf_11_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_12_i = set_tab_mvf_pred_flag_hls_predColBuf_12_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_13_i = set_tab_mvf_pred_flag_hls_predColBuf_13_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_14_i = set_tab_mvf_pred_flag_hls_predColBuf_14_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_15_i = set_tab_mvf_pred_flag_hls_predColBuf_15_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_16_i = set_tab_mvf_pred_flag_hls_predColBuf_16_o_r;    //bidir;
    init_intra_neighbors_hls_bNeighborFlags_0_i = init_intra_neighbors_hls_bNeighborFlags_0_o_r;    //bidir;
    init_intra_neighbors_hls_bNeighborFlags_1_i = init_intra_neighbors_hls_bNeighborFlags_1_o_r;    //bidir;
    init_intra_neighbors_hls_bNeighborFlags_2_i = init_intra_neighbors_hls_bNeighborFlags_2_o_r;    //bidir;
    init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_i = init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_r;    //bidir;
    init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_i = init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_r;    //bidir;
    init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_i = init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_r;    //bidir;

end

endmodule