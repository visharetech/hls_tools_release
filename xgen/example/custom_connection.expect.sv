
/*
#Apply the patch from openhevc_remove_fill_ref_sample_in_xmem2.patch
func_name,is_array,offset,varname,dir,width,depth,remark
innerloop_ff_hevc_extract_rbsp_1_hls,0,640,zero_i,in,8,1,
innerloop_ff_hevc_extract_rbsp_1_hls,0,640,zero_o,out,8,1,
innerloop_ff_hevc_extract_rbsp_1_hls,0,1120,loop_init,in,32,1,
innerloop_ff_hevc_extract_rbsp_1_hls,0,1128,loop_len,in,32,1,
innerloop_ff_hevc_extract_rbsp_1_hls,0,1124,loop_inc,in,32,1,
innerloop_ff_hevc_extract_rbsp_1_hls,0,1132,loop_cnt,out,32,1,
#innerloop_ff_hevc_extract_rbsp_2_hls,0,0,skipped_bytes_pos_is_null,in,8,1,apcall_arg
innerloop_ff_hevc_extract_rbsp_2_hls,0,632,si_loop_i,in,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,632,si_loop_o,out,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,636,di_loop_i,in,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,636,di_loop_o,out,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,640,zero_i,in,8,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,640,zero_o,out,8,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,628,skipped_bytes_i,in,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,628,skipped_bytes_o,out,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,1,8192,skipped_bytes_pos_Din_A,out,32,1024,bram_xmem addr_width=32 we_width=4
innerloop_ff_hevc_extract_rbsp_2_hls,0,1120,loop_init,in,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,1128,loop_len,in,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,1124,loop_inc,in,32,1,
innerloop_ff_hevc_extract_rbsp_2_hls,0,1132,loop_cnt,out,32,1,
#fill_ref_samples_mtdma_top_wrp,0,0,x0,in,13,1,apcall_arg
#fill_ref_samples_mtdma_top_wrp,0,0,y0,in,13,1,apcall_arg
#fill_ref_samples_mtdma_top_wrp,0,0,cidx,in,2,1,apcall_arg
#fill_ref_samples_mtdma_top_wrp,0,0,mode,in,2,1,apcall_arg
#fill_ref_samples_mtdma_top_wrp,0,0,log2TrSize_shifted,in,3,1,apcall_arg
#fill_ref_samples_mtdma_top_wrp,0,0,shift,in,1,1,apcall_arg
fill_ref_samples_mtdma_top_wrp,0,644,numIntraNeighbor,in,6,1,
fill_ref_samples_mtdma_top_wrp,0,648,totalUnits,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,652,aboveUnits,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,656,leftUnits,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,660,unitWidth,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,664,unitHeight,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,668,log2TrSize,in,3,1,
fill_ref_samples_mtdma_top_wrp,0,672,bNeighborFlags,in,65,1,split_u32_array
fill_ref_samples_mtdma_top_wrp,0,684,numIntraNeighbor_c,in,6,1,
fill_ref_samples_mtdma_top_wrp,0,688,totalUnits_c,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,692,aboveUnits_c,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,696,leftUnits_c,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,700,unitWidth_c,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,704,unitHeight_c,in,8,1,
fill_ref_samples_mtdma_top_wrp,0,708,log2TrSize_c,in,3,1,
fill_ref_samples_mtdma_top_wrp,0,712,bNeighborFlags_c,in,65,1,split_u32_array
#hevc_find_frame_end_hls,0,0,buff_size_i,in,32,1,apcall_arg
hevc_find_frame_end_hls,0,0,state64_i,in,64,1,
hevc_find_frame_end_hls,0,0,state64_o,out,64,1,
hevc_find_frame_end_hls,0,8,frame_start_found_i,in,32,1,
hevc_find_frame_end_hls,0,8,frame_start_found_o,out,32,1,
#intra_prediction_unit_ex_hls,0,0,x0,in,32,1,apcall_arg
#intra_prediction_unit_ex_hls,0,0,y0,in,32,1,apcall_arg
#intra_prediction_unit_ex_hls,0,0,log2_cb_size,in,32,1,apcall_arg
intra_prediction_unit_ex_hls,1,520,prev_intra_luma_pred_flag_0_i,in,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,520,prev_intra_luma_pred_flag_0_o,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,521,prev_intra_luma_pred_flag_1_i,in,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,521,prev_intra_luma_pred_flag_1_o,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,522,prev_intra_luma_pred_flag_2_i,in,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,522,prev_intra_luma_pred_flag_2_o,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,523,prev_intra_luma_pred_flag_3_i,in,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,523,prev_intra_luma_pred_flag_3_o,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,0,564,part_mode,in,8,1,parent_func
intra_prediction_unit_ex_hls,0,396,min_pu_width,in,32,1,parent_func
intra_prediction_unit_ex_hls,0,372,log2_min_pu_size,in,32,1,parent_func
intra_prediction_unit_ex_hls,0,360,log2_ctb_size,in,32,1,parent_func
intra_prediction_unit_ex_hls,0,604,ctb_up_flag,in,8,1,parent_func
intra_prediction_unit_ex_hls,0,608,ctb_left_flag,in,8,1,parent_func
intra_prediction_unit_ex_hls,1,512,pu_intra_pred_mode_0_i,in,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,512,pu_intra_pred_mode_0_o,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,513,pu_intra_pred_mode_1_i,in,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,513,pu_intra_pred_mode_1_o,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,514,pu_intra_pred_mode_2_i,in,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,514,pu_intra_pred_mode_2_o,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,515,pu_intra_pred_mode_3_i,in,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,515,pu_intra_pred_mode_3_o,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,508,pu_chroma_mode_c_0,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,509,pu_chroma_mode_c_1,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,510,pu_chroma_mode_c_2,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,511,pu_chroma_mode_c_3,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,516,pu_intra_pred_mode_c_0,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,517,pu_intra_pred_mode_c_1,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,518,pu_intra_pred_mode_c_2,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,1,519,pu_intra_pred_mode_c_3,out,8,4,(complete partition) parent_func
intra_prediction_unit_ex_hls,0,324,chroma_array_type,in,32,1,parent_func
intra_prediction_unit_ex_hls,0,576,max_trafo_depth,out,8,1,parent_func
intra_prediction_unit_ex_hls,0,384,max_transform_hierarchy_depth_intra,in,32,1,parent_func
intra_prediction_unit_ex_hls,0,568,intra_split_flag,in,8,1,parent_func
intra_prediction_unit_ex_hls,1,286180,tab_ipm_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
intra_prediction_unit_ex_hls,1,286180,tab_ipm_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
#hls_transform_unit_ex_hls,0,0,tid,in,32,1,apcall_arg
#hls_transform_unit_ex_hls,0,0,x0,in,32,1,apcall_arg
#hls_transform_unit_ex_hls,0,0,y0,in,32,1,apcall_arg
#hls_transform_unit_ex_hls,0,0,xBase,in,32,1,apcall_arg
#hls_transform_unit_ex_hls,0,0,yBase,in,32,1,apcall_arg
#hls_transform_unit_ex_hls,0,0,log2_cb_size,in,32,1,apcall_arg
#hls_transform_unit_ex_hls,0,0,log2_size,in,32,1,apcall_arg
#hls_transform_unit_ex_hls,0,0,blk_idx,in,32,1,apcall_arg
hls_transform_unit_ex_hls,0,20,cbf_luma,in,32,1,parent_func
hls_transform_unit_ex_hls,0,16,cbf_data,in,8,1,parent_func
hls_transform_unit_ex_hls,0,1160,chroma_qp_offset_list_len_minus1,in,8,1,parent_func
hls_transform_unit_ex_hls,1,12288,cb_qp_offset_list_Din_A,out,8,5,bram_xmem addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls,1,12288,cb_qp_offset_list_Dout_A,in,8,5,bram_xmem addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls,1,12296,cr_qp_offset_list_Din_A,out,8,5,bram_xmem addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls,1,12296,cr_qp_offset_list_Dout_A,in,8,5,bram_xmem addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls,0,1136,qp_bd_offset,in,32,1,parent_func
hls_transform_unit_ex_hls,1,286204,qp_y_tab_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls,1,286204,qp_y_tab_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls,0,560,pred_mode,in,8,1,parent_func
hls_transform_unit_ex_hls,1,336,hshift_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,340,hshift_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,344,hshift_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,348,vshift_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,352,vshift_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,356,vshift_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,0,484,tu_intra_pred_mode,in,32,1,parent_func
hls_transform_unit_ex_hls,0,488,tu_intra_pred_mode_c,in,32,1,parent_func
hls_transform_unit_ex_hls,0,572,cu_transquant_bypass_flag,in,8,1,parent_func
hls_transform_unit_ex_hls,0,492,tu_cu_qp_offset_cb,out,8,1,parent_func
hls_transform_unit_ex_hls,0,496,tu_cu_qp_offset_cr,out,8,1,parent_func
hls_transform_unit_ex_hls,0,536,qp_y_i,in,8,1,parent_func
hls_transform_unit_ex_hls,0,536,qp_y_o,out,8,1,parent_func
hls_transform_unit_ex_hls,0,168,log2_trafo_size,out,32,1,parent_func
hls_transform_unit_ex_hls,0,56,log2_trafo_size_c_i,in,8,1,parent_func
hls_transform_unit_ex_hls,0,56,log2_trafo_size_c_o,out,8,1,parent_func
hls_transform_unit_ex_hls,0,48,scan_idx_i,in,8,1,parent_func
hls_transform_unit_ex_hls,0,48,scan_idx_o,out,8,1,parent_func
hls_transform_unit_ex_hls,0,52,scan_idx_c,out,8,1,parent_func
hls_transform_unit_ex_hls,0,1140,cmdr_run_i,in,8,1,parent_func
hls_transform_unit_ex_hls,0,1140,cmdr_run_o,out,8,1,parent_func
hls_transform_unit_ex_hls,1,1244,buf_data_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,1248,buf_data_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,1252,buf_data_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,1148,xm_linesize_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,1152,xm_linesize_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,1,1156,xm_linesize_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls,0,1144,pixel_shift,in,32,1,parent_func
hls_transform_unit_ex_hls,0,160,nPbW,out,32,1,parent_func
hls_transform_unit_ex_hls,0,164,nPbH,out,32,1,parent_func
hls_transform_unit_ex_hls,0,580,cand_up,out,1,1,parent_func
hls_transform_unit_ex_hls,0,584,cand_left,out,1,1,parent_func
hls_transform_unit_ex_hls,0,588,cand_up_left,out,1,1,parent_func
hls_transform_unit_ex_hls,0,592,cand_up_right_sap,out,1,1,parent_func
hls_transform_unit_ex_hls,0,596,cand_up_right,out,1,1,parent_func
hls_transform_unit_ex_hls,0,600,cand_bottom_left_i,in,1,1,parent_func
hls_transform_unit_ex_hls,0,600,cand_bottom_left_o,out,1,1,parent_func
hls_transform_unit_ex_hls,0,1412,cand_up_c,out,1,1,parent_func
hls_transform_unit_ex_hls,0,1416,cand_left_c,out,1,1,parent_func
hls_transform_unit_ex_hls,0,1420,cand_up_left_c,out,1,1,parent_func
hls_transform_unit_ex_hls,0,1424,cand_up_right_sap_c,out,1,1,parent_func
hls_transform_unit_ex_hls,0,1428,cand_up_right_c,out,1,1,parent_func
hls_transform_unit_ex_hls,0,1432,cand_bottom_left_c_i,in,1,1,parent_func
hls_transform_unit_ex_hls,0,1432,cand_bottom_left_c_o,out,1,1,parent_func
hls_transform_unit_ex_hls,0,360,log2_ctb_size,in,32,1,parent_func
hls_transform_unit_ex_hls,0,604,ctb_up_flag,in,1,1,parent_func
hls_transform_unit_ex_hls,0,608,ctb_left_flag,in,1,1,parent_func
hls_transform_unit_ex_hls,0,612,ctb_up_left_flag,in,1,1,parent_func
hls_transform_unit_ex_hls,0,616,ctb_up_right_flag,in,1,1,parent_func
hls_transform_unit_ex_hls,0,620,end_of_tiles_x,in,16,1,parent_func
hls_transform_unit_ex_hls,0,624,end_of_tiles_y,in,16,1,parent_func
hls_transform_unit_ex_hls,0,472,tu_is_cu_chroma_qp_offset_coded_i,in,8,1,parent_func
hls_transform_unit_ex_hls,0,472,tu_is_cu_chroma_qp_offset_coded_o,out,8,1,parent_func
hls_transform_unit_ex_hls,0,476,tu_is_cu_qp_delta_coded_i,in,8,1,parent_func
hls_transform_unit_ex_hls,0,476,tu_is_cu_qp_delta_coded_o,out,8,1,parent_func
hls_transform_unit_ex_hls,0,468,tu_cu_qp_delta,out,32,1,parent_func
hls_transform_unit_ex_hls,0,500,tu_cross_pf,out,8,1,parent_func
hls_transform_unit_ex_hls,0,532,first_qp_group_i,in,8,1,parent_func
hls_transform_unit_ex_hls,0,532,first_qp_group_o,out,8,1,parent_func
hls_transform_unit_ex_hls,0,328,chroma_format_idc,in,32,1,parent_func
hls_transform_unit_ex_hls,0,448,cu_chroma_qp_offset_enabled_flag,in,8,1,parent_func
hls_transform_unit_ex_hls,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_transform_unit_ex_hls,0,540,qPy_pred,in,32,1,parent_func
hls_transform_unit_ex_hls,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_transform_unit_ex_hls,0,368,log2_min_cb_size,in,32,1,parent_func
hls_transform_unit_ex_hls,0,392,min_cb_width,in,32,1,parent_func
hls_transform_unit_ex_hls,0,460,slice_qp,in,8,1,parent_func
#hls_transform_unit_ex_hls_dup1,0,0,tid,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup1,0,0,x0,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup1,0,0,y0,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup1,0,0,xBase,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup1,0,0,yBase,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup1,0,0,log2_cb_size,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup1,0,0,log2_size,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup1,0,0,blk_idx,in,32,1,apcall_arg
hls_transform_unit_ex_hls_dup1,0,20,cbf_luma,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,16,cbf_data,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1160,chroma_qp_offset_list_len_minus1,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,1,12288,cb_qp_offset_list_Din_A,out,8,5,bram_xmem addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup1,1,12288,cb_qp_offset_list_Dout_A,in,8,5,bram_xmem addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup1,1,12296,cr_qp_offset_list_Din_A,out,8,5,bram_xmem addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup1,1,12296,cr_qp_offset_list_Dout_A,in,8,5,bram_xmem addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup1,0,1136,qp_bd_offset,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,1,286204,qp_y_tab_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup1,1,286204,qp_y_tab_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup1,0,560,pred_mode,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,1,336,hshift_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,340,hshift_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,344,hshift_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,348,vshift_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,352,vshift_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,356,vshift_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,0,484,tu_intra_pred_mode,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,488,tu_intra_pred_mode_c,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,572,cu_transquant_bypass_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,492,tu_cu_qp_offset_cb,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,496,tu_cu_qp_offset_cr,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,536,qp_y_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,536,qp_y_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,168,log2_trafo_size,out,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,56,log2_trafo_size_c_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,56,log2_trafo_size_c_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,48,scan_idx_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,48,scan_idx_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,52,scan_idx_c,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1140,cmdr_run_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1140,cmdr_run_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,1,1244,buf_data_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,1248,buf_data_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,1252,buf_data_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,1148,xm_linesize_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,1152,xm_linesize_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,1,1156,xm_linesize_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup1,0,1144,pixel_shift,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,160,nPbW,out,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,164,nPbH,out,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,580,cand_up,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,584,cand_left,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,588,cand_up_left,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,592,cand_up_right_sap,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,596,cand_up_right,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,600,cand_bottom_left_i,in,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,600,cand_bottom_left_o,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1412,cand_up_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1416,cand_left_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1420,cand_up_left_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1424,cand_up_right_sap_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1428,cand_up_right_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1432,cand_bottom_left_c_i,in,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,1432,cand_bottom_left_c_o,out,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,360,log2_ctb_size,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,604,ctb_up_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,608,ctb_left_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,612,ctb_up_left_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,616,ctb_up_right_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup1,0,620,end_of_tiles_x,in,16,1,parent_func
hls_transform_unit_ex_hls_dup1,0,624,end_of_tiles_y,in,16,1,parent_func
hls_transform_unit_ex_hls_dup1,0,472,tu_is_cu_chroma_qp_offset_coded_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,472,tu_is_cu_chroma_qp_offset_coded_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,476,tu_is_cu_qp_delta_coded_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,476,tu_is_cu_qp_delta_coded_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,468,tu_cu_qp_delta,out,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,500,tu_cross_pf,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,532,first_qp_group_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,532,first_qp_group_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,328,chroma_format_idc,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,448,cu_chroma_qp_offset_enabled_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup1,0,540,qPy_pred,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,368,log2_min_cb_size,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,392,min_cb_width,in,32,1,parent_func
hls_transform_unit_ex_hls_dup1,0,460,slice_qp,in,8,1,parent_func
#hls_transform_unit_ex_hls_dup2,0,0,tid,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup2,0,0,x0,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup2,0,0,y0,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup2,0,0,xBase,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup2,0,0,yBase,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup2,0,0,log2_cb_size,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup2,0,0,log2_size,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup2,0,0,blk_idx,in,32,1,apcall_arg
hls_transform_unit_ex_hls_dup2,0,20,cbf_luma,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,16,cbf_data,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1160,chroma_qp_offset_list_len_minus1,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,1,12288,cb_qp_offset_list_Din_A,out,8,5,bram_xmem addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup2,1,12288,cb_qp_offset_list_Dout_A,in,8,5,bram_xmem addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup2,1,12296,cr_qp_offset_list_Din_A,out,8,5,bram_xmem addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup2,1,12296,cr_qp_offset_list_Dout_A,in,8,5,bram_xmem addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup2,0,1136,qp_bd_offset,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,1,286204,qp_y_tab_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup2,1,286204,qp_y_tab_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup2,0,560,pred_mode,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,1,336,hshift_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,340,hshift_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,344,hshift_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,348,vshift_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,352,vshift_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,356,vshift_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,0,484,tu_intra_pred_mode,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,488,tu_intra_pred_mode_c,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,572,cu_transquant_bypass_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,492,tu_cu_qp_offset_cb,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,496,tu_cu_qp_offset_cr,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,536,qp_y_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,536,qp_y_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,168,log2_trafo_size,out,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,56,log2_trafo_size_c_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,56,log2_trafo_size_c_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,48,scan_idx_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,48,scan_idx_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,52,scan_idx_c,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1140,cmdr_run_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1140,cmdr_run_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,1,1244,buf_data_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,1248,buf_data_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,1252,buf_data_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,1148,xm_linesize_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,1152,xm_linesize_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,1,1156,xm_linesize_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup2,0,1144,pixel_shift,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,160,nPbW,out,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,164,nPbH,out,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,580,cand_up,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,584,cand_left,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,588,cand_up_left,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,592,cand_up_right_sap,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,596,cand_up_right,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,600,cand_bottom_left_i,in,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,600,cand_bottom_left_o,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1412,cand_up_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1416,cand_left_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1420,cand_up_left_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1424,cand_up_right_sap_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1428,cand_up_right_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1432,cand_bottom_left_c_i,in,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,1432,cand_bottom_left_c_o,out,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,360,log2_ctb_size,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,604,ctb_up_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,608,ctb_left_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,612,ctb_up_left_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,616,ctb_up_right_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup2,0,620,end_of_tiles_x,in,16,1,parent_func
hls_transform_unit_ex_hls_dup2,0,624,end_of_tiles_y,in,16,1,parent_func
hls_transform_unit_ex_hls_dup2,0,472,tu_is_cu_chroma_qp_offset_coded_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,472,tu_is_cu_chroma_qp_offset_coded_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,476,tu_is_cu_qp_delta_coded_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,476,tu_is_cu_qp_delta_coded_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,468,tu_cu_qp_delta,out,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,500,tu_cross_pf,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,532,first_qp_group_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,532,first_qp_group_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,328,chroma_format_idc,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,448,cu_chroma_qp_offset_enabled_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup2,0,540,qPy_pred,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,368,log2_min_cb_size,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,392,min_cb_width,in,32,1,parent_func
hls_transform_unit_ex_hls_dup2,0,460,slice_qp,in,8,1,parent_func
#hls_transform_unit_ex_hls_dup3,0,0,tid,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup3,0,0,x0,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup3,0,0,y0,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup3,0,0,xBase,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup3,0,0,yBase,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup3,0,0,log2_cb_size,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup3,0,0,log2_size,in,32,1,apcall_arg
#hls_transform_unit_ex_hls_dup3,0,0,blk_idx,in,32,1,apcall_arg
hls_transform_unit_ex_hls_dup3,0,20,cbf_luma,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,16,cbf_data,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1160,chroma_qp_offset_list_len_minus1,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,1,12288,cb_qp_offset_list_Din_A,out,8,5,bram_xmem addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup3,1,12288,cb_qp_offset_list_Dout_A,in,8,5,bram_xmem addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup3,1,12296,cr_qp_offset_list_Din_A,out,8,5,bram_xmem addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup3,1,12296,cr_qp_offset_list_Dout_A,in,8,5,bram_xmem addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup3,0,1136,qp_bd_offset,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,1,286204,qp_y_tab_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup3,1,286204,qp_y_tab_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_transform_unit_ex_hls_dup3,0,560,pred_mode,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,1,336,hshift_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,340,hshift_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,344,hshift_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,348,vshift_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,352,vshift_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,356,vshift_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,0,484,tu_intra_pred_mode,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,488,tu_intra_pred_mode_c,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,572,cu_transquant_bypass_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,492,tu_cu_qp_offset_cb,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,496,tu_cu_qp_offset_cr,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,536,qp_y_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,536,qp_y_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,168,log2_trafo_size,out,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,56,log2_trafo_size_c_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,56,log2_trafo_size_c_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,48,scan_idx_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,48,scan_idx_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,52,scan_idx_c,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1140,cmdr_run_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1140,cmdr_run_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,1,1244,buf_data_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,1248,buf_data_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,1252,buf_data_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,1148,xm_linesize_0,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,1152,xm_linesize_1,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,1,1156,xm_linesize_2,in,32,3,(complete partition) parent_func
hls_transform_unit_ex_hls_dup3,0,1144,pixel_shift,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,160,nPbW,out,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,164,nPbH,out,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,580,cand_up,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,584,cand_left,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,588,cand_up_left,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,592,cand_up_right_sap,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,596,cand_up_right,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,600,cand_bottom_left_i,in,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,600,cand_bottom_left_o,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1412,cand_up_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1416,cand_left_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1420,cand_up_left_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1424,cand_up_right_sap_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1428,cand_up_right_c,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1432,cand_bottom_left_c_i,in,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,1432,cand_bottom_left_c_o,out,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,360,log2_ctb_size,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,604,ctb_up_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,608,ctb_left_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,612,ctb_up_left_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,616,ctb_up_right_flag,in,1,1,parent_func
hls_transform_unit_ex_hls_dup3,0,620,end_of_tiles_x,in,16,1,parent_func
hls_transform_unit_ex_hls_dup3,0,624,end_of_tiles_y,in,16,1,parent_func
hls_transform_unit_ex_hls_dup3,0,472,tu_is_cu_chroma_qp_offset_coded_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,472,tu_is_cu_chroma_qp_offset_coded_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,476,tu_is_cu_qp_delta_coded_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,476,tu_is_cu_qp_delta_coded_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,468,tu_cu_qp_delta,out,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,500,tu_cross_pf,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,532,first_qp_group_i,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,532,first_qp_group_o,out,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,328,chroma_format_idc,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,448,cu_chroma_qp_offset_enabled_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_transform_unit_ex_hls_dup3,0,540,qPy_pred,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,368,log2_min_cb_size,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,392,min_cb_width,in,32,1,parent_func
hls_transform_unit_ex_hls_dup3,0,460,slice_qp,in,8,1,parent_func
#hls_transform_tree_hls,0,0,tid,in,32,1,apcall_arg
#hls_transform_tree_hls,0,0,x0,in,32,1,apcall_arg
#hls_transform_tree_hls,0,0,y0,in,32,1,apcall_arg
hls_transform_tree_hls,0,168,log2_trafo_size,out,32,1,parent_func
#hls_transform_tree_hls,0,0,s_log2_trafo_size,in,32,1,apcall_arg
hls_transform_tree_hls,0,12,split_transform_flag,out,8,1,parent_func
hls_transform_tree_hls,0,16,cbf_data,out,8,1,parent_func
hls_transform_tree_hls,0,1164,disable_deblocking_filter_flag,in,8,1,parent_func
hls_transform_tree_hls,0,440,transquant_bypass_enable_flag,in,8,1,parent_func
hls_transform_tree_hls,0,572,cu_transquant_bypass_flag,in,8,1,parent_func
hls_transform_tree_hls,0,480,tu_chroma_mode_c,out,32,1,parent_func
hls_transform_tree_hls,0,484,tu_intra_pred_mode,out,32,1,parent_func
hls_transform_tree_hls,0,488,tu_intra_pred_mode_c,out,32,1,parent_func
hls_transform_tree_hls,1,508,pu_chroma_mode_c_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,509,pu_chroma_mode_c_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,510,pu_chroma_mode_c_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,511,pu_chroma_mode_c_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,512,pu_intra_pred_mode_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,513,pu_intra_pred_mode_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,514,pu_intra_pred_mode_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,515,pu_intra_pred_mode_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,516,pu_intra_pred_mode_c_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,517,pu_intra_pred_mode_c_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,518,pu_intra_pred_mode_c_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,1,519,pu_intra_pred_mode_c_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls,0,568,intra_split_flag,in,8,1,parent_func
hls_transform_tree_hls,0,364,log2_max_trafo_size,in,32,1,parent_func
hls_transform_tree_hls,0,376,log2_min_tb_size,in,32,1,parent_func
hls_transform_tree_hls,0,576,max_trafo_depth,in,8,1,parent_func
hls_transform_tree_hls,0,380,max_transform_hierarchy_depth_inter,in,32,1,parent_func
hls_transform_tree_hls,0,560,pred_mode,in,8,1,parent_func
hls_transform_tree_hls,0,564,part_mode,in,8,1,parent_func
hls_transform_tree_hls,0,324,chroma_array_type,in,32,1,parent_func
hls_transform_tree_hls,0,328,chroma_format_idc,in,32,1,parent_func
hls_transform_tree_hls,0,20,cbf_luma_i,in,32,1,parent_func
hls_transform_tree_hls,0,20,cbf_luma_o,out,32,1,parent_func
hls_transform_tree_hls,0,1260,rv_hls_transform_unit,in,32,1,parent_func
hls_transform_tree_hls,0,1264,rv_ff_hevc_deblocking_boundary_strengths,in,32,1,parent_func
hls_transform_tree_hls,0,1268,rv_set_deblocking_bypass,in,32,1,parent_func
hls_transform_tree_hls,0,1240,rv_callback_flag,in,32,1,parent_func
hls_transform_tree_hls,0,388,min_tb_width,in,32,1,parent_func
hls_transform_tree_hls,0,360,log2_ctb_size,in,32,1,parent_func
hls_transform_tree_hls,1,286200,cbf_luma_base_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_transform_tree_hls,1,286200,cbf_luma_base_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_transform_tree_hls,1,286212,is_pcm_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_transform_tree_hls,1,286212,is_pcm_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_transform_tree_hls,0,32,cb_size,in,32,1,parent_func
hls_transform_tree_hls,0,408,width,in,32,1,parent_func
hls_transform_tree_hls,0,332,height,in,32,1,parent_func
hls_transform_tree_hls,0,372,log2_min_pu_size,in,32,1,parent_func
hls_transform_tree_hls,0,396,min_pu_width,in,32,1,parent_func
#hls_transform_tree_hls_dup1,0,0,tid,in,32,1,apcall_arg
#hls_transform_tree_hls_dup1,0,0,x0,in,32,1,apcall_arg
#hls_transform_tree_hls_dup1,0,0,y0,in,32,1,apcall_arg
hls_transform_tree_hls_dup1,0,168,log2_trafo_size,out,32,1,parent_func
#hls_transform_tree_hls_dup1,0,0,s_log2_trafo_size,in,32,1,apcall_arg
hls_transform_tree_hls_dup1,0,12,split_transform_flag,out,8,1,parent_func
hls_transform_tree_hls_dup1,0,16,cbf_data,out,8,1,parent_func
hls_transform_tree_hls_dup1,0,1164,disable_deblocking_filter_flag,in,8,1,parent_func
hls_transform_tree_hls_dup1,0,440,transquant_bypass_enable_flag,in,8,1,parent_func
hls_transform_tree_hls_dup1,0,572,cu_transquant_bypass_flag,in,8,1,parent_func
hls_transform_tree_hls_dup1,0,480,tu_chroma_mode_c,out,32,1,parent_func
hls_transform_tree_hls_dup1,0,484,tu_intra_pred_mode,out,32,1,parent_func
hls_transform_tree_hls_dup1,0,488,tu_intra_pred_mode_c,out,32,1,parent_func
hls_transform_tree_hls_dup1,1,508,pu_chroma_mode_c_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,509,pu_chroma_mode_c_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,510,pu_chroma_mode_c_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,511,pu_chroma_mode_c_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,512,pu_intra_pred_mode_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,513,pu_intra_pred_mode_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,514,pu_intra_pred_mode_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,515,pu_intra_pred_mode_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,516,pu_intra_pred_mode_c_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,517,pu_intra_pred_mode_c_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,518,pu_intra_pred_mode_c_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,1,519,pu_intra_pred_mode_c_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup1,0,568,intra_split_flag,in,8,1,parent_func
hls_transform_tree_hls_dup1,0,364,log2_max_trafo_size,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,376,log2_min_tb_size,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,576,max_trafo_depth,in,8,1,parent_func
hls_transform_tree_hls_dup1,0,380,max_transform_hierarchy_depth_inter,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,560,pred_mode,in,8,1,parent_func
hls_transform_tree_hls_dup1,0,564,part_mode,in,8,1,parent_func
hls_transform_tree_hls_dup1,0,324,chroma_array_type,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,328,chroma_format_idc,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,20,cbf_luma_i,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,20,cbf_luma_o,out,32,1,parent_func
hls_transform_tree_hls_dup1,0,1260,rv_hls_transform_unit,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,1264,rv_ff_hevc_deblocking_boundary_strengths,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,1268,rv_set_deblocking_bypass,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,1240,rv_callback_flag,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,388,min_tb_width,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,360,log2_ctb_size,in,32,1,parent_func
hls_transform_tree_hls_dup1,1,286200,cbf_luma_base_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_transform_tree_hls_dup1,1,286200,cbf_luma_base_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_transform_tree_hls_dup1,1,286212,is_pcm_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_transform_tree_hls_dup1,1,286212,is_pcm_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_transform_tree_hls_dup1,0,32,cb_size,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,408,width,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,332,height,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,372,log2_min_pu_size,in,32,1,parent_func
hls_transform_tree_hls_dup1,0,396,min_pu_width,in,32,1,parent_func
#hls_transform_tree_hls_dup2,0,0,tid,in,32,1,apcall_arg
#hls_transform_tree_hls_dup2,0,0,x0,in,32,1,apcall_arg
#hls_transform_tree_hls_dup2,0,0,y0,in,32,1,apcall_arg
hls_transform_tree_hls_dup2,0,168,log2_trafo_size,out,32,1,parent_func
#hls_transform_tree_hls_dup2,0,0,s_log2_trafo_size,in,32,1,apcall_arg
hls_transform_tree_hls_dup2,0,12,split_transform_flag,out,8,1,parent_func
hls_transform_tree_hls_dup2,0,16,cbf_data,out,8,1,parent_func
hls_transform_tree_hls_dup2,0,1164,disable_deblocking_filter_flag,in,8,1,parent_func
hls_transform_tree_hls_dup2,0,440,transquant_bypass_enable_flag,in,8,1,parent_func
hls_transform_tree_hls_dup2,0,572,cu_transquant_bypass_flag,in,8,1,parent_func
hls_transform_tree_hls_dup2,0,480,tu_chroma_mode_c,out,32,1,parent_func
hls_transform_tree_hls_dup2,0,484,tu_intra_pred_mode,out,32,1,parent_func
hls_transform_tree_hls_dup2,0,488,tu_intra_pred_mode_c,out,32,1,parent_func
hls_transform_tree_hls_dup2,1,508,pu_chroma_mode_c_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,509,pu_chroma_mode_c_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,510,pu_chroma_mode_c_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,511,pu_chroma_mode_c_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,512,pu_intra_pred_mode_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,513,pu_intra_pred_mode_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,514,pu_intra_pred_mode_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,515,pu_intra_pred_mode_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,516,pu_intra_pred_mode_c_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,517,pu_intra_pred_mode_c_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,518,pu_intra_pred_mode_c_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,1,519,pu_intra_pred_mode_c_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup2,0,568,intra_split_flag,in,8,1,parent_func
hls_transform_tree_hls_dup2,0,364,log2_max_trafo_size,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,376,log2_min_tb_size,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,576,max_trafo_depth,in,8,1,parent_func
hls_transform_tree_hls_dup2,0,380,max_transform_hierarchy_depth_inter,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,560,pred_mode,in,8,1,parent_func
hls_transform_tree_hls_dup2,0,564,part_mode,in,8,1,parent_func
hls_transform_tree_hls_dup2,0,324,chroma_array_type,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,328,chroma_format_idc,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,20,cbf_luma_i,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,20,cbf_luma_o,out,32,1,parent_func
hls_transform_tree_hls_dup2,0,1260,rv_hls_transform_unit,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,1264,rv_ff_hevc_deblocking_boundary_strengths,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,1268,rv_set_deblocking_bypass,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,1240,rv_callback_flag,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,388,min_tb_width,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,360,log2_ctb_size,in,32,1,parent_func
hls_transform_tree_hls_dup2,1,286200,cbf_luma_base_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_transform_tree_hls_dup2,1,286200,cbf_luma_base_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_transform_tree_hls_dup2,1,286212,is_pcm_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_transform_tree_hls_dup2,1,286212,is_pcm_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_transform_tree_hls_dup2,0,32,cb_size,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,408,width,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,332,height,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,372,log2_min_pu_size,in,32,1,parent_func
hls_transform_tree_hls_dup2,0,396,min_pu_width,in,32,1,parent_func
#hls_transform_tree_hls_dup3,0,0,tid,in,32,1,apcall_arg
#hls_transform_tree_hls_dup3,0,0,x0,in,32,1,apcall_arg
#hls_transform_tree_hls_dup3,0,0,y0,in,32,1,apcall_arg
hls_transform_tree_hls_dup3,0,168,log2_trafo_size,out,32,1,parent_func
#hls_transform_tree_hls_dup3,0,0,s_log2_trafo_size,in,32,1,apcall_arg
hls_transform_tree_hls_dup3,0,12,split_transform_flag,out,8,1,parent_func
hls_transform_tree_hls_dup3,0,16,cbf_data,out,8,1,parent_func
hls_transform_tree_hls_dup3,0,1164,disable_deblocking_filter_flag,in,8,1,parent_func
hls_transform_tree_hls_dup3,0,440,transquant_bypass_enable_flag,in,8,1,parent_func
hls_transform_tree_hls_dup3,0,572,cu_transquant_bypass_flag,in,8,1,parent_func
hls_transform_tree_hls_dup3,0,480,tu_chroma_mode_c,out,32,1,parent_func
hls_transform_tree_hls_dup3,0,484,tu_intra_pred_mode,out,32,1,parent_func
hls_transform_tree_hls_dup3,0,488,tu_intra_pred_mode_c,out,32,1,parent_func
hls_transform_tree_hls_dup3,1,508,pu_chroma_mode_c_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,509,pu_chroma_mode_c_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,510,pu_chroma_mode_c_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,511,pu_chroma_mode_c_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,512,pu_intra_pred_mode_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,513,pu_intra_pred_mode_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,514,pu_intra_pred_mode_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,515,pu_intra_pred_mode_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,516,pu_intra_pred_mode_c_0,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,517,pu_intra_pred_mode_c_1,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,518,pu_intra_pred_mode_c_2,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,1,519,pu_intra_pred_mode_c_3,in,8,4,(complete partition) parent_func
hls_transform_tree_hls_dup3,0,568,intra_split_flag,in,8,1,parent_func
hls_transform_tree_hls_dup3,0,364,log2_max_trafo_size,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,376,log2_min_tb_size,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,576,max_trafo_depth,in,8,1,parent_func
hls_transform_tree_hls_dup3,0,380,max_transform_hierarchy_depth_inter,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,560,pred_mode,in,8,1,parent_func
hls_transform_tree_hls_dup3,0,564,part_mode,in,8,1,parent_func
hls_transform_tree_hls_dup3,0,324,chroma_array_type,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,328,chroma_format_idc,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,20,cbf_luma_i,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,20,cbf_luma_o,out,32,1,parent_func
hls_transform_tree_hls_dup3,0,1260,rv_hls_transform_unit,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,1264,rv_ff_hevc_deblocking_boundary_strengths,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,1268,rv_set_deblocking_bypass,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,1240,rv_callback_flag,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,388,min_tb_width,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,360,log2_ctb_size,in,32,1,parent_func
hls_transform_tree_hls_dup3,1,286200,cbf_luma_base_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_transform_tree_hls_dup3,1,286200,cbf_luma_base_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_transform_tree_hls_dup3,1,286212,is_pcm_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_transform_tree_hls_dup3,1,286212,is_pcm_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_transform_tree_hls_dup3,0,32,cb_size,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,408,width,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,332,height,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,372,log2_min_pu_size,in,32,1,parent_func
hls_transform_tree_hls_dup3,0,396,min_pu_width,in,32,1,parent_func
#hls_coding_quadtree_hls,0,0,tid,in,32,1,apcall_arg
#hls_coding_quadtree_hls,0,0,x0,in,32,1,apcall_arg
#hls_coding_quadtree_hls,0,0,y0,in,32,1,apcall_arg
#hls_coding_quadtree_hls,0,0,log2_cb_size,in,32,1,apcall_arg
#hls_coding_quadtree_hls,0,0,cb_depth,in,32,1,apcall_arg
hls_coding_quadtree_hls,0,300,x1_i,in,32,1,parent_func
hls_coding_quadtree_hls,0,300,x1_o,out,32,1,parent_func
hls_coding_quadtree_hls,0,304,y1_i,in,32,1,parent_func
hls_coding_quadtree_hls,0,304,y1_o,out,32,1,parent_func
hls_coding_quadtree_hls,0,312,log2_cb_size_minus_one_i,in,32,1,parent_func
hls_coding_quadtree_hls,0,312,log2_cb_size_minus_one_o,out,32,1,parent_func
hls_coding_quadtree_hls,0,316,cb_depth_plus_one_i,in,32,1,parent_func
hls_coding_quadtree_hls,0,316,cb_depth_plus_one_o,out,32,1,parent_func
hls_coding_quadtree_hls,0,408,width,in,32,1,parent_func
hls_coding_quadtree_hls,0,332,height,in,32,1,parent_func
hls_coding_quadtree_hls,0,292,split_cu_flag_i,in,32,1,parent_func
hls_coding_quadtree_hls,0,292,split_cu_flag_o,out,32,1,parent_func
hls_coding_quadtree_hls,0,296,more_data_i,in,32,1,parent_func
hls_coding_quadtree_hls,0,296,more_data_o,out,32,1,parent_func
hls_coding_quadtree_hls,0,1256,rv_hls_coding_unit,in,32,1,parent_func
hls_coding_quadtree_hls,0,1240,rv_callback_flag,in,32,1,parent_func
hls_coding_quadtree_hls,0,360,log2_ctb_size,in,32,1,parent_func
hls_coding_quadtree_hls,0,540,qPy_pred,out,32,1,parent_func
hls_coding_quadtree_hls,0,536,qp_y,in,8,1,parent_func
hls_coding_quadtree_hls,0,40,qp_block_mask_i,in,32,1,parent_func
hls_coding_quadtree_hls,0,40,qp_block_mask_o,out,32,1,parent_func
hls_coding_quadtree_hls,0,308,cb_size_split_i,in,32,1,parent_func
hls_coding_quadtree_hls,0,308,cb_size_split_o,out,32,1,parent_func
hls_coding_quadtree_hls,0,368,log2_min_cb_size,in,32,1,parent_func
hls_coding_quadtree_hls,0,392,min_cb_width,in,32,1,parent_func
hls_coding_quadtree_hls,0,476,tu_is_cu_qp_delta_coded,out,8,1,parent_func
hls_coding_quadtree_hls,0,468,tu_cu_qp_delta,out,32,1,parent_func
hls_coding_quadtree_hls,0,472,tu_is_cu_chroma_qp_offset_coded,out,8,1,parent_func
hls_coding_quadtree_hls,0,464,depth,out,32,1,parent_func
hls_coding_quadtree_hls,0,608,ctb_left_flag,in,8,1,parent_func
hls_coding_quadtree_hls,0,604,ctb_up_flag,in,8,1,parent_func
hls_coding_quadtree_hls,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_coding_quadtree_hls,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_coding_quadtree_hls,0,448,cu_chroma_qp_offset_enabled_flag,in,8,1,parent_func
hls_coding_quadtree_hls,0,432,diff_cu_chroma_qp_offset_depth,in,8,1,parent_func
hls_coding_quadtree_hls,1,286208,tab_ct_depth_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_quadtree_hls,1,286208,tab_ct_depth_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
#hls_coding_quadtree_hls_dup1,0,0,tid,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup1,0,0,x0,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup1,0,0,y0,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup1,0,0,log2_cb_size,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup1,0,0,cb_depth,in,32,1,apcall_arg
hls_coding_quadtree_hls_dup1,0,300,x1_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,300,x1_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,304,y1_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,304,y1_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,312,log2_cb_size_minus_one_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,312,log2_cb_size_minus_one_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,316,cb_depth_plus_one_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,316,cb_depth_plus_one_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,408,width,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,332,height,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,292,split_cu_flag_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,292,split_cu_flag_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,296,more_data_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,296,more_data_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,1256,rv_hls_coding_unit,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,1240,rv_callback_flag,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,360,log2_ctb_size,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,540,qPy_pred,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,536,qp_y,in,8,1,parent_func
hls_coding_quadtree_hls_dup1,0,40,qp_block_mask_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,40,qp_block_mask_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,308,cb_size_split_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,308,cb_size_split_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,368,log2_min_cb_size,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,392,min_cb_width,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,476,tu_is_cu_qp_delta_coded,out,8,1,parent_func
hls_coding_quadtree_hls_dup1,0,468,tu_cu_qp_delta,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,472,tu_is_cu_chroma_qp_offset_coded,out,8,1,parent_func
hls_coding_quadtree_hls_dup1,0,464,depth,out,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,608,ctb_left_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup1,0,604,ctb_up_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup1,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup1,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_coding_quadtree_hls_dup1,0,448,cu_chroma_qp_offset_enabled_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup1,0,432,diff_cu_chroma_qp_offset_depth,in,8,1,parent_func
hls_coding_quadtree_hls_dup1,1,286208,tab_ct_depth_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_quadtree_hls_dup1,1,286208,tab_ct_depth_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
#hls_coding_quadtree_hls_dup2,0,0,tid,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup2,0,0,x0,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup2,0,0,y0,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup2,0,0,log2_cb_size,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup2,0,0,cb_depth,in,32,1,apcall_arg
hls_coding_quadtree_hls_dup2,0,300,x1_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,300,x1_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,304,y1_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,304,y1_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,312,log2_cb_size_minus_one_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,312,log2_cb_size_minus_one_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,316,cb_depth_plus_one_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,316,cb_depth_plus_one_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,408,width,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,332,height,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,292,split_cu_flag_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,292,split_cu_flag_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,296,more_data_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,296,more_data_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,1256,rv_hls_coding_unit,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,1240,rv_callback_flag,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,360,log2_ctb_size,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,540,qPy_pred,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,536,qp_y,in,8,1,parent_func
hls_coding_quadtree_hls_dup2,0,40,qp_block_mask_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,40,qp_block_mask_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,308,cb_size_split_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,308,cb_size_split_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,368,log2_min_cb_size,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,392,min_cb_width,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,476,tu_is_cu_qp_delta_coded,out,8,1,parent_func
hls_coding_quadtree_hls_dup2,0,468,tu_cu_qp_delta,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,472,tu_is_cu_chroma_qp_offset_coded,out,8,1,parent_func
hls_coding_quadtree_hls_dup2,0,464,depth,out,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,608,ctb_left_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup2,0,604,ctb_up_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup2,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup2,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_coding_quadtree_hls_dup2,0,448,cu_chroma_qp_offset_enabled_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup2,0,432,diff_cu_chroma_qp_offset_depth,in,8,1,parent_func
hls_coding_quadtree_hls_dup2,1,286208,tab_ct_depth_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_quadtree_hls_dup2,1,286208,tab_ct_depth_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
#hls_coding_quadtree_hls_dup3,0,0,tid,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup3,0,0,x0,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup3,0,0,y0,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup3,0,0,log2_cb_size,in,32,1,apcall_arg
#hls_coding_quadtree_hls_dup3,0,0,cb_depth,in,32,1,apcall_arg
hls_coding_quadtree_hls_dup3,0,300,x1_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,300,x1_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,304,y1_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,304,y1_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,312,log2_cb_size_minus_one_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,312,log2_cb_size_minus_one_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,316,cb_depth_plus_one_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,316,cb_depth_plus_one_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,408,width,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,332,height,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,292,split_cu_flag_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,292,split_cu_flag_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,296,more_data_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,296,more_data_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,1256,rv_hls_coding_unit,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,1240,rv_callback_flag,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,360,log2_ctb_size,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,540,qPy_pred,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,536,qp_y,in,8,1,parent_func
hls_coding_quadtree_hls_dup3,0,40,qp_block_mask_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,40,qp_block_mask_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,308,cb_size_split_i,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,308,cb_size_split_o,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,368,log2_min_cb_size,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,392,min_cb_width,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,476,tu_is_cu_qp_delta_coded,out,8,1,parent_func
hls_coding_quadtree_hls_dup3,0,468,tu_cu_qp_delta,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,472,tu_is_cu_chroma_qp_offset_coded,out,8,1,parent_func
hls_coding_quadtree_hls_dup3,0,464,depth,out,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,608,ctb_left_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup3,0,604,ctb_up_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup3,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup3,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_coding_quadtree_hls_dup3,0,448,cu_chroma_qp_offset_enabled_flag,in,8,1,parent_func
hls_coding_quadtree_hls_dup3,0,432,diff_cu_chroma_qp_offset_depth,in,8,1,parent_func
hls_coding_quadtree_hls_dup3,1,286208,tab_ct_depth_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_quadtree_hls_dup3,1,286208,tab_ct_depth_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
#hls_coding_unit_hls,0,0,tid,in,32,1,apcall_arg
#hls_coding_unit_hls,0,0,x0,in,32,1,apcall_arg
#hls_coding_unit_hls,0,0,y0,in,32,1,apcall_arg
#hls_coding_unit_hls,0,0,log2_cb_size,in,32,1,apcall_arg
hls_coding_unit_hls,0,420,loop_filter_disable_flag,in,8,1,parent_func
hls_coding_unit_hls,0,380,max_transform_hierarchy_depth_inter,in,32,1,parent_func
hls_coding_unit_hls,0,1164,disable_deblocking_filter_flag,in,8,1,parent_func
hls_coding_unit_hls,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_coding_unit_hls,0,476,tu_is_cu_qp_delta_coded,in,8,1,parent_func
hls_coding_unit_hls,0,572,cu_transquant_bypass_flag_i,in,8,1,parent_func
hls_coding_unit_hls,0,572,cu_transquant_bypass_flag_o,out,8,1,parent_func
hls_coding_unit_hls,0,28,pcm_flag_i,in,1,1,parent_func
hls_coding_unit_hls,0,28,pcm_flag_o,out,1,1,parent_func
hls_coding_unit_hls,0,504,merge_flag,in,8,1,parent_func
hls_coding_unit_hls,0,560,pred_mode_i,in,8,1,parent_func
hls_coding_unit_hls,0,560,pred_mode_o,out,8,1,parent_func
hls_coding_unit_hls,0,564,part_mode_i,in,8,1,parent_func
hls_coding_unit_hls,0,564,part_mode_o,out,8,1,parent_func
hls_coding_unit_hls,0,576,max_trafo_depth,out,8,1,parent_func
hls_coding_unit_hls,0,32,cb_size_i,in,32,1,parent_func
hls_coding_unit_hls,0,32,cb_size_o,out,32,1,parent_func
hls_coding_unit_hls,0,44,idx_i,in,32,1,parent_func
hls_coding_unit_hls,0,44,idx_o,out,32,1,parent_func
hls_coding_unit_hls,0,1168,xm_xBase,out,32,1,parent_func
hls_coding_unit_hls,0,1172,xm_yBase,out,32,1,parent_func
hls_coding_unit_hls,0,1176,xm_cb_xBase,out,32,1,parent_func
hls_coding_unit_hls,0,1180,xm_cb_yBase,out,32,1,parent_func
hls_coding_unit_hls,0,1184,xm_log2_cb_size,out,32,1,parent_func
hls_coding_unit_hls,0,1268,rv_set_deblocking_bypass,in,32,1,parent_func
hls_coding_unit_hls,0,1264,rv_ff_hevc_deblocking_boundary_strengths,in,32,1,parent_func
hls_coding_unit_hls,0,1272,rv_hls_pcm_sample,in,32,1,parent_func
hls_coding_unit_hls,0,1276,rv_hls_prediction_unit,in,32,1,parent_func
hls_coding_unit_hls,0,1280,rv_hls_intra_prediction_unit,in,32,1,parent_func
hls_coding_unit_hls,0,1284,rv_hls_transform_tree,in,32,1,parent_func
hls_coding_unit_hls,0,1240,rv_callback_flag,in,32,1,parent_func
hls_coding_unit_hls,0,36,length_r,out,32,1,parent_func
hls_coding_unit_hls,0,544,xm_x,out,32,1,parent_func
hls_coding_unit_hls,0,548,xm_y,out,32,1,parent_func
hls_coding_unit_hls,1,512,pu_intra_pred_mode_0,out,8,4,(complete partition) parent_func
hls_coding_unit_hls,1,513,pu_intra_pred_mode_1,out,8,4,(complete partition) parent_func
hls_coding_unit_hls,1,514,pu_intra_pred_mode_2,out,8,4,(complete partition) parent_func
hls_coding_unit_hls,1,515,pu_intra_pred_mode_3,out,8,4,(complete partition) parent_func
hls_coding_unit_hls,0,540,qPy_pred,out,32,1,parent_func
hls_coding_unit_hls,0,24,skip_flag_start,out,32,1,parent_func
hls_coding_unit_hls,0,368,log2_min_cb_size,in,32,1,parent_func
hls_coding_unit_hls,0,360,log2_ctb_size,in,32,1,parent_func
hls_coding_unit_hls,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_coding_unit_hls,0,536,qp_y,in,8,1,parent_func
hls_coding_unit_hls,0,440,transquant_bypass_enable_flag,in,8,1,parent_func
hls_coding_unit_hls,0,392,min_cb_width,in,32,1,parent_func
hls_coding_unit_hls,0,568,intra_split_flag,out,8,1,parent_func
hls_coding_unit_hls,0,452,slice_type,in,8,1,parent_func
hls_coding_unit_hls,0,608,ctb_left_flag,in,8,1,parent_func
hls_coding_unit_hls,0,604,ctb_up_flag,in,8,1,parent_func
hls_coding_unit_hls,0,320,amp_enabled_flag,in,8,1,parent_func
hls_coding_unit_hls,0,400,pcm_enabled_flag,in,32,1,parent_func
hls_coding_unit_hls,0,412,log2_min_pcm_cb_size,in,32,1,parent_func
hls_coding_unit_hls,0,416,log2_max_pcm_cb_size,in,32,1,parent_func
hls_coding_unit_hls,0,464,depth,in,32,1,parent_func
hls_coding_unit_hls,1,286176,skip_flag_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls,1,286176,skip_flag_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls,1,286204,qp_y_tab_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls,1,286204,qp_y_tab_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls,1,286208,tab_ct_depth_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls,1,286208,tab_ct_depth_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
#hls_coding_unit_hls_dup1,0,0,tid,in,32,1,apcall_arg
#hls_coding_unit_hls_dup1,0,0,x0,in,32,1,apcall_arg
#hls_coding_unit_hls_dup1,0,0,y0,in,32,1,apcall_arg
#hls_coding_unit_hls_dup1,0,0,log2_cb_size,in,32,1,apcall_arg
hls_coding_unit_hls_dup1,0,420,loop_filter_disable_flag,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,380,max_transform_hierarchy_depth_inter,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,1164,disable_deblocking_filter_flag,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,476,tu_is_cu_qp_delta_coded,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,572,cu_transquant_bypass_flag_i,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,572,cu_transquant_bypass_flag_o,out,8,1,parent_func
hls_coding_unit_hls_dup1,0,28,pcm_flag_i,in,1,1,parent_func
hls_coding_unit_hls_dup1,0,28,pcm_flag_o,out,1,1,parent_func
hls_coding_unit_hls_dup1,0,504,merge_flag,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,560,pred_mode_i,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,560,pred_mode_o,out,8,1,parent_func
hls_coding_unit_hls_dup1,0,564,part_mode_i,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,564,part_mode_o,out,8,1,parent_func
hls_coding_unit_hls_dup1,0,576,max_trafo_depth,out,8,1,parent_func
hls_coding_unit_hls_dup1,0,32,cb_size_i,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,32,cb_size_o,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,44,idx_i,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,44,idx_o,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,1168,xm_xBase,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,1172,xm_yBase,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,1176,xm_cb_xBase,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,1180,xm_cb_yBase,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,1184,xm_log2_cb_size,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,1268,rv_set_deblocking_bypass,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,1264,rv_ff_hevc_deblocking_boundary_strengths,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,1272,rv_hls_pcm_sample,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,1276,rv_hls_prediction_unit,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,1280,rv_hls_intra_prediction_unit,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,1284,rv_hls_transform_tree,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,1240,rv_callback_flag,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,36,length_r,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,544,xm_x,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,548,xm_y,out,32,1,parent_func
hls_coding_unit_hls_dup1,1,512,pu_intra_pred_mode_0,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup1,1,513,pu_intra_pred_mode_1,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup1,1,514,pu_intra_pred_mode_2,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup1,1,515,pu_intra_pred_mode_3,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup1,0,540,qPy_pred,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,24,skip_flag_start,out,32,1,parent_func
hls_coding_unit_hls_dup1,0,368,log2_min_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,360,log2_ctb_size,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,536,qp_y,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,440,transquant_bypass_enable_flag,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,392,min_cb_width,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,568,intra_split_flag,out,8,1,parent_func
hls_coding_unit_hls_dup1,0,452,slice_type,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,608,ctb_left_flag,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,604,ctb_up_flag,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,320,amp_enabled_flag,in,8,1,parent_func
hls_coding_unit_hls_dup1,0,400,pcm_enabled_flag,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,412,log2_min_pcm_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,416,log2_max_pcm_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup1,0,464,depth,in,32,1,parent_func
hls_coding_unit_hls_dup1,1,286176,skip_flag_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls_dup1,1,286176,skip_flag_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls_dup1,1,286204,qp_y_tab_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls_dup1,1,286204,qp_y_tab_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls_dup1,1,286208,tab_ct_depth_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls_dup1,1,286208,tab_ct_depth_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
#hls_coding_unit_hls_dup2,0,0,tid,in,32,1,apcall_arg
#hls_coding_unit_hls_dup2,0,0,x0,in,32,1,apcall_arg
#hls_coding_unit_hls_dup2,0,0,y0,in,32,1,apcall_arg
#hls_coding_unit_hls_dup2,0,0,log2_cb_size,in,32,1,apcall_arg
hls_coding_unit_hls_dup2,0,420,loop_filter_disable_flag,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,380,max_transform_hierarchy_depth_inter,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,1164,disable_deblocking_filter_flag,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,476,tu_is_cu_qp_delta_coded,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,572,cu_transquant_bypass_flag_i,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,572,cu_transquant_bypass_flag_o,out,8,1,parent_func
hls_coding_unit_hls_dup2,0,28,pcm_flag_i,in,1,1,parent_func
hls_coding_unit_hls_dup2,0,28,pcm_flag_o,out,1,1,parent_func
hls_coding_unit_hls_dup2,0,504,merge_flag,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,560,pred_mode_i,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,560,pred_mode_o,out,8,1,parent_func
hls_coding_unit_hls_dup2,0,564,part_mode_i,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,564,part_mode_o,out,8,1,parent_func
hls_coding_unit_hls_dup2,0,576,max_trafo_depth,out,8,1,parent_func
hls_coding_unit_hls_dup2,0,32,cb_size_i,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,32,cb_size_o,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,44,idx_i,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,44,idx_o,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,1168,xm_xBase,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,1172,xm_yBase,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,1176,xm_cb_xBase,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,1180,xm_cb_yBase,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,1184,xm_log2_cb_size,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,1268,rv_set_deblocking_bypass,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,1264,rv_ff_hevc_deblocking_boundary_strengths,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,1272,rv_hls_pcm_sample,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,1276,rv_hls_prediction_unit,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,1280,rv_hls_intra_prediction_unit,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,1284,rv_hls_transform_tree,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,1240,rv_callback_flag,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,36,length_r,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,544,xm_x,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,548,xm_y,out,32,1,parent_func
hls_coding_unit_hls_dup2,1,512,pu_intra_pred_mode_0,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup2,1,513,pu_intra_pred_mode_1,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup2,1,514,pu_intra_pred_mode_2,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup2,1,515,pu_intra_pred_mode_3,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup2,0,540,qPy_pred,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,24,skip_flag_start,out,32,1,parent_func
hls_coding_unit_hls_dup2,0,368,log2_min_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,360,log2_ctb_size,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,536,qp_y,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,440,transquant_bypass_enable_flag,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,392,min_cb_width,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,568,intra_split_flag,out,8,1,parent_func
hls_coding_unit_hls_dup2,0,452,slice_type,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,608,ctb_left_flag,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,604,ctb_up_flag,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,320,amp_enabled_flag,in,8,1,parent_func
hls_coding_unit_hls_dup2,0,400,pcm_enabled_flag,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,412,log2_min_pcm_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,416,log2_max_pcm_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup2,0,464,depth,in,32,1,parent_func
hls_coding_unit_hls_dup2,1,286176,skip_flag_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls_dup2,1,286176,skip_flag_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls_dup2,1,286204,qp_y_tab_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls_dup2,1,286204,qp_y_tab_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls_dup2,1,286208,tab_ct_depth_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls_dup2,1,286208,tab_ct_depth_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
#hls_coding_unit_hls_dup3,0,0,tid,in,32,1,apcall_arg
#hls_coding_unit_hls_dup3,0,0,x0,in,32,1,apcall_arg
#hls_coding_unit_hls_dup3,0,0,y0,in,32,1,apcall_arg
#hls_coding_unit_hls_dup3,0,0,log2_cb_size,in,32,1,apcall_arg
hls_coding_unit_hls_dup3,0,420,loop_filter_disable_flag,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,380,max_transform_hierarchy_depth_inter,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,1164,disable_deblocking_filter_flag,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,428,cu_qp_delta_enabled_flag,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,476,tu_is_cu_qp_delta_coded,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,572,cu_transquant_bypass_flag_i,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,572,cu_transquant_bypass_flag_o,out,8,1,parent_func
hls_coding_unit_hls_dup3,0,28,pcm_flag_i,in,1,1,parent_func
hls_coding_unit_hls_dup3,0,28,pcm_flag_o,out,1,1,parent_func
hls_coding_unit_hls_dup3,0,504,merge_flag,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,560,pred_mode_i,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,560,pred_mode_o,out,8,1,parent_func
hls_coding_unit_hls_dup3,0,564,part_mode_i,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,564,part_mode_o,out,8,1,parent_func
hls_coding_unit_hls_dup3,0,576,max_trafo_depth,out,8,1,parent_func
hls_coding_unit_hls_dup3,0,32,cb_size_i,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,32,cb_size_o,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,44,idx_i,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,44,idx_o,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,1168,xm_xBase,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,1172,xm_yBase,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,1176,xm_cb_xBase,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,1180,xm_cb_yBase,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,1184,xm_log2_cb_size,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,1268,rv_set_deblocking_bypass,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,1264,rv_ff_hevc_deblocking_boundary_strengths,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,1272,rv_hls_pcm_sample,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,1276,rv_hls_prediction_unit,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,1280,rv_hls_intra_prediction_unit,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,1284,rv_hls_transform_tree,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,1240,rv_callback_flag,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,36,length_r,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,544,xm_x,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,548,xm_y,out,32,1,parent_func
hls_coding_unit_hls_dup3,1,512,pu_intra_pred_mode_0,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup3,1,513,pu_intra_pred_mode_1,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup3,1,514,pu_intra_pred_mode_2,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup3,1,515,pu_intra_pred_mode_3,out,8,4,(complete partition) parent_func
hls_coding_unit_hls_dup3,0,540,qPy_pred,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,24,skip_flag_start,out,32,1,parent_func
hls_coding_unit_hls_dup3,0,368,log2_min_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,360,log2_ctb_size,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,436,diff_cu_qp_delta_depth,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,536,qp_y,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,440,transquant_bypass_enable_flag,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,392,min_cb_width,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,568,intra_split_flag,out,8,1,parent_func
hls_coding_unit_hls_dup3,0,452,slice_type,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,608,ctb_left_flag,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,604,ctb_up_flag,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,320,amp_enabled_flag,in,8,1,parent_func
hls_coding_unit_hls_dup3,0,400,pcm_enabled_flag,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,412,log2_min_pcm_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,416,log2_max_pcm_cb_size,in,32,1,parent_func
hls_coding_unit_hls_dup3,0,464,depth,in,32,1,parent_func
hls_coding_unit_hls_dup3,1,286176,skip_flag_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls_dup3,1,286176,skip_flag_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls_dup3,1,286204,qp_y_tab_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls_dup3,1,286204,qp_y_tab_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls_dup3,1,286208,tab_ct_depth_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_coding_unit_hls_dup3,1,286208,tab_ct_depth_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
#copy_top_left_pixel_hls,0,0,tid,in,32,1,apcall_arg
#copy_top_left_pixel_hls,0,0,x0,in,32,1,apcall_arg
#copy_top_left_pixel_hls,0,0,y0,in,32,1,apcall_arg
#copy_top_left_pixel_hls,0,0,xBase,in,32,1,apcall_arg
#copy_top_left_pixel_hls,0,0,yBase,in,32,1,apcall_arg
copy_top_left_pixel_hls,0,168,log2_trafo_size,in,32,1,parent_func
#copy_top_left_pixel_hls,0,0,blk_id,in,32,1,apcall_arg
copy_top_left_pixel_hls,0,360,log2_ctb_size,in,32,1,parent_func
copy_top_left_pixel_hls,0,376,log2_min_tb_size,in,32,1,parent_func
copy_top_left_pixel_hls,0,560,pred_mode,in,8,1,parent_func
copy_top_left_pixel_hls,1,336,hshift_0,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,340,hshift_1,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,344,hshift_2,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,348,vshift_0,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,352,vshift_1,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,356,vshift_2,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,1244,buf_data_0,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,1248,buf_data_1,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,1252,buf_data_2,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,1148,xm_linesize_0,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,1152,xm_linesize_1,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,1,1156,xm_linesize_2,in,32,3,(complete partition) parent_func
copy_top_left_pixel_hls,0,1140,cmdr_run_i,in,8,1,parent_func
copy_top_left_pixel_hls,0,1140,cmdr_run_o,out,8,1,parent_func
genPredCol_hls,1,180,predColBuf_0,out,32,17,(complete partition)
genPredCol_hls,1,184,predColBuf_1,out,32,17,(complete partition)
genPredCol_hls,1,188,predColBuf_2,out,32,17,(complete partition)
genPredCol_hls,1,192,predColBuf_3,out,32,17,(complete partition)
genPredCol_hls,1,196,predColBuf_4,out,32,17,(complete partition)
genPredCol_hls,1,200,predColBuf_5,out,32,17,(complete partition)
genPredCol_hls,1,204,predColBuf_6,out,32,17,(complete partition)
genPredCol_hls,1,208,predColBuf_7,out,32,17,(complete partition)
genPredCol_hls,1,212,predColBuf_8,out,32,17,(complete partition)
genPredCol_hls,1,216,predColBuf_9,out,32,17,(complete partition)
genPredCol_hls,1,220,predColBuf_10,out,32,17,(complete partition)
genPredCol_hls,1,224,predColBuf_11,out,32,17,(complete partition)
genPredCol_hls,1,228,predColBuf_12,out,32,17,(complete partition)
genPredCol_hls,1,232,predColBuf_13,out,32,17,(complete partition)
genPredCol_hls,1,236,predColBuf_14,out,32,17,(complete partition)
genPredCol_hls,1,240,predColBuf_15,out,32,17,(complete partition)
genPredCol_hls,1,244,predColBuf_16_i,in,32,17,(complete partition)
genPredCol_hls,1,244,predColBuf_16_o,out,32,17,(complete partition)
genPredCol_hls,0,172,log2_width,in,8,1,
genPredCol_hls,1,286244,tab_mvf_pred_flag_row_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
genPredCol_hls,1,286244,tab_mvf_pred_flag_row_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
#genPredCol_hls,0,0,x0,in,32,1,apcall_arg
#genPredCol_hls,0,0,y0,in,32,1,apcall_arg
genPredCol_hls,1,286200,cbf_luma_base_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
genPredCol_hls,1,286200,cbf_luma_base_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
genPredCol_hls,0,376,log2_min_tb_size,in,32,1,
genPredCol_hls,0,388,min_tb_width,in,32,1,
#genPredCol_hls,0,0,min_tb_height,in,32,1,apcall_arg
ff_hevc_get_sub_cu_zscan_id_hls,0,360,log2_ctb_size,in,32,1,
#ff_hevc_get_sub_cu_zscan_id_hls,0,0,x0,in,32,1,apcall_arg
#ff_hevc_get_sub_cu_zscan_id_hls,0,0,y0,in,32,1,apcall_arg
ff_hevc_get_sub_cu_zscan_id_hls,0,248,zscan_id,out,32,1,
#ff_hevc_skip_flag_decode_hls,0,0,left_skip_flag,in,8,1,apcall_arg
#ff_hevc_skip_flag_decode_hls,0,0,up_skip_flag,in,8,1,apcall_arg
ff_hevc_skip_flag_decode_hls,0,360,log2_ctb_size,in,32,1,
ff_hevc_skip_flag_decode_hls,0,608,ctb_left_flag,in,8,1,
ff_hevc_skip_flag_decode_hls,0,604,ctb_up_flag,in,8,1,
#ff_hevc_skip_flag_decode_hls,0,0,x0,in,32,1,apcall_arg
#ff_hevc_skip_flag_decode_hls,0,0,y0,in,32,1,apcall_arg
ff_hevc_set_qPy_hls,0,536,qp_y,out,8,1,
ff_hevc_set_qPy_hls,0,532,first_qp_group_i,in,8,1,
ff_hevc_set_qPy_hls,0,532,first_qp_group_o,out,8,1,
#ff_hevc_set_qPy_hls,0,0,is_cu_qp_delta_coded,in,8,1,apcall_arg
ff_hevc_set_qPy_hls,0,540,qPy_pred,in,32,1,
ff_hevc_set_qPy_hls,0,360,log2_ctb_size,in,32,1,
ff_hevc_set_qPy_hls,0,436,diff_cu_qp_delta_depth,in,32,1,
ff_hevc_set_qPy_hls,0,368,log2_min_cb_size,in,32,1,
ff_hevc_set_qPy_hls,0,392,min_cb_width,in,32,1,
ff_hevc_set_qPy_hls,0,460,slice_qp,in,8,1,
#ff_hevc_set_qPy_hls,0,0,xBase,in,32,1,apcall_arg
#ff_hevc_set_qPy_hls,0,0,yBase,in,32,1,apcall_arg
#ff_hevc_set_qPy_hls,0,0,log2_cb_size,in,32,1,apcall_arg
ff_hevc_set_qPy_hls,1,286204,qp_y_tab_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1
ff_hevc_set_qPy_hls,1,286204,qp_y_tab_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1
ff_hevc_set_qPy_hls,0,468,tu_cu_qp_delta,in,32,1,
ff_hevc_set_qPy_hls,0,1136,qp_bd_offset,in,32,1,
#,1,286240,tab_mvf,,32,1,struct_pointer
#ff_hevc_deblocking_boundary_strengths_hls,0,0,x0,in,32,1,apcall_arg
#ff_hevc_deblocking_boundary_strengths_hls,0,0,y0,in,32,1,apcall_arg
ff_hevc_deblocking_boundary_strengths_hls,0,168,log2_trafo_size,in,32,1,
ff_hevc_deblocking_boundary_strengths_hls,0,1512,bs_width,in,32,1,
ff_hevc_deblocking_boundary_strengths_hls,1,286260,horizontal_bs_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1
ff_hevc_deblocking_boundary_strengths_hls,1,286260,horizontal_bs_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1
ff_hevc_deblocking_boundary_strengths_hls,1,286264,vertical_bs_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1
ff_hevc_deblocking_boundary_strengths_hls,1,286264,vertical_bs_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1
ff_hevc_deblocking_boundary_strengths_hls,0,1508,slice_loop_filter_across_slices_enabled_flag,in,8,1,
ff_hevc_deblocking_boundary_strengths_hls,0,372,log2_min_pu_size,in,32,1,
ff_hevc_deblocking_boundary_strengths_hls,0,376,log2_min_tb_size,in,32,1,
ff_hevc_deblocking_boundary_strengths_hls,0,360,log2_ctb_size,in,32,1,
ff_hevc_deblocking_boundary_strengths_hls,0,396,min_pu_width,in,32,1,
ff_hevc_deblocking_boundary_strengths_hls,0,388,min_tb_width,in,32,1,
ff_hevc_deblocking_boundary_strengths_hls,0,172,log2_width,in,8,1,
ff_hevc_deblocking_boundary_strengths_hls,0,264,slice_or_tiles_up_boundary,in,8,1,
ff_hevc_deblocking_boundary_strengths_hls,0,260,slice_or_tiles_left_boundary,in,8,1,
ff_hevc_deblocking_boundary_strengths_hls,0,268,loop_filter_across_tiles_enabled_flag,in,8,1,
ff_hevc_deblocking_boundary_strengths_hls,1,286200,cbf_luma_base_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
ff_hevc_deblocking_boundary_strengths_hls,1,286200,cbf_luma_base_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
ff_hevc_deblocking_boundary_strengths_hls,1,286244,tab_mvf_pred_flag_row_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
ff_hevc_deblocking_boundary_strengths_hls,1,286244,tab_mvf_pred_flag_row_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
ff_hevc_deblocking_boundary_strengths_hls,1,286240,tab_mvf_mv_0_x_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
ff_hevc_deblocking_boundary_strengths_hls,1,286240,tab_mvf_mv_0_x_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
ff_hevc_deblocking_boundary_strengths_hls,1,286244,tab_mvf_mv_0_y_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
ff_hevc_deblocking_boundary_strengths_hls,1,286244,tab_mvf_mv_0_y_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
ff_hevc_deblocking_boundary_strengths_hls,1,286248,tab_mvf_mv_1_x_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
ff_hevc_deblocking_boundary_strengths_hls,1,286248,tab_mvf_mv_1_x_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
ff_hevc_deblocking_boundary_strengths_hls,1,286252,tab_mvf_mv_1_y_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
ff_hevc_deblocking_boundary_strengths_hls,1,286252,tab_mvf_mv_1_y_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
ff_hevc_deblocking_boundary_strengths_hls,1,286256,tab_mvf_poc_0_Din_A,out,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
ff_hevc_deblocking_boundary_strengths_hls,1,286256,tab_mvf_poc_0_Dout_A,in,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
ff_hevc_deblocking_boundary_strengths_hls,1,286260,tab_mvf_poc_1_Din_A,out,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
ff_hevc_deblocking_boundary_strengths_hls,1,286260,tab_mvf_poc_1_Dout_A,in,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
ff_hevc_deblocking_boundary_strengths_hls,1,286264,tab_mvf_ref_idx_0_Din_A,out,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
ff_hevc_deblocking_boundary_strengths_hls,1,286264,tab_mvf_ref_idx_0_Dout_A,in,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
ff_hevc_deblocking_boundary_strengths_hls,1,286268,tab_mvf_ref_idx_1_Din_A,out,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
ff_hevc_deblocking_boundary_strengths_hls,1,286268,tab_mvf_ref_idx_1_Dout_A,in,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
hls_decode_neighbour_hls,1,286192,ctb_addr_rs_to_ts_Din_A,out,16,1,bram_xmem xmem_pointer addr_width=32 we_width=2
hls_decode_neighbour_hls,1,286192,ctb_addr_rs_to_ts_Dout_A,in,16,1,bram_xmem xmem_pointer addr_width=32 we_width=2
hls_decode_neighbour_hls,1,286196,tile_id_Din_A,out,16,1,bram_xmem xmem_pointer addr_width=32 we_width=2
hls_decode_neighbour_hls,1,286196,tile_id_Dout_A,in,16,1,bram_xmem xmem_pointer addr_width=32 we_width=2
hls_decode_neighbour_hls,0,532,first_qp_group,out,8,1,
hls_decode_neighbour_hls,0,620,end_of_tiles_x,out,16,1,
hls_decode_neighbour_hls,0,624,end_of_tiles_y,out,16,1,
hls_decode_neighbour_hls,0,260,slice_or_tiles_left_boundary,out,8,1,
hls_decode_neighbour_hls,0,264,slice_or_tiles_up_boundary,out,8,1,
hls_decode_neighbour_hls,0,608,ctb_left_flag,out,1,1,
hls_decode_neighbour_hls,0,604,ctb_up_flag,out,1,1,
hls_decode_neighbour_hls,0,616,ctb_up_right_flag,out,1,1,
hls_decode_neighbour_hls,0,612,ctb_up_left_flag,out,1,1,
hls_decode_neighbour_hls,0,272,x_ctb,in,32,1,
hls_decode_neighbour_hls,0,276,y_ctb,in,32,1,
hls_decode_neighbour_hls,0,280,ctb_addr_ts,in,32,1,
hls_decode_neighbour_hls,0,360,log2_ctb_size,in,32,1,
hls_decode_neighbour_hls,0,284,ctb_width,in,32,1,
hls_decode_neighbour_hls,0,288,slice_addr,in,32,1,
hls_decode_neighbour_hls,0,252,entropy_coding_sync_enabled_flag,in,8,1,
hls_decode_neighbour_hls,0,256,tiles_enabled_flag,in,8,1,
hls_decode_neighbour_hls,0,444,num_tile_columns,in,32,1,
hls_decode_neighbour_hls,1,286164,column_width_Din_A,out,16,1,bram_xmem xmem_pointer addr_width=32 we_width=2
hls_decode_neighbour_hls,1,286164,column_width_Dout_A,in,16,1,bram_xmem xmem_pointer addr_width=32 we_width=2
hls_decode_neighbour_hls,0,408,width,in,32,1,
hls_decode_neighbour_hls,0,332,height,in,32,1,
#set_tab_mvf_pred_flag_hls,0,0,x0,in,32,1,apcall_arg
#set_tab_mvf_pred_flag_hls,0,0,y0,in,32,1,apcall_arg
#set_tab_mvf_pred_flag_hls,0,0,log2_cb_size,in,32,1,apcall_arg
set_tab_mvf_pred_flag_hls,0,372,log2_min_pu_size,in,32,1,
set_tab_mvf_pred_flag_hls,0,396,min_pu_width,in,32,1,
set_tab_mvf_pred_flag_hls,0,172,log2_width,in,8,1,
set_tab_mvf_pred_flag_hls,1,286244,tab_mvf_pred_flag_row_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
set_tab_mvf_pred_flag_hls,1,286244,tab_mvf_pred_flag_row_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
set_tab_mvf_pred_flag_hls,1,180,predColBuf_0_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,180,predColBuf_0_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,184,predColBuf_1_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,184,predColBuf_1_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,188,predColBuf_2_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,188,predColBuf_2_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,192,predColBuf_3_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,192,predColBuf_3_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,196,predColBuf_4_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,196,predColBuf_4_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,200,predColBuf_5_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,200,predColBuf_5_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,204,predColBuf_6_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,204,predColBuf_6_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,208,predColBuf_7_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,208,predColBuf_7_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,212,predColBuf_8_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,212,predColBuf_8_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,216,predColBuf_9_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,216,predColBuf_9_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,220,predColBuf_10_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,220,predColBuf_10_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,224,predColBuf_11_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,224,predColBuf_11_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,228,predColBuf_12_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,228,predColBuf_12_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,232,predColBuf_13_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,232,predColBuf_13_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,236,predColBuf_14_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,236,predColBuf_14_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,240,predColBuf_15_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,240,predColBuf_15_o,out,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,244,predColBuf_16_i,in,32,17,(complete partition)
set_tab_mvf_pred_flag_hls,1,244,predColBuf_16_o,out,32,17,(complete partition)
init_intra_neighbors_hls,1,336,hshift_0,in,32,3,(complete partition)
init_intra_neighbors_hls,1,340,hshift_1,in,32,3,(complete partition)
init_intra_neighbors_hls,1,344,hshift_2,in,32,3,(complete partition)
init_intra_neighbors_hls,1,348,vshift_0,in,32,3,(complete partition)
init_intra_neighbors_hls,1,352,vshift_1,in,32,3,(complete partition)
init_intra_neighbors_hls,1,356,vshift_2,in,32,3,(complete partition)
init_intra_neighbors_hls,0,372,log2_min_pu_size,in,32,1,
init_intra_neighbors_hls,0,376,log2_min_tb_size,in,32,1,
init_intra_neighbors_hls,0,360,log2_ctb_size,in,32,1,
init_intra_neighbors_hls,0,404,tb_mask,in,8,1,
init_intra_neighbors_hls,0,408,width,in,32,1,
init_intra_neighbors_hls,0,332,height,in,32,1,
init_intra_neighbors_hls,0,172,log2_width,in,8,1,
init_intra_neighbors_hls,0,176,log2_height,in,8,1,
init_intra_neighbors_hls,0,424,constrained_intra_pred_flag,in,8,1,
init_intra_neighbors_hls,1,286188,min_tb_addr_zs_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
init_intra_neighbors_hls,1,286188,min_tb_addr_zs_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
#init_intra_neighbors_hls,0,0,x0,in,32,1,apcall_arg
#init_intra_neighbors_hls,0,0,y0,in,32,1,apcall_arg
#init_intra_neighbors_hls,0,0,log2_size,in,32,1,apcall_arg
#init_intra_neighbors_hls,0,0,c_idx,in,32,1,apcall_arg
init_intra_neighbors_hls,0,600,cand_bottom_left,in,8,1,
init_intra_neighbors_hls,0,584,cand_left,in,8,1,
init_intra_neighbors_hls,0,588,cand_up_left,in,8,1,
init_intra_neighbors_hls,0,580,cand_up,in,8,1,
init_intra_neighbors_hls,0,596,cand_up_right,in,8,1,
init_intra_neighbors_hls,0,644,numIntraNeighbor,out,32,1,
init_intra_neighbors_hls,0,648,totalUnits,out,32,1,
init_intra_neighbors_hls,0,652,aboveUnits,out,32,1,
init_intra_neighbors_hls,0,656,leftUnits,out,32,1,
init_intra_neighbors_hls,0,660,unitWidth,out,32,1,
init_intra_neighbors_hls,0,664,unitHeight,out,32,1,
init_intra_neighbors_hls,0,668,log2TrSize,out,32,1,
init_intra_neighbors_hls,0,672,bNeighborFlags_i,in,65,1,split_u32_array
init_intra_neighbors_hls,0,672,bNeighborFlags_o,out,65,1,split_u32_array
init_intra_neighbors_hls,0,396,min_pu_width,in,32,1,
init_intra_neighbors_hls,1,286244,tab_mvf_pred_flag_row_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
init_intra_neighbors_hls,1,286244,tab_mvf_pred_flag_row_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
init_intra_neighbors_hls,1,180,predColBuf_0,in,32,17,(complete partition)
init_intra_neighbors_hls,1,184,predColBuf_1,in,32,17,(complete partition)
init_intra_neighbors_hls,1,188,predColBuf_2,in,32,17,(complete partition)
init_intra_neighbors_hls,1,192,predColBuf_3,in,32,17,(complete partition)
init_intra_neighbors_hls,1,196,predColBuf_4,in,32,17,(complete partition)
init_intra_neighbors_hls,1,200,predColBuf_5,in,32,17,(complete partition)
init_intra_neighbors_hls,1,204,predColBuf_6,in,32,17,(complete partition)
init_intra_neighbors_hls,1,208,predColBuf_7,in,32,17,(complete partition)
init_intra_neighbors_hls,1,212,predColBuf_8,in,32,17,(complete partition)
init_intra_neighbors_hls,1,216,predColBuf_9,in,32,17,(complete partition)
init_intra_neighbors_hls,1,220,predColBuf_10,in,32,17,(complete partition)
init_intra_neighbors_hls,1,224,predColBuf_11,in,32,17,(complete partition)
init_intra_neighbors_hls,1,228,predColBuf_12,in,32,17,(complete partition)
init_intra_neighbors_hls,1,232,predColBuf_13,in,32,17,(complete partition)
init_intra_neighbors_hls,1,236,predColBuf_14,in,32,17,(complete partition)
init_intra_neighbors_hls,1,240,predColBuf_15,in,32,17,(complete partition)
init_intra_neighbors_hls,1,244,predColBuf_16,in,32,17,(complete partition)
init_intra_neighbors_hls,0,452,slice_type,in,8,1,
init_intra_neighbors_chroma_hls,1,336,hshift_0,in,32,3,(complete partition)
init_intra_neighbors_chroma_hls,1,340,hshift_1,in,32,3,(complete partition)
init_intra_neighbors_chroma_hls,1,344,hshift_2,in,32,3,(complete partition)
init_intra_neighbors_chroma_hls,1,348,vshift_0,in,32,3,(complete partition)
init_intra_neighbors_chroma_hls,1,352,vshift_1,in,32,3,(complete partition)
init_intra_neighbors_chroma_hls,1,356,vshift_2,in,32,3,(complete partition)
init_intra_neighbors_chroma_hls,0,372,log2_min_pu_size,in,32,1,
init_intra_neighbors_chroma_hls,0,376,log2_min_tb_size,in,32,1,
init_intra_neighbors_chroma_hls,0,360,log2_ctb_size,in,32,1,
init_intra_neighbors_chroma_hls,0,404,tb_mask,in,8,1,
init_intra_neighbors_chroma_hls,0,408,width,in,32,1,
init_intra_neighbors_chroma_hls,0,332,height,in,32,1,
init_intra_neighbors_chroma_hls,0,172,log2_width,in,8,1,
init_intra_neighbors_chroma_hls,0,176,log2_height,in,8,1,
init_intra_neighbors_chroma_hls,0,424,constrained_intra_pred_flag,in,8,1,
init_intra_neighbors_chroma_hls,1,286188,min_tb_addr_zs_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
init_intra_neighbors_chroma_hls,1,286188,min_tb_addr_zs_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
#init_intra_neighbors_chroma_hls,0,0,x0,in,32,1,apcall_arg
#init_intra_neighbors_chroma_hls,0,0,y0,in,32,1,apcall_arg
#init_intra_neighbors_chroma_hls,0,0,log2_size,in,32,1,apcall_arg
#init_intra_neighbors_chroma_hls,0,0,c_idx,in,32,1,apcall_arg
init_intra_neighbors_chroma_hls,0,1432,cand_bottom_left_c,in,8,1,
init_intra_neighbors_chroma_hls,0,1416,cand_left_c,in,8,1,
init_intra_neighbors_chroma_hls,0,1420,cand_up_left_c,in,8,1,
init_intra_neighbors_chroma_hls,0,1412,cand_up_c,in,8,1,
init_intra_neighbors_chroma_hls,0,1428,cand_up_right_c,in,8,1,
init_intra_neighbors_chroma_hls,0,684,numIntraNeighbor_c,out,32,1,
init_intra_neighbors_chroma_hls,0,688,totalUnits_c,out,32,1,
init_intra_neighbors_chroma_hls,0,692,aboveUnits_c,out,32,1,
init_intra_neighbors_chroma_hls,0,696,leftUnits_c,out,32,1,
init_intra_neighbors_chroma_hls,0,700,unitWidth_c,out,32,1,
init_intra_neighbors_chroma_hls,0,704,unitHeight_c,out,32,1,
init_intra_neighbors_chroma_hls,0,708,log2TrSize_c,out,32,1,
init_intra_neighbors_chroma_hls,0,712,bNeighborFlags_c_i,in,65,1,split_u32_array
init_intra_neighbors_chroma_hls,0,712,bNeighborFlags_c_o,out,65,1,split_u32_array
init_intra_neighbors_chroma_hls,0,396,min_pu_width,in,32,1,
init_intra_neighbors_chroma_hls,1,286244,tab_mvf_pred_flag_row_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
init_intra_neighbors_chroma_hls,1,286244,tab_mvf_pred_flag_row_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
init_intra_neighbors_chroma_hls,1,180,predColBuf_0,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,184,predColBuf_1,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,188,predColBuf_2,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,192,predColBuf_3,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,196,predColBuf_4,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,200,predColBuf_5,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,204,predColBuf_6,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,208,predColBuf_7,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,212,predColBuf_8,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,216,predColBuf_9,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,220,predColBuf_10,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,224,predColBuf_11,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,228,predColBuf_12,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,232,predColBuf_13,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,236,predColBuf_14,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,240,predColBuf_15,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,1,244,predColBuf_16,in,32,17,(complete partition)
init_intra_neighbors_chroma_hls,0,452,slice_type,in,8,1,
ff_hevc_set_neighbour_available_hls,0,580,cand_up,out,1,1,
ff_hevc_set_neighbour_available_hls,0,584,cand_left,out,1,1,
ff_hevc_set_neighbour_available_hls,0,588,cand_up_left,out,1,1,
ff_hevc_set_neighbour_available_hls,0,592,cand_up_right_sap,out,1,1,
ff_hevc_set_neighbour_available_hls,0,596,cand_up_right,out,1,1,
ff_hevc_set_neighbour_available_hls,0,600,cand_bottom_left,out,1,1,
ff_hevc_set_neighbour_available_hls,0,360,log2_ctb_size,in,32,1,
ff_hevc_set_neighbour_available_hls,0,604,ctb_up_flag,in,8,1,
ff_hevc_set_neighbour_available_hls,0,608,ctb_left_flag,in,8,1,
ff_hevc_set_neighbour_available_hls,0,612,ctb_up_left_flag,in,8,1,
ff_hevc_set_neighbour_available_hls,0,616,ctb_up_right_flag,in,8,1,
ff_hevc_set_neighbour_available_hls,0,620,end_of_tiles_x,in,16,1,
ff_hevc_set_neighbour_available_hls,0,624,end_of_tiles_y,in,16,1,
#ff_hevc_set_neighbour_available_hls,0,0,x0,in,32,1,apcall_arg
#ff_hevc_set_neighbour_available_hls,0,0,y0,in,32,1,apcall_arg
ff_hevc_set_neighbour_available_hls,0,160,nPbW,out,32,1,
ff_hevc_set_neighbour_available_hls,0,164,nPbH,out,32,1,
#ff_hevc_set_neighbour_available_hls,0,0,arg_nPbW,in,32,1,apcall_arg
#ff_hevc_set_neighbour_available_hls,0,0,arg_nPbH,in,32,1,apcall_arg
intra_prediction_unit_default_value_hls,0,560,pred_mode,in,8,1,
#intra_prediction_unit_default_value_hls,0,0,x0,in,32,1,apcall_arg
#intra_prediction_unit_default_value_hls,0,0,y0,in,32,1,apcall_arg
#intra_prediction_unit_default_value_hls,0,0,log2_cb_size,in,32,1,apcall_arg
intra_prediction_unit_default_value_hls,0,372,log2_min_pu_size,in,32,1,
intra_prediction_unit_default_value_hls,0,396,min_pu_width,in,32,1,
intra_prediction_unit_default_value_hls,0,172,log2_width,in,8,1,
intra_prediction_unit_default_value_hls,1,286180,tab_ipm_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1
intra_prediction_unit_default_value_hls,1,286180,tab_ipm_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1
intra_prediction_unit_default_value_hls,1,286244,tab_mvf_pred_flag_row_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
intra_prediction_unit_default_value_hls,1,286244,tab_mvf_pred_flag_row_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
intra_prediction_unit_default_value_hls,1,180,predColBuf_0_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,180,predColBuf_0_o,out,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,184,predColBuf_1_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,184,predColBuf_1_o,out,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,188,predColBuf_2_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,188,predColBuf_2_o,out,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,192,predColBuf_3_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,192,predColBuf_3_o,out,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,196,predColBuf_4_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,196,predColBuf_4_o,out,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,200,predColBuf_5_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,200,predColBuf_5_o,out,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,204,predColBuf_6_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,204,predColBuf_6_o,out,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,208,predColBuf_7_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,208,predColBuf_7_o,out,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,212,predColBuf_8_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,212,predColBuf_8_o,out,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,216,predColBuf_9_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,216,predColBuf_9_o,out,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,220,predColBuf_10_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,220,predColBuf_10_o,out,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,224,predColBuf_11_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,224,predColBuf_11_o,out,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,228,predColBuf_12_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,228,predColBuf_12_o,out,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,232,predColBuf_13_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,232,predColBuf_13_o,out,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,236,predColBuf_14_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,236,predColBuf_14_o,out,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,240,predColBuf_15_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,240,predColBuf_15_o,out,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,244,predColBuf_16_i,in,32,17,(complete partition)
intra_prediction_unit_default_value_hls,1,244,predColBuf_16_o,out,32,17,(complete partition)
z_scan_block_avail_hls,0,404,tb_mask,in,8,1,
z_scan_block_avail_hls,0,360,log2_ctb_size,in,32,1,
z_scan_block_avail_hls,0,376,log2_min_tb_size,in,32,1,
z_scan_block_avail_hls,0,552,xm_x0,in,32,1,
z_scan_block_avail_hls,0,556,xm_y0,in,32,1,
#z_scan_block_avail_hls,0,0,xN,in,32,1,apcall_arg
#z_scan_block_avail_hls,0,0,yN,in,32,1,apcall_arg
z_scan_block_avail_hls,1,286188,min_tb_addr_zs_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
z_scan_block_avail_hls,1,286188,min_tb_addr_zs_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
#,0,784,current_mv,,256,1,struct
luma_mc_uni_libx265_hls,1,286160,xcache_null_base_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1
luma_mc_uni_libx265_hls,1,286160,xcache_null_base_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1
luma_mc_uni_libx265_hls,1,1556,frame_data_0,in,32,3,(complete partition)
luma_mc_uni_libx265_hls,1,1560,frame_data_1,in,32,3,(complete partition)
luma_mc_uni_libx265_hls,1,1564,frame_data_2,in,32,3,(complete partition)
luma_mc_uni_libx265_hls,1,1568,frame_linesize_0,in,32,3,(complete partition)
luma_mc_uni_libx265_hls,1,1572,frame_linesize_1,in,32,3,(complete partition)
luma_mc_uni_libx265_hls,1,1576,frame_linesize_2,in,32,3,(complete partition)
luma_mc_uni_libx265_hls,1,284944,refPicList_frame_data_Din_A,out,32,96,bram_xmem addr_width=32 we_width=4
luma_mc_uni_libx265_hls,1,284944,refPicList_frame_data_Dout_A,in,32,96,bram_xmem addr_width=32 we_width=4
luma_mc_uni_libx265_hls,1,285328,refPicList_frame_linesize_Din_A,out,32,96,bram_xmem addr_width=32 we_width=4
luma_mc_uni_libx265_hls,1,285328,refPicList_frame_linesize_Dout_A,in,32,96,bram_xmem addr_width=32 we_width=4
luma_mc_uni_libx265_hls,0,784,current_mv_mv_0_x,in,16,1,struct_element struct_var=current_mv
luma_mc_uni_libx265_hls,0,788,current_mv_mv_0_y,in,16,1,struct_element struct_var=current_mv
luma_mc_uni_libx265_hls,0,792,current_mv_mv_1_x,in,16,1,struct_element struct_var=current_mv
luma_mc_uni_libx265_hls,0,796,current_mv_mv_1_y,in,16,1,struct_element struct_var=current_mv
luma_mc_uni_libx265_hls,0,800,current_mv_poc_0,in,32,1,struct_element struct_var=current_mv
luma_mc_uni_libx265_hls,0,804,current_mv_poc_1,in,32,1,struct_element struct_var=current_mv
luma_mc_uni_libx265_hls,0,808,current_mv_ref_idx_0,in,8,1,struct_element struct_var=current_mv
luma_mc_uni_libx265_hls,0,812,current_mv_ref_idx_1,in,8,1,struct_element struct_var=current_mv
luma_mc_uni_libx265_hls,0,816,current_mv_pred_flag,in,8,1,
#luma_mc_uni_libx265_hls,0,0,x_off,in,32,1,apcall_arg
#luma_mc_uni_libx265_hls,0,0,y_off,in,32,1,apcall_arg
#luma_mc_uni_libx265_hls,0,0,block_w,in,32,1,apcall_arg
#luma_mc_uni_libx265_hls,0,0,block_h,in,32,1,apcall_arg
#luma_mc_uni_libx265_hls,0,0,c_idx,in,32,1,apcall_arg
luma_mc_uni_libx265_hls,0,728,ref_idx,in,32,1,
luma_mc_uni_libx265_hls,0,452,slice_type,in,8,1,
luma_mc_uni_libx265_hls,0,1532,weighted_pred_flag,in,8,1,
luma_mc_uni_libx265_hls,0,1536,weighted_bipred_flag,in,8,1,
luma_mc_uni_libx265_hls,0,1144,pixel_shift,in,32,1,
luma_mc_uni_libx265_hls,0,408,width,in,32,1,
luma_mc_uni_libx265_hls,0,332,height,in,32,1,
luma_mc_uni_libx265_hls,1,336,hshift_0,in,32,3,(complete partition)
luma_mc_uni_libx265_hls,1,340,hshift_1,in,32,3,(complete partition)
luma_mc_uni_libx265_hls,1,344,hshift_2,in,32,3,(complete partition)
luma_mc_uni_libx265_hls,1,348,vshift_0,in,32,3,(complete partition)
luma_mc_uni_libx265_hls,1,352,vshift_1,in,32,3,(complete partition)
luma_mc_uni_libx265_hls,1,356,vshift_2,in,32,3,(complete partition)
luma_mc_uni_libx265_hls,0,1524,bit_depth,in,8,1,
luma_mc_uni_libx265_hls,0,1516,luma_log2_weight_denom,in,8,1,
luma_mc_uni_libx265_hls,1,285712,luma_weight_l0_flag_Din_A,out,8,16,bram_xmem addr_width=32 we_width=1
luma_mc_uni_libx265_hls,1,285712,luma_weight_l0_flag_Dout_A,in,8,16,bram_xmem addr_width=32 we_width=1
luma_mc_uni_libx265_hls,1,285728,luma_weight_l1_flag_Din_A,out,8,16,bram_xmem addr_width=32 we_width=1
luma_mc_uni_libx265_hls,1,285728,luma_weight_l1_flag_Dout_A,in,8,16,bram_xmem addr_width=32 we_width=1
luma_mc_uni_libx265_hls,1,285744,luma_weight_l0_Din_A,out,16,16,bram_xmem addr_width=32 we_width=2
luma_mc_uni_libx265_hls,1,285744,luma_weight_l0_Dout_A,in,16,16,bram_xmem addr_width=32 we_width=2
luma_mc_uni_libx265_hls,1,285776,luma_weight_l1_Din_A,out,16,16,bram_xmem addr_width=32 we_width=2
luma_mc_uni_libx265_hls,1,285776,luma_weight_l1_Dout_A,in,16,16,bram_xmem addr_width=32 we_width=2
luma_mc_uni_libx265_hls,1,285808,luma_offset_l0_Din_A,out,16,16,bram_xmem addr_width=32 we_width=2
luma_mc_uni_libx265_hls,1,285808,luma_offset_l0_Dout_A,in,16,16,bram_xmem addr_width=32 we_width=2
luma_mc_uni_libx265_hls,1,285840,luma_offset_l1_Din_A,out,16,16,bram_xmem addr_width=32 we_width=2
luma_mc_uni_libx265_hls,1,285840,luma_offset_l1_Dout_A,in,16,16,bram_xmem addr_width=32 we_width=2
luma_mc_uni_libx265_hls,1,12304,edge_buffer_Din_A,out,32,68160,bram_xmem addr_width=32 we_width=4
luma_mc_uni_libx265_hls,1,12304,edge_buffer_Dout_A,in,32,68160,bram_xmem addr_width=32 we_width=4
luma_mc_uni_libx265_hls,0,1528,dst_depth,out,8,1,
#luma_mc_uni_libx265_hls,0,0,tid,in,32,1,apcall_arg
chroma_mc_uni_libx265_hls,1,286160,xcache_null_base_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1
chroma_mc_uni_libx265_hls,1,286160,xcache_null_base_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1
chroma_mc_uni_libx265_hls,1,1556,frame_data_0,in,32,3,(complete partition)
chroma_mc_uni_libx265_hls,1,1560,frame_data_1,in,32,3,(complete partition)
chroma_mc_uni_libx265_hls,1,1564,frame_data_2,in,32,3,(complete partition)
chroma_mc_uni_libx265_hls,1,1568,frame_linesize_0,in,32,3,(complete partition)
chroma_mc_uni_libx265_hls,1,1572,frame_linesize_1,in,32,3,(complete partition)
chroma_mc_uni_libx265_hls,1,1576,frame_linesize_2,in,32,3,(complete partition)
chroma_mc_uni_libx265_hls,1,284944,refPicList_frame_data_Din_A,out,32,96,bram_xmem addr_width=32 we_width=4
chroma_mc_uni_libx265_hls,1,284944,refPicList_frame_data_Dout_A,in,32,96,bram_xmem addr_width=32 we_width=4
chroma_mc_uni_libx265_hls,1,285328,refPicList_frame_linesize_Din_A,out,32,96,bram_xmem addr_width=32 we_width=4
chroma_mc_uni_libx265_hls,1,285328,refPicList_frame_linesize_Dout_A,in,32,96,bram_xmem addr_width=32 we_width=4
chroma_mc_uni_libx265_hls,0,784,current_mv_mv_0_x,in,16,1,struct_element struct_var=current_mv
chroma_mc_uni_libx265_hls,0,788,current_mv_mv_0_y,in,16,1,struct_element struct_var=current_mv
chroma_mc_uni_libx265_hls,0,792,current_mv_mv_1_x,in,16,1,struct_element struct_var=current_mv
chroma_mc_uni_libx265_hls,0,796,current_mv_mv_1_y,in,16,1,struct_element struct_var=current_mv
chroma_mc_uni_libx265_hls,0,800,current_mv_poc_0,in,32,1,struct_element struct_var=current_mv
chroma_mc_uni_libx265_hls,0,804,current_mv_poc_1,in,32,1,struct_element struct_var=current_mv
chroma_mc_uni_libx265_hls,0,808,current_mv_ref_idx_0,in,8,1,struct_element struct_var=current_mv
chroma_mc_uni_libx265_hls,0,812,current_mv_ref_idx_1,in,8,1,struct_element struct_var=current_mv
chroma_mc_uni_libx265_hls,0,816,current_mv_pred_flag,in,8,1,
#chroma_mc_uni_libx265_hls,0,0,x_off,in,32,1,apcall_arg
#chroma_mc_uni_libx265_hls,0,0,y_off,in,32,1,apcall_arg
#chroma_mc_uni_libx265_hls,0,0,block_w,in,32,1,apcall_arg
#chroma_mc_uni_libx265_hls,0,0,block_h,in,32,1,apcall_arg
#chroma_mc_uni_libx265_hls,0,0,c_idx,in,32,1,apcall_arg
chroma_mc_uni_libx265_hls,0,728,ref_idx,in,32,1,
#chroma_mc_uni_libx265_hls,0,0,plane,in,32,1,apcall_arg
chroma_mc_uni_libx265_hls,0,452,slice_type,in,8,1,
chroma_mc_uni_libx265_hls,0,1532,weighted_pred_flag,in,8,1,
chroma_mc_uni_libx265_hls,0,1536,weighted_bipred_flag,in,8,1,
chroma_mc_uni_libx265_hls,0,1144,pixel_shift,in,32,1,
chroma_mc_uni_libx265_hls,0,408,width,in,32,1,
chroma_mc_uni_libx265_hls,0,332,height,in,32,1,
chroma_mc_uni_libx265_hls,1,336,hshift_0,in,32,3,(complete partition)
chroma_mc_uni_libx265_hls,1,340,hshift_1,in,32,3,(complete partition)
chroma_mc_uni_libx265_hls,1,344,hshift_2,in,32,3,(complete partition)
chroma_mc_uni_libx265_hls,1,348,vshift_0,in,32,3,(complete partition)
chroma_mc_uni_libx265_hls,1,352,vshift_1,in,32,3,(complete partition)
chroma_mc_uni_libx265_hls,1,356,vshift_2,in,32,3,(complete partition)
chroma_mc_uni_libx265_hls,0,1524,bit_depth,in,8,1,
chroma_mc_uni_libx265_hls,0,1520,chroma_log2_weight_denom,in,16,1,
chroma_mc_uni_libx265_hls,1,285872,chroma_weight_l0_flag_Din_A,out,8,16,bram_xmem addr_width=32 we_width=1
chroma_mc_uni_libx265_hls,1,285872,chroma_weight_l0_flag_Dout_A,in,8,16,bram_xmem addr_width=32 we_width=1
chroma_mc_uni_libx265_hls,1,285888,chroma_weight_l1_flag_Din_A,out,8,16,bram_xmem addr_width=32 we_width=1
chroma_mc_uni_libx265_hls,1,285888,chroma_weight_l1_flag_Dout_A,in,8,16,bram_xmem addr_width=32 we_width=1
chroma_mc_uni_libx265_hls,1,285904,chroma_weight_l0_Din_A,out,16,32,bram_xmem addr_width=32 we_width=2
chroma_mc_uni_libx265_hls,1,285904,chroma_weight_l0_Dout_A,in,16,32,bram_xmem addr_width=32 we_width=2
chroma_mc_uni_libx265_hls,1,285968,chroma_weight_l1_Din_A,out,16,32,bram_xmem addr_width=32 we_width=2
chroma_mc_uni_libx265_hls,1,285968,chroma_weight_l1_Dout_A,in,16,32,bram_xmem addr_width=32 we_width=2
chroma_mc_uni_libx265_hls,1,286032,chroma_offset_l0_Din_A,out,16,32,bram_xmem addr_width=32 we_width=2
chroma_mc_uni_libx265_hls,1,286032,chroma_offset_l0_Dout_A,in,16,32,bram_xmem addr_width=32 we_width=2
chroma_mc_uni_libx265_hls,1,286096,chroma_offset_l1_Din_A,out,16,32,bram_xmem addr_width=32 we_width=2
chroma_mc_uni_libx265_hls,1,286096,chroma_offset_l1_Dout_A,in,16,32,bram_xmem addr_width=32 we_width=2
chroma_mc_uni_libx265_hls,1,12304,edge_buffer_Din_A,out,32,68160,bram_xmem addr_width=32 we_width=4
chroma_mc_uni_libx265_hls,1,12304,edge_buffer_Dout_A,in,32,68160,bram_xmem addr_width=32 we_width=4
chroma_mc_uni_libx265_hls,0,752,xm_buf_linesize,out,32,1,
chroma_mc_uni_libx265_hls,0,1528,dst_depth,out,8,1,
#chroma_mc_uni_libx265_hls,0,0,tid,in,32,1,apcall_arg
#,0,1044,up_sao,,608,1,struct
#,0,968,left_sao,,608,1,struct
#,0,892,curr_sao,,608,1,struct
#sao_param_hls,0,0,rx,in,32,1,apcall_arg
#sao_param_hls,0,0,ry,in,32,1,apcall_arg
sao_param_hls,1,892,curr_sao_offset_abs_0_0_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,892,curr_sao_offset_abs_0_0_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,893,curr_sao_offset_abs_0_1_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,893,curr_sao_offset_abs_0_1_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,894,curr_sao_offset_abs_0_2_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,894,curr_sao_offset_abs_0_2_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,895,curr_sao_offset_abs_0_3_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,895,curr_sao_offset_abs_0_3_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,896,curr_sao_offset_abs_1_0_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,896,curr_sao_offset_abs_1_0_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,897,curr_sao_offset_abs_1_1_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,897,curr_sao_offset_abs_1_1_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,898,curr_sao_offset_abs_1_2_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,898,curr_sao_offset_abs_1_2_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,899,curr_sao_offset_abs_1_3_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,899,curr_sao_offset_abs_1_3_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,900,curr_sao_offset_abs_2_0_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,900,curr_sao_offset_abs_2_0_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,901,curr_sao_offset_abs_2_1_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,901,curr_sao_offset_abs_2_1_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,902,curr_sao_offset_abs_2_2_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,902,curr_sao_offset_abs_2_2_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,903,curr_sao_offset_abs_2_3_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,903,curr_sao_offset_abs_2_3_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,904,curr_sao_offset_sign_0_0_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,904,curr_sao_offset_sign_0_0_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,905,curr_sao_offset_sign_0_1_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,905,curr_sao_offset_sign_0_1_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,906,curr_sao_offset_sign_0_2_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,906,curr_sao_offset_sign_0_2_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,907,curr_sao_offset_sign_0_3_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,907,curr_sao_offset_sign_0_3_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,908,curr_sao_offset_sign_1_0_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,908,curr_sao_offset_sign_1_0_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,909,curr_sao_offset_sign_1_1_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,909,curr_sao_offset_sign_1_1_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,910,curr_sao_offset_sign_1_2_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,910,curr_sao_offset_sign_1_2_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,911,curr_sao_offset_sign_1_3_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,911,curr_sao_offset_sign_1_3_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,912,curr_sao_offset_sign_2_0_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,912,curr_sao_offset_sign_2_0_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,913,curr_sao_offset_sign_2_1_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,913,curr_sao_offset_sign_2_1_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,914,curr_sao_offset_sign_2_2_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,914,curr_sao_offset_sign_2_2_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,915,curr_sao_offset_sign_2_3_i,in,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,915,curr_sao_offset_sign_2_3_o,out,8,12,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,916,curr_sao_band_position_0,out,8,3,(complete partition) struct_element struct_var=curr_sao
sao_param_hls,1,917,curr_sao_band_position_1,out,8,3,(complete partition) struct_element struct_var=curr_sao
sao_param_hls,1,918,curr_sao_band_position_2,out,8,3,(complete partition) struct_element struct_var=curr_sao
#sao_param_hls,0,0,curr_sao_padding_1a,in,8,1,apcall_arg
sao_param_hls,1,920,curr_sao_offset_val_0_0,out,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,922,curr_sao_offset_val_0_1_i,in,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,922,curr_sao_offset_val_0_1_o,out,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,924,curr_sao_offset_val_0_2_i,in,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,924,curr_sao_offset_val_0_2_o,out,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,926,curr_sao_offset_val_0_3_i,in,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,926,curr_sao_offset_val_0_3_o,out,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,928,curr_sao_offset_val_0_4_i,in,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,928,curr_sao_offset_val_0_4_o,out,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,930,curr_sao_offset_val_1_0,out,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,932,curr_sao_offset_val_1_1_i,in,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,932,curr_sao_offset_val_1_1_o,out,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,934,curr_sao_offset_val_1_2_i,in,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,934,curr_sao_offset_val_1_2_o,out,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,936,curr_sao_offset_val_1_3_i,in,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,936,curr_sao_offset_val_1_3_o,out,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,938,curr_sao_offset_val_1_4_i,in,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,938,curr_sao_offset_val_1_4_o,out,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,940,curr_sao_offset_val_2_0,out,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,942,curr_sao_offset_val_2_1_i,in,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,942,curr_sao_offset_val_2_1_o,out,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,944,curr_sao_offset_val_2_2_i,in,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,944,curr_sao_offset_val_2_2_o,out,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,946,curr_sao_offset_val_2_3_i,in,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,946,curr_sao_offset_val_2_3_o,out,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,948,curr_sao_offset_val_2_4_i,in,16,15,(complete partition) 2d struct_element struct_var=curr_sao
sao_param_hls,1,948,curr_sao_offset_val_2_4_o,out,16,15,(complete partition) 2d struct_element struct_var=curr_sao
#sao_param_hls,0,0,curr_sao_padding_2a,in,16,1,apcall_arg
sao_param_hls,1,952,curr_sao_eo_class_0,out,8,3,(complete partition) struct_element struct_var=curr_sao
sao_param_hls,1,953,curr_sao_eo_class_1_i,in,8,3,(complete partition) struct_element struct_var=curr_sao
sao_param_hls,1,953,curr_sao_eo_class_1_o,out,8,3,(complete partition) struct_element struct_var=curr_sao
sao_param_hls,1,954,curr_sao_eo_class_2,out,8,3,(complete partition) struct_element struct_var=curr_sao
#sao_param_hls,0,0,curr_sao_padding_3a,in,8,1,apcall_arg
sao_param_hls,1,956,curr_sao_type_idx_0_i,in,8,3,(complete partition) struct_element struct_var=curr_sao
sao_param_hls,1,956,curr_sao_type_idx_0_o,out,8,3,(complete partition) struct_element struct_var=curr_sao
sao_param_hls,1,957,curr_sao_type_idx_1_i,in,8,3,(complete partition) struct_element struct_var=curr_sao
sao_param_hls,1,957,curr_sao_type_idx_1_o,out,8,3,(complete partition) struct_element struct_var=curr_sao
sao_param_hls,1,958,curr_sao_type_idx_2_i,in,8,3,(complete partition) struct_element struct_var=curr_sao
sao_param_hls,1,958,curr_sao_type_idx_2_o,out,8,3,(complete partition) struct_element struct_var=curr_sao
#sao_param_hls,0,0,curr_sao_padding_4a,in,8,1,apcall_arg
sao_param_hls,0,960,curr_sao_sao_merge_left_flag,out,32,1,struct_element struct_var=curr_sao
sao_param_hls,0,964,curr_sao_sao_merge_up_flag,out,32,1,struct_element struct_var=curr_sao
sao_param_hls,1,968,left_sao_offset_abs_0_0,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,969,left_sao_offset_abs_0_1,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,970,left_sao_offset_abs_0_2,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,971,left_sao_offset_abs_0_3,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,972,left_sao_offset_abs_1_0,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,973,left_sao_offset_abs_1_1,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,974,left_sao_offset_abs_1_2,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,975,left_sao_offset_abs_1_3,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,976,left_sao_offset_abs_2_0,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,977,left_sao_offset_abs_2_1,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,978,left_sao_offset_abs_2_2,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,979,left_sao_offset_abs_2_3,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,980,left_sao_offset_sign_0_0,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,981,left_sao_offset_sign_0_1,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,982,left_sao_offset_sign_0_2,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,983,left_sao_offset_sign_0_3,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,984,left_sao_offset_sign_1_0,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,985,left_sao_offset_sign_1_1,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,986,left_sao_offset_sign_1_2,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,987,left_sao_offset_sign_1_3,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,988,left_sao_offset_sign_2_0,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,989,left_sao_offset_sign_2_1,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,990,left_sao_offset_sign_2_2,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,991,left_sao_offset_sign_2_3,in,8,12,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,992,left_sao_band_position_0,in,8,3,(complete partition) struct_element struct_var=left_sao
sao_param_hls,1,993,left_sao_band_position_1,in,8,3,(complete partition) struct_element struct_var=left_sao
sao_param_hls,1,994,left_sao_band_position_2,in,8,3,(complete partition) struct_element struct_var=left_sao
#sao_param_hls,0,0,left_sao_padding_1a,in,8,1,apcall_arg
sao_param_hls,1,996,left_sao_offset_val_0_0,in,16,15,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,998,left_sao_offset_val_0_1,in,16,15,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,1000,left_sao_offset_val_0_2,in,16,15,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,1002,left_sao_offset_val_0_3,in,16,15,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,1004,left_sao_offset_val_0_4,in,16,15,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,1006,left_sao_offset_val_1_0,in,16,15,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,1008,left_sao_offset_val_1_1,in,16,15,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,1010,left_sao_offset_val_1_2,in,16,15,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,1012,left_sao_offset_val_1_3,in,16,15,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,1014,left_sao_offset_val_1_4,in,16,15,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,1016,left_sao_offset_val_2_0,in,16,15,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,1018,left_sao_offset_val_2_1,in,16,15,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,1020,left_sao_offset_val_2_2,in,16,15,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,1022,left_sao_offset_val_2_3,in,16,15,(complete partition) 2d struct_element struct_var=left_sao
sao_param_hls,1,1024,left_sao_offset_val_2_4,in,16,15,(complete partition) 2d struct_element struct_var=left_sao
#sao_param_hls,0,0,left_sao_padding_2a,in,16,1,apcall_arg
sao_param_hls,1,1028,left_sao_eo_class_0,in,8,3,(complete partition) struct_element struct_var=left_sao
sao_param_hls,1,1029,left_sao_eo_class_1,in,8,3,(complete partition) struct_element struct_var=left_sao
sao_param_hls,1,1030,left_sao_eo_class_2,in,8,3,(complete partition) struct_element struct_var=left_sao
#sao_param_hls,0,0,left_sao_padding_3a,in,8,1,apcall_arg
sao_param_hls,1,1032,left_sao_type_idx_0,in,8,3,(complete partition) struct_element struct_var=left_sao
sao_param_hls,1,1033,left_sao_type_idx_1,in,8,3,(complete partition) struct_element struct_var=left_sao
sao_param_hls,1,1034,left_sao_type_idx_2,in,8,3,(complete partition) struct_element struct_var=left_sao
#sao_param_hls,0,0,left_sao_padding_4a,in,8,1,apcall_arg
sao_param_hls,0,1036,left_sao_sao_merge_left_flag,in,32,1,struct_element struct_var=left_sao
sao_param_hls,0,1040,left_sao_sao_merge_up_flag,in,32,1,struct_element struct_var=left_sao
sao_param_hls,1,1044,up_sao_offset_abs_0_0,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1045,up_sao_offset_abs_0_1,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1046,up_sao_offset_abs_0_2,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1047,up_sao_offset_abs_0_3,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1048,up_sao_offset_abs_1_0,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1049,up_sao_offset_abs_1_1,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1050,up_sao_offset_abs_1_2,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1051,up_sao_offset_abs_1_3,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1052,up_sao_offset_abs_2_0,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1053,up_sao_offset_abs_2_1,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1054,up_sao_offset_abs_2_2,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1055,up_sao_offset_abs_2_3,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1056,up_sao_offset_sign_0_0,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1057,up_sao_offset_sign_0_1,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1058,up_sao_offset_sign_0_2,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1059,up_sao_offset_sign_0_3,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1060,up_sao_offset_sign_1_0,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1061,up_sao_offset_sign_1_1,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1062,up_sao_offset_sign_1_2,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1063,up_sao_offset_sign_1_3,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1064,up_sao_offset_sign_2_0,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1065,up_sao_offset_sign_2_1,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1066,up_sao_offset_sign_2_2,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1067,up_sao_offset_sign_2_3,in,8,12,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1068,up_sao_band_position_0,in,8,3,(complete partition) struct_element struct_var=up_sao
sao_param_hls,1,1069,up_sao_band_position_1,in,8,3,(complete partition) struct_element struct_var=up_sao
sao_param_hls,1,1070,up_sao_band_position_2,in,8,3,(complete partition) struct_element struct_var=up_sao
#sao_param_hls,0,0,up_sao_padding_1a,in,8,1,apcall_arg
sao_param_hls,1,1072,up_sao_offset_val_0_0,in,16,15,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1074,up_sao_offset_val_0_1,in,16,15,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1076,up_sao_offset_val_0_2,in,16,15,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1078,up_sao_offset_val_0_3,in,16,15,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1080,up_sao_offset_val_0_4,in,16,15,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1082,up_sao_offset_val_1_0,in,16,15,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1084,up_sao_offset_val_1_1,in,16,15,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1086,up_sao_offset_val_1_2,in,16,15,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1088,up_sao_offset_val_1_3,in,16,15,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1090,up_sao_offset_val_1_4,in,16,15,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1092,up_sao_offset_val_2_0,in,16,15,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1094,up_sao_offset_val_2_1,in,16,15,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1096,up_sao_offset_val_2_2,in,16,15,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1098,up_sao_offset_val_2_3,in,16,15,(complete partition) 2d struct_element struct_var=up_sao
sao_param_hls,1,1100,up_sao_offset_val_2_4,in,16,15,(complete partition) 2d struct_element struct_var=up_sao
#sao_param_hls,0,0,up_sao_padding_2a,in,16,1,apcall_arg
sao_param_hls,1,1104,up_sao_eo_class_0,in,8,3,(complete partition) struct_element struct_var=up_sao
sao_param_hls,1,1105,up_sao_eo_class_1,in,8,3,(complete partition) struct_element struct_var=up_sao
sao_param_hls,1,1106,up_sao_eo_class_2,in,8,3,(complete partition) struct_element struct_var=up_sao
#sao_param_hls,0,0,up_sao_padding_3a,in,8,1,apcall_arg
sao_param_hls,1,1108,up_sao_type_idx_0,in,8,3,(complete partition) struct_element struct_var=up_sao
sao_param_hls,1,1109,up_sao_type_idx_1,in,8,3,(complete partition) struct_element struct_var=up_sao
sao_param_hls,1,1110,up_sao_type_idx_2,in,8,3,(complete partition) struct_element struct_var=up_sao
#sao_param_hls,0,0,up_sao_padding_4a,in,8,1,apcall_arg
sao_param_hls,0,1112,up_sao_sao_merge_left_flag,in,32,1,struct_element struct_var=up_sao
sao_param_hls,0,1116,up_sao_sao_merge_up_flag,in,32,1,struct_element struct_var=up_sao
sao_param_hls,1,1288,slice_sample_adaptive_offset_flag_0,in,8,3,(complete partition)
sao_param_hls,1,1289,slice_sample_adaptive_offset_flag_1,in,8,3,(complete partition)
sao_param_hls,1,1290,slice_sample_adaptive_offset_flag_2,in,8,3,(complete partition)
sao_param_hls,0,608,ctb_left_flag,in,8,1,
sao_param_hls,0,604,ctb_up_flag,in,8,1,
#sao_param_hls,0,0,log2_sao_offset_scale_luma,in,8,1,apcall_arg
#sao_param_hls,0,0,log2_sao_offset_scale_chroma,in,8,1,apcall_arg
sao_param_hls,0,1524,bit_depth,in,8,1,
xmem_copy_mvfield_hls,1,286240,tab_mvf_mv_0_x_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
xmem_copy_mvfield_hls,1,286240,tab_mvf_mv_0_x_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
xmem_copy_mvfield_hls,1,286244,tab_mvf_mv_0_y_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
xmem_copy_mvfield_hls,1,286244,tab_mvf_mv_0_y_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
xmem_copy_mvfield_hls,1,286248,tab_mvf_mv_1_x_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
xmem_copy_mvfield_hls,1,286248,tab_mvf_mv_1_x_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
xmem_copy_mvfield_hls,1,286252,tab_mvf_mv_1_y_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
xmem_copy_mvfield_hls,1,286252,tab_mvf_mv_1_y_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
xmem_copy_mvfield_hls,1,286256,tab_mvf_poc_0_Din_A,out,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
xmem_copy_mvfield_hls,1,286256,tab_mvf_poc_0_Dout_A,in,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
xmem_copy_mvfield_hls,1,286260,tab_mvf_poc_1_Din_A,out,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
xmem_copy_mvfield_hls,1,286260,tab_mvf_poc_1_Dout_A,in,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
xmem_copy_mvfield_hls,1,286264,tab_mvf_ref_idx_0_Din_A,out,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
xmem_copy_mvfield_hls,1,286264,tab_mvf_ref_idx_0_Dout_A,in,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
xmem_copy_mvfield_hls,1,286268,tab_mvf_ref_idx_1_Din_A,out,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
xmem_copy_mvfield_hls,1,286268,tab_mvf_ref_idx_1_Dout_A,in,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
#xmem_copy_mvfield_hls,0,0,index,in,32,1,apcall_arg
xmem_copy_mvfield_hls,0,784,current_mv_mv_0_x,in,16,1,struct_element struct_var=current_mv
xmem_copy_mvfield_hls,0,788,current_mv_mv_0_y,in,16,1,struct_element struct_var=current_mv
xmem_copy_mvfield_hls,0,792,current_mv_mv_1_x,in,16,1,struct_element struct_var=current_mv
xmem_copy_mvfield_hls,0,796,current_mv_mv_1_y,in,16,1,struct_element struct_var=current_mv
xmem_copy_mvfield_hls,0,800,current_mv_poc_0,in,32,1,struct_element struct_var=current_mv
xmem_copy_mvfield_hls,0,804,current_mv_poc_1,in,32,1,struct_element struct_var=current_mv
xmem_copy_mvfield_hls,0,808,current_mv_ref_idx_0,in,8,1,struct_element struct_var=current_mv
xmem_copy_mvfield_hls,0,812,current_mv_ref_idx_1,in,8,1,struct_element struct_var=current_mv
#intra_pred_libx265_hls,0,0,x0,in,32,1,apcall_arg
#intra_pred_libx265_hls,0,0,y0,in,32,1,apcall_arg
#intra_pred_libx265_hls,0,0,log2_size,in,32,1,apcall_arg
#intra_pred_libx265_hls,0,0,c_idx,in,32,1,apcall_arg
intra_pred_libx265_hls,0,488,tu_intra_pred_mode_c,in,32,1,parent_func
intra_pred_libx265_hls,0,484,tu_intra_pred_mode,in,32,1,parent_func
#intra_pred_libx265_hls,0,0,self_id,in,32,1,apcall_arg
intra_pred_libx265_hls,1,336,hshift_0,in,32,3,(complete partition) parent_func
intra_pred_libx265_hls,1,340,hshift_1,in,32,3,(complete partition) parent_func
intra_pred_libx265_hls,1,344,hshift_2,in,32,3,(complete partition) parent_func
#,0,1212,mxx,,64,1,struct
#mv_mp_mode_mx_hls,0,0,x,in,32,1,apcall_arg
#mv_mp_mode_mx_hls,0,0,y,in,32,1,apcall_arg
mv_mp_mode_mx_hls,0,172,log2_width,in,8,1,
mv_mp_mode_mx_hls,0,396,min_pu_width,in,32,1,
mv_mp_mode_mx_hls,0,372,log2_min_pu_size,in,32,1,
#mv_mp_mode_mx_hls,0,0,ref_pic_curr,in,32,1,apcall_arg
#mv_mp_mode_mx_hls,0,0,pred_flag_index,in,32,1,apcall_arg
mv_mp_mode_mx_hls,0,1212,mxx_x,out,16,1,struct_element struct_var=mxx
mv_mp_mode_mx_hls,0,1216,mxx_y,out,16,1,struct_element struct_var=mxx
mv_mp_mode_mx_hls,1,286240,tab_mvf_mv_0_x_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_hls,1,286240,tab_mvf_mv_0_x_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_hls,1,286244,tab_mvf_mv_0_y_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_hls,1,286244,tab_mvf_mv_0_y_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_hls,1,286248,tab_mvf_mv_1_x_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_hls,1,286248,tab_mvf_mv_1_x_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_hls,1,286252,tab_mvf_mv_1_y_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_hls,1,286252,tab_mvf_mv_1_y_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_hls,1,286256,tab_mvf_poc_0_Din_A,out,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_hls,1,286256,tab_mvf_poc_0_Dout_A,in,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_hls,1,286260,tab_mvf_poc_1_Din_A,out,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_hls,1,286260,tab_mvf_poc_1_Dout_A,in,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_hls,1,286264,tab_mvf_ref_idx_0_Din_A,out,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_hls,1,286264,tab_mvf_ref_idx_0_Dout_A,in,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_hls,1,286268,tab_mvf_ref_idx_1_Din_A,out,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_hls,1,286268,tab_mvf_ref_idx_1_Dout_A,in,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_hls,1,286244,tab_mvf_pred_flag_row_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
mv_mp_mode_mx_hls,1,286244,tab_mvf_pred_flag_row_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
#mv_mp_mode_mx_lt_hls,0,0,x,in,32,1,apcall_arg
#mv_mp_mode_mx_lt_hls,0,0,y,in,32,1,apcall_arg
mv_mp_mode_mx_lt_hls,0,172,log2_width,in,8,1,
mv_mp_mode_mx_lt_hls,0,396,min_pu_width,in,32,1,
#mv_mp_mode_mx_lt_hls,0,0,pred_flag_index,in,32,1,apcall_arg
#mv_mp_mode_mx_lt_hls,0,0,currIsLongTerm,in,32,1,apcall_arg
#mv_mp_mode_mx_lt_hls,0,0,ref_pic_curr,in,32,1,apcall_arg
mv_mp_mode_mx_lt_hls,0,372,log2_min_pu_size,in,32,1,
mv_mp_mode_mx_lt_hls,0,1548,poc,in,32,1,
mv_mp_mode_mx_lt_hls,1,286216,refPicList_0_isLongTerm_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
mv_mp_mode_mx_lt_hls,1,286216,refPicList_0_isLongTerm_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
mv_mp_mode_mx_lt_hls,1,286220,refPicList_1_isLongTerm_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
mv_mp_mode_mx_lt_hls,1,286220,refPicList_1_isLongTerm_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
mv_mp_mode_mx_lt_hls,0,1212,mxx_x,out,16,1,struct_element struct_var=mxx
mv_mp_mode_mx_lt_hls,0,1216,mxx_y,out,16,1,struct_element struct_var=mxx
mv_mp_mode_mx_lt_hls,1,286240,tab_mvf_mv_0_x_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_lt_hls,1,286240,tab_mvf_mv_0_x_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_lt_hls,1,286244,tab_mvf_mv_0_y_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_lt_hls,1,286244,tab_mvf_mv_0_y_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_lt_hls,1,286248,tab_mvf_mv_1_x_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_lt_hls,1,286248,tab_mvf_mv_1_x_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_lt_hls,1,286252,tab_mvf_mv_1_y_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_lt_hls,1,286252,tab_mvf_mv_1_y_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_lt_hls,1,286256,tab_mvf_poc_0_Din_A,out,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_lt_hls,1,286256,tab_mvf_poc_0_Dout_A,in,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_lt_hls,1,286260,tab_mvf_poc_1_Din_A,out,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_lt_hls,1,286260,tab_mvf_poc_1_Dout_A,in,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_lt_hls,1,286264,tab_mvf_ref_idx_0_Din_A,out,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_lt_hls,1,286264,tab_mvf_ref_idx_0_Dout_A,in,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_lt_hls,1,286268,tab_mvf_ref_idx_1_Din_A,out,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_lt_hls,1,286268,tab_mvf_ref_idx_1_Dout_A,in,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
mv_mp_mode_mx_lt_hls,1,286244,tab_mvf_pred_flag_row_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
mv_mp_mode_mx_lt_hls,1,286244,tab_mvf_pred_flag_row_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
#,1,286248,collocated_tab_mvf,,32,1,struct_pointer
#,0,1220,mvLXCol,,64,1,struct
temporal_luma_motion_vector_hls,0,172,log2_width,in,8,1,
temporal_luma_motion_vector_hls,0,1188,HEVCFrameSize,in,32,1,
temporal_luma_motion_vector_hls,0,1192,RefPicListSize,in,32,1,
temporal_luma_motion_vector_hls,0,552,xm_x0,in,32,1,
temporal_luma_motion_vector_hls,0,556,xm_y0,in,32,1,
temporal_luma_motion_vector_hls,0,160,nPbW,in,32,1,
temporal_luma_motion_vector_hls,0,164,nPbH,in,32,1,
#temporal_luma_motion_vector_hls,0,0,refIdxLx,in,32,1,apcall_arg
temporal_luma_motion_vector_hls,0,1220,mvLXCol_x,out,16,1,struct_element struct_var=mvLXCol
temporal_luma_motion_vector_hls,0,1224,mvLXCol_y,out,16,1,struct_element struct_var=mvLXCol
#temporal_luma_motion_vector_hls,0,0,X,in,32,1,apcall_arg
#temporal_luma_motion_vector_hls,0,0,colPic,in,32,1,apcall_arg
temporal_luma_motion_vector_hls,0,396,min_pu_width,in,32,1,
temporal_luma_motion_vector_hls,0,360,log2_ctb_size,in,32,1,
temporal_luma_motion_vector_hls,0,372,log2_min_pu_size,in,32,1,
temporal_luma_motion_vector_hls,0,332,height,in,32,1,
temporal_luma_motion_vector_hls,0,408,width,in,32,1,
temporal_luma_motion_vector_hls,0,284,ctb_width,in,32,1,
temporal_luma_motion_vector_hls,0,1208,collocated_list,in,8,1,
temporal_luma_motion_vector_hls,0,1548,poc,in,32,1,
temporal_luma_motion_vector_hls,1,286256,rpl_tab_void_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
temporal_luma_motion_vector_hls,1,286256,rpl_tab_void_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
temporal_luma_motion_vector_hls,0,1196,refPicList_0_nb_refs,in,32,1,
temporal_luma_motion_vector_hls,0,1200,refPicList_1_nb_refs,in,32,1,
temporal_luma_motion_vector_hls,1,286216,refPicList_0_isLongTerm_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
temporal_luma_motion_vector_hls,1,286216,refPicList_0_isLongTerm_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
temporal_luma_motion_vector_hls,1,286220,refPicList_1_isLongTerm_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
temporal_luma_motion_vector_hls,1,286220,refPicList_1_isLongTerm_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
temporal_luma_motion_vector_hls,1,286224,refPicList_0_list_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
temporal_luma_motion_vector_hls,1,286224,refPicList_0_list_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
temporal_luma_motion_vector_hls,1,286228,refPicList_1_list_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
temporal_luma_motion_vector_hls,1,286228,refPicList_1_list_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
temporal_luma_motion_vector_hls,1,286248,collocated_tab_mvf_mv_0_x_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286248 struct_var=collocated_tab_mvf
temporal_luma_motion_vector_hls,1,286248,collocated_tab_mvf_mv_0_x_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286248 struct_var=collocated_tab_mvf
temporal_luma_motion_vector_hls,1,286252,collocated_tab_mvf_mv_0_y_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286248 struct_var=collocated_tab_mvf
temporal_luma_motion_vector_hls,1,286252,collocated_tab_mvf_mv_0_y_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286248 struct_var=collocated_tab_mvf
temporal_luma_motion_vector_hls,1,286256,collocated_tab_mvf_mv_1_x_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286248 struct_var=collocated_tab_mvf
temporal_luma_motion_vector_hls,1,286256,collocated_tab_mvf_mv_1_x_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286248 struct_var=collocated_tab_mvf
temporal_luma_motion_vector_hls,1,286260,collocated_tab_mvf_mv_1_y_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286248 struct_var=collocated_tab_mvf
temporal_luma_motion_vector_hls,1,286260,collocated_tab_mvf_mv_1_y_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286248 struct_var=collocated_tab_mvf
temporal_luma_motion_vector_hls,1,286264,collocated_tab_mvf_poc_0_Din_A,out,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286248 struct_var=collocated_tab_mvf
temporal_luma_motion_vector_hls,1,286264,collocated_tab_mvf_poc_0_Dout_A,in,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286248 struct_var=collocated_tab_mvf
temporal_luma_motion_vector_hls,1,286268,collocated_tab_mvf_poc_1_Din_A,out,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286248 struct_var=collocated_tab_mvf
temporal_luma_motion_vector_hls,1,286268,collocated_tab_mvf_poc_1_Dout_A,in,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286248 struct_var=collocated_tab_mvf
temporal_luma_motion_vector_hls,1,286272,collocated_tab_mvf_ref_idx_0_Din_A,out,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286248 struct_var=collocated_tab_mvf
temporal_luma_motion_vector_hls,1,286272,collocated_tab_mvf_ref_idx_0_Dout_A,in,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286248 struct_var=collocated_tab_mvf
temporal_luma_motion_vector_hls,1,286276,collocated_tab_mvf_ref_idx_1_Din_A,out,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286248 struct_var=collocated_tab_mvf
temporal_luma_motion_vector_hls,1,286276,collocated_tab_mvf_ref_idx_1_Dout_A,in,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286248 struct_var=collocated_tab_mvf
temporal_luma_motion_vector_hls,1,286252,collocated_tab_mvf_pred_flag_row_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
temporal_luma_motion_vector_hls,1,286252,collocated_tab_mvf_pred_flag_row_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
#is_diff_mer_hls,0,0,xN,in,32,1,apcall_arg
#is_diff_mer_hls,0,0,yN,in,32,1,apcall_arg
is_diff_mer_hls,0,552,xm_x0,in,32,1,
is_diff_mer_hls,0,556,xm_y0,in,32,1,
is_diff_mer_hls,0,1236,xm_log2_parallel_merge_level,in,8,1,
#append_zero_motion_vector_candidates_hls,0,0,nb_refs_sel,in,32,1,apcall_arg
append_zero_motion_vector_candidates_hls,0,1444,merge_idx,in,32,1,
append_zero_motion_vector_candidates_hls,1,1300,mergecand_list_mv0_x_0,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1302,mergecand_list_mv0_x_1,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1304,mergecand_list_mv0_x_2,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1306,mergecand_list_mv0_x_3,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1308,mergecand_list_mv0_x_4,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1312,mergecand_list_mv0_y_0,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1314,mergecand_list_mv0_y_1,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1316,mergecand_list_mv0_y_2,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1318,mergecand_list_mv0_y_3,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1320,mergecand_list_mv0_y_4,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1324,mergecand_list_mv1_x_0,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1326,mergecand_list_mv1_x_1,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1328,mergecand_list_mv1_x_2,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1330,mergecand_list_mv1_x_3,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1332,mergecand_list_mv1_x_4,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1336,mergecand_list_mv1_y_0,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1338,mergecand_list_mv1_y_1,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1340,mergecand_list_mv1_y_2,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1342,mergecand_list_mv1_y_3,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1344,mergecand_list_mv1_y_4,out,16,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1348,mergecand_list_poc0_0,out,32,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1352,mergecand_list_poc0_1,out,32,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1356,mergecand_list_poc0_2,out,32,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1360,mergecand_list_poc0_3,out,32,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1364,mergecand_list_poc0_4,out,32,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1368,mergecand_list_poc1_0,out,32,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1372,mergecand_list_poc1_1,out,32,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1376,mergecand_list_poc1_2,out,32,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1380,mergecand_list_poc1_3,out,32,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1384,mergecand_list_poc1_4,out,32,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1388,mergecand_list_ref_idx0_0,out,8,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1389,mergecand_list_ref_idx0_1,out,8,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1390,mergecand_list_ref_idx0_2,out,8,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1391,mergecand_list_ref_idx0_3,out,8,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1392,mergecand_list_ref_idx0_4,out,8,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1396,mergecand_list_ref_idx1_0,out,8,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1397,mergecand_list_ref_idx1_1,out,8,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1398,mergecand_list_ref_idx1_2,out,8,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1399,mergecand_list_ref_idx1_3,out,8,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1400,mergecand_list_ref_idx1_4,out,8,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1404,mergecand_list_pred_flag_0,out,8,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1405,mergecand_list_pred_flag_1,out,8,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1406,mergecand_list_pred_flag_2,out,8,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1407,mergecand_list_pred_flag_3,out,8,5,(complete partition)
append_zero_motion_vector_candidates_hls,1,1408,mergecand_list_pred_flag_4,out,8,5,(complete partition)
append_zero_motion_vector_candidates_hls,0,132,xm_nb_merge_cand_i,in,8,1,
append_zero_motion_vector_candidates_hls,0,132,xm_nb_merge_cand_o,out,8,1,
append_zero_motion_vector_candidates_hls,0,1232,zero_idx_i,in,8,1,
append_zero_motion_vector_candidates_hls,0,1232,zero_idx_o,out,8,1,
append_zero_motion_vector_candidates_hls,0,452,slice_type,in,8,1,
append_zero_motion_vector_candidates_hls,1,286224,refPicList_0_list_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
append_zero_motion_vector_candidates_hls,1,286224,refPicList_0_list_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
append_zero_motion_vector_candidates_hls,1,286228,refPicList_1_list_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
append_zero_motion_vector_candidates_hls,1,286228,refPicList_1_list_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
#merge_mode_exit_hls,0,0,nPbW2,in,32,1,apcall_arg
#merge_mode_exit_hls,0,0,nPbH2,in,32,1,apcall_arg
merge_mode_exit_hls,0,1444,merge_idx,in,32,1,
merge_mode_exit_hls,0,816,current_mv_pred_flag,out,8,1,
merge_mode_exit_hls,0,784,current_mv_mv_0_x,out,16,1,struct_element struct_var=current_mv
merge_mode_exit_hls,0,788,current_mv_mv_0_y,out,16,1,struct_element struct_var=current_mv
merge_mode_exit_hls,0,792,current_mv_mv_1_x,out,16,1,struct_element struct_var=current_mv
merge_mode_exit_hls,0,796,current_mv_mv_1_y,out,16,1,struct_element struct_var=current_mv
merge_mode_exit_hls,0,800,current_mv_poc_0,out,32,1,struct_element struct_var=current_mv
merge_mode_exit_hls,0,804,current_mv_poc_1,out,32,1,struct_element struct_var=current_mv
merge_mode_exit_hls,0,808,current_mv_ref_idx_0,out,8,1,struct_element struct_var=current_mv
merge_mode_exit_hls,0,812,current_mv_ref_idx_1,out,8,1,struct_element struct_var=current_mv
merge_mode_exit_hls,1,1300,mergecand_list_mv0_x_0,in,16,5,(complete partition)
merge_mode_exit_hls,1,1302,mergecand_list_mv0_x_1,in,16,5,(complete partition)
merge_mode_exit_hls,1,1304,mergecand_list_mv0_x_2,in,16,5,(complete partition)
merge_mode_exit_hls,1,1306,mergecand_list_mv0_x_3,in,16,5,(complete partition)
merge_mode_exit_hls,1,1308,mergecand_list_mv0_x_4,in,16,5,(complete partition)
merge_mode_exit_hls,1,1312,mergecand_list_mv0_y_0,in,16,5,(complete partition)
merge_mode_exit_hls,1,1314,mergecand_list_mv0_y_1,in,16,5,(complete partition)
merge_mode_exit_hls,1,1316,mergecand_list_mv0_y_2,in,16,5,(complete partition)
merge_mode_exit_hls,1,1318,mergecand_list_mv0_y_3,in,16,5,(complete partition)
merge_mode_exit_hls,1,1320,mergecand_list_mv0_y_4,in,16,5,(complete partition)
merge_mode_exit_hls,1,1324,mergecand_list_mv1_x_0,in,16,5,(complete partition)
merge_mode_exit_hls,1,1326,mergecand_list_mv1_x_1,in,16,5,(complete partition)
merge_mode_exit_hls,1,1328,mergecand_list_mv1_x_2,in,16,5,(complete partition)
merge_mode_exit_hls,1,1330,mergecand_list_mv1_x_3,in,16,5,(complete partition)
merge_mode_exit_hls,1,1332,mergecand_list_mv1_x_4,in,16,5,(complete partition)
merge_mode_exit_hls,1,1336,mergecand_list_mv1_y_0,in,16,5,(complete partition)
merge_mode_exit_hls,1,1338,mergecand_list_mv1_y_1,in,16,5,(complete partition)
merge_mode_exit_hls,1,1340,mergecand_list_mv1_y_2,in,16,5,(complete partition)
merge_mode_exit_hls,1,1342,mergecand_list_mv1_y_3,in,16,5,(complete partition)
merge_mode_exit_hls,1,1344,mergecand_list_mv1_y_4,in,16,5,(complete partition)
merge_mode_exit_hls,1,1348,mergecand_list_poc0_0,in,32,5,(complete partition)
merge_mode_exit_hls,1,1352,mergecand_list_poc0_1,in,32,5,(complete partition)
merge_mode_exit_hls,1,1356,mergecand_list_poc0_2,in,32,5,(complete partition)
merge_mode_exit_hls,1,1360,mergecand_list_poc0_3,in,32,5,(complete partition)
merge_mode_exit_hls,1,1364,mergecand_list_poc0_4,in,32,5,(complete partition)
merge_mode_exit_hls,1,1368,mergecand_list_poc1_0,in,32,5,(complete partition)
merge_mode_exit_hls,1,1372,mergecand_list_poc1_1,in,32,5,(complete partition)
merge_mode_exit_hls,1,1376,mergecand_list_poc1_2,in,32,5,(complete partition)
merge_mode_exit_hls,1,1380,mergecand_list_poc1_3,in,32,5,(complete partition)
merge_mode_exit_hls,1,1384,mergecand_list_poc1_4,in,32,5,(complete partition)
merge_mode_exit_hls,1,1388,mergecand_list_ref_idx0_0,in,8,5,(complete partition)
merge_mode_exit_hls,1,1389,mergecand_list_ref_idx0_1,in,8,5,(complete partition)
merge_mode_exit_hls,1,1390,mergecand_list_ref_idx0_2,in,8,5,(complete partition)
merge_mode_exit_hls,1,1391,mergecand_list_ref_idx0_3,in,8,5,(complete partition)
merge_mode_exit_hls,1,1392,mergecand_list_ref_idx0_4,in,8,5,(complete partition)
merge_mode_exit_hls,1,1396,mergecand_list_ref_idx1_0,in,8,5,(complete partition)
merge_mode_exit_hls,1,1397,mergecand_list_ref_idx1_1,in,8,5,(complete partition)
merge_mode_exit_hls,1,1398,mergecand_list_ref_idx1_2,in,8,5,(complete partition)
merge_mode_exit_hls,1,1399,mergecand_list_ref_idx1_3,in,8,5,(complete partition)
merge_mode_exit_hls,1,1400,mergecand_list_ref_idx1_4,in,8,5,(complete partition)
merge_mode_exit_hls,1,1404,mergecand_list_pred_flag_0_i,in,8,5,(complete partition)
merge_mode_exit_hls,1,1404,mergecand_list_pred_flag_0_o,out,8,5,(complete partition)
merge_mode_exit_hls,1,1405,mergecand_list_pred_flag_1_i,in,8,5,(complete partition)
merge_mode_exit_hls,1,1405,mergecand_list_pred_flag_1_o,out,8,5,(complete partition)
merge_mode_exit_hls,1,1406,mergecand_list_pred_flag_2_i,in,8,5,(complete partition)
merge_mode_exit_hls,1,1406,mergecand_list_pred_flag_2_o,out,8,5,(complete partition)
merge_mode_exit_hls,1,1407,mergecand_list_pred_flag_3_i,in,8,5,(complete partition)
merge_mode_exit_hls,1,1407,mergecand_list_pred_flag_3_o,out,8,5,(complete partition)
merge_mode_exit_hls,1,1408,mergecand_list_pred_flag_4_i,in,8,5,(complete partition)
merge_mode_exit_hls,1,1408,mergecand_list_pred_flag_4_o,out,8,5,(complete partition)
#set_to_mergecand_list_hls,0,0,x,in,32,1,apcall_arg
#set_to_mergecand_list_hls,0,0,y,in,32,1,apcall_arg
set_to_mergecand_list_hls,0,172,log2_width,in,8,1,
set_to_mergecand_list_hls,0,132,xm_nb_merge_cand,in,8,1,
set_to_mergecand_list_hls,0,372,log2_min_pu_size,in,32,1,
set_to_mergecand_list_hls,0,396,min_pu_width,in,32,1,
set_to_mergecand_list_hls,1,1404,mergecand_list_pred_flag_0,out,8,5,(complete partition)
set_to_mergecand_list_hls,1,1405,mergecand_list_pred_flag_1,out,8,5,(complete partition)
set_to_mergecand_list_hls,1,1406,mergecand_list_pred_flag_2,out,8,5,(complete partition)
set_to_mergecand_list_hls,1,1407,mergecand_list_pred_flag_3,out,8,5,(complete partition)
set_to_mergecand_list_hls,1,1408,mergecand_list_pred_flag_4,out,8,5,(complete partition)
set_to_mergecand_list_hls,1,1300,mergecand_list_mv0_x_0,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1302,mergecand_list_mv0_x_1,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1304,mergecand_list_mv0_x_2,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1306,mergecand_list_mv0_x_3,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1308,mergecand_list_mv0_x_4,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1312,mergecand_list_mv0_y_0,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1314,mergecand_list_mv0_y_1,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1316,mergecand_list_mv0_y_2,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1318,mergecand_list_mv0_y_3,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1320,mergecand_list_mv0_y_4,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1324,mergecand_list_mv1_x_0,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1326,mergecand_list_mv1_x_1,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1328,mergecand_list_mv1_x_2,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1330,mergecand_list_mv1_x_3,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1332,mergecand_list_mv1_x_4,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1336,mergecand_list_mv1_y_0,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1338,mergecand_list_mv1_y_1,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1340,mergecand_list_mv1_y_2,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1342,mergecand_list_mv1_y_3,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1344,mergecand_list_mv1_y_4,out,16,5,(complete partition)
set_to_mergecand_list_hls,1,1348,mergecand_list_poc0_0,out,32,5,(complete partition)
set_to_mergecand_list_hls,1,1352,mergecand_list_poc0_1,out,32,5,(complete partition)
set_to_mergecand_list_hls,1,1356,mergecand_list_poc0_2,out,32,5,(complete partition)
set_to_mergecand_list_hls,1,1360,mergecand_list_poc0_3,out,32,5,(complete partition)
set_to_mergecand_list_hls,1,1364,mergecand_list_poc0_4,out,32,5,(complete partition)
set_to_mergecand_list_hls,1,1368,mergecand_list_poc1_0,out,32,5,(complete partition)
set_to_mergecand_list_hls,1,1372,mergecand_list_poc1_1,out,32,5,(complete partition)
set_to_mergecand_list_hls,1,1376,mergecand_list_poc1_2,out,32,5,(complete partition)
set_to_mergecand_list_hls,1,1380,mergecand_list_poc1_3,out,32,5,(complete partition)
set_to_mergecand_list_hls,1,1384,mergecand_list_poc1_4,out,32,5,(complete partition)
set_to_mergecand_list_hls,1,1388,mergecand_list_ref_idx0_0,out,8,5,(complete partition)
set_to_mergecand_list_hls,1,1389,mergecand_list_ref_idx0_1,out,8,5,(complete partition)
set_to_mergecand_list_hls,1,1390,mergecand_list_ref_idx0_2,out,8,5,(complete partition)
set_to_mergecand_list_hls,1,1391,mergecand_list_ref_idx0_3,out,8,5,(complete partition)
set_to_mergecand_list_hls,1,1392,mergecand_list_ref_idx0_4,out,8,5,(complete partition)
set_to_mergecand_list_hls,1,1396,mergecand_list_ref_idx1_0,out,8,5,(complete partition)
set_to_mergecand_list_hls,1,1397,mergecand_list_ref_idx1_1,out,8,5,(complete partition)
set_to_mergecand_list_hls,1,1398,mergecand_list_ref_idx1_2,out,8,5,(complete partition)
set_to_mergecand_list_hls,1,1399,mergecand_list_ref_idx1_3,out,8,5,(complete partition)
set_to_mergecand_list_hls,1,1400,mergecand_list_ref_idx1_4,out,8,5,(complete partition)
set_to_mergecand_list_hls,1,286240,tab_mvf_mv_0_x_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
set_to_mergecand_list_hls,1,286240,tab_mvf_mv_0_x_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
set_to_mergecand_list_hls,1,286244,tab_mvf_mv_0_y_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
set_to_mergecand_list_hls,1,286244,tab_mvf_mv_0_y_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
set_to_mergecand_list_hls,1,286248,tab_mvf_mv_1_x_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
set_to_mergecand_list_hls,1,286248,tab_mvf_mv_1_x_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
set_to_mergecand_list_hls,1,286252,tab_mvf_mv_1_y_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
set_to_mergecand_list_hls,1,286252,tab_mvf_mv_1_y_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
set_to_mergecand_list_hls,1,286256,tab_mvf_poc_0_Din_A,out,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
set_to_mergecand_list_hls,1,286256,tab_mvf_poc_0_Dout_A,in,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
set_to_mergecand_list_hls,1,286260,tab_mvf_poc_1_Din_A,out,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
set_to_mergecand_list_hls,1,286260,tab_mvf_poc_1_Dout_A,in,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
set_to_mergecand_list_hls,1,286264,tab_mvf_ref_idx_0_Din_A,out,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
set_to_mergecand_list_hls,1,286264,tab_mvf_ref_idx_0_Dout_A,in,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
set_to_mergecand_list_hls,1,286268,tab_mvf_ref_idx_1_Din_A,out,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
set_to_mergecand_list_hls,1,286268,tab_mvf_ref_idx_1_Dout_A,in,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
set_to_mergecand_list_hls,1,286244,tab_mvf_pred_flag_row_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
set_to_mergecand_list_hls,1,286244,tab_mvf_pred_flag_row_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
compare_mv_ref_idx_hls,0,172,log2_width,in,8,1,
#compare_mv_ref_idx_hls,0,0,xa,in,32,1,apcall_arg
#compare_mv_ref_idx_hls,0,0,ya,in,32,1,apcall_arg
#compare_mv_ref_idx_hls,0,0,xb,in,32,1,apcall_arg
#compare_mv_ref_idx_hls,0,0,yb,in,32,1,apcall_arg
compare_mv_ref_idx_hls,0,396,min_pu_width,in,32,1,
compare_mv_ref_idx_hls,0,372,log2_min_pu_size,in,32,1,
compare_mv_ref_idx_hls,1,286240,tab_mvf_mv_0_x_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
compare_mv_ref_idx_hls,1,286240,tab_mvf_mv_0_x_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
compare_mv_ref_idx_hls,1,286244,tab_mvf_mv_0_y_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
compare_mv_ref_idx_hls,1,286244,tab_mvf_mv_0_y_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
compare_mv_ref_idx_hls,1,286248,tab_mvf_mv_1_x_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
compare_mv_ref_idx_hls,1,286248,tab_mvf_mv_1_x_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
compare_mv_ref_idx_hls,1,286252,tab_mvf_mv_1_y_Din_A,out,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
compare_mv_ref_idx_hls,1,286252,tab_mvf_mv_1_y_Dout_A,in,16,1,bram_xmem struct_element addr_width=32 we_width=2 struct_size=32 struct_base=286240 struct_var=tab_mvf
compare_mv_ref_idx_hls,1,286256,tab_mvf_poc_0_Din_A,out,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
compare_mv_ref_idx_hls,1,286256,tab_mvf_poc_0_Dout_A,in,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
compare_mv_ref_idx_hls,1,286260,tab_mvf_poc_1_Din_A,out,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
compare_mv_ref_idx_hls,1,286260,tab_mvf_poc_1_Dout_A,in,32,1,bram_xmem struct_element addr_width=32 we_width=4 struct_size=32 struct_base=286240 struct_var=tab_mvf
compare_mv_ref_idx_hls,1,286264,tab_mvf_ref_idx_0_Din_A,out,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
compare_mv_ref_idx_hls,1,286264,tab_mvf_ref_idx_0_Dout_A,in,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
compare_mv_ref_idx_hls,1,286268,tab_mvf_ref_idx_1_Din_A,out,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
compare_mv_ref_idx_hls,1,286268,tab_mvf_ref_idx_1_Dout_A,in,8,1,bram_xmem struct_element addr_width=32 we_width=1 struct_size=32 struct_base=286240 struct_var=tab_mvf
compare_mv_ref_idx_hls,1,286244,tab_mvf_pred_flag_row_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
compare_mv_ref_idx_hls,1,286244,tab_mvf_pred_flag_row_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4
#combined_bi_predictive_merge_candidates_hls,0,0,comb_idx,in,8,1,apcall_arg
combined_bi_predictive_merge_candidates_hls,1,1300,mergecand_list_mv0_x_0_i,in,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1300,mergecand_list_mv0_x_0_o,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1302,mergecand_list_mv0_x_1_i,in,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1302,mergecand_list_mv0_x_1_o,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1304,mergecand_list_mv0_x_2_i,in,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1304,mergecand_list_mv0_x_2_o,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1306,mergecand_list_mv0_x_3_i,in,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1306,mergecand_list_mv0_x_3_o,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1308,mergecand_list_mv0_x_4,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1312,mergecand_list_mv0_y_0_i,in,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1312,mergecand_list_mv0_y_0_o,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1314,mergecand_list_mv0_y_1_i,in,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1314,mergecand_list_mv0_y_1_o,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1316,mergecand_list_mv0_y_2_i,in,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1316,mergecand_list_mv0_y_2_o,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1318,mergecand_list_mv0_y_3_i,in,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1318,mergecand_list_mv0_y_3_o,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1320,mergecand_list_mv0_y_4,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1324,mergecand_list_mv1_x_0_i,in,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1324,mergecand_list_mv1_x_0_o,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1326,mergecand_list_mv1_x_1_i,in,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1326,mergecand_list_mv1_x_1_o,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1328,mergecand_list_mv1_x_2_i,in,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1328,mergecand_list_mv1_x_2_o,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1330,mergecand_list_mv1_x_3_i,in,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1330,mergecand_list_mv1_x_3_o,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1332,mergecand_list_mv1_x_4,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1336,mergecand_list_mv1_y_0_i,in,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1336,mergecand_list_mv1_y_0_o,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1338,mergecand_list_mv1_y_1_i,in,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1338,mergecand_list_mv1_y_1_o,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1340,mergecand_list_mv1_y_2_i,in,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1340,mergecand_list_mv1_y_2_o,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1342,mergecand_list_mv1_y_3_i,in,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1342,mergecand_list_mv1_y_3_o,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1344,mergecand_list_mv1_y_4,out,16,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1348,mergecand_list_poc0_0_i,in,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1348,mergecand_list_poc0_0_o,out,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1352,mergecand_list_poc0_1_i,in,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1352,mergecand_list_poc0_1_o,out,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1356,mergecand_list_poc0_2_i,in,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1356,mergecand_list_poc0_2_o,out,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1360,mergecand_list_poc0_3_i,in,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1360,mergecand_list_poc0_3_o,out,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1364,mergecand_list_poc0_4,out,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1368,mergecand_list_poc1_0_i,in,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1368,mergecand_list_poc1_0_o,out,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1372,mergecand_list_poc1_1_i,in,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1372,mergecand_list_poc1_1_o,out,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1376,mergecand_list_poc1_2_i,in,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1376,mergecand_list_poc1_2_o,out,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1380,mergecand_list_poc1_3_i,in,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1380,mergecand_list_poc1_3_o,out,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1384,mergecand_list_poc1_4,out,32,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1388,mergecand_list_ref_idx0_0_i,in,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1388,mergecand_list_ref_idx0_0_o,out,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1389,mergecand_list_ref_idx0_1_i,in,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1389,mergecand_list_ref_idx0_1_o,out,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1390,mergecand_list_ref_idx0_2_i,in,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1390,mergecand_list_ref_idx0_2_o,out,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1391,mergecand_list_ref_idx0_3_i,in,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1391,mergecand_list_ref_idx0_3_o,out,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1392,mergecand_list_ref_idx0_4,out,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1396,mergecand_list_ref_idx1_0_i,in,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1396,mergecand_list_ref_idx1_0_o,out,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1397,mergecand_list_ref_idx1_1_i,in,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1397,mergecand_list_ref_idx1_1_o,out,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1398,mergecand_list_ref_idx1_2_i,in,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1398,mergecand_list_ref_idx1_2_o,out,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1399,mergecand_list_ref_idx1_3_i,in,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1399,mergecand_list_ref_idx1_3_o,out,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1400,mergecand_list_ref_idx1_4,out,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1404,mergecand_list_pred_flag_0_i,in,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1404,mergecand_list_pred_flag_0_o,out,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1405,mergecand_list_pred_flag_1_i,in,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1405,mergecand_list_pred_flag_1_o,out,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1406,mergecand_list_pred_flag_2_i,in,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1406,mergecand_list_pred_flag_2_o,out,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1407,mergecand_list_pred_flag_3_i,in,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1407,mergecand_list_pred_flag_3_o,out,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,1,1408,mergecand_list_pred_flag_4,out,8,5,(complete partition)
combined_bi_predictive_merge_candidates_hls,0,132,xm_nb_merge_cand_i,in,8,1,
combined_bi_predictive_merge_candidates_hls,0,132,xm_nb_merge_cand_o,out,8,1,
combined_bi_predictive_merge_candidates_hls,0,1444,merge_idx,in,32,1,
ff_hevc_luma_mv_merge_mode_hls,0,172,log2_width,in,8,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,1208,collocated_list,in,8,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,396,min_pu_width,in,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,600,cand_bottom_left,in,1,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,584,cand_left,in,1,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,588,cand_up_left,in,1,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,580,cand_up,in,1,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,596,cand_up_right,in,1,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,452,slice_type,in,8,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,564,part_mode,in,8,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1292,nb_refs_0,in,32,2,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1296,nb_refs_1,in,32,2,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,0,132,xm_nb_merge_cand_i,in,8,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,132,xm_nb_merge_cand_o,out,8,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,372,log2_min_pu_size,in,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,408,width,in,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,332,height,in,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,456,slice_temporal_mvp_enabled_flag,in,8,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,1220,mvLXCol_x,in,16,1,struct_element parent_func struct_var=mvLXCol
ff_hevc_luma_mv_merge_mode_hls,0,1224,mvLXCol_y,in,16,1,struct_element parent_func struct_var=mvLXCol
ff_hevc_luma_mv_merge_mode_hls,0,1204,ref_poc,in,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,1232,zero_idx,out,8,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,1196,refPicList_0_nb_refs,in,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,1200,refPicList_1_nb_refs,in,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,1,286224,refPicList_0_list_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
ff_hevc_luma_mv_merge_mode_hls,1,286224,refPicList_0_list_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
ff_hevc_luma_mv_merge_mode_hls,1,286228,refPicList_1_list_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
ff_hevc_luma_mv_merge_mode_hls,1,286228,refPicList_1_list_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
ff_hevc_luma_mv_merge_mode_hls,1,286244,tab_mvf_pred_flag_row_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
ff_hevc_luma_mv_merge_mode_hls,1,286244,tab_mvf_pred_flag_row_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
ff_hevc_luma_mv_merge_mode_hls,0,1548,poc,in,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,1552,max_num_merge_cand,in,32,1,parent_func
#ff_hevc_luma_mv_merge_mode_hls,0,0,isTemporal,in,1,1,apcall_arg
ff_hevc_luma_mv_merge_mode_hls,0,160,nPbW_i,in,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,160,nPbW_o,out,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,164,nPbH_i,in,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,164,nPbH_o,out,32,1,parent_func
#ff_hevc_luma_mv_merge_mode_hls,0,0,log2_cb_size,in,32,1,apcall_arg
ff_hevc_luma_mv_merge_mode_hls,0,1544,part_idx,in,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,1444,merge_idx,in,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,1236,xm_log2_parallel_merge_level,in,8,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,544,xm_x,in,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,548,xm_y,in,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,552,xm_x0_i,in,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,552,xm_x0_o,out,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,556,xm_y0_i,in,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,556,xm_y0_o,out,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,0,1228,xm_dbg,out,32,1,parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1300,mergecand_list_mv0_x_0,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1302,mergecand_list_mv0_x_1,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1304,mergecand_list_mv0_x_2,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1306,mergecand_list_mv0_x_3,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1308,mergecand_list_mv0_x_4,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1312,mergecand_list_mv0_y_0,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1314,mergecand_list_mv0_y_1,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1316,mergecand_list_mv0_y_2,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1318,mergecand_list_mv0_y_3,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1320,mergecand_list_mv0_y_4,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1324,mergecand_list_mv1_x_0,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1326,mergecand_list_mv1_x_1,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1328,mergecand_list_mv1_x_2,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1330,mergecand_list_mv1_x_3,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1332,mergecand_list_mv1_x_4,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1336,mergecand_list_mv1_y_0,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1338,mergecand_list_mv1_y_1,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1340,mergecand_list_mv1_y_2,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1342,mergecand_list_mv1_y_3,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1344,mergecand_list_mv1_y_4,out,16,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1348,mergecand_list_poc0_0,out,32,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1352,mergecand_list_poc0_1,out,32,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1356,mergecand_list_poc0_2,out,32,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1360,mergecand_list_poc0_3,out,32,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1364,mergecand_list_poc0_4,out,32,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1368,mergecand_list_poc1_0,out,32,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1372,mergecand_list_poc1_1,out,32,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1376,mergecand_list_poc1_2,out,32,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1380,mergecand_list_poc1_3,out,32,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1384,mergecand_list_poc1_4,out,32,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1388,mergecand_list_ref_idx0_0,out,8,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1389,mergecand_list_ref_idx0_1,out,8,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1390,mergecand_list_ref_idx0_2,out,8,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1391,mergecand_list_ref_idx0_3,out,8,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1392,mergecand_list_ref_idx0_4,out,8,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1396,mergecand_list_ref_idx1_0,out,8,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1397,mergecand_list_ref_idx1_1,out,8,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1398,mergecand_list_ref_idx1_2,out,8,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1399,mergecand_list_ref_idx1_3,out,8,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1400,mergecand_list_ref_idx1_4,out,8,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1404,mergecand_list_pred_flag_0,out,8,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1405,mergecand_list_pred_flag_1,out,8,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1406,mergecand_list_pred_flag_2,out,8,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1407,mergecand_list_pred_flag_3,out,8,5,(complete partition) parent_func
ff_hevc_luma_mv_merge_mode_hls,1,1408,mergecand_list_pred_flag_4,out,8,5,(complete partition) parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,552,xm_x0,in,32,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,556,xm_y0,in,32,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,160,nPbW,in,32,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,164,nPbH,in,32,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,172,log2_width,in,8,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,1544,part_idx,in,32,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,1548,poc,in,32,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,456,slice_temporal_mvp_enabled_flag,in,8,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,1444,merge_idx,in,32,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,784,current_mv_mv_0_x,out,16,1,struct_element parent_func struct_var=current_mv
ff_hevc_luma_mv_mvp_mode_hls,0,788,current_mv_mv_0_y,out,16,1,struct_element parent_func struct_var=current_mv
ff_hevc_luma_mv_mvp_mode_hls,0,792,current_mv_mv_1_x,out,16,1,struct_element parent_func struct_var=current_mv
ff_hevc_luma_mv_mvp_mode_hls,0,796,current_mv_mv_1_y,out,16,1,struct_element parent_func struct_var=current_mv
ff_hevc_luma_mv_mvp_mode_hls,0,800,current_mv_poc_0,in,32,1,struct_element parent_func struct_var=current_mv
ff_hevc_luma_mv_mvp_mode_hls,0,804,current_mv_poc_1,in,32,1,struct_element parent_func struct_var=current_mv
ff_hevc_luma_mv_mvp_mode_hls,0,808,current_mv_ref_idx_0,in,8,1,struct_element parent_func struct_var=current_mv
ff_hevc_luma_mv_mvp_mode_hls,0,812,current_mv_ref_idx_1,in,8,1,struct_element parent_func struct_var=current_mv
ff_hevc_luma_mv_mvp_mode_hls,0,396,min_pu_width,in,32,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,372,log2_min_pu_size,in,32,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,1212,mxx_x,in,16,1,struct_element parent_func struct_var=mxx
ff_hevc_luma_mv_mvp_mode_hls,0,1216,mxx_y,in,16,1,struct_element parent_func struct_var=mxx
ff_hevc_luma_mv_mvp_mode_hls,0,888,mvp_lx_flag,in,32,1,parent_func
#ff_hevc_luma_mv_mvp_mode_hls,0,0,lx,in,8,1,apcall_arg
ff_hevc_luma_mv_mvp_mode_hls,0,600,cand_bottom_left,in,8,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,584,cand_left,in,8,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,580,cand_up,in,8,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,588,cand_up_left,in,8,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,596,cand_up_right,in,8,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,408,width,in,32,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,332,height,in,32,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,1196,refPicList_0_nb_refs,in,32,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,1200,refPicList_1_nb_refs,in,32,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,1220,mvLXCol_x,in,16,1,struct_element parent_func struct_var=mvLXCol
ff_hevc_luma_mv_mvp_mode_hls,0,1224,mvLXCol_y,in,16,1,struct_element parent_func struct_var=mvLXCol
ff_hevc_luma_mv_mvp_mode_hls,0,1204,ref_poc,in,32,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,1208,collocated_list,in,8,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,1540,is_temporal,in,1,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,0,1228,xm_dbg,out,32,1,parent_func
ff_hevc_luma_mv_mvp_mode_hls,1,286216,refPicList_0_isLongTerm_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
ff_hevc_luma_mv_mvp_mode_hls,1,286216,refPicList_0_isLongTerm_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
ff_hevc_luma_mv_mvp_mode_hls,1,286220,refPicList_1_isLongTerm_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
ff_hevc_luma_mv_mvp_mode_hls,1,286220,refPicList_1_isLongTerm_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
ff_hevc_luma_mv_mvp_mode_hls,1,286224,refPicList_0_list_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
ff_hevc_luma_mv_mvp_mode_hls,1,286224,refPicList_0_list_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
ff_hevc_luma_mv_mvp_mode_hls,1,286228,refPicList_1_list_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
ff_hevc_luma_mv_mvp_mode_hls,1,286228,refPicList_1_list_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
ff_hevc_luma_mv_mvp_mode_hls,1,286244,tab_mvf_pred_flag_row_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
ff_hevc_luma_mv_mvp_mode_hls,1,286244,tab_mvf_pred_flag_row_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
#,0,1436,pu_mvd,,64,1,struct
#hls_prediction_unit_hls,0,0,x0,in,32,1,apcall_arg
#hls_prediction_unit_hls,0,0,y0,in,32,1,apcall_arg
hls_prediction_unit_hls,0,160,nPbW,in,32,1,parent_func
hls_prediction_unit_hls,0,164,nPbH,in,32,1,parent_func
#hls_prediction_unit_hls,0,0,log2_cb_size,in,32,1,apcall_arg
hls_prediction_unit_hls,0,1544,part_idx,in,32,1,parent_func
hls_prediction_unit_hls,0,44,idx,in,32,1,parent_func
hls_prediction_unit_hls,0,396,min_pu_width,in,32,1,parent_func
hls_prediction_unit_hls,0,368,log2_min_cb_size,in,32,1,parent_func
hls_prediction_unit_hls,0,392,min_cb_width,in,32,1,parent_func
hls_prediction_unit_hls,1,286176,skip_flag_Din_A,out,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_prediction_unit_hls,1,286176,skip_flag_Dout_A,in,8,1,bram_xmem xmem_pointer addr_width=32 we_width=1 parent_func
hls_prediction_unit_hls,0,1552,max_num_merge_cand,in,32,1,parent_func
hls_prediction_unit_hls,0,784,current_mv_mv_0_x_i,in,16,1,struct_element parent_func struct_var=current_mv
hls_prediction_unit_hls,0,784,current_mv_mv_0_x_o,out,16,1,struct_element parent_func struct_var=current_mv
hls_prediction_unit_hls,0,788,current_mv_mv_0_y_i,in,16,1,struct_element parent_func struct_var=current_mv
hls_prediction_unit_hls,0,788,current_mv_mv_0_y_o,out,16,1,struct_element parent_func struct_var=current_mv
hls_prediction_unit_hls,0,792,current_mv_mv_1_x_i,in,16,1,struct_element parent_func struct_var=current_mv
hls_prediction_unit_hls,0,792,current_mv_mv_1_x_o,out,16,1,struct_element parent_func struct_var=current_mv
hls_prediction_unit_hls,0,796,current_mv_mv_1_y_i,in,16,1,struct_element parent_func struct_var=current_mv
hls_prediction_unit_hls,0,796,current_mv_mv_1_y_o,out,16,1,struct_element parent_func struct_var=current_mv
hls_prediction_unit_hls,0,800,current_mv_poc_0,out,32,1,struct_element parent_func struct_var=current_mv
hls_prediction_unit_hls,0,804,current_mv_poc_1,out,32,1,struct_element parent_func struct_var=current_mv
hls_prediction_unit_hls,0,808,current_mv_ref_idx_0_i,in,8,1,struct_element parent_func struct_var=current_mv
hls_prediction_unit_hls,0,808,current_mv_ref_idx_0_o,out,8,1,struct_element parent_func struct_var=current_mv
hls_prediction_unit_hls,0,812,current_mv_ref_idx_1_i,in,8,1,struct_element parent_func struct_var=current_mv
hls_prediction_unit_hls,0,812,current_mv_ref_idx_1_o,out,8,1,struct_element parent_func struct_var=current_mv
hls_prediction_unit_hls,0,816,current_mv_pred_flag_i,in,8,1,parent_func
hls_prediction_unit_hls,0,816,current_mv_pred_flag_o,out,8,1,parent_func
hls_prediction_unit_hls,0,452,slice_type,in,8,1,parent_func
hls_prediction_unit_hls,0,1456,rv_ff_hevc_luma_mv_merge_mode,in,32,1,parent_func
hls_prediction_unit_hls,0,1460,rv_ff_hevc_ref_idx_lx_decode,in,32,1,parent_func
hls_prediction_unit_hls,0,1464,rv_ff_hevc_hls_mvd_coding,in,32,1,parent_func
hls_prediction_unit_hls,0,1468,rv_ff_hevc_luma_mv_mvp_mode,in,32,1,parent_func
hls_prediction_unit_hls,0,1472,rv_hevc_await_progress,in,32,1,parent_func
hls_prediction_unit_hls,0,1476,rv_hevc_await_progress_bl,in,32,1,parent_func
hls_prediction_unit_hls,0,1480,rv_ff_upsample_block,in,32,1,parent_func
hls_prediction_unit_hls,0,1484,rv_luma_mc_uni_libx265,in,32,1,parent_func
hls_prediction_unit_hls,0,1488,rv_chroma_mc_uni_libx265,in,32,1,parent_func
hls_prediction_unit_hls,0,1492,rv_xmem_copy_mvfield,in,32,1,parent_func
hls_prediction_unit_hls,0,1496,rv_setMVPOC,in,32,1,parent_func
hls_prediction_unit_hls,0,1500,rv_checkref,in,32,1,parent_func
hls_prediction_unit_hls,0,1444,merge_idx,out,32,1,parent_func
#hls_prediction_unit_hls,0,0,tid,in,32,1,apcall_arg
hls_prediction_unit_hls,0,888,mvp_lx_flag,out,32,1,parent_func
hls_prediction_unit_hls,0,1436,pu_mvd_x,out,16,1,struct_element parent_func struct_var=pu_mvd
hls_prediction_unit_hls,0,1440,pu_mvd_y,out,16,1,struct_element parent_func struct_var=pu_mvd
hls_prediction_unit_hls,1,286244,tab_mvf_pred_flag_row_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_prediction_unit_hls,1,286244,tab_mvf_pred_flag_row_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_prediction_unit_hls,0,1448,skipref,in,1,1,parent_func
hls_prediction_unit_hls,0,1452,interref,in,1,1,parent_func
hls_prediction_unit_hls,0,372,log2_min_pu_size,in,32,1,parent_func
hls_prediction_unit_hls,0,172,log2_width,in,8,1,parent_func
hls_prediction_unit_hls,0,504,merge_flag,out,8,1,parent_func
hls_prediction_unit_hls,0,464,depth,in,32,1,parent_func
hls_prediction_unit_hls,1,1292,nb_refs_0,in,32,2,(complete partition) parent_func
hls_prediction_unit_hls,1,1296,nb_refs_1,in,32,2,(complete partition) parent_func
#hls_prediction_unit_hls,0,0,mvd_l1_zero_flag,in,8,1,apcall_arg
hls_prediction_unit_hls,1,180,predColBuf_0_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,180,predColBuf_0_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,184,predColBuf_1_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,184,predColBuf_1_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,188,predColBuf_2_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,188,predColBuf_2_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,192,predColBuf_3_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,192,predColBuf_3_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,196,predColBuf_4_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,196,predColBuf_4_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,200,predColBuf_5_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,200,predColBuf_5_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,204,predColBuf_6_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,204,predColBuf_6_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,208,predColBuf_7_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,208,predColBuf_7_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,212,predColBuf_8_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,212,predColBuf_8_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,216,predColBuf_9_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,216,predColBuf_9_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,220,predColBuf_10_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,220,predColBuf_10_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,224,predColBuf_11_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,224,predColBuf_11_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,228,predColBuf_12_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,228,predColBuf_12_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,232,predColBuf_13_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,232,predColBuf_13_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,236,predColBuf_14_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,236,predColBuf_14_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,240,predColBuf_15_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,240,predColBuf_15_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,244,predColBuf_16_i,in,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,244,predColBuf_16_o,out,32,17,(complete partition) parent_func
hls_prediction_unit_hls,1,286224,refPicList_0_list_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_prediction_unit_hls,1,286224,refPicList_0_list_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_prediction_unit_hls,1,286228,refPicList_1_list_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_prediction_unit_hls,1,286228,refPicList_1_list_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_prediction_unit_hls,1,286232,refPicList_0_ref_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_prediction_unit_hls,1,286232,refPicList_0_ref_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_prediction_unit_hls,1,286236,refPicList_1_ref_Din_A,out,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
hls_prediction_unit_hls,1,286236,refPicList_1_ref_Dout_A,in,32,1,bram_xmem xmem_pointer addr_width=32 we_width=4 parent_func
#hls_prediction_unit_hls,0,0,inter_layer_ref,in,32,1,apcall_arg
hls_prediction_unit_hls,0,1504,threads_type,in,8,1,parent_func
[SCALAR] adr:1444, bankAdr:44, sBank:9, d:0, a:16, f:append_zero_motion_vector_candidates_hls, v:merge_idx
[SCALAR] adr:1300, bankAdr:40, sBank:5, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv0_x_0
[SCALAR] adr:1302, bankAdr:42, sBank:5, d:1, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv0_x_1
[SCALAR] adr:1304, bankAdr:40, sBank:6, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv0_x_2
[SCALAR] adr:1306, bankAdr:42, sBank:6, d:1, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv0_x_3
[SCALAR] adr:1308, bankAdr:40, sBank:7, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv0_x_4
[SCALAR] adr:1312, bankAdr:40, sBank:8, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv0_y_0
[SCALAR] adr:1314, bankAdr:42, sBank:8, d:1, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv0_y_1
[SCALAR] adr:1316, bankAdr:40, sBank:9, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv0_y_2
[SCALAR] adr:1318, bankAdr:42, sBank:9, d:1, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv0_y_3
[SCALAR] adr:1320, bankAdr:40, sBank:10, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv0_y_4
[SCALAR] adr:1324, bankAdr:40, sBank:11, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv1_x_0
[SCALAR] adr:1326, bankAdr:42, sBank:11, d:1, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv1_x_1
[SCALAR] adr:1328, bankAdr:40, sBank:12, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv1_x_2
[SCALAR] adr:1330, bankAdr:42, sBank:12, d:1, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv1_x_3
[SCALAR] adr:1332, bankAdr:40, sBank:13, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv1_x_4
[SCALAR] adr:1336, bankAdr:40, sBank:14, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv1_y_0
[SCALAR] adr:1338, bankAdr:42, sBank:14, d:1, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv1_y_1
[SCALAR] adr:1340, bankAdr:40, sBank:15, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv1_y_2
[SCALAR] adr:1342, bankAdr:42, sBank:15, d:1, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv1_y_3
[SCALAR] adr:1344, bankAdr:40, sBank:16, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_mv1_y_4
[SCALAR] adr:1348, bankAdr:40, sBank:17, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_poc0_0
[SCALAR] adr:1352, bankAdr:40, sBank:18, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_poc0_1
[SCALAR] adr:1356, bankAdr:40, sBank:19, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_poc0_2
[SCALAR] adr:1360, bankAdr:40, sBank:20, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_poc0_3
[SCALAR] adr:1364, bankAdr:40, sBank:21, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_poc0_4
[SCALAR] adr:1368, bankAdr:40, sBank:22, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_poc1_0
[SCALAR] adr:1372, bankAdr:40, sBank:23, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_poc1_1
[SCALAR] adr:1376, bankAdr:40, sBank:24, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_poc1_2
[SCALAR] adr:1380, bankAdr:40, sBank:25, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_poc1_3
[SCALAR] adr:1384, bankAdr:40, sBank:26, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_poc1_4
[SCALAR] adr:1388, bankAdr:40, sBank:27, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_ref_idx0_0
[SCALAR] adr:1389, bankAdr:41, sBank:27, d:1, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_ref_idx0_1
[SCALAR] adr:1390, bankAdr:42, sBank:27, d:0, a:1, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_ref_idx0_2
[SCALAR] adr:1391, bankAdr:43, sBank:27, d:1, a:1, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_ref_idx0_3
[SCALAR] adr:1392, bankAdr:40, sBank:28, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_ref_idx0_4
[SCALAR] adr:1396, bankAdr:40, sBank:29, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_ref_idx1_0
[SCALAR] adr:1397, bankAdr:41, sBank:29, d:1, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_ref_idx1_1
[SCALAR] adr:1398, bankAdr:42, sBank:29, d:0, a:1, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_ref_idx1_2
[SCALAR] adr:1399, bankAdr:43, sBank:29, d:1, a:1, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_ref_idx1_3
[SCALAR] adr:1400, bankAdr:40, sBank:30, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_ref_idx1_4
[SCALAR] adr:1404, bankAdr:40, sBank:31, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_pred_flag_0
[SCALAR] adr:1405, bankAdr:41, sBank:31, d:1, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_pred_flag_1
[SCALAR] adr:1406, bankAdr:42, sBank:31, d:0, a:1, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_pred_flag_2
[SCALAR] adr:1407, bankAdr:43, sBank:31, d:1, a:1, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_pred_flag_3
[SCALAR] adr:1408, bankAdr:44, sBank:0, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:mergecand_list_pred_flag_4
[SCALAR] adr:132, bankAdr:4, sBank:1, d:0, a:9, f:append_zero_motion_vector_candidates_hls, v:xm_nb_merge_cand_i
[SCALAR] adr:132, bankAdr:4, sBank:1, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:xm_nb_merge_cand_o
[SCALAR] adr:1232, bankAdr:36, sBank:20, d:0, a:10, f:append_zero_motion_vector_candidates_hls, v:zero_idx_i
[SCALAR] adr:1232, bankAdr:36, sBank:20, d:1, a:0, f:append_zero_motion_vector_candidates_hls, v:zero_idx_o
[SCALAR] adr:452, bankAdr:12, sBank:17, d:0, a:8, f:append_zero_motion_vector_candidates_hls, v:slice_type
[ARRAY] adr:286224, bankAdr:278032, aBank:0, d:0, a:0, f:append_zero_motion_vector_candidates_hls, v:refPicList_0_list_Din_A
[ARRAY] adr:286224, bankAdr:278032, aBank:0, d:0, a:160, f:append_zero_motion_vector_candidates_hls, v:refPicList_0_list_Dout_A
[ARRAY] adr:286228, bankAdr:278036, aBank:0, d:0, a:1, f:append_zero_motion_vector_candidates_hls, v:refPicList_1_list_Din_A
[ARRAY] adr:286228, bankAdr:278036, aBank:0, d:0, a:161, f:append_zero_motion_vector_candidates_hls, v:refPicList_1_list_Dout_A
[ARRAY] adr:286160, bankAdr:277968, aBank:0, d:0, a:2, f:chroma_mc_uni_libx265_hls, v:xcache_null_base_Din_A
[ARRAY] adr:286160, bankAdr:277968, aBank:0, d:0, a:162, f:chroma_mc_uni_libx265_hls, v:xcache_null_base_Dout_A
[SCALAR] adr:1556, bankAdr:48, sBank:5, d:0, a:17, f:chroma_mc_uni_libx265_hls, v:frame_data_0
[SCALAR] adr:1560, bankAdr:48, sBank:6, d:0, a:16, f:chroma_mc_uni_libx265_hls, v:frame_data_1
[SCALAR] adr:1564, bankAdr:48, sBank:7, d:0, a:14, f:chroma_mc_uni_libx265_hls, v:frame_data_2
[SCALAR] adr:1568, bankAdr:48, sBank:8, d:0, a:16, f:chroma_mc_uni_libx265_hls, v:frame_linesize_0
[SCALAR] adr:1572, bankAdr:48, sBank:9, d:1, a:16, f:chroma_mc_uni_libx265_hls, v:frame_linesize_1
[SCALAR] adr:1576, bankAdr:48, sBank:10, d:0, a:13, f:chroma_mc_uni_libx265_hls, v:frame_linesize_2
[ARRAY] adr:284944, bankAdr:276752, aBank:0, d:0, a:3, f:chroma_mc_uni_libx265_hls, v:refPicList_frame_data_Din_A
[ARRAY] adr:284944, bankAdr:276752, aBank:0, d:0, a:163, f:chroma_mc_uni_libx265_hls, v:refPicList_frame_data_Dout_A
[ARRAY] adr:285328, bankAdr:277136, aBank:0, d:0, a:4, f:chroma_mc_uni_libx265_hls, v:refPicList_frame_linesize_Din_A
[ARRAY] adr:285328, bankAdr:277136, aBank:0, d:0, a:164, f:chroma_mc_uni_libx265_hls, v:refPicList_frame_linesize_Dout_A
[SCALAR] adr:784, bankAdr:24, sBank:4, d:0, a:10, f:chroma_mc_uni_libx265_hls, v:current_mv_mv_0_x
[SCALAR] adr:788, bankAdr:24, sBank:5, d:1, a:16, f:chroma_mc_uni_libx265_hls, v:current_mv_mv_0_y
[SCALAR] adr:792, bankAdr:24, sBank:6, d:1, a:15, f:chroma_mc_uni_libx265_hls, v:current_mv_mv_1_x
[SCALAR] adr:796, bankAdr:24, sBank:7, d:1, a:13, f:chroma_mc_uni_libx265_hls, v:current_mv_mv_1_y
[SCALAR] adr:800, bankAdr:24, sBank:8, d:1, a:16, f:chroma_mc_uni_libx265_hls, v:current_mv_poc_0
[SCALAR] adr:804, bankAdr:24, sBank:9, d:0, a:17, f:chroma_mc_uni_libx265_hls, v:current_mv_poc_1
[SCALAR] adr:808, bankAdr:24, sBank:10, d:1, a:13, f:chroma_mc_uni_libx265_hls, v:current_mv_ref_idx_0
[SCALAR] adr:812, bankAdr:24, sBank:11, d:0, a:11, f:chroma_mc_uni_libx265_hls, v:current_mv_ref_idx_1
[SCALAR] adr:816, bankAdr:24, sBank:12, d:0, a:13, f:chroma_mc_uni_libx265_hls, v:current_mv_pred_flag
[SCALAR] adr:728, bankAdr:20, sBank:22, d:0, a:11, f:chroma_mc_uni_libx265_hls, v:ref_idx
[SCALAR] adr:452, bankAdr:12, sBank:17, d:1, a:8, f:chroma_mc_uni_libx265_hls, v:slice_type
[SCALAR] adr:1532, bankAdr:44, sBank:31, d:0, a:15, f:chroma_mc_uni_libx265_hls, v:weighted_pred_flag
[SCALAR] adr:1536, bankAdr:48, sBank:0, d:0, a:16, f:chroma_mc_uni_libx265_hls, v:weighted_bipred_flag
[SCALAR] adr:1144, bankAdr:32, sBank:30, d:0, a:5, f:chroma_mc_uni_libx265_hls, v:pixel_shift
[SCALAR] adr:408, bankAdr:12, sBank:6, d:0, a:17, f:chroma_mc_uni_libx265_hls, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:0, a:8, f:chroma_mc_uni_libx265_hls, v:height
[SCALAR] adr:336, bankAdr:8, sBank:20, d:1, a:10, f:chroma_mc_uni_libx265_hls, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:0, a:11, f:chroma_mc_uni_libx265_hls, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:1, a:10, f:chroma_mc_uni_libx265_hls, v:hshift_2
[SCALAR] adr:348, bankAdr:8, sBank:23, d:0, a:9, f:chroma_mc_uni_libx265_hls, v:vshift_0
[SCALAR] adr:352, bankAdr:8, sBank:24, d:0, a:7, f:chroma_mc_uni_libx265_hls, v:vshift_1
[SCALAR] adr:356, bankAdr:8, sBank:25, d:0, a:7, f:chroma_mc_uni_libx265_hls, v:vshift_2
[SCALAR] adr:1524, bankAdr:44, sBank:29, d:0, a:15, f:chroma_mc_uni_libx265_hls, v:bit_depth
[SCALAR] adr:1520, bankAdr:44, sBank:28, d:0, a:7, f:chroma_mc_uni_libx265_hls, v:chroma_log2_weight_denom
[ARRAY] adr:285872, bankAdr:277680, aBank:0, d:0, a:5, f:chroma_mc_uni_libx265_hls, v:chroma_weight_l0_flag_Din_A
[ARRAY] adr:285872, bankAdr:277680, aBank:0, d:0, a:165, f:chroma_mc_uni_libx265_hls, v:chroma_weight_l0_flag_Dout_A
[ARRAY] adr:285888, bankAdr:277696, aBank:0, d:0, a:6, f:chroma_mc_uni_libx265_hls, v:chroma_weight_l1_flag_Din_A
[ARRAY] adr:285888, bankAdr:277696, aBank:0, d:0, a:166, f:chroma_mc_uni_libx265_hls, v:chroma_weight_l1_flag_Dout_A
[ARRAY] adr:285904, bankAdr:277712, aBank:0, d:0, a:7, f:chroma_mc_uni_libx265_hls, v:chroma_weight_l0_Din_A
[ARRAY] adr:285904, bankAdr:277712, aBank:0, d:0, a:167, f:chroma_mc_uni_libx265_hls, v:chroma_weight_l0_Dout_A
[ARRAY] adr:285968, bankAdr:277776, aBank:0, d:0, a:8, f:chroma_mc_uni_libx265_hls, v:chroma_weight_l1_Din_A
[ARRAY] adr:285968, bankAdr:277776, aBank:0, d:0, a:168, f:chroma_mc_uni_libx265_hls, v:chroma_weight_l1_Dout_A
[ARRAY] adr:286032, bankAdr:277840, aBank:0, d:0, a:9, f:chroma_mc_uni_libx265_hls, v:chroma_offset_l0_Din_A
[ARRAY] adr:286032, bankAdr:277840, aBank:0, d:0, a:169, f:chroma_mc_uni_libx265_hls, v:chroma_offset_l0_Dout_A
[ARRAY] adr:286096, bankAdr:277904, aBank:0, d:0, a:10, f:chroma_mc_uni_libx265_hls, v:chroma_offset_l1_Din_A
[ARRAY] adr:286096, bankAdr:277904, aBank:0, d:0, a:170, f:chroma_mc_uni_libx265_hls, v:chroma_offset_l1_Dout_A
[ARRAY] adr:12304, bankAdr:4112, aBank:0, d:0, a:11, f:chroma_mc_uni_libx265_hls, v:edge_buffer_Din_A
[ARRAY] adr:12304, bankAdr:4112, aBank:0, d:0, a:171, f:chroma_mc_uni_libx265_hls, v:edge_buffer_Dout_A
[SCALAR] adr:752, bankAdr:20, sBank:28, d:1, a:0, f:chroma_mc_uni_libx265_hls, v:xm_buf_linesize
[SCALAR] adr:1528, bankAdr:44, sBank:30, d:1, a:0, f:chroma_mc_uni_libx265_hls, v:dst_depth
[SCALAR] adr:1300, bankAdr:40, sBank:5, d:0, a:18, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_x_0_i
[SCALAR] adr:1300, bankAdr:40, sBank:5, d:0, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_x_0_o
[SCALAR] adr:1302, bankAdr:42, sBank:5, d:1, a:17, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_x_1_i
[SCALAR] adr:1302, bankAdr:42, sBank:5, d:1, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_x_1_o
[SCALAR] adr:1304, bankAdr:40, sBank:6, d:1, a:16, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_x_2_i
[SCALAR] adr:1304, bankAdr:40, sBank:6, d:0, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_x_2_o
[SCALAR] adr:1306, bankAdr:42, sBank:6, d:0, a:18, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_x_3_i
[SCALAR] adr:1306, bankAdr:42, sBank:6, d:1, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_x_3_o
[SCALAR] adr:1308, bankAdr:40, sBank:7, d:1, a:0, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_x_4
[SCALAR] adr:1312, bankAdr:40, sBank:8, d:0, a:17, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_y_0_i
[SCALAR] adr:1312, bankAdr:40, sBank:8, d:0, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_y_0_o
[SCALAR] adr:1314, bankAdr:42, sBank:8, d:1, a:17, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_y_1_i
[SCALAR] adr:1314, bankAdr:42, sBank:8, d:1, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_y_1_o
[SCALAR] adr:1316, bankAdr:40, sBank:9, d:1, a:17, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_y_2_i
[SCALAR] adr:1316, bankAdr:40, sBank:9, d:0, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_y_2_o
[SCALAR] adr:1318, bankAdr:42, sBank:9, d:0, a:18, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_y_3_i
[SCALAR] adr:1318, bankAdr:42, sBank:9, d:1, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_y_3_o
[SCALAR] adr:1320, bankAdr:40, sBank:10, d:1, a:0, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv0_y_4
[SCALAR] adr:1324, bankAdr:40, sBank:11, d:1, a:11, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_x_0_i
[SCALAR] adr:1324, bankAdr:40, sBank:11, d:0, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_x_0_o
[SCALAR] adr:1326, bankAdr:42, sBank:11, d:0, a:12, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_x_1_i
[SCALAR] adr:1326, bankAdr:42, sBank:11, d:1, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_x_1_o
[SCALAR] adr:1328, bankAdr:40, sBank:12, d:1, a:12, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_x_2_i
[SCALAR] adr:1328, bankAdr:40, sBank:12, d:0, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_x_2_o
[SCALAR] adr:1330, bankAdr:42, sBank:12, d:0, a:14, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_x_3_i
[SCALAR] adr:1330, bankAdr:42, sBank:12, d:1, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_x_3_o
[SCALAR] adr:1332, bankAdr:40, sBank:13, d:1, a:0, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_x_4
[SCALAR] adr:1336, bankAdr:40, sBank:14, d:0, a:14, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_y_0_i
[SCALAR] adr:1336, bankAdr:40, sBank:14, d:0, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_y_0_o
[SCALAR] adr:1338, bankAdr:42, sBank:14, d:1, a:14, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_y_1_i
[SCALAR] adr:1338, bankAdr:42, sBank:14, d:1, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_y_1_o
[SCALAR] adr:1340, bankAdr:40, sBank:15, d:0, a:13, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_y_2_i
[SCALAR] adr:1340, bankAdr:40, sBank:15, d:0, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_y_2_o
[SCALAR] adr:1342, bankAdr:42, sBank:15, d:1, a:13, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_y_3_i
[SCALAR] adr:1342, bankAdr:42, sBank:15, d:1, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_y_3_o
[SCALAR] adr:1344, bankAdr:40, sBank:16, d:1, a:0, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_mv1_y_4
[SCALAR] adr:1348, bankAdr:40, sBank:17, d:0, a:9, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc0_0_i
[SCALAR] adr:1348, bankAdr:40, sBank:17, d:1, a:0, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc0_0_o
[SCALAR] adr:1352, bankAdr:40, sBank:18, d:0, a:8, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc0_1_i
[SCALAR] adr:1352, bankAdr:40, sBank:18, d:1, a:0, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc0_1_o
[SCALAR] adr:1356, bankAdr:40, sBank:19, d:1, a:8, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc0_2_i
[SCALAR] adr:1356, bankAdr:40, sBank:19, d:1, a:0, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc0_2_o
[SCALAR] adr:1360, bankAdr:40, sBank:20, d:0, a:11, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc0_3_i
[SCALAR] adr:1360, bankAdr:40, sBank:20, d:0, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc0_3_o
[SCALAR] adr:1364, bankAdr:40, sBank:21, d:1, a:0, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc0_4
[SCALAR] adr:1368, bankAdr:40, sBank:22, d:0, a:12, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc1_0_i
[SCALAR] adr:1368, bankAdr:40, sBank:22, d:1, a:0, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc1_0_o
[SCALAR] adr:1372, bankAdr:40, sBank:23, d:1, a:8, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc1_1_i
[SCALAR] adr:1372, bankAdr:40, sBank:23, d:1, a:0, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc1_1_o
[SCALAR] adr:1376, bankAdr:40, sBank:24, d:1, a:6, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc1_2_i
[SCALAR] adr:1376, bankAdr:40, sBank:24, d:1, a:0, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc1_2_o
[SCALAR] adr:1380, bankAdr:40, sBank:25, d:1, a:6, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc1_3_i
[SCALAR] adr:1380, bankAdr:40, sBank:25, d:1, a:0, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc1_3_o
[SCALAR] adr:1384, bankAdr:40, sBank:26, d:1, a:0, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_poc1_4
[SCALAR] adr:1388, bankAdr:40, sBank:27, d:0, a:14, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx0_0_i
[SCALAR] adr:1388, bankAdr:40, sBank:27, d:0, a:2, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx0_0_o
[SCALAR] adr:1389, bankAdr:41, sBank:27, d:1, a:13, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx0_1_i
[SCALAR] adr:1389, bankAdr:41, sBank:27, d:1, a:2, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx0_1_o
[SCALAR] adr:1390, bankAdr:42, sBank:27, d:0, a:15, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx0_2_i
[SCALAR] adr:1390, bankAdr:42, sBank:27, d:0, a:3, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx0_2_o
[SCALAR] adr:1391, bankAdr:43, sBank:27, d:1, a:14, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx0_3_i
[SCALAR] adr:1391, bankAdr:43, sBank:27, d:1, a:3, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx0_3_o
[SCALAR] adr:1392, bankAdr:40, sBank:28, d:0, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx0_4
[SCALAR] adr:1396, bankAdr:40, sBank:29, d:1, a:15, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx1_0_i
[SCALAR] adr:1396, bankAdr:40, sBank:29, d:0, a:2, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx1_0_o
[SCALAR] adr:1397, bankAdr:41, sBank:29, d:0, a:16, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx1_1_i
[SCALAR] adr:1397, bankAdr:41, sBank:29, d:1, a:2, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx1_1_o
[SCALAR] adr:1398, bankAdr:42, sBank:29, d:1, a:16, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx1_2_i
[SCALAR] adr:1398, bankAdr:42, sBank:29, d:0, a:3, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx1_2_o
[SCALAR] adr:1399, bankAdr:43, sBank:29, d:0, a:17, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx1_3_i
[SCALAR] adr:1399, bankAdr:43, sBank:29, d:1, a:3, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx1_3_o
[SCALAR] adr:1400, bankAdr:40, sBank:30, d:0, a:1, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_ref_idx1_4
[SCALAR] adr:1404, bankAdr:40, sBank:31, d:1, a:14, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_pred_flag_0_i
[SCALAR] adr:1404, bankAdr:40, sBank:31, d:0, a:2, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_pred_flag_0_o
[SCALAR] adr:1405, bankAdr:41, sBank:31, d:0, a:16, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_pred_flag_1_i
[SCALAR] adr:1405, bankAdr:41, sBank:31, d:1, a:2, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_pred_flag_1_o
[SCALAR] adr:1406, bankAdr:42, sBank:31, d:1, a:15, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_pred_flag_2_i
[SCALAR] adr:1406, bankAdr:42, sBank:31, d:0, a:3, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_pred_flag_2_o
[SCALAR] adr:1407, bankAdr:43, sBank:31, d:0, a:17, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_pred_flag_3_i
[SCALAR] adr:1407, bankAdr:43, sBank:31, d:1, a:3, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_pred_flag_3_o
[SCALAR] adr:1408, bankAdr:44, sBank:0, d:1, a:0, f:combined_bi_predictive_merge_candidates_hls, v:mergecand_list_pred_flag_4
[SCALAR] adr:132, bankAdr:4, sBank:1, d:1, a:9, f:combined_bi_predictive_merge_candidates_hls, v:xm_nb_merge_cand_i
[SCALAR] adr:132, bankAdr:4, sBank:1, d:1, a:0, f:combined_bi_predictive_merge_candidates_hls, v:xm_nb_merge_cand_o
[SCALAR] adr:1444, bankAdr:44, sBank:9, d:1, a:18, f:combined_bi_predictive_merge_candidates_hls, v:merge_idx
[SCALAR] adr:172, bankAdr:4, sBank:11, d:1, a:12, f:compare_mv_ref_idx_hls, v:log2_width
[SCALAR] adr:396, bankAdr:12, sBank:3, d:0, a:7, f:compare_mv_ref_idx_hls, v:min_pu_width
[SCALAR] adr:372, bankAdr:8, sBank:29, d:1, a:17, f:compare_mv_ref_idx_hls, v:log2_min_pu_size
[ARRAY] adr:286240, bankAdr:278048, aBank:0, d:0, a:12, f:compare_mv_ref_idx_hls, v:tab_mvf_mv_0_x_Din_A
[ARRAY] adr:286240, bankAdr:278048, aBank:0, d:0, a:172, f:compare_mv_ref_idx_hls, v:tab_mvf_mv_0_x_Dout_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:13, f:compare_mv_ref_idx_hls, v:tab_mvf_mv_0_y_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:173, f:compare_mv_ref_idx_hls, v:tab_mvf_mv_0_y_Dout_A
[ARRAY] adr:286248, bankAdr:278056, aBank:0, d:0, a:14, f:compare_mv_ref_idx_hls, v:tab_mvf_mv_1_x_Din_A
[ARRAY] adr:286248, bankAdr:278056, aBank:0, d:0, a:174, f:compare_mv_ref_idx_hls, v:tab_mvf_mv_1_x_Dout_A
[ARRAY] adr:286252, bankAdr:278060, aBank:0, d:0, a:15, f:compare_mv_ref_idx_hls, v:tab_mvf_mv_1_y_Din_A
[ARRAY] adr:286252, bankAdr:278060, aBank:0, d:0, a:175, f:compare_mv_ref_idx_hls, v:tab_mvf_mv_1_y_Dout_A
[ARRAY] adr:286256, bankAdr:278064, aBank:0, d:0, a:16, f:compare_mv_ref_idx_hls, v:tab_mvf_poc_0_Din_A
[ARRAY] adr:286256, bankAdr:278064, aBank:0, d:0, a:176, f:compare_mv_ref_idx_hls, v:tab_mvf_poc_0_Dout_A
[ARRAY] adr:286260, bankAdr:278068, aBank:0, d:0, a:17, f:compare_mv_ref_idx_hls, v:tab_mvf_poc_1_Din_A
[ARRAY] adr:286260, bankAdr:278068, aBank:0, d:0, a:177, f:compare_mv_ref_idx_hls, v:tab_mvf_poc_1_Dout_A
[ARRAY] adr:286264, bankAdr:278072, aBank:0, d:0, a:18, f:compare_mv_ref_idx_hls, v:tab_mvf_ref_idx_0_Din_A
[ARRAY] adr:286264, bankAdr:278072, aBank:0, d:0, a:178, f:compare_mv_ref_idx_hls, v:tab_mvf_ref_idx_0_Dout_A
[ARRAY] adr:286268, bankAdr:278076, aBank:0, d:0, a:19, f:compare_mv_ref_idx_hls, v:tab_mvf_ref_idx_1_Din_A
[ARRAY] adr:286268, bankAdr:278076, aBank:0, d:0, a:179, f:compare_mv_ref_idx_hls, v:tab_mvf_ref_idx_1_Dout_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:20, f:compare_mv_ref_idx_hls, v:tab_mvf_pred_flag_row_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:180, f:compare_mv_ref_idx_hls, v:tab_mvf_pred_flag_row_Dout_A
[SCALAR] adr:168, bankAdr:4, sBank:10, d:0, a:14, f:copy_top_left_pixel_hls, v:log2_trafo_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:7, f:copy_top_left_pixel_hls, v:log2_ctb_size
[SCALAR] adr:376, bankAdr:8, sBank:30, d:1, a:5, f:copy_top_left_pixel_hls, v:log2_min_tb_size
[SCALAR] adr:560, bankAdr:16, sBank:12, d:1, a:13, f:copy_top_left_pixel_hls, v:pred_mode
[SCALAR] adr:336, bankAdr:8, sBank:20, d:1, a:11, f:copy_top_left_pixel_hls, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:1, a:10, f:copy_top_left_pixel_hls, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:1, a:11, f:copy_top_left_pixel_hls, v:hshift_2
[SCALAR] adr:348, bankAdr:8, sBank:23, d:0, a:10, f:copy_top_left_pixel_hls, v:vshift_0
[SCALAR] adr:352, bankAdr:8, sBank:24, d:0, a:8, f:copy_top_left_pixel_hls, v:vshift_1
[SCALAR] adr:356, bankAdr:8, sBank:25, d:0, a:8, f:copy_top_left_pixel_hls, v:vshift_2
[SCALAR] adr:1244, bankAdr:36, sBank:23, d:1, a:9, f:copy_top_left_pixel_hls, v:buf_data_0
[SCALAR] adr:1248, bankAdr:36, sBank:24, d:1, a:7, f:copy_top_left_pixel_hls, v:buf_data_1
[SCALAR] adr:1252, bankAdr:36, sBank:25, d:1, a:7, f:copy_top_left_pixel_hls, v:buf_data_2
[SCALAR] adr:1148, bankAdr:32, sBank:31, d:1, a:16, f:copy_top_left_pixel_hls, v:xm_linesize_0
[SCALAR] adr:1152, bankAdr:36, sBank:0, d:1, a:16, f:copy_top_left_pixel_hls, v:xm_linesize_1
[SCALAR] adr:1156, bankAdr:36, sBank:1, d:0, a:10, f:copy_top_left_pixel_hls, v:xm_linesize_2
[SCALAR] adr:1140, bankAdr:32, sBank:29, d:0, a:18, f:copy_top_left_pixel_hls, v:cmdr_run_i
[SCALAR] adr:1140, bankAdr:32, sBank:29, d:0, a:4, f:copy_top_left_pixel_hls, v:cmdr_run_o
[SCALAR] adr:168, bankAdr:4, sBank:10, d:1, a:14, f:ff_hevc_deblocking_boundary_strengths_hls, v:log2_trafo_size
[SCALAR] adr:1512, bankAdr:44, sBank:26, d:1, a:6, f:ff_hevc_deblocking_boundary_strengths_hls, v:bs_width
[ARRAY] adr:286260, bankAdr:278068, aBank:0, d:0, a:21, f:ff_hevc_deblocking_boundary_strengths_hls, v:horizontal_bs_Din_A
[ARRAY] adr:286260, bankAdr:278068, aBank:0, d:0, a:181, f:ff_hevc_deblocking_boundary_strengths_hls, v:horizontal_bs_Dout_A
[ARRAY] adr:286264, bankAdr:278072, aBank:0, d:0, a:22, f:ff_hevc_deblocking_boundary_strengths_hls, v:vertical_bs_Din_A
[ARRAY] adr:286264, bankAdr:278072, aBank:0, d:0, a:182, f:ff_hevc_deblocking_boundary_strengths_hls, v:vertical_bs_Dout_A
[SCALAR] adr:1508, bankAdr:44, sBank:25, d:0, a:9, f:ff_hevc_deblocking_boundary_strengths_hls, v:slice_loop_filter_across_slices_enabled_flag
[SCALAR] adr:372, bankAdr:8, sBank:29, d:1, a:18, f:ff_hevc_deblocking_boundary_strengths_hls, v:log2_min_pu_size
[SCALAR] adr:376, bankAdr:8, sBank:30, d:0, a:6, f:ff_hevc_deblocking_boundary_strengths_hls, v:log2_min_tb_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:8, f:ff_hevc_deblocking_boundary_strengths_hls, v:log2_ctb_size
[SCALAR] adr:396, bankAdr:12, sBank:3, d:1, a:6, f:ff_hevc_deblocking_boundary_strengths_hls, v:min_pu_width
[SCALAR] adr:388, bankAdr:12, sBank:1, d:1, a:10, f:ff_hevc_deblocking_boundary_strengths_hls, v:min_tb_width
[SCALAR] adr:172, bankAdr:4, sBank:11, d:0, a:13, f:ff_hevc_deblocking_boundary_strengths_hls, v:log2_width
[SCALAR] adr:264, bankAdr:8, sBank:2, d:0, a:8, f:ff_hevc_deblocking_boundary_strengths_hls, v:slice_or_tiles_up_boundary
[SCALAR] adr:260, bankAdr:8, sBank:1, d:0, a:11, f:ff_hevc_deblocking_boundary_strengths_hls, v:slice_or_tiles_left_boundary
[SCALAR] adr:268, bankAdr:8, sBank:3, d:0, a:8, f:ff_hevc_deblocking_boundary_strengths_hls, v:loop_filter_across_tiles_enabled_flag
[ARRAY] adr:286200, bankAdr:278008, aBank:0, d:0, a:23, f:ff_hevc_deblocking_boundary_strengths_hls, v:cbf_luma_base_Din_A
[ARRAY] adr:286200, bankAdr:278008, aBank:0, d:0, a:183, f:ff_hevc_deblocking_boundary_strengths_hls, v:cbf_luma_base_Dout_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:24, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_pred_flag_row_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:184, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_pred_flag_row_Dout_A
[ARRAY] adr:286240, bankAdr:278048, aBank:0, d:0, a:25, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_mv_0_x_Din_A
[ARRAY] adr:286240, bankAdr:278048, aBank:0, d:0, a:185, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_mv_0_x_Dout_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:26, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_mv_0_y_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:186, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_mv_0_y_Dout_A
[ARRAY] adr:286248, bankAdr:278056, aBank:0, d:0, a:27, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_mv_1_x_Din_A
[ARRAY] adr:286248, bankAdr:278056, aBank:0, d:0, a:187, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_mv_1_x_Dout_A
[ARRAY] adr:286252, bankAdr:278060, aBank:0, d:0, a:28, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_mv_1_y_Din_A
[ARRAY] adr:286252, bankAdr:278060, aBank:0, d:0, a:188, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_mv_1_y_Dout_A
[ARRAY] adr:286256, bankAdr:278064, aBank:0, d:0, a:29, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_poc_0_Din_A
[ARRAY] adr:286256, bankAdr:278064, aBank:0, d:0, a:189, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_poc_0_Dout_A
[ARRAY] adr:286260, bankAdr:278068, aBank:0, d:0, a:30, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_poc_1_Din_A
[ARRAY] adr:286260, bankAdr:278068, aBank:0, d:0, a:190, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_poc_1_Dout_A
[ARRAY] adr:286264, bankAdr:278072, aBank:0, d:0, a:31, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_ref_idx_0_Din_A
[ARRAY] adr:286264, bankAdr:278072, aBank:0, d:0, a:191, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_ref_idx_0_Dout_A
[ARRAY] adr:286268, bankAdr:278076, aBank:0, d:0, a:32, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_ref_idx_1_Din_A
[ARRAY] adr:286268, bankAdr:278076, aBank:0, d:0, a:192, f:ff_hevc_deblocking_boundary_strengths_hls, v:tab_mvf_ref_idx_1_Dout_A
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:7, f:ff_hevc_get_sub_cu_zscan_id_hls, v:log2_ctb_size
[SCALAR] adr:248, bankAdr:4, sBank:30, d:1, a:1, f:ff_hevc_get_sub_cu_zscan_id_hls, v:zscan_id
[SCALAR] adr:172, bankAdr:4, sBank:11, d:1, a:13, f:ff_hevc_luma_mv_merge_mode_hls, v:log2_width
[SCALAR] adr:1208, bankAdr:36, sBank:14, d:0, a:15, f:ff_hevc_luma_mv_merge_mode_hls, v:collocated_list
[SCALAR] adr:396, bankAdr:12, sBank:3, d:1, a:7, f:ff_hevc_luma_mv_merge_mode_hls, v:min_pu_width
[SCALAR] adr:600, bankAdr:16, sBank:22, d:0, a:13, f:ff_hevc_luma_mv_merge_mode_hls, v:cand_bottom_left
[SCALAR] adr:584, bankAdr:16, sBank:18, d:1, a:7, f:ff_hevc_luma_mv_merge_mode_hls, v:cand_left
[SCALAR] adr:588, bankAdr:16, sBank:19, d:0, a:9, f:ff_hevc_luma_mv_merge_mode_hls, v:cand_up_left
[SCALAR] adr:580, bankAdr:16, sBank:17, d:1, a:9, f:ff_hevc_luma_mv_merge_mode_hls, v:cand_up
[SCALAR] adr:596, bankAdr:16, sBank:21, d:0, a:12, f:ff_hevc_luma_mv_merge_mode_hls, v:cand_up_right
[SCALAR] adr:452, bankAdr:12, sBank:17, d:0, a:10, f:ff_hevc_luma_mv_merge_mode_hls, v:slice_type
[SCALAR] adr:564, bankAdr:16, sBank:13, d:0, a:11, f:ff_hevc_luma_mv_merge_mode_hls, v:part_mode
[SCALAR] adr:1292, bankAdr:40, sBank:3, d:0, a:9, f:ff_hevc_luma_mv_merge_mode_hls, v:nb_refs_0
[SCALAR] adr:1296, bankAdr:40, sBank:4, d:1, a:10, f:ff_hevc_luma_mv_merge_mode_hls, v:nb_refs_1
[SCALAR] adr:132, bankAdr:4, sBank:1, d:1, a:11, f:ff_hevc_luma_mv_merge_mode_hls, v:xm_nb_merge_cand_i
[SCALAR] adr:132, bankAdr:4, sBank:1, d:0, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:xm_nb_merge_cand_o
[SCALAR] adr:372, bankAdr:8, sBank:29, d:0, a:19, f:ff_hevc_luma_mv_merge_mode_hls, v:log2_min_pu_size
[SCALAR] adr:408, bankAdr:12, sBank:6, d:1, a:17, f:ff_hevc_luma_mv_merge_mode_hls, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:1, a:9, f:ff_hevc_luma_mv_merge_mode_hls, v:height
[SCALAR] adr:456, bankAdr:12, sBank:18, d:0, a:9, f:ff_hevc_luma_mv_merge_mode_hls, v:slice_temporal_mvp_enabled_flag
[SCALAR] adr:1220, bankAdr:36, sBank:17, d:1, a:10, f:ff_hevc_luma_mv_merge_mode_hls, v:mvLXCol_x
[SCALAR] adr:1224, bankAdr:36, sBank:18, d:1, a:8, f:ff_hevc_luma_mv_merge_mode_hls, v:mvLXCol_y
[SCALAR] adr:1204, bankAdr:36, sBank:13, d:1, a:11, f:ff_hevc_luma_mv_merge_mode_hls, v:ref_poc
[SCALAR] adr:1232, bankAdr:36, sBank:20, d:1, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:zero_idx
[SCALAR] adr:1196, bankAdr:36, sBank:11, d:0, a:14, f:ff_hevc_luma_mv_merge_mode_hls, v:refPicList_0_nb_refs
[SCALAR] adr:1200, bankAdr:36, sBank:12, d:0, a:15, f:ff_hevc_luma_mv_merge_mode_hls, v:refPicList_1_nb_refs
[ARRAY] adr:286224, bankAdr:278032, aBank:0, d:0, a:33, f:ff_hevc_luma_mv_merge_mode_hls, v:refPicList_0_list_Din_A
[ARRAY] adr:286224, bankAdr:278032, aBank:0, d:0, a:193, f:ff_hevc_luma_mv_merge_mode_hls, v:refPicList_0_list_Dout_A
[ARRAY] adr:286228, bankAdr:278036, aBank:0, d:0, a:34, f:ff_hevc_luma_mv_merge_mode_hls, v:refPicList_1_list_Din_A
[ARRAY] adr:286228, bankAdr:278036, aBank:0, d:0, a:194, f:ff_hevc_luma_mv_merge_mode_hls, v:refPicList_1_list_Dout_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:35, f:ff_hevc_luma_mv_merge_mode_hls, v:tab_mvf_pred_flag_row_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:195, f:ff_hevc_luma_mv_merge_mode_hls, v:tab_mvf_pred_flag_row_Dout_A
[SCALAR] adr:1548, bankAdr:48, sBank:3, d:1, a:8, f:ff_hevc_luma_mv_merge_mode_hls, v:poc
[SCALAR] adr:1552, bankAdr:48, sBank:4, d:0, a:11, f:ff_hevc_luma_mv_merge_mode_hls, v:max_num_merge_cand
[SCALAR] adr:160, bankAdr:4, sBank:8, d:0, a:18, f:ff_hevc_luma_mv_merge_mode_hls, v:nPbW_i
[SCALAR] adr:160, bankAdr:4, sBank:8, d:0, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:nPbW_o
[SCALAR] adr:164, bankAdr:4, sBank:9, d:0, a:19, f:ff_hevc_luma_mv_merge_mode_hls, v:nPbH_i
[SCALAR] adr:164, bankAdr:4, sBank:9, d:0, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:nPbH_o
[SCALAR] adr:1544, bankAdr:48, sBank:2, d:1, a:7, f:ff_hevc_luma_mv_merge_mode_hls, v:part_idx
[SCALAR] adr:1444, bankAdr:44, sBank:9, d:1, a:19, f:ff_hevc_luma_mv_merge_mode_hls, v:merge_idx
[SCALAR] adr:1236, bankAdr:36, sBank:21, d:1, a:11, f:ff_hevc_luma_mv_merge_mode_hls, v:xm_log2_parallel_merge_level
[SCALAR] adr:544, bankAdr:16, sBank:8, d:1, a:18, f:ff_hevc_luma_mv_merge_mode_hls, v:xm_x
[SCALAR] adr:548, bankAdr:16, sBank:9, d:0, a:20, f:ff_hevc_luma_mv_merge_mode_hls, v:xm_y
[SCALAR] adr:552, bankAdr:16, sBank:10, d:0, a:15, f:ff_hevc_luma_mv_merge_mode_hls, v:xm_x0_i
[SCALAR] adr:552, bankAdr:16, sBank:10, d:0, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:xm_x0_o
[SCALAR] adr:556, bankAdr:16, sBank:11, d:1, a:14, f:ff_hevc_luma_mv_merge_mode_hls, v:xm_y0_i
[SCALAR] adr:556, bankAdr:16, sBank:11, d:0, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:xm_y0_o
[SCALAR] adr:1228, bankAdr:36, sBank:19, d:0, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:xm_dbg
[SCALAR] adr:1300, bankAdr:40, sBank:5, d:0, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv0_x_0
[SCALAR] adr:1302, bankAdr:42, sBank:5, d:1, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv0_x_1
[SCALAR] adr:1304, bankAdr:40, sBank:6, d:0, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv0_x_2
[SCALAR] adr:1306, bankAdr:42, sBank:6, d:1, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv0_x_3
[SCALAR] adr:1308, bankAdr:40, sBank:7, d:0, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv0_x_4
[SCALAR] adr:1312, bankAdr:40, sBank:8, d:1, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv0_y_0
[SCALAR] adr:1314, bankAdr:42, sBank:8, d:0, a:3, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv0_y_1
[SCALAR] adr:1316, bankAdr:40, sBank:9, d:1, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv0_y_2
[SCALAR] adr:1318, bankAdr:42, sBank:9, d:0, a:3, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv0_y_3
[SCALAR] adr:1320, bankAdr:40, sBank:10, d:1, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv0_y_4
[SCALAR] adr:1324, bankAdr:40, sBank:11, d:1, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv1_x_0
[SCALAR] adr:1326, bankAdr:42, sBank:11, d:0, a:3, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv1_x_1
[SCALAR] adr:1328, bankAdr:40, sBank:12, d:0, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv1_x_2
[SCALAR] adr:1330, bankAdr:42, sBank:12, d:1, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv1_x_3
[SCALAR] adr:1332, bankAdr:40, sBank:13, d:0, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv1_x_4
[SCALAR] adr:1336, bankAdr:40, sBank:14, d:0, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv1_y_0
[SCALAR] adr:1338, bankAdr:42, sBank:14, d:1, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv1_y_1
[SCALAR] adr:1340, bankAdr:40, sBank:15, d:0, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv1_y_2
[SCALAR] adr:1342, bankAdr:42, sBank:15, d:1, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv1_y_3
[SCALAR] adr:1344, bankAdr:40, sBank:16, d:0, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_mv1_y_4
[SCALAR] adr:1348, bankAdr:40, sBank:17, d:0, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_poc0_0
[SCALAR] adr:1352, bankAdr:40, sBank:18, d:0, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_poc0_1
[SCALAR] adr:1356, bankAdr:40, sBank:19, d:1, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_poc0_2
[SCALAR] adr:1360, bankAdr:40, sBank:20, d:0, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_poc0_3
[SCALAR] adr:1364, bankAdr:40, sBank:21, d:0, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_poc0_4
[SCALAR] adr:1368, bankAdr:40, sBank:22, d:0, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_poc1_0
[SCALAR] adr:1372, bankAdr:40, sBank:23, d:0, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_poc1_1
[SCALAR] adr:1376, bankAdr:40, sBank:24, d:0, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_poc1_2
[SCALAR] adr:1380, bankAdr:40, sBank:25, d:0, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_poc1_3
[SCALAR] adr:1384, bankAdr:40, sBank:26, d:0, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_poc1_4
[SCALAR] adr:1388, bankAdr:40, sBank:27, d:0, a:4, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_ref_idx0_0
[SCALAR] adr:1389, bankAdr:41, sBank:27, d:1, a:4, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_ref_idx0_1
[SCALAR] adr:1390, bankAdr:42, sBank:27, d:0, a:5, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_ref_idx0_2
[SCALAR] adr:1391, bankAdr:43, sBank:27, d:1, a:5, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_ref_idx0_3
[SCALAR] adr:1392, bankAdr:40, sBank:28, d:1, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_ref_idx0_4
[SCALAR] adr:1396, bankAdr:40, sBank:29, d:1, a:4, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_ref_idx1_0
[SCALAR] adr:1397, bankAdr:41, sBank:29, d:0, a:5, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_ref_idx1_1
[SCALAR] adr:1398, bankAdr:42, sBank:29, d:1, a:5, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_ref_idx1_2
[SCALAR] adr:1399, bankAdr:43, sBank:29, d:0, a:6, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_ref_idx1_3
[SCALAR] adr:1400, bankAdr:40, sBank:30, d:0, a:2, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_ref_idx1_4
[SCALAR] adr:1404, bankAdr:40, sBank:31, d:0, a:4, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_pred_flag_0
[SCALAR] adr:1405, bankAdr:41, sBank:31, d:1, a:4, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_pred_flag_1
[SCALAR] adr:1406, bankAdr:42, sBank:31, d:0, a:5, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_pred_flag_2
[SCALAR] adr:1407, bankAdr:43, sBank:31, d:1, a:5, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_pred_flag_3
[SCALAR] adr:1408, bankAdr:44, sBank:0, d:0, a:1, f:ff_hevc_luma_mv_merge_mode_hls, v:mergecand_list_pred_flag_4
[SCALAR] adr:552, bankAdr:16, sBank:10, d:1, a:15, f:ff_hevc_luma_mv_mvp_mode_hls, v:xm_x0
[SCALAR] adr:556, bankAdr:16, sBank:11, d:0, a:15, f:ff_hevc_luma_mv_mvp_mode_hls, v:xm_y0
[SCALAR] adr:160, bankAdr:4, sBank:8, d:0, a:19, f:ff_hevc_luma_mv_mvp_mode_hls, v:nPbW
[SCALAR] adr:164, bankAdr:4, sBank:9, d:1, a:20, f:ff_hevc_luma_mv_mvp_mode_hls, v:nPbH
[SCALAR] adr:172, bankAdr:4, sBank:11, d:1, a:15, f:ff_hevc_luma_mv_mvp_mode_hls, v:log2_width
[SCALAR] adr:1544, bankAdr:48, sBank:2, d:0, a:9, f:ff_hevc_luma_mv_mvp_mode_hls, v:part_idx
[SCALAR] adr:1548, bankAdr:48, sBank:3, d:0, a:10, f:ff_hevc_luma_mv_mvp_mode_hls, v:poc
[SCALAR] adr:456, bankAdr:12, sBank:18, d:0, a:10, f:ff_hevc_luma_mv_mvp_mode_hls, v:slice_temporal_mvp_enabled_flag
[SCALAR] adr:1444, bankAdr:44, sBank:9, d:0, a:21, f:ff_hevc_luma_mv_mvp_mode_hls, v:merge_idx
[SCALAR] adr:784, bankAdr:24, sBank:4, d:0, a:0, f:ff_hevc_luma_mv_mvp_mode_hls, v:current_mv_mv_0_x
[SCALAR] adr:788, bankAdr:24, sBank:5, d:0, a:3, f:ff_hevc_luma_mv_mvp_mode_hls, v:current_mv_mv_0_y
[SCALAR] adr:792, bankAdr:24, sBank:6, d:0, a:3, f:ff_hevc_luma_mv_mvp_mode_hls, v:current_mv_mv_1_x
[SCALAR] adr:796, bankAdr:24, sBank:7, d:1, a:1, f:ff_hevc_luma_mv_mvp_mode_hls, v:current_mv_mv_1_y
[SCALAR] adr:800, bankAdr:24, sBank:8, d:1, a:19, f:ff_hevc_luma_mv_mvp_mode_hls, v:current_mv_poc_0
[SCALAR] adr:804, bankAdr:24, sBank:9, d:1, a:21, f:ff_hevc_luma_mv_mvp_mode_hls, v:current_mv_poc_1
[SCALAR] adr:808, bankAdr:24, sBank:10, d:0, a:16, f:ff_hevc_luma_mv_mvp_mode_hls, v:current_mv_ref_idx_0
[SCALAR] adr:812, bankAdr:24, sBank:11, d:0, a:16, f:ff_hevc_luma_mv_mvp_mode_hls, v:current_mv_ref_idx_1
[SCALAR] adr:396, bankAdr:12, sBank:3, d:1, a:9, f:ff_hevc_luma_mv_mvp_mode_hls, v:min_pu_width
[SCALAR] adr:372, bankAdr:8, sBank:29, d:1, a:19, f:ff_hevc_luma_mv_mvp_mode_hls, v:log2_min_pu_size
[SCALAR] adr:1212, bankAdr:36, sBank:15, d:0, a:14, f:ff_hevc_luma_mv_mvp_mode_hls, v:mxx_x
[SCALAR] adr:1216, bankAdr:36, sBank:16, d:0, a:9, f:ff_hevc_luma_mv_mvp_mode_hls, v:mxx_y
[SCALAR] adr:888, bankAdr:24, sBank:30, d:1, a:6, f:ff_hevc_luma_mv_mvp_mode_hls, v:mvp_lx_flag
[SCALAR] adr:600, bankAdr:16, sBank:22, d:1, a:12, f:ff_hevc_luma_mv_mvp_mode_hls, v:cand_bottom_left
[SCALAR] adr:584, bankAdr:16, sBank:18, d:1, a:9, f:ff_hevc_luma_mv_mvp_mode_hls, v:cand_left
[SCALAR] adr:580, bankAdr:16, sBank:17, d:0, a:11, f:ff_hevc_luma_mv_mvp_mode_hls, v:cand_up
[SCALAR] adr:588, bankAdr:16, sBank:19, d:0, a:10, f:ff_hevc_luma_mv_mvp_mode_hls, v:cand_up_left
[SCALAR] adr:596, bankAdr:16, sBank:21, d:0, a:13, f:ff_hevc_luma_mv_mvp_mode_hls, v:cand_up_right
[SCALAR] adr:408, bankAdr:12, sBank:6, d:0, a:19, f:ff_hevc_luma_mv_mvp_mode_hls, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:1, a:10, f:ff_hevc_luma_mv_mvp_mode_hls, v:height
[SCALAR] adr:1196, bankAdr:36, sBank:11, d:1, a:16, f:ff_hevc_luma_mv_mvp_mode_hls, v:refPicList_0_nb_refs
[SCALAR] adr:1200, bankAdr:36, sBank:12, d:1, a:14, f:ff_hevc_luma_mv_mvp_mode_hls, v:refPicList_1_nb_refs
[SCALAR] adr:1220, bankAdr:36, sBank:17, d:1, a:11, f:ff_hevc_luma_mv_mvp_mode_hls, v:mvLXCol_x
[SCALAR] adr:1224, bankAdr:36, sBank:18, d:0, a:11, f:ff_hevc_luma_mv_mvp_mode_hls, v:mvLXCol_y
[SCALAR] adr:1204, bankAdr:36, sBank:13, d:0, a:12, f:ff_hevc_luma_mv_mvp_mode_hls, v:ref_poc
[SCALAR] adr:1208, bankAdr:36, sBank:14, d:1, a:15, f:ff_hevc_luma_mv_mvp_mode_hls, v:collocated_list
[SCALAR] adr:1540, bankAdr:48, sBank:1, d:0, a:12, f:ff_hevc_luma_mv_mvp_mode_hls, v:is_temporal
[SCALAR] adr:1228, bankAdr:36, sBank:19, d:0, a:2, f:ff_hevc_luma_mv_mvp_mode_hls, v:xm_dbg
[ARRAY] adr:286216, bankAdr:278024, aBank:0, d:0, a:36, f:ff_hevc_luma_mv_mvp_mode_hls, v:refPicList_0_isLongTerm_Din_A
[ARRAY] adr:286216, bankAdr:278024, aBank:0, d:0, a:196, f:ff_hevc_luma_mv_mvp_mode_hls, v:refPicList_0_isLongTerm_Dout_A
[ARRAY] adr:286220, bankAdr:278028, aBank:0, d:0, a:37, f:ff_hevc_luma_mv_mvp_mode_hls, v:refPicList_1_isLongTerm_Din_A
[ARRAY] adr:286220, bankAdr:278028, aBank:0, d:0, a:197, f:ff_hevc_luma_mv_mvp_mode_hls, v:refPicList_1_isLongTerm_Dout_A
[ARRAY] adr:286224, bankAdr:278032, aBank:0, d:0, a:38, f:ff_hevc_luma_mv_mvp_mode_hls, v:refPicList_0_list_Din_A
[ARRAY] adr:286224, bankAdr:278032, aBank:0, d:0, a:198, f:ff_hevc_luma_mv_mvp_mode_hls, v:refPicList_0_list_Dout_A
[ARRAY] adr:286228, bankAdr:278036, aBank:0, d:0, a:39, f:ff_hevc_luma_mv_mvp_mode_hls, v:refPicList_1_list_Din_A
[ARRAY] adr:286228, bankAdr:278036, aBank:0, d:0, a:199, f:ff_hevc_luma_mv_mvp_mode_hls, v:refPicList_1_list_Dout_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:40, f:ff_hevc_luma_mv_mvp_mode_hls, v:tab_mvf_pred_flag_row_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:200, f:ff_hevc_luma_mv_mvp_mode_hls, v:tab_mvf_pred_flag_row_Dout_A
[SCALAR] adr:580, bankAdr:16, sBank:17, d:1, a:1, f:ff_hevc_set_neighbour_available_hls, v:cand_up
[SCALAR] adr:584, bankAdr:16, sBank:18, d:1, a:1, f:ff_hevc_set_neighbour_available_hls, v:cand_left
[SCALAR] adr:588, bankAdr:16, sBank:19, d:1, a:2, f:ff_hevc_set_neighbour_available_hls, v:cand_up_left
[SCALAR] adr:592, bankAdr:16, sBank:20, d:1, a:2, f:ff_hevc_set_neighbour_available_hls, v:cand_up_right_sap
[SCALAR] adr:596, bankAdr:16, sBank:21, d:1, a:1, f:ff_hevc_set_neighbour_available_hls, v:cand_up_right
[SCALAR] adr:600, bankAdr:16, sBank:22, d:1, a:1, f:ff_hevc_set_neighbour_available_hls, v:cand_bottom_left
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:9, f:ff_hevc_set_neighbour_available_hls, v:log2_ctb_size
[SCALAR] adr:604, bankAdr:16, sBank:23, d:0, a:11, f:ff_hevc_set_neighbour_available_hls, v:ctb_up_flag
[SCALAR] adr:608, bankAdr:16, sBank:24, d:0, a:9, f:ff_hevc_set_neighbour_available_hls, v:ctb_left_flag
[SCALAR] adr:612, bankAdr:16, sBank:25, d:1, a:8, f:ff_hevc_set_neighbour_available_hls, v:ctb_up_left_flag
[SCALAR] adr:616, bankAdr:16, sBank:26, d:1, a:8, f:ff_hevc_set_neighbour_available_hls, v:ctb_up_right_flag
[SCALAR] adr:620, bankAdr:16, sBank:27, d:0, a:16, f:ff_hevc_set_neighbour_available_hls, v:end_of_tiles_x
[SCALAR] adr:624, bankAdr:16, sBank:28, d:1, a:7, f:ff_hevc_set_neighbour_available_hls, v:end_of_tiles_y
[SCALAR] adr:160, bankAdr:4, sBank:8, d:1, a:3, f:ff_hevc_set_neighbour_available_hls, v:nPbW
[SCALAR] adr:164, bankAdr:4, sBank:9, d:1, a:3, f:ff_hevc_set_neighbour_available_hls, v:nPbH
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:3, f:ff_hevc_set_qPy_hls, v:qp_y
[SCALAR] adr:532, bankAdr:16, sBank:5, d:0, a:19, f:ff_hevc_set_qPy_hls, v:first_qp_group_i
[SCALAR] adr:532, bankAdr:16, sBank:5, d:1, a:3, f:ff_hevc_set_qPy_hls, v:first_qp_group_o
[SCALAR] adr:540, bankAdr:16, sBank:7, d:0, a:15, f:ff_hevc_set_qPy_hls, v:qPy_pred
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:10, f:ff_hevc_set_qPy_hls, v:log2_ctb_size
[SCALAR] adr:436, bankAdr:12, sBank:13, d:1, a:12, f:ff_hevc_set_qPy_hls, v:diff_cu_qp_delta_depth
[SCALAR] adr:368, bankAdr:8, sBank:28, d:0, a:8, f:ff_hevc_set_qPy_hls, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:1, a:8, f:ff_hevc_set_qPy_hls, v:min_cb_width
[SCALAR] adr:460, bankAdr:12, sBank:19, d:0, a:11, f:ff_hevc_set_qPy_hls, v:slice_qp
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:41, f:ff_hevc_set_qPy_hls, v:qp_y_tab_Din_A
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:201, f:ff_hevc_set_qPy_hls, v:qp_y_tab_Dout_A
[SCALAR] adr:468, bankAdr:12, sBank:21, d:1, a:12, f:ff_hevc_set_qPy_hls, v:tu_cu_qp_delta
[SCALAR] adr:1136, bankAdr:32, sBank:28, d:1, a:8, f:ff_hevc_set_qPy_hls, v:qp_bd_offset
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:9, f:ff_hevc_skip_flag_decode_hls, v:log2_ctb_size
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:8, f:ff_hevc_skip_flag_decode_hls, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:10, f:ff_hevc_skip_flag_decode_hls, v:ctb_up_flag
[SCALAR] adr:644, bankAdr:20, sBank:1, d:1, a:12, f:fill_ref_samples_mtdma_top_wrp, v:numIntraNeighbor
[SCALAR] adr:648, bankAdr:20, sBank:2, d:0, a:10, f:fill_ref_samples_mtdma_top_wrp, v:totalUnits
[SCALAR] adr:652, bankAdr:20, sBank:3, d:0, a:11, f:fill_ref_samples_mtdma_top_wrp, v:aboveUnits
[SCALAR] adr:656, bankAdr:20, sBank:4, d:1, a:11, f:fill_ref_samples_mtdma_top_wrp, v:leftUnits
[SCALAR] adr:660, bankAdr:20, sBank:5, d:1, a:18, f:fill_ref_samples_mtdma_top_wrp, v:unitWidth
[SCALAR] adr:664, bankAdr:20, sBank:6, d:1, a:18, f:fill_ref_samples_mtdma_top_wrp, v:unitHeight
[SCALAR] adr:668, bankAdr:20, sBank:7, d:1, a:14, f:fill_ref_samples_mtdma_top_wrp, v:log2TrSize
[SCALAR] adr:672, bankAdr:20, sBank:8, d:0, a:20, f:fill_ref_samples_mtdma_top_wrp, v:bNeighborFlags_0
[SCALAR] adr:676, bankAdr:20, sBank:9, d:0, a:22, f:fill_ref_samples_mtdma_top_wrp, v:bNeighborFlags_1
[SCALAR] adr:680, bankAdr:20, sBank:10, d:1, a:16, f:fill_ref_samples_mtdma_top_wrp, v:bNeighborFlags_2
[SCALAR] adr:684, bankAdr:20, sBank:11, d:0, a:17, f:fill_ref_samples_mtdma_top_wrp, v:numIntraNeighbor_c
[SCALAR] adr:688, bankAdr:20, sBank:12, d:0, a:16, f:fill_ref_samples_mtdma_top_wrp, v:totalUnits_c
[SCALAR] adr:692, bankAdr:20, sBank:13, d:0, a:13, f:fill_ref_samples_mtdma_top_wrp, v:aboveUnits_c
[SCALAR] adr:696, bankAdr:20, sBank:14, d:0, a:16, f:fill_ref_samples_mtdma_top_wrp, v:leftUnits_c
[SCALAR] adr:700, bankAdr:20, sBank:15, d:1, a:14, f:fill_ref_samples_mtdma_top_wrp, v:unitWidth_c
[SCALAR] adr:704, bankAdr:20, sBank:16, d:1, a:8, f:fill_ref_samples_mtdma_top_wrp, v:unitHeight_c
[SCALAR] adr:708, bankAdr:20, sBank:17, d:0, a:12, f:fill_ref_samples_mtdma_top_wrp, v:log2TrSize_c
[SCALAR] adr:712, bankAdr:20, sBank:18, d:1, a:10, f:fill_ref_samples_mtdma_top_wrp, v:bNeighborFlags_c_0
[SCALAR] adr:716, bankAdr:20, sBank:19, d:1, a:11, f:fill_ref_samples_mtdma_top_wrp, v:bNeighborFlags_c_1
[SCALAR] adr:720, bankAdr:20, sBank:20, d:0, a:12, f:fill_ref_samples_mtdma_top_wrp, v:bNeighborFlags_c_2
[SCALAR] adr:180, bankAdr:4, sBank:13, d:1, a:1, f:genPredCol_hls, v:predColBuf_0
[SCALAR] adr:184, bankAdr:4, sBank:14, d:0, a:3, f:genPredCol_hls, v:predColBuf_1
[SCALAR] adr:188, bankAdr:4, sBank:15, d:0, a:3, f:genPredCol_hls, v:predColBuf_2
[SCALAR] adr:192, bankAdr:4, sBank:16, d:1, a:1, f:genPredCol_hls, v:predColBuf_3
[SCALAR] adr:196, bankAdr:4, sBank:17, d:0, a:2, f:genPredCol_hls, v:predColBuf_4
[SCALAR] adr:200, bankAdr:4, sBank:18, d:0, a:2, f:genPredCol_hls, v:predColBuf_5
[SCALAR] adr:204, bankAdr:4, sBank:19, d:0, a:3, f:genPredCol_hls, v:predColBuf_6
[SCALAR] adr:208, bankAdr:4, sBank:20, d:0, a:3, f:genPredCol_hls, v:predColBuf_7
[SCALAR] adr:212, bankAdr:4, sBank:21, d:0, a:2, f:genPredCol_hls, v:predColBuf_8
[SCALAR] adr:216, bankAdr:4, sBank:22, d:0, a:2, f:genPredCol_hls, v:predColBuf_9
[SCALAR] adr:220, bankAdr:4, sBank:23, d:1, a:1, f:genPredCol_hls, v:predColBuf_10
[SCALAR] adr:224, bankAdr:4, sBank:24, d:1, a:1, f:genPredCol_hls, v:predColBuf_11
[SCALAR] adr:228, bankAdr:4, sBank:25, d:1, a:1, f:genPredCol_hls, v:predColBuf_12
[SCALAR] adr:232, bankAdr:4, sBank:26, d:1, a:1, f:genPredCol_hls, v:predColBuf_13
[SCALAR] adr:236, bankAdr:4, sBank:27, d:0, a:6, f:genPredCol_hls, v:predColBuf_14
[SCALAR] adr:240, bankAdr:4, sBank:28, d:0, a:2, f:genPredCol_hls, v:predColBuf_15
[SCALAR] adr:244, bankAdr:4, sBank:29, d:0, a:20, f:genPredCol_hls, v:predColBuf_16_i
[SCALAR] adr:244, bankAdr:4, sBank:29, d:1, a:6, f:genPredCol_hls, v:predColBuf_16_o
[SCALAR] adr:172, bankAdr:4, sBank:11, d:1, a:17, f:genPredCol_hls, v:log2_width
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:42, f:genPredCol_hls, v:tab_mvf_pred_flag_row_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:202, f:genPredCol_hls, v:tab_mvf_pred_flag_row_Dout_A
[ARRAY] adr:286200, bankAdr:278008, aBank:0, d:0, a:43, f:genPredCol_hls, v:cbf_luma_base_Din_A
[ARRAY] adr:286200, bankAdr:278008, aBank:0, d:0, a:203, f:genPredCol_hls, v:cbf_luma_base_Dout_A
[SCALAR] adr:376, bankAdr:8, sBank:30, d:0, a:7, f:genPredCol_hls, v:log2_min_tb_size
[SCALAR] adr:388, bankAdr:12, sBank:1, d:0, a:13, f:genPredCol_hls, v:min_tb_width
[SCALAR] adr:0, bankAdr:0, sBank:0, d:0, a:17, f:hevc_find_frame_end_hls, v:state64_0_i
[SCALAR] adr:4, bankAdr:0, sBank:1, d:1, a:13, f:hevc_find_frame_end_hls, v:state64_1_i
[SCALAR] adr:0, bankAdr:0, sBank:0, d:1, a:1, f:hevc_find_frame_end_hls, v:state64_0_o
[SCALAR] adr:4, bankAdr:0, sBank:1, d:1, a:1, f:hevc_find_frame_end_hls, v:state64_1_o
[SCALAR] adr:8, bankAdr:0, sBank:2, d:1, a:9, f:hevc_find_frame_end_hls, v:frame_start_found_i
[SCALAR] adr:8, bankAdr:0, sBank:2, d:0, a:0, f:hevc_find_frame_end_hls, v:frame_start_found_o
[SCALAR] adr:300, bankAdr:8, sBank:11, d:0, a:18, f:hls_coding_quadtree_hls, v:x1_i
[SCALAR] adr:300, bankAdr:8, sBank:11, d:1, a:3, f:hls_coding_quadtree_hls, v:x1_o
[SCALAR] adr:304, bankAdr:8, sBank:12, d:1, a:15, f:hls_coding_quadtree_hls, v:y1_i
[SCALAR] adr:304, bankAdr:8, sBank:12, d:0, a:3, f:hls_coding_quadtree_hls, v:y1_o
[SCALAR] adr:312, bankAdr:8, sBank:14, d:1, a:16, f:hls_coding_quadtree_hls, v:log2_cb_size_minus_one_i
[SCALAR] adr:312, bankAdr:8, sBank:14, d:1, a:3, f:hls_coding_quadtree_hls, v:log2_cb_size_minus_one_o
[SCALAR] adr:316, bankAdr:8, sBank:15, d:0, a:15, f:hls_coding_quadtree_hls, v:cb_depth_plus_one_i
[SCALAR] adr:316, bankAdr:8, sBank:15, d:1, a:3, f:hls_coding_quadtree_hls, v:cb_depth_plus_one_o
[SCALAR] adr:408, bankAdr:12, sBank:6, d:0, a:20, f:hls_coding_quadtree_hls, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:0, a:12, f:hls_coding_quadtree_hls, v:height
[SCALAR] adr:292, bankAdr:8, sBank:9, d:1, a:22, f:hls_coding_quadtree_hls, v:split_cu_flag_i
[SCALAR] adr:292, bankAdr:8, sBank:9, d:0, a:4, f:hls_coding_quadtree_hls, v:split_cu_flag_o
[SCALAR] adr:296, bankAdr:8, sBank:10, d:0, a:17, f:hls_coding_quadtree_hls, v:more_data_i
[SCALAR] adr:296, bankAdr:8, sBank:10, d:0, a:2, f:hls_coding_quadtree_hls, v:more_data_o
[SCALAR] adr:1256, bankAdr:36, sBank:26, d:0, a:11, f:hls_coding_quadtree_hls, v:rv_hls_coding_unit
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:0, a:14, f:hls_coding_quadtree_hls, v:rv_callback_flag
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:10, f:hls_coding_quadtree_hls, v:log2_ctb_size
[SCALAR] adr:540, bankAdr:16, sBank:7, d:0, a:2, f:hls_coding_quadtree_hls, v:qPy_pred
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:19, f:hls_coding_quadtree_hls, v:qp_y
[SCALAR] adr:40, bankAdr:0, sBank:10, d:1, a:17, f:hls_coding_quadtree_hls, v:qp_block_mask_i
[SCALAR] adr:40, bankAdr:0, sBank:10, d:1, a:2, f:hls_coding_quadtree_hls, v:qp_block_mask_o
[SCALAR] adr:308, bankAdr:8, sBank:13, d:1, a:13, f:hls_coding_quadtree_hls, v:cb_size_split_i
[SCALAR] adr:308, bankAdr:8, sBank:13, d:0, a:2, f:hls_coding_quadtree_hls, v:cb_size_split_o
[SCALAR] adr:368, bankAdr:8, sBank:28, d:0, a:9, f:hls_coding_quadtree_hls, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:0, a:11, f:hls_coding_quadtree_hls, v:min_cb_width
[SCALAR] adr:476, bankAdr:12, sBank:23, d:0, a:2, f:hls_coding_quadtree_hls, v:tu_is_cu_qp_delta_coded
[SCALAR] adr:468, bankAdr:12, sBank:21, d:1, a:2, f:hls_coding_quadtree_hls, v:tu_cu_qp_delta
[SCALAR] adr:472, bankAdr:12, sBank:22, d:1, a:2, f:hls_coding_quadtree_hls, v:tu_is_cu_chroma_qp_offset_coded
[SCALAR] adr:464, bankAdr:12, sBank:20, d:1, a:3, f:hls_coding_quadtree_hls, v:depth
[SCALAR] adr:608, bankAdr:16, sBank:24, d:0, a:10, f:hls_coding_quadtree_hls, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:0, a:12, f:hls_coding_quadtree_hls, v:ctb_up_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:1, a:18, f:hls_coding_quadtree_hls, v:cu_qp_delta_enabled_flag
[SCALAR] adr:436, bankAdr:12, sBank:13, d:0, a:14, f:hls_coding_quadtree_hls, v:diff_cu_qp_delta_depth
[SCALAR] adr:448, bankAdr:12, sBank:16, d:0, a:10, f:hls_coding_quadtree_hls, v:cu_chroma_qp_offset_enabled_flag
[SCALAR] adr:432, bankAdr:12, sBank:12, d:0, a:17, f:hls_coding_quadtree_hls, v:diff_cu_chroma_qp_offset_depth
[ARRAY] adr:286208, bankAdr:278016, aBank:0, d:0, a:44, f:hls_coding_quadtree_hls, v:tab_ct_depth_Din_A
[ARRAY] adr:286208, bankAdr:278016, aBank:0, d:0, a:204, f:hls_coding_quadtree_hls, v:tab_ct_depth_Dout_A
[SCALAR] adr:300, bankAdr:8, sBank:11, d:0, a:19, f:hls_coding_quadtree_hls_dup1, v:x1_i
[SCALAR] adr:300, bankAdr:8, sBank:11, d:0, a:4, f:hls_coding_quadtree_hls_dup1, v:x1_o
[SCALAR] adr:304, bankAdr:8, sBank:12, d:1, a:16, f:hls_coding_quadtree_hls_dup1, v:y1_i
[SCALAR] adr:304, bankAdr:8, sBank:12, d:1, a:3, f:hls_coding_quadtree_hls_dup1, v:y1_o
[SCALAR] adr:312, bankAdr:8, sBank:14, d:0, a:17, f:hls_coding_quadtree_hls_dup1, v:log2_cb_size_minus_one_i
[SCALAR] adr:312, bankAdr:8, sBank:14, d:0, a:4, f:hls_coding_quadtree_hls_dup1, v:log2_cb_size_minus_one_o
[SCALAR] adr:316, bankAdr:8, sBank:15, d:1, a:15, f:hls_coding_quadtree_hls_dup1, v:cb_depth_plus_one_i
[SCALAR] adr:316, bankAdr:8, sBank:15, d:0, a:4, f:hls_coding_quadtree_hls_dup1, v:cb_depth_plus_one_o
[SCALAR] adr:408, bankAdr:12, sBank:6, d:0, a:21, f:hls_coding_quadtree_hls_dup1, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:1, a:12, f:hls_coding_quadtree_hls_dup1, v:height
[SCALAR] adr:292, bankAdr:8, sBank:9, d:0, a:23, f:hls_coding_quadtree_hls_dup1, v:split_cu_flag_i
[SCALAR] adr:292, bankAdr:8, sBank:9, d:1, a:4, f:hls_coding_quadtree_hls_dup1, v:split_cu_flag_o
[SCALAR] adr:296, bankAdr:8, sBank:10, d:0, a:18, f:hls_coding_quadtree_hls_dup1, v:more_data_i
[SCALAR] adr:296, bankAdr:8, sBank:10, d:0, a:3, f:hls_coding_quadtree_hls_dup1, v:more_data_o
[SCALAR] adr:1256, bankAdr:36, sBank:26, d:0, a:12, f:hls_coding_quadtree_hls_dup1, v:rv_hls_coding_unit
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:1, a:13, f:hls_coding_quadtree_hls_dup1, v:rv_callback_flag
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:11, f:hls_coding_quadtree_hls_dup1, v:log2_ctb_size
[SCALAR] adr:540, bankAdr:16, sBank:7, d:1, a:2, f:hls_coding_quadtree_hls_dup1, v:qPy_pred
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:20, f:hls_coding_quadtree_hls_dup1, v:qp_y
[SCALAR] adr:40, bankAdr:0, sBank:10, d:1, a:18, f:hls_coding_quadtree_hls_dup1, v:qp_block_mask_i
[SCALAR] adr:40, bankAdr:0, sBank:10, d:1, a:3, f:hls_coding_quadtree_hls_dup1, v:qp_block_mask_o
[SCALAR] adr:308, bankAdr:8, sBank:13, d:1, a:14, f:hls_coding_quadtree_hls_dup1, v:cb_size_split_i
[SCALAR] adr:308, bankAdr:8, sBank:13, d:1, a:2, f:hls_coding_quadtree_hls_dup1, v:cb_size_split_o
[SCALAR] adr:368, bankAdr:8, sBank:28, d:1, a:9, f:hls_coding_quadtree_hls_dup1, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:1, a:10, f:hls_coding_quadtree_hls_dup1, v:min_cb_width
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:2, f:hls_coding_quadtree_hls_dup1, v:tu_is_cu_qp_delta_coded
[SCALAR] adr:468, bankAdr:12, sBank:21, d:0, a:3, f:hls_coding_quadtree_hls_dup1, v:tu_cu_qp_delta
[SCALAR] adr:472, bankAdr:12, sBank:22, d:0, a:3, f:hls_coding_quadtree_hls_dup1, v:tu_is_cu_chroma_qp_offset_coded
[SCALAR] adr:464, bankAdr:12, sBank:20, d:0, a:4, f:hls_coding_quadtree_hls_dup1, v:depth
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:9, f:hls_coding_quadtree_hls_dup1, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:11, f:hls_coding_quadtree_hls_dup1, v:ctb_up_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:1, a:19, f:hls_coding_quadtree_hls_dup1, v:cu_qp_delta_enabled_flag
[SCALAR] adr:436, bankAdr:12, sBank:13, d:0, a:15, f:hls_coding_quadtree_hls_dup1, v:diff_cu_qp_delta_depth
[SCALAR] adr:448, bankAdr:12, sBank:16, d:1, a:9, f:hls_coding_quadtree_hls_dup1, v:cu_chroma_qp_offset_enabled_flag
[SCALAR] adr:432, bankAdr:12, sBank:12, d:0, a:18, f:hls_coding_quadtree_hls_dup1, v:diff_cu_chroma_qp_offset_depth
[ARRAY] adr:286208, bankAdr:278016, aBank:0, d:0, a:45, f:hls_coding_quadtree_hls_dup1, v:tab_ct_depth_Din_A
[ARRAY] adr:286208, bankAdr:278016, aBank:0, d:0, a:205, f:hls_coding_quadtree_hls_dup1, v:tab_ct_depth_Dout_A
[SCALAR] adr:300, bankAdr:8, sBank:11, d:0, a:20, f:hls_coding_quadtree_hls_dup2, v:x1_i
[SCALAR] adr:300, bankAdr:8, sBank:11, d:1, a:4, f:hls_coding_quadtree_hls_dup2, v:x1_o
[SCALAR] adr:304, bankAdr:8, sBank:12, d:1, a:17, f:hls_coding_quadtree_hls_dup2, v:y1_i
[SCALAR] adr:304, bankAdr:8, sBank:12, d:0, a:4, f:hls_coding_quadtree_hls_dup2, v:y1_o
[SCALAR] adr:312, bankAdr:8, sBank:14, d:1, a:17, f:hls_coding_quadtree_hls_dup2, v:log2_cb_size_minus_one_i
[SCALAR] adr:312, bankAdr:8, sBank:14, d:1, a:4, f:hls_coding_quadtree_hls_dup2, v:log2_cb_size_minus_one_o
[SCALAR] adr:316, bankAdr:8, sBank:15, d:0, a:16, f:hls_coding_quadtree_hls_dup2, v:cb_depth_plus_one_i
[SCALAR] adr:316, bankAdr:8, sBank:15, d:1, a:4, f:hls_coding_quadtree_hls_dup2, v:cb_depth_plus_one_o
[SCALAR] adr:408, bankAdr:12, sBank:6, d:0, a:22, f:hls_coding_quadtree_hls_dup2, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:0, a:13, f:hls_coding_quadtree_hls_dup2, v:height
[SCALAR] adr:292, bankAdr:8, sBank:9, d:1, a:23, f:hls_coding_quadtree_hls_dup2, v:split_cu_flag_i
[SCALAR] adr:292, bankAdr:8, sBank:9, d:0, a:5, f:hls_coding_quadtree_hls_dup2, v:split_cu_flag_o
[SCALAR] adr:296, bankAdr:8, sBank:10, d:0, a:19, f:hls_coding_quadtree_hls_dup2, v:more_data_i
[SCALAR] adr:296, bankAdr:8, sBank:10, d:0, a:4, f:hls_coding_quadtree_hls_dup2, v:more_data_o
[SCALAR] adr:1256, bankAdr:36, sBank:26, d:0, a:13, f:hls_coding_quadtree_hls_dup2, v:rv_hls_coding_unit
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:0, a:15, f:hls_coding_quadtree_hls_dup2, v:rv_callback_flag
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:12, f:hls_coding_quadtree_hls_dup2, v:log2_ctb_size
[SCALAR] adr:540, bankAdr:16, sBank:7, d:0, a:3, f:hls_coding_quadtree_hls_dup2, v:qPy_pred
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:21, f:hls_coding_quadtree_hls_dup2, v:qp_y
[SCALAR] adr:40, bankAdr:0, sBank:10, d:1, a:19, f:hls_coding_quadtree_hls_dup2, v:qp_block_mask_i
[SCALAR] adr:40, bankAdr:0, sBank:10, d:1, a:4, f:hls_coding_quadtree_hls_dup2, v:qp_block_mask_o
[SCALAR] adr:308, bankAdr:8, sBank:13, d:1, a:15, f:hls_coding_quadtree_hls_dup2, v:cb_size_split_i
[SCALAR] adr:308, bankAdr:8, sBank:13, d:0, a:3, f:hls_coding_quadtree_hls_dup2, v:cb_size_split_o
[SCALAR] adr:368, bankAdr:8, sBank:28, d:0, a:10, f:hls_coding_quadtree_hls_dup2, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:0, a:12, f:hls_coding_quadtree_hls_dup2, v:min_cb_width
[SCALAR] adr:476, bankAdr:12, sBank:23, d:0, a:3, f:hls_coding_quadtree_hls_dup2, v:tu_is_cu_qp_delta_coded
[SCALAR] adr:468, bankAdr:12, sBank:21, d:1, a:3, f:hls_coding_quadtree_hls_dup2, v:tu_cu_qp_delta
[SCALAR] adr:472, bankAdr:12, sBank:22, d:1, a:3, f:hls_coding_quadtree_hls_dup2, v:tu_is_cu_chroma_qp_offset_coded
[SCALAR] adr:464, bankAdr:12, sBank:20, d:1, a:4, f:hls_coding_quadtree_hls_dup2, v:depth
[SCALAR] adr:608, bankAdr:16, sBank:24, d:0, a:11, f:hls_coding_quadtree_hls_dup2, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:0, a:13, f:hls_coding_quadtree_hls_dup2, v:ctb_up_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:1, a:20, f:hls_coding_quadtree_hls_dup2, v:cu_qp_delta_enabled_flag
[SCALAR] adr:436, bankAdr:12, sBank:13, d:0, a:16, f:hls_coding_quadtree_hls_dup2, v:diff_cu_qp_delta_depth
[SCALAR] adr:448, bankAdr:12, sBank:16, d:0, a:11, f:hls_coding_quadtree_hls_dup2, v:cu_chroma_qp_offset_enabled_flag
[SCALAR] adr:432, bankAdr:12, sBank:12, d:0, a:19, f:hls_coding_quadtree_hls_dup2, v:diff_cu_chroma_qp_offset_depth
[ARRAY] adr:286208, bankAdr:278016, aBank:0, d:0, a:46, f:hls_coding_quadtree_hls_dup2, v:tab_ct_depth_Din_A
[ARRAY] adr:286208, bankAdr:278016, aBank:0, d:0, a:206, f:hls_coding_quadtree_hls_dup2, v:tab_ct_depth_Dout_A
[SCALAR] adr:300, bankAdr:8, sBank:11, d:0, a:21, f:hls_coding_quadtree_hls_dup3, v:x1_i
[SCALAR] adr:300, bankAdr:8, sBank:11, d:0, a:5, f:hls_coding_quadtree_hls_dup3, v:x1_o
[SCALAR] adr:304, bankAdr:8, sBank:12, d:1, a:18, f:hls_coding_quadtree_hls_dup3, v:y1_i
[SCALAR] adr:304, bankAdr:8, sBank:12, d:1, a:4, f:hls_coding_quadtree_hls_dup3, v:y1_o
[SCALAR] adr:312, bankAdr:8, sBank:14, d:0, a:18, f:hls_coding_quadtree_hls_dup3, v:log2_cb_size_minus_one_i
[SCALAR] adr:312, bankAdr:8, sBank:14, d:0, a:5, f:hls_coding_quadtree_hls_dup3, v:log2_cb_size_minus_one_o
[SCALAR] adr:316, bankAdr:8, sBank:15, d:1, a:16, f:hls_coding_quadtree_hls_dup3, v:cb_depth_plus_one_i
[SCALAR] adr:316, bankAdr:8, sBank:15, d:0, a:5, f:hls_coding_quadtree_hls_dup3, v:cb_depth_plus_one_o
[SCALAR] adr:408, bankAdr:12, sBank:6, d:0, a:23, f:hls_coding_quadtree_hls_dup3, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:1, a:13, f:hls_coding_quadtree_hls_dup3, v:height
[SCALAR] adr:292, bankAdr:8, sBank:9, d:0, a:24, f:hls_coding_quadtree_hls_dup3, v:split_cu_flag_i
[SCALAR] adr:292, bankAdr:8, sBank:9, d:1, a:5, f:hls_coding_quadtree_hls_dup3, v:split_cu_flag_o
[SCALAR] adr:296, bankAdr:8, sBank:10, d:0, a:20, f:hls_coding_quadtree_hls_dup3, v:more_data_i
[SCALAR] adr:296, bankAdr:8, sBank:10, d:0, a:5, f:hls_coding_quadtree_hls_dup3, v:more_data_o
[SCALAR] adr:1256, bankAdr:36, sBank:26, d:0, a:14, f:hls_coding_quadtree_hls_dup3, v:rv_hls_coding_unit
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:1, a:14, f:hls_coding_quadtree_hls_dup3, v:rv_callback_flag
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:13, f:hls_coding_quadtree_hls_dup3, v:log2_ctb_size
[SCALAR] adr:540, bankAdr:16, sBank:7, d:1, a:3, f:hls_coding_quadtree_hls_dup3, v:qPy_pred
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:22, f:hls_coding_quadtree_hls_dup3, v:qp_y
[SCALAR] adr:40, bankAdr:0, sBank:10, d:1, a:20, f:hls_coding_quadtree_hls_dup3, v:qp_block_mask_i
[SCALAR] adr:40, bankAdr:0, sBank:10, d:1, a:5, f:hls_coding_quadtree_hls_dup3, v:qp_block_mask_o
[SCALAR] adr:308, bankAdr:8, sBank:13, d:1, a:16, f:hls_coding_quadtree_hls_dup3, v:cb_size_split_i
[SCALAR] adr:308, bankAdr:8, sBank:13, d:1, a:3, f:hls_coding_quadtree_hls_dup3, v:cb_size_split_o
[SCALAR] adr:368, bankAdr:8, sBank:28, d:1, a:10, f:hls_coding_quadtree_hls_dup3, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:1, a:11, f:hls_coding_quadtree_hls_dup3, v:min_cb_width
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:3, f:hls_coding_quadtree_hls_dup3, v:tu_is_cu_qp_delta_coded
[SCALAR] adr:468, bankAdr:12, sBank:21, d:0, a:4, f:hls_coding_quadtree_hls_dup3, v:tu_cu_qp_delta
[SCALAR] adr:472, bankAdr:12, sBank:22, d:0, a:4, f:hls_coding_quadtree_hls_dup3, v:tu_is_cu_chroma_qp_offset_coded
[SCALAR] adr:464, bankAdr:12, sBank:20, d:0, a:5, f:hls_coding_quadtree_hls_dup3, v:depth
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:10, f:hls_coding_quadtree_hls_dup3, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:12, f:hls_coding_quadtree_hls_dup3, v:ctb_up_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:1, a:21, f:hls_coding_quadtree_hls_dup3, v:cu_qp_delta_enabled_flag
[SCALAR] adr:436, bankAdr:12, sBank:13, d:0, a:17, f:hls_coding_quadtree_hls_dup3, v:diff_cu_qp_delta_depth
[SCALAR] adr:448, bankAdr:12, sBank:16, d:1, a:10, f:hls_coding_quadtree_hls_dup3, v:cu_chroma_qp_offset_enabled_flag
[SCALAR] adr:432, bankAdr:12, sBank:12, d:0, a:20, f:hls_coding_quadtree_hls_dup3, v:diff_cu_chroma_qp_offset_depth
[ARRAY] adr:286208, bankAdr:278016, aBank:0, d:0, a:47, f:hls_coding_quadtree_hls_dup3, v:tab_ct_depth_Din_A
[ARRAY] adr:286208, bankAdr:278016, aBank:0, d:0, a:207, f:hls_coding_quadtree_hls_dup3, v:tab_ct_depth_Dout_A
[SCALAR] adr:420, bankAdr:12, sBank:9, d:1, a:24, f:hls_coding_unit_hls, v:loop_filter_disable_flag
[SCALAR] adr:380, bankAdr:8, sBank:31, d:0, a:18, f:hls_coding_unit_hls, v:max_transform_hierarchy_depth_inter
[SCALAR] adr:1164, bankAdr:36, sBank:3, d:1, a:10, f:hls_coding_unit_hls, v:disable_deblocking_filter_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:0, a:22, f:hls_coding_unit_hls, v:cu_qp_delta_enabled_flag
[SCALAR] adr:476, bankAdr:12, sBank:23, d:0, a:14, f:hls_coding_unit_hls, v:tu_is_cu_qp_delta_coded
[SCALAR] adr:572, bankAdr:16, sBank:15, d:0, a:17, f:hls_coding_unit_hls, v:cu_transquant_bypass_flag_i
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:5, f:hls_coding_unit_hls, v:cu_transquant_bypass_flag_o
[SCALAR] adr:28, bankAdr:0, sBank:7, d:0, a:16, f:hls_coding_unit_hls, v:pcm_flag_i
[SCALAR] adr:28, bankAdr:0, sBank:7, d:0, a:4, f:hls_coding_unit_hls, v:pcm_flag_o
[SCALAR] adr:504, bankAdr:12, sBank:30, d:1, a:7, f:hls_coding_unit_hls, v:merge_flag
[SCALAR] adr:560, bankAdr:16, sBank:12, d:1, a:19, f:hls_coding_unit_hls, v:pred_mode_i
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:5, f:hls_coding_unit_hls, v:pred_mode_o
[SCALAR] adr:564, bankAdr:16, sBank:13, d:1, a:17, f:hls_coding_unit_hls, v:part_mode_i
[SCALAR] adr:564, bankAdr:16, sBank:13, d:0, a:4, f:hls_coding_unit_hls, v:part_mode_o
[SCALAR] adr:576, bankAdr:16, sBank:16, d:0, a:2, f:hls_coding_unit_hls, v:max_trafo_depth
[SCALAR] adr:32, bankAdr:0, sBank:8, d:1, a:20, f:hls_coding_unit_hls, v:cb_size_i
[SCALAR] adr:32, bankAdr:0, sBank:8, d:0, a:4, f:hls_coding_unit_hls, v:cb_size_o
[SCALAR] adr:44, bankAdr:0, sBank:11, d:1, a:22, f:hls_coding_unit_hls, v:idx_i
[SCALAR] adr:44, bankAdr:0, sBank:11, d:1, a:5, f:hls_coding_unit_hls, v:idx_o
[SCALAR] adr:1168, bankAdr:36, sBank:4, d:1, a:0, f:hls_coding_unit_hls, v:xm_xBase
[SCALAR] adr:1172, bankAdr:36, sBank:5, d:0, a:4, f:hls_coding_unit_hls, v:xm_yBase
[SCALAR] adr:1176, bankAdr:36, sBank:6, d:0, a:4, f:hls_coding_unit_hls, v:xm_cb_xBase
[SCALAR] adr:1180, bankAdr:36, sBank:7, d:1, a:4, f:hls_coding_unit_hls, v:xm_cb_yBase
[SCALAR] adr:1184, bankAdr:36, sBank:8, d:1, a:4, f:hls_coding_unit_hls, v:xm_log2_cb_size
[SCALAR] adr:1268, bankAdr:36, sBank:29, d:1, a:20, f:hls_coding_unit_hls, v:rv_set_deblocking_bypass
[SCALAR] adr:1264, bankAdr:36, sBank:28, d:0, a:11, f:hls_coding_unit_hls, v:rv_ff_hevc_deblocking_boundary_strengths
[SCALAR] adr:1272, bankAdr:36, sBank:30, d:0, a:8, f:hls_coding_unit_hls, v:rv_hls_pcm_sample
[SCALAR] adr:1276, bankAdr:36, sBank:31, d:1, a:17, f:hls_coding_unit_hls, v:rv_hls_prediction_unit
[SCALAR] adr:1280, bankAdr:40, sBank:0, d:1, a:17, f:hls_coding_unit_hls, v:rv_hls_intra_prediction_unit
[SCALAR] adr:1284, bankAdr:40, sBank:1, d:0, a:14, f:hls_coding_unit_hls, v:rv_hls_transform_tree
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:0, a:16, f:hls_coding_unit_hls, v:rv_callback_flag
[SCALAR] adr:36, bankAdr:0, sBank:9, d:0, a:6, f:hls_coding_unit_hls, v:length_r
[SCALAR] adr:544, bankAdr:16, sBank:8, d:0, a:5, f:hls_coding_unit_hls, v:xm_x
[SCALAR] adr:548, bankAdr:16, sBank:9, d:1, a:6, f:hls_coding_unit_hls, v:xm_y
[SCALAR] adr:512, bankAdr:16, sBank:0, d:0, a:2, f:hls_coding_unit_hls, v:pu_intra_pred_mode_0
[SCALAR] adr:513, bankAdr:17, sBank:0, d:1, a:2, f:hls_coding_unit_hls, v:pu_intra_pred_mode_1
[SCALAR] adr:514, bankAdr:18, sBank:0, d:0, a:3, f:hls_coding_unit_hls, v:pu_intra_pred_mode_2
[SCALAR] adr:515, bankAdr:19, sBank:0, d:1, a:3, f:hls_coding_unit_hls, v:pu_intra_pred_mode_3
[SCALAR] adr:540, bankAdr:16, sBank:7, d:0, a:5, f:hls_coding_unit_hls, v:qPy_pred
[SCALAR] adr:24, bankAdr:0, sBank:6, d:1, a:4, f:hls_coding_unit_hls, v:skip_flag_start
[SCALAR] adr:368, bankAdr:8, sBank:28, d:1, a:11, f:hls_coding_unit_hls, v:log2_min_cb_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:15, f:hls_coding_unit_hls, v:log2_ctb_size
[SCALAR] adr:436, bankAdr:12, sBank:13, d:0, a:18, f:hls_coding_unit_hls, v:diff_cu_qp_delta_depth
[SCALAR] adr:536, bankAdr:16, sBank:6, d:0, a:24, f:hls_coding_unit_hls, v:qp_y
[SCALAR] adr:440, bankAdr:12, sBank:14, d:1, a:18, f:hls_coding_unit_hls, v:transquant_bypass_enable_flag
[SCALAR] adr:392, bankAdr:12, sBank:2, d:0, a:13, f:hls_coding_unit_hls, v:min_cb_width
[SCALAR] adr:568, bankAdr:16, sBank:14, d:1, a:5, f:hls_coding_unit_hls, v:intra_split_flag
[SCALAR] adr:452, bankAdr:12, sBank:17, d:1, a:12, f:hls_coding_unit_hls, v:slice_type
[SCALAR] adr:608, bankAdr:16, sBank:24, d:0, a:12, f:hls_coding_unit_hls, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:13, f:hls_coding_unit_hls, v:ctb_up_flag
[SCALAR] adr:320, bankAdr:8, sBank:16, d:0, a:12, f:hls_coding_unit_hls, v:amp_enabled_flag
[SCALAR] adr:400, bankAdr:12, sBank:4, d:0, a:12, f:hls_coding_unit_hls, v:pcm_enabled_flag
[SCALAR] adr:412, bankAdr:12, sBank:7, d:1, a:15, f:hls_coding_unit_hls, v:log2_min_pcm_cb_size
[SCALAR] adr:416, bankAdr:12, sBank:8, d:0, a:21, f:hls_coding_unit_hls, v:log2_max_pcm_cb_size
[SCALAR] adr:464, bankAdr:12, sBank:20, d:1, a:12, f:hls_coding_unit_hls, v:depth
[ARRAY] adr:286176, bankAdr:277984, aBank:0, d:0, a:48, f:hls_coding_unit_hls, v:skip_flag_Din_A
[ARRAY] adr:286176, bankAdr:277984, aBank:0, d:0, a:208, f:hls_coding_unit_hls, v:skip_flag_Dout_A
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:49, f:hls_coding_unit_hls, v:qp_y_tab_Din_A
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:209, f:hls_coding_unit_hls, v:qp_y_tab_Dout_A
[ARRAY] adr:286208, bankAdr:278016, aBank:0, d:0, a:50, f:hls_coding_unit_hls, v:tab_ct_depth_Din_A
[ARRAY] adr:286208, bankAdr:278016, aBank:0, d:0, a:210, f:hls_coding_unit_hls, v:tab_ct_depth_Dout_A
[SCALAR] adr:420, bankAdr:12, sBank:9, d:0, a:25, f:hls_coding_unit_hls_dup1, v:loop_filter_disable_flag
[SCALAR] adr:380, bankAdr:8, sBank:31, d:0, a:19, f:hls_coding_unit_hls_dup1, v:max_transform_hierarchy_depth_inter
[SCALAR] adr:1164, bankAdr:36, sBank:3, d:0, a:12, f:hls_coding_unit_hls_dup1, v:disable_deblocking_filter_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:0, a:23, f:hls_coding_unit_hls_dup1, v:cu_qp_delta_enabled_flag
[SCALAR] adr:476, bankAdr:12, sBank:23, d:0, a:15, f:hls_coding_unit_hls_dup1, v:tu_is_cu_qp_delta_coded
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:17, f:hls_coding_unit_hls_dup1, v:cu_transquant_bypass_flag_i
[SCALAR] adr:572, bankAdr:16, sBank:15, d:0, a:6, f:hls_coding_unit_hls_dup1, v:cu_transquant_bypass_flag_o
[SCALAR] adr:28, bankAdr:0, sBank:7, d:0, a:17, f:hls_coding_unit_hls_dup1, v:pcm_flag_i
[SCALAR] adr:28, bankAdr:0, sBank:7, d:1, a:5, f:hls_coding_unit_hls_dup1, v:pcm_flag_o
[SCALAR] adr:504, bankAdr:12, sBank:30, d:1, a:8, f:hls_coding_unit_hls_dup1, v:merge_flag
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:21, f:hls_coding_unit_hls_dup1, v:pred_mode_i
[SCALAR] adr:560, bankAdr:16, sBank:12, d:1, a:5, f:hls_coding_unit_hls_dup1, v:pred_mode_o
[SCALAR] adr:564, bankAdr:16, sBank:13, d:1, a:18, f:hls_coding_unit_hls_dup1, v:part_mode_i
[SCALAR] adr:564, bankAdr:16, sBank:13, d:1, a:4, f:hls_coding_unit_hls_dup1, v:part_mode_o
[SCALAR] adr:576, bankAdr:16, sBank:16, d:1, a:2, f:hls_coding_unit_hls_dup1, v:max_trafo_depth
[SCALAR] adr:32, bankAdr:0, sBank:8, d:1, a:21, f:hls_coding_unit_hls_dup1, v:cb_size_i
[SCALAR] adr:32, bankAdr:0, sBank:8, d:1, a:5, f:hls_coding_unit_hls_dup1, v:cb_size_o
[SCALAR] adr:44, bankAdr:0, sBank:11, d:1, a:23, f:hls_coding_unit_hls_dup1, v:idx_i
[SCALAR] adr:44, bankAdr:0, sBank:11, d:0, a:6, f:hls_coding_unit_hls_dup1, v:idx_o
[SCALAR] adr:1168, bankAdr:36, sBank:4, d:0, a:1, f:hls_coding_unit_hls_dup1, v:xm_xBase
[SCALAR] adr:1172, bankAdr:36, sBank:5, d:1, a:4, f:hls_coding_unit_hls_dup1, v:xm_yBase
[SCALAR] adr:1176, bankAdr:36, sBank:6, d:0, a:5, f:hls_coding_unit_hls_dup1, v:xm_cb_xBase
[SCALAR] adr:1180, bankAdr:36, sBank:7, d:0, a:6, f:hls_coding_unit_hls_dup1, v:xm_cb_yBase
[SCALAR] adr:1184, bankAdr:36, sBank:8, d:0, a:6, f:hls_coding_unit_hls_dup1, v:xm_log2_cb_size
[SCALAR] adr:1268, bankAdr:36, sBank:29, d:0, a:21, f:hls_coding_unit_hls_dup1, v:rv_set_deblocking_bypass
[SCALAR] adr:1264, bankAdr:36, sBank:28, d:0, a:12, f:hls_coding_unit_hls_dup1, v:rv_ff_hevc_deblocking_boundary_strengths
[SCALAR] adr:1272, bankAdr:36, sBank:30, d:0, a:9, f:hls_coding_unit_hls_dup1, v:rv_hls_pcm_sample
[SCALAR] adr:1276, bankAdr:36, sBank:31, d:1, a:18, f:hls_coding_unit_hls_dup1, v:rv_hls_prediction_unit
[SCALAR] adr:1280, bankAdr:40, sBank:0, d:0, a:18, f:hls_coding_unit_hls_dup1, v:rv_hls_intra_prediction_unit
[SCALAR] adr:1284, bankAdr:40, sBank:1, d:1, a:14, f:hls_coding_unit_hls_dup1, v:rv_hls_transform_tree
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:1, a:15, f:hls_coding_unit_hls_dup1, v:rv_callback_flag
[SCALAR] adr:36, bankAdr:0, sBank:9, d:0, a:7, f:hls_coding_unit_hls_dup1, v:length_r
[SCALAR] adr:544, bankAdr:16, sBank:8, d:1, a:6, f:hls_coding_unit_hls_dup1, v:xm_x
[SCALAR] adr:548, bankAdr:16, sBank:9, d:1, a:7, f:hls_coding_unit_hls_dup1, v:xm_y
[SCALAR] adr:512, bankAdr:16, sBank:0, d:0, a:4, f:hls_coding_unit_hls_dup1, v:pu_intra_pred_mode_0
[SCALAR] adr:513, bankAdr:17, sBank:0, d:1, a:4, f:hls_coding_unit_hls_dup1, v:pu_intra_pred_mode_1
[SCALAR] adr:514, bankAdr:18, sBank:0, d:0, a:5, f:hls_coding_unit_hls_dup1, v:pu_intra_pred_mode_2
[SCALAR] adr:515, bankAdr:19, sBank:0, d:1, a:5, f:hls_coding_unit_hls_dup1, v:pu_intra_pred_mode_3
[SCALAR] adr:540, bankAdr:16, sBank:7, d:1, a:6, f:hls_coding_unit_hls_dup1, v:qPy_pred
[SCALAR] adr:24, bankAdr:0, sBank:6, d:1, a:5, f:hls_coding_unit_hls_dup1, v:skip_flag_start
[SCALAR] adr:368, bankAdr:8, sBank:28, d:1, a:12, f:hls_coding_unit_hls_dup1, v:log2_min_cb_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:14, f:hls_coding_unit_hls_dup1, v:log2_ctb_size
[SCALAR] adr:436, bankAdr:12, sBank:13, d:0, a:19, f:hls_coding_unit_hls_dup1, v:diff_cu_qp_delta_depth
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:23, f:hls_coding_unit_hls_dup1, v:qp_y
[SCALAR] adr:440, bankAdr:12, sBank:14, d:0, a:19, f:hls_coding_unit_hls_dup1, v:transquant_bypass_enable_flag
[SCALAR] adr:392, bankAdr:12, sBank:2, d:1, a:12, f:hls_coding_unit_hls_dup1, v:min_cb_width
[SCALAR] adr:568, bankAdr:16, sBank:14, d:0, a:6, f:hls_coding_unit_hls_dup1, v:intra_split_flag
[SCALAR] adr:452, bankAdr:12, sBank:17, d:0, a:13, f:hls_coding_unit_hls_dup1, v:slice_type
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:11, f:hls_coding_unit_hls_dup1, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:14, f:hls_coding_unit_hls_dup1, v:ctb_up_flag
[SCALAR] adr:320, bankAdr:8, sBank:16, d:1, a:11, f:hls_coding_unit_hls_dup1, v:amp_enabled_flag
[SCALAR] adr:400, bankAdr:12, sBank:4, d:1, a:12, f:hls_coding_unit_hls_dup1, v:pcm_enabled_flag
[SCALAR] adr:412, bankAdr:12, sBank:7, d:1, a:16, f:hls_coding_unit_hls_dup1, v:log2_min_pcm_cb_size
[SCALAR] adr:416, bankAdr:12, sBank:8, d:0, a:22, f:hls_coding_unit_hls_dup1, v:log2_max_pcm_cb_size
[SCALAR] adr:464, bankAdr:12, sBank:20, d:0, a:13, f:hls_coding_unit_hls_dup1, v:depth
[ARRAY] adr:286176, bankAdr:277984, aBank:0, d:0, a:51, f:hls_coding_unit_hls_dup1, v:skip_flag_Din_A
[ARRAY] adr:286176, bankAdr:277984, aBank:0, d:0, a:211, f:hls_coding_unit_hls_dup1, v:skip_flag_Dout_A
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:52, f:hls_coding_unit_hls_dup1, v:qp_y_tab_Din_A
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:212, f:hls_coding_unit_hls_dup1, v:qp_y_tab_Dout_A
[ARRAY] adr:286208, bankAdr:278016, aBank:0, d:0, a:53, f:hls_coding_unit_hls_dup1, v:tab_ct_depth_Din_A
[ARRAY] adr:286208, bankAdr:278016, aBank:0, d:0, a:213, f:hls_coding_unit_hls_dup1, v:tab_ct_depth_Dout_A
[SCALAR] adr:420, bankAdr:12, sBank:9, d:1, a:25, f:hls_coding_unit_hls_dup2, v:loop_filter_disable_flag
[SCALAR] adr:380, bankAdr:8, sBank:31, d:0, a:20, f:hls_coding_unit_hls_dup2, v:max_transform_hierarchy_depth_inter
[SCALAR] adr:1164, bankAdr:36, sBank:3, d:1, a:11, f:hls_coding_unit_hls_dup2, v:disable_deblocking_filter_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:0, a:24, f:hls_coding_unit_hls_dup2, v:cu_qp_delta_enabled_flag
[SCALAR] adr:476, bankAdr:12, sBank:23, d:0, a:16, f:hls_coding_unit_hls_dup2, v:tu_is_cu_qp_delta_coded
[SCALAR] adr:572, bankAdr:16, sBank:15, d:0, a:18, f:hls_coding_unit_hls_dup2, v:cu_transquant_bypass_flag_i
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:6, f:hls_coding_unit_hls_dup2, v:cu_transquant_bypass_flag_o
[SCALAR] adr:28, bankAdr:0, sBank:7, d:0, a:18, f:hls_coding_unit_hls_dup2, v:pcm_flag_i
[SCALAR] adr:28, bankAdr:0, sBank:7, d:0, a:7, f:hls_coding_unit_hls_dup2, v:pcm_flag_o
[SCALAR] adr:504, bankAdr:12, sBank:30, d:1, a:9, f:hls_coding_unit_hls_dup2, v:merge_flag
[SCALAR] adr:560, bankAdr:16, sBank:12, d:1, a:20, f:hls_coding_unit_hls_dup2, v:pred_mode_i
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:6, f:hls_coding_unit_hls_dup2, v:pred_mode_o
[SCALAR] adr:564, bankAdr:16, sBank:13, d:1, a:19, f:hls_coding_unit_hls_dup2, v:part_mode_i
[SCALAR] adr:564, bankAdr:16, sBank:13, d:0, a:5, f:hls_coding_unit_hls_dup2, v:part_mode_o
[SCALAR] adr:576, bankAdr:16, sBank:16, d:0, a:3, f:hls_coding_unit_hls_dup2, v:max_trafo_depth
[SCALAR] adr:32, bankAdr:0, sBank:8, d:1, a:22, f:hls_coding_unit_hls_dup2, v:cb_size_i
[SCALAR] adr:32, bankAdr:0, sBank:8, d:0, a:7, f:hls_coding_unit_hls_dup2, v:cb_size_o
[SCALAR] adr:44, bankAdr:0, sBank:11, d:1, a:24, f:hls_coding_unit_hls_dup2, v:idx_i
[SCALAR] adr:44, bankAdr:0, sBank:11, d:1, a:6, f:hls_coding_unit_hls_dup2, v:idx_o
[SCALAR] adr:1168, bankAdr:36, sBank:4, d:1, a:1, f:hls_coding_unit_hls_dup2, v:xm_xBase
[SCALAR] adr:1172, bankAdr:36, sBank:5, d:0, a:5, f:hls_coding_unit_hls_dup2, v:xm_yBase
[SCALAR] adr:1176, bankAdr:36, sBank:6, d:0, a:6, f:hls_coding_unit_hls_dup2, v:xm_cb_xBase
[SCALAR] adr:1180, bankAdr:36, sBank:7, d:1, a:7, f:hls_coding_unit_hls_dup2, v:xm_cb_yBase
[SCALAR] adr:1184, bankAdr:36, sBank:8, d:1, a:7, f:hls_coding_unit_hls_dup2, v:xm_log2_cb_size
[SCALAR] adr:1268, bankAdr:36, sBank:29, d:1, a:21, f:hls_coding_unit_hls_dup2, v:rv_set_deblocking_bypass
[SCALAR] adr:1264, bankAdr:36, sBank:28, d:0, a:13, f:hls_coding_unit_hls_dup2, v:rv_ff_hevc_deblocking_boundary_strengths
[SCALAR] adr:1272, bankAdr:36, sBank:30, d:0, a:10, f:hls_coding_unit_hls_dup2, v:rv_hls_pcm_sample
[SCALAR] adr:1276, bankAdr:36, sBank:31, d:1, a:19, f:hls_coding_unit_hls_dup2, v:rv_hls_prediction_unit
[SCALAR] adr:1280, bankAdr:40, sBank:0, d:1, a:18, f:hls_coding_unit_hls_dup2, v:rv_hls_intra_prediction_unit
[SCALAR] adr:1284, bankAdr:40, sBank:1, d:0, a:15, f:hls_coding_unit_hls_dup2, v:rv_hls_transform_tree
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:0, a:17, f:hls_coding_unit_hls_dup2, v:rv_callback_flag
[SCALAR] adr:36, bankAdr:0, sBank:9, d:0, a:8, f:hls_coding_unit_hls_dup2, v:length_r
[SCALAR] adr:544, bankAdr:16, sBank:8, d:0, a:8, f:hls_coding_unit_hls_dup2, v:xm_x
[SCALAR] adr:548, bankAdr:16, sBank:9, d:1, a:8, f:hls_coding_unit_hls_dup2, v:xm_y
[SCALAR] adr:512, bankAdr:16, sBank:0, d:0, a:6, f:hls_coding_unit_hls_dup2, v:pu_intra_pred_mode_0
[SCALAR] adr:513, bankAdr:17, sBank:0, d:1, a:6, f:hls_coding_unit_hls_dup2, v:pu_intra_pred_mode_1
[SCALAR] adr:514, bankAdr:18, sBank:0, d:0, a:7, f:hls_coding_unit_hls_dup2, v:pu_intra_pred_mode_2
[SCALAR] adr:515, bankAdr:19, sBank:0, d:1, a:7, f:hls_coding_unit_hls_dup2, v:pu_intra_pred_mode_3
[SCALAR] adr:540, bankAdr:16, sBank:7, d:0, a:8, f:hls_coding_unit_hls_dup2, v:qPy_pred
[SCALAR] adr:24, bankAdr:0, sBank:6, d:1, a:6, f:hls_coding_unit_hls_dup2, v:skip_flag_start
[SCALAR] adr:368, bankAdr:8, sBank:28, d:1, a:13, f:hls_coding_unit_hls_dup2, v:log2_min_cb_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:16, f:hls_coding_unit_hls_dup2, v:log2_ctb_size
[SCALAR] adr:436, bankAdr:12, sBank:13, d:0, a:20, f:hls_coding_unit_hls_dup2, v:diff_cu_qp_delta_depth
[SCALAR] adr:536, bankAdr:16, sBank:6, d:0, a:25, f:hls_coding_unit_hls_dup2, v:qp_y
[SCALAR] adr:440, bankAdr:12, sBank:14, d:1, a:19, f:hls_coding_unit_hls_dup2, v:transquant_bypass_enable_flag
[SCALAR] adr:392, bankAdr:12, sBank:2, d:0, a:14, f:hls_coding_unit_hls_dup2, v:min_cb_width
[SCALAR] adr:568, bankAdr:16, sBank:14, d:1, a:6, f:hls_coding_unit_hls_dup2, v:intra_split_flag
[SCALAR] adr:452, bankAdr:12, sBank:17, d:1, a:13, f:hls_coding_unit_hls_dup2, v:slice_type
[SCALAR] adr:608, bankAdr:16, sBank:24, d:0, a:13, f:hls_coding_unit_hls_dup2, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:15, f:hls_coding_unit_hls_dup2, v:ctb_up_flag
[SCALAR] adr:320, bankAdr:8, sBank:16, d:0, a:13, f:hls_coding_unit_hls_dup2, v:amp_enabled_flag
[SCALAR] adr:400, bankAdr:12, sBank:4, d:0, a:13, f:hls_coding_unit_hls_dup2, v:pcm_enabled_flag
[SCALAR] adr:412, bankAdr:12, sBank:7, d:1, a:17, f:hls_coding_unit_hls_dup2, v:log2_min_pcm_cb_size
[SCALAR] adr:416, bankAdr:12, sBank:8, d:0, a:23, f:hls_coding_unit_hls_dup2, v:log2_max_pcm_cb_size
[SCALAR] adr:464, bankAdr:12, sBank:20, d:1, a:13, f:hls_coding_unit_hls_dup2, v:depth
[ARRAY] adr:286176, bankAdr:277984, aBank:0, d:0, a:54, f:hls_coding_unit_hls_dup2, v:skip_flag_Din_A
[ARRAY] adr:286176, bankAdr:277984, aBank:0, d:0, a:214, f:hls_coding_unit_hls_dup2, v:skip_flag_Dout_A
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:55, f:hls_coding_unit_hls_dup2, v:qp_y_tab_Din_A
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:215, f:hls_coding_unit_hls_dup2, v:qp_y_tab_Dout_A
[ARRAY] adr:286208, bankAdr:278016, aBank:0, d:0, a:56, f:hls_coding_unit_hls_dup2, v:tab_ct_depth_Din_A
[ARRAY] adr:286208, bankAdr:278016, aBank:0, d:0, a:216, f:hls_coding_unit_hls_dup2, v:tab_ct_depth_Dout_A
[SCALAR] adr:420, bankAdr:12, sBank:9, d:0, a:26, f:hls_coding_unit_hls_dup3, v:loop_filter_disable_flag
[SCALAR] adr:380, bankAdr:8, sBank:31, d:0, a:21, f:hls_coding_unit_hls_dup3, v:max_transform_hierarchy_depth_inter
[SCALAR] adr:1164, bankAdr:36, sBank:3, d:0, a:13, f:hls_coding_unit_hls_dup3, v:disable_deblocking_filter_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:0, a:25, f:hls_coding_unit_hls_dup3, v:cu_qp_delta_enabled_flag
[SCALAR] adr:476, bankAdr:12, sBank:23, d:0, a:17, f:hls_coding_unit_hls_dup3, v:tu_is_cu_qp_delta_coded
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:18, f:hls_coding_unit_hls_dup3, v:cu_transquant_bypass_flag_i
[SCALAR] adr:572, bankAdr:16, sBank:15, d:0, a:7, f:hls_coding_unit_hls_dup3, v:cu_transquant_bypass_flag_o
[SCALAR] adr:28, bankAdr:0, sBank:7, d:0, a:19, f:hls_coding_unit_hls_dup3, v:pcm_flag_i
[SCALAR] adr:28, bankAdr:0, sBank:7, d:1, a:8, f:hls_coding_unit_hls_dup3, v:pcm_flag_o
[SCALAR] adr:504, bankAdr:12, sBank:30, d:1, a:10, f:hls_coding_unit_hls_dup3, v:merge_flag
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:22, f:hls_coding_unit_hls_dup3, v:pred_mode_i
[SCALAR] adr:560, bankAdr:16, sBank:12, d:1, a:6, f:hls_coding_unit_hls_dup3, v:pred_mode_o
[SCALAR] adr:564, bankAdr:16, sBank:13, d:1, a:20, f:hls_coding_unit_hls_dup3, v:part_mode_i
[SCALAR] adr:564, bankAdr:16, sBank:13, d:1, a:5, f:hls_coding_unit_hls_dup3, v:part_mode_o
[SCALAR] adr:576, bankAdr:16, sBank:16, d:1, a:3, f:hls_coding_unit_hls_dup3, v:max_trafo_depth
[SCALAR] adr:32, bankAdr:0, sBank:8, d:1, a:23, f:hls_coding_unit_hls_dup3, v:cb_size_i
[SCALAR] adr:32, bankAdr:0, sBank:8, d:1, a:8, f:hls_coding_unit_hls_dup3, v:cb_size_o
[SCALAR] adr:44, bankAdr:0, sBank:11, d:1, a:25, f:hls_coding_unit_hls_dup3, v:idx_i
[SCALAR] adr:44, bankAdr:0, sBank:11, d:0, a:7, f:hls_coding_unit_hls_dup3, v:idx_o
[SCALAR] adr:1168, bankAdr:36, sBank:4, d:0, a:2, f:hls_coding_unit_hls_dup3, v:xm_xBase
[SCALAR] adr:1172, bankAdr:36, sBank:5, d:1, a:5, f:hls_coding_unit_hls_dup3, v:xm_yBase
[SCALAR] adr:1176, bankAdr:36, sBank:6, d:0, a:7, f:hls_coding_unit_hls_dup3, v:xm_cb_xBase
[SCALAR] adr:1180, bankAdr:36, sBank:7, d:0, a:9, f:hls_coding_unit_hls_dup3, v:xm_cb_yBase
[SCALAR] adr:1184, bankAdr:36, sBank:8, d:0, a:9, f:hls_coding_unit_hls_dup3, v:xm_log2_cb_size
[SCALAR] adr:1268, bankAdr:36, sBank:29, d:0, a:22, f:hls_coding_unit_hls_dup3, v:rv_set_deblocking_bypass
[SCALAR] adr:1264, bankAdr:36, sBank:28, d:0, a:14, f:hls_coding_unit_hls_dup3, v:rv_ff_hevc_deblocking_boundary_strengths
[SCALAR] adr:1272, bankAdr:36, sBank:30, d:0, a:11, f:hls_coding_unit_hls_dup3, v:rv_hls_pcm_sample
[SCALAR] adr:1276, bankAdr:36, sBank:31, d:1, a:20, f:hls_coding_unit_hls_dup3, v:rv_hls_prediction_unit
[SCALAR] adr:1280, bankAdr:40, sBank:0, d:0, a:19, f:hls_coding_unit_hls_dup3, v:rv_hls_intra_prediction_unit
[SCALAR] adr:1284, bankAdr:40, sBank:1, d:1, a:15, f:hls_coding_unit_hls_dup3, v:rv_hls_transform_tree
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:1, a:16, f:hls_coding_unit_hls_dup3, v:rv_callback_flag
[SCALAR] adr:36, bankAdr:0, sBank:9, d:0, a:9, f:hls_coding_unit_hls_dup3, v:length_r
[SCALAR] adr:544, bankAdr:16, sBank:8, d:1, a:9, f:hls_coding_unit_hls_dup3, v:xm_x
[SCALAR] adr:548, bankAdr:16, sBank:9, d:1, a:9, f:hls_coding_unit_hls_dup3, v:xm_y
[SCALAR] adr:512, bankAdr:16, sBank:0, d:0, a:8, f:hls_coding_unit_hls_dup3, v:pu_intra_pred_mode_0
[SCALAR] adr:513, bankAdr:17, sBank:0, d:1, a:8, f:hls_coding_unit_hls_dup3, v:pu_intra_pred_mode_1
[SCALAR] adr:514, bankAdr:18, sBank:0, d:0, a:9, f:hls_coding_unit_hls_dup3, v:pu_intra_pred_mode_2
[SCALAR] adr:515, bankAdr:19, sBank:0, d:1, a:9, f:hls_coding_unit_hls_dup3, v:pu_intra_pred_mode_3
[SCALAR] adr:540, bankAdr:16, sBank:7, d:1, a:9, f:hls_coding_unit_hls_dup3, v:qPy_pred
[SCALAR] adr:24, bankAdr:0, sBank:6, d:1, a:7, f:hls_coding_unit_hls_dup3, v:skip_flag_start
[SCALAR] adr:368, bankAdr:8, sBank:28, d:1, a:14, f:hls_coding_unit_hls_dup3, v:log2_min_cb_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:15, f:hls_coding_unit_hls_dup3, v:log2_ctb_size
[SCALAR] adr:436, bankAdr:12, sBank:13, d:0, a:21, f:hls_coding_unit_hls_dup3, v:diff_cu_qp_delta_depth
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:24, f:hls_coding_unit_hls_dup3, v:qp_y
[SCALAR] adr:440, bankAdr:12, sBank:14, d:0, a:20, f:hls_coding_unit_hls_dup3, v:transquant_bypass_enable_flag
[SCALAR] adr:392, bankAdr:12, sBank:2, d:1, a:13, f:hls_coding_unit_hls_dup3, v:min_cb_width
[SCALAR] adr:568, bankAdr:16, sBank:14, d:0, a:7, f:hls_coding_unit_hls_dup3, v:intra_split_flag
[SCALAR] adr:452, bankAdr:12, sBank:17, d:0, a:14, f:hls_coding_unit_hls_dup3, v:slice_type
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:12, f:hls_coding_unit_hls_dup3, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:16, f:hls_coding_unit_hls_dup3, v:ctb_up_flag
[SCALAR] adr:320, bankAdr:8, sBank:16, d:1, a:12, f:hls_coding_unit_hls_dup3, v:amp_enabled_flag
[SCALAR] adr:400, bankAdr:12, sBank:4, d:1, a:13, f:hls_coding_unit_hls_dup3, v:pcm_enabled_flag
[SCALAR] adr:412, bankAdr:12, sBank:7, d:1, a:18, f:hls_coding_unit_hls_dup3, v:log2_min_pcm_cb_size
[SCALAR] adr:416, bankAdr:12, sBank:8, d:0, a:24, f:hls_coding_unit_hls_dup3, v:log2_max_pcm_cb_size
[SCALAR] adr:464, bankAdr:12, sBank:20, d:0, a:14, f:hls_coding_unit_hls_dup3, v:depth
[ARRAY] adr:286176, bankAdr:277984, aBank:0, d:0, a:57, f:hls_coding_unit_hls_dup3, v:skip_flag_Din_A
[ARRAY] adr:286176, bankAdr:277984, aBank:0, d:0, a:217, f:hls_coding_unit_hls_dup3, v:skip_flag_Dout_A
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:58, f:hls_coding_unit_hls_dup3, v:qp_y_tab_Din_A
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:218, f:hls_coding_unit_hls_dup3, v:qp_y_tab_Dout_A
[ARRAY] adr:286208, bankAdr:278016, aBank:0, d:0, a:59, f:hls_coding_unit_hls_dup3, v:tab_ct_depth_Din_A
[ARRAY] adr:286208, bankAdr:278016, aBank:0, d:0, a:219, f:hls_coding_unit_hls_dup3, v:tab_ct_depth_Dout_A
[ARRAY] adr:286192, bankAdr:278000, aBank:0, d:0, a:60, f:hls_decode_neighbour_hls, v:ctb_addr_rs_to_ts_Din_A
[ARRAY] adr:286192, bankAdr:278000, aBank:0, d:0, a:220, f:hls_decode_neighbour_hls, v:ctb_addr_rs_to_ts_Dout_A
[ARRAY] adr:286196, bankAdr:278004, aBank:0, d:0, a:61, f:hls_decode_neighbour_hls, v:tile_id_Din_A
[ARRAY] adr:286196, bankAdr:278004, aBank:0, d:0, a:221, f:hls_decode_neighbour_hls, v:tile_id_Dout_A
[SCALAR] adr:532, bankAdr:16, sBank:5, d:0, a:6, f:hls_decode_neighbour_hls, v:first_qp_group
[SCALAR] adr:620, bankAdr:16, sBank:27, d:1, a:6, f:hls_decode_neighbour_hls, v:end_of_tiles_x
[SCALAR] adr:624, bankAdr:16, sBank:28, d:1, a:2, f:hls_decode_neighbour_hls, v:end_of_tiles_y
[SCALAR] adr:260, bankAdr:8, sBank:1, d:0, a:2, f:hls_decode_neighbour_hls, v:slice_or_tiles_left_boundary
[SCALAR] adr:264, bankAdr:8, sBank:2, d:1, a:0, f:hls_decode_neighbour_hls, v:slice_or_tiles_up_boundary
[SCALAR] adr:608, bankAdr:16, sBank:24, d:0, a:2, f:hls_decode_neighbour_hls, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:0, a:4, f:hls_decode_neighbour_hls, v:ctb_up_flag
[SCALAR] adr:616, bankAdr:16, sBank:26, d:0, a:2, f:hls_decode_neighbour_hls, v:ctb_up_right_flag
[SCALAR] adr:612, bankAdr:16, sBank:25, d:0, a:2, f:hls_decode_neighbour_hls, v:ctb_up_left_flag
[SCALAR] adr:272, bankAdr:8, sBank:4, d:0, a:14, f:hls_decode_neighbour_hls, v:x_ctb
[SCALAR] adr:276, bankAdr:8, sBank:5, d:0, a:20, f:hls_decode_neighbour_hls, v:y_ctb
[SCALAR] adr:280, bankAdr:8, sBank:6, d:0, a:26, f:hls_decode_neighbour_hls, v:ctb_addr_ts
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:17, f:hls_decode_neighbour_hls, v:log2_ctb_size
[SCALAR] adr:284, bankAdr:8, sBank:7, d:0, a:20, f:hls_decode_neighbour_hls, v:ctb_width
[SCALAR] adr:288, bankAdr:8, sBank:8, d:1, a:24, f:hls_decode_neighbour_hls, v:slice_addr
[SCALAR] adr:252, bankAdr:4, sBank:31, d:0, a:22, f:hls_decode_neighbour_hls, v:entropy_coding_sync_enabled_flag
[SCALAR] adr:256, bankAdr:8, sBank:0, d:1, a:19, f:hls_decode_neighbour_hls, v:tiles_enabled_flag
[SCALAR] adr:444, bankAdr:12, sBank:15, d:0, a:19, f:hls_decode_neighbour_hls, v:num_tile_columns
[ARRAY] adr:286164, bankAdr:277972, aBank:0, d:0, a:62, f:hls_decode_neighbour_hls, v:column_width_Din_A
[ARRAY] adr:286164, bankAdr:277972, aBank:0, d:0, a:222, f:hls_decode_neighbour_hls, v:column_width_Dout_A
[SCALAR] adr:408, bankAdr:12, sBank:6, d:1, a:25, f:hls_decode_neighbour_hls, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:0, a:14, f:hls_decode_neighbour_hls, v:height
[SCALAR] adr:160, bankAdr:4, sBank:8, d:0, a:25, f:hls_prediction_unit_hls, v:nPbW
[SCALAR] adr:164, bankAdr:4, sBank:9, d:1, a:26, f:hls_prediction_unit_hls, v:nPbH
[SCALAR] adr:1544, bankAdr:48, sBank:2, d:0, a:15, f:hls_prediction_unit_hls, v:part_idx
[SCALAR] adr:44, bankAdr:0, sBank:11, d:0, a:26, f:hls_prediction_unit_hls, v:idx
[SCALAR] adr:396, bankAdr:12, sBank:3, d:1, a:12, f:hls_prediction_unit_hls, v:min_pu_width
[SCALAR] adr:368, bankAdr:8, sBank:28, d:0, a:15, f:hls_prediction_unit_hls, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:1, a:14, f:hls_prediction_unit_hls, v:min_cb_width
[ARRAY] adr:286176, bankAdr:277984, aBank:0, d:0, a:63, f:hls_prediction_unit_hls, v:skip_flag_Din_A
[ARRAY] adr:286176, bankAdr:277984, aBank:0, d:0, a:223, f:hls_prediction_unit_hls, v:skip_flag_Dout_A
[SCALAR] adr:1552, bankAdr:48, sBank:4, d:1, a:14, f:hls_prediction_unit_hls, v:max_num_merge_cand
[SCALAR] adr:784, bankAdr:24, sBank:4, d:0, a:15, f:hls_prediction_unit_hls, v:current_mv_mv_0_x_i
[SCALAR] adr:784, bankAdr:24, sBank:4, d:1, a:2, f:hls_prediction_unit_hls, v:current_mv_mv_0_x_o
[SCALAR] adr:788, bankAdr:24, sBank:5, d:1, a:19, f:hls_prediction_unit_hls, v:current_mv_mv_0_y_i
[SCALAR] adr:788, bankAdr:24, sBank:5, d:1, a:6, f:hls_prediction_unit_hls, v:current_mv_mv_0_y_o
[SCALAR] adr:792, bankAdr:24, sBank:6, d:0, a:27, f:hls_prediction_unit_hls, v:current_mv_mv_1_x_i
[SCALAR] adr:792, bankAdr:24, sBank:6, d:0, a:8, f:hls_prediction_unit_hls, v:current_mv_mv_1_x_o
[SCALAR] adr:796, bankAdr:24, sBank:7, d:1, a:19, f:hls_prediction_unit_hls, v:current_mv_mv_1_y_i
[SCALAR] adr:796, bankAdr:24, sBank:7, d:0, a:10, f:hls_prediction_unit_hls, v:current_mv_mv_1_y_o
[SCALAR] adr:800, bankAdr:24, sBank:8, d:0, a:10, f:hls_prediction_unit_hls, v:current_mv_poc_0
[SCALAR] adr:804, bankAdr:24, sBank:9, d:0, a:10, f:hls_prediction_unit_hls, v:current_mv_poc_1
[SCALAR] adr:808, bankAdr:24, sBank:10, d:0, a:21, f:hls_prediction_unit_hls, v:current_mv_ref_idx_0_i
[SCALAR] adr:808, bankAdr:24, sBank:10, d:0, a:6, f:hls_prediction_unit_hls, v:current_mv_ref_idx_0_o
[SCALAR] adr:812, bankAdr:24, sBank:11, d:1, a:26, f:hls_prediction_unit_hls, v:current_mv_ref_idx_1_i
[SCALAR] adr:812, bankAdr:24, sBank:11, d:1, a:7, f:hls_prediction_unit_hls, v:current_mv_ref_idx_1_o
[SCALAR] adr:816, bankAdr:24, sBank:12, d:1, a:21, f:hls_prediction_unit_hls, v:current_mv_pred_flag_i
[SCALAR] adr:816, bankAdr:24, sBank:12, d:0, a:7, f:hls_prediction_unit_hls, v:current_mv_pred_flag_o
[SCALAR] adr:452, bankAdr:12, sBank:17, d:1, a:14, f:hls_prediction_unit_hls, v:slice_type
[SCALAR] adr:1456, bankAdr:44, sBank:12, d:0, a:23, f:hls_prediction_unit_hls, v:rv_ff_hevc_luma_mv_merge_mode
[SCALAR] adr:1460, bankAdr:44, sBank:13, d:1, a:21, f:hls_prediction_unit_hls, v:rv_ff_hevc_ref_idx_lx_decode
[SCALAR] adr:1464, bankAdr:44, sBank:14, d:1, a:20, f:hls_prediction_unit_hls, v:rv_ff_hevc_hls_mvd_coding
[SCALAR] adr:1468, bankAdr:44, sBank:15, d:1, a:19, f:hls_prediction_unit_hls, v:rv_ff_hevc_luma_mv_mvp_mode
[SCALAR] adr:1472, bankAdr:44, sBank:16, d:0, a:14, f:hls_prediction_unit_hls, v:rv_hevc_await_progress
[SCALAR] adr:1476, bankAdr:44, sBank:17, d:0, a:15, f:hls_prediction_unit_hls, v:rv_hevc_await_progress_bl
[SCALAR] adr:1480, bankAdr:44, sBank:18, d:0, a:12, f:hls_prediction_unit_hls, v:rv_ff_upsample_block
[SCALAR] adr:1484, bankAdr:44, sBank:19, d:1, a:14, f:hls_prediction_unit_hls, v:rv_luma_mc_uni_libx265
[SCALAR] adr:1488, bankAdr:44, sBank:20, d:1, a:14, f:hls_prediction_unit_hls, v:rv_chroma_mc_uni_libx265
[SCALAR] adr:1492, bankAdr:44, sBank:21, d:0, a:14, f:hls_prediction_unit_hls, v:rv_xmem_copy_mvfield
[SCALAR] adr:1496, bankAdr:44, sBank:22, d:0, a:18, f:hls_prediction_unit_hls, v:rv_setMVPOC
[SCALAR] adr:1500, bankAdr:44, sBank:23, d:0, a:18, f:hls_prediction_unit_hls, v:rv_checkref
[SCALAR] adr:1444, bankAdr:44, sBank:9, d:1, a:10, f:hls_prediction_unit_hls, v:merge_idx
[SCALAR] adr:888, bankAdr:24, sBank:30, d:1, a:2, f:hls_prediction_unit_hls, v:mvp_lx_flag
[SCALAR] adr:1436, bankAdr:44, sBank:7, d:1, a:10, f:hls_prediction_unit_hls, v:pu_mvd_x
[SCALAR] adr:1440, bankAdr:44, sBank:8, d:1, a:10, f:hls_prediction_unit_hls, v:pu_mvd_y
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:64, f:hls_prediction_unit_hls, v:tab_mvf_pred_flag_row_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:224, f:hls_prediction_unit_hls, v:tab_mvf_pred_flag_row_Dout_A
[SCALAR] adr:1448, bankAdr:44, sBank:10, d:1, a:21, f:hls_prediction_unit_hls, v:skipref
[SCALAR] adr:1452, bankAdr:44, sBank:11, d:0, a:27, f:hls_prediction_unit_hls, v:interref
[SCALAR] adr:372, bankAdr:8, sBank:29, d:1, a:22, f:hls_prediction_unit_hls, v:log2_min_pu_size
[SCALAR] adr:172, bankAdr:4, sBank:11, d:1, a:27, f:hls_prediction_unit_hls, v:log2_width
[SCALAR] adr:504, bankAdr:12, sBank:30, d:0, a:3, f:hls_prediction_unit_hls, v:merge_flag
[SCALAR] adr:464, bankAdr:12, sBank:20, d:0, a:15, f:hls_prediction_unit_hls, v:depth
[SCALAR] adr:1292, bankAdr:40, sBank:3, d:0, a:14, f:hls_prediction_unit_hls, v:nb_refs_0
[SCALAR] adr:1296, bankAdr:40, sBank:4, d:1, a:15, f:hls_prediction_unit_hls, v:nb_refs_1
[SCALAR] adr:180, bankAdr:4, sBank:13, d:0, a:22, f:hls_prediction_unit_hls, v:predColBuf_0_i
[SCALAR] adr:180, bankAdr:4, sBank:13, d:0, a:6, f:hls_prediction_unit_hls, v:predColBuf_0_o
[SCALAR] adr:184, bankAdr:4, sBank:14, d:0, a:21, f:hls_prediction_unit_hls, v:predColBuf_1_i
[SCALAR] adr:184, bankAdr:4, sBank:14, d:1, a:7, f:hls_prediction_unit_hls, v:predColBuf_1_o
[SCALAR] adr:188, bankAdr:4, sBank:15, d:0, a:20, f:hls_prediction_unit_hls, v:predColBuf_2_i
[SCALAR] adr:188, bankAdr:4, sBank:15, d:1, a:7, f:hls_prediction_unit_hls, v:predColBuf_2_o
[SCALAR] adr:192, bankAdr:4, sBank:16, d:1, a:13, f:hls_prediction_unit_hls, v:predColBuf_3_i
[SCALAR] adr:192, bankAdr:4, sBank:16, d:0, a:4, f:hls_prediction_unit_hls, v:predColBuf_3_o
[SCALAR] adr:196, bankAdr:4, sBank:17, d:1, a:15, f:hls_prediction_unit_hls, v:predColBuf_4_i
[SCALAR] adr:196, bankAdr:4, sBank:17, d:1, a:2, f:hls_prediction_unit_hls, v:predColBuf_4_o
[SCALAR] adr:200, bankAdr:4, sBank:18, d:1, a:11, f:hls_prediction_unit_hls, v:predColBuf_5_i
[SCALAR] adr:200, bankAdr:4, sBank:18, d:1, a:2, f:hls_prediction_unit_hls, v:predColBuf_5_o
[SCALAR] adr:204, bankAdr:4, sBank:19, d:0, a:15, f:hls_prediction_unit_hls, v:predColBuf_6_i
[SCALAR] adr:204, bankAdr:4, sBank:19, d:1, a:3, f:hls_prediction_unit_hls, v:predColBuf_6_o
[SCALAR] adr:208, bankAdr:4, sBank:20, d:1, a:15, f:hls_prediction_unit_hls, v:predColBuf_7_i
[SCALAR] adr:208, bankAdr:4, sBank:20, d:1, a:5, f:hls_prediction_unit_hls, v:predColBuf_7_o
[SCALAR] adr:212, bankAdr:4, sBank:21, d:1, a:13, f:hls_prediction_unit_hls, v:predColBuf_8_i
[SCALAR] adr:212, bankAdr:4, sBank:21, d:1, a:4, f:hls_prediction_unit_hls, v:predColBuf_8_o
[SCALAR] adr:216, bankAdr:4, sBank:22, d:1, a:17, f:hls_prediction_unit_hls, v:predColBuf_9_i
[SCALAR] adr:216, bankAdr:4, sBank:22, d:1, a:4, f:hls_prediction_unit_hls, v:predColBuf_9_o
[SCALAR] adr:220, bankAdr:4, sBank:23, d:1, a:17, f:hls_prediction_unit_hls, v:predColBuf_10_i
[SCALAR] adr:220, bankAdr:4, sBank:23, d:1, a:4, f:hls_prediction_unit_hls, v:predColBuf_10_o
[SCALAR] adr:224, bankAdr:4, sBank:24, d:0, a:14, f:hls_prediction_unit_hls, v:predColBuf_11_i
[SCALAR] adr:224, bankAdr:4, sBank:24, d:1, a:2, f:hls_prediction_unit_hls, v:predColBuf_11_o
[SCALAR] adr:228, bankAdr:4, sBank:25, d:0, a:10, f:hls_prediction_unit_hls, v:predColBuf_12_i
[SCALAR] adr:228, bankAdr:4, sBank:25, d:1, a:2, f:hls_prediction_unit_hls, v:predColBuf_12_o
[SCALAR] adr:232, bankAdr:4, sBank:26, d:1, a:16, f:hls_prediction_unit_hls, v:predColBuf_13_i
[SCALAR] adr:232, bankAdr:4, sBank:26, d:1, a:2, f:hls_prediction_unit_hls, v:predColBuf_13_o
[SCALAR] adr:236, bankAdr:4, sBank:27, d:1, a:15, f:hls_prediction_unit_hls, v:predColBuf_14_i
[SCALAR] adr:236, bankAdr:4, sBank:27, d:0, a:7, f:hls_prediction_unit_hls, v:predColBuf_14_o
[SCALAR] adr:240, bankAdr:4, sBank:28, d:1, a:15, f:hls_prediction_unit_hls, v:predColBuf_15_i
[SCALAR] adr:240, bankAdr:4, sBank:28, d:0, a:3, f:hls_prediction_unit_hls, v:predColBuf_15_o
[SCALAR] adr:244, bankAdr:4, sBank:29, d:0, a:23, f:hls_prediction_unit_hls, v:predColBuf_16_i
[SCALAR] adr:244, bankAdr:4, sBank:29, d:0, a:7, f:hls_prediction_unit_hls, v:predColBuf_16_o
[ARRAY] adr:286224, bankAdr:278032, aBank:0, d:0, a:65, f:hls_prediction_unit_hls, v:refPicList_0_list_Din_A
[ARRAY] adr:286224, bankAdr:278032, aBank:0, d:0, a:225, f:hls_prediction_unit_hls, v:refPicList_0_list_Dout_A
[ARRAY] adr:286228, bankAdr:278036, aBank:0, d:0, a:66, f:hls_prediction_unit_hls, v:refPicList_1_list_Din_A
[ARRAY] adr:286228, bankAdr:278036, aBank:0, d:0, a:226, f:hls_prediction_unit_hls, v:refPicList_1_list_Dout_A
[ARRAY] adr:286232, bankAdr:278040, aBank:0, d:0, a:67, f:hls_prediction_unit_hls, v:refPicList_0_ref_Din_A
[ARRAY] adr:286232, bankAdr:278040, aBank:0, d:0, a:227, f:hls_prediction_unit_hls, v:refPicList_0_ref_Dout_A
[ARRAY] adr:286236, bankAdr:278044, aBank:0, d:0, a:68, f:hls_prediction_unit_hls, v:refPicList_1_ref_Din_A
[ARRAY] adr:286236, bankAdr:278044, aBank:0, d:0, a:228, f:hls_prediction_unit_hls, v:refPicList_1_ref_Dout_A
[SCALAR] adr:1504, bankAdr:44, sBank:24, d:1, a:13, f:hls_prediction_unit_hls, v:threads_type
[SCALAR] adr:168, bankAdr:4, sBank:10, d:1, a:6, f:hls_transform_tree_hls, v:log2_trafo_size
[SCALAR] adr:12, bankAdr:0, sBank:3, d:0, a:0, f:hls_transform_tree_hls, v:split_transform_flag
[SCALAR] adr:16, bankAdr:0, sBank:4, d:0, a:3, f:hls_transform_tree_hls, v:cbf_data
[SCALAR] adr:1164, bankAdr:36, sBank:3, d:1, a:13, f:hls_transform_tree_hls, v:disable_deblocking_filter_flag
[SCALAR] adr:440, bankAdr:12, sBank:14, d:1, a:21, f:hls_transform_tree_hls, v:transquant_bypass_enable_flag
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:20, f:hls_transform_tree_hls, v:cu_transquant_bypass_flag
[SCALAR] adr:480, bankAdr:12, sBank:24, d:0, a:3, f:hls_transform_tree_hls, v:tu_chroma_mode_c
[SCALAR] adr:484, bankAdr:12, sBank:25, d:0, a:3, f:hls_transform_tree_hls, v:tu_intra_pred_mode
[SCALAR] adr:488, bankAdr:12, sBank:26, d:0, a:3, f:hls_transform_tree_hls, v:tu_intra_pred_mode_c
[SCALAR] adr:508, bankAdr:12, sBank:31, d:1, a:21, f:hls_transform_tree_hls, v:pu_chroma_mode_c_0
[SCALAR] adr:509, bankAdr:13, sBank:31, d:0, a:23, f:hls_transform_tree_hls, v:pu_chroma_mode_c_1
[SCALAR] adr:510, bankAdr:14, sBank:31, d:1, a:22, f:hls_transform_tree_hls, v:pu_chroma_mode_c_2
[SCALAR] adr:511, bankAdr:15, sBank:31, d:0, a:24, f:hls_transform_tree_hls, v:pu_chroma_mode_c_3
[SCALAR] adr:512, bankAdr:16, sBank:0, d:0, a:20, f:hls_transform_tree_hls, v:pu_intra_pred_mode_0
[SCALAR] adr:513, bankAdr:17, sBank:0, d:1, a:20, f:hls_transform_tree_hls, v:pu_intra_pred_mode_1
[SCALAR] adr:514, bankAdr:18, sBank:0, d:0, a:21, f:hls_transform_tree_hls, v:pu_intra_pred_mode_2
[SCALAR] adr:515, bankAdr:19, sBank:0, d:1, a:21, f:hls_transform_tree_hls, v:pu_intra_pred_mode_3
[SCALAR] adr:516, bankAdr:16, sBank:1, d:0, a:16, f:hls_transform_tree_hls, v:pu_intra_pred_mode_c_0
[SCALAR] adr:517, bankAdr:17, sBank:1, d:1, a:16, f:hls_transform_tree_hls, v:pu_intra_pred_mode_c_1
[SCALAR] adr:518, bankAdr:18, sBank:1, d:0, a:17, f:hls_transform_tree_hls, v:pu_intra_pred_mode_c_2
[SCALAR] adr:519, bankAdr:19, sBank:1, d:1, a:17, f:hls_transform_tree_hls, v:pu_intra_pred_mode_c_3
[SCALAR] adr:568, bankAdr:16, sBank:14, d:0, a:22, f:hls_transform_tree_hls, v:intra_split_flag
[SCALAR] adr:364, bankAdr:8, sBank:27, d:0, a:17, f:hls_transform_tree_hls, v:log2_max_trafo_size
[SCALAR] adr:376, bankAdr:8, sBank:30, d:1, a:11, f:hls_transform_tree_hls, v:log2_min_tb_size
[SCALAR] adr:576, bankAdr:16, sBank:16, d:0, a:15, f:hls_transform_tree_hls, v:max_trafo_depth
[SCALAR] adr:380, bankAdr:8, sBank:31, d:1, a:23, f:hls_transform_tree_hls, v:max_transform_hierarchy_depth_inter
[SCALAR] adr:560, bankAdr:16, sBank:12, d:1, a:22, f:hls_transform_tree_hls, v:pred_mode
[SCALAR] adr:564, bankAdr:16, sBank:13, d:1, a:22, f:hls_transform_tree_hls, v:part_mode
[SCALAR] adr:324, bankAdr:8, sBank:17, d:0, a:16, f:hls_transform_tree_hls, v:chroma_array_type
[SCALAR] adr:328, bankAdr:8, sBank:18, d:0, a:13, f:hls_transform_tree_hls, v:chroma_format_idc
[SCALAR] adr:20, bankAdr:0, sBank:5, d:0, a:21, f:hls_transform_tree_hls, v:cbf_luma_i
[SCALAR] adr:20, bankAdr:0, sBank:5, d:0, a:7, f:hls_transform_tree_hls, v:cbf_luma_o
[SCALAR] adr:1260, bankAdr:36, sBank:27, d:1, a:16, f:hls_transform_tree_hls, v:rv_hls_transform_unit
[SCALAR] adr:1264, bankAdr:36, sBank:28, d:0, a:16, f:hls_transform_tree_hls, v:rv_ff_hevc_deblocking_boundary_strengths
[SCALAR] adr:1268, bankAdr:36, sBank:29, d:1, a:23, f:hls_transform_tree_hls, v:rv_set_deblocking_bypass
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:0, a:19, f:hls_transform_tree_hls, v:rv_callback_flag
[SCALAR] adr:388, bankAdr:12, sBank:1, d:0, a:18, f:hls_transform_tree_hls, v:min_tb_width
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:18, f:hls_transform_tree_hls, v:log2_ctb_size
[ARRAY] adr:286200, bankAdr:278008, aBank:0, d:0, a:69, f:hls_transform_tree_hls, v:cbf_luma_base_Din_A
[ARRAY] adr:286200, bankAdr:278008, aBank:0, d:0, a:229, f:hls_transform_tree_hls, v:cbf_luma_base_Dout_A
[ARRAY] adr:286212, bankAdr:278020, aBank:0, d:0, a:70, f:hls_transform_tree_hls, v:is_pcm_Din_A
[ARRAY] adr:286212, bankAdr:278020, aBank:0, d:0, a:230, f:hls_transform_tree_hls, v:is_pcm_Dout_A
[SCALAR] adr:32, bankAdr:0, sBank:8, d:1, a:25, f:hls_transform_tree_hls, v:cb_size
[SCALAR] adr:408, bankAdr:12, sBank:6, d:1, a:26, f:hls_transform_tree_hls, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:1, a:15, f:hls_transform_tree_hls, v:height
[SCALAR] adr:372, bankAdr:8, sBank:29, d:0, a:24, f:hls_transform_tree_hls, v:log2_min_pu_size
[SCALAR] adr:396, bankAdr:12, sBank:3, d:0, a:15, f:hls_transform_tree_hls, v:min_pu_width
[SCALAR] adr:168, bankAdr:4, sBank:10, d:0, a:7, f:hls_transform_tree_hls_dup1, v:log2_trafo_size
[SCALAR] adr:12, bankAdr:0, sBank:3, d:1, a:0, f:hls_transform_tree_hls_dup1, v:split_transform_flag
[SCALAR] adr:16, bankAdr:0, sBank:4, d:1, a:3, f:hls_transform_tree_hls_dup1, v:cbf_data
[SCALAR] adr:1164, bankAdr:36, sBank:3, d:1, a:14, f:hls_transform_tree_hls_dup1, v:disable_deblocking_filter_flag
[SCALAR] adr:440, bankAdr:12, sBank:14, d:1, a:22, f:hls_transform_tree_hls_dup1, v:transquant_bypass_enable_flag
[SCALAR] adr:572, bankAdr:16, sBank:15, d:0, a:21, f:hls_transform_tree_hls_dup1, v:cu_transquant_bypass_flag
[SCALAR] adr:480, bankAdr:12, sBank:24, d:1, a:3, f:hls_transform_tree_hls_dup1, v:tu_chroma_mode_c
[SCALAR] adr:484, bankAdr:12, sBank:25, d:1, a:3, f:hls_transform_tree_hls_dup1, v:tu_intra_pred_mode
[SCALAR] adr:488, bankAdr:12, sBank:26, d:1, a:3, f:hls_transform_tree_hls_dup1, v:tu_intra_pred_mode_c
[SCALAR] adr:508, bankAdr:12, sBank:31, d:0, a:25, f:hls_transform_tree_hls_dup1, v:pu_chroma_mode_c_0
[SCALAR] adr:509, bankAdr:13, sBank:31, d:1, a:24, f:hls_transform_tree_hls_dup1, v:pu_chroma_mode_c_1
[SCALAR] adr:510, bankAdr:14, sBank:31, d:0, a:26, f:hls_transform_tree_hls_dup1, v:pu_chroma_mode_c_2
[SCALAR] adr:511, bankAdr:15, sBank:31, d:1, a:25, f:hls_transform_tree_hls_dup1, v:pu_chroma_mode_c_3
[SCALAR] adr:512, bankAdr:16, sBank:0, d:0, a:22, f:hls_transform_tree_hls_dup1, v:pu_intra_pred_mode_0
[SCALAR] adr:513, bankAdr:17, sBank:0, d:1, a:22, f:hls_transform_tree_hls_dup1, v:pu_intra_pred_mode_1
[SCALAR] adr:514, bankAdr:18, sBank:0, d:0, a:23, f:hls_transform_tree_hls_dup1, v:pu_intra_pred_mode_2
[SCALAR] adr:515, bankAdr:19, sBank:0, d:1, a:23, f:hls_transform_tree_hls_dup1, v:pu_intra_pred_mode_3
[SCALAR] adr:516, bankAdr:16, sBank:1, d:1, a:18, f:hls_transform_tree_hls_dup1, v:pu_intra_pred_mode_c_0
[SCALAR] adr:517, bankAdr:17, sBank:1, d:0, a:19, f:hls_transform_tree_hls_dup1, v:pu_intra_pred_mode_c_1
[SCALAR] adr:518, bankAdr:18, sBank:1, d:1, a:19, f:hls_transform_tree_hls_dup1, v:pu_intra_pred_mode_c_2
[SCALAR] adr:519, bankAdr:19, sBank:1, d:0, a:20, f:hls_transform_tree_hls_dup1, v:pu_intra_pred_mode_c_3
[SCALAR] adr:568, bankAdr:16, sBank:14, d:0, a:23, f:hls_transform_tree_hls_dup1, v:intra_split_flag
[SCALAR] adr:364, bankAdr:8, sBank:27, d:0, a:18, f:hls_transform_tree_hls_dup1, v:log2_max_trafo_size
[SCALAR] adr:376, bankAdr:8, sBank:30, d:0, a:12, f:hls_transform_tree_hls_dup1, v:log2_min_tb_size
[SCALAR] adr:576, bankAdr:16, sBank:16, d:1, a:14, f:hls_transform_tree_hls_dup1, v:max_trafo_depth
[SCALAR] adr:380, bankAdr:8, sBank:31, d:0, a:27, f:hls_transform_tree_hls_dup1, v:max_transform_hierarchy_depth_inter
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:24, f:hls_transform_tree_hls_dup1, v:pred_mode
[SCALAR] adr:564, bankAdr:16, sBank:13, d:0, a:23, f:hls_transform_tree_hls_dup1, v:part_mode
[SCALAR] adr:324, bankAdr:8, sBank:17, d:1, a:16, f:hls_transform_tree_hls_dup1, v:chroma_array_type
[SCALAR] adr:328, bankAdr:8, sBank:18, d:1, a:12, f:hls_transform_tree_hls_dup1, v:chroma_format_idc
[SCALAR] adr:20, bankAdr:0, sBank:5, d:1, a:20, f:hls_transform_tree_hls_dup1, v:cbf_luma_i
[SCALAR] adr:20, bankAdr:0, sBank:5, d:1, a:7, f:hls_transform_tree_hls_dup1, v:cbf_luma_o
[SCALAR] adr:1260, bankAdr:36, sBank:27, d:1, a:17, f:hls_transform_tree_hls_dup1, v:rv_hls_transform_unit
[SCALAR] adr:1264, bankAdr:36, sBank:28, d:1, a:16, f:hls_transform_tree_hls_dup1, v:rv_ff_hevc_deblocking_boundary_strengths
[SCALAR] adr:1268, bankAdr:36, sBank:29, d:1, a:24, f:hls_transform_tree_hls_dup1, v:rv_set_deblocking_bypass
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:1, a:18, f:hls_transform_tree_hls_dup1, v:rv_callback_flag
[SCALAR] adr:388, bankAdr:12, sBank:1, d:1, a:20, f:hls_transform_tree_hls_dup1, v:min_tb_width
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:17, f:hls_transform_tree_hls_dup1, v:log2_ctb_size
[ARRAY] adr:286200, bankAdr:278008, aBank:0, d:0, a:71, f:hls_transform_tree_hls_dup1, v:cbf_luma_base_Din_A
[ARRAY] adr:286200, bankAdr:278008, aBank:0, d:0, a:231, f:hls_transform_tree_hls_dup1, v:cbf_luma_base_Dout_A
[ARRAY] adr:286212, bankAdr:278020, aBank:0, d:0, a:72, f:hls_transform_tree_hls_dup1, v:is_pcm_Din_A
[ARRAY] adr:286212, bankAdr:278020, aBank:0, d:0, a:232, f:hls_transform_tree_hls_dup1, v:is_pcm_Dout_A
[SCALAR] adr:32, bankAdr:0, sBank:8, d:0, a:26, f:hls_transform_tree_hls_dup1, v:cb_size
[SCALAR] adr:408, bankAdr:12, sBank:6, d:0, a:28, f:hls_transform_tree_hls_dup1, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:0, a:16, f:hls_transform_tree_hls_dup1, v:height
[SCALAR] adr:372, bankAdr:8, sBank:29, d:0, a:25, f:hls_transform_tree_hls_dup1, v:log2_min_pu_size
[SCALAR] adr:396, bankAdr:12, sBank:3, d:0, a:16, f:hls_transform_tree_hls_dup1, v:min_pu_width
[SCALAR] adr:168, bankAdr:4, sBank:10, d:1, a:7, f:hls_transform_tree_hls_dup2, v:log2_trafo_size
[SCALAR] adr:12, bankAdr:0, sBank:3, d:0, a:1, f:hls_transform_tree_hls_dup2, v:split_transform_flag
[SCALAR] adr:16, bankAdr:0, sBank:4, d:0, a:4, f:hls_transform_tree_hls_dup2, v:cbf_data
[SCALAR] adr:1164, bankAdr:36, sBank:3, d:1, a:15, f:hls_transform_tree_hls_dup2, v:disable_deblocking_filter_flag
[SCALAR] adr:440, bankAdr:12, sBank:14, d:1, a:23, f:hls_transform_tree_hls_dup2, v:transquant_bypass_enable_flag
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:21, f:hls_transform_tree_hls_dup2, v:cu_transquant_bypass_flag
[SCALAR] adr:480, bankAdr:12, sBank:24, d:0, a:4, f:hls_transform_tree_hls_dup2, v:tu_chroma_mode_c
[SCALAR] adr:484, bankAdr:12, sBank:25, d:0, a:4, f:hls_transform_tree_hls_dup2, v:tu_intra_pred_mode
[SCALAR] adr:488, bankAdr:12, sBank:26, d:0, a:4, f:hls_transform_tree_hls_dup2, v:tu_intra_pred_mode_c
[SCALAR] adr:508, bankAdr:12, sBank:31, d:1, a:26, f:hls_transform_tree_hls_dup2, v:pu_chroma_mode_c_0
[SCALAR] adr:509, bankAdr:13, sBank:31, d:0, a:28, f:hls_transform_tree_hls_dup2, v:pu_chroma_mode_c_1
[SCALAR] adr:510, bankAdr:14, sBank:31, d:1, a:27, f:hls_transform_tree_hls_dup2, v:pu_chroma_mode_c_2
[SCALAR] adr:511, bankAdr:15, sBank:31, d:0, a:29, f:hls_transform_tree_hls_dup2, v:pu_chroma_mode_c_3
[SCALAR] adr:512, bankAdr:16, sBank:0, d:0, a:24, f:hls_transform_tree_hls_dup2, v:pu_intra_pred_mode_0
[SCALAR] adr:513, bankAdr:17, sBank:0, d:1, a:24, f:hls_transform_tree_hls_dup2, v:pu_intra_pred_mode_1
[SCALAR] adr:514, bankAdr:18, sBank:0, d:0, a:25, f:hls_transform_tree_hls_dup2, v:pu_intra_pred_mode_2
[SCALAR] adr:515, bankAdr:19, sBank:0, d:1, a:25, f:hls_transform_tree_hls_dup2, v:pu_intra_pred_mode_3
[SCALAR] adr:516, bankAdr:16, sBank:1, d:0, a:21, f:hls_transform_tree_hls_dup2, v:pu_intra_pred_mode_c_0
[SCALAR] adr:517, bankAdr:17, sBank:1, d:1, a:21, f:hls_transform_tree_hls_dup2, v:pu_intra_pred_mode_c_1
[SCALAR] adr:518, bankAdr:18, sBank:1, d:0, a:22, f:hls_transform_tree_hls_dup2, v:pu_intra_pred_mode_c_2
[SCALAR] adr:519, bankAdr:19, sBank:1, d:1, a:22, f:hls_transform_tree_hls_dup2, v:pu_intra_pred_mode_c_3
[SCALAR] adr:568, bankAdr:16, sBank:14, d:0, a:24, f:hls_transform_tree_hls_dup2, v:intra_split_flag
[SCALAR] adr:364, bankAdr:8, sBank:27, d:0, a:19, f:hls_transform_tree_hls_dup2, v:log2_max_trafo_size
[SCALAR] adr:376, bankAdr:8, sBank:30, d:1, a:12, f:hls_transform_tree_hls_dup2, v:log2_min_tb_size
[SCALAR] adr:576, bankAdr:16, sBank:16, d:0, a:16, f:hls_transform_tree_hls_dup2, v:max_trafo_depth
[SCALAR] adr:380, bankAdr:8, sBank:31, d:1, a:28, f:hls_transform_tree_hls_dup2, v:max_transform_hierarchy_depth_inter
[SCALAR] adr:560, bankAdr:16, sBank:12, d:1, a:23, f:hls_transform_tree_hls_dup2, v:pred_mode
[SCALAR] adr:564, bankAdr:16, sBank:13, d:1, a:23, f:hls_transform_tree_hls_dup2, v:part_mode
[SCALAR] adr:324, bankAdr:8, sBank:17, d:0, a:17, f:hls_transform_tree_hls_dup2, v:chroma_array_type
[SCALAR] adr:328, bankAdr:8, sBank:18, d:0, a:14, f:hls_transform_tree_hls_dup2, v:chroma_format_idc
[SCALAR] adr:20, bankAdr:0, sBank:5, d:0, a:22, f:hls_transform_tree_hls_dup2, v:cbf_luma_i
[SCALAR] adr:20, bankAdr:0, sBank:5, d:0, a:8, f:hls_transform_tree_hls_dup2, v:cbf_luma_o
[SCALAR] adr:1260, bankAdr:36, sBank:27, d:1, a:18, f:hls_transform_tree_hls_dup2, v:rv_hls_transform_unit
[SCALAR] adr:1264, bankAdr:36, sBank:28, d:0, a:17, f:hls_transform_tree_hls_dup2, v:rv_ff_hevc_deblocking_boundary_strengths
[SCALAR] adr:1268, bankAdr:36, sBank:29, d:1, a:25, f:hls_transform_tree_hls_dup2, v:rv_set_deblocking_bypass
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:0, a:20, f:hls_transform_tree_hls_dup2, v:rv_callback_flag
[SCALAR] adr:388, bankAdr:12, sBank:1, d:0, a:23, f:hls_transform_tree_hls_dup2, v:min_tb_width
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:19, f:hls_transform_tree_hls_dup2, v:log2_ctb_size
[ARRAY] adr:286200, bankAdr:278008, aBank:0, d:0, a:73, f:hls_transform_tree_hls_dup2, v:cbf_luma_base_Din_A
[ARRAY] adr:286200, bankAdr:278008, aBank:0, d:0, a:233, f:hls_transform_tree_hls_dup2, v:cbf_luma_base_Dout_A
[ARRAY] adr:286212, bankAdr:278020, aBank:0, d:0, a:74, f:hls_transform_tree_hls_dup2, v:is_pcm_Din_A
[ARRAY] adr:286212, bankAdr:278020, aBank:0, d:0, a:234, f:hls_transform_tree_hls_dup2, v:is_pcm_Dout_A
[SCALAR] adr:32, bankAdr:0, sBank:8, d:1, a:26, f:hls_transform_tree_hls_dup2, v:cb_size
[SCALAR] adr:408, bankAdr:12, sBank:6, d:1, a:27, f:hls_transform_tree_hls_dup2, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:1, a:16, f:hls_transform_tree_hls_dup2, v:height
[SCALAR] adr:372, bankAdr:8, sBank:29, d:0, a:26, f:hls_transform_tree_hls_dup2, v:log2_min_pu_size
[SCALAR] adr:396, bankAdr:12, sBank:3, d:0, a:17, f:hls_transform_tree_hls_dup2, v:min_pu_width
[SCALAR] adr:168, bankAdr:4, sBank:10, d:0, a:8, f:hls_transform_tree_hls_dup3, v:log2_trafo_size
[SCALAR] adr:12, bankAdr:0, sBank:3, d:1, a:1, f:hls_transform_tree_hls_dup3, v:split_transform_flag
[SCALAR] adr:16, bankAdr:0, sBank:4, d:1, a:4, f:hls_transform_tree_hls_dup3, v:cbf_data
[SCALAR] adr:1164, bankAdr:36, sBank:3, d:1, a:16, f:hls_transform_tree_hls_dup3, v:disable_deblocking_filter_flag
[SCALAR] adr:440, bankAdr:12, sBank:14, d:1, a:24, f:hls_transform_tree_hls_dup3, v:transquant_bypass_enable_flag
[SCALAR] adr:572, bankAdr:16, sBank:15, d:0, a:22, f:hls_transform_tree_hls_dup3, v:cu_transquant_bypass_flag
[SCALAR] adr:480, bankAdr:12, sBank:24, d:1, a:4, f:hls_transform_tree_hls_dup3, v:tu_chroma_mode_c
[SCALAR] adr:484, bankAdr:12, sBank:25, d:1, a:4, f:hls_transform_tree_hls_dup3, v:tu_intra_pred_mode
[SCALAR] adr:488, bankAdr:12, sBank:26, d:1, a:4, f:hls_transform_tree_hls_dup3, v:tu_intra_pred_mode_c
[SCALAR] adr:508, bankAdr:12, sBank:31, d:0, a:30, f:hls_transform_tree_hls_dup3, v:pu_chroma_mode_c_0
[SCALAR] adr:509, bankAdr:13, sBank:31, d:1, a:29, f:hls_transform_tree_hls_dup3, v:pu_chroma_mode_c_1
[SCALAR] adr:510, bankAdr:14, sBank:31, d:0, a:31, f:hls_transform_tree_hls_dup3, v:pu_chroma_mode_c_2
[SCALAR] adr:511, bankAdr:15, sBank:31, d:1, a:30, f:hls_transform_tree_hls_dup3, v:pu_chroma_mode_c_3
[SCALAR] adr:512, bankAdr:16, sBank:0, d:0, a:26, f:hls_transform_tree_hls_dup3, v:pu_intra_pred_mode_0
[SCALAR] adr:513, bankAdr:17, sBank:0, d:1, a:26, f:hls_transform_tree_hls_dup3, v:pu_intra_pred_mode_1
[SCALAR] adr:514, bankAdr:18, sBank:0, d:0, a:27, f:hls_transform_tree_hls_dup3, v:pu_intra_pred_mode_2
[SCALAR] adr:515, bankAdr:19, sBank:0, d:1, a:27, f:hls_transform_tree_hls_dup3, v:pu_intra_pred_mode_3
[SCALAR] adr:516, bankAdr:16, sBank:1, d:1, a:23, f:hls_transform_tree_hls_dup3, v:pu_intra_pred_mode_c_0
[SCALAR] adr:517, bankAdr:17, sBank:1, d:0, a:24, f:hls_transform_tree_hls_dup3, v:pu_intra_pred_mode_c_1
[SCALAR] adr:518, bankAdr:18, sBank:1, d:1, a:24, f:hls_transform_tree_hls_dup3, v:pu_intra_pred_mode_c_2
[SCALAR] adr:519, bankAdr:19, sBank:1, d:0, a:25, f:hls_transform_tree_hls_dup3, v:pu_intra_pred_mode_c_3
[SCALAR] adr:568, bankAdr:16, sBank:14, d:0, a:25, f:hls_transform_tree_hls_dup3, v:intra_split_flag
[SCALAR] adr:364, bankAdr:8, sBank:27, d:0, a:20, f:hls_transform_tree_hls_dup3, v:log2_max_trafo_size
[SCALAR] adr:376, bankAdr:8, sBank:30, d:0, a:13, f:hls_transform_tree_hls_dup3, v:log2_min_tb_size
[SCALAR] adr:576, bankAdr:16, sBank:16, d:1, a:15, f:hls_transform_tree_hls_dup3, v:max_trafo_depth
[SCALAR] adr:380, bankAdr:8, sBank:31, d:0, a:32, f:hls_transform_tree_hls_dup3, v:max_transform_hierarchy_depth_inter
[SCALAR] adr:560, bankAdr:16, sBank:12, d:0, a:25, f:hls_transform_tree_hls_dup3, v:pred_mode
[SCALAR] adr:564, bankAdr:16, sBank:13, d:0, a:24, f:hls_transform_tree_hls_dup3, v:part_mode
[SCALAR] adr:324, bankAdr:8, sBank:17, d:1, a:17, f:hls_transform_tree_hls_dup3, v:chroma_array_type
[SCALAR] adr:328, bankAdr:8, sBank:18, d:1, a:13, f:hls_transform_tree_hls_dup3, v:chroma_format_idc
[SCALAR] adr:20, bankAdr:0, sBank:5, d:1, a:21, f:hls_transform_tree_hls_dup3, v:cbf_luma_i
[SCALAR] adr:20, bankAdr:0, sBank:5, d:1, a:8, f:hls_transform_tree_hls_dup3, v:cbf_luma_o
[SCALAR] adr:1260, bankAdr:36, sBank:27, d:1, a:19, f:hls_transform_tree_hls_dup3, v:rv_hls_transform_unit
[SCALAR] adr:1264, bankAdr:36, sBank:28, d:1, a:17, f:hls_transform_tree_hls_dup3, v:rv_ff_hevc_deblocking_boundary_strengths
[SCALAR] adr:1268, bankAdr:36, sBank:29, d:1, a:26, f:hls_transform_tree_hls_dup3, v:rv_set_deblocking_bypass
[SCALAR] adr:1240, bankAdr:36, sBank:22, d:1, a:19, f:hls_transform_tree_hls_dup3, v:rv_callback_flag
[SCALAR] adr:388, bankAdr:12, sBank:1, d:1, a:25, f:hls_transform_tree_hls_dup3, v:min_tb_width
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:18, f:hls_transform_tree_hls_dup3, v:log2_ctb_size
[ARRAY] adr:286200, bankAdr:278008, aBank:0, d:0, a:75, f:hls_transform_tree_hls_dup3, v:cbf_luma_base_Din_A
[ARRAY] adr:286200, bankAdr:278008, aBank:0, d:0, a:235, f:hls_transform_tree_hls_dup3, v:cbf_luma_base_Dout_A
[ARRAY] adr:286212, bankAdr:278020, aBank:0, d:0, a:76, f:hls_transform_tree_hls_dup3, v:is_pcm_Din_A
[ARRAY] adr:286212, bankAdr:278020, aBank:0, d:0, a:236, f:hls_transform_tree_hls_dup3, v:is_pcm_Dout_A
[SCALAR] adr:32, bankAdr:0, sBank:8, d:0, a:27, f:hls_transform_tree_hls_dup3, v:cb_size
[SCALAR] adr:408, bankAdr:12, sBank:6, d:0, a:29, f:hls_transform_tree_hls_dup3, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:0, a:17, f:hls_transform_tree_hls_dup3, v:height
[SCALAR] adr:372, bankAdr:8, sBank:29, d:0, a:27, f:hls_transform_tree_hls_dup3, v:log2_min_pu_size
[SCALAR] adr:396, bankAdr:12, sBank:3, d:0, a:18, f:hls_transform_tree_hls_dup3, v:min_pu_width
[SCALAR] adr:20, bankAdr:0, sBank:5, d:0, a:23, f:hls_transform_unit_ex_hls, v:cbf_luma
[SCALAR] adr:16, bankAdr:0, sBank:4, d:0, a:16, f:hls_transform_unit_ex_hls, v:cbf_data
[SCALAR] adr:1160, bankAdr:36, sBank:2, d:0, a:16, f:hls_transform_unit_ex_hls, v:chroma_qp_offset_list_len_minus1
[ARRAY] adr:12288, bankAdr:4096, aBank:0, d:0, a:77, f:hls_transform_unit_ex_hls, v:cb_qp_offset_list_Din_A
[ARRAY] adr:12288, bankAdr:4096, aBank:0, d:0, a:237, f:hls_transform_unit_ex_hls, v:cb_qp_offset_list_Dout_A
[ARRAY] adr:12296, bankAdr:4104, aBank:0, d:0, a:78, f:hls_transform_unit_ex_hls, v:cr_qp_offset_list_Din_A
[ARRAY] adr:12296, bankAdr:4104, aBank:0, d:0, a:238, f:hls_transform_unit_ex_hls, v:cr_qp_offset_list_Dout_A
[SCALAR] adr:1136, bankAdr:32, sBank:28, d:0, a:18, f:hls_transform_unit_ex_hls, v:qp_bd_offset
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:79, f:hls_transform_unit_ex_hls, v:qp_y_tab_Din_A
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:239, f:hls_transform_unit_ex_hls, v:qp_y_tab_Dout_A
[SCALAR] adr:560, bankAdr:16, sBank:12, d:1, a:24, f:hls_transform_unit_ex_hls, v:pred_mode
[SCALAR] adr:336, bankAdr:8, sBank:20, d:0, a:16, f:hls_transform_unit_ex_hls, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:0, a:15, f:hls_transform_unit_ex_hls, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:0, a:21, f:hls_transform_unit_ex_hls, v:hshift_2
[SCALAR] adr:348, bankAdr:8, sBank:23, d:0, a:19, f:hls_transform_unit_ex_hls, v:vshift_0
[SCALAR] adr:352, bankAdr:8, sBank:24, d:0, a:15, f:hls_transform_unit_ex_hls, v:vshift_1
[SCALAR] adr:356, bankAdr:8, sBank:25, d:1, a:9, f:hls_transform_unit_ex_hls, v:vshift_2
[SCALAR] adr:484, bankAdr:12, sBank:25, d:0, a:11, f:hls_transform_unit_ex_hls, v:tu_intra_pred_mode
[SCALAR] adr:488, bankAdr:12, sBank:26, d:0, a:20, f:hls_transform_unit_ex_hls, v:tu_intra_pred_mode_c
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:22, f:hls_transform_unit_ex_hls, v:cu_transquant_bypass_flag
[SCALAR] adr:492, bankAdr:12, sBank:27, d:1, a:7, f:hls_transform_unit_ex_hls, v:tu_cu_qp_offset_cb
[SCALAR] adr:496, bankAdr:12, sBank:28, d:1, a:3, f:hls_transform_unit_ex_hls, v:tu_cu_qp_offset_cr
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:28, f:hls_transform_unit_ex_hls, v:qp_y_i
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:8, f:hls_transform_unit_ex_hls, v:qp_y_o
[SCALAR] adr:168, bankAdr:4, sBank:10, d:1, a:8, f:hls_transform_unit_ex_hls, v:log2_trafo_size
[SCALAR] adr:56, bankAdr:0, sBank:14, d:1, a:25, f:hls_transform_unit_ex_hls, v:log2_trafo_size_c_i
[SCALAR] adr:56, bankAdr:0, sBank:14, d:0, a:8, f:hls_transform_unit_ex_hls, v:log2_trafo_size_c_o
[SCALAR] adr:48, bankAdr:0, sBank:12, d:0, a:26, f:hls_transform_unit_ex_hls, v:scan_idx_i
[SCALAR] adr:48, bankAdr:0, sBank:12, d:1, a:7, f:hls_transform_unit_ex_hls, v:scan_idx_o
[SCALAR] adr:52, bankAdr:0, sBank:13, d:1, a:6, f:hls_transform_unit_ex_hls, v:scan_idx_c
[SCALAR] adr:1140, bankAdr:32, sBank:29, d:1, a:27, f:hls_transform_unit_ex_hls, v:cmdr_run_i
[SCALAR] adr:1140, bankAdr:32, sBank:29, d:1, a:7, f:hls_transform_unit_ex_hls, v:cmdr_run_o
[SCALAR] adr:1244, bankAdr:36, sBank:23, d:1, a:18, f:hls_transform_unit_ex_hls, v:buf_data_0
[SCALAR] adr:1248, bankAdr:36, sBank:24, d:1, a:14, f:hls_transform_unit_ex_hls, v:buf_data_1
[SCALAR] adr:1252, bankAdr:36, sBank:25, d:1, a:10, f:hls_transform_unit_ex_hls, v:buf_data_2
[SCALAR] adr:1148, bankAdr:32, sBank:31, d:1, a:31, f:hls_transform_unit_ex_hls, v:xm_linesize_0
[SCALAR] adr:1152, bankAdr:36, sBank:0, d:0, a:28, f:hls_transform_unit_ex_hls, v:xm_linesize_1
[SCALAR] adr:1156, bankAdr:36, sBank:1, d:0, a:26, f:hls_transform_unit_ex_hls, v:xm_linesize_2
[SCALAR] adr:1144, bankAdr:32, sBank:30, d:1, a:13, f:hls_transform_unit_ex_hls, v:pixel_shift
[SCALAR] adr:160, bankAdr:4, sBank:8, d:0, a:11, f:hls_transform_unit_ex_hls, v:nPbW
[SCALAR] adr:164, bankAdr:4, sBank:9, d:0, a:11, f:hls_transform_unit_ex_hls, v:nPbH
[SCALAR] adr:580, bankAdr:16, sBank:17, d:0, a:3, f:hls_transform_unit_ex_hls, v:cand_up
[SCALAR] adr:584, bankAdr:16, sBank:18, d:0, a:3, f:hls_transform_unit_ex_hls, v:cand_left
[SCALAR] adr:588, bankAdr:16, sBank:19, d:0, a:4, f:hls_transform_unit_ex_hls, v:cand_up_left
[SCALAR] adr:592, bankAdr:16, sBank:20, d:0, a:6, f:hls_transform_unit_ex_hls, v:cand_up_right_sap
[SCALAR] adr:596, bankAdr:16, sBank:21, d:0, a:5, f:hls_transform_unit_ex_hls, v:cand_up_right
[SCALAR] adr:600, bankAdr:16, sBank:22, d:1, a:20, f:hls_transform_unit_ex_hls, v:cand_bottom_left_i
[SCALAR] adr:600, bankAdr:16, sBank:22, d:0, a:5, f:hls_transform_unit_ex_hls, v:cand_bottom_left_o
[SCALAR] adr:1412, bankAdr:44, sBank:1, d:1, a:2, f:hls_transform_unit_ex_hls, v:cand_up_c
[SCALAR] adr:1416, bankAdr:44, sBank:2, d:0, a:1, f:hls_transform_unit_ex_hls, v:cand_left_c
[SCALAR] adr:1420, bankAdr:44, sBank:3, d:0, a:2, f:hls_transform_unit_ex_hls, v:cand_up_left_c
[SCALAR] adr:1424, bankAdr:44, sBank:4, d:0, a:5, f:hls_transform_unit_ex_hls, v:cand_up_right_sap_c
[SCALAR] adr:1428, bankAdr:44, sBank:5, d:0, a:9, f:hls_transform_unit_ex_hls, v:cand_up_right_c
[SCALAR] adr:1432, bankAdr:44, sBank:6, d:0, a:30, f:hls_transform_unit_ex_hls, v:cand_bottom_left_c_i
[SCALAR] adr:1432, bankAdr:44, sBank:6, d:0, a:9, f:hls_transform_unit_ex_hls, v:cand_bottom_left_c_o
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:19, f:hls_transform_unit_ex_hls, v:log2_ctb_size
[SCALAR] adr:604, bankAdr:16, sBank:23, d:0, a:20, f:hls_transform_unit_ex_hls, v:ctb_up_flag
[SCALAR] adr:608, bankAdr:16, sBank:24, d:0, a:16, f:hls_transform_unit_ex_hls, v:ctb_left_flag
[SCALAR] adr:612, bankAdr:16, sBank:25, d:0, a:12, f:hls_transform_unit_ex_hls, v:ctb_up_left_flag
[SCALAR] adr:616, bankAdr:16, sBank:26, d:0, a:21, f:hls_transform_unit_ex_hls, v:ctb_up_right_flag
[SCALAR] adr:620, bankAdr:16, sBank:27, d:0, a:21, f:hls_transform_unit_ex_hls, v:end_of_tiles_x
[SCALAR] adr:624, bankAdr:16, sBank:28, d:1, a:18, f:hls_transform_unit_ex_hls, v:end_of_tiles_y
[SCALAR] adr:472, bankAdr:12, sBank:22, d:0, a:22, f:hls_transform_unit_ex_hls, v:tu_is_cu_chroma_qp_offset_coded_i
[SCALAR] adr:472, bankAdr:12, sBank:22, d:1, a:5, f:hls_transform_unit_ex_hls, v:tu_is_cu_chroma_qp_offset_coded_o
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:19, f:hls_transform_unit_ex_hls, v:tu_is_cu_qp_delta_coded_i
[SCALAR] adr:476, bankAdr:12, sBank:23, d:0, a:5, f:hls_transform_unit_ex_hls, v:tu_is_cu_qp_delta_coded_o
[SCALAR] adr:468, bankAdr:12, sBank:21, d:1, a:5, f:hls_transform_unit_ex_hls, v:tu_cu_qp_delta
[SCALAR] adr:500, bankAdr:12, sBank:29, d:0, a:8, f:hls_transform_unit_ex_hls, v:tu_cross_pf
[SCALAR] adr:532, bankAdr:16, sBank:5, d:1, a:22, f:hls_transform_unit_ex_hls, v:first_qp_group_i
[SCALAR] adr:532, bankAdr:16, sBank:5, d:1, a:9, f:hls_transform_unit_ex_hls, v:first_qp_group_o
[SCALAR] adr:328, bankAdr:8, sBank:18, d:0, a:15, f:hls_transform_unit_ex_hls, v:chroma_format_idc
[SCALAR] adr:448, bankAdr:12, sBank:16, d:0, a:17, f:hls_transform_unit_ex_hls, v:cu_chroma_qp_offset_enabled_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:0, a:28, f:hls_transform_unit_ex_hls, v:cu_qp_delta_enabled_flag
[SCALAR] adr:540, bankAdr:16, sBank:7, d:0, a:21, f:hls_transform_unit_ex_hls, v:qPy_pred
[SCALAR] adr:436, bankAdr:12, sBank:13, d:1, a:24, f:hls_transform_unit_ex_hls, v:diff_cu_qp_delta_depth
[SCALAR] adr:368, bankAdr:8, sBank:28, d:0, a:19, f:hls_transform_unit_ex_hls, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:1, a:15, f:hls_transform_unit_ex_hls, v:min_cb_width
[SCALAR] adr:460, bankAdr:12, sBank:19, d:1, a:17, f:hls_transform_unit_ex_hls, v:slice_qp
[SCALAR] adr:20, bankAdr:0, sBank:5, d:0, a:24, f:hls_transform_unit_ex_hls_dup1, v:cbf_luma
[SCALAR] adr:16, bankAdr:0, sBank:4, d:1, a:16, f:hls_transform_unit_ex_hls_dup1, v:cbf_data
[SCALAR] adr:1160, bankAdr:36, sBank:2, d:0, a:17, f:hls_transform_unit_ex_hls_dup1, v:chroma_qp_offset_list_len_minus1
[ARRAY] adr:12288, bankAdr:4096, aBank:0, d:0, a:80, f:hls_transform_unit_ex_hls_dup1, v:cb_qp_offset_list_Din_A
[ARRAY] adr:12288, bankAdr:4096, aBank:0, d:0, a:240, f:hls_transform_unit_ex_hls_dup1, v:cb_qp_offset_list_Dout_A
[ARRAY] adr:12296, bankAdr:4104, aBank:0, d:0, a:81, f:hls_transform_unit_ex_hls_dup1, v:cr_qp_offset_list_Din_A
[ARRAY] adr:12296, bankAdr:4104, aBank:0, d:0, a:241, f:hls_transform_unit_ex_hls_dup1, v:cr_qp_offset_list_Dout_A
[SCALAR] adr:1136, bankAdr:32, sBank:28, d:1, a:19, f:hls_transform_unit_ex_hls_dup1, v:qp_bd_offset
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:82, f:hls_transform_unit_ex_hls_dup1, v:qp_y_tab_Din_A
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:242, f:hls_transform_unit_ex_hls_dup1, v:qp_y_tab_Dout_A
[SCALAR] adr:560, bankAdr:16, sBank:12, d:1, a:25, f:hls_transform_unit_ex_hls_dup1, v:pred_mode
[SCALAR] adr:336, bankAdr:8, sBank:20, d:1, a:16, f:hls_transform_unit_ex_hls_dup1, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:1, a:14, f:hls_transform_unit_ex_hls_dup1, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:1, a:21, f:hls_transform_unit_ex_hls_dup1, v:hshift_2
[SCALAR] adr:348, bankAdr:8, sBank:23, d:0, a:21, f:hls_transform_unit_ex_hls_dup1, v:vshift_0
[SCALAR] adr:352, bankAdr:8, sBank:24, d:1, a:15, f:hls_transform_unit_ex_hls_dup1, v:vshift_1
[SCALAR] adr:356, bankAdr:8, sBank:25, d:1, a:11, f:hls_transform_unit_ex_hls_dup1, v:vshift_2
[SCALAR] adr:484, bankAdr:12, sBank:25, d:0, a:13, f:hls_transform_unit_ex_hls_dup1, v:tu_intra_pred_mode
[SCALAR] adr:488, bankAdr:12, sBank:26, d:1, a:20, f:hls_transform_unit_ex_hls_dup1, v:tu_intra_pred_mode_c
[SCALAR] adr:572, bankAdr:16, sBank:15, d:0, a:23, f:hls_transform_unit_ex_hls_dup1, v:cu_transquant_bypass_flag
[SCALAR] adr:492, bankAdr:12, sBank:27, d:0, a:8, f:hls_transform_unit_ex_hls_dup1, v:tu_cu_qp_offset_cb
[SCALAR] adr:496, bankAdr:12, sBank:28, d:0, a:4, f:hls_transform_unit_ex_hls_dup1, v:tu_cu_qp_offset_cr
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:29, f:hls_transform_unit_ex_hls_dup1, v:qp_y_i
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:9, f:hls_transform_unit_ex_hls_dup1, v:qp_y_o
[SCALAR] adr:168, bankAdr:4, sBank:10, d:0, a:9, f:hls_transform_unit_ex_hls_dup1, v:log2_trafo_size
[SCALAR] adr:56, bankAdr:0, sBank:14, d:0, a:26, f:hls_transform_unit_ex_hls_dup1, v:log2_trafo_size_c_i
[SCALAR] adr:56, bankAdr:0, sBank:14, d:1, a:8, f:hls_transform_unit_ex_hls_dup1, v:log2_trafo_size_c_o
[SCALAR] adr:48, bankAdr:0, sBank:12, d:0, a:27, f:hls_transform_unit_ex_hls_dup1, v:scan_idx_i
[SCALAR] adr:48, bankAdr:0, sBank:12, d:0, a:8, f:hls_transform_unit_ex_hls_dup1, v:scan_idx_o
[SCALAR] adr:52, bankAdr:0, sBank:13, d:0, a:7, f:hls_transform_unit_ex_hls_dup1, v:scan_idx_c
[SCALAR] adr:1140, bankAdr:32, sBank:29, d:0, a:28, f:hls_transform_unit_ex_hls_dup1, v:cmdr_run_i
[SCALAR] adr:1140, bankAdr:32, sBank:29, d:1, a:8, f:hls_transform_unit_ex_hls_dup1, v:cmdr_run_o
[SCALAR] adr:1244, bankAdr:36, sBank:23, d:1, a:20, f:hls_transform_unit_ex_hls_dup1, v:buf_data_0
[SCALAR] adr:1248, bankAdr:36, sBank:24, d:0, a:17, f:hls_transform_unit_ex_hls_dup1, v:buf_data_1
[SCALAR] adr:1252, bankAdr:36, sBank:25, d:1, a:12, f:hls_transform_unit_ex_hls_dup1, v:buf_data_2
[SCALAR] adr:1148, bankAdr:32, sBank:31, d:0, a:33, f:hls_transform_unit_ex_hls_dup1, v:xm_linesize_0
[SCALAR] adr:1152, bankAdr:36, sBank:0, d:1, a:28, f:hls_transform_unit_ex_hls_dup1, v:xm_linesize_1
[SCALAR] adr:1156, bankAdr:36, sBank:1, d:1, a:26, f:hls_transform_unit_ex_hls_dup1, v:xm_linesize_2
[SCALAR] adr:1144, bankAdr:32, sBank:30, d:0, a:14, f:hls_transform_unit_ex_hls_dup1, v:pixel_shift
[SCALAR] adr:160, bankAdr:4, sBank:8, d:1, a:11, f:hls_transform_unit_ex_hls_dup1, v:nPbW
[SCALAR] adr:164, bankAdr:4, sBank:9, d:1, a:11, f:hls_transform_unit_ex_hls_dup1, v:nPbH
[SCALAR] adr:580, bankAdr:16, sBank:17, d:1, a:3, f:hls_transform_unit_ex_hls_dup1, v:cand_up
[SCALAR] adr:584, bankAdr:16, sBank:18, d:1, a:3, f:hls_transform_unit_ex_hls_dup1, v:cand_left
[SCALAR] adr:588, bankAdr:16, sBank:19, d:1, a:4, f:hls_transform_unit_ex_hls_dup1, v:cand_up_left
[SCALAR] adr:592, bankAdr:16, sBank:20, d:1, a:6, f:hls_transform_unit_ex_hls_dup1, v:cand_up_right_sap
[SCALAR] adr:596, bankAdr:16, sBank:21, d:0, a:6, f:hls_transform_unit_ex_hls_dup1, v:cand_up_right
[SCALAR] adr:600, bankAdr:16, sBank:22, d:0, a:23, f:hls_transform_unit_ex_hls_dup1, v:cand_bottom_left_i
[SCALAR] adr:600, bankAdr:16, sBank:22, d:0, a:6, f:hls_transform_unit_ex_hls_dup1, v:cand_bottom_left_o
[SCALAR] adr:1412, bankAdr:44, sBank:1, d:0, a:3, f:hls_transform_unit_ex_hls_dup1, v:cand_up_c
[SCALAR] adr:1416, bankAdr:44, sBank:2, d:1, a:1, f:hls_transform_unit_ex_hls_dup1, v:cand_left_c
[SCALAR] adr:1420, bankAdr:44, sBank:3, d:1, a:2, f:hls_transform_unit_ex_hls_dup1, v:cand_up_left_c
[SCALAR] adr:1424, bankAdr:44, sBank:4, d:1, a:5, f:hls_transform_unit_ex_hls_dup1, v:cand_up_right_sap_c
[SCALAR] adr:1428, bankAdr:44, sBank:5, d:0, a:10, f:hls_transform_unit_ex_hls_dup1, v:cand_up_right_c
[SCALAR] adr:1432, bankAdr:44, sBank:6, d:0, a:31, f:hls_transform_unit_ex_hls_dup1, v:cand_bottom_left_c_i
[SCALAR] adr:1432, bankAdr:44, sBank:6, d:0, a:10, f:hls_transform_unit_ex_hls_dup1, v:cand_bottom_left_c_o
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:22, f:hls_transform_unit_ex_hls_dup1, v:log2_ctb_size
[SCALAR] adr:604, bankAdr:16, sBank:23, d:0, a:22, f:hls_transform_unit_ex_hls_dup1, v:ctb_up_flag
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:16, f:hls_transform_unit_ex_hls_dup1, v:ctb_left_flag
[SCALAR] adr:612, bankAdr:16, sBank:25, d:0, a:14, f:hls_transform_unit_ex_hls_dup1, v:ctb_up_left_flag
[SCALAR] adr:616, bankAdr:16, sBank:26, d:1, a:21, f:hls_transform_unit_ex_hls_dup1, v:ctb_up_right_flag
[SCALAR] adr:620, bankAdr:16, sBank:27, d:1, a:20, f:hls_transform_unit_ex_hls_dup1, v:end_of_tiles_x
[SCALAR] adr:624, bankAdr:16, sBank:28, d:0, a:20, f:hls_transform_unit_ex_hls_dup1, v:end_of_tiles_y
[SCALAR] adr:472, bankAdr:12, sBank:22, d:1, a:22, f:hls_transform_unit_ex_hls_dup1, v:tu_is_cu_chroma_qp_offset_coded_i
[SCALAR] adr:472, bankAdr:12, sBank:22, d:1, a:6, f:hls_transform_unit_ex_hls_dup1, v:tu_is_cu_chroma_qp_offset_coded_o
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:21, f:hls_transform_unit_ex_hls_dup1, v:tu_is_cu_qp_delta_coded_i
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:5, f:hls_transform_unit_ex_hls_dup1, v:tu_is_cu_qp_delta_coded_o
[SCALAR] adr:468, bankAdr:12, sBank:21, d:1, a:6, f:hls_transform_unit_ex_hls_dup1, v:tu_cu_qp_delta
[SCALAR] adr:500, bankAdr:12, sBank:29, d:0, a:9, f:hls_transform_unit_ex_hls_dup1, v:tu_cross_pf
[SCALAR] adr:532, bankAdr:16, sBank:5, d:1, a:23, f:hls_transform_unit_ex_hls_dup1, v:first_qp_group_i
[SCALAR] adr:532, bankAdr:16, sBank:5, d:1, a:10, f:hls_transform_unit_ex_hls_dup1, v:first_qp_group_o
[SCALAR] adr:328, bankAdr:8, sBank:18, d:1, a:14, f:hls_transform_unit_ex_hls_dup1, v:chroma_format_idc
[SCALAR] adr:448, bankAdr:12, sBank:16, d:1, a:16, f:hls_transform_unit_ex_hls_dup1, v:cu_chroma_qp_offset_enabled_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:1, a:28, f:hls_transform_unit_ex_hls_dup1, v:cu_qp_delta_enabled_flag
[SCALAR] adr:540, bankAdr:16, sBank:7, d:1, a:20, f:hls_transform_unit_ex_hls_dup1, v:qPy_pred
[SCALAR] adr:436, bankAdr:12, sBank:13, d:0, a:25, f:hls_transform_unit_ex_hls_dup1, v:diff_cu_qp_delta_depth
[SCALAR] adr:368, bankAdr:8, sBank:28, d:1, a:20, f:hls_transform_unit_ex_hls_dup1, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:1, a:16, f:hls_transform_unit_ex_hls_dup1, v:min_cb_width
[SCALAR] adr:460, bankAdr:12, sBank:19, d:0, a:18, f:hls_transform_unit_ex_hls_dup1, v:slice_qp
[SCALAR] adr:20, bankAdr:0, sBank:5, d:0, a:25, f:hls_transform_unit_ex_hls_dup2, v:cbf_luma
[SCALAR] adr:16, bankAdr:0, sBank:4, d:0, a:17, f:hls_transform_unit_ex_hls_dup2, v:cbf_data
[SCALAR] adr:1160, bankAdr:36, sBank:2, d:0, a:18, f:hls_transform_unit_ex_hls_dup2, v:chroma_qp_offset_list_len_minus1
[ARRAY] adr:12288, bankAdr:4096, aBank:0, d:0, a:83, f:hls_transform_unit_ex_hls_dup2, v:cb_qp_offset_list_Din_A
[ARRAY] adr:12288, bankAdr:4096, aBank:0, d:0, a:243, f:hls_transform_unit_ex_hls_dup2, v:cb_qp_offset_list_Dout_A
[ARRAY] adr:12296, bankAdr:4104, aBank:0, d:0, a:84, f:hls_transform_unit_ex_hls_dup2, v:cr_qp_offset_list_Din_A
[ARRAY] adr:12296, bankAdr:4104, aBank:0, d:0, a:244, f:hls_transform_unit_ex_hls_dup2, v:cr_qp_offset_list_Dout_A
[SCALAR] adr:1136, bankAdr:32, sBank:28, d:0, a:21, f:hls_transform_unit_ex_hls_dup2, v:qp_bd_offset
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:85, f:hls_transform_unit_ex_hls_dup2, v:qp_y_tab_Din_A
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:245, f:hls_transform_unit_ex_hls_dup2, v:qp_y_tab_Dout_A
[SCALAR] adr:560, bankAdr:16, sBank:12, d:1, a:26, f:hls_transform_unit_ex_hls_dup2, v:pred_mode
[SCALAR] adr:336, bankAdr:8, sBank:20, d:0, a:17, f:hls_transform_unit_ex_hls_dup2, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:0, a:16, f:hls_transform_unit_ex_hls_dup2, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:0, a:24, f:hls_transform_unit_ex_hls_dup2, v:hshift_2
[SCALAR] adr:348, bankAdr:8, sBank:23, d:0, a:23, f:hls_transform_unit_ex_hls_dup2, v:vshift_0
[SCALAR] adr:352, bankAdr:8, sBank:24, d:0, a:18, f:hls_transform_unit_ex_hls_dup2, v:vshift_1
[SCALAR] adr:356, bankAdr:8, sBank:25, d:1, a:13, f:hls_transform_unit_ex_hls_dup2, v:vshift_2
[SCALAR] adr:484, bankAdr:12, sBank:25, d:0, a:15, f:hls_transform_unit_ex_hls_dup2, v:tu_intra_pred_mode
[SCALAR] adr:488, bankAdr:12, sBank:26, d:0, a:23, f:hls_transform_unit_ex_hls_dup2, v:tu_intra_pred_mode_c
[SCALAR] adr:572, bankAdr:16, sBank:15, d:1, a:23, f:hls_transform_unit_ex_hls_dup2, v:cu_transquant_bypass_flag
[SCALAR] adr:492, bankAdr:12, sBank:27, d:1, a:8, f:hls_transform_unit_ex_hls_dup2, v:tu_cu_qp_offset_cb
[SCALAR] adr:496, bankAdr:12, sBank:28, d:1, a:4, f:hls_transform_unit_ex_hls_dup2, v:tu_cu_qp_offset_cr
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:30, f:hls_transform_unit_ex_hls_dup2, v:qp_y_i
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:10, f:hls_transform_unit_ex_hls_dup2, v:qp_y_o
[SCALAR] adr:168, bankAdr:4, sBank:10, d:1, a:9, f:hls_transform_unit_ex_hls_dup2, v:log2_trafo_size
[SCALAR] adr:56, bankAdr:0, sBank:14, d:1, a:26, f:hls_transform_unit_ex_hls_dup2, v:log2_trafo_size_c_i
[SCALAR] adr:56, bankAdr:0, sBank:14, d:0, a:9, f:hls_transform_unit_ex_hls_dup2, v:log2_trafo_size_c_o
[SCALAR] adr:48, bankAdr:0, sBank:12, d:0, a:28, f:hls_transform_unit_ex_hls_dup2, v:scan_idx_i
[SCALAR] adr:48, bankAdr:0, sBank:12, d:1, a:8, f:hls_transform_unit_ex_hls_dup2, v:scan_idx_o
[SCALAR] adr:52, bankAdr:0, sBank:13, d:1, a:7, f:hls_transform_unit_ex_hls_dup2, v:scan_idx_c
[SCALAR] adr:1140, bankAdr:32, sBank:29, d:1, a:28, f:hls_transform_unit_ex_hls_dup2, v:cmdr_run_i
[SCALAR] adr:1140, bankAdr:32, sBank:29, d:1, a:9, f:hls_transform_unit_ex_hls_dup2, v:cmdr_run_o
[SCALAR] adr:1244, bankAdr:36, sBank:23, d:1, a:22, f:hls_transform_unit_ex_hls_dup2, v:buf_data_0
[SCALAR] adr:1248, bankAdr:36, sBank:24, d:1, a:17, f:hls_transform_unit_ex_hls_dup2, v:buf_data_1
[SCALAR] adr:1252, bankAdr:36, sBank:25, d:1, a:14, f:hls_transform_unit_ex_hls_dup2, v:buf_data_2
[SCALAR] adr:1148, bankAdr:32, sBank:31, d:1, a:32, f:hls_transform_unit_ex_hls_dup2, v:xm_linesize_0
[SCALAR] adr:1152, bankAdr:36, sBank:0, d:0, a:29, f:hls_transform_unit_ex_hls_dup2, v:xm_linesize_1
[SCALAR] adr:1156, bankAdr:36, sBank:1, d:0, a:27, f:hls_transform_unit_ex_hls_dup2, v:xm_linesize_2
[SCALAR] adr:1144, bankAdr:32, sBank:30, d:1, a:14, f:hls_transform_unit_ex_hls_dup2, v:pixel_shift
[SCALAR] adr:160, bankAdr:4, sBank:8, d:0, a:12, f:hls_transform_unit_ex_hls_dup2, v:nPbW
[SCALAR] adr:164, bankAdr:4, sBank:9, d:0, a:12, f:hls_transform_unit_ex_hls_dup2, v:nPbH
[SCALAR] adr:580, bankAdr:16, sBank:17, d:0, a:4, f:hls_transform_unit_ex_hls_dup2, v:cand_up
[SCALAR] adr:584, bankAdr:16, sBank:18, d:0, a:4, f:hls_transform_unit_ex_hls_dup2, v:cand_left
[SCALAR] adr:588, bankAdr:16, sBank:19, d:0, a:5, f:hls_transform_unit_ex_hls_dup2, v:cand_up_left
[SCALAR] adr:592, bankAdr:16, sBank:20, d:0, a:7, f:hls_transform_unit_ex_hls_dup2, v:cand_up_right_sap
[SCALAR] adr:596, bankAdr:16, sBank:21, d:0, a:7, f:hls_transform_unit_ex_hls_dup2, v:cand_up_right
[SCALAR] adr:600, bankAdr:16, sBank:22, d:1, a:23, f:hls_transform_unit_ex_hls_dup2, v:cand_bottom_left_i
[SCALAR] adr:600, bankAdr:16, sBank:22, d:0, a:7, f:hls_transform_unit_ex_hls_dup2, v:cand_bottom_left_o
[SCALAR] adr:1412, bankAdr:44, sBank:1, d:1, a:3, f:hls_transform_unit_ex_hls_dup2, v:cand_up_c
[SCALAR] adr:1416, bankAdr:44, sBank:2, d:0, a:2, f:hls_transform_unit_ex_hls_dup2, v:cand_left_c
[SCALAR] adr:1420, bankAdr:44, sBank:3, d:0, a:3, f:hls_transform_unit_ex_hls_dup2, v:cand_up_left_c
[SCALAR] adr:1424, bankAdr:44, sBank:4, d:0, a:6, f:hls_transform_unit_ex_hls_dup2, v:cand_up_right_sap_c
[SCALAR] adr:1428, bankAdr:44, sBank:5, d:0, a:11, f:hls_transform_unit_ex_hls_dup2, v:cand_up_right_c
[SCALAR] adr:1432, bankAdr:44, sBank:6, d:0, a:32, f:hls_transform_unit_ex_hls_dup2, v:cand_bottom_left_c_i
[SCALAR] adr:1432, bankAdr:44, sBank:6, d:0, a:11, f:hls_transform_unit_ex_hls_dup2, v:cand_bottom_left_c_o
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:22, f:hls_transform_unit_ex_hls_dup2, v:log2_ctb_size
[SCALAR] adr:604, bankAdr:16, sBank:23, d:0, a:24, f:hls_transform_unit_ex_hls_dup2, v:ctb_up_flag
[SCALAR] adr:608, bankAdr:16, sBank:24, d:0, a:19, f:hls_transform_unit_ex_hls_dup2, v:ctb_left_flag
[SCALAR] adr:612, bankAdr:16, sBank:25, d:0, a:16, f:hls_transform_unit_ex_hls_dup2, v:ctb_up_left_flag
[SCALAR] adr:616, bankAdr:16, sBank:26, d:0, a:24, f:hls_transform_unit_ex_hls_dup2, v:ctb_up_right_flag
[SCALAR] adr:620, bankAdr:16, sBank:27, d:0, a:22, f:hls_transform_unit_ex_hls_dup2, v:end_of_tiles_x
[SCALAR] adr:624, bankAdr:16, sBank:28, d:1, a:21, f:hls_transform_unit_ex_hls_dup2, v:end_of_tiles_y
[SCALAR] adr:472, bankAdr:12, sBank:22, d:0, a:25, f:hls_transform_unit_ex_hls_dup2, v:tu_is_cu_chroma_qp_offset_coded_i
[SCALAR] adr:472, bankAdr:12, sBank:22, d:1, a:7, f:hls_transform_unit_ex_hls_dup2, v:tu_is_cu_chroma_qp_offset_coded_o
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:23, f:hls_transform_unit_ex_hls_dup2, v:tu_is_cu_qp_delta_coded_i
[SCALAR] adr:476, bankAdr:12, sBank:23, d:0, a:6, f:hls_transform_unit_ex_hls_dup2, v:tu_is_cu_qp_delta_coded_o
[SCALAR] adr:468, bankAdr:12, sBank:21, d:1, a:7, f:hls_transform_unit_ex_hls_dup2, v:tu_cu_qp_delta
[SCALAR] adr:500, bankAdr:12, sBank:29, d:0, a:10, f:hls_transform_unit_ex_hls_dup2, v:tu_cross_pf
[SCALAR] adr:532, bankAdr:16, sBank:5, d:1, a:24, f:hls_transform_unit_ex_hls_dup2, v:first_qp_group_i
[SCALAR] adr:532, bankAdr:16, sBank:5, d:1, a:11, f:hls_transform_unit_ex_hls_dup2, v:first_qp_group_o
[SCALAR] adr:328, bankAdr:8, sBank:18, d:0, a:16, f:hls_transform_unit_ex_hls_dup2, v:chroma_format_idc
[SCALAR] adr:448, bankAdr:12, sBank:16, d:0, a:18, f:hls_transform_unit_ex_hls_dup2, v:cu_chroma_qp_offset_enabled_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:0, a:29, f:hls_transform_unit_ex_hls_dup2, v:cu_qp_delta_enabled_flag
[SCALAR] adr:540, bankAdr:16, sBank:7, d:0, a:22, f:hls_transform_unit_ex_hls_dup2, v:qPy_pred
[SCALAR] adr:436, bankAdr:12, sBank:13, d:1, a:25, f:hls_transform_unit_ex_hls_dup2, v:diff_cu_qp_delta_depth
[SCALAR] adr:368, bankAdr:8, sBank:28, d:0, a:22, f:hls_transform_unit_ex_hls_dup2, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:1, a:17, f:hls_transform_unit_ex_hls_dup2, v:min_cb_width
[SCALAR] adr:460, bankAdr:12, sBank:19, d:1, a:18, f:hls_transform_unit_ex_hls_dup2, v:slice_qp
[SCALAR] adr:20, bankAdr:0, sBank:5, d:0, a:26, f:hls_transform_unit_ex_hls_dup3, v:cbf_luma
[SCALAR] adr:16, bankAdr:0, sBank:4, d:1, a:17, f:hls_transform_unit_ex_hls_dup3, v:cbf_data
[SCALAR] adr:1160, bankAdr:36, sBank:2, d:0, a:19, f:hls_transform_unit_ex_hls_dup3, v:chroma_qp_offset_list_len_minus1
[ARRAY] adr:12288, bankAdr:4096, aBank:0, d:0, a:86, f:hls_transform_unit_ex_hls_dup3, v:cb_qp_offset_list_Din_A
[ARRAY] adr:12288, bankAdr:4096, aBank:0, d:0, a:246, f:hls_transform_unit_ex_hls_dup3, v:cb_qp_offset_list_Dout_A
[ARRAY] adr:12296, bankAdr:4104, aBank:0, d:0, a:87, f:hls_transform_unit_ex_hls_dup3, v:cr_qp_offset_list_Din_A
[ARRAY] adr:12296, bankAdr:4104, aBank:0, d:0, a:247, f:hls_transform_unit_ex_hls_dup3, v:cr_qp_offset_list_Dout_A
[SCALAR] adr:1136, bankAdr:32, sBank:28, d:1, a:22, f:hls_transform_unit_ex_hls_dup3, v:qp_bd_offset
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:88, f:hls_transform_unit_ex_hls_dup3, v:qp_y_tab_Din_A
[ARRAY] adr:286204, bankAdr:278012, aBank:0, d:0, a:248, f:hls_transform_unit_ex_hls_dup3, v:qp_y_tab_Dout_A
[SCALAR] adr:560, bankAdr:16, sBank:12, d:1, a:27, f:hls_transform_unit_ex_hls_dup3, v:pred_mode
[SCALAR] adr:336, bankAdr:8, sBank:20, d:1, a:17, f:hls_transform_unit_ex_hls_dup3, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:1, a:15, f:hls_transform_unit_ex_hls_dup3, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:1, a:24, f:hls_transform_unit_ex_hls_dup3, v:hshift_2
[SCALAR] adr:348, bankAdr:8, sBank:23, d:0, a:25, f:hls_transform_unit_ex_hls_dup3, v:vshift_0
[SCALAR] adr:352, bankAdr:8, sBank:24, d:1, a:18, f:hls_transform_unit_ex_hls_dup3, v:vshift_1
[SCALAR] adr:356, bankAdr:8, sBank:25, d:1, a:15, f:hls_transform_unit_ex_hls_dup3, v:vshift_2
[SCALAR] adr:484, bankAdr:12, sBank:25, d:0, a:17, f:hls_transform_unit_ex_hls_dup3, v:tu_intra_pred_mode
[SCALAR] adr:488, bankAdr:12, sBank:26, d:1, a:23, f:hls_transform_unit_ex_hls_dup3, v:tu_intra_pred_mode_c
[SCALAR] adr:572, bankAdr:16, sBank:15, d:0, a:24, f:hls_transform_unit_ex_hls_dup3, v:cu_transquant_bypass_flag
[SCALAR] adr:492, bankAdr:12, sBank:27, d:0, a:9, f:hls_transform_unit_ex_hls_dup3, v:tu_cu_qp_offset_cb
[SCALAR] adr:496, bankAdr:12, sBank:28, d:0, a:5, f:hls_transform_unit_ex_hls_dup3, v:tu_cu_qp_offset_cr
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:31, f:hls_transform_unit_ex_hls_dup3, v:qp_y_i
[SCALAR] adr:536, bankAdr:16, sBank:6, d:1, a:11, f:hls_transform_unit_ex_hls_dup3, v:qp_y_o
[SCALAR] adr:168, bankAdr:4, sBank:10, d:0, a:10, f:hls_transform_unit_ex_hls_dup3, v:log2_trafo_size
[SCALAR] adr:56, bankAdr:0, sBank:14, d:0, a:27, f:hls_transform_unit_ex_hls_dup3, v:log2_trafo_size_c_i
[SCALAR] adr:56, bankAdr:0, sBank:14, d:1, a:9, f:hls_transform_unit_ex_hls_dup3, v:log2_trafo_size_c_o
[SCALAR] adr:48, bankAdr:0, sBank:12, d:0, a:29, f:hls_transform_unit_ex_hls_dup3, v:scan_idx_i
[SCALAR] adr:48, bankAdr:0, sBank:12, d:0, a:9, f:hls_transform_unit_ex_hls_dup3, v:scan_idx_o
[SCALAR] adr:52, bankAdr:0, sBank:13, d:0, a:8, f:hls_transform_unit_ex_hls_dup3, v:scan_idx_c
[SCALAR] adr:1140, bankAdr:32, sBank:29, d:0, a:29, f:hls_transform_unit_ex_hls_dup3, v:cmdr_run_i
[SCALAR] adr:1140, bankAdr:32, sBank:29, d:1, a:10, f:hls_transform_unit_ex_hls_dup3, v:cmdr_run_o
[SCALAR] adr:1244, bankAdr:36, sBank:23, d:1, a:24, f:hls_transform_unit_ex_hls_dup3, v:buf_data_0
[SCALAR] adr:1248, bankAdr:36, sBank:24, d:0, a:20, f:hls_transform_unit_ex_hls_dup3, v:buf_data_1
[SCALAR] adr:1252, bankAdr:36, sBank:25, d:1, a:16, f:hls_transform_unit_ex_hls_dup3, v:buf_data_2
[SCALAR] adr:1148, bankAdr:32, sBank:31, d:0, a:34, f:hls_transform_unit_ex_hls_dup3, v:xm_linesize_0
[SCALAR] adr:1152, bankAdr:36, sBank:0, d:1, a:29, f:hls_transform_unit_ex_hls_dup3, v:xm_linesize_1
[SCALAR] adr:1156, bankAdr:36, sBank:1, d:1, a:27, f:hls_transform_unit_ex_hls_dup3, v:xm_linesize_2
[SCALAR] adr:1144, bankAdr:32, sBank:30, d:0, a:15, f:hls_transform_unit_ex_hls_dup3, v:pixel_shift
[SCALAR] adr:160, bankAdr:4, sBank:8, d:1, a:12, f:hls_transform_unit_ex_hls_dup3, v:nPbW
[SCALAR] adr:164, bankAdr:4, sBank:9, d:1, a:12, f:hls_transform_unit_ex_hls_dup3, v:nPbH
[SCALAR] adr:580, bankAdr:16, sBank:17, d:1, a:4, f:hls_transform_unit_ex_hls_dup3, v:cand_up
[SCALAR] adr:584, bankAdr:16, sBank:18, d:1, a:4, f:hls_transform_unit_ex_hls_dup3, v:cand_left
[SCALAR] adr:588, bankAdr:16, sBank:19, d:1, a:5, f:hls_transform_unit_ex_hls_dup3, v:cand_up_left
[SCALAR] adr:592, bankAdr:16, sBank:20, d:1, a:7, f:hls_transform_unit_ex_hls_dup3, v:cand_up_right_sap
[SCALAR] adr:596, bankAdr:16, sBank:21, d:0, a:8, f:hls_transform_unit_ex_hls_dup3, v:cand_up_right
[SCALAR] adr:600, bankAdr:16, sBank:22, d:0, a:26, f:hls_transform_unit_ex_hls_dup3, v:cand_bottom_left_i
[SCALAR] adr:600, bankAdr:16, sBank:22, d:0, a:8, f:hls_transform_unit_ex_hls_dup3, v:cand_bottom_left_o
[SCALAR] adr:1412, bankAdr:44, sBank:1, d:0, a:4, f:hls_transform_unit_ex_hls_dup3, v:cand_up_c
[SCALAR] adr:1416, bankAdr:44, sBank:2, d:1, a:2, f:hls_transform_unit_ex_hls_dup3, v:cand_left_c
[SCALAR] adr:1420, bankAdr:44, sBank:3, d:1, a:3, f:hls_transform_unit_ex_hls_dup3, v:cand_up_left_c
[SCALAR] adr:1424, bankAdr:44, sBank:4, d:1, a:6, f:hls_transform_unit_ex_hls_dup3, v:cand_up_right_sap_c
[SCALAR] adr:1428, bankAdr:44, sBank:5, d:0, a:12, f:hls_transform_unit_ex_hls_dup3, v:cand_up_right_c
[SCALAR] adr:1432, bankAdr:44, sBank:6, d:0, a:33, f:hls_transform_unit_ex_hls_dup3, v:cand_bottom_left_c_i
[SCALAR] adr:1432, bankAdr:44, sBank:6, d:0, a:12, f:hls_transform_unit_ex_hls_dup3, v:cand_bottom_left_c_o
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:25, f:hls_transform_unit_ex_hls_dup3, v:log2_ctb_size
[SCALAR] adr:604, bankAdr:16, sBank:23, d:0, a:26, f:hls_transform_unit_ex_hls_dup3, v:ctb_up_flag
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:19, f:hls_transform_unit_ex_hls_dup3, v:ctb_left_flag
[SCALAR] adr:612, bankAdr:16, sBank:25, d:0, a:18, f:hls_transform_unit_ex_hls_dup3, v:ctb_up_left_flag
[SCALAR] adr:616, bankAdr:16, sBank:26, d:1, a:24, f:hls_transform_unit_ex_hls_dup3, v:ctb_up_right_flag
[SCALAR] adr:620, bankAdr:16, sBank:27, d:1, a:21, f:hls_transform_unit_ex_hls_dup3, v:end_of_tiles_x
[SCALAR] adr:624, bankAdr:16, sBank:28, d:0, a:23, f:hls_transform_unit_ex_hls_dup3, v:end_of_tiles_y
[SCALAR] adr:472, bankAdr:12, sBank:22, d:1, a:25, f:hls_transform_unit_ex_hls_dup3, v:tu_is_cu_chroma_qp_offset_coded_i
[SCALAR] adr:472, bankAdr:12, sBank:22, d:1, a:8, f:hls_transform_unit_ex_hls_dup3, v:tu_is_cu_chroma_qp_offset_coded_o
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:25, f:hls_transform_unit_ex_hls_dup3, v:tu_is_cu_qp_delta_coded_i
[SCALAR] adr:476, bankAdr:12, sBank:23, d:1, a:6, f:hls_transform_unit_ex_hls_dup3, v:tu_is_cu_qp_delta_coded_o
[SCALAR] adr:468, bankAdr:12, sBank:21, d:1, a:8, f:hls_transform_unit_ex_hls_dup3, v:tu_cu_qp_delta
[SCALAR] adr:500, bankAdr:12, sBank:29, d:0, a:11, f:hls_transform_unit_ex_hls_dup3, v:tu_cross_pf
[SCALAR] adr:532, bankAdr:16, sBank:5, d:1, a:25, f:hls_transform_unit_ex_hls_dup3, v:first_qp_group_i
[SCALAR] adr:532, bankAdr:16, sBank:5, d:1, a:12, f:hls_transform_unit_ex_hls_dup3, v:first_qp_group_o
[SCALAR] adr:328, bankAdr:8, sBank:18, d:1, a:15, f:hls_transform_unit_ex_hls_dup3, v:chroma_format_idc
[SCALAR] adr:448, bankAdr:12, sBank:16, d:1, a:17, f:hls_transform_unit_ex_hls_dup3, v:cu_chroma_qp_offset_enabled_flag
[SCALAR] adr:428, bankAdr:12, sBank:11, d:1, a:29, f:hls_transform_unit_ex_hls_dup3, v:cu_qp_delta_enabled_flag
[SCALAR] adr:540, bankAdr:16, sBank:7, d:1, a:21, f:hls_transform_unit_ex_hls_dup3, v:qPy_pred
[SCALAR] adr:436, bankAdr:12, sBank:13, d:0, a:26, f:hls_transform_unit_ex_hls_dup3, v:diff_cu_qp_delta_depth
[SCALAR] adr:368, bankAdr:8, sBank:28, d:1, a:23, f:hls_transform_unit_ex_hls_dup3, v:log2_min_cb_size
[SCALAR] adr:392, bankAdr:12, sBank:2, d:1, a:18, f:hls_transform_unit_ex_hls_dup3, v:min_cb_width
[SCALAR] adr:460, bankAdr:12, sBank:19, d:0, a:19, f:hls_transform_unit_ex_hls_dup3, v:slice_qp
[SCALAR] adr:336, bankAdr:8, sBank:20, d:0, a:18, f:init_intra_neighbors_chroma_hls, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:0, a:17, f:init_intra_neighbors_chroma_hls, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:0, a:27, f:init_intra_neighbors_chroma_hls, v:hshift_2
[SCALAR] adr:348, bankAdr:8, sBank:23, d:0, a:27, f:init_intra_neighbors_chroma_hls, v:vshift_0
[SCALAR] adr:352, bankAdr:8, sBank:24, d:0, a:21, f:init_intra_neighbors_chroma_hls, v:vshift_1
[SCALAR] adr:356, bankAdr:8, sBank:25, d:1, a:17, f:init_intra_neighbors_chroma_hls, v:vshift_2
[SCALAR] adr:372, bankAdr:8, sBank:29, d:1, a:29, f:init_intra_neighbors_chroma_hls, v:log2_min_pu_size
[SCALAR] adr:376, bankAdr:8, sBank:30, d:1, a:15, f:init_intra_neighbors_chroma_hls, v:log2_min_tb_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:26, f:init_intra_neighbors_chroma_hls, v:log2_ctb_size
[SCALAR] adr:404, bankAdr:12, sBank:5, d:0, a:27, f:init_intra_neighbors_chroma_hls, v:tb_mask
[SCALAR] adr:408, bankAdr:12, sBank:6, d:1, a:32, f:init_intra_neighbors_chroma_hls, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:1, a:19, f:init_intra_neighbors_chroma_hls, v:height
[SCALAR] adr:172, bankAdr:4, sBank:11, d:0, a:30, f:init_intra_neighbors_chroma_hls, v:log2_width
[SCALAR] adr:176, bankAdr:4, sBank:12, d:1, a:28, f:init_intra_neighbors_chroma_hls, v:log2_height
[SCALAR] adr:424, bankAdr:12, sBank:10, d:0, a:22, f:init_intra_neighbors_chroma_hls, v:constrained_intra_pred_flag
[ARRAY] adr:286188, bankAdr:277996, aBank:0, d:0, a:89, f:init_intra_neighbors_chroma_hls, v:min_tb_addr_zs_Din_A
[ARRAY] adr:286188, bankAdr:277996, aBank:0, d:0, a:249, f:init_intra_neighbors_chroma_hls, v:min_tb_addr_zs_Dout_A
[SCALAR] adr:1432, bankAdr:44, sBank:6, d:0, a:34, f:init_intra_neighbors_chroma_hls, v:cand_bottom_left_c
[SCALAR] adr:1416, bankAdr:44, sBank:2, d:0, a:20, f:init_intra_neighbors_chroma_hls, v:cand_left_c
[SCALAR] adr:1420, bankAdr:44, sBank:3, d:1, a:17, f:init_intra_neighbors_chroma_hls, v:cand_up_left_c
[SCALAR] adr:1412, bankAdr:44, sBank:1, d:0, a:28, f:init_intra_neighbors_chroma_hls, v:cand_up_c
[SCALAR] adr:1428, bankAdr:44, sBank:5, d:1, a:26, f:init_intra_neighbors_chroma_hls, v:cand_up_right_c
[SCALAR] adr:684, bankAdr:20, sBank:11, d:0, a:8, f:init_intra_neighbors_chroma_hls, v:numIntraNeighbor_c
[SCALAR] adr:688, bankAdr:20, sBank:12, d:1, a:9, f:init_intra_neighbors_chroma_hls, v:totalUnits_c
[SCALAR] adr:692, bankAdr:20, sBank:13, d:1, a:8, f:init_intra_neighbors_chroma_hls, v:aboveUnits_c
[SCALAR] adr:696, bankAdr:20, sBank:14, d:0, a:10, f:init_intra_neighbors_chroma_hls, v:leftUnits_c
[SCALAR] adr:700, bankAdr:20, sBank:15, d:0, a:8, f:init_intra_neighbors_chroma_hls, v:unitWidth_c
[SCALAR] adr:704, bankAdr:20, sBank:16, d:1, a:4, f:init_intra_neighbors_chroma_hls, v:unitHeight_c
[SCALAR] adr:708, bankAdr:20, sBank:17, d:0, a:5, f:init_intra_neighbors_chroma_hls, v:log2TrSize_c
[SCALAR] adr:712, bankAdr:20, sBank:18, d:0, a:17, f:init_intra_neighbors_chroma_hls, v:bNeighborFlags_c_0_i
[SCALAR] adr:716, bankAdr:20, sBank:19, d:0, a:20, f:init_intra_neighbors_chroma_hls, v:bNeighborFlags_c_1_i
[SCALAR] adr:720, bankAdr:20, sBank:20, d:1, a:18, f:init_intra_neighbors_chroma_hls, v:bNeighborFlags_c_2_i
[SCALAR] adr:712, bankAdr:20, sBank:18, d:0, a:5, f:init_intra_neighbors_chroma_hls, v:bNeighborFlags_c_0_o
[SCALAR] adr:716, bankAdr:20, sBank:19, d:0, a:6, f:init_intra_neighbors_chroma_hls, v:bNeighborFlags_c_1_o
[SCALAR] adr:720, bankAdr:20, sBank:20, d:0, a:8, f:init_intra_neighbors_chroma_hls, v:bNeighborFlags_c_2_o
[SCALAR] adr:396, bankAdr:12, sBank:3, d:0, a:19, f:init_intra_neighbors_chroma_hls, v:min_pu_width
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:90, f:init_intra_neighbors_chroma_hls, v:tab_mvf_pred_flag_row_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:250, f:init_intra_neighbors_chroma_hls, v:tab_mvf_pred_flag_row_Dout_A
[SCALAR] adr:180, bankAdr:4, sBank:13, d:1, a:26, f:init_intra_neighbors_chroma_hls, v:predColBuf_0
[SCALAR] adr:184, bankAdr:4, sBank:14, d:1, a:27, f:init_intra_neighbors_chroma_hls, v:predColBuf_1
[SCALAR] adr:188, bankAdr:4, sBank:15, d:1, a:24, f:init_intra_neighbors_chroma_hls, v:predColBuf_2
[SCALAR] adr:192, bankAdr:4, sBank:16, d:0, a:19, f:init_intra_neighbors_chroma_hls, v:predColBuf_3
[SCALAR] adr:196, bankAdr:4, sBank:17, d:0, a:18, f:init_intra_neighbors_chroma_hls, v:predColBuf_4
[SCALAR] adr:200, bankAdr:4, sBank:18, d:1, a:16, f:init_intra_neighbors_chroma_hls, v:predColBuf_5
[SCALAR] adr:204, bankAdr:4, sBank:19, d:1, a:20, f:init_intra_neighbors_chroma_hls, v:predColBuf_6
[SCALAR] adr:208, bankAdr:4, sBank:20, d:0, a:19, f:init_intra_neighbors_chroma_hls, v:predColBuf_7
[SCALAR] adr:212, bankAdr:4, sBank:21, d:1, a:16, f:init_intra_neighbors_chroma_hls, v:predColBuf_8
[SCALAR] adr:216, bankAdr:4, sBank:22, d:1, a:26, f:init_intra_neighbors_chroma_hls, v:predColBuf_9
[SCALAR] adr:220, bankAdr:4, sBank:23, d:1, a:26, f:init_intra_neighbors_chroma_hls, v:predColBuf_10
[SCALAR] adr:224, bankAdr:4, sBank:24, d:1, a:20, f:init_intra_neighbors_chroma_hls, v:predColBuf_11
[SCALAR] adr:228, bankAdr:4, sBank:25, d:0, a:19, f:init_intra_neighbors_chroma_hls, v:predColBuf_12
[SCALAR] adr:232, bankAdr:4, sBank:26, d:1, a:25, f:init_intra_neighbors_chroma_hls, v:predColBuf_13
[SCALAR] adr:236, bankAdr:4, sBank:27, d:0, a:23, f:init_intra_neighbors_chroma_hls, v:predColBuf_14
[SCALAR] adr:240, bankAdr:4, sBank:28, d:0, a:24, f:init_intra_neighbors_chroma_hls, v:predColBuf_15
[SCALAR] adr:244, bankAdr:4, sBank:29, d:0, a:30, f:init_intra_neighbors_chroma_hls, v:predColBuf_16
[SCALAR] adr:452, bankAdr:12, sBank:17, d:1, a:18, f:init_intra_neighbors_chroma_hls, v:slice_type
[SCALAR] adr:336, bankAdr:8, sBank:20, d:1, a:19, f:init_intra_neighbors_hls, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:0, a:18, f:init_intra_neighbors_hls, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:0, a:28, f:init_intra_neighbors_hls, v:hshift_2
[SCALAR] adr:348, bankAdr:8, sBank:23, d:0, a:28, f:init_intra_neighbors_hls, v:vshift_0
[SCALAR] adr:352, bankAdr:8, sBank:24, d:0, a:22, f:init_intra_neighbors_hls, v:vshift_1
[SCALAR] adr:356, bankAdr:8, sBank:25, d:1, a:18, f:init_intra_neighbors_hls, v:vshift_2
[SCALAR] adr:372, bankAdr:8, sBank:29, d:1, a:30, f:init_intra_neighbors_hls, v:log2_min_pu_size
[SCALAR] adr:376, bankAdr:8, sBank:30, d:0, a:16, f:init_intra_neighbors_hls, v:log2_min_tb_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:27, f:init_intra_neighbors_hls, v:log2_ctb_size
[SCALAR] adr:404, bankAdr:12, sBank:5, d:0, a:28, f:init_intra_neighbors_hls, v:tb_mask
[SCALAR] adr:408, bankAdr:12, sBank:6, d:1, a:33, f:init_intra_neighbors_hls, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:0, a:21, f:init_intra_neighbors_hls, v:height
[SCALAR] adr:172, bankAdr:4, sBank:11, d:1, a:30, f:init_intra_neighbors_hls, v:log2_width
[SCALAR] adr:176, bankAdr:4, sBank:12, d:0, a:30, f:init_intra_neighbors_hls, v:log2_height
[SCALAR] adr:424, bankAdr:12, sBank:10, d:1, a:22, f:init_intra_neighbors_hls, v:constrained_intra_pred_flag
[ARRAY] adr:286188, bankAdr:277996, aBank:0, d:0, a:91, f:init_intra_neighbors_hls, v:min_tb_addr_zs_Din_A
[ARRAY] adr:286188, bankAdr:277996, aBank:0, d:0, a:251, f:init_intra_neighbors_hls, v:min_tb_addr_zs_Dout_A
[SCALAR] adr:600, bankAdr:16, sBank:22, d:1, a:27, f:init_intra_neighbors_hls, v:cand_bottom_left
[SCALAR] adr:584, bankAdr:16, sBank:18, d:0, a:18, f:init_intra_neighbors_hls, v:cand_left
[SCALAR] adr:588, bankAdr:16, sBank:19, d:1, a:21, f:init_intra_neighbors_hls, v:cand_up_left
[SCALAR] adr:580, bankAdr:16, sBank:17, d:0, a:19, f:init_intra_neighbors_hls, v:cand_up
[SCALAR] adr:596, bankAdr:16, sBank:21, d:1, a:17, f:init_intra_neighbors_hls, v:cand_up_right
[SCALAR] adr:644, bankAdr:20, sBank:1, d:1, a:4, f:init_intra_neighbors_hls, v:numIntraNeighbor
[SCALAR] adr:648, bankAdr:20, sBank:2, d:0, a:3, f:init_intra_neighbors_hls, v:totalUnits
[SCALAR] adr:652, bankAdr:20, sBank:3, d:0, a:4, f:init_intra_neighbors_hls, v:aboveUnits
[SCALAR] adr:656, bankAdr:20, sBank:4, d:0, a:7, f:init_intra_neighbors_hls, v:leftUnits
[SCALAR] adr:660, bankAdr:20, sBank:5, d:0, a:13, f:init_intra_neighbors_hls, v:unitWidth
[SCALAR] adr:664, bankAdr:20, sBank:6, d:1, a:12, f:init_intra_neighbors_hls, v:unitHeight
[SCALAR] adr:668, bankAdr:20, sBank:7, d:0, a:11, f:init_intra_neighbors_hls, v:log2TrSize
[SCALAR] adr:672, bankAdr:20, sBank:8, d:1, a:27, f:init_intra_neighbors_hls, v:bNeighborFlags_0_i
[SCALAR] adr:676, bankAdr:20, sBank:9, d:0, a:27, f:init_intra_neighbors_hls, v:bNeighborFlags_1_i
[SCALAR] adr:680, bankAdr:20, sBank:10, d:0, a:23, f:init_intra_neighbors_hls, v:bNeighborFlags_2_i
[SCALAR] adr:672, bankAdr:20, sBank:8, d:0, a:13, f:init_intra_neighbors_hls, v:bNeighborFlags_0_o
[SCALAR] adr:676, bankAdr:20, sBank:9, d:0, a:13, f:init_intra_neighbors_hls, v:bNeighborFlags_1_o
[SCALAR] adr:680, bankAdr:20, sBank:10, d:1, a:10, f:init_intra_neighbors_hls, v:bNeighborFlags_2_o
[SCALAR] adr:396, bankAdr:12, sBank:3, d:1, a:18, f:init_intra_neighbors_hls, v:min_pu_width
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:92, f:init_intra_neighbors_hls, v:tab_mvf_pred_flag_row_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:252, f:init_intra_neighbors_hls, v:tab_mvf_pred_flag_row_Dout_A
[SCALAR] adr:180, bankAdr:4, sBank:13, d:0, a:27, f:init_intra_neighbors_hls, v:predColBuf_0
[SCALAR] adr:184, bankAdr:4, sBank:14, d:0, a:28, f:init_intra_neighbors_hls, v:predColBuf_1
[SCALAR] adr:188, bankAdr:4, sBank:15, d:0, a:25, f:init_intra_neighbors_hls, v:predColBuf_2
[SCALAR] adr:192, bankAdr:4, sBank:16, d:1, a:18, f:init_intra_neighbors_hls, v:predColBuf_3
[SCALAR] adr:196, bankAdr:4, sBank:17, d:1, a:19, f:init_intra_neighbors_hls, v:predColBuf_4
[SCALAR] adr:200, bankAdr:4, sBank:18, d:1, a:17, f:init_intra_neighbors_hls, v:predColBuf_5
[SCALAR] adr:204, bankAdr:4, sBank:19, d:0, a:22, f:init_intra_neighbors_hls, v:predColBuf_6
[SCALAR] adr:208, bankAdr:4, sBank:20, d:0, a:20, f:init_intra_neighbors_hls, v:predColBuf_7
[SCALAR] adr:212, bankAdr:4, sBank:21, d:0, a:19, f:init_intra_neighbors_hls, v:predColBuf_8
[SCALAR] adr:216, bankAdr:4, sBank:22, d:0, a:29, f:init_intra_neighbors_hls, v:predColBuf_9
[SCALAR] adr:220, bankAdr:4, sBank:23, d:1, a:27, f:init_intra_neighbors_hls, v:predColBuf_10
[SCALAR] adr:224, bankAdr:4, sBank:24, d:1, a:21, f:init_intra_neighbors_hls, v:predColBuf_11
[SCALAR] adr:228, bankAdr:4, sBank:25, d:0, a:20, f:init_intra_neighbors_hls, v:predColBuf_12
[SCALAR] adr:232, bankAdr:4, sBank:26, d:1, a:26, f:init_intra_neighbors_hls, v:predColBuf_13
[SCALAR] adr:236, bankAdr:4, sBank:27, d:1, a:22, f:init_intra_neighbors_hls, v:predColBuf_14
[SCALAR] adr:240, bankAdr:4, sBank:28, d:1, a:24, f:init_intra_neighbors_hls, v:predColBuf_15
[SCALAR] adr:244, bankAdr:4, sBank:29, d:0, a:31, f:init_intra_neighbors_hls, v:predColBuf_16
[SCALAR] adr:452, bankAdr:12, sBank:17, d:0, a:20, f:init_intra_neighbors_hls, v:slice_type
[SCALAR] adr:640, bankAdr:20, sBank:0, d:0, a:30, f:innerloop_ff_hevc_extract_rbsp_1_hls, v:zero_i
[SCALAR] adr:640, bankAdr:20, sBank:0, d:0, a:10, f:innerloop_ff_hevc_extract_rbsp_1_hls, v:zero_o
[SCALAR] adr:1120, bankAdr:32, sBank:24, d:0, a:23, f:innerloop_ff_hevc_extract_rbsp_1_hls, v:loop_init
[SCALAR] adr:1128, bankAdr:32, sBank:26, d:0, a:28, f:innerloop_ff_hevc_extract_rbsp_1_hls, v:loop_len
[SCALAR] adr:1124, bankAdr:32, sBank:25, d:1, a:19, f:innerloop_ff_hevc_extract_rbsp_1_hls, v:loop_inc
[SCALAR] adr:1132, bankAdr:32, sBank:27, d:1, a:9, f:innerloop_ff_hevc_extract_rbsp_1_hls, v:loop_cnt
[SCALAR] adr:632, bankAdr:16, sBank:30, d:1, a:16, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:si_loop_i
[SCALAR] adr:632, bankAdr:16, sBank:30, d:1, a:3, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:si_loop_o
[SCALAR] adr:636, bankAdr:16, sBank:31, d:1, a:33, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:di_loop_i
[SCALAR] adr:636, bankAdr:16, sBank:31, d:0, a:6, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:di_loop_o
[SCALAR] adr:640, bankAdr:20, sBank:0, d:1, a:30, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:zero_i
[SCALAR] adr:640, bankAdr:20, sBank:0, d:1, a:10, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:zero_o
[SCALAR] adr:628, bankAdr:16, sBank:29, d:1, a:31, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:skipped_bytes_i
[SCALAR] adr:628, bankAdr:16, sBank:29, d:1, a:11, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:skipped_bytes_o
[ARRAY] adr:8192, bankAdr:0, aBank:0, d:0, a:93, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:skipped_bytes_pos_Din_A
[SCALAR] adr:1120, bankAdr:32, sBank:24, d:1, a:22, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:loop_init
[SCALAR] adr:1128, bankAdr:32, sBank:26, d:1, a:27, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:loop_len
[SCALAR] adr:1124, bankAdr:32, sBank:25, d:0, a:21, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:loop_inc
[SCALAR] adr:1132, bankAdr:32, sBank:27, d:0, a:10, f:innerloop_ff_hevc_extract_rbsp_2_hls, v:loop_cnt
[SCALAR] adr:488, bankAdr:12, sBank:26, d:0, a:29, f:intra_pred_libx265_hls, v:tu_intra_pred_mode_c
[SCALAR] adr:484, bankAdr:12, sBank:25, d:1, a:20, f:intra_pred_libx265_hls, v:tu_intra_pred_mode
[SCALAR] adr:336, bankAdr:8, sBank:20, d:1, a:20, f:intra_pred_libx265_hls, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:1, a:18, f:intra_pred_libx265_hls, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:1, a:28, f:intra_pred_libx265_hls, v:hshift_2
[SCALAR] adr:560, bankAdr:16, sBank:12, d:1, a:29, f:intra_prediction_unit_default_value_hls, v:pred_mode
[SCALAR] adr:372, bankAdr:8, sBank:29, d:0, a:32, f:intra_prediction_unit_default_value_hls, v:log2_min_pu_size
[SCALAR] adr:396, bankAdr:12, sBank:3, d:0, a:20, f:intra_prediction_unit_default_value_hls, v:min_pu_width
[SCALAR] adr:172, bankAdr:4, sBank:11, d:0, a:31, f:intra_prediction_unit_default_value_hls, v:log2_width
[ARRAY] adr:286180, bankAdr:277988, aBank:0, d:0, a:94, f:intra_prediction_unit_default_value_hls, v:tab_ipm_Din_A
[ARRAY] adr:286180, bankAdr:277988, aBank:0, d:0, a:253, f:intra_prediction_unit_default_value_hls, v:tab_ipm_Dout_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:95, f:intra_prediction_unit_default_value_hls, v:tab_mvf_pred_flag_row_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:254, f:intra_prediction_unit_default_value_hls, v:tab_mvf_pred_flag_row_Dout_A
[SCALAR] adr:180, bankAdr:4, sBank:13, d:1, a:27, f:intra_prediction_unit_default_value_hls, v:predColBuf_0_i
[SCALAR] adr:180, bankAdr:4, sBank:13, d:0, a:9, f:intra_prediction_unit_default_value_hls, v:predColBuf_0_o
[SCALAR] adr:184, bankAdr:4, sBank:14, d:1, a:28, f:intra_prediction_unit_default_value_hls, v:predColBuf_1_i
[SCALAR] adr:184, bankAdr:4, sBank:14, d:1, a:10, f:intra_prediction_unit_default_value_hls, v:predColBuf_1_o
[SCALAR] adr:188, bankAdr:4, sBank:15, d:1, a:25, f:intra_prediction_unit_default_value_hls, v:predColBuf_2_i
[SCALAR] adr:188, bankAdr:4, sBank:15, d:1, a:8, f:intra_prediction_unit_default_value_hls, v:predColBuf_2_o
[SCALAR] adr:192, bankAdr:4, sBank:16, d:0, a:20, f:intra_prediction_unit_default_value_hls, v:predColBuf_3_i
[SCALAR] adr:192, bankAdr:4, sBank:16, d:0, a:5, f:intra_prediction_unit_default_value_hls, v:predColBuf_3_o
[SCALAR] adr:196, bankAdr:4, sBank:17, d:1, a:20, f:intra_prediction_unit_default_value_hls, v:predColBuf_4_i
[SCALAR] adr:196, bankAdr:4, sBank:17, d:1, a:5, f:intra_prediction_unit_default_value_hls, v:predColBuf_4_o
[SCALAR] adr:200, bankAdr:4, sBank:18, d:0, a:19, f:intra_prediction_unit_default_value_hls, v:predColBuf_5_i
[SCALAR] adr:200, bankAdr:4, sBank:18, d:1, a:5, f:intra_prediction_unit_default_value_hls, v:predColBuf_5_o
[SCALAR] adr:204, bankAdr:4, sBank:19, d:1, a:22, f:intra_prediction_unit_default_value_hls, v:predColBuf_6_i
[SCALAR] adr:204, bankAdr:4, sBank:19, d:1, a:6, f:intra_prediction_unit_default_value_hls, v:predColBuf_6_o
[SCALAR] adr:208, bankAdr:4, sBank:20, d:0, a:21, f:intra_prediction_unit_default_value_hls, v:predColBuf_7_i
[SCALAR] adr:208, bankAdr:4, sBank:20, d:1, a:8, f:intra_prediction_unit_default_value_hls, v:predColBuf_7_o
[SCALAR] adr:212, bankAdr:4, sBank:21, d:0, a:20, f:intra_prediction_unit_default_value_hls, v:predColBuf_8_i
[SCALAR] adr:212, bankAdr:4, sBank:21, d:0, a:9, f:intra_prediction_unit_default_value_hls, v:predColBuf_8_o
[SCALAR] adr:216, bankAdr:4, sBank:22, d:0, a:30, f:intra_prediction_unit_default_value_hls, v:predColBuf_9_i
[SCALAR] adr:216, bankAdr:4, sBank:22, d:0, a:9, f:intra_prediction_unit_default_value_hls, v:predColBuf_9_o
[SCALAR] adr:220, bankAdr:4, sBank:23, d:0, a:29, f:intra_prediction_unit_default_value_hls, v:predColBuf_10_i
[SCALAR] adr:220, bankAdr:4, sBank:23, d:0, a:7, f:intra_prediction_unit_default_value_hls, v:predColBuf_10_o
[SCALAR] adr:224, bankAdr:4, sBank:24, d:0, a:24, f:intra_prediction_unit_default_value_hls, v:predColBuf_11_i
[SCALAR] adr:224, bankAdr:4, sBank:24, d:0, a:5, f:intra_prediction_unit_default_value_hls, v:predColBuf_11_o
[SCALAR] adr:228, bankAdr:4, sBank:25, d:0, a:22, f:intra_prediction_unit_default_value_hls, v:predColBuf_12_i
[SCALAR] adr:228, bankAdr:4, sBank:25, d:0, a:5, f:intra_prediction_unit_default_value_hls, v:predColBuf_12_o
[SCALAR] adr:232, bankAdr:4, sBank:26, d:1, a:28, f:intra_prediction_unit_default_value_hls, v:predColBuf_13_i
[SCALAR] adr:232, bankAdr:4, sBank:26, d:0, a:5, f:intra_prediction_unit_default_value_hls, v:predColBuf_13_o
[SCALAR] adr:236, bankAdr:4, sBank:27, d:0, a:24, f:intra_prediction_unit_default_value_hls, v:predColBuf_14_i
[SCALAR] adr:236, bankAdr:4, sBank:27, d:1, a:10, f:intra_prediction_unit_default_value_hls, v:predColBuf_14_o
[SCALAR] adr:240, bankAdr:4, sBank:28, d:0, a:25, f:intra_prediction_unit_default_value_hls, v:predColBuf_15_i
[SCALAR] adr:240, bankAdr:4, sBank:28, d:1, a:5, f:intra_prediction_unit_default_value_hls, v:predColBuf_15_o
[SCALAR] adr:244, bankAdr:4, sBank:29, d:1, a:32, f:intra_prediction_unit_default_value_hls, v:predColBuf_16_i
[SCALAR] adr:244, bankAdr:4, sBank:29, d:0, a:12, f:intra_prediction_unit_default_value_hls, v:predColBuf_16_o
[SCALAR] adr:520, bankAdr:16, sBank:2, d:1, a:19, f:intra_prediction_unit_ex_hls, v:prev_intra_luma_pred_flag_0_i
[SCALAR] adr:520, bankAdr:16, sBank:2, d:1, a:3, f:intra_prediction_unit_ex_hls, v:prev_intra_luma_pred_flag_0_o
[SCALAR] adr:521, bankAdr:17, sBank:2, d:0, a:21, f:intra_prediction_unit_ex_hls, v:prev_intra_luma_pred_flag_1_i
[SCALAR] adr:521, bankAdr:17, sBank:2, d:0, a:4, f:intra_prediction_unit_ex_hls, v:prev_intra_luma_pred_flag_1_o
[SCALAR] adr:522, bankAdr:18, sBank:2, d:1, a:20, f:intra_prediction_unit_ex_hls, v:prev_intra_luma_pred_flag_2_i
[SCALAR] adr:522, bankAdr:18, sBank:2, d:1, a:4, f:intra_prediction_unit_ex_hls, v:prev_intra_luma_pred_flag_2_o
[SCALAR] adr:523, bankAdr:19, sBank:2, d:0, a:22, f:intra_prediction_unit_ex_hls, v:prev_intra_luma_pred_flag_3_i
[SCALAR] adr:523, bankAdr:19, sBank:2, d:0, a:5, f:intra_prediction_unit_ex_hls, v:prev_intra_luma_pred_flag_3_o
[SCALAR] adr:564, bankAdr:16, sBank:13, d:0, a:28, f:intra_prediction_unit_ex_hls, v:part_mode
[SCALAR] adr:396, bankAdr:12, sBank:3, d:1, a:19, f:intra_prediction_unit_ex_hls, v:min_pu_width
[SCALAR] adr:372, bankAdr:8, sBank:29, d:0, a:33, f:intra_prediction_unit_ex_hls, v:log2_min_pu_size
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:30, f:intra_prediction_unit_ex_hls, v:log2_ctb_size
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:28, f:intra_prediction_unit_ex_hls, v:ctb_up_flag
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:23, f:intra_prediction_unit_ex_hls, v:ctb_left_flag
[SCALAR] adr:512, bankAdr:16, sBank:0, d:0, a:31, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_0_i
[SCALAR] adr:512, bankAdr:16, sBank:0, d:0, a:11, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_0_o
[SCALAR] adr:513, bankAdr:17, sBank:0, d:1, a:31, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_1_i
[SCALAR] adr:513, bankAdr:17, sBank:0, d:1, a:11, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_1_o
[SCALAR] adr:514, bankAdr:18, sBank:0, d:0, a:32, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_2_i
[SCALAR] adr:514, bankAdr:18, sBank:0, d:0, a:12, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_2_o
[SCALAR] adr:515, bankAdr:19, sBank:0, d:1, a:32, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_3_i
[SCALAR] adr:515, bankAdr:19, sBank:0, d:1, a:12, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_3_o
[SCALAR] adr:508, bankAdr:12, sBank:31, d:1, a:6, f:intra_prediction_unit_ex_hls, v:pu_chroma_mode_c_0
[SCALAR] adr:509, bankAdr:13, sBank:31, d:0, a:7, f:intra_prediction_unit_ex_hls, v:pu_chroma_mode_c_1
[SCALAR] adr:510, bankAdr:14, sBank:31, d:1, a:7, f:intra_prediction_unit_ex_hls, v:pu_chroma_mode_c_2
[SCALAR] adr:511, bankAdr:15, sBank:31, d:0, a:8, f:intra_prediction_unit_ex_hls, v:pu_chroma_mode_c_3
[SCALAR] adr:516, bankAdr:16, sBank:1, d:0, a:5, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_c_0
[SCALAR] adr:517, bankAdr:17, sBank:1, d:1, a:5, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_c_1
[SCALAR] adr:518, bankAdr:18, sBank:1, d:0, a:6, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_c_2
[SCALAR] adr:519, bankAdr:19, sBank:1, d:1, a:6, f:intra_prediction_unit_ex_hls, v:pu_intra_pred_mode_c_3
[SCALAR] adr:324, bankAdr:8, sBank:17, d:0, a:21, f:intra_prediction_unit_ex_hls, v:chroma_array_type
[SCALAR] adr:576, bankAdr:16, sBank:16, d:1, a:5, f:intra_prediction_unit_ex_hls, v:max_trafo_depth
[SCALAR] adr:384, bankAdr:12, sBank:0, d:0, a:33, f:intra_prediction_unit_ex_hls, v:max_transform_hierarchy_depth_intra
[SCALAR] adr:568, bankAdr:16, sBank:14, d:0, a:29, f:intra_prediction_unit_ex_hls, v:intra_split_flag
[ARRAY] adr:286180, bankAdr:277988, aBank:0, d:0, a:96, f:intra_prediction_unit_ex_hls, v:tab_ipm_Din_A
[ARRAY] adr:286180, bankAdr:277988, aBank:0, d:0, a:255, f:intra_prediction_unit_ex_hls, v:tab_ipm_Dout_A
[SCALAR] adr:552, bankAdr:16, sBank:10, d:1, a:23, f:is_diff_mer_hls, v:xm_x0
[SCALAR] adr:556, bankAdr:16, sBank:11, d:1, a:31, f:is_diff_mer_hls, v:xm_y0
[SCALAR] adr:1236, bankAdr:36, sBank:21, d:1, a:19, f:is_diff_mer_hls, v:xm_log2_parallel_merge_level
[ARRAY] adr:286160, bankAdr:277968, aBank:0, d:0, a:97, f:luma_mc_uni_libx265_hls, v:xcache_null_base_Din_A
[ARRAY] adr:286160, bankAdr:277968, aBank:0, d:0, a:256, f:luma_mc_uni_libx265_hls, v:xcache_null_base_Dout_A
[SCALAR] adr:1556, bankAdr:48, sBank:5, d:1, a:27, f:luma_mc_uni_libx265_hls, v:frame_data_0
[SCALAR] adr:1560, bankAdr:48, sBank:6, d:0, a:35, f:luma_mc_uni_libx265_hls, v:frame_data_1
[SCALAR] adr:1564, bankAdr:48, sBank:7, d:0, a:23, f:luma_mc_uni_libx265_hls, v:frame_data_2
[SCALAR] adr:1568, bankAdr:48, sBank:8, d:0, a:28, f:luma_mc_uni_libx265_hls, v:frame_linesize_0
[SCALAR] adr:1572, bankAdr:48, sBank:9, d:1, a:27, f:luma_mc_uni_libx265_hls, v:frame_linesize_1
[SCALAR] adr:1576, bankAdr:48, sBank:10, d:0, a:24, f:luma_mc_uni_libx265_hls, v:frame_linesize_2
[ARRAY] adr:284944, bankAdr:276752, aBank:0, d:0, a:98, f:luma_mc_uni_libx265_hls, v:refPicList_frame_data_Din_A
[ARRAY] adr:284944, bankAdr:276752, aBank:0, d:0, a:257, f:luma_mc_uni_libx265_hls, v:refPicList_frame_data_Dout_A
[ARRAY] adr:285328, bankAdr:277136, aBank:0, d:0, a:99, f:luma_mc_uni_libx265_hls, v:refPicList_frame_linesize_Din_A
[ARRAY] adr:285328, bankAdr:277136, aBank:0, d:0, a:258, f:luma_mc_uni_libx265_hls, v:refPicList_frame_linesize_Dout_A
[SCALAR] adr:784, bankAdr:24, sBank:4, d:0, a:18, f:luma_mc_uni_libx265_hls, v:current_mv_mv_0_x
[SCALAR] adr:788, bankAdr:24, sBank:5, d:0, a:29, f:luma_mc_uni_libx265_hls, v:current_mv_mv_0_y
[SCALAR] adr:792, bankAdr:24, sBank:6, d:1, a:34, f:luma_mc_uni_libx265_hls, v:current_mv_mv_1_x
[SCALAR] adr:796, bankAdr:24, sBank:7, d:1, a:22, f:luma_mc_uni_libx265_hls, v:current_mv_mv_1_y
[SCALAR] adr:800, bankAdr:24, sBank:8, d:1, a:28, f:luma_mc_uni_libx265_hls, v:current_mv_poc_0
[SCALAR] adr:804, bankAdr:24, sBank:9, d:0, a:28, f:luma_mc_uni_libx265_hls, v:current_mv_poc_1
[SCALAR] adr:808, bankAdr:24, sBank:10, d:1, a:24, f:luma_mc_uni_libx265_hls, v:current_mv_ref_idx_0
[SCALAR] adr:812, bankAdr:24, sBank:11, d:0, a:32, f:luma_mc_uni_libx265_hls, v:current_mv_ref_idx_1
[SCALAR] adr:816, bankAdr:24, sBank:12, d:0, a:31, f:luma_mc_uni_libx265_hls, v:current_mv_pred_flag
[SCALAR] adr:728, bankAdr:20, sBank:22, d:1, a:29, f:luma_mc_uni_libx265_hls, v:ref_idx
[SCALAR] adr:452, bankAdr:12, sBank:17, d:1, a:21, f:luma_mc_uni_libx265_hls, v:slice_type
[SCALAR] adr:1532, bankAdr:44, sBank:31, d:0, a:35, f:luma_mc_uni_libx265_hls, v:weighted_pred_flag
[SCALAR] adr:1536, bankAdr:48, sBank:0, d:1, a:33, f:luma_mc_uni_libx265_hls, v:weighted_bipred_flag
[SCALAR] adr:1144, bankAdr:32, sBank:30, d:0, a:17, f:luma_mc_uni_libx265_hls, v:pixel_shift
[SCALAR] adr:408, bankAdr:12, sBank:6, d:0, a:36, f:luma_mc_uni_libx265_hls, v:width
[SCALAR] adr:332, bankAdr:8, sBank:19, d:0, a:23, f:luma_mc_uni_libx265_hls, v:height
[SCALAR] adr:336, bankAdr:8, sBank:20, d:1, a:21, f:luma_mc_uni_libx265_hls, v:hshift_0
[SCALAR] adr:340, bankAdr:8, sBank:21, d:0, a:21, f:luma_mc_uni_libx265_hls, v:hshift_1
[SCALAR] adr:344, bankAdr:8, sBank:22, d:0, a:31, f:luma_mc_uni_libx265_hls, v:hshift_2
[SCALAR] adr:348, bankAdr:8, sBank:23, d:0, a:30, f:luma_mc_uni_libx265_hls, v:vshift_0
[SCALAR] adr:352, bankAdr:8, sBank:24, d:0, a:25, f:luma_mc_uni_libx265_hls, v:vshift_1
[SCALAR] adr:356, bankAdr:8, sBank:25, d:1, a:21, f:luma_mc_uni_libx265_hls, v:vshift_2
[SCALAR] adr:1524, bankAdr:44, sBank:29, d:1, a:33, f:luma_mc_uni_libx265_hls, v:bit_depth
[SCALAR] adr:1516, bankAdr:44, sBank:27, d:1, a:23, f:luma_mc_uni_libx265_hls, v:luma_log2_weight_denom
[ARRAY] adr:285712, bankAdr:277520, aBank:0, d:0, a:100, f:luma_mc_uni_libx265_hls, v:luma_weight_l0_flag_Din_A
[ARRAY] adr:285712, bankAdr:277520, aBank:0, d:0, a:259, f:luma_mc_uni_libx265_hls, v:luma_weight_l0_flag_Dout_A
[ARRAY] adr:285728, bankAdr:277536, aBank:0, d:0, a:101, f:luma_mc_uni_libx265_hls, v:luma_weight_l1_flag_Din_A
[ARRAY] adr:285728, bankAdr:277536, aBank:0, d:0, a:260, f:luma_mc_uni_libx265_hls, v:luma_weight_l1_flag_Dout_A
[ARRAY] adr:285744, bankAdr:277552, aBank:0, d:0, a:102, f:luma_mc_uni_libx265_hls, v:luma_weight_l0_Din_A
[ARRAY] adr:285744, bankAdr:277552, aBank:0, d:0, a:261, f:luma_mc_uni_libx265_hls, v:luma_weight_l0_Dout_A
[ARRAY] adr:285776, bankAdr:277584, aBank:0, d:0, a:103, f:luma_mc_uni_libx265_hls, v:luma_weight_l1_Din_A
[ARRAY] adr:285776, bankAdr:277584, aBank:0, d:0, a:262, f:luma_mc_uni_libx265_hls, v:luma_weight_l1_Dout_A
[ARRAY] adr:285808, bankAdr:277616, aBank:0, d:0, a:104, f:luma_mc_uni_libx265_hls, v:luma_offset_l0_Din_A
[ARRAY] adr:285808, bankAdr:277616, aBank:0, d:0, a:263, f:luma_mc_uni_libx265_hls, v:luma_offset_l0_Dout_A
[ARRAY] adr:285840, bankAdr:277648, aBank:0, d:0, a:105, f:luma_mc_uni_libx265_hls, v:luma_offset_l1_Din_A
[ARRAY] adr:285840, bankAdr:277648, aBank:0, d:0, a:264, f:luma_mc_uni_libx265_hls, v:luma_offset_l1_Dout_A
[ARRAY] adr:12304, bankAdr:4112, aBank:0, d:0, a:106, f:luma_mc_uni_libx265_hls, v:edge_buffer_Din_A
[ARRAY] adr:12304, bankAdr:4112, aBank:0, d:0, a:265, f:luma_mc_uni_libx265_hls, v:edge_buffer_Dout_A
[SCALAR] adr:1528, bankAdr:44, sBank:30, d:0, a:4, f:luma_mc_uni_libx265_hls, v:dst_depth
[SCALAR] adr:1444, bankAdr:44, sBank:9, d:1, a:28, f:merge_mode_exit_hls, v:merge_idx
[SCALAR] adr:816, bankAdr:24, sBank:12, d:0, a:10, f:merge_mode_exit_hls, v:current_mv_pred_flag
[SCALAR] adr:784, bankAdr:24, sBank:4, d:1, a:7, f:merge_mode_exit_hls, v:current_mv_mv_0_x
[SCALAR] adr:788, bankAdr:24, sBank:5, d:1, a:13, f:merge_mode_exit_hls, v:current_mv_mv_0_y
[SCALAR] adr:792, bankAdr:24, sBank:6, d:0, a:13, f:merge_mode_exit_hls, v:current_mv_mv_1_x
[SCALAR] adr:796, bankAdr:24, sBank:7, d:1, a:11, f:merge_mode_exit_hls, v:current_mv_mv_1_y
[SCALAR] adr:800, bankAdr:24, sBank:8, d:1, a:13, f:merge_mode_exit_hls, v:current_mv_poc_0
[SCALAR] adr:804, bankAdr:24, sBank:9, d:1, a:13, f:merge_mode_exit_hls, v:current_mv_poc_1
[SCALAR] adr:808, bankAdr:24, sBank:10, d:0, a:11, f:merge_mode_exit_hls, v:current_mv_ref_idx_0
[SCALAR] adr:812, bankAdr:24, sBank:11, d:1, a:8, f:merge_mode_exit_hls, v:current_mv_ref_idx_1
[SCALAR] adr:1300, bankAdr:40, sBank:5, d:1, a:28, f:merge_mode_exit_hls, v:mergecand_list_mv0_x_0
[SCALAR] adr:1302, bankAdr:42, sBank:5, d:0, a:30, f:merge_mode_exit_hls, v:mergecand_list_mv0_x_1
[SCALAR] adr:1304, bankAdr:40, sBank:6, d:1, a:35, f:merge_mode_exit_hls, v:mergecand_list_mv0_x_2
[SCALAR] adr:1306, bankAdr:42, sBank:6, d:0, a:37, f:merge_mode_exit_hls, v:mergecand_list_mv0_x_3
[SCALAR] adr:1308, bankAdr:40, sBank:7, d:0, a:24, f:merge_mode_exit_hls, v:mergecand_list_mv0_x_4
[SCALAR] adr:1312, bankAdr:40, sBank:8, d:0, a:29, f:merge_mode_exit_hls, v:mergecand_list_mv0_y_0
[SCALAR] adr:1314, bankAdr:42, sBank:8, d:1, a:29, f:merge_mode_exit_hls, v:mergecand_list_mv0_y_1
[SCALAR] adr:1316, bankAdr:40, sBank:9, d:0, a:29, f:merge_mode_exit_hls, v:mergecand_list_mv0_y_2
[SCALAR] adr:1318, bankAdr:42, sBank:9, d:1, a:29, f:merge_mode_exit_hls, v:mergecand_list_mv0_y_3
[SCALAR] adr:1320, bankAdr:40, sBank:10, d:0, a:25, f:merge_mode_exit_hls, v:mergecand_list_mv0_y_4
[SCALAR] adr:1324, bankAdr:40, sBank:11, d:1, a:32, f:merge_mode_exit_hls, v:mergecand_list_mv1_x_0
[SCALAR] adr:1326, bankAdr:42, sBank:11, d:0, a:33, f:merge_mode_exit_hls, v:mergecand_list_mv1_x_1
[SCALAR] adr:1328, bankAdr:40, sBank:12, d:1, a:30, f:merge_mode_exit_hls, v:mergecand_list_mv1_x_2
[SCALAR] adr:1330, bankAdr:42, sBank:12, d:0, a:32, f:merge_mode_exit_hls, v:mergecand_list_mv1_x_3
[SCALAR] adr:1332, bankAdr:40, sBank:13, d:1, a:28, f:merge_mode_exit_hls, v:mergecand_list_mv1_x_4
[SCALAR] adr:1336, bankAdr:40, sBank:14, d:1, a:29, f:merge_mode_exit_hls, v:mergecand_list_mv1_y_0
[SCALAR] adr:1338, bankAdr:42, sBank:14, d:0, a:30, f:merge_mode_exit_hls, v:mergecand_list_mv1_y_1
[SCALAR] adr:1340, bankAdr:40, sBank:15, d:0, a:26, f:merge_mode_exit_hls, v:mergecand_list_mv1_y_2
[SCALAR] adr:1342, bankAdr:42, sBank:15, d:1, a:26, f:merge_mode_exit_hls, v:mergecand_list_mv1_y_3
[SCALAR] adr:1344, bankAdr:40, sBank:16, d:1, a:19, f:merge_mode_exit_hls, v:mergecand_list_mv1_y_4
[SCALAR] adr:1348, bankAdr:40, sBank:17, d:0, a:22, f:merge_mode_exit_hls, v:mergecand_list_poc0_0
[SCALAR] adr:1352, bankAdr:40, sBank:18, d:1, a:18, f:merge_mode_exit_hls, v:mergecand_list_poc0_1
[SCALAR] adr:1356, bankAdr:40, sBank:19, d:1, a:23, f:merge_mode_exit_hls, v:mergecand_list_poc0_2
[SCALAR] adr:1360, bankAdr:40, sBank:20, d:0, a:22, f:merge_mode_exit_hls, v:mergecand_list_poc0_3
[SCALAR] adr:1364, bankAdr:40, sBank:21, d:1, a:20, f:merge_mode_exit_hls, v:mergecand_list_poc0_4
[SCALAR] adr:1368, bankAdr:40, sBank:22, d:1, a:30, f:merge_mode_exit_hls, v:mergecand_list_poc1_0
[SCALAR] adr:1372, bankAdr:40, sBank:23, d:1, a:29, f:merge_mode_exit_hls, v:mergecand_list_poc1_1
[SCALAR] adr:1376, bankAdr:40, sBank:24, d:1, a:24, f:merge_mode_exit_hls, v:mergecand_list_poc1_2
[SCALAR] adr:1380, bankAdr:40, sBank:25, d:0, a:23, f:merge_mode_exit_hls, v:mergecand_list_poc1_3
[SCALAR] adr:1384, bankAdr:40, sBank:26, d:1, a:29, f:merge_mode_exit_hls, v:mergecand_list_poc1_4
[SCALAR] adr:1388, bankAdr:40, sBank:27, d:0, a:25, f:merge_mode_exit_hls, v:mergecand_list_ref_idx0_0
[SCALAR] adr:1389, bankAdr:41, sBank:27, d:1, a:24, f:merge_mode_exit_hls, v:mergecand_list_ref_idx0_1
[SCALAR] adr:1390, bankAdr:42, sBank:27, d:0, a:26, f:merge_mode_exit_hls, v:mergecand_list_ref_idx0_2
[SCALAR] adr:1391, bankAdr:43, sBank:27, d:1, a:25, f:merge_mode_exit_hls, v:mergecand_list_ref_idx0_3
[SCALAR] adr:1392, bankAdr:40, sBank:28, d:1, a:25, f:merge_mode_exit_hls, v:mergecand_list_ref_idx0_4
[SCALAR] adr:1396, bankAdr:40, sBank:29, d:0, a:34, f:merge_mode_exit_hls, v:mergecand_list_ref_idx1_0
[SCALAR] adr:1397, bankAdr:41, sBank:29, d:1, a:34, f:merge_mode_exit_hls, v:mergecand_list_ref_idx1_1
[SCALAR] adr:1398, bankAdr:42, sBank:29, d:0, a:35, f:merge_mode_exit_hls, v:mergecand_list_ref_idx1_2
[SCALAR] adr:1399, bankAdr:43, sBank:29, d:1, a:35, f:merge_mode_exit_hls, v:mergecand_list_ref_idx1_3
[SCALAR] adr:1400, bankAdr:40, sBank:30, d:1, a:17, f:merge_mode_exit_hls, v:mergecand_list_ref_idx1_4
[SCALAR] adr:1404, bankAdr:40, sBank:31, d:1, a:34, f:merge_mode_exit_hls, v:mergecand_list_pred_flag_0_i
[SCALAR] adr:1404, bankAdr:40, sBank:31, d:1, a:8, f:merge_mode_exit_hls, v:mergecand_list_pred_flag_0_o
[SCALAR] adr:1405, bankAdr:41, sBank:31, d:0, a:36, f:merge_mode_exit_hls, v:mergecand_list_pred_flag_1_i
[SCALAR] adr:1405, bankAdr:41, sBank:31, d:0, a:9, f:merge_mode_exit_hls, v:mergecand_list_pred_flag_1_o
[SCALAR] adr:1406, bankAdr:42, sBank:31, d:1, a:35, f:merge_mode_exit_hls, v:mergecand_list_pred_flag_2_i
[SCALAR] adr:1406, bankAdr:42, sBank:31, d:1, a:9, f:merge_mode_exit_hls, v:mergecand_list_pred_flag_2_o
[SCALAR] adr:1407, bankAdr:43, sBank:31, d:0, a:37, f:merge_mode_exit_hls, v:mergecand_list_pred_flag_3_i
[SCALAR] adr:1407, bankAdr:43, sBank:31, d:0, a:10, f:merge_mode_exit_hls, v:mergecand_list_pred_flag_3_o
[SCALAR] adr:1408, bankAdr:44, sBank:0, d:0, a:34, f:merge_mode_exit_hls, v:mergecand_list_pred_flag_4_i
[SCALAR] adr:1408, bankAdr:44, sBank:0, d:0, a:13, f:merge_mode_exit_hls, v:mergecand_list_pred_flag_4_o
[SCALAR] adr:172, bankAdr:4, sBank:11, d:1, a:33, f:mv_mp_mode_mx_hls, v:log2_width
[SCALAR] adr:396, bankAdr:12, sBank:3, d:0, a:21, f:mv_mp_mode_mx_hls, v:min_pu_width
[SCALAR] adr:372, bankAdr:8, sBank:29, d:0, a:36, f:mv_mp_mode_mx_hls, v:log2_min_pu_size
[SCALAR] adr:1212, bankAdr:36, sBank:15, d:0, a:9, f:mv_mp_mode_mx_hls, v:mxx_x
[SCALAR] adr:1216, bankAdr:36, sBank:16, d:0, a:6, f:mv_mp_mode_mx_hls, v:mxx_y
[ARRAY] adr:286240, bankAdr:278048, aBank:0, d:0, a:107, f:mv_mp_mode_mx_hls, v:tab_mvf_mv_0_x_Din_A
[ARRAY] adr:286240, bankAdr:278048, aBank:0, d:0, a:266, f:mv_mp_mode_mx_hls, v:tab_mvf_mv_0_x_Dout_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:108, f:mv_mp_mode_mx_hls, v:tab_mvf_mv_0_y_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:267, f:mv_mp_mode_mx_hls, v:tab_mvf_mv_0_y_Dout_A
[ARRAY] adr:286248, bankAdr:278056, aBank:0, d:0, a:109, f:mv_mp_mode_mx_hls, v:tab_mvf_mv_1_x_Din_A
[ARRAY] adr:286248, bankAdr:278056, aBank:0, d:0, a:268, f:mv_mp_mode_mx_hls, v:tab_mvf_mv_1_x_Dout_A
[ARRAY] adr:286252, bankAdr:278060, aBank:0, d:0, a:110, f:mv_mp_mode_mx_hls, v:tab_mvf_mv_1_y_Din_A
[ARRAY] adr:286252, bankAdr:278060, aBank:0, d:0, a:269, f:mv_mp_mode_mx_hls, v:tab_mvf_mv_1_y_Dout_A
[ARRAY] adr:286256, bankAdr:278064, aBank:0, d:0, a:111, f:mv_mp_mode_mx_hls, v:tab_mvf_poc_0_Din_A
[ARRAY] adr:286256, bankAdr:278064, aBank:0, d:0, a:270, f:mv_mp_mode_mx_hls, v:tab_mvf_poc_0_Dout_A
[ARRAY] adr:286260, bankAdr:278068, aBank:0, d:0, a:112, f:mv_mp_mode_mx_hls, v:tab_mvf_poc_1_Din_A
[ARRAY] adr:286260, bankAdr:278068, aBank:0, d:0, a:271, f:mv_mp_mode_mx_hls, v:tab_mvf_poc_1_Dout_A
[ARRAY] adr:286264, bankAdr:278072, aBank:0, d:0, a:113, f:mv_mp_mode_mx_hls, v:tab_mvf_ref_idx_0_Din_A
[ARRAY] adr:286264, bankAdr:278072, aBank:0, d:0, a:272, f:mv_mp_mode_mx_hls, v:tab_mvf_ref_idx_0_Dout_A
[ARRAY] adr:286268, bankAdr:278076, aBank:0, d:0, a:114, f:mv_mp_mode_mx_hls, v:tab_mvf_ref_idx_1_Din_A
[ARRAY] adr:286268, bankAdr:278076, aBank:0, d:0, a:273, f:mv_mp_mode_mx_hls, v:tab_mvf_ref_idx_1_Dout_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:115, f:mv_mp_mode_mx_hls, v:tab_mvf_pred_flag_row_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:274, f:mv_mp_mode_mx_hls, v:tab_mvf_pred_flag_row_Dout_A
[SCALAR] adr:172, bankAdr:4, sBank:11, d:0, a:34, f:mv_mp_mode_mx_lt_hls, v:log2_width
[SCALAR] adr:396, bankAdr:12, sBank:3, d:1, a:20, f:mv_mp_mode_mx_lt_hls, v:min_pu_width
[SCALAR] adr:372, bankAdr:8, sBank:29, d:1, a:36, f:mv_mp_mode_mx_lt_hls, v:log2_min_pu_size
[SCALAR] adr:1548, bankAdr:48, sBank:3, d:0, a:22, f:mv_mp_mode_mx_lt_hls, v:poc
[ARRAY] adr:286216, bankAdr:278024, aBank:0, d:0, a:116, f:mv_mp_mode_mx_lt_hls, v:refPicList_0_isLongTerm_Din_A
[ARRAY] adr:286216, bankAdr:278024, aBank:0, d:0, a:275, f:mv_mp_mode_mx_lt_hls, v:refPicList_0_isLongTerm_Dout_A
[ARRAY] adr:286220, bankAdr:278028, aBank:0, d:0, a:117, f:mv_mp_mode_mx_lt_hls, v:refPicList_1_isLongTerm_Din_A
[ARRAY] adr:286220, bankAdr:278028, aBank:0, d:0, a:276, f:mv_mp_mode_mx_lt_hls, v:refPicList_1_isLongTerm_Dout_A
[SCALAR] adr:1212, bankAdr:36, sBank:15, d:1, a:9, f:mv_mp_mode_mx_lt_hls, v:mxx_x
[SCALAR] adr:1216, bankAdr:36, sBank:16, d:1, a:6, f:mv_mp_mode_mx_lt_hls, v:mxx_y
[ARRAY] adr:286240, bankAdr:278048, aBank:0, d:0, a:118, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_mv_0_x_Din_A
[ARRAY] adr:286240, bankAdr:278048, aBank:0, d:0, a:277, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_mv_0_x_Dout_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:119, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_mv_0_y_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:278, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_mv_0_y_Dout_A
[ARRAY] adr:286248, bankAdr:278056, aBank:0, d:0, a:120, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_mv_1_x_Din_A
[ARRAY] adr:286248, bankAdr:278056, aBank:0, d:0, a:279, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_mv_1_x_Dout_A
[ARRAY] adr:286252, bankAdr:278060, aBank:0, d:0, a:121, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_mv_1_y_Din_A
[ARRAY] adr:286252, bankAdr:278060, aBank:0, d:0, a:280, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_mv_1_y_Dout_A
[ARRAY] adr:286256, bankAdr:278064, aBank:0, d:0, a:122, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_poc_0_Din_A
[ARRAY] adr:286256, bankAdr:278064, aBank:0, d:0, a:281, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_poc_0_Dout_A
[ARRAY] adr:286260, bankAdr:278068, aBank:0, d:0, a:123, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_poc_1_Din_A
[ARRAY] adr:286260, bankAdr:278068, aBank:0, d:0, a:282, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_poc_1_Dout_A
[ARRAY] adr:286264, bankAdr:278072, aBank:0, d:0, a:124, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_ref_idx_0_Din_A
[ARRAY] adr:286264, bankAdr:278072, aBank:0, d:0, a:283, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_ref_idx_0_Dout_A
[ARRAY] adr:286268, bankAdr:278076, aBank:0, d:0, a:125, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_ref_idx_1_Din_A
[ARRAY] adr:286268, bankAdr:278076, aBank:0, d:0, a:284, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_ref_idx_1_Dout_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:126, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_pred_flag_row_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:285, f:mv_mp_mode_mx_lt_hls, v:tab_mvf_pred_flag_row_Dout_A
[SCALAR] adr:892, bankAdr:24, sBank:31, d:1, a:36, f:sao_param_hls, v:curr_sao_offset_abs_0_0_i
[SCALAR] adr:892, bankAdr:24, sBank:31, d:1, a:10, f:sao_param_hls, v:curr_sao_offset_abs_0_0_o
[SCALAR] adr:893, bankAdr:25, sBank:31, d:0, a:38, f:sao_param_hls, v:curr_sao_offset_abs_0_1_i
[SCALAR] adr:893, bankAdr:25, sBank:31, d:0, a:11, f:sao_param_hls, v:curr_sao_offset_abs_0_1_o
[SCALAR] adr:894, bankAdr:26, sBank:31, d:1, a:37, f:sao_param_hls, v:curr_sao_offset_abs_0_2_i
[SCALAR] adr:894, bankAdr:26, sBank:31, d:1, a:11, f:sao_param_hls, v:curr_sao_offset_abs_0_2_o
[SCALAR] adr:895, bankAdr:27, sBank:31, d:0, a:39, f:sao_param_hls, v:curr_sao_offset_abs_0_3_i
[SCALAR] adr:895, bankAdr:27, sBank:31, d:0, a:12, f:sao_param_hls, v:curr_sao_offset_abs_0_3_o
[SCALAR] adr:896, bankAdr:28, sBank:0, d:1, a:34, f:sao_param_hls, v:curr_sao_offset_abs_1_0_i
[SCALAR] adr:896, bankAdr:28, sBank:0, d:1, a:13, f:sao_param_hls, v:curr_sao_offset_abs_1_0_o
[SCALAR] adr:897, bankAdr:29, sBank:0, d:0, a:35, f:sao_param_hls, v:curr_sao_offset_abs_1_1_i
[SCALAR] adr:897, bankAdr:29, sBank:0, d:0, a:14, f:sao_param_hls, v:curr_sao_offset_abs_1_1_o
[SCALAR] adr:898, bankAdr:30, sBank:0, d:1, a:35, f:sao_param_hls, v:curr_sao_offset_abs_1_2_i
[SCALAR] adr:898, bankAdr:30, sBank:0, d:1, a:14, f:sao_param_hls, v:curr_sao_offset_abs_1_2_o
[SCALAR] adr:899, bankAdr:31, sBank:0, d:0, a:36, f:sao_param_hls, v:curr_sao_offset_abs_1_3_i
[SCALAR] adr:899, bankAdr:31, sBank:0, d:0, a:15, f:sao_param_hls, v:curr_sao_offset_abs_1_3_o
[SCALAR] adr:900, bankAdr:28, sBank:1, d:1, a:28, f:sao_param_hls, v:curr_sao_offset_abs_2_0_i
[SCALAR] adr:900, bankAdr:28, sBank:1, d:0, a:7, f:sao_param_hls, v:curr_sao_offset_abs_2_0_o
[SCALAR] adr:901, bankAdr:29, sBank:1, d:0, a:29, f:sao_param_hls, v:curr_sao_offset_abs_2_1_i
[SCALAR] adr:901, bankAdr:29, sBank:1, d:1, a:7, f:sao_param_hls, v:curr_sao_offset_abs_2_1_o
[SCALAR] adr:902, bankAdr:30, sBank:1, d:1, a:29, f:sao_param_hls, v:curr_sao_offset_abs_2_2_i
[SCALAR] adr:902, bankAdr:30, sBank:1, d:0, a:8, f:sao_param_hls, v:curr_sao_offset_abs_2_2_o
[SCALAR] adr:903, bankAdr:31, sBank:1, d:0, a:30, f:sao_param_hls, v:curr_sao_offset_abs_2_3_i
[SCALAR] adr:903, bankAdr:31, sBank:1, d:1, a:8, f:sao_param_hls, v:curr_sao_offset_abs_2_3_o
[SCALAR] adr:904, bankAdr:28, sBank:2, d:1, a:21, f:sao_param_hls, v:curr_sao_offset_sign_0_0_i
[SCALAR] adr:904, bankAdr:28, sBank:2, d:1, a:5, f:sao_param_hls, v:curr_sao_offset_sign_0_0_o
[SCALAR] adr:905, bankAdr:29, sBank:2, d:0, a:23, f:sao_param_hls, v:curr_sao_offset_sign_0_1_i
[SCALAR] adr:905, bankAdr:29, sBank:2, d:0, a:6, f:sao_param_hls, v:curr_sao_offset_sign_0_1_o
[SCALAR] adr:906, bankAdr:30, sBank:2, d:1, a:22, f:sao_param_hls, v:curr_sao_offset_sign_0_2_i
[SCALAR] adr:906, bankAdr:30, sBank:2, d:1, a:6, f:sao_param_hls, v:curr_sao_offset_sign_0_2_o
[SCALAR] adr:907, bankAdr:31, sBank:2, d:0, a:24, f:sao_param_hls, v:curr_sao_offset_sign_0_3_i
[SCALAR] adr:907, bankAdr:31, sBank:2, d:0, a:7, f:sao_param_hls, v:curr_sao_offset_sign_0_3_o
[SCALAR] adr:908, bankAdr:28, sBank:3, d:1, a:21, f:sao_param_hls, v:curr_sao_offset_sign_1_0_i
[SCALAR] adr:908, bankAdr:28, sBank:3, d:1, a:4, f:sao_param_hls, v:curr_sao_offset_sign_1_0_o
[SCALAR] adr:909, bankAdr:29, sBank:3, d:0, a:23, f:sao_param_hls, v:curr_sao_offset_sign_1_1_i
[SCALAR] adr:909, bankAdr:29, sBank:3, d:0, a:5, f:sao_param_hls, v:curr_sao_offset_sign_1_1_o
[SCALAR] adr:910, bankAdr:30, sBank:3, d:1, a:22, f:sao_param_hls, v:curr_sao_offset_sign_1_2_i
[SCALAR] adr:910, bankAdr:30, sBank:3, d:1, a:5, f:sao_param_hls, v:curr_sao_offset_sign_1_2_o
[SCALAR] adr:911, bankAdr:31, sBank:3, d:0, a:24, f:sao_param_hls, v:curr_sao_offset_sign_1_3_i
[SCALAR] adr:911, bankAdr:31, sBank:3, d:0, a:6, f:sao_param_hls, v:curr_sao_offset_sign_1_3_o
[SCALAR] adr:912, bankAdr:28, sBank:4, d:1, a:18, f:sao_param_hls, v:curr_sao_offset_sign_2_0_i
[SCALAR] adr:912, bankAdr:28, sBank:4, d:0, a:8, f:sao_param_hls, v:curr_sao_offset_sign_2_0_o
[SCALAR] adr:913, bankAdr:29, sBank:4, d:0, a:19, f:sao_param_hls, v:curr_sao_offset_sign_2_1_i
[SCALAR] adr:913, bankAdr:29, sBank:4, d:1, a:8, f:sao_param_hls, v:curr_sao_offset_sign_2_1_o
[SCALAR] adr:914, bankAdr:30, sBank:4, d:1, a:19, f:sao_param_hls, v:curr_sao_offset_sign_2_2_i
[SCALAR] adr:914, bankAdr:30, sBank:4, d:0, a:9, f:sao_param_hls, v:curr_sao_offset_sign_2_2_o
[SCALAR] adr:915, bankAdr:31, sBank:4, d:0, a:20, f:sao_param_hls, v:curr_sao_offset_sign_2_3_i
[SCALAR] adr:915, bankAdr:31, sBank:4, d:1, a:9, f:sao_param_hls, v:curr_sao_offset_sign_2_3_o
[SCALAR] adr:916, bankAdr:28, sBank:5, d:0, a:14, f:sao_param_hls, v:curr_sao_band_position_0
[SCALAR] adr:917, bankAdr:29, sBank:5, d:1, a:14, f:sao_param_hls, v:curr_sao_band_position_1
[SCALAR] adr:918, bankAdr:30, sBank:5, d:0, a:15, f:sao_param_hls, v:curr_sao_band_position_2
[SCALAR] adr:920, bankAdr:28, sBank:6, d:1, a:13, f:sao_param_hls, v:curr_sao_offset_val_0_0
[SCALAR] adr:922, bankAdr:30, sBank:6, d:1, a:36, f:sao_param_hls, v:curr_sao_offset_val_0_1_i
[SCALAR] adr:922, bankAdr:30, sBank:6, d:0, a:14, f:sao_param_hls, v:curr_sao_offset_val_0_1_o
[SCALAR] adr:924, bankAdr:28, sBank:7, d:1, a:23, f:sao_param_hls, v:curr_sao_offset_val_0_2_i
[SCALAR] adr:924, bankAdr:28, sBank:7, d:0, a:12, f:sao_param_hls, v:curr_sao_offset_val_0_2_o
[SCALAR] adr:926, bankAdr:30, sBank:7, d:0, a:25, f:sao_param_hls, v:curr_sao_offset_val_0_3_i
[SCALAR] adr:926, bankAdr:30, sBank:7, d:1, a:12, f:sao_param_hls, v:curr_sao_offset_val_0_3_o
[SCALAR] adr:928, bankAdr:28, sBank:8, d:0, a:30, f:sao_param_hls, v:curr_sao_offset_val_0_4_i
[SCALAR] adr:928, bankAdr:28, sBank:8, d:0, a:14, f:sao_param_hls, v:curr_sao_offset_val_0_4_o
[SCALAR] adr:930, bankAdr:30, sBank:8, d:1, a:14, f:sao_param_hls, v:curr_sao_offset_val_1_0
[SCALAR] adr:932, bankAdr:28, sBank:9, d:0, a:30, f:sao_param_hls, v:curr_sao_offset_val_1_1_i
[SCALAR] adr:932, bankAdr:28, sBank:9, d:0, a:14, f:sao_param_hls, v:curr_sao_offset_val_1_1_o
[SCALAR] adr:934, bankAdr:30, sBank:9, d:1, a:30, f:sao_param_hls, v:curr_sao_offset_val_1_2_i
[SCALAR] adr:934, bankAdr:30, sBank:9, d:1, a:14, f:sao_param_hls, v:curr_sao_offset_val_1_2_o
[SCALAR] adr:936, bankAdr:28, sBank:10, d:1, a:25, f:sao_param_hls, v:curr_sao_offset_val_1_3_i
[SCALAR] adr:936, bankAdr:28, sBank:10, d:1, a:11, f:sao_param_hls, v:curr_sao_offset_val_1_3_o
[SCALAR] adr:938, bankAdr:30, sBank:10, d:0, a:26, f:sao_param_hls, v:curr_sao_offset_val_1_4_i
[SCALAR] adr:938, bankAdr:30, sBank:10, d:0, a:12, f:sao_param_hls, v:curr_sao_offset_val_1_4_o
[SCALAR] adr:940, bankAdr:28, sBank:11, d:0, a:9, f:sao_param_hls, v:curr_sao_offset_val_2_0
[SCALAR] adr:942, bankAdr:30, sBank:11, d:1, a:34, f:sao_param_hls, v:curr_sao_offset_val_2_1_i
[SCALAR] adr:942, bankAdr:30, sBank:11, d:1, a:9, f:sao_param_hls, v:curr_sao_offset_val_2_1_o
[SCALAR] adr:944, bankAdr:28, sBank:12, d:1, a:31, f:sao_param_hls, v:curr_sao_offset_val_2_2_i
[SCALAR] adr:944, bankAdr:28, sBank:12, d:1, a:10, f:sao_param_hls, v:curr_sao_offset_val_2_2_o
[SCALAR] adr:946, bankAdr:30, sBank:12, d:0, a:33, f:sao_param_hls, v:curr_sao_offset_val_2_3_i
[SCALAR] adr:946, bankAdr:30, sBank:12, d:0, a:11, f:sao_param_hls, v:curr_sao_offset_val_2_3_o
[SCALAR] adr:948, bankAdr:28, sBank:13, d:0, a:29, f:sao_param_hls, v:curr_sao_offset_val_2_4_i
[SCALAR] adr:948, bankAdr:28, sBank:13, d:1, a:9, f:sao_param_hls, v:curr_sao_offset_val_2_4_o
[SCALAR] adr:952, bankAdr:28, sBank:14, d:0, a:11, f:sao_param_hls, v:curr_sao_eo_class_0
[SCALAR] adr:953, bankAdr:29, sBank:14, d:1, a:30, f:sao_param_hls, v:curr_sao_eo_class_1_i
[SCALAR] adr:953, bankAdr:29, sBank:14, d:1, a:11, f:sao_param_hls, v:curr_sao_eo_class_1_o
[SCALAR] adr:954, bankAdr:30, sBank:14, d:0, a:12, f:sao_param_hls, v:curr_sao_eo_class_2
[SCALAR] adr:956, bankAdr:28, sBank:15, d:0, a:27, f:sao_param_hls, v:curr_sao_type_idx_0_i
[SCALAR] adr:956, bankAdr:28, sBank:15, d:0, a:10, f:sao_param_hls, v:curr_sao_type_idx_0_o
[SCALAR] adr:957, bankAdr:29, sBank:15, d:1, a:27, f:sao_param_hls, v:curr_sao_type_idx_1_i
[SCALAR] adr:957, bankAdr:29, sBank:15, d:1, a:10, f:sao_param_hls, v:curr_sao_type_idx_1_o
[SCALAR] adr:958, bankAdr:30, sBank:15, d:0, a:28, f:sao_param_hls, v:curr_sao_type_idx_2_i
[SCALAR] adr:958, bankAdr:30, sBank:15, d:0, a:11, f:sao_param_hls, v:curr_sao_type_idx_2_o
[SCALAR] adr:960, bankAdr:28, sBank:16, d:0, a:7, f:sao_param_hls, v:curr_sao_sao_merge_left_flag
[SCALAR] adr:964, bankAdr:28, sBank:17, d:0, a:6, f:sao_param_hls, v:curr_sao_sao_merge_up_flag
[SCALAR] adr:968, bankAdr:28, sBank:18, d:0, a:20, f:sao_param_hls, v:left_sao_offset_abs_0_0
[SCALAR] adr:969, bankAdr:29, sBank:18, d:1, a:19, f:sao_param_hls, v:left_sao_offset_abs_0_1
[SCALAR] adr:970, bankAdr:30, sBank:18, d:0, a:21, f:sao_param_hls, v:left_sao_offset_abs_0_2
[SCALAR] adr:971, bankAdr:31, sBank:18, d:1, a:20, f:sao_param_hls, v:left_sao_offset_abs_0_3
[SCALAR] adr:972, bankAdr:28, sBank:19, d:0, a:24, f:sao_param_hls, v:left_sao_offset_abs_1_0
[SCALAR] adr:973, bankAdr:29, sBank:19, d:1, a:24, f:sao_param_hls, v:left_sao_offset_abs_1_1
[SCALAR] adr:974, bankAdr:30, sBank:19, d:0, a:25, f:sao_param_hls, v:left_sao_offset_abs_1_2
[SCALAR] adr:975, bankAdr:31, sBank:19, d:1, a:25, f:sao_param_hls, v:left_sao_offset_abs_1_3
[SCALAR] adr:976, bankAdr:28, sBank:20, d:1, a:22, f:sao_param_hls, v:left_sao_offset_abs_2_0
[SCALAR] adr:977, bankAdr:29, sBank:20, d:0, a:23, f:sao_param_hls, v:left_sao_offset_abs_2_1
[SCALAR] adr:978, bankAdr:30, sBank:20, d:1, a:23, f:sao_param_hls, v:left_sao_offset_abs_2_2
[SCALAR] adr:979, bankAdr:31, sBank:20, d:0, a:24, f:sao_param_hls, v:left_sao_offset_abs_2_3
[SCALAR] adr:980, bankAdr:28, sBank:21, d:0, a:22, f:sao_param_hls, v:left_sao_offset_sign_0_0
[SCALAR] adr:981, bankAdr:29, sBank:21, d:1, a:21, f:sao_param_hls, v:left_sao_offset_sign_0_1
[SCALAR] adr:982, bankAdr:30, sBank:21, d:0, a:23, f:sao_param_hls, v:left_sao_offset_sign_0_2
[SCALAR] adr:983, bankAdr:31, sBank:21, d:1, a:22, f:sao_param_hls, v:left_sao_offset_sign_0_3
[SCALAR] adr:984, bankAdr:28, sBank:22, d:0, a:32, f:sao_param_hls, v:left_sao_offset_sign_1_0
[SCALAR] adr:985, bankAdr:29, sBank:22, d:1, a:31, f:sao_param_hls, v:left_sao_offset_sign_1_1
[SCALAR] adr:986, bankAdr:30, sBank:22, d:0, a:33, f:sao_param_hls, v:left_sao_offset_sign_1_2
[SCALAR] adr:987, bankAdr:31, sBank:22, d:1, a:32, f:sao_param_hls, v:left_sao_offset_sign_1_3
[SCALAR] adr:988, bankAdr:28, sBank:23, d:0, a:31, f:sao_param_hls, v:left_sao_offset_sign_2_0
[SCALAR] adr:989, bankAdr:29, sBank:23, d:1, a:30, f:sao_param_hls, v:left_sao_offset_sign_2_1
[SCALAR] adr:990, bankAdr:30, sBank:23, d:0, a:32, f:sao_param_hls, v:left_sao_offset_sign_2_2
[SCALAR] adr:991, bankAdr:31, sBank:23, d:1, a:31, f:sao_param_hls, v:left_sao_offset_sign_2_3
[SCALAR] adr:992, bankAdr:28, sBank:24, d:0, a:26, f:sao_param_hls, v:left_sao_band_position_0
[SCALAR] adr:993, bankAdr:29, sBank:24, d:1, a:25, f:sao_param_hls, v:left_sao_band_position_1
[SCALAR] adr:994, bankAdr:30, sBank:24, d:0, a:27, f:sao_param_hls, v:left_sao_band_position_2
[SCALAR] adr:996, bankAdr:28, sBank:25, d:1, a:22, f:sao_param_hls, v:left_sao_offset_val_0_0
[SCALAR] adr:998, bankAdr:30, sBank:25, d:0, a:24, f:sao_param_hls, v:left_sao_offset_val_0_1
[SCALAR] adr:1000, bankAdr:28, sBank:26, d:0, a:31, f:sao_param_hls, v:left_sao_offset_val_0_2
[SCALAR] adr:1002, bankAdr:30, sBank:26, d:1, a:30, f:sao_param_hls, v:left_sao_offset_val_0_3
[SCALAR] adr:1004, bankAdr:28, sBank:27, d:0, a:27, f:sao_param_hls, v:left_sao_offset_val_0_4
[SCALAR] adr:1006, bankAdr:30, sBank:27, d:1, a:26, f:sao_param_hls, v:left_sao_offset_val_1_0
[SCALAR] adr:1008, bankAdr:28, sBank:28, d:0, a:26, f:sao_param_hls, v:left_sao_offset_val_1_1
[SCALAR] adr:1010, bankAdr:30, sBank:28, d:1, a:26, f:sao_param_hls, v:left_sao_offset_val_1_2
[SCALAR] adr:1012, bankAdr:28, sBank:29, d:0, a:37, f:sao_param_hls, v:left_sao_offset_val_1_3
[SCALAR] adr:1014, bankAdr:30, sBank:29, d:1, a:37, f:sao_param_hls, v:left_sao_offset_val_1_4
[SCALAR] adr:1016, bankAdr:28, sBank:30, d:0, a:18, f:sao_param_hls, v:left_sao_offset_val_2_0
[SCALAR] adr:1018, bankAdr:30, sBank:30, d:1, a:18, f:sao_param_hls, v:left_sao_offset_val_2_1
[SCALAR] adr:1020, bankAdr:28, sBank:31, d:1, a:38, f:sao_param_hls, v:left_sao_offset_val_2_2
[SCALAR] adr:1022, bankAdr:30, sBank:31, d:0, a:40, f:sao_param_hls, v:left_sao_offset_val_2_3
[SCALAR] adr:1024, bankAdr:32, sBank:0, d:1, a:36, f:sao_param_hls, v:left_sao_offset_val_2_4
[SCALAR] adr:1028, bankAdr:32, sBank:1, d:1, a:30, f:sao_param_hls, v:left_sao_eo_class_0
[SCALAR] adr:1029, bankAdr:33, sBank:1, d:0, a:31, f:sao_param_hls, v:left_sao_eo_class_1
[SCALAR] adr:1030, bankAdr:34, sBank:1, d:1, a:31, f:sao_param_hls, v:left_sao_eo_class_2
[SCALAR] adr:1032, bankAdr:32, sBank:2, d:1, a:23, f:sao_param_hls, v:left_sao_type_idx_0
[SCALAR] adr:1033, bankAdr:33, sBank:2, d:0, a:25, f:sao_param_hls, v:left_sao_type_idx_1
[SCALAR] adr:1034, bankAdr:34, sBank:2, d:1, a:24, f:sao_param_hls, v:left_sao_type_idx_2
[SCALAR] adr:1036, bankAdr:32, sBank:3, d:1, a:23, f:sao_param_hls, v:left_sao_sao_merge_left_flag
[SCALAR] adr:1040, bankAdr:32, sBank:4, d:1, a:20, f:sao_param_hls, v:left_sao_sao_merge_up_flag
[SCALAR] adr:1044, bankAdr:32, sBank:5, d:1, a:29, f:sao_param_hls, v:up_sao_offset_abs_0_0
[SCALAR] adr:1045, bankAdr:33, sBank:5, d:0, a:31, f:sao_param_hls, v:up_sao_offset_abs_0_1
[SCALAR] adr:1046, bankAdr:34, sBank:5, d:1, a:30, f:sao_param_hls, v:up_sao_offset_abs_0_2
[SCALAR] adr:1047, bankAdr:35, sBank:5, d:0, a:32, f:sao_param_hls, v:up_sao_offset_abs_0_3
[SCALAR] adr:1048, bankAdr:32, sBank:6, d:0, a:38, f:sao_param_hls, v:up_sao_offset_abs_1_0
[SCALAR] adr:1049, bankAdr:33, sBank:6, d:1, a:37, f:sao_param_hls, v:up_sao_offset_abs_1_1
[SCALAR] adr:1050, bankAdr:34, sBank:6, d:0, a:39, f:sao_param_hls, v:up_sao_offset_abs_1_2
[SCALAR] adr:1051, bankAdr:35, sBank:6, d:1, a:38, f:sao_param_hls, v:up_sao_offset_abs_1_3
[SCALAR] adr:1052, bankAdr:32, sBank:7, d:1, a:24, f:sao_param_hls, v:up_sao_offset_abs_2_0
[SCALAR] adr:1053, bankAdr:33, sBank:7, d:0, a:26, f:sao_param_hls, v:up_sao_offset_abs_2_1
[SCALAR] adr:1054, bankAdr:34, sBank:7, d:1, a:25, f:sao_param_hls, v:up_sao_offset_abs_2_2
[SCALAR] adr:1055, bankAdr:35, sBank:7, d:0, a:27, f:sao_param_hls, v:up_sao_offset_abs_2_3
[SCALAR] adr:1056, bankAdr:32, sBank:8, d:1, a:30, f:sao_param_hls, v:up_sao_offset_sign_0_0
[SCALAR] adr:1057, bankAdr:33, sBank:8, d:0, a:31, f:sao_param_hls, v:up_sao_offset_sign_0_1
[SCALAR] adr:1058, bankAdr:34, sBank:8, d:1, a:31, f:sao_param_hls, v:up_sao_offset_sign_0_2
[SCALAR] adr:1059, bankAdr:35, sBank:8, d:0, a:32, f:sao_param_hls, v:up_sao_offset_sign_0_3
[SCALAR] adr:1060, bankAdr:32, sBank:9, d:0, a:31, f:sao_param_hls, v:up_sao_offset_sign_1_0
[SCALAR] adr:1061, bankAdr:33, sBank:9, d:1, a:31, f:sao_param_hls, v:up_sao_offset_sign_1_1
[SCALAR] adr:1062, bankAdr:34, sBank:9, d:0, a:32, f:sao_param_hls, v:up_sao_offset_sign_1_2
[SCALAR] adr:1063, bankAdr:35, sBank:9, d:1, a:32, f:sao_param_hls, v:up_sao_offset_sign_1_3
[SCALAR] adr:1064, bankAdr:32, sBank:10, d:1, a:26, f:sao_param_hls, v:up_sao_offset_sign_2_0
[SCALAR] adr:1065, bankAdr:33, sBank:10, d:0, a:27, f:sao_param_hls, v:up_sao_offset_sign_2_1
[SCALAR] adr:1066, bankAdr:34, sBank:10, d:1, a:27, f:sao_param_hls, v:up_sao_offset_sign_2_2
[SCALAR] adr:1067, bankAdr:35, sBank:10, d:0, a:28, f:sao_param_hls, v:up_sao_offset_sign_2_3
[SCALAR] adr:1068, bankAdr:32, sBank:11, d:0, a:35, f:sao_param_hls, v:up_sao_band_position_0
[SCALAR] adr:1069, bankAdr:33, sBank:11, d:1, a:35, f:sao_param_hls, v:up_sao_band_position_1
[SCALAR] adr:1070, bankAdr:34, sBank:11, d:0, a:36, f:sao_param_hls, v:up_sao_band_position_2
[SCALAR] adr:1072, bankAdr:32, sBank:12, d:1, a:32, f:sao_param_hls, v:up_sao_offset_val_0_0
[SCALAR] adr:1074, bankAdr:34, sBank:12, d:0, a:34, f:sao_param_hls, v:up_sao_offset_val_0_1
[SCALAR] adr:1076, bankAdr:32, sBank:13, d:1, a:29, f:sao_param_hls, v:up_sao_offset_val_0_2
[SCALAR] adr:1078, bankAdr:34, sBank:13, d:0, a:30, f:sao_param_hls, v:up_sao_offset_val_0_3
[SCALAR] adr:1080, bankAdr:32, sBank:14, d:0, a:31, f:sao_param_hls, v:up_sao_offset_val_0_4
[SCALAR] adr:1082, bankAdr:34, sBank:14, d:1, a:31, f:sao_param_hls, v:up_sao_offset_val_1_0
[SCALAR] adr:1084, bankAdr:32, sBank:15, d:1, a:28, f:sao_param_hls, v:up_sao_offset_val_1_1
[SCALAR] adr:1086, bankAdr:34, sBank:15, d:0, a:29, f:sao_param_hls, v:up_sao_offset_val_1_2
[SCALAR] adr:1088, bankAdr:32, sBank:16, d:0, a:21, f:sao_param_hls, v:up_sao_offset_val_1_3
[SCALAR] adr:1090, bankAdr:34, sBank:16, d:1, a:20, f:sao_param_hls, v:up_sao_offset_val_1_4
[SCALAR] adr:1092, bankAdr:32, sBank:17, d:1, a:22, f:sao_param_hls, v:up_sao_offset_val_2_0
[SCALAR] adr:1094, bankAdr:34, sBank:17, d:0, a:23, f:sao_param_hls, v:up_sao_offset_val_2_1
[SCALAR] adr:1096, bankAdr:32, sBank:18, d:0, a:22, f:sao_param_hls, v:up_sao_offset_val_2_2
[SCALAR] adr:1098, bankAdr:34, sBank:18, d:1, a:21, f:sao_param_hls, v:up_sao_offset_val_2_3
[SCALAR] adr:1100, bankAdr:32, sBank:19, d:0, a:26, f:sao_param_hls, v:up_sao_offset_val_2_4
[SCALAR] adr:1104, bankAdr:32, sBank:20, d:1, a:24, f:sao_param_hls, v:up_sao_eo_class_0
[SCALAR] adr:1105, bankAdr:33, sBank:20, d:0, a:25, f:sao_param_hls, v:up_sao_eo_class_1
[SCALAR] adr:1106, bankAdr:34, sBank:20, d:1, a:25, f:sao_param_hls, v:up_sao_eo_class_2
[SCALAR] adr:1108, bankAdr:32, sBank:21, d:0, a:24, f:sao_param_hls, v:up_sao_type_idx_0
[SCALAR] adr:1109, bankAdr:33, sBank:21, d:1, a:23, f:sao_param_hls, v:up_sao_type_idx_1
[SCALAR] adr:1110, bankAdr:34, sBank:21, d:0, a:25, f:sao_param_hls, v:up_sao_type_idx_2
[SCALAR] adr:1112, bankAdr:32, sBank:22, d:0, a:34, f:sao_param_hls, v:up_sao_sao_merge_left_flag
[SCALAR] adr:1116, bankAdr:32, sBank:23, d:0, a:33, f:sao_param_hls, v:up_sao_sao_merge_up_flag
[SCALAR] adr:1288, bankAdr:40, sBank:2, d:0, a:26, f:sao_param_hls, v:slice_sample_adaptive_offset_flag_0
[SCALAR] adr:1289, bankAdr:41, sBank:2, d:1, a:25, f:sao_param_hls, v:slice_sample_adaptive_offset_flag_1
[SCALAR] adr:1290, bankAdr:42, sBank:2, d:0, a:27, f:sao_param_hls, v:slice_sample_adaptive_offset_flag_2
[SCALAR] adr:608, bankAdr:16, sBank:24, d:1, a:26, f:sao_param_hls, v:ctb_left_flag
[SCALAR] adr:604, bankAdr:16, sBank:23, d:1, a:32, f:sao_param_hls, v:ctb_up_flag
[SCALAR] adr:1524, bankAdr:44, sBank:29, d:0, a:38, f:sao_param_hls, v:bit_depth
[SCALAR] adr:372, bankAdr:8, sBank:29, d:1, a:38, f:set_tab_mvf_pred_flag_hls, v:log2_min_pu_size
[SCALAR] adr:396, bankAdr:12, sBank:3, d:0, a:25, f:set_tab_mvf_pred_flag_hls, v:min_pu_width
[SCALAR] adr:172, bankAdr:4, sBank:11, d:1, a:36, f:set_tab_mvf_pred_flag_hls, v:log2_width
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:127, f:set_tab_mvf_pred_flag_hls, v:tab_mvf_pred_flag_row_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:286, f:set_tab_mvf_pred_flag_hls, v:tab_mvf_pred_flag_row_Dout_A
[SCALAR] adr:180, bankAdr:4, sBank:13, d:1, a:30, f:set_tab_mvf_pred_flag_hls, v:predColBuf_0_i
[SCALAR] adr:180, bankAdr:4, sBank:13, d:0, a:10, f:set_tab_mvf_pred_flag_hls, v:predColBuf_0_o
[SCALAR] adr:184, bankAdr:4, sBank:14, d:0, a:32, f:set_tab_mvf_pred_flag_hls, v:predColBuf_1_i
[SCALAR] adr:184, bankAdr:4, sBank:14, d:1, a:12, f:set_tab_mvf_pred_flag_hls, v:predColBuf_1_o
[SCALAR] adr:188, bankAdr:4, sBank:15, d:1, a:29, f:set_tab_mvf_pred_flag_hls, v:predColBuf_2_i
[SCALAR] adr:188, bankAdr:4, sBank:15, d:1, a:11, f:set_tab_mvf_pred_flag_hls, v:predColBuf_2_o
[SCALAR] adr:192, bankAdr:4, sBank:16, d:0, a:22, f:set_tab_mvf_pred_flag_hls, v:predColBuf_3_i
[SCALAR] adr:192, bankAdr:4, sBank:16, d:1, a:7, f:set_tab_mvf_pred_flag_hls, v:predColBuf_3_o
[SCALAR] adr:196, bankAdr:4, sBank:17, d:1, a:23, f:set_tab_mvf_pred_flag_hls, v:predColBuf_4_i
[SCALAR] adr:196, bankAdr:4, sBank:17, d:1, a:6, f:set_tab_mvf_pred_flag_hls, v:predColBuf_4_o
[SCALAR] adr:200, bankAdr:4, sBank:18, d:0, a:23, f:set_tab_mvf_pred_flag_hls, v:predColBuf_5_i
[SCALAR] adr:200, bankAdr:4, sBank:18, d:0, a:6, f:set_tab_mvf_pred_flag_hls, v:predColBuf_5_o
[SCALAR] adr:204, bankAdr:4, sBank:19, d:1, a:26, f:set_tab_mvf_pred_flag_hls, v:predColBuf_6_i
[SCALAR] adr:204, bankAdr:4, sBank:19, d:0, a:7, f:set_tab_mvf_pred_flag_hls, v:predColBuf_6_o
[SCALAR] adr:208, bankAdr:4, sBank:20, d:0, a:26, f:set_tab_mvf_pred_flag_hls, v:predColBuf_7_i
[SCALAR] adr:208, bankAdr:4, sBank:20, d:0, a:9, f:set_tab_mvf_pred_flag_hls, v:predColBuf_7_o
[SCALAR] adr:212, bankAdr:4, sBank:21, d:1, a:24, f:set_tab_mvf_pred_flag_hls, v:predColBuf_8_i
[SCALAR] adr:212, bankAdr:4, sBank:21, d:1, a:9, f:set_tab_mvf_pred_flag_hls, v:predColBuf_8_o
[SCALAR] adr:216, bankAdr:4, sBank:22, d:1, a:33, f:set_tab_mvf_pred_flag_hls, v:predColBuf_9_i
[SCALAR] adr:216, bankAdr:4, sBank:22, d:1, a:9, f:set_tab_mvf_pred_flag_hls, v:predColBuf_9_o
[SCALAR] adr:220, bankAdr:4, sBank:23, d:0, a:34, f:set_tab_mvf_pred_flag_hls, v:predColBuf_10_i
[SCALAR] adr:220, bankAdr:4, sBank:23, d:1, a:7, f:set_tab_mvf_pred_flag_hls, v:predColBuf_10_o
[SCALAR] adr:224, bankAdr:4, sBank:24, d:0, a:28, f:set_tab_mvf_pred_flag_hls, v:predColBuf_11_i
[SCALAR] adr:224, bankAdr:4, sBank:24, d:1, a:5, f:set_tab_mvf_pred_flag_hls, v:predColBuf_11_o
[SCALAR] adr:228, bankAdr:4, sBank:25, d:1, a:23, f:set_tab_mvf_pred_flag_hls, v:predColBuf_12_i
[SCALAR] adr:228, bankAdr:4, sBank:25, d:1, a:5, f:set_tab_mvf_pred_flag_hls, v:predColBuf_12_o
[SCALAR] adr:232, bankAdr:4, sBank:26, d:0, a:32, f:set_tab_mvf_pred_flag_hls, v:predColBuf_13_i
[SCALAR] adr:232, bankAdr:4, sBank:26, d:1, a:5, f:set_tab_mvf_pred_flag_hls, v:predColBuf_13_o
[SCALAR] adr:236, bankAdr:4, sBank:27, d:0, a:28, f:set_tab_mvf_pred_flag_hls, v:predColBuf_14_i
[SCALAR] adr:236, bankAdr:4, sBank:27, d:0, a:11, f:set_tab_mvf_pred_flag_hls, v:predColBuf_14_o
[SCALAR] adr:240, bankAdr:4, sBank:28, d:0, a:27, f:set_tab_mvf_pred_flag_hls, v:predColBuf_15_i
[SCALAR] adr:240, bankAdr:4, sBank:28, d:0, a:6, f:set_tab_mvf_pred_flag_hls, v:predColBuf_15_o
[SCALAR] adr:244, bankAdr:4, sBank:29, d:0, a:39, f:set_tab_mvf_pred_flag_hls, v:predColBuf_16_i
[SCALAR] adr:244, bankAdr:4, sBank:29, d:1, a:12, f:set_tab_mvf_pred_flag_hls, v:predColBuf_16_o
[SCALAR] adr:172, bankAdr:4, sBank:11, d:0, a:37, f:set_to_mergecand_list_hls, v:log2_width
[SCALAR] adr:132, bankAdr:4, sBank:1, d:0, a:32, f:set_to_mergecand_list_hls, v:xm_nb_merge_cand
[SCALAR] adr:372, bankAdr:8, sBank:29, d:1, a:39, f:set_to_mergecand_list_hls, v:log2_min_pu_size
[SCALAR] adr:396, bankAdr:12, sBank:3, d:1, a:24, f:set_to_mergecand_list_hls, v:min_pu_width
[SCALAR] adr:1404, bankAdr:40, sBank:31, d:1, a:12, f:set_to_mergecand_list_hls, v:mergecand_list_pred_flag_0
[SCALAR] adr:1405, bankAdr:41, sBank:31, d:0, a:13, f:set_to_mergecand_list_hls, v:mergecand_list_pred_flag_1
[SCALAR] adr:1406, bankAdr:42, sBank:31, d:1, a:13, f:set_to_mergecand_list_hls, v:mergecand_list_pred_flag_2
[SCALAR] adr:1407, bankAdr:43, sBank:31, d:0, a:14, f:set_to_mergecand_list_hls, v:mergecand_list_pred_flag_3
[SCALAR] adr:1408, bankAdr:44, sBank:0, d:1, a:15, f:set_to_mergecand_list_hls, v:mergecand_list_pred_flag_4
[SCALAR] adr:1300, bankAdr:40, sBank:5, d:1, a:15, f:set_to_mergecand_list_hls, v:mergecand_list_mv0_x_0
[SCALAR] adr:1302, bankAdr:42, sBank:5, d:0, a:16, f:set_to_mergecand_list_hls, v:mergecand_list_mv0_x_1
[SCALAR] adr:1304, bankAdr:40, sBank:6, d:1, a:14, f:set_to_mergecand_list_hls, v:mergecand_list_mv0_x_2
[SCALAR] adr:1306, bankAdr:42, sBank:6, d:0, a:15, f:set_to_mergecand_list_hls, v:mergecand_list_mv0_x_3
[SCALAR] adr:1308, bankAdr:40, sBank:7, d:0, a:13, f:set_to_mergecand_list_hls, v:mergecand_list_mv0_x_4
[SCALAR] adr:1312, bankAdr:40, sBank:8, d:0, a:15, f:set_to_mergecand_list_hls, v:mergecand_list_mv0_y_0
[SCALAR] adr:1314, bankAdr:42, sBank:8, d:1, a:15, f:set_to_mergecand_list_hls, v:mergecand_list_mv0_y_1
[SCALAR] adr:1316, bankAdr:40, sBank:9, d:0, a:15, f:set_to_mergecand_list_hls, v:mergecand_list_mv0_y_2
[SCALAR] adr:1318, bankAdr:42, sBank:9, d:1, a:15, f:set_to_mergecand_list_hls, v:mergecand_list_mv0_y_3
[SCALAR] adr:1320, bankAdr:40, sBank:10, d:1, a:12, f:set_to_mergecand_list_hls, v:mergecand_list_mv0_y_4
[SCALAR] adr:1324, bankAdr:40, sBank:11, d:0, a:10, f:set_to_mergecand_list_hls, v:mergecand_list_mv1_x_0
[SCALAR] adr:1326, bankAdr:42, sBank:11, d:1, a:10, f:set_to_mergecand_list_hls, v:mergecand_list_mv1_x_1
[SCALAR] adr:1328, bankAdr:40, sBank:12, d:1, a:11, f:set_to_mergecand_list_hls, v:mergecand_list_mv1_x_2
[SCALAR] adr:1330, bankAdr:42, sBank:12, d:0, a:12, f:set_to_mergecand_list_hls, v:mergecand_list_mv1_x_3
[SCALAR] adr:1332, bankAdr:40, sBank:13, d:1, a:10, f:set_to_mergecand_list_hls, v:mergecand_list_mv1_x_4
[SCALAR] adr:1336, bankAdr:40, sBank:14, d:0, a:13, f:set_to_mergecand_list_hls, v:mergecand_list_mv1_y_0
[SCALAR] adr:1338, bankAdr:42, sBank:14, d:1, a:13, f:set_to_mergecand_list_hls, v:mergecand_list_mv1_y_1
[SCALAR] adr:1340, bankAdr:40, sBank:15, d:0, a:12, f:set_to_mergecand_list_hls, v:mergecand_list_mv1_y_2
[SCALAR] adr:1342, bankAdr:42, sBank:15, d:1, a:12, f:set_to_mergecand_list_hls, v:mergecand_list_mv1_y_3
[SCALAR] adr:1344, bankAdr:40, sBank:16, d:0, a:8, f:set_to_mergecand_list_hls, v:mergecand_list_mv1_y_4
[SCALAR] adr:1348, bankAdr:40, sBank:17, d:0, a:7, f:set_to_mergecand_list_hls, v:mergecand_list_poc0_0
[SCALAR] adr:1352, bankAdr:40, sBank:18, d:1, a:6, f:set_to_mergecand_list_hls, v:mergecand_list_poc0_1
[SCALAR] adr:1356, bankAdr:40, sBank:19, d:1, a:7, f:set_to_mergecand_list_hls, v:mergecand_list_poc0_2
[SCALAR] adr:1360, bankAdr:40, sBank:20, d:1, a:9, f:set_to_mergecand_list_hls, v:mergecand_list_poc0_3
[SCALAR] adr:1364, bankAdr:40, sBank:21, d:0, a:10, f:set_to_mergecand_list_hls, v:mergecand_list_poc0_4
[SCALAR] adr:1368, bankAdr:40, sBank:22, d:0, a:10, f:set_to_mergecand_list_hls, v:mergecand_list_poc1_0
[SCALAR] adr:1372, bankAdr:40, sBank:23, d:0, a:8, f:set_to_mergecand_list_hls, v:mergecand_list_poc1_1
[SCALAR] adr:1376, bankAdr:40, sBank:24, d:0, a:6, f:set_to_mergecand_list_hls, v:mergecand_list_poc1_2
[SCALAR] adr:1380, bankAdr:40, sBank:25, d:0, a:6, f:set_to_mergecand_list_hls, v:mergecand_list_poc1_3
[SCALAR] adr:1384, bankAdr:40, sBank:26, d:0, a:6, f:set_to_mergecand_list_hls, v:mergecand_list_poc1_4
[SCALAR] adr:1388, bankAdr:40, sBank:27, d:1, a:11, f:set_to_mergecand_list_hls, v:mergecand_list_ref_idx0_0
[SCALAR] adr:1389, bankAdr:41, sBank:27, d:0, a:12, f:set_to_mergecand_list_hls, v:mergecand_list_ref_idx0_1
[SCALAR] adr:1390, bankAdr:42, sBank:27, d:1, a:12, f:set_to_mergecand_list_hls, v:mergecand_list_ref_idx0_2
[SCALAR] adr:1391, bankAdr:43, sBank:27, d:0, a:13, f:set_to_mergecand_list_hls, v:mergecand_list_ref_idx0_3
[SCALAR] adr:1392, bankAdr:40, sBank:28, d:1, a:6, f:set_to_mergecand_list_hls, v:mergecand_list_ref_idx0_4
[SCALAR] adr:1396, bankAdr:40, sBank:29, d:0, a:13, f:set_to_mergecand_list_hls, v:mergecand_list_ref_idx1_0
[SCALAR] adr:1397, bankAdr:41, sBank:29, d:1, a:13, f:set_to_mergecand_list_hls, v:mergecand_list_ref_idx1_1
[SCALAR] adr:1398, bankAdr:42, sBank:29, d:0, a:14, f:set_to_mergecand_list_hls, v:mergecand_list_ref_idx1_2
[SCALAR] adr:1399, bankAdr:43, sBank:29, d:1, a:14, f:set_to_mergecand_list_hls, v:mergecand_list_ref_idx1_3
[SCALAR] adr:1400, bankAdr:40, sBank:30, d:1, a:4, f:set_to_mergecand_list_hls, v:mergecand_list_ref_idx1_4
[ARRAY] adr:286240, bankAdr:278048, aBank:0, d:0, a:128, f:set_to_mergecand_list_hls, v:tab_mvf_mv_0_x_Din_A
[ARRAY] adr:286240, bankAdr:278048, aBank:0, d:0, a:287, f:set_to_mergecand_list_hls, v:tab_mvf_mv_0_x_Dout_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:129, f:set_to_mergecand_list_hls, v:tab_mvf_mv_0_y_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:288, f:set_to_mergecand_list_hls, v:tab_mvf_mv_0_y_Dout_A
[ARRAY] adr:286248, bankAdr:278056, aBank:0, d:0, a:130, f:set_to_mergecand_list_hls, v:tab_mvf_mv_1_x_Din_A
[ARRAY] adr:286248, bankAdr:278056, aBank:0, d:0, a:289, f:set_to_mergecand_list_hls, v:tab_mvf_mv_1_x_Dout_A
[ARRAY] adr:286252, bankAdr:278060, aBank:0, d:0, a:131, f:set_to_mergecand_list_hls, v:tab_mvf_mv_1_y_Din_A
[ARRAY] adr:286252, bankAdr:278060, aBank:0, d:0, a:290, f:set_to_mergecand_list_hls, v:tab_mvf_mv_1_y_Dout_A
[ARRAY] adr:286256, bankAdr:278064, aBank:0, d:0, a:132, f:set_to_mergecand_list_hls, v:tab_mvf_poc_0_Din_A
[ARRAY] adr:286256, bankAdr:278064, aBank:0, d:0, a:291, f:set_to_mergecand_list_hls, v:tab_mvf_poc_0_Dout_A
[ARRAY] adr:286260, bankAdr:278068, aBank:0, d:0, a:133, f:set_to_mergecand_list_hls, v:tab_mvf_poc_1_Din_A
[ARRAY] adr:286260, bankAdr:278068, aBank:0, d:0, a:292, f:set_to_mergecand_list_hls, v:tab_mvf_poc_1_Dout_A
[ARRAY] adr:286264, bankAdr:278072, aBank:0, d:0, a:134, f:set_to_mergecand_list_hls, v:tab_mvf_ref_idx_0_Din_A
[ARRAY] adr:286264, bankAdr:278072, aBank:0, d:0, a:293, f:set_to_mergecand_list_hls, v:tab_mvf_ref_idx_0_Dout_A
[ARRAY] adr:286268, bankAdr:278076, aBank:0, d:0, a:135, f:set_to_mergecand_list_hls, v:tab_mvf_ref_idx_1_Din_A
[ARRAY] adr:286268, bankAdr:278076, aBank:0, d:0, a:294, f:set_to_mergecand_list_hls, v:tab_mvf_ref_idx_1_Dout_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:136, f:set_to_mergecand_list_hls, v:tab_mvf_pred_flag_row_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:295, f:set_to_mergecand_list_hls, v:tab_mvf_pred_flag_row_Dout_A
[SCALAR] adr:172, bankAdr:4, sBank:11, d:1, a:37, f:temporal_luma_motion_vector_hls, v:log2_width
[SCALAR] adr:1188, bankAdr:36, sBank:9, d:0, a:33, f:temporal_luma_motion_vector_hls, v:HEVCFrameSize
[SCALAR] adr:1192, bankAdr:36, sBank:10, d:1, a:28, f:temporal_luma_motion_vector_hls, v:RefPicListSize
[SCALAR] adr:552, bankAdr:16, sBank:10, d:0, a:29, f:temporal_luma_motion_vector_hls, v:xm_x0
[SCALAR] adr:556, bankAdr:16, sBank:11, d:0, a:38, f:temporal_luma_motion_vector_hls, v:xm_y0
[SCALAR] adr:160, bankAdr:4, sBank:8, d:1, a:32, f:temporal_luma_motion_vector_hls, v:nPbW
[SCALAR] adr:164, bankAdr:4, sBank:9, d:1, a:33, f:temporal_luma_motion_vector_hls, v:nPbH
[SCALAR] adr:1220, bankAdr:36, sBank:17, d:1, a:7, f:temporal_luma_motion_vector_hls, v:mvLXCol_x
[SCALAR] adr:1224, bankAdr:36, sBank:18, d:0, a:7, f:temporal_luma_motion_vector_hls, v:mvLXCol_y
[SCALAR] adr:396, bankAdr:12, sBank:3, d:0, a:26, f:temporal_luma_motion_vector_hls, v:min_pu_width
[SCALAR] adr:360, bankAdr:8, sBank:26, d:1, a:31, f:temporal_luma_motion_vector_hls, v:log2_ctb_size
[SCALAR] adr:372, bankAdr:8, sBank:29, d:0, a:40, f:temporal_luma_motion_vector_hls, v:log2_min_pu_size
[SCALAR] adr:332, bankAdr:8, sBank:19, d:0, a:27, f:temporal_luma_motion_vector_hls, v:height
[SCALAR] adr:408, bankAdr:12, sBank:6, d:0, a:40, f:temporal_luma_motion_vector_hls, v:width
[SCALAR] adr:284, bankAdr:8, sBank:7, d:1, a:26, f:temporal_luma_motion_vector_hls, v:ctb_width
[SCALAR] adr:1208, bankAdr:36, sBank:14, d:1, a:32, f:temporal_luma_motion_vector_hls, v:collocated_list
[SCALAR] adr:1548, bankAdr:48, sBank:3, d:1, a:25, f:temporal_luma_motion_vector_hls, v:poc
[ARRAY] adr:286256, bankAdr:278064, aBank:0, d:0, a:137, f:temporal_luma_motion_vector_hls, v:rpl_tab_void_Din_A
[ARRAY] adr:286256, bankAdr:278064, aBank:0, d:0, a:296, f:temporal_luma_motion_vector_hls, v:rpl_tab_void_Dout_A
[SCALAR] adr:1196, bankAdr:36, sBank:11, d:1, a:38, f:temporal_luma_motion_vector_hls, v:refPicList_0_nb_refs
[SCALAR] adr:1200, bankAdr:36, sBank:12, d:1, a:33, f:temporal_luma_motion_vector_hls, v:refPicList_1_nb_refs
[ARRAY] adr:286216, bankAdr:278024, aBank:0, d:0, a:138, f:temporal_luma_motion_vector_hls, v:refPicList_0_isLongTerm_Din_A
[ARRAY] adr:286216, bankAdr:278024, aBank:0, d:0, a:297, f:temporal_luma_motion_vector_hls, v:refPicList_0_isLongTerm_Dout_A
[ARRAY] adr:286220, bankAdr:278028, aBank:0, d:0, a:139, f:temporal_luma_motion_vector_hls, v:refPicList_1_isLongTerm_Din_A
[ARRAY] adr:286220, bankAdr:278028, aBank:0, d:0, a:298, f:temporal_luma_motion_vector_hls, v:refPicList_1_isLongTerm_Dout_A
[ARRAY] adr:286224, bankAdr:278032, aBank:0, d:0, a:140, f:temporal_luma_motion_vector_hls, v:refPicList_0_list_Din_A
[ARRAY] adr:286224, bankAdr:278032, aBank:0, d:0, a:299, f:temporal_luma_motion_vector_hls, v:refPicList_0_list_Dout_A
[ARRAY] adr:286228, bankAdr:278036, aBank:0, d:0, a:141, f:temporal_luma_motion_vector_hls, v:refPicList_1_list_Din_A
[ARRAY] adr:286228, bankAdr:278036, aBank:0, d:0, a:300, f:temporal_luma_motion_vector_hls, v:refPicList_1_list_Dout_A
[ARRAY] adr:286248, bankAdr:278056, aBank:0, d:0, a:142, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_mv_0_x_Din_A
[ARRAY] adr:286248, bankAdr:278056, aBank:0, d:0, a:301, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_mv_0_x_Dout_A
[ARRAY] adr:286252, bankAdr:278060, aBank:0, d:0, a:143, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_mv_0_y_Din_A
[ARRAY] adr:286252, bankAdr:278060, aBank:0, d:0, a:302, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_mv_0_y_Dout_A
[ARRAY] adr:286256, bankAdr:278064, aBank:0, d:0, a:144, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_mv_1_x_Din_A
[ARRAY] adr:286256, bankAdr:278064, aBank:0, d:0, a:303, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_mv_1_x_Dout_A
[ARRAY] adr:286260, bankAdr:278068, aBank:0, d:0, a:145, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_mv_1_y_Din_A
[ARRAY] adr:286260, bankAdr:278068, aBank:0, d:0, a:304, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_mv_1_y_Dout_A
[ARRAY] adr:286264, bankAdr:278072, aBank:0, d:0, a:146, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_poc_0_Din_A
[ARRAY] adr:286264, bankAdr:278072, aBank:0, d:0, a:305, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_poc_0_Dout_A
[ARRAY] adr:286268, bankAdr:278076, aBank:0, d:0, a:147, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_poc_1_Din_A
[ARRAY] adr:286268, bankAdr:278076, aBank:0, d:0, a:306, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_poc_1_Dout_A
[ARRAY] adr:286272, bankAdr:278080, aBank:0, d:0, a:148, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_ref_idx_0_Din_A
[ARRAY] adr:286272, bankAdr:278080, aBank:0, d:0, a:307, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_ref_idx_0_Dout_A
[ARRAY] adr:286276, bankAdr:278084, aBank:0, d:0, a:149, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_ref_idx_1_Din_A
[ARRAY] adr:286276, bankAdr:278084, aBank:0, d:0, a:308, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_ref_idx_1_Dout_A
[ARRAY] adr:286252, bankAdr:278060, aBank:0, d:0, a:150, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_pred_flag_row_Din_A
[ARRAY] adr:286252, bankAdr:278060, aBank:0, d:0, a:309, f:temporal_luma_motion_vector_hls, v:collocated_tab_mvf_pred_flag_row_Dout_A
[ARRAY] adr:286240, bankAdr:278048, aBank:0, d:0, a:151, f:xmem_copy_mvfield_hls, v:tab_mvf_mv_0_x_Din_A
[ARRAY] adr:286240, bankAdr:278048, aBank:0, d:0, a:310, f:xmem_copy_mvfield_hls, v:tab_mvf_mv_0_x_Dout_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:152, f:xmem_copy_mvfield_hls, v:tab_mvf_mv_0_y_Din_A
[ARRAY] adr:286244, bankAdr:278052, aBank:0, d:0, a:311, f:xmem_copy_mvfield_hls, v:tab_mvf_mv_0_y_Dout_A
[ARRAY] adr:286248, bankAdr:278056, aBank:0, d:0, a:153, f:xmem_copy_mvfield_hls, v:tab_mvf_mv_1_x_Din_A
[ARRAY] adr:286248, bankAdr:278056, aBank:0, d:0, a:312, f:xmem_copy_mvfield_hls, v:tab_mvf_mv_1_x_Dout_A
[ARRAY] adr:286252, bankAdr:278060, aBank:0, d:0, a:154, f:xmem_copy_mvfield_hls, v:tab_mvf_mv_1_y_Din_A
[ARRAY] adr:286252, bankAdr:278060, aBank:0, d:0, a:313, f:xmem_copy_mvfield_hls, v:tab_mvf_mv_1_y_Dout_A
[ARRAY] adr:286256, bankAdr:278064, aBank:0, d:0, a:155, f:xmem_copy_mvfield_hls, v:tab_mvf_poc_0_Din_A
[ARRAY] adr:286256, bankAdr:278064, aBank:0, d:0, a:314, f:xmem_copy_mvfield_hls, v:tab_mvf_poc_0_Dout_A
[ARRAY] adr:286260, bankAdr:278068, aBank:0, d:0, a:156, f:xmem_copy_mvfield_hls, v:tab_mvf_poc_1_Din_A
[ARRAY] adr:286260, bankAdr:278068, aBank:0, d:0, a:315, f:xmem_copy_mvfield_hls, v:tab_mvf_poc_1_Dout_A
[ARRAY] adr:286264, bankAdr:278072, aBank:0, d:0, a:157, f:xmem_copy_mvfield_hls, v:tab_mvf_ref_idx_0_Din_A
[ARRAY] adr:286264, bankAdr:278072, aBank:0, d:0, a:316, f:xmem_copy_mvfield_hls, v:tab_mvf_ref_idx_0_Dout_A
[ARRAY] adr:286268, bankAdr:278076, aBank:0, d:0, a:158, f:xmem_copy_mvfield_hls, v:tab_mvf_ref_idx_1_Din_A
[ARRAY] adr:286268, bankAdr:278076, aBank:0, d:0, a:317, f:xmem_copy_mvfield_hls, v:tab_mvf_ref_idx_1_Dout_A
[SCALAR] adr:784, bankAdr:24, sBank:4, d:0, a:21, f:xmem_copy_mvfield_hls, v:current_mv_mv_0_x
[SCALAR] adr:788, bankAdr:24, sBank:5, d:1, a:31, f:xmem_copy_mvfield_hls, v:current_mv_mv_0_y
[SCALAR] adr:792, bankAdr:24, sBank:6, d:1, a:39, f:xmem_copy_mvfield_hls, v:current_mv_mv_1_x
[SCALAR] adr:796, bankAdr:24, sBank:7, d:0, a:28, f:xmem_copy_mvfield_hls, v:current_mv_mv_1_y
[SCALAR] adr:800, bankAdr:24, sBank:8, d:0, a:33, f:xmem_copy_mvfield_hls, v:current_mv_poc_0
[SCALAR] adr:804, bankAdr:24, sBank:9, d:0, a:34, f:xmem_copy_mvfield_hls, v:current_mv_poc_1
[SCALAR] adr:808, bankAdr:24, sBank:10, d:1, a:29, f:xmem_copy_mvfield_hls, v:current_mv_ref_idx_0
[SCALAR] adr:812, bankAdr:24, sBank:11, d:0, a:39, f:xmem_copy_mvfield_hls, v:current_mv_ref_idx_1
[SCALAR] adr:404, bankAdr:12, sBank:5, d:0, a:33, f:z_scan_block_avail_hls, v:tb_mask
[SCALAR] adr:360, bankAdr:8, sBank:26, d:0, a:33, f:z_scan_block_avail_hls, v:log2_ctb_size
[SCALAR] adr:376, bankAdr:8, sBank:30, d:0, a:19, f:z_scan_block_avail_hls, v:log2_min_tb_size
[SCALAR] adr:552, bankAdr:16, sBank:10, d:0, a:30, f:z_scan_block_avail_hls, v:xm_x0
[SCALAR] adr:556, bankAdr:16, sBank:11, d:1, a:39, f:z_scan_block_avail_hls, v:xm_y0
[ARRAY] adr:286188, bankAdr:277996, aBank:0, d:0, a:159, f:z_scan_block_avail_hls, v:min_tb_addr_zs_Din_A
[ARRAY] adr:286188, bankAdr:277996, aBank:0, d:0, a:318, f:z_scan_block_avail_hls, v:min_tb_addr_zs_Dout_A





func_bank_num: 32,1,1





func_bank_depth: 64,67108864,1024





max_partition: 4





func_scalar_bank_mux_num: {37,37},{33,32},{28,26},{27,26},{22,21},{34,32},{41,40},{29,27},{34,33},{35,34},{31,30},{40,40},{35,34},{31,31},{33,33},{30,30},{23,21},{24,24},{24,22},{28,27},{27,26},{26,25},{35,34},{35,33},{29,27},{25,24},{34,32},{29,27},{28,27},{41,40},{20,19},{41,39}

func_scalar_max_mux_num: 41;

func_array_bank_mux_num: 319

func_array_max_mux_num: 319;

func_cyclic_bank_mux_num: 1

func_cyclic_max_mux_num: 1;


*/


`define enable_connect_innerloop_ff_hevc_extract_rbsp_1_hls
`define enable_connect_innerloop_ff_hevc_extract_rbsp_2_hls
`define enable_connect_fill_ref_samples_mtdma_top_wrp
`define enable_connect_hevc_find_frame_end_hls
`define enable_connect_intra_prediction_unit_ex_hls
`define enable_connect_hls_transform_unit_ex_hls
`define enable_connect_hls_transform_unit_ex_hls_dup1
`define enable_connect_hls_transform_unit_ex_hls_dup2
`define enable_connect_hls_transform_unit_ex_hls_dup3
`define enable_connect_hls_transform_tree_hls
`define enable_connect_hls_transform_tree_hls_dup1
`define enable_connect_hls_transform_tree_hls_dup2
`define enable_connect_hls_transform_tree_hls_dup3
`define enable_connect_hls_coding_quadtree_hls
`define enable_connect_hls_coding_quadtree_hls_dup1
`define enable_connect_hls_coding_quadtree_hls_dup2
`define enable_connect_hls_coding_quadtree_hls_dup3
`define enable_connect_hls_coding_unit_hls
`define enable_connect_hls_coding_unit_hls_dup1
`define enable_connect_hls_coding_unit_hls_dup2
`define enable_connect_hls_coding_unit_hls_dup3
`define enable_connect_copy_top_left_pixel_hls
`define enable_connect_genPredCol_hls
`define enable_connect_ff_hevc_get_sub_cu_zscan_id_hls
`define enable_connect_ff_hevc_skip_flag_decode_hls
`define enable_connect_ff_hevc_set_qPy_hls
`define enable_connect_ff_hevc_deblocking_boundary_strengths_hls
`define enable_connect_hls_decode_neighbour_hls
`define enable_connect_set_tab_mvf_pred_flag_hls
`define enable_connect_init_intra_neighbors_hls
`define enable_connect_init_intra_neighbors_chroma_hls
`define enable_connect_ff_hevc_set_neighbour_available_hls
`define enable_connect_intra_prediction_unit_default_value_hls
`define enable_connect_z_scan_block_avail_hls
`define enable_connect_luma_mc_uni_libx265_hls
`define enable_connect_chroma_mc_uni_libx265_hls
`define enable_connect_sao_param_hls
`define enable_connect_xmem_copy_mvfield_hls
`define enable_connect_intra_pred_libx265_hls
`define enable_connect_mv_mp_mode_mx_hls
`define enable_connect_mv_mp_mode_mx_lt_hls
`define enable_connect_temporal_luma_motion_vector_hls
`define enable_connect_is_diff_mer_hls
`define enable_connect_append_zero_motion_vector_candidates_hls
`define enable_connect_merge_mode_exit_hls
`define enable_connect_set_to_mergecand_list_hls
`define enable_connect_compare_mv_ref_idx_hls
`define enable_connect_combined_bi_predictive_merge_candidates_hls
`define enable_connect_ff_hevc_luma_mv_merge_mode_hls
`define enable_connect_ff_hevc_luma_mv_mvp_mode_hls
`define enable_connect_hls_prediction_unit_hls

module custom_connection import hls_long_tail_pkg::*, xcache_param_pkg::*;
(
    input                               clk,
    input                               rstn,
    //ap interface
    input                               ap_arb_start        [HLS_NUM],
    input                               ap_arb_ret          [HLS_NUM],
    output logic                        ap_start            [HLS_NUM],
    input                               ap_ready            [HLS_NUM],
    input                               ap_idle             [HLS_NUM],
    input                               ap_done             [HLS_NUM],
    input                               ap_ce               [HLS_NUM],
    input [7:0]                         ap_part             [HLS_NUM],

    //dual port bank in scalar range
    output logic                        scalar_argVld       [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM],
    input                               scalar_argAck       [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM],
    output logic [XMEM_AW-1:0]          scalar_adr          [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM],
    output logic [SCALAR_BANK_DW-1:0]   scalar_wdat         [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM],
    input [SCALAR_BANK_DW-1:0]          scalar_rdat         [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM],
    input                               scalar_rdat_vld     [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM],

    //single port bank in array range
    input                               array_argRdy        [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM],
    output logic                        array_ap_ce         [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM],
    output logic                        array_argVld        [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM],
    input                               array_argAck        [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM],
    output logic [XMEM_AW-1:0]          array_adr           [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM],
    output logic [ARRAY_BANK_DW-1:0]    array_wdat          [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM],
    input [ARRAY_BANK_DW-1:0]           array_rdat          [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM],
    input                               array_rdat_vld      [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM],
    //wide port bank in cyclic range
    input                               cyclic_argRdy       [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM],
    output logic                        cyclic_ap_ce        [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM],
    output logic                        cyclic_argVld       [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM],
    input                               cyclic_argAck       [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM],
    output logic [XMEM_AW-1:0]          cyclic_adr          [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM],
    output logic [CYCLIC_BANK_DW-1:0]   cyclic_wdat         [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM],
    input [CYCLIC_BANK_DW-1:0]          cyclic_rdat         [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM],
    input                               cyclic_rdat_vld     [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM],


    //hls function connection 
    output logic                               innerloop_ff_hevc_extract_rbsp_1_hls_ready,
    output logic [7:0]                         innerloop_ff_hevc_extract_rbsp_1_hls_zero_i,
    input        [7:0]                         innerloop_ff_hevc_extract_rbsp_1_hls_zero_o,
    input                                      innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_ap_vld,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_1_hls_loop_init,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_1_hls_loop_len,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_1_hls_loop_inc,
    input        [31:0]                        innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt,
    input                                      innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_ap_vld,
    output logic                               innerloop_ff_hevc_extract_rbsp_2_hls_ready,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_i,
    input        [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o,
    input                                      innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_ap_vld,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_i,
    input        [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o,
    input                                      innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_ap_vld,
    output logic [7:0]                         innerloop_ff_hevc_extract_rbsp_2_hls_zero_i,
    input        [7:0]                         innerloop_ff_hevc_extract_rbsp_2_hls_zero_o,
    input                                      innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_ap_vld,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_i,
    input        [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o,
    input                                      innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_ap_vld,
    input        [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_pos_Addr_A,
    input                                      innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_pos_EN_A,
    input        [3:0]                         innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_pos_WEN_A,
    input        [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_pos_Din_A,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_loop_init,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_loop_len,
    output logic [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_loop_inc,
    input        [31:0]                        innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt,
    input                                      innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_ap_vld,
    output logic                               fill_ref_samples_mtdma_top_wrp_ready,
    output logic [5:0]                         fill_ref_samples_mtdma_top_wrp_numIntraNeighbor,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_totalUnits,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_aboveUnits,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_leftUnits,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_unitWidth,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_unitHeight,
    output logic [2:0]                         fill_ref_samples_mtdma_top_wrp_log2TrSize,
    output logic [31:0]                        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_0,
    output logic [31:0]                        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_1,
    output logic                               fill_ref_samples_mtdma_top_wrp_bNeighborFlags_2,
    output logic [5:0]                         fill_ref_samples_mtdma_top_wrp_numIntraNeighbor_c,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_totalUnits_c,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_aboveUnits_c,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_leftUnits_c,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_unitWidth_c,
    output logic [7:0]                         fill_ref_samples_mtdma_top_wrp_unitHeight_c,
    output logic [2:0]                         fill_ref_samples_mtdma_top_wrp_log2TrSize_c,
    output logic [31:0]                        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_c_0,
    output logic [31:0]                        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_c_1,
    output logic                               fill_ref_samples_mtdma_top_wrp_bNeighborFlags_c_2,
    output logic                               hevc_find_frame_end_hls_ready,
    output logic [31:0]                        hevc_find_frame_end_hls_state64_0_i,
    output logic [31:0]                        hevc_find_frame_end_hls_state64_1_i,
    input        [31:0]                        hevc_find_frame_end_hls_state64_0_o,
    input                                      hevc_find_frame_end_hls_state64_0_o_ap_vld,
    input        [31:0]                        hevc_find_frame_end_hls_state64_1_o,
    input                                      hevc_find_frame_end_hls_state64_1_o_ap_vld,
    output logic [31:0]                        hevc_find_frame_end_hls_frame_start_found_i,
    input        [31:0]                        hevc_find_frame_end_hls_frame_start_found_o,
    input                                      hevc_find_frame_end_hls_frame_start_found_o_ap_vld,
    output logic                               intra_prediction_unit_ex_hls_ready,
    output logic [7:0]                         intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_i,
    input        [7:0]                         intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o,
    input                                      intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_ap_vld,
    output logic [7:0]                         intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_i,
    input        [7:0]                         intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o,
    input                                      intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_ap_vld,
    output logic [7:0]                         intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_i,
    input        [7:0]                         intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o,
    input                                      intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_ap_vld,
    output logic [7:0]                         intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_i,
    input        [7:0]                         intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o,
    input                                      intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_ap_vld,
    output logic [7:0]                         intra_prediction_unit_ex_hls_part_mode,
    output logic [31:0]                        intra_prediction_unit_ex_hls_min_pu_width,
    output logic [31:0]                        intra_prediction_unit_ex_hls_log2_min_pu_size,
    output logic [31:0]                        intra_prediction_unit_ex_hls_log2_ctb_size,
    output logic [7:0]                         intra_prediction_unit_ex_hls_ctb_up_flag,
    output logic [7:0]                         intra_prediction_unit_ex_hls_ctb_left_flag,
    output logic [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_i,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o,
    input                                      intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_ap_vld,
    output logic [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_i,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o,
    input                                      intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_ap_vld,
    output logic [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_i,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o,
    input                                      intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_ap_vld,
    output logic [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_i,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o,
    input                                      intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_ap_vld,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_chroma_mode_c_0,
    input                                      intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_ap_vld,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_chroma_mode_c_1,
    input                                      intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_ap_vld,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_chroma_mode_c_2,
    input                                      intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_ap_vld,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_chroma_mode_c_3,
    input                                      intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_ap_vld,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0,
    input                                      intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_ap_vld,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1,
    input                                      intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_ap_vld,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2,
    input                                      intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_ap_vld,
    input        [7:0]                         intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3,
    input                                      intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_ap_vld,
    output logic [31:0]                        intra_prediction_unit_ex_hls_chroma_array_type,
    input        [7:0]                         intra_prediction_unit_ex_hls_max_trafo_depth,
    input                                      intra_prediction_unit_ex_hls_max_trafo_depth_ap_vld,
    output logic [31:0]                        intra_prediction_unit_ex_hls_max_transform_hierarchy_depth_intra,
    output logic [7:0]                         intra_prediction_unit_ex_hls_intra_split_flag,
    input        [31:0]                        intra_prediction_unit_ex_hls_tab_ipm_Addr_A,
    input                                      intra_prediction_unit_ex_hls_tab_ipm_EN_A,
    input                                      intra_prediction_unit_ex_hls_tab_ipm_WEN_A,
    input        [7:0]                         intra_prediction_unit_ex_hls_tab_ipm_Din_A,
    output logic [7:0]                         intra_prediction_unit_ex_hls_tab_ipm_Dout_A,
    output logic                               hls_transform_unit_ex_hls_ready,
    output logic [31:0]                        hls_transform_unit_ex_hls_cbf_luma,
    output logic [7:0]                         hls_transform_unit_ex_hls_cbf_data,
    output logic [7:0]                         hls_transform_unit_ex_hls_chroma_qp_offset_list_len_minus1,
    input        [31:0]                        hls_transform_unit_ex_hls_cb_qp_offset_list_Addr_A,
    input                                      hls_transform_unit_ex_hls_cb_qp_offset_list_EN_A,
    input                                      hls_transform_unit_ex_hls_cb_qp_offset_list_WEN_A,
    input        [7:0]                         hls_transform_unit_ex_hls_cb_qp_offset_list_Din_A,
    output logic [7:0]                         hls_transform_unit_ex_hls_cb_qp_offset_list_Dout_A,
    input        [31:0]                        hls_transform_unit_ex_hls_cr_qp_offset_list_Addr_A,
    input                                      hls_transform_unit_ex_hls_cr_qp_offset_list_EN_A,
    input                                      hls_transform_unit_ex_hls_cr_qp_offset_list_WEN_A,
    input        [7:0]                         hls_transform_unit_ex_hls_cr_qp_offset_list_Din_A,
    output logic [7:0]                         hls_transform_unit_ex_hls_cr_qp_offset_list_Dout_A,
    output logic [31:0]                        hls_transform_unit_ex_hls_qp_bd_offset,
    input        [31:0]                        hls_transform_unit_ex_hls_qp_y_tab_Addr_A,
    input                                      hls_transform_unit_ex_hls_qp_y_tab_EN_A,
    input                                      hls_transform_unit_ex_hls_qp_y_tab_WEN_A,
    input        [7:0]                         hls_transform_unit_ex_hls_qp_y_tab_Din_A,
    output logic [7:0]                         hls_transform_unit_ex_hls_qp_y_tab_Dout_A,
    output logic [7:0]                         hls_transform_unit_ex_hls_pred_mode,
    output logic [31:0]                        hls_transform_unit_ex_hls_hshift_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_hshift_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_hshift_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_vshift_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_vshift_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_vshift_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_tu_intra_pred_mode,
    output logic [31:0]                        hls_transform_unit_ex_hls_tu_intra_pred_mode_c,
    output logic [7:0]                         hls_transform_unit_ex_hls_cu_transquant_bypass_flag,
    input        [7:0]                         hls_transform_unit_ex_hls_tu_cu_qp_offset_cb,
    input                                      hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_tu_cu_qp_offset_cr,
    input                                      hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_qp_y_i,
    input        [7:0]                         hls_transform_unit_ex_hls_qp_y_o,
    input                                      hls_transform_unit_ex_hls_qp_y_o_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_log2_trafo_size,
    input                                      hls_transform_unit_ex_hls_log2_trafo_size_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_log2_trafo_size_c_i,
    input        [7:0]                         hls_transform_unit_ex_hls_log2_trafo_size_c_o,
    input                                      hls_transform_unit_ex_hls_log2_trafo_size_c_o_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_scan_idx_i,
    input        [7:0]                         hls_transform_unit_ex_hls_scan_idx_o,
    input                                      hls_transform_unit_ex_hls_scan_idx_o_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_scan_idx_c,
    input                                      hls_transform_unit_ex_hls_scan_idx_c_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_cmdr_run_i,
    input        [7:0]                         hls_transform_unit_ex_hls_cmdr_run_o,
    input                                      hls_transform_unit_ex_hls_cmdr_run_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_buf_data_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_buf_data_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_buf_data_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_xm_linesize_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_xm_linesize_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_xm_linesize_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_pixel_shift,
    input        [31:0]                        hls_transform_unit_ex_hls_nPbW,
    input                                      hls_transform_unit_ex_hls_nPbW_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_nPbH,
    input                                      hls_transform_unit_ex_hls_nPbH_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_up,
    input                                      hls_transform_unit_ex_hls_cand_up_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_left,
    input                                      hls_transform_unit_ex_hls_cand_left_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_up_left,
    input                                      hls_transform_unit_ex_hls_cand_up_left_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_up_right_sap,
    input                                      hls_transform_unit_ex_hls_cand_up_right_sap_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_up_right,
    input                                      hls_transform_unit_ex_hls_cand_up_right_ap_vld,
    output logic                               hls_transform_unit_ex_hls_cand_bottom_left_i,
    input                                      hls_transform_unit_ex_hls_cand_bottom_left_o,
    input                                      hls_transform_unit_ex_hls_cand_bottom_left_o_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_up_c,
    input                                      hls_transform_unit_ex_hls_cand_up_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_left_c,
    input                                      hls_transform_unit_ex_hls_cand_left_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_up_left_c,
    input                                      hls_transform_unit_ex_hls_cand_up_left_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_up_right_sap_c,
    input                                      hls_transform_unit_ex_hls_cand_up_right_sap_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_cand_up_right_c,
    input                                      hls_transform_unit_ex_hls_cand_up_right_c_ap_vld,
    output logic                               hls_transform_unit_ex_hls_cand_bottom_left_c_i,
    input                                      hls_transform_unit_ex_hls_cand_bottom_left_c_o,
    input                                      hls_transform_unit_ex_hls_cand_bottom_left_c_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_log2_ctb_size,
    output logic                               hls_transform_unit_ex_hls_ctb_up_flag,
    output logic                               hls_transform_unit_ex_hls_ctb_left_flag,
    output logic                               hls_transform_unit_ex_hls_ctb_up_left_flag,
    output logic                               hls_transform_unit_ex_hls_ctb_up_right_flag,
    output logic [15:0]                        hls_transform_unit_ex_hls_end_of_tiles_x,
    output logic [15:0]                        hls_transform_unit_ex_hls_end_of_tiles_y,
    output logic [7:0]                         hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_i,
    input        [7:0]                         hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o,
    input                                      hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_i,
    input        [7:0]                         hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o,
    input                                      hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_tu_cu_qp_delta,
    input                                      hls_transform_unit_ex_hls_tu_cu_qp_delta_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_tu_cross_pf,
    input                                      hls_transform_unit_ex_hls_tu_cross_pf_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_first_qp_group_i,
    input        [7:0]                         hls_transform_unit_ex_hls_first_qp_group_o,
    input                                      hls_transform_unit_ex_hls_first_qp_group_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_chroma_format_idc,
    output logic [7:0]                         hls_transform_unit_ex_hls_cu_chroma_qp_offset_enabled_flag,
    output logic [7:0]                         hls_transform_unit_ex_hls_cu_qp_delta_enabled_flag,
    output logic [31:0]                        hls_transform_unit_ex_hls_qPy_pred,
    output logic [31:0]                        hls_transform_unit_ex_hls_diff_cu_qp_delta_depth,
    output logic [31:0]                        hls_transform_unit_ex_hls_log2_min_cb_size,
    output logic [31:0]                        hls_transform_unit_ex_hls_min_cb_width,
    output logic [7:0]                         hls_transform_unit_ex_hls_slice_qp,
    output logic                               hls_transform_unit_ex_hls_dup1_ready,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_cbf_luma,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_cbf_data,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_chroma_qp_offset_list_len_minus1,
    input        [31:0]                        hls_transform_unit_ex_hls_dup1_cb_qp_offset_list_Addr_A,
    input                                      hls_transform_unit_ex_hls_dup1_cb_qp_offset_list_EN_A,
    input                                      hls_transform_unit_ex_hls_dup1_cb_qp_offset_list_WEN_A,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_cb_qp_offset_list_Din_A,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_cb_qp_offset_list_Dout_A,
    input        [31:0]                        hls_transform_unit_ex_hls_dup1_cr_qp_offset_list_Addr_A,
    input                                      hls_transform_unit_ex_hls_dup1_cr_qp_offset_list_EN_A,
    input                                      hls_transform_unit_ex_hls_dup1_cr_qp_offset_list_WEN_A,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_cr_qp_offset_list_Din_A,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_cr_qp_offset_list_Dout_A,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_qp_bd_offset,
    input        [31:0]                        hls_transform_unit_ex_hls_dup1_qp_y_tab_Addr_A,
    input                                      hls_transform_unit_ex_hls_dup1_qp_y_tab_EN_A,
    input                                      hls_transform_unit_ex_hls_dup1_qp_y_tab_WEN_A,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_qp_y_tab_Din_A,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_qp_y_tab_Dout_A,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_pred_mode,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_hshift_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_hshift_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_hshift_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_vshift_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_vshift_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_vshift_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_tu_intra_pred_mode,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_tu_intra_pred_mode_c,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_cu_transquant_bypass_flag,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb,
    input                                      hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr,
    input                                      hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_qp_y_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_qp_y_o,
    input                                      hls_transform_unit_ex_hls_dup1_qp_y_o_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup1_log2_trafo_size,
    input                                      hls_transform_unit_ex_hls_dup1_log2_trafo_size_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o,
    input                                      hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_scan_idx_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_scan_idx_o,
    input                                      hls_transform_unit_ex_hls_dup1_scan_idx_o_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_scan_idx_c,
    input                                      hls_transform_unit_ex_hls_dup1_scan_idx_c_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_cmdr_run_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_cmdr_run_o,
    input                                      hls_transform_unit_ex_hls_dup1_cmdr_run_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_buf_data_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_buf_data_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_buf_data_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_xm_linesize_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_xm_linesize_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_xm_linesize_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_pixel_shift,
    input        [31:0]                        hls_transform_unit_ex_hls_dup1_nPbW,
    input                                      hls_transform_unit_ex_hls_dup1_nPbW_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup1_nPbH,
    input                                      hls_transform_unit_ex_hls_dup1_nPbH_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_left,
    input                                      hls_transform_unit_ex_hls_dup1_cand_left_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_left,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_left_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_right_sap,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_right_sap_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_right,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_right_ap_vld,
    output logic                               hls_transform_unit_ex_hls_dup1_cand_bottom_left_i,
    input                                      hls_transform_unit_ex_hls_dup1_cand_bottom_left_o,
    input                                      hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_c,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_left_c,
    input                                      hls_transform_unit_ex_hls_dup1_cand_left_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_left_c,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_left_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_right_c,
    input                                      hls_transform_unit_ex_hls_dup1_cand_up_right_c_ap_vld,
    output logic                               hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_i,
    input                                      hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o,
    input                                      hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_log2_ctb_size,
    output logic                               hls_transform_unit_ex_hls_dup1_ctb_up_flag,
    output logic                               hls_transform_unit_ex_hls_dup1_ctb_left_flag,
    output logic                               hls_transform_unit_ex_hls_dup1_ctb_up_left_flag,
    output logic                               hls_transform_unit_ex_hls_dup1_ctb_up_right_flag,
    output logic [15:0]                        hls_transform_unit_ex_hls_dup1_end_of_tiles_x,
    output logic [15:0]                        hls_transform_unit_ex_hls_dup1_end_of_tiles_y,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o,
    input                                      hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o,
    input                                      hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta,
    input                                      hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_tu_cross_pf,
    input                                      hls_transform_unit_ex_hls_dup1_tu_cross_pf_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_first_qp_group_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup1_first_qp_group_o,
    input                                      hls_transform_unit_ex_hls_dup1_first_qp_group_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_chroma_format_idc,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_cu_chroma_qp_offset_enabled_flag,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_cu_qp_delta_enabled_flag,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_qPy_pred,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_diff_cu_qp_delta_depth,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_log2_min_cb_size,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup1_min_cb_width,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup1_slice_qp,
    output logic                               hls_transform_unit_ex_hls_dup2_ready,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_cbf_luma,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_cbf_data,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_chroma_qp_offset_list_len_minus1,
    input        [31:0]                        hls_transform_unit_ex_hls_dup2_cb_qp_offset_list_Addr_A,
    input                                      hls_transform_unit_ex_hls_dup2_cb_qp_offset_list_EN_A,
    input                                      hls_transform_unit_ex_hls_dup2_cb_qp_offset_list_WEN_A,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_cb_qp_offset_list_Din_A,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_cb_qp_offset_list_Dout_A,
    input        [31:0]                        hls_transform_unit_ex_hls_dup2_cr_qp_offset_list_Addr_A,
    input                                      hls_transform_unit_ex_hls_dup2_cr_qp_offset_list_EN_A,
    input                                      hls_transform_unit_ex_hls_dup2_cr_qp_offset_list_WEN_A,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_cr_qp_offset_list_Din_A,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_cr_qp_offset_list_Dout_A,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_qp_bd_offset,
    input        [31:0]                        hls_transform_unit_ex_hls_dup2_qp_y_tab_Addr_A,
    input                                      hls_transform_unit_ex_hls_dup2_qp_y_tab_EN_A,
    input                                      hls_transform_unit_ex_hls_dup2_qp_y_tab_WEN_A,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_qp_y_tab_Din_A,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_qp_y_tab_Dout_A,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_pred_mode,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_hshift_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_hshift_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_hshift_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_vshift_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_vshift_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_vshift_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_tu_intra_pred_mode,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_tu_intra_pred_mode_c,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_cu_transquant_bypass_flag,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb,
    input                                      hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr,
    input                                      hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_qp_y_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_qp_y_o,
    input                                      hls_transform_unit_ex_hls_dup2_qp_y_o_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup2_log2_trafo_size,
    input                                      hls_transform_unit_ex_hls_dup2_log2_trafo_size_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o,
    input                                      hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_scan_idx_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_scan_idx_o,
    input                                      hls_transform_unit_ex_hls_dup2_scan_idx_o_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_scan_idx_c,
    input                                      hls_transform_unit_ex_hls_dup2_scan_idx_c_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_cmdr_run_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_cmdr_run_o,
    input                                      hls_transform_unit_ex_hls_dup2_cmdr_run_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_buf_data_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_buf_data_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_buf_data_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_xm_linesize_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_xm_linesize_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_xm_linesize_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_pixel_shift,
    input        [31:0]                        hls_transform_unit_ex_hls_dup2_nPbW,
    input                                      hls_transform_unit_ex_hls_dup2_nPbW_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup2_nPbH,
    input                                      hls_transform_unit_ex_hls_dup2_nPbH_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_left,
    input                                      hls_transform_unit_ex_hls_dup2_cand_left_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_left,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_left_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_right_sap,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_right_sap_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_right,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_right_ap_vld,
    output logic                               hls_transform_unit_ex_hls_dup2_cand_bottom_left_i,
    input                                      hls_transform_unit_ex_hls_dup2_cand_bottom_left_o,
    input                                      hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_c,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_left_c,
    input                                      hls_transform_unit_ex_hls_dup2_cand_left_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_left_c,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_left_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_right_c,
    input                                      hls_transform_unit_ex_hls_dup2_cand_up_right_c_ap_vld,
    output logic                               hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_i,
    input                                      hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o,
    input                                      hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_log2_ctb_size,
    output logic                               hls_transform_unit_ex_hls_dup2_ctb_up_flag,
    output logic                               hls_transform_unit_ex_hls_dup2_ctb_left_flag,
    output logic                               hls_transform_unit_ex_hls_dup2_ctb_up_left_flag,
    output logic                               hls_transform_unit_ex_hls_dup2_ctb_up_right_flag,
    output logic [15:0]                        hls_transform_unit_ex_hls_dup2_end_of_tiles_x,
    output logic [15:0]                        hls_transform_unit_ex_hls_dup2_end_of_tiles_y,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o,
    input                                      hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o,
    input                                      hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta,
    input                                      hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_tu_cross_pf,
    input                                      hls_transform_unit_ex_hls_dup2_tu_cross_pf_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_first_qp_group_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup2_first_qp_group_o,
    input                                      hls_transform_unit_ex_hls_dup2_first_qp_group_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_chroma_format_idc,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_cu_chroma_qp_offset_enabled_flag,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_cu_qp_delta_enabled_flag,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_qPy_pred,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_diff_cu_qp_delta_depth,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_log2_min_cb_size,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup2_min_cb_width,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup2_slice_qp,
    output logic                               hls_transform_unit_ex_hls_dup3_ready,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_cbf_luma,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_cbf_data,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_chroma_qp_offset_list_len_minus1,
    input        [31:0]                        hls_transform_unit_ex_hls_dup3_cb_qp_offset_list_Addr_A,
    input                                      hls_transform_unit_ex_hls_dup3_cb_qp_offset_list_EN_A,
    input                                      hls_transform_unit_ex_hls_dup3_cb_qp_offset_list_WEN_A,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_cb_qp_offset_list_Din_A,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_cb_qp_offset_list_Dout_A,
    input        [31:0]                        hls_transform_unit_ex_hls_dup3_cr_qp_offset_list_Addr_A,
    input                                      hls_transform_unit_ex_hls_dup3_cr_qp_offset_list_EN_A,
    input                                      hls_transform_unit_ex_hls_dup3_cr_qp_offset_list_WEN_A,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_cr_qp_offset_list_Din_A,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_cr_qp_offset_list_Dout_A,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_qp_bd_offset,
    input        [31:0]                        hls_transform_unit_ex_hls_dup3_qp_y_tab_Addr_A,
    input                                      hls_transform_unit_ex_hls_dup3_qp_y_tab_EN_A,
    input                                      hls_transform_unit_ex_hls_dup3_qp_y_tab_WEN_A,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_qp_y_tab_Din_A,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_qp_y_tab_Dout_A,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_pred_mode,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_hshift_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_hshift_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_hshift_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_vshift_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_vshift_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_vshift_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_tu_intra_pred_mode,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_tu_intra_pred_mode_c,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_cu_transquant_bypass_flag,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb,
    input                                      hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr,
    input                                      hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_qp_y_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_qp_y_o,
    input                                      hls_transform_unit_ex_hls_dup3_qp_y_o_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup3_log2_trafo_size,
    input                                      hls_transform_unit_ex_hls_dup3_log2_trafo_size_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o,
    input                                      hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_scan_idx_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_scan_idx_o,
    input                                      hls_transform_unit_ex_hls_dup3_scan_idx_o_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_scan_idx_c,
    input                                      hls_transform_unit_ex_hls_dup3_scan_idx_c_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_cmdr_run_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_cmdr_run_o,
    input                                      hls_transform_unit_ex_hls_dup3_cmdr_run_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_buf_data_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_buf_data_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_buf_data_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_xm_linesize_0,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_xm_linesize_1,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_xm_linesize_2,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_pixel_shift,
    input        [31:0]                        hls_transform_unit_ex_hls_dup3_nPbW,
    input                                      hls_transform_unit_ex_hls_dup3_nPbW_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup3_nPbH,
    input                                      hls_transform_unit_ex_hls_dup3_nPbH_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_left,
    input                                      hls_transform_unit_ex_hls_dup3_cand_left_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_left,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_left_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_right_sap,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_right_sap_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_right,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_right_ap_vld,
    output logic                               hls_transform_unit_ex_hls_dup3_cand_bottom_left_i,
    input                                      hls_transform_unit_ex_hls_dup3_cand_bottom_left_o,
    input                                      hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_c,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_left_c,
    input                                      hls_transform_unit_ex_hls_dup3_cand_left_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_left_c,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_left_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_ap_vld,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_right_c,
    input                                      hls_transform_unit_ex_hls_dup3_cand_up_right_c_ap_vld,
    output logic                               hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_i,
    input                                      hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o,
    input                                      hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_log2_ctb_size,
    output logic                               hls_transform_unit_ex_hls_dup3_ctb_up_flag,
    output logic                               hls_transform_unit_ex_hls_dup3_ctb_left_flag,
    output logic                               hls_transform_unit_ex_hls_dup3_ctb_up_left_flag,
    output logic                               hls_transform_unit_ex_hls_dup3_ctb_up_right_flag,
    output logic [15:0]                        hls_transform_unit_ex_hls_dup3_end_of_tiles_x,
    output logic [15:0]                        hls_transform_unit_ex_hls_dup3_end_of_tiles_y,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o,
    input                                      hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o,
    input                                      hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_ap_vld,
    input        [31:0]                        hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta,
    input                                      hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_ap_vld,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_tu_cross_pf,
    input                                      hls_transform_unit_ex_hls_dup3_tu_cross_pf_ap_vld,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_first_qp_group_i,
    input        [7:0]                         hls_transform_unit_ex_hls_dup3_first_qp_group_o,
    input                                      hls_transform_unit_ex_hls_dup3_first_qp_group_o_ap_vld,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_chroma_format_idc,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_cu_chroma_qp_offset_enabled_flag,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_cu_qp_delta_enabled_flag,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_qPy_pred,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_diff_cu_qp_delta_depth,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_log2_min_cb_size,
    output logic [31:0]                        hls_transform_unit_ex_hls_dup3_min_cb_width,
    output logic [7:0]                         hls_transform_unit_ex_hls_dup3_slice_qp,
    output logic                               hls_transform_tree_hls_ready,
    input        [31:0]                        hls_transform_tree_hls_log2_trafo_size,
    input                                      hls_transform_tree_hls_log2_trafo_size_ap_vld,
    input        [7:0]                         hls_transform_tree_hls_split_transform_flag,
    input                                      hls_transform_tree_hls_split_transform_flag_ap_vld,
    input        [7:0]                         hls_transform_tree_hls_cbf_data,
    input                                      hls_transform_tree_hls_cbf_data_ap_vld,
    output logic [7:0]                         hls_transform_tree_hls_disable_deblocking_filter_flag,
    output logic [7:0]                         hls_transform_tree_hls_transquant_bypass_enable_flag,
    output logic [7:0]                         hls_transform_tree_hls_cu_transquant_bypass_flag,
    input        [31:0]                        hls_transform_tree_hls_tu_chroma_mode_c,
    input                                      hls_transform_tree_hls_tu_chroma_mode_c_ap_vld,
    input        [31:0]                        hls_transform_tree_hls_tu_intra_pred_mode,
    input                                      hls_transform_tree_hls_tu_intra_pred_mode_ap_vld,
    input        [31:0]                        hls_transform_tree_hls_tu_intra_pred_mode_c,
    input                                      hls_transform_tree_hls_tu_intra_pred_mode_c_ap_vld,
    output logic [7:0]                         hls_transform_tree_hls_pu_chroma_mode_c_0,
    output logic [7:0]                         hls_transform_tree_hls_pu_chroma_mode_c_1,
    output logic [7:0]                         hls_transform_tree_hls_pu_chroma_mode_c_2,
    output logic [7:0]                         hls_transform_tree_hls_pu_chroma_mode_c_3,
    output logic [7:0]                         hls_transform_tree_hls_pu_intra_pred_mode_0,
    output logic [7:0]                         hls_transform_tree_hls_pu_intra_pred_mode_1,
    output logic [7:0]                         hls_transform_tree_hls_pu_intra_pred_mode_2,
    output logic [7:0]                         hls_transform_tree_hls_pu_intra_pred_mode_3,
    output logic [7:0]                         hls_transform_tree_hls_pu_intra_pred_mode_c_0,
    output logic [7:0]                         hls_transform_tree_hls_pu_intra_pred_mode_c_1,
    output logic [7:0]                         hls_transform_tree_hls_pu_intra_pred_mode_c_2,
    output logic [7:0]                         hls_transform_tree_hls_pu_intra_pred_mode_c_3,
    output logic [7:0]                         hls_transform_tree_hls_intra_split_flag,
    output logic [31:0]                        hls_transform_tree_hls_log2_max_trafo_size,
    output logic [31:0]                        hls_transform_tree_hls_log2_min_tb_size,
    output logic [7:0]                         hls_transform_tree_hls_max_trafo_depth,
    output logic [31:0]                        hls_transform_tree_hls_max_transform_hierarchy_depth_inter,
    output logic [7:0]                         hls_transform_tree_hls_pred_mode,
    output logic [7:0]                         hls_transform_tree_hls_part_mode,
    output logic [31:0]                        hls_transform_tree_hls_chroma_array_type,
    output logic [31:0]                        hls_transform_tree_hls_chroma_format_idc,
    output logic [31:0]                        hls_transform_tree_hls_cbf_luma_i,
    input        [31:0]                        hls_transform_tree_hls_cbf_luma_o,
    input                                      hls_transform_tree_hls_cbf_luma_o_ap_vld,
    output logic [31:0]                        hls_transform_tree_hls_rv_hls_transform_unit,
    output logic [31:0]                        hls_transform_tree_hls_rv_ff_hevc_deblocking_boundary_strengths,
    output logic [31:0]                        hls_transform_tree_hls_rv_set_deblocking_bypass,
    output logic [31:0]                        hls_transform_tree_hls_rv_callback_flag,
    output logic [31:0]                        hls_transform_tree_hls_min_tb_width,
    output logic [31:0]                        hls_transform_tree_hls_log2_ctb_size,
    input        [31:0]                        hls_transform_tree_hls_cbf_luma_base_Addr_A,
    input                                      hls_transform_tree_hls_cbf_luma_base_EN_A,
    input        [3:0]                         hls_transform_tree_hls_cbf_luma_base_WEN_A,
    input        [31:0]                        hls_transform_tree_hls_cbf_luma_base_Din_A,
    output logic [31:0]                        hls_transform_tree_hls_cbf_luma_base_Dout_A,
    input        [31:0]                        hls_transform_tree_hls_is_pcm_Addr_A,
    input                                      hls_transform_tree_hls_is_pcm_EN_A,
    input                                      hls_transform_tree_hls_is_pcm_WEN_A,
    input        [7:0]                         hls_transform_tree_hls_is_pcm_Din_A,
    output logic [7:0]                         hls_transform_tree_hls_is_pcm_Dout_A,
    output logic [31:0]                        hls_transform_tree_hls_cb_size,
    output logic [31:0]                        hls_transform_tree_hls_width,
    output logic [31:0]                        hls_transform_tree_hls_height,
    output logic [31:0]                        hls_transform_tree_hls_log2_min_pu_size,
    output logic [31:0]                        hls_transform_tree_hls_min_pu_width,
    output logic                               hls_transform_tree_hls_dup1_ready,
    input        [31:0]                        hls_transform_tree_hls_dup1_log2_trafo_size,
    input                                      hls_transform_tree_hls_dup1_log2_trafo_size_ap_vld,
    input        [7:0]                         hls_transform_tree_hls_dup1_split_transform_flag,
    input                                      hls_transform_tree_hls_dup1_split_transform_flag_ap_vld,
    input        [7:0]                         hls_transform_tree_hls_dup1_cbf_data,
    input                                      hls_transform_tree_hls_dup1_cbf_data_ap_vld,
    output logic [7:0]                         hls_transform_tree_hls_dup1_disable_deblocking_filter_flag,
    output logic [7:0]                         hls_transform_tree_hls_dup1_transquant_bypass_enable_flag,
    output logic [7:0]                         hls_transform_tree_hls_dup1_cu_transquant_bypass_flag,
    input        [31:0]                        hls_transform_tree_hls_dup1_tu_chroma_mode_c,
    input                                      hls_transform_tree_hls_dup1_tu_chroma_mode_c_ap_vld,
    input        [31:0]                        hls_transform_tree_hls_dup1_tu_intra_pred_mode,
    input                                      hls_transform_tree_hls_dup1_tu_intra_pred_mode_ap_vld,
    input        [31:0]                        hls_transform_tree_hls_dup1_tu_intra_pred_mode_c,
    input                                      hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_ap_vld,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_chroma_mode_c_0,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_chroma_mode_c_1,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_chroma_mode_c_2,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_chroma_mode_c_3,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_intra_pred_mode_0,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_intra_pred_mode_1,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_intra_pred_mode_2,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_intra_pred_mode_3,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_intra_pred_mode_c_0,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_intra_pred_mode_c_1,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_intra_pred_mode_c_2,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pu_intra_pred_mode_c_3,
    output logic [7:0]                         hls_transform_tree_hls_dup1_intra_split_flag,
    output logic [31:0]                        hls_transform_tree_hls_dup1_log2_max_trafo_size,
    output logic [31:0]                        hls_transform_tree_hls_dup1_log2_min_tb_size,
    output logic [7:0]                         hls_transform_tree_hls_dup1_max_trafo_depth,
    output logic [31:0]                        hls_transform_tree_hls_dup1_max_transform_hierarchy_depth_inter,
    output logic [7:0]                         hls_transform_tree_hls_dup1_pred_mode,
    output logic [7:0]                         hls_transform_tree_hls_dup1_part_mode,
    output logic [31:0]                        hls_transform_tree_hls_dup1_chroma_array_type,
    output logic [31:0]                        hls_transform_tree_hls_dup1_chroma_format_idc,
    output logic [31:0]                        hls_transform_tree_hls_dup1_cbf_luma_i,
    input        [31:0]                        hls_transform_tree_hls_dup1_cbf_luma_o,
    input                                      hls_transform_tree_hls_dup1_cbf_luma_o_ap_vld,
    output logic [31:0]                        hls_transform_tree_hls_dup1_rv_hls_transform_unit,
    output logic [31:0]                        hls_transform_tree_hls_dup1_rv_ff_hevc_deblocking_boundary_strengths,
    output logic [31:0]                        hls_transform_tree_hls_dup1_rv_set_deblocking_bypass,
    output logic [31:0]                        hls_transform_tree_hls_dup1_rv_callback_flag,
    output logic [31:0]                        hls_transform_tree_hls_dup1_min_tb_width,
    output logic [31:0]                        hls_transform_tree_hls_dup1_log2_ctb_size,
    input        [31:0]                        hls_transform_tree_hls_dup1_cbf_luma_base_Addr_A,
    input                                      hls_transform_tree_hls_dup1_cbf_luma_base_EN_A,
    input        [3:0]                         hls_transform_tree_hls_dup1_cbf_luma_base_WEN_A,
    input        [31:0]                        hls_transform_tree_hls_dup1_cbf_luma_base_Din_A,
    output logic [31:0]                        hls_transform_tree_hls_dup1_cbf_luma_base_Dout_A,
    input        [31:0]                        hls_transform_tree_hls_dup1_is_pcm_Addr_A,
    input                                      hls_transform_tree_hls_dup1_is_pcm_EN_A,
    input                                      hls_transform_tree_hls_dup1_is_pcm_WEN_A,
    input        [7:0]                         hls_transform_tree_hls_dup1_is_pcm_Din_A,
    output logic [7:0]                         hls_transform_tree_hls_dup1_is_pcm_Dout_A,
    output logic [31:0]                        hls_transform_tree_hls_dup1_cb_size,
    output logic [31:0]                        hls_transform_tree_hls_dup1_width,
    output logic [31:0]                        hls_transform_tree_hls_dup1_height,
    output logic [31:0]                        hls_transform_tree_hls_dup1_log2_min_pu_size,
    output logic [31:0]                        hls_transform_tree_hls_dup1_min_pu_width,
    output logic                               hls_transform_tree_hls_dup2_ready,
    input        [31:0]                        hls_transform_tree_hls_dup2_log2_trafo_size,
    input                                      hls_transform_tree_hls_dup2_log2_trafo_size_ap_vld,
    input        [7:0]                         hls_transform_tree_hls_dup2_split_transform_flag,
    input                                      hls_transform_tree_hls_dup2_split_transform_flag_ap_vld,
    input        [7:0]                         hls_transform_tree_hls_dup2_cbf_data,
    input                                      hls_transform_tree_hls_dup2_cbf_data_ap_vld,
    output logic [7:0]                         hls_transform_tree_hls_dup2_disable_deblocking_filter_flag,
    output logic [7:0]                         hls_transform_tree_hls_dup2_transquant_bypass_enable_flag,
    output logic [7:0]                         hls_transform_tree_hls_dup2_cu_transquant_bypass_flag,
    input        [31:0]                        hls_transform_tree_hls_dup2_tu_chroma_mode_c,
    input                                      hls_transform_tree_hls_dup2_tu_chroma_mode_c_ap_vld,
    input        [31:0]                        hls_transform_tree_hls_dup2_tu_intra_pred_mode,
    input                                      hls_transform_tree_hls_dup2_tu_intra_pred_mode_ap_vld,
    input        [31:0]                        hls_transform_tree_hls_dup2_tu_intra_pred_mode_c,
    input                                      hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_ap_vld,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_chroma_mode_c_0,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_chroma_mode_c_1,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_chroma_mode_c_2,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_chroma_mode_c_3,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_intra_pred_mode_0,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_intra_pred_mode_1,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_intra_pred_mode_2,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_intra_pred_mode_3,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_intra_pred_mode_c_0,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_intra_pred_mode_c_1,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_intra_pred_mode_c_2,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pu_intra_pred_mode_c_3,
    output logic [7:0]                         hls_transform_tree_hls_dup2_intra_split_flag,
    output logic [31:0]                        hls_transform_tree_hls_dup2_log2_max_trafo_size,
    output logic [31:0]                        hls_transform_tree_hls_dup2_log2_min_tb_size,
    output logic [7:0]                         hls_transform_tree_hls_dup2_max_trafo_depth,
    output logic [31:0]                        hls_transform_tree_hls_dup2_max_transform_hierarchy_depth_inter,
    output logic [7:0]                         hls_transform_tree_hls_dup2_pred_mode,
    output logic [7:0]                         hls_transform_tree_hls_dup2_part_mode,
    output logic [31:0]                        hls_transform_tree_hls_dup2_chroma_array_type,
    output logic [31:0]                        hls_transform_tree_hls_dup2_chroma_format_idc,
    output logic [31:0]                        hls_transform_tree_hls_dup2_cbf_luma_i,
    input        [31:0]                        hls_transform_tree_hls_dup2_cbf_luma_o,
    input                                      hls_transform_tree_hls_dup2_cbf_luma_o_ap_vld,
    output logic [31:0]                        hls_transform_tree_hls_dup2_rv_hls_transform_unit,
    output logic [31:0]                        hls_transform_tree_hls_dup2_rv_ff_hevc_deblocking_boundary_strengths,
    output logic [31:0]                        hls_transform_tree_hls_dup2_rv_set_deblocking_bypass,
    output logic [31:0]                        hls_transform_tree_hls_dup2_rv_callback_flag,
    output logic [31:0]                        hls_transform_tree_hls_dup2_min_tb_width,
    output logic [31:0]                        hls_transform_tree_hls_dup2_log2_ctb_size,
    input        [31:0]                        hls_transform_tree_hls_dup2_cbf_luma_base_Addr_A,
    input                                      hls_transform_tree_hls_dup2_cbf_luma_base_EN_A,
    input        [3:0]                         hls_transform_tree_hls_dup2_cbf_luma_base_WEN_A,
    input        [31:0]                        hls_transform_tree_hls_dup2_cbf_luma_base_Din_A,
    output logic [31:0]                        hls_transform_tree_hls_dup2_cbf_luma_base_Dout_A,
    input        [31:0]                        hls_transform_tree_hls_dup2_is_pcm_Addr_A,
    input                                      hls_transform_tree_hls_dup2_is_pcm_EN_A,
    input                                      hls_transform_tree_hls_dup2_is_pcm_WEN_A,
    input        [7:0]                         hls_transform_tree_hls_dup2_is_pcm_Din_A,
    output logic [7:0]                         hls_transform_tree_hls_dup2_is_pcm_Dout_A,
    output logic [31:0]                        hls_transform_tree_hls_dup2_cb_size,
    output logic [31:0]                        hls_transform_tree_hls_dup2_width,
    output logic [31:0]                        hls_transform_tree_hls_dup2_height,
    output logic [31:0]                        hls_transform_tree_hls_dup2_log2_min_pu_size,
    output logic [31:0]                        hls_transform_tree_hls_dup2_min_pu_width,
    output logic                               hls_transform_tree_hls_dup3_ready,
    input        [31:0]                        hls_transform_tree_hls_dup3_log2_trafo_size,
    input                                      hls_transform_tree_hls_dup3_log2_trafo_size_ap_vld,
    input        [7:0]                         hls_transform_tree_hls_dup3_split_transform_flag,
    input                                      hls_transform_tree_hls_dup3_split_transform_flag_ap_vld,
    input        [7:0]                         hls_transform_tree_hls_dup3_cbf_data,
    input                                      hls_transform_tree_hls_dup3_cbf_data_ap_vld,
    output logic [7:0]                         hls_transform_tree_hls_dup3_disable_deblocking_filter_flag,
    output logic [7:0]                         hls_transform_tree_hls_dup3_transquant_bypass_enable_flag,
    output logic [7:0]                         hls_transform_tree_hls_dup3_cu_transquant_bypass_flag,
    input        [31:0]                        hls_transform_tree_hls_dup3_tu_chroma_mode_c,
    input                                      hls_transform_tree_hls_dup3_tu_chroma_mode_c_ap_vld,
    input        [31:0]                        hls_transform_tree_hls_dup3_tu_intra_pred_mode,
    input                                      hls_transform_tree_hls_dup3_tu_intra_pred_mode_ap_vld,
    input        [31:0]                        hls_transform_tree_hls_dup3_tu_intra_pred_mode_c,
    input                                      hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_ap_vld,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_chroma_mode_c_0,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_chroma_mode_c_1,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_chroma_mode_c_2,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_chroma_mode_c_3,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_intra_pred_mode_0,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_intra_pred_mode_1,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_intra_pred_mode_2,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_intra_pred_mode_3,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_intra_pred_mode_c_0,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_intra_pred_mode_c_1,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_intra_pred_mode_c_2,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pu_intra_pred_mode_c_3,
    output logic [7:0]                         hls_transform_tree_hls_dup3_intra_split_flag,
    output logic [31:0]                        hls_transform_tree_hls_dup3_log2_max_trafo_size,
    output logic [31:0]                        hls_transform_tree_hls_dup3_log2_min_tb_size,
    output logic [7:0]                         hls_transform_tree_hls_dup3_max_trafo_depth,
    output logic [31:0]                        hls_transform_tree_hls_dup3_max_transform_hierarchy_depth_inter,
    output logic [7:0]                         hls_transform_tree_hls_dup3_pred_mode,
    output logic [7:0]                         hls_transform_tree_hls_dup3_part_mode,
    output logic [31:0]                        hls_transform_tree_hls_dup3_chroma_array_type,
    output logic [31:0]                        hls_transform_tree_hls_dup3_chroma_format_idc,
    output logic [31:0]                        hls_transform_tree_hls_dup3_cbf_luma_i,
    input        [31:0]                        hls_transform_tree_hls_dup3_cbf_luma_o,
    input                                      hls_transform_tree_hls_dup3_cbf_luma_o_ap_vld,
    output logic [31:0]                        hls_transform_tree_hls_dup3_rv_hls_transform_unit,
    output logic [31:0]                        hls_transform_tree_hls_dup3_rv_ff_hevc_deblocking_boundary_strengths,
    output logic [31:0]                        hls_transform_tree_hls_dup3_rv_set_deblocking_bypass,
    output logic [31:0]                        hls_transform_tree_hls_dup3_rv_callback_flag,
    output logic [31:0]                        hls_transform_tree_hls_dup3_min_tb_width,
    output logic [31:0]                        hls_transform_tree_hls_dup3_log2_ctb_size,
    input        [31:0]                        hls_transform_tree_hls_dup3_cbf_luma_base_Addr_A,
    input                                      hls_transform_tree_hls_dup3_cbf_luma_base_EN_A,
    input        [3:0]                         hls_transform_tree_hls_dup3_cbf_luma_base_WEN_A,
    input        [31:0]                        hls_transform_tree_hls_dup3_cbf_luma_base_Din_A,
    output logic [31:0]                        hls_transform_tree_hls_dup3_cbf_luma_base_Dout_A,
    input        [31:0]                        hls_transform_tree_hls_dup3_is_pcm_Addr_A,
    input                                      hls_transform_tree_hls_dup3_is_pcm_EN_A,
    input                                      hls_transform_tree_hls_dup3_is_pcm_WEN_A,
    input        [7:0]                         hls_transform_tree_hls_dup3_is_pcm_Din_A,
    output logic [7:0]                         hls_transform_tree_hls_dup3_is_pcm_Dout_A,
    output logic [31:0]                        hls_transform_tree_hls_dup3_cb_size,
    output logic [31:0]                        hls_transform_tree_hls_dup3_width,
    output logic [31:0]                        hls_transform_tree_hls_dup3_height,
    output logic [31:0]                        hls_transform_tree_hls_dup3_log2_min_pu_size,
    output logic [31:0]                        hls_transform_tree_hls_dup3_min_pu_width,
    output logic                               hls_coding_quadtree_hls_ready,
    output logic [31:0]                        hls_coding_quadtree_hls_x1_i,
    input        [31:0]                        hls_coding_quadtree_hls_x1_o,
    input                                      hls_coding_quadtree_hls_x1_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_y1_i,
    input        [31:0]                        hls_coding_quadtree_hls_y1_o,
    input                                      hls_coding_quadtree_hls_y1_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_log2_cb_size_minus_one_i,
    input        [31:0]                        hls_coding_quadtree_hls_log2_cb_size_minus_one_o,
    input                                      hls_coding_quadtree_hls_log2_cb_size_minus_one_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_cb_depth_plus_one_i,
    input        [31:0]                        hls_coding_quadtree_hls_cb_depth_plus_one_o,
    input                                      hls_coding_quadtree_hls_cb_depth_plus_one_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_width,
    output logic [31:0]                        hls_coding_quadtree_hls_height,
    output logic [31:0]                        hls_coding_quadtree_hls_split_cu_flag_i,
    input        [31:0]                        hls_coding_quadtree_hls_split_cu_flag_o,
    input                                      hls_coding_quadtree_hls_split_cu_flag_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_more_data_i,
    input        [31:0]                        hls_coding_quadtree_hls_more_data_o,
    input                                      hls_coding_quadtree_hls_more_data_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_rv_hls_coding_unit,
    output logic [31:0]                        hls_coding_quadtree_hls_rv_callback_flag,
    output logic [31:0]                        hls_coding_quadtree_hls_log2_ctb_size,
    input        [31:0]                        hls_coding_quadtree_hls_qPy_pred,
    input                                      hls_coding_quadtree_hls_qPy_pred_ap_vld,
    output logic [7:0]                         hls_coding_quadtree_hls_qp_y,
    output logic [31:0]                        hls_coding_quadtree_hls_qp_block_mask_i,
    input        [31:0]                        hls_coding_quadtree_hls_qp_block_mask_o,
    input                                      hls_coding_quadtree_hls_qp_block_mask_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_cb_size_split_i,
    input        [31:0]                        hls_coding_quadtree_hls_cb_size_split_o,
    input                                      hls_coding_quadtree_hls_cb_size_split_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_log2_min_cb_size,
    output logic [31:0]                        hls_coding_quadtree_hls_min_cb_width,
    input        [7:0]                         hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded,
    input                                      hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_ap_vld,
    input        [31:0]                        hls_coding_quadtree_hls_tu_cu_qp_delta,
    input                                      hls_coding_quadtree_hls_tu_cu_qp_delta_ap_vld,
    input        [7:0]                         hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded,
    input                                      hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_ap_vld,
    input        [31:0]                        hls_coding_quadtree_hls_depth,
    input                                      hls_coding_quadtree_hls_depth_ap_vld,
    output logic [7:0]                         hls_coding_quadtree_hls_ctb_left_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_ctb_up_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_cu_qp_delta_enabled_flag,
    output logic [31:0]                        hls_coding_quadtree_hls_diff_cu_qp_delta_depth,
    output logic [7:0]                         hls_coding_quadtree_hls_cu_chroma_qp_offset_enabled_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_diff_cu_chroma_qp_offset_depth,
    input        [31:0]                        hls_coding_quadtree_hls_tab_ct_depth_Addr_A,
    input                                      hls_coding_quadtree_hls_tab_ct_depth_EN_A,
    input                                      hls_coding_quadtree_hls_tab_ct_depth_WEN_A,
    input        [7:0]                         hls_coding_quadtree_hls_tab_ct_depth_Din_A,
    output logic [7:0]                         hls_coding_quadtree_hls_tab_ct_depth_Dout_A,
    output logic                               hls_coding_quadtree_hls_dup1_ready,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_x1_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_x1_o,
    input                                      hls_coding_quadtree_hls_dup1_x1_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_y1_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_y1_o,
    input                                      hls_coding_quadtree_hls_dup1_y1_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o,
    input                                      hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_cb_depth_plus_one_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o,
    input                                      hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_width,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_height,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_split_cu_flag_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_split_cu_flag_o,
    input                                      hls_coding_quadtree_hls_dup1_split_cu_flag_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_more_data_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_more_data_o,
    input                                      hls_coding_quadtree_hls_dup1_more_data_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_rv_hls_coding_unit,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_rv_callback_flag,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_log2_ctb_size,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_qPy_pred,
    input                                      hls_coding_quadtree_hls_dup1_qPy_pred_ap_vld,
    output logic [7:0]                         hls_coding_quadtree_hls_dup1_qp_y,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_qp_block_mask_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_qp_block_mask_o,
    input                                      hls_coding_quadtree_hls_dup1_qp_block_mask_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_cb_size_split_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_cb_size_split_o,
    input                                      hls_coding_quadtree_hls_dup1_cb_size_split_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_log2_min_cb_size,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_min_cb_width,
    input        [7:0]                         hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded,
    input                                      hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_ap_vld,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_tu_cu_qp_delta,
    input                                      hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_ap_vld,
    input        [7:0]                         hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded,
    input                                      hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_ap_vld,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_depth,
    input                                      hls_coding_quadtree_hls_dup1_depth_ap_vld,
    output logic [7:0]                         hls_coding_quadtree_hls_dup1_ctb_left_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup1_ctb_up_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup1_cu_qp_delta_enabled_flag,
    output logic [31:0]                        hls_coding_quadtree_hls_dup1_diff_cu_qp_delta_depth,
    output logic [7:0]                         hls_coding_quadtree_hls_dup1_cu_chroma_qp_offset_enabled_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup1_diff_cu_chroma_qp_offset_depth,
    input        [31:0]                        hls_coding_quadtree_hls_dup1_tab_ct_depth_Addr_A,
    input                                      hls_coding_quadtree_hls_dup1_tab_ct_depth_EN_A,
    input                                      hls_coding_quadtree_hls_dup1_tab_ct_depth_WEN_A,
    input        [7:0]                         hls_coding_quadtree_hls_dup1_tab_ct_depth_Din_A,
    output logic [7:0]                         hls_coding_quadtree_hls_dup1_tab_ct_depth_Dout_A,
    output logic                               hls_coding_quadtree_hls_dup2_ready,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_x1_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_x1_o,
    input                                      hls_coding_quadtree_hls_dup2_x1_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_y1_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_y1_o,
    input                                      hls_coding_quadtree_hls_dup2_y1_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o,
    input                                      hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_cb_depth_plus_one_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o,
    input                                      hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_width,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_height,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_split_cu_flag_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_split_cu_flag_o,
    input                                      hls_coding_quadtree_hls_dup2_split_cu_flag_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_more_data_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_more_data_o,
    input                                      hls_coding_quadtree_hls_dup2_more_data_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_rv_hls_coding_unit,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_rv_callback_flag,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_log2_ctb_size,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_qPy_pred,
    input                                      hls_coding_quadtree_hls_dup2_qPy_pred_ap_vld,
    output logic [7:0]                         hls_coding_quadtree_hls_dup2_qp_y,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_qp_block_mask_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_qp_block_mask_o,
    input                                      hls_coding_quadtree_hls_dup2_qp_block_mask_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_cb_size_split_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_cb_size_split_o,
    input                                      hls_coding_quadtree_hls_dup2_cb_size_split_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_log2_min_cb_size,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_min_cb_width,
    input        [7:0]                         hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded,
    input                                      hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_ap_vld,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_tu_cu_qp_delta,
    input                                      hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_ap_vld,
    input        [7:0]                         hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded,
    input                                      hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_ap_vld,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_depth,
    input                                      hls_coding_quadtree_hls_dup2_depth_ap_vld,
    output logic [7:0]                         hls_coding_quadtree_hls_dup2_ctb_left_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup2_ctb_up_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup2_cu_qp_delta_enabled_flag,
    output logic [31:0]                        hls_coding_quadtree_hls_dup2_diff_cu_qp_delta_depth,
    output logic [7:0]                         hls_coding_quadtree_hls_dup2_cu_chroma_qp_offset_enabled_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup2_diff_cu_chroma_qp_offset_depth,
    input        [31:0]                        hls_coding_quadtree_hls_dup2_tab_ct_depth_Addr_A,
    input                                      hls_coding_quadtree_hls_dup2_tab_ct_depth_EN_A,
    input                                      hls_coding_quadtree_hls_dup2_tab_ct_depth_WEN_A,
    input        [7:0]                         hls_coding_quadtree_hls_dup2_tab_ct_depth_Din_A,
    output logic [7:0]                         hls_coding_quadtree_hls_dup2_tab_ct_depth_Dout_A,
    output logic                               hls_coding_quadtree_hls_dup3_ready,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_x1_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_x1_o,
    input                                      hls_coding_quadtree_hls_dup3_x1_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_y1_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_y1_o,
    input                                      hls_coding_quadtree_hls_dup3_y1_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o,
    input                                      hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_cb_depth_plus_one_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o,
    input                                      hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_width,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_height,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_split_cu_flag_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_split_cu_flag_o,
    input                                      hls_coding_quadtree_hls_dup3_split_cu_flag_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_more_data_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_more_data_o,
    input                                      hls_coding_quadtree_hls_dup3_more_data_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_rv_hls_coding_unit,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_rv_callback_flag,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_log2_ctb_size,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_qPy_pred,
    input                                      hls_coding_quadtree_hls_dup3_qPy_pred_ap_vld,
    output logic [7:0]                         hls_coding_quadtree_hls_dup3_qp_y,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_qp_block_mask_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_qp_block_mask_o,
    input                                      hls_coding_quadtree_hls_dup3_qp_block_mask_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_cb_size_split_i,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_cb_size_split_o,
    input                                      hls_coding_quadtree_hls_dup3_cb_size_split_o_ap_vld,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_log2_min_cb_size,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_min_cb_width,
    input        [7:0]                         hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded,
    input                                      hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_ap_vld,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_tu_cu_qp_delta,
    input                                      hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_ap_vld,
    input        [7:0]                         hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded,
    input                                      hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_ap_vld,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_depth,
    input                                      hls_coding_quadtree_hls_dup3_depth_ap_vld,
    output logic [7:0]                         hls_coding_quadtree_hls_dup3_ctb_left_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup3_ctb_up_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup3_cu_qp_delta_enabled_flag,
    output logic [31:0]                        hls_coding_quadtree_hls_dup3_diff_cu_qp_delta_depth,
    output logic [7:0]                         hls_coding_quadtree_hls_dup3_cu_chroma_qp_offset_enabled_flag,
    output logic [7:0]                         hls_coding_quadtree_hls_dup3_diff_cu_chroma_qp_offset_depth,
    input        [31:0]                        hls_coding_quadtree_hls_dup3_tab_ct_depth_Addr_A,
    input                                      hls_coding_quadtree_hls_dup3_tab_ct_depth_EN_A,
    input                                      hls_coding_quadtree_hls_dup3_tab_ct_depth_WEN_A,
    input        [7:0]                         hls_coding_quadtree_hls_dup3_tab_ct_depth_Din_A,
    output logic [7:0]                         hls_coding_quadtree_hls_dup3_tab_ct_depth_Dout_A,
    output logic                               hls_coding_unit_hls_ready,
    output logic [7:0]                         hls_coding_unit_hls_loop_filter_disable_flag,
    output logic [31:0]                        hls_coding_unit_hls_max_transform_hierarchy_depth_inter,
    output logic [7:0]                         hls_coding_unit_hls_disable_deblocking_filter_flag,
    output logic [7:0]                         hls_coding_unit_hls_cu_qp_delta_enabled_flag,
    output logic [7:0]                         hls_coding_unit_hls_tu_is_cu_qp_delta_coded,
    output logic [7:0]                         hls_coding_unit_hls_cu_transquant_bypass_flag_i,
    input        [7:0]                         hls_coding_unit_hls_cu_transquant_bypass_flag_o,
    input                                      hls_coding_unit_hls_cu_transquant_bypass_flag_o_ap_vld,
    output logic                               hls_coding_unit_hls_pcm_flag_i,
    input                                      hls_coding_unit_hls_pcm_flag_o,
    input                                      hls_coding_unit_hls_pcm_flag_o_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_merge_flag,
    output logic [7:0]                         hls_coding_unit_hls_pred_mode_i,
    input        [7:0]                         hls_coding_unit_hls_pred_mode_o,
    input                                      hls_coding_unit_hls_pred_mode_o_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_part_mode_i,
    input        [7:0]                         hls_coding_unit_hls_part_mode_o,
    input                                      hls_coding_unit_hls_part_mode_o_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_max_trafo_depth,
    input                                      hls_coding_unit_hls_max_trafo_depth_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_cb_size_i,
    input        [31:0]                        hls_coding_unit_hls_cb_size_o,
    input                                      hls_coding_unit_hls_cb_size_o_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_idx_i,
    input        [31:0]                        hls_coding_unit_hls_idx_o,
    input                                      hls_coding_unit_hls_idx_o_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_xm_xBase,
    input                                      hls_coding_unit_hls_xm_xBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_xm_yBase,
    input                                      hls_coding_unit_hls_xm_yBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_xm_cb_xBase,
    input                                      hls_coding_unit_hls_xm_cb_xBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_xm_cb_yBase,
    input                                      hls_coding_unit_hls_xm_cb_yBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_xm_log2_cb_size,
    input                                      hls_coding_unit_hls_xm_log2_cb_size_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_rv_set_deblocking_bypass,
    output logic [31:0]                        hls_coding_unit_hls_rv_ff_hevc_deblocking_boundary_strengths,
    output logic [31:0]                        hls_coding_unit_hls_rv_hls_pcm_sample,
    output logic [31:0]                        hls_coding_unit_hls_rv_hls_prediction_unit,
    output logic [31:0]                        hls_coding_unit_hls_rv_hls_intra_prediction_unit,
    output logic [31:0]                        hls_coding_unit_hls_rv_hls_transform_tree,
    output logic [31:0]                        hls_coding_unit_hls_rv_callback_flag,
    input        [31:0]                        hls_coding_unit_hls_length_r,
    input                                      hls_coding_unit_hls_length_r_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_xm_x,
    input                                      hls_coding_unit_hls_xm_x_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_xm_y,
    input                                      hls_coding_unit_hls_xm_y_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_pu_intra_pred_mode_0,
    input                                      hls_coding_unit_hls_pu_intra_pred_mode_0_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_pu_intra_pred_mode_1,
    input                                      hls_coding_unit_hls_pu_intra_pred_mode_1_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_pu_intra_pred_mode_2,
    input                                      hls_coding_unit_hls_pu_intra_pred_mode_2_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_pu_intra_pred_mode_3,
    input                                      hls_coding_unit_hls_pu_intra_pred_mode_3_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_qPy_pred,
    input                                      hls_coding_unit_hls_qPy_pred_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_skip_flag_start,
    input                                      hls_coding_unit_hls_skip_flag_start_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_log2_min_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_log2_ctb_size,
    output logic [31:0]                        hls_coding_unit_hls_diff_cu_qp_delta_depth,
    output logic [7:0]                         hls_coding_unit_hls_qp_y,
    output logic [7:0]                         hls_coding_unit_hls_transquant_bypass_enable_flag,
    output logic [31:0]                        hls_coding_unit_hls_min_cb_width,
    input        [7:0]                         hls_coding_unit_hls_intra_split_flag,
    input                                      hls_coding_unit_hls_intra_split_flag_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_slice_type,
    output logic [7:0]                         hls_coding_unit_hls_ctb_left_flag,
    output logic [7:0]                         hls_coding_unit_hls_ctb_up_flag,
    output logic [7:0]                         hls_coding_unit_hls_amp_enabled_flag,
    output logic [31:0]                        hls_coding_unit_hls_pcm_enabled_flag,
    output logic [31:0]                        hls_coding_unit_hls_log2_min_pcm_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_log2_max_pcm_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_depth,
    input        [31:0]                        hls_coding_unit_hls_skip_flag_Addr_A,
    input                                      hls_coding_unit_hls_skip_flag_EN_A,
    input                                      hls_coding_unit_hls_skip_flag_WEN_A,
    input        [7:0]                         hls_coding_unit_hls_skip_flag_Din_A,
    output logic [7:0]                         hls_coding_unit_hls_skip_flag_Dout_A,
    input        [31:0]                        hls_coding_unit_hls_qp_y_tab_Addr_A,
    input                                      hls_coding_unit_hls_qp_y_tab_EN_A,
    input                                      hls_coding_unit_hls_qp_y_tab_WEN_A,
    input        [7:0]                         hls_coding_unit_hls_qp_y_tab_Din_A,
    output logic [7:0]                         hls_coding_unit_hls_qp_y_tab_Dout_A,
    input        [31:0]                        hls_coding_unit_hls_tab_ct_depth_Addr_A,
    input                                      hls_coding_unit_hls_tab_ct_depth_EN_A,
    input                                      hls_coding_unit_hls_tab_ct_depth_WEN_A,
    input        [7:0]                         hls_coding_unit_hls_tab_ct_depth_Din_A,
    output logic [7:0]                         hls_coding_unit_hls_tab_ct_depth_Dout_A,
    output logic                               hls_coding_unit_hls_dup1_ready,
    output logic [7:0]                         hls_coding_unit_hls_dup1_loop_filter_disable_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup1_max_transform_hierarchy_depth_inter,
    output logic [7:0]                         hls_coding_unit_hls_dup1_disable_deblocking_filter_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup1_cu_qp_delta_enabled_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup1_tu_is_cu_qp_delta_coded,
    output logic [7:0]                         hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_i,
    input        [7:0]                         hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o,
    input                                      hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_ap_vld,
    output logic                               hls_coding_unit_hls_dup1_pcm_flag_i,
    input                                      hls_coding_unit_hls_dup1_pcm_flag_o,
    input                                      hls_coding_unit_hls_dup1_pcm_flag_o_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup1_merge_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup1_pred_mode_i,
    input        [7:0]                         hls_coding_unit_hls_dup1_pred_mode_o,
    input                                      hls_coding_unit_hls_dup1_pred_mode_o_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup1_part_mode_i,
    input        [7:0]                         hls_coding_unit_hls_dup1_part_mode_o,
    input                                      hls_coding_unit_hls_dup1_part_mode_o_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup1_max_trafo_depth,
    input                                      hls_coding_unit_hls_dup1_max_trafo_depth_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup1_cb_size_i,
    input        [31:0]                        hls_coding_unit_hls_dup1_cb_size_o,
    input                                      hls_coding_unit_hls_dup1_cb_size_o_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup1_idx_i,
    input        [31:0]                        hls_coding_unit_hls_dup1_idx_o,
    input                                      hls_coding_unit_hls_dup1_idx_o_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_xm_xBase,
    input                                      hls_coding_unit_hls_dup1_xm_xBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_xm_yBase,
    input                                      hls_coding_unit_hls_dup1_xm_yBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_xm_cb_xBase,
    input                                      hls_coding_unit_hls_dup1_xm_cb_xBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_xm_cb_yBase,
    input                                      hls_coding_unit_hls_dup1_xm_cb_yBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_xm_log2_cb_size,
    input                                      hls_coding_unit_hls_dup1_xm_log2_cb_size_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup1_rv_set_deblocking_bypass,
    output logic [31:0]                        hls_coding_unit_hls_dup1_rv_ff_hevc_deblocking_boundary_strengths,
    output logic [31:0]                        hls_coding_unit_hls_dup1_rv_hls_pcm_sample,
    output logic [31:0]                        hls_coding_unit_hls_dup1_rv_hls_prediction_unit,
    output logic [31:0]                        hls_coding_unit_hls_dup1_rv_hls_intra_prediction_unit,
    output logic [31:0]                        hls_coding_unit_hls_dup1_rv_hls_transform_tree,
    output logic [31:0]                        hls_coding_unit_hls_dup1_rv_callback_flag,
    input        [31:0]                        hls_coding_unit_hls_dup1_length_r,
    input                                      hls_coding_unit_hls_dup1_length_r_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_xm_x,
    input                                      hls_coding_unit_hls_dup1_xm_x_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_xm_y,
    input                                      hls_coding_unit_hls_dup1_xm_y_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup1_pu_intra_pred_mode_0,
    input                                      hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup1_pu_intra_pred_mode_1,
    input                                      hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup1_pu_intra_pred_mode_2,
    input                                      hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup1_pu_intra_pred_mode_3,
    input                                      hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_qPy_pred,
    input                                      hls_coding_unit_hls_dup1_qPy_pred_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup1_skip_flag_start,
    input                                      hls_coding_unit_hls_dup1_skip_flag_start_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup1_log2_min_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup1_log2_ctb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup1_diff_cu_qp_delta_depth,
    output logic [7:0]                         hls_coding_unit_hls_dup1_qp_y,
    output logic [7:0]                         hls_coding_unit_hls_dup1_transquant_bypass_enable_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup1_min_cb_width,
    input        [7:0]                         hls_coding_unit_hls_dup1_intra_split_flag,
    input                                      hls_coding_unit_hls_dup1_intra_split_flag_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup1_slice_type,
    output logic [7:0]                         hls_coding_unit_hls_dup1_ctb_left_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup1_ctb_up_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup1_amp_enabled_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup1_pcm_enabled_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup1_log2_min_pcm_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup1_log2_max_pcm_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup1_depth,
    input        [31:0]                        hls_coding_unit_hls_dup1_skip_flag_Addr_A,
    input                                      hls_coding_unit_hls_dup1_skip_flag_EN_A,
    input                                      hls_coding_unit_hls_dup1_skip_flag_WEN_A,
    input        [7:0]                         hls_coding_unit_hls_dup1_skip_flag_Din_A,
    output logic [7:0]                         hls_coding_unit_hls_dup1_skip_flag_Dout_A,
    input        [31:0]                        hls_coding_unit_hls_dup1_qp_y_tab_Addr_A,
    input                                      hls_coding_unit_hls_dup1_qp_y_tab_EN_A,
    input                                      hls_coding_unit_hls_dup1_qp_y_tab_WEN_A,
    input        [7:0]                         hls_coding_unit_hls_dup1_qp_y_tab_Din_A,
    output logic [7:0]                         hls_coding_unit_hls_dup1_qp_y_tab_Dout_A,
    input        [31:0]                        hls_coding_unit_hls_dup1_tab_ct_depth_Addr_A,
    input                                      hls_coding_unit_hls_dup1_tab_ct_depth_EN_A,
    input                                      hls_coding_unit_hls_dup1_tab_ct_depth_WEN_A,
    input        [7:0]                         hls_coding_unit_hls_dup1_tab_ct_depth_Din_A,
    output logic [7:0]                         hls_coding_unit_hls_dup1_tab_ct_depth_Dout_A,
    output logic                               hls_coding_unit_hls_dup2_ready,
    output logic [7:0]                         hls_coding_unit_hls_dup2_loop_filter_disable_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup2_max_transform_hierarchy_depth_inter,
    output logic [7:0]                         hls_coding_unit_hls_dup2_disable_deblocking_filter_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup2_cu_qp_delta_enabled_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup2_tu_is_cu_qp_delta_coded,
    output logic [7:0]                         hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_i,
    input        [7:0]                         hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o,
    input                                      hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_ap_vld,
    output logic                               hls_coding_unit_hls_dup2_pcm_flag_i,
    input                                      hls_coding_unit_hls_dup2_pcm_flag_o,
    input                                      hls_coding_unit_hls_dup2_pcm_flag_o_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup2_merge_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup2_pred_mode_i,
    input        [7:0]                         hls_coding_unit_hls_dup2_pred_mode_o,
    input                                      hls_coding_unit_hls_dup2_pred_mode_o_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup2_part_mode_i,
    input        [7:0]                         hls_coding_unit_hls_dup2_part_mode_o,
    input                                      hls_coding_unit_hls_dup2_part_mode_o_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup2_max_trafo_depth,
    input                                      hls_coding_unit_hls_dup2_max_trafo_depth_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup2_cb_size_i,
    input        [31:0]                        hls_coding_unit_hls_dup2_cb_size_o,
    input                                      hls_coding_unit_hls_dup2_cb_size_o_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup2_idx_i,
    input        [31:0]                        hls_coding_unit_hls_dup2_idx_o,
    input                                      hls_coding_unit_hls_dup2_idx_o_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_xm_xBase,
    input                                      hls_coding_unit_hls_dup2_xm_xBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_xm_yBase,
    input                                      hls_coding_unit_hls_dup2_xm_yBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_xm_cb_xBase,
    input                                      hls_coding_unit_hls_dup2_xm_cb_xBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_xm_cb_yBase,
    input                                      hls_coding_unit_hls_dup2_xm_cb_yBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_xm_log2_cb_size,
    input                                      hls_coding_unit_hls_dup2_xm_log2_cb_size_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup2_rv_set_deblocking_bypass,
    output logic [31:0]                        hls_coding_unit_hls_dup2_rv_ff_hevc_deblocking_boundary_strengths,
    output logic [31:0]                        hls_coding_unit_hls_dup2_rv_hls_pcm_sample,
    output logic [31:0]                        hls_coding_unit_hls_dup2_rv_hls_prediction_unit,
    output logic [31:0]                        hls_coding_unit_hls_dup2_rv_hls_intra_prediction_unit,
    output logic [31:0]                        hls_coding_unit_hls_dup2_rv_hls_transform_tree,
    output logic [31:0]                        hls_coding_unit_hls_dup2_rv_callback_flag,
    input        [31:0]                        hls_coding_unit_hls_dup2_length_r,
    input                                      hls_coding_unit_hls_dup2_length_r_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_xm_x,
    input                                      hls_coding_unit_hls_dup2_xm_x_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_xm_y,
    input                                      hls_coding_unit_hls_dup2_xm_y_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup2_pu_intra_pred_mode_0,
    input                                      hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup2_pu_intra_pred_mode_1,
    input                                      hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup2_pu_intra_pred_mode_2,
    input                                      hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup2_pu_intra_pred_mode_3,
    input                                      hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_qPy_pred,
    input                                      hls_coding_unit_hls_dup2_qPy_pred_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup2_skip_flag_start,
    input                                      hls_coding_unit_hls_dup2_skip_flag_start_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup2_log2_min_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup2_log2_ctb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup2_diff_cu_qp_delta_depth,
    output logic [7:0]                         hls_coding_unit_hls_dup2_qp_y,
    output logic [7:0]                         hls_coding_unit_hls_dup2_transquant_bypass_enable_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup2_min_cb_width,
    input        [7:0]                         hls_coding_unit_hls_dup2_intra_split_flag,
    input                                      hls_coding_unit_hls_dup2_intra_split_flag_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup2_slice_type,
    output logic [7:0]                         hls_coding_unit_hls_dup2_ctb_left_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup2_ctb_up_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup2_amp_enabled_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup2_pcm_enabled_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup2_log2_min_pcm_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup2_log2_max_pcm_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup2_depth,
    input        [31:0]                        hls_coding_unit_hls_dup2_skip_flag_Addr_A,
    input                                      hls_coding_unit_hls_dup2_skip_flag_EN_A,
    input                                      hls_coding_unit_hls_dup2_skip_flag_WEN_A,
    input        [7:0]                         hls_coding_unit_hls_dup2_skip_flag_Din_A,
    output logic [7:0]                         hls_coding_unit_hls_dup2_skip_flag_Dout_A,
    input        [31:0]                        hls_coding_unit_hls_dup2_qp_y_tab_Addr_A,
    input                                      hls_coding_unit_hls_dup2_qp_y_tab_EN_A,
    input                                      hls_coding_unit_hls_dup2_qp_y_tab_WEN_A,
    input        [7:0]                         hls_coding_unit_hls_dup2_qp_y_tab_Din_A,
    output logic [7:0]                         hls_coding_unit_hls_dup2_qp_y_tab_Dout_A,
    input        [31:0]                        hls_coding_unit_hls_dup2_tab_ct_depth_Addr_A,
    input                                      hls_coding_unit_hls_dup2_tab_ct_depth_EN_A,
    input                                      hls_coding_unit_hls_dup2_tab_ct_depth_WEN_A,
    input        [7:0]                         hls_coding_unit_hls_dup2_tab_ct_depth_Din_A,
    output logic [7:0]                         hls_coding_unit_hls_dup2_tab_ct_depth_Dout_A,
    output logic                               hls_coding_unit_hls_dup3_ready,
    output logic [7:0]                         hls_coding_unit_hls_dup3_loop_filter_disable_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup3_max_transform_hierarchy_depth_inter,
    output logic [7:0]                         hls_coding_unit_hls_dup3_disable_deblocking_filter_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup3_cu_qp_delta_enabled_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup3_tu_is_cu_qp_delta_coded,
    output logic [7:0]                         hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_i,
    input        [7:0]                         hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o,
    input                                      hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_ap_vld,
    output logic                               hls_coding_unit_hls_dup3_pcm_flag_i,
    input                                      hls_coding_unit_hls_dup3_pcm_flag_o,
    input                                      hls_coding_unit_hls_dup3_pcm_flag_o_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup3_merge_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup3_pred_mode_i,
    input        [7:0]                         hls_coding_unit_hls_dup3_pred_mode_o,
    input                                      hls_coding_unit_hls_dup3_pred_mode_o_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup3_part_mode_i,
    input        [7:0]                         hls_coding_unit_hls_dup3_part_mode_o,
    input                                      hls_coding_unit_hls_dup3_part_mode_o_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup3_max_trafo_depth,
    input                                      hls_coding_unit_hls_dup3_max_trafo_depth_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup3_cb_size_i,
    input        [31:0]                        hls_coding_unit_hls_dup3_cb_size_o,
    input                                      hls_coding_unit_hls_dup3_cb_size_o_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup3_idx_i,
    input        [31:0]                        hls_coding_unit_hls_dup3_idx_o,
    input                                      hls_coding_unit_hls_dup3_idx_o_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_xm_xBase,
    input                                      hls_coding_unit_hls_dup3_xm_xBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_xm_yBase,
    input                                      hls_coding_unit_hls_dup3_xm_yBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_xm_cb_xBase,
    input                                      hls_coding_unit_hls_dup3_xm_cb_xBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_xm_cb_yBase,
    input                                      hls_coding_unit_hls_dup3_xm_cb_yBase_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_xm_log2_cb_size,
    input                                      hls_coding_unit_hls_dup3_xm_log2_cb_size_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup3_rv_set_deblocking_bypass,
    output logic [31:0]                        hls_coding_unit_hls_dup3_rv_ff_hevc_deblocking_boundary_strengths,
    output logic [31:0]                        hls_coding_unit_hls_dup3_rv_hls_pcm_sample,
    output logic [31:0]                        hls_coding_unit_hls_dup3_rv_hls_prediction_unit,
    output logic [31:0]                        hls_coding_unit_hls_dup3_rv_hls_intra_prediction_unit,
    output logic [31:0]                        hls_coding_unit_hls_dup3_rv_hls_transform_tree,
    output logic [31:0]                        hls_coding_unit_hls_dup3_rv_callback_flag,
    input        [31:0]                        hls_coding_unit_hls_dup3_length_r,
    input                                      hls_coding_unit_hls_dup3_length_r_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_xm_x,
    input                                      hls_coding_unit_hls_dup3_xm_x_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_xm_y,
    input                                      hls_coding_unit_hls_dup3_xm_y_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup3_pu_intra_pred_mode_0,
    input                                      hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup3_pu_intra_pred_mode_1,
    input                                      hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup3_pu_intra_pred_mode_2,
    input                                      hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_ap_vld,
    input        [7:0]                         hls_coding_unit_hls_dup3_pu_intra_pred_mode_3,
    input                                      hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_qPy_pred,
    input                                      hls_coding_unit_hls_dup3_qPy_pred_ap_vld,
    input        [31:0]                        hls_coding_unit_hls_dup3_skip_flag_start,
    input                                      hls_coding_unit_hls_dup3_skip_flag_start_ap_vld,
    output logic [31:0]                        hls_coding_unit_hls_dup3_log2_min_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup3_log2_ctb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup3_diff_cu_qp_delta_depth,
    output logic [7:0]                         hls_coding_unit_hls_dup3_qp_y,
    output logic [7:0]                         hls_coding_unit_hls_dup3_transquant_bypass_enable_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup3_min_cb_width,
    input        [7:0]                         hls_coding_unit_hls_dup3_intra_split_flag,
    input                                      hls_coding_unit_hls_dup3_intra_split_flag_ap_vld,
    output logic [7:0]                         hls_coding_unit_hls_dup3_slice_type,
    output logic [7:0]                         hls_coding_unit_hls_dup3_ctb_left_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup3_ctb_up_flag,
    output logic [7:0]                         hls_coding_unit_hls_dup3_amp_enabled_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup3_pcm_enabled_flag,
    output logic [31:0]                        hls_coding_unit_hls_dup3_log2_min_pcm_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup3_log2_max_pcm_cb_size,
    output logic [31:0]                        hls_coding_unit_hls_dup3_depth,
    input        [31:0]                        hls_coding_unit_hls_dup3_skip_flag_Addr_A,
    input                                      hls_coding_unit_hls_dup3_skip_flag_EN_A,
    input                                      hls_coding_unit_hls_dup3_skip_flag_WEN_A,
    input        [7:0]                         hls_coding_unit_hls_dup3_skip_flag_Din_A,
    output logic [7:0]                         hls_coding_unit_hls_dup3_skip_flag_Dout_A,
    input        [31:0]                        hls_coding_unit_hls_dup3_qp_y_tab_Addr_A,
    input                                      hls_coding_unit_hls_dup3_qp_y_tab_EN_A,
    input                                      hls_coding_unit_hls_dup3_qp_y_tab_WEN_A,
    input        [7:0]                         hls_coding_unit_hls_dup3_qp_y_tab_Din_A,
    output logic [7:0]                         hls_coding_unit_hls_dup3_qp_y_tab_Dout_A,
    input        [31:0]                        hls_coding_unit_hls_dup3_tab_ct_depth_Addr_A,
    input                                      hls_coding_unit_hls_dup3_tab_ct_depth_EN_A,
    input                                      hls_coding_unit_hls_dup3_tab_ct_depth_WEN_A,
    input        [7:0]                         hls_coding_unit_hls_dup3_tab_ct_depth_Din_A,
    output logic [7:0]                         hls_coding_unit_hls_dup3_tab_ct_depth_Dout_A,
    output logic                               copy_top_left_pixel_hls_ready,
    output logic [31:0]                        copy_top_left_pixel_hls_log2_trafo_size,
    output logic [31:0]                        copy_top_left_pixel_hls_log2_ctb_size,
    output logic [31:0]                        copy_top_left_pixel_hls_log2_min_tb_size,
    output logic [7:0]                         copy_top_left_pixel_hls_pred_mode,
    output logic [31:0]                        copy_top_left_pixel_hls_hshift_0,
    output logic [31:0]                        copy_top_left_pixel_hls_hshift_1,
    output logic [31:0]                        copy_top_left_pixel_hls_hshift_2,
    output logic [31:0]                        copy_top_left_pixel_hls_vshift_0,
    output logic [31:0]                        copy_top_left_pixel_hls_vshift_1,
    output logic [31:0]                        copy_top_left_pixel_hls_vshift_2,
    output logic [31:0]                        copy_top_left_pixel_hls_buf_data_0,
    output logic [31:0]                        copy_top_left_pixel_hls_buf_data_1,
    output logic [31:0]                        copy_top_left_pixel_hls_buf_data_2,
    output logic [31:0]                        copy_top_left_pixel_hls_xm_linesize_0,
    output logic [31:0]                        copy_top_left_pixel_hls_xm_linesize_1,
    output logic [31:0]                        copy_top_left_pixel_hls_xm_linesize_2,
    output logic [7:0]                         copy_top_left_pixel_hls_cmdr_run_i,
    input        [7:0]                         copy_top_left_pixel_hls_cmdr_run_o,
    input                                      copy_top_left_pixel_hls_cmdr_run_o_ap_vld,
    output logic                               genPredCol_hls_ready,
    input        [31:0]                        genPredCol_hls_predColBuf_0,
    input                                      genPredCol_hls_predColBuf_0_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_1,
    input                                      genPredCol_hls_predColBuf_1_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_2,
    input                                      genPredCol_hls_predColBuf_2_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_3,
    input                                      genPredCol_hls_predColBuf_3_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_4,
    input                                      genPredCol_hls_predColBuf_4_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_5,
    input                                      genPredCol_hls_predColBuf_5_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_6,
    input                                      genPredCol_hls_predColBuf_6_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_7,
    input                                      genPredCol_hls_predColBuf_7_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_8,
    input                                      genPredCol_hls_predColBuf_8_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_9,
    input                                      genPredCol_hls_predColBuf_9_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_10,
    input                                      genPredCol_hls_predColBuf_10_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_11,
    input                                      genPredCol_hls_predColBuf_11_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_12,
    input                                      genPredCol_hls_predColBuf_12_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_13,
    input                                      genPredCol_hls_predColBuf_13_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_14,
    input                                      genPredCol_hls_predColBuf_14_ap_vld,
    input        [31:0]                        genPredCol_hls_predColBuf_15,
    input                                      genPredCol_hls_predColBuf_15_ap_vld,
    output logic [31:0]                        genPredCol_hls_predColBuf_16_i,
    input        [31:0]                        genPredCol_hls_predColBuf_16_o,
    input                                      genPredCol_hls_predColBuf_16_o_ap_vld,
    output logic [7:0]                         genPredCol_hls_log2_width,
    input        [31:0]                        genPredCol_hls_tab_mvf_pred_flag_row_Addr_A,
    input                                      genPredCol_hls_tab_mvf_pred_flag_row_EN_A,
    input        [3:0]                         genPredCol_hls_tab_mvf_pred_flag_row_WEN_A,
    input        [31:0]                        genPredCol_hls_tab_mvf_pred_flag_row_Din_A,
    output logic [31:0]                        genPredCol_hls_tab_mvf_pred_flag_row_Dout_A,
    input        [31:0]                        genPredCol_hls_cbf_luma_base_Addr_A,
    input                                      genPredCol_hls_cbf_luma_base_EN_A,
    input        [3:0]                         genPredCol_hls_cbf_luma_base_WEN_A,
    input        [31:0]                        genPredCol_hls_cbf_luma_base_Din_A,
    output logic [31:0]                        genPredCol_hls_cbf_luma_base_Dout_A,
    output logic [31:0]                        genPredCol_hls_log2_min_tb_size,
    output logic [31:0]                        genPredCol_hls_min_tb_width,
    output logic                               ff_hevc_get_sub_cu_zscan_id_hls_ready,
    output logic [31:0]                        ff_hevc_get_sub_cu_zscan_id_hls_log2_ctb_size,
    input        [31:0]                        ff_hevc_get_sub_cu_zscan_id_hls_zscan_id,
    input                                      ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_ap_vld,
    output logic                               ff_hevc_skip_flag_decode_hls_ready,
    output logic [31:0]                        ff_hevc_skip_flag_decode_hls_log2_ctb_size,
    output logic [7:0]                         ff_hevc_skip_flag_decode_hls_ctb_left_flag,
    output logic [7:0]                         ff_hevc_skip_flag_decode_hls_ctb_up_flag,
    output logic                               ff_hevc_set_qPy_hls_ready,
    input        [7:0]                         ff_hevc_set_qPy_hls_qp_y,
    input                                      ff_hevc_set_qPy_hls_qp_y_ap_vld,
    output logic [7:0]                         ff_hevc_set_qPy_hls_first_qp_group_i,
    input        [7:0]                         ff_hevc_set_qPy_hls_first_qp_group_o,
    input                                      ff_hevc_set_qPy_hls_first_qp_group_o_ap_vld,
    output logic [31:0]                        ff_hevc_set_qPy_hls_qPy_pred,
    output logic [31:0]                        ff_hevc_set_qPy_hls_log2_ctb_size,
    output logic [31:0]                        ff_hevc_set_qPy_hls_diff_cu_qp_delta_depth,
    output logic [31:0]                        ff_hevc_set_qPy_hls_log2_min_cb_size,
    output logic [31:0]                        ff_hevc_set_qPy_hls_min_cb_width,
    output logic [7:0]                         ff_hevc_set_qPy_hls_slice_qp,
    input        [31:0]                        ff_hevc_set_qPy_hls_qp_y_tab_Addr_A,
    input                                      ff_hevc_set_qPy_hls_qp_y_tab_EN_A,
    input                                      ff_hevc_set_qPy_hls_qp_y_tab_WEN_A,
    input        [7:0]                         ff_hevc_set_qPy_hls_qp_y_tab_Din_A,
    output logic [7:0]                         ff_hevc_set_qPy_hls_qp_y_tab_Dout_A,
    output logic [31:0]                        ff_hevc_set_qPy_hls_tu_cu_qp_delta,
    output logic [31:0]                        ff_hevc_set_qPy_hls_qp_bd_offset,
    output logic                               ff_hevc_deblocking_boundary_strengths_hls_ready,
    output logic [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_log2_trafo_size,
    output logic [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_bs_width,
    input        [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_horizontal_bs_Addr_A,
    input                                      ff_hevc_deblocking_boundary_strengths_hls_horizontal_bs_EN_A,
    input                                      ff_hevc_deblocking_boundary_strengths_hls_horizontal_bs_WEN_A,
    input        [7:0]                         ff_hevc_deblocking_boundary_strengths_hls_horizontal_bs_Din_A,
    output logic [7:0]                         ff_hevc_deblocking_boundary_strengths_hls_horizontal_bs_Dout_A,
    input        [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_vertical_bs_Addr_A,
    input                                      ff_hevc_deblocking_boundary_strengths_hls_vertical_bs_EN_A,
    input                                      ff_hevc_deblocking_boundary_strengths_hls_vertical_bs_WEN_A,
    input        [7:0]                         ff_hevc_deblocking_boundary_strengths_hls_vertical_bs_Din_A,
    output logic [7:0]                         ff_hevc_deblocking_boundary_strengths_hls_vertical_bs_Dout_A,
    output logic [7:0]                         ff_hevc_deblocking_boundary_strengths_hls_slice_loop_filter_across_slices_enabled_flag,
    output logic [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_log2_min_pu_size,
    output logic [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_log2_min_tb_size,
    output logic [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_log2_ctb_size,
    output logic [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_min_pu_width,
    output logic [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_min_tb_width,
    output logic [7:0]                         ff_hevc_deblocking_boundary_strengths_hls_log2_width,
    output logic [7:0]                         ff_hevc_deblocking_boundary_strengths_hls_slice_or_tiles_up_boundary,
    output logic [7:0]                         ff_hevc_deblocking_boundary_strengths_hls_slice_or_tiles_left_boundary,
    output logic [7:0]                         ff_hevc_deblocking_boundary_strengths_hls_loop_filter_across_tiles_enabled_flag,
    input        [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_cbf_luma_base_Addr_A,
    input                                      ff_hevc_deblocking_boundary_strengths_hls_cbf_luma_base_EN_A,
    input        [3:0]                         ff_hevc_deblocking_boundary_strengths_hls_cbf_luma_base_WEN_A,
    input        [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_cbf_luma_base_Din_A,
    output logic [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_cbf_luma_base_Dout_A,
    input        [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_pred_flag_row_Addr_A,
    input                                      ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_pred_flag_row_EN_A,
    input        [3:0]                         ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_pred_flag_row_WEN_A,
    input        [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_pred_flag_row_Din_A,
    output logic [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_pred_flag_row_Dout_A,
    input        [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_x_Addr_A,
    input                                      ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_x_EN_A,
    input        [1:0]                         ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_x_WEN_A,
    input        [15:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_x_Din_A,
    output logic [15:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_x_Dout_A,
    input        [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_y_Addr_A,
    input                                      ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_y_EN_A,
    input        [1:0]                         ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_y_WEN_A,
    input        [15:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_y_Din_A,
    output logic [15:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_y_Dout_A,
    input        [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_x_Addr_A,
    input                                      ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_x_EN_A,
    input        [1:0]                         ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_x_WEN_A,
    input        [15:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_x_Din_A,
    output logic [15:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_x_Dout_A,
    input        [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_y_Addr_A,
    input                                      ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_y_EN_A,
    input        [1:0]                         ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_y_WEN_A,
    input        [15:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_y_Din_A,
    output logic [15:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_y_Dout_A,
    input        [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_0_Addr_A,
    input                                      ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_0_EN_A,
    input        [3:0]                         ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_0_WEN_A,
    input        [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_0_Din_A,
    output logic [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_0_Dout_A,
    input        [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_1_Addr_A,
    input                                      ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_1_EN_A,
    input        [3:0]                         ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_1_WEN_A,
    input        [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_1_Din_A,
    output logic [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_1_Dout_A,
    input        [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_0_Addr_A,
    input                                      ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_0_EN_A,
    input                                      ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_0_WEN_A,
    input        [7:0]                         ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_0_Din_A,
    output logic [7:0]                         ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_0_Dout_A,
    input        [31:0]                        ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_1_Addr_A,
    input                                      ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_1_EN_A,
    input                                      ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_1_WEN_A,
    input        [7:0]                         ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_1_Din_A,
    output logic [7:0]                         ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_1_Dout_A,
    output logic                               hls_decode_neighbour_hls_ready,
    input        [31:0]                        hls_decode_neighbour_hls_ctb_addr_rs_to_ts_Addr_A,
    input                                      hls_decode_neighbour_hls_ctb_addr_rs_to_ts_EN_A,
    input        [1:0]                         hls_decode_neighbour_hls_ctb_addr_rs_to_ts_WEN_A,
    input        [15:0]                        hls_decode_neighbour_hls_ctb_addr_rs_to_ts_Din_A,
    output logic [15:0]                        hls_decode_neighbour_hls_ctb_addr_rs_to_ts_Dout_A,
    input        [31:0]                        hls_decode_neighbour_hls_tile_id_Addr_A,
    input                                      hls_decode_neighbour_hls_tile_id_EN_A,
    input        [1:0]                         hls_decode_neighbour_hls_tile_id_WEN_A,
    input        [15:0]                        hls_decode_neighbour_hls_tile_id_Din_A,
    output logic [15:0]                        hls_decode_neighbour_hls_tile_id_Dout_A,
    input        [7:0]                         hls_decode_neighbour_hls_first_qp_group,
    input                                      hls_decode_neighbour_hls_first_qp_group_ap_vld,
    input        [15:0]                        hls_decode_neighbour_hls_end_of_tiles_x,
    input                                      hls_decode_neighbour_hls_end_of_tiles_x_ap_vld,
    input        [15:0]                        hls_decode_neighbour_hls_end_of_tiles_y,
    input                                      hls_decode_neighbour_hls_end_of_tiles_y_ap_vld,
    input        [7:0]                         hls_decode_neighbour_hls_slice_or_tiles_left_boundary,
    input                                      hls_decode_neighbour_hls_slice_or_tiles_left_boundary_ap_vld,
    input        [7:0]                         hls_decode_neighbour_hls_slice_or_tiles_up_boundary,
    input                                      hls_decode_neighbour_hls_slice_or_tiles_up_boundary_ap_vld,
    input                                      hls_decode_neighbour_hls_ctb_left_flag,
    input                                      hls_decode_neighbour_hls_ctb_left_flag_ap_vld,
    input                                      hls_decode_neighbour_hls_ctb_up_flag,
    input                                      hls_decode_neighbour_hls_ctb_up_flag_ap_vld,
    input                                      hls_decode_neighbour_hls_ctb_up_right_flag,
    input                                      hls_decode_neighbour_hls_ctb_up_right_flag_ap_vld,
    input                                      hls_decode_neighbour_hls_ctb_up_left_flag,
    input                                      hls_decode_neighbour_hls_ctb_up_left_flag_ap_vld,
    output logic [31:0]                        hls_decode_neighbour_hls_x_ctb,
    output logic [31:0]                        hls_decode_neighbour_hls_y_ctb,
    output logic [31:0]                        hls_decode_neighbour_hls_ctb_addr_ts,
    output logic [31:0]                        hls_decode_neighbour_hls_log2_ctb_size,
    output logic [31:0]                        hls_decode_neighbour_hls_ctb_width,
    output logic [31:0]                        hls_decode_neighbour_hls_slice_addr,
    output logic [7:0]                         hls_decode_neighbour_hls_entropy_coding_sync_enabled_flag,
    output logic [7:0]                         hls_decode_neighbour_hls_tiles_enabled_flag,
    output logic [31:0]                        hls_decode_neighbour_hls_num_tile_columns,
    input        [31:0]                        hls_decode_neighbour_hls_column_width_Addr_A,
    input                                      hls_decode_neighbour_hls_column_width_EN_A,
    input        [1:0]                         hls_decode_neighbour_hls_column_width_WEN_A,
    input        [15:0]                        hls_decode_neighbour_hls_column_width_Din_A,
    output logic [15:0]                        hls_decode_neighbour_hls_column_width_Dout_A,
    output logic [31:0]                        hls_decode_neighbour_hls_width,
    output logic [31:0]                        hls_decode_neighbour_hls_height,
    output logic                               set_tab_mvf_pred_flag_hls_ready,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_log2_min_pu_size,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_min_pu_width,
    output logic [7:0]                         set_tab_mvf_pred_flag_hls_log2_width,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_tab_mvf_pred_flag_row_Addr_A,
    input                                      set_tab_mvf_pred_flag_hls_tab_mvf_pred_flag_row_EN_A,
    input        [3:0]                         set_tab_mvf_pred_flag_hls_tab_mvf_pred_flag_row_WEN_A,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_tab_mvf_pred_flag_row_Din_A,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_tab_mvf_pred_flag_row_Dout_A,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_0_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_0_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_0_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_1_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_1_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_1_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_2_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_2_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_2_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_3_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_3_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_3_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_4_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_4_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_4_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_5_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_5_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_5_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_6_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_6_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_6_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_7_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_7_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_7_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_8_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_8_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_8_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_9_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_9_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_9_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_10_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_10_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_10_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_11_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_11_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_11_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_12_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_12_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_12_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_13_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_13_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_13_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_14_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_14_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_14_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_15_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_15_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_15_o_ap_vld,
    output logic [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_16_i,
    input        [31:0]                        set_tab_mvf_pred_flag_hls_predColBuf_16_o,
    input                                      set_tab_mvf_pred_flag_hls_predColBuf_16_o_ap_vld,
    output logic                               init_intra_neighbors_hls_ready,
    output logic [31:0]                        init_intra_neighbors_hls_hshift_0,
    output logic [31:0]                        init_intra_neighbors_hls_hshift_1,
    output logic [31:0]                        init_intra_neighbors_hls_hshift_2,
    output logic [31:0]                        init_intra_neighbors_hls_vshift_0,
    output logic [31:0]                        init_intra_neighbors_hls_vshift_1,
    output logic [31:0]                        init_intra_neighbors_hls_vshift_2,
    output logic [31:0]                        init_intra_neighbors_hls_log2_min_pu_size,
    output logic [31:0]                        init_intra_neighbors_hls_log2_min_tb_size,
    output logic [31:0]                        init_intra_neighbors_hls_log2_ctb_size,
    output logic [7:0]                         init_intra_neighbors_hls_tb_mask,
    output logic [31:0]                        init_intra_neighbors_hls_width,
    output logic [31:0]                        init_intra_neighbors_hls_height,
    output logic [7:0]                         init_intra_neighbors_hls_log2_width,
    output logic [7:0]                         init_intra_neighbors_hls_log2_height,
    output logic [7:0]                         init_intra_neighbors_hls_constrained_intra_pred_flag,
    input        [31:0]                        init_intra_neighbors_hls_min_tb_addr_zs_Addr_A,
    input                                      init_intra_neighbors_hls_min_tb_addr_zs_EN_A,
    input        [3:0]                         init_intra_neighbors_hls_min_tb_addr_zs_WEN_A,
    input        [31:0]                        init_intra_neighbors_hls_min_tb_addr_zs_Din_A,
    output logic [31:0]                        init_intra_neighbors_hls_min_tb_addr_zs_Dout_A,
    output logic [7:0]                         init_intra_neighbors_hls_cand_bottom_left,
    output logic [7:0]                         init_intra_neighbors_hls_cand_left,
    output logic [7:0]                         init_intra_neighbors_hls_cand_up_left,
    output logic [7:0]                         init_intra_neighbors_hls_cand_up,
    output logic [7:0]                         init_intra_neighbors_hls_cand_up_right,
    input        [31:0]                        init_intra_neighbors_hls_numIntraNeighbor,
    input                                      init_intra_neighbors_hls_numIntraNeighbor_ap_vld,
    input        [31:0]                        init_intra_neighbors_hls_totalUnits,
    input                                      init_intra_neighbors_hls_totalUnits_ap_vld,
    input        [31:0]                        init_intra_neighbors_hls_aboveUnits,
    input                                      init_intra_neighbors_hls_aboveUnits_ap_vld,
    input        [31:0]                        init_intra_neighbors_hls_leftUnits,
    input                                      init_intra_neighbors_hls_leftUnits_ap_vld,
    input        [31:0]                        init_intra_neighbors_hls_unitWidth,
    input                                      init_intra_neighbors_hls_unitWidth_ap_vld,
    input        [31:0]                        init_intra_neighbors_hls_unitHeight,
    input                                      init_intra_neighbors_hls_unitHeight_ap_vld,
    input        [31:0]                        init_intra_neighbors_hls_log2TrSize,
    input                                      init_intra_neighbors_hls_log2TrSize_ap_vld,
    output logic [31:0]                        init_intra_neighbors_hls_bNeighborFlags_0_i,
    output logic [31:0]                        init_intra_neighbors_hls_bNeighborFlags_1_i,
    output logic                               init_intra_neighbors_hls_bNeighborFlags_2_i,
    input        [31:0]                        init_intra_neighbors_hls_bNeighborFlags_0_o,
    input                                      init_intra_neighbors_hls_bNeighborFlags_0_o_ap_vld,
    input        [31:0]                        init_intra_neighbors_hls_bNeighborFlags_1_o,
    input                                      init_intra_neighbors_hls_bNeighborFlags_1_o_ap_vld,
    input                                      init_intra_neighbors_hls_bNeighborFlags_2_o,
    input                                      init_intra_neighbors_hls_bNeighborFlags_2_o_ap_vld,
    output logic [31:0]                        init_intra_neighbors_hls_min_pu_width,
    input        [31:0]                        init_intra_neighbors_hls_tab_mvf_pred_flag_row_Addr_A,
    input                                      init_intra_neighbors_hls_tab_mvf_pred_flag_row_EN_A,
    input        [3:0]                         init_intra_neighbors_hls_tab_mvf_pred_flag_row_WEN_A,
    input        [31:0]                        init_intra_neighbors_hls_tab_mvf_pred_flag_row_Din_A,
    output logic [31:0]                        init_intra_neighbors_hls_tab_mvf_pred_flag_row_Dout_A,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_0,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_1,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_2,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_3,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_4,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_5,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_6,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_7,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_8,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_9,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_10,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_11,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_12,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_13,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_14,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_15,
    output logic [31:0]                        init_intra_neighbors_hls_predColBuf_16,
    output logic [7:0]                         init_intra_neighbors_hls_slice_type,
    output logic                               init_intra_neighbors_chroma_hls_ready,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_hshift_0,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_hshift_1,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_hshift_2,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_vshift_0,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_vshift_1,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_vshift_2,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_log2_min_pu_size,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_log2_min_tb_size,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_log2_ctb_size,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_tb_mask,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_width,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_height,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_log2_width,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_log2_height,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_constrained_intra_pred_flag,
    input        [31:0]                        init_intra_neighbors_chroma_hls_min_tb_addr_zs_Addr_A,
    input                                      init_intra_neighbors_chroma_hls_min_tb_addr_zs_EN_A,
    input        [3:0]                         init_intra_neighbors_chroma_hls_min_tb_addr_zs_WEN_A,
    input        [31:0]                        init_intra_neighbors_chroma_hls_min_tb_addr_zs_Din_A,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_min_tb_addr_zs_Dout_A,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_cand_bottom_left_c,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_cand_left_c,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_cand_up_left_c,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_cand_up_c,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_cand_up_right_c,
    input        [31:0]                        init_intra_neighbors_chroma_hls_numIntraNeighbor_c,
    input                                      init_intra_neighbors_chroma_hls_numIntraNeighbor_c_ap_vld,
    input        [31:0]                        init_intra_neighbors_chroma_hls_totalUnits_c,
    input                                      init_intra_neighbors_chroma_hls_totalUnits_c_ap_vld,
    input        [31:0]                        init_intra_neighbors_chroma_hls_aboveUnits_c,
    input                                      init_intra_neighbors_chroma_hls_aboveUnits_c_ap_vld,
    input        [31:0]                        init_intra_neighbors_chroma_hls_leftUnits_c,
    input                                      init_intra_neighbors_chroma_hls_leftUnits_c_ap_vld,
    input        [31:0]                        init_intra_neighbors_chroma_hls_unitWidth_c,
    input                                      init_intra_neighbors_chroma_hls_unitWidth_c_ap_vld,
    input        [31:0]                        init_intra_neighbors_chroma_hls_unitHeight_c,
    input                                      init_intra_neighbors_chroma_hls_unitHeight_c_ap_vld,
    input        [31:0]                        init_intra_neighbors_chroma_hls_log2TrSize_c,
    input                                      init_intra_neighbors_chroma_hls_log2TrSize_c_ap_vld,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_i,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_i,
    output logic                               init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_i,
    input        [31:0]                        init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o,
    input                                      init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_ap_vld,
    input        [31:0]                        init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o,
    input                                      init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_ap_vld,
    input                                      init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o,
    input                                      init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_ap_vld,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_min_pu_width,
    input        [31:0]                        init_intra_neighbors_chroma_hls_tab_mvf_pred_flag_row_Addr_A,
    input                                      init_intra_neighbors_chroma_hls_tab_mvf_pred_flag_row_EN_A,
    input        [3:0]                         init_intra_neighbors_chroma_hls_tab_mvf_pred_flag_row_WEN_A,
    input        [31:0]                        init_intra_neighbors_chroma_hls_tab_mvf_pred_flag_row_Din_A,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_tab_mvf_pred_flag_row_Dout_A,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_0,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_1,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_2,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_3,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_4,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_5,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_6,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_7,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_8,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_9,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_10,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_11,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_12,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_13,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_14,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_15,
    output logic [31:0]                        init_intra_neighbors_chroma_hls_predColBuf_16,
    output logic [7:0]                         init_intra_neighbors_chroma_hls_slice_type,
    output logic                               ff_hevc_set_neighbour_available_hls_ready,
    input                                      ff_hevc_set_neighbour_available_hls_cand_up,
    input                                      ff_hevc_set_neighbour_available_hls_cand_up_ap_vld,
    input                                      ff_hevc_set_neighbour_available_hls_cand_left,
    input                                      ff_hevc_set_neighbour_available_hls_cand_left_ap_vld,
    input                                      ff_hevc_set_neighbour_available_hls_cand_up_left,
    input                                      ff_hevc_set_neighbour_available_hls_cand_up_left_ap_vld,
    input                                      ff_hevc_set_neighbour_available_hls_cand_up_right_sap,
    input                                      ff_hevc_set_neighbour_available_hls_cand_up_right_sap_ap_vld,
    input                                      ff_hevc_set_neighbour_available_hls_cand_up_right,
    input                                      ff_hevc_set_neighbour_available_hls_cand_up_right_ap_vld,
    input                                      ff_hevc_set_neighbour_available_hls_cand_bottom_left,
    input                                      ff_hevc_set_neighbour_available_hls_cand_bottom_left_ap_vld,
    output logic [31:0]                        ff_hevc_set_neighbour_available_hls_log2_ctb_size,
    output logic [7:0]                         ff_hevc_set_neighbour_available_hls_ctb_up_flag,
    output logic [7:0]                         ff_hevc_set_neighbour_available_hls_ctb_left_flag,
    output logic [7:0]                         ff_hevc_set_neighbour_available_hls_ctb_up_left_flag,
    output logic [7:0]                         ff_hevc_set_neighbour_available_hls_ctb_up_right_flag,
    output logic [15:0]                        ff_hevc_set_neighbour_available_hls_end_of_tiles_x,
    output logic [15:0]                        ff_hevc_set_neighbour_available_hls_end_of_tiles_y,
    input        [31:0]                        ff_hevc_set_neighbour_available_hls_nPbW,
    input                                      ff_hevc_set_neighbour_available_hls_nPbW_ap_vld,
    input        [31:0]                        ff_hevc_set_neighbour_available_hls_nPbH,
    input                                      ff_hevc_set_neighbour_available_hls_nPbH_ap_vld,
    output logic                               intra_prediction_unit_default_value_hls_ready,
    output logic [7:0]                         intra_prediction_unit_default_value_hls_pred_mode,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_log2_min_pu_size,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_min_pu_width,
    output logic [7:0]                         intra_prediction_unit_default_value_hls_log2_width,
    input        [31:0]                        intra_prediction_unit_default_value_hls_tab_ipm_Addr_A,
    input                                      intra_prediction_unit_default_value_hls_tab_ipm_EN_A,
    input                                      intra_prediction_unit_default_value_hls_tab_ipm_WEN_A,
    input        [7:0]                         intra_prediction_unit_default_value_hls_tab_ipm_Din_A,
    output logic [7:0]                         intra_prediction_unit_default_value_hls_tab_ipm_Dout_A,
    input        [31:0]                        intra_prediction_unit_default_value_hls_tab_mvf_pred_flag_row_Addr_A,
    input                                      intra_prediction_unit_default_value_hls_tab_mvf_pred_flag_row_EN_A,
    input        [3:0]                         intra_prediction_unit_default_value_hls_tab_mvf_pred_flag_row_WEN_A,
    input        [31:0]                        intra_prediction_unit_default_value_hls_tab_mvf_pred_flag_row_Din_A,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_tab_mvf_pred_flag_row_Dout_A,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_0_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_0_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_0_o_ap_vld,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_1_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_1_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_1_o_ap_vld,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_2_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_2_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_2_o_ap_vld,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_3_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_3_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_3_o_ap_vld,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_4_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_4_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_4_o_ap_vld,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_5_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_5_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_5_o_ap_vld,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_6_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_6_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_6_o_ap_vld,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_7_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_7_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_7_o_ap_vld,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_8_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_8_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_8_o_ap_vld,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_9_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_9_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_9_o_ap_vld,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_10_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_10_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_10_o_ap_vld,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_11_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_11_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_11_o_ap_vld,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_12_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_12_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_12_o_ap_vld,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_13_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_13_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_13_o_ap_vld,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_14_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_14_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_14_o_ap_vld,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_15_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_15_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_15_o_ap_vld,
    output logic [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_16_i,
    input        [31:0]                        intra_prediction_unit_default_value_hls_predColBuf_16_o,
    input                                      intra_prediction_unit_default_value_hls_predColBuf_16_o_ap_vld,
    output logic                               z_scan_block_avail_hls_ready,
    output logic [7:0]                         z_scan_block_avail_hls_tb_mask,
    output logic [31:0]                        z_scan_block_avail_hls_log2_ctb_size,
    output logic [31:0]                        z_scan_block_avail_hls_log2_min_tb_size,
    output logic [31:0]                        z_scan_block_avail_hls_xm_x0,
    output logic [31:0]                        z_scan_block_avail_hls_xm_y0,
    input        [31:0]                        z_scan_block_avail_hls_min_tb_addr_zs_Addr_A,
    input                                      z_scan_block_avail_hls_min_tb_addr_zs_EN_A,
    input        [3:0]                         z_scan_block_avail_hls_min_tb_addr_zs_WEN_A,
    input        [31:0]                        z_scan_block_avail_hls_min_tb_addr_zs_Din_A,
    output logic [31:0]                        z_scan_block_avail_hls_min_tb_addr_zs_Dout_A,
    output logic                               luma_mc_uni_libx265_hls_ready,
    input        [31:0]                        luma_mc_uni_libx265_hls_xcache_null_base_Addr_A,
    input                                      luma_mc_uni_libx265_hls_xcache_null_base_EN_A,
    input                                      luma_mc_uni_libx265_hls_xcache_null_base_WEN_A,
    input        [7:0]                         luma_mc_uni_libx265_hls_xcache_null_base_Din_A,
    output logic [7:0]                         luma_mc_uni_libx265_hls_xcache_null_base_Dout_A,
    output logic [31:0]                        luma_mc_uni_libx265_hls_frame_data_0,
    output logic [31:0]                        luma_mc_uni_libx265_hls_frame_data_1,
    output logic [31:0]                        luma_mc_uni_libx265_hls_frame_data_2,
    output logic [31:0]                        luma_mc_uni_libx265_hls_frame_linesize_0,
    output logic [31:0]                        luma_mc_uni_libx265_hls_frame_linesize_1,
    output logic [31:0]                        luma_mc_uni_libx265_hls_frame_linesize_2,
    input        [31:0]                        luma_mc_uni_libx265_hls_refPicList_frame_data_Addr_A,
    input                                      luma_mc_uni_libx265_hls_refPicList_frame_data_EN_A,
    input        [3:0]                         luma_mc_uni_libx265_hls_refPicList_frame_data_WEN_A,
    input        [31:0]                        luma_mc_uni_libx265_hls_refPicList_frame_data_Din_A,
    output logic [31:0]                        luma_mc_uni_libx265_hls_refPicList_frame_data_Dout_A,
    input        [31:0]                        luma_mc_uni_libx265_hls_refPicList_frame_linesize_Addr_A,
    input                                      luma_mc_uni_libx265_hls_refPicList_frame_linesize_EN_A,
    input        [3:0]                         luma_mc_uni_libx265_hls_refPicList_frame_linesize_WEN_A,
    input        [31:0]                        luma_mc_uni_libx265_hls_refPicList_frame_linesize_Din_A,
    output logic [31:0]                        luma_mc_uni_libx265_hls_refPicList_frame_linesize_Dout_A,
    output logic [15:0]                        luma_mc_uni_libx265_hls_current_mv_mv_0_x,
    output logic [15:0]                        luma_mc_uni_libx265_hls_current_mv_mv_0_y,
    output logic [15:0]                        luma_mc_uni_libx265_hls_current_mv_mv_1_x,
    output logic [15:0]                        luma_mc_uni_libx265_hls_current_mv_mv_1_y,
    output logic [31:0]                        luma_mc_uni_libx265_hls_current_mv_poc_0,
    output logic [31:0]                        luma_mc_uni_libx265_hls_current_mv_poc_1,
    output logic [7:0]                         luma_mc_uni_libx265_hls_current_mv_ref_idx_0,
    output logic [7:0]                         luma_mc_uni_libx265_hls_current_mv_ref_idx_1,
    output logic [7:0]                         luma_mc_uni_libx265_hls_current_mv_pred_flag,
    output logic [31:0]                        luma_mc_uni_libx265_hls_ref_idx,
    output logic [7:0]                         luma_mc_uni_libx265_hls_slice_type,
    output logic [7:0]                         luma_mc_uni_libx265_hls_weighted_pred_flag,
    output logic [7:0]                         luma_mc_uni_libx265_hls_weighted_bipred_flag,
    output logic [31:0]                        luma_mc_uni_libx265_hls_pixel_shift,
    output logic [31:0]                        luma_mc_uni_libx265_hls_width,
    output logic [31:0]                        luma_mc_uni_libx265_hls_height,
    output logic [31:0]                        luma_mc_uni_libx265_hls_hshift_0,
    output logic [31:0]                        luma_mc_uni_libx265_hls_hshift_1,
    output logic [31:0]                        luma_mc_uni_libx265_hls_hshift_2,
    output logic [31:0]                        luma_mc_uni_libx265_hls_vshift_0,
    output logic [31:0]                        luma_mc_uni_libx265_hls_vshift_1,
    output logic [31:0]                        luma_mc_uni_libx265_hls_vshift_2,
    output logic [7:0]                         luma_mc_uni_libx265_hls_bit_depth,
    output logic [7:0]                         luma_mc_uni_libx265_hls_luma_log2_weight_denom,
    input        [31:0]                        luma_mc_uni_libx265_hls_luma_weight_l0_flag_Addr_A,
    input                                      luma_mc_uni_libx265_hls_luma_weight_l0_flag_EN_A,
    input                                      luma_mc_uni_libx265_hls_luma_weight_l0_flag_WEN_A,
    input        [7:0]                         luma_mc_uni_libx265_hls_luma_weight_l0_flag_Din_A,
    output logic [7:0]                         luma_mc_uni_libx265_hls_luma_weight_l0_flag_Dout_A,
    input        [31:0]                        luma_mc_uni_libx265_hls_luma_weight_l1_flag_Addr_A,
    input                                      luma_mc_uni_libx265_hls_luma_weight_l1_flag_EN_A,
    input                                      luma_mc_uni_libx265_hls_luma_weight_l1_flag_WEN_A,
    input        [7:0]                         luma_mc_uni_libx265_hls_luma_weight_l1_flag_Din_A,
    output logic [7:0]                         luma_mc_uni_libx265_hls_luma_weight_l1_flag_Dout_A,
    input        [31:0]                        luma_mc_uni_libx265_hls_luma_weight_l0_Addr_A,
    input                                      luma_mc_uni_libx265_hls_luma_weight_l0_EN_A,
    input        [1:0]                         luma_mc_uni_libx265_hls_luma_weight_l0_WEN_A,
    input        [15:0]                        luma_mc_uni_libx265_hls_luma_weight_l0_Din_A,
    output logic [15:0]                        luma_mc_uni_libx265_hls_luma_weight_l0_Dout_A,
    input        [31:0]                        luma_mc_uni_libx265_hls_luma_weight_l1_Addr_A,
    input                                      luma_mc_uni_libx265_hls_luma_weight_l1_EN_A,
    input        [1:0]                         luma_mc_uni_libx265_hls_luma_weight_l1_WEN_A,
    input        [15:0]                        luma_mc_uni_libx265_hls_luma_weight_l1_Din_A,
    output logic [15:0]                        luma_mc_uni_libx265_hls_luma_weight_l1_Dout_A,
    input        [31:0]                        luma_mc_uni_libx265_hls_luma_offset_l0_Addr_A,
    input                                      luma_mc_uni_libx265_hls_luma_offset_l0_EN_A,
    input        [1:0]                         luma_mc_uni_libx265_hls_luma_offset_l0_WEN_A,
    input        [15:0]                        luma_mc_uni_libx265_hls_luma_offset_l0_Din_A,
    output logic [15:0]                        luma_mc_uni_libx265_hls_luma_offset_l0_Dout_A,
    input        [31:0]                        luma_mc_uni_libx265_hls_luma_offset_l1_Addr_A,
    input                                      luma_mc_uni_libx265_hls_luma_offset_l1_EN_A,
    input        [1:0]                         luma_mc_uni_libx265_hls_luma_offset_l1_WEN_A,
    input        [15:0]                        luma_mc_uni_libx265_hls_luma_offset_l1_Din_A,
    output logic [15:0]                        luma_mc_uni_libx265_hls_luma_offset_l1_Dout_A,
    input        [31:0]                        luma_mc_uni_libx265_hls_edge_buffer_Addr_A,
    input                                      luma_mc_uni_libx265_hls_edge_buffer_EN_A,
    input        [3:0]                         luma_mc_uni_libx265_hls_edge_buffer_WEN_A,
    input        [31:0]                        luma_mc_uni_libx265_hls_edge_buffer_Din_A,
    output logic [31:0]                        luma_mc_uni_libx265_hls_edge_buffer_Dout_A,
    input        [7:0]                         luma_mc_uni_libx265_hls_dst_depth,
    input                                      luma_mc_uni_libx265_hls_dst_depth_ap_vld,
    output logic                               chroma_mc_uni_libx265_hls_ready,
    input        [31:0]                        chroma_mc_uni_libx265_hls_xcache_null_base_Addr_A,
    input                                      chroma_mc_uni_libx265_hls_xcache_null_base_EN_A,
    input                                      chroma_mc_uni_libx265_hls_xcache_null_base_WEN_A,
    input        [7:0]                         chroma_mc_uni_libx265_hls_xcache_null_base_Din_A,
    output logic [7:0]                         chroma_mc_uni_libx265_hls_xcache_null_base_Dout_A,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_frame_data_0,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_frame_data_1,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_frame_data_2,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_frame_linesize_0,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_frame_linesize_1,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_frame_linesize_2,
    input        [31:0]                        chroma_mc_uni_libx265_hls_refPicList_frame_data_Addr_A,
    input                                      chroma_mc_uni_libx265_hls_refPicList_frame_data_EN_A,
    input        [3:0]                         chroma_mc_uni_libx265_hls_refPicList_frame_data_WEN_A,
    input        [31:0]                        chroma_mc_uni_libx265_hls_refPicList_frame_data_Din_A,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_refPicList_frame_data_Dout_A,
    input        [31:0]                        chroma_mc_uni_libx265_hls_refPicList_frame_linesize_Addr_A,
    input                                      chroma_mc_uni_libx265_hls_refPicList_frame_linesize_EN_A,
    input        [3:0]                         chroma_mc_uni_libx265_hls_refPicList_frame_linesize_WEN_A,
    input        [31:0]                        chroma_mc_uni_libx265_hls_refPicList_frame_linesize_Din_A,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_refPicList_frame_linesize_Dout_A,
    output logic [15:0]                        chroma_mc_uni_libx265_hls_current_mv_mv_0_x,
    output logic [15:0]                        chroma_mc_uni_libx265_hls_current_mv_mv_0_y,
    output logic [15:0]                        chroma_mc_uni_libx265_hls_current_mv_mv_1_x,
    output logic [15:0]                        chroma_mc_uni_libx265_hls_current_mv_mv_1_y,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_current_mv_poc_0,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_current_mv_poc_1,
    output logic [7:0]                         chroma_mc_uni_libx265_hls_current_mv_ref_idx_0,
    output logic [7:0]                         chroma_mc_uni_libx265_hls_current_mv_ref_idx_1,
    output logic [7:0]                         chroma_mc_uni_libx265_hls_current_mv_pred_flag,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_ref_idx,
    output logic [7:0]                         chroma_mc_uni_libx265_hls_slice_type,
    output logic [7:0]                         chroma_mc_uni_libx265_hls_weighted_pred_flag,
    output logic [7:0]                         chroma_mc_uni_libx265_hls_weighted_bipred_flag,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_pixel_shift,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_width,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_height,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_hshift_0,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_hshift_1,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_hshift_2,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_vshift_0,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_vshift_1,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_vshift_2,
    output logic [7:0]                         chroma_mc_uni_libx265_hls_bit_depth,
    output logic [15:0]                        chroma_mc_uni_libx265_hls_chroma_log2_weight_denom,
    input        [31:0]                        chroma_mc_uni_libx265_hls_chroma_weight_l0_flag_Addr_A,
    input                                      chroma_mc_uni_libx265_hls_chroma_weight_l0_flag_EN_A,
    input                                      chroma_mc_uni_libx265_hls_chroma_weight_l0_flag_WEN_A,
    input        [7:0]                         chroma_mc_uni_libx265_hls_chroma_weight_l0_flag_Din_A,
    output logic [7:0]                         chroma_mc_uni_libx265_hls_chroma_weight_l0_flag_Dout_A,
    input        [31:0]                        chroma_mc_uni_libx265_hls_chroma_weight_l1_flag_Addr_A,
    input                                      chroma_mc_uni_libx265_hls_chroma_weight_l1_flag_EN_A,
    input                                      chroma_mc_uni_libx265_hls_chroma_weight_l1_flag_WEN_A,
    input        [7:0]                         chroma_mc_uni_libx265_hls_chroma_weight_l1_flag_Din_A,
    output logic [7:0]                         chroma_mc_uni_libx265_hls_chroma_weight_l1_flag_Dout_A,
    input        [31:0]                        chroma_mc_uni_libx265_hls_chroma_weight_l0_Addr_A,
    input                                      chroma_mc_uni_libx265_hls_chroma_weight_l0_EN_A,
    input        [1:0]                         chroma_mc_uni_libx265_hls_chroma_weight_l0_WEN_A,
    input        [15:0]                        chroma_mc_uni_libx265_hls_chroma_weight_l0_Din_A,
    output logic [15:0]                        chroma_mc_uni_libx265_hls_chroma_weight_l0_Dout_A,
    input        [31:0]                        chroma_mc_uni_libx265_hls_chroma_weight_l1_Addr_A,
    input                                      chroma_mc_uni_libx265_hls_chroma_weight_l1_EN_A,
    input        [1:0]                         chroma_mc_uni_libx265_hls_chroma_weight_l1_WEN_A,
    input        [15:0]                        chroma_mc_uni_libx265_hls_chroma_weight_l1_Din_A,
    output logic [15:0]                        chroma_mc_uni_libx265_hls_chroma_weight_l1_Dout_A,
    input        [31:0]                        chroma_mc_uni_libx265_hls_chroma_offset_l0_Addr_A,
    input                                      chroma_mc_uni_libx265_hls_chroma_offset_l0_EN_A,
    input        [1:0]                         chroma_mc_uni_libx265_hls_chroma_offset_l0_WEN_A,
    input        [15:0]                        chroma_mc_uni_libx265_hls_chroma_offset_l0_Din_A,
    output logic [15:0]                        chroma_mc_uni_libx265_hls_chroma_offset_l0_Dout_A,
    input        [31:0]                        chroma_mc_uni_libx265_hls_chroma_offset_l1_Addr_A,
    input                                      chroma_mc_uni_libx265_hls_chroma_offset_l1_EN_A,
    input        [1:0]                         chroma_mc_uni_libx265_hls_chroma_offset_l1_WEN_A,
    input        [15:0]                        chroma_mc_uni_libx265_hls_chroma_offset_l1_Din_A,
    output logic [15:0]                        chroma_mc_uni_libx265_hls_chroma_offset_l1_Dout_A,
    input        [31:0]                        chroma_mc_uni_libx265_hls_edge_buffer_Addr_A,
    input                                      chroma_mc_uni_libx265_hls_edge_buffer_EN_A,
    input        [3:0]                         chroma_mc_uni_libx265_hls_edge_buffer_WEN_A,
    input        [31:0]                        chroma_mc_uni_libx265_hls_edge_buffer_Din_A,
    output logic [31:0]                        chroma_mc_uni_libx265_hls_edge_buffer_Dout_A,
    input        [31:0]                        chroma_mc_uni_libx265_hls_xm_buf_linesize,
    input                                      chroma_mc_uni_libx265_hls_xm_buf_linesize_ap_vld,
    input        [7:0]                         chroma_mc_uni_libx265_hls_dst_depth,
    input                                      chroma_mc_uni_libx265_hls_dst_depth_ap_vld,
    output logic                               sao_param_hls_ready,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_abs_0_0_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_abs_0_0_o,
    input                                      sao_param_hls_curr_sao_offset_abs_0_0_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_abs_0_1_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_abs_0_1_o,
    input                                      sao_param_hls_curr_sao_offset_abs_0_1_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_abs_0_2_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_abs_0_2_o,
    input                                      sao_param_hls_curr_sao_offset_abs_0_2_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_abs_0_3_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_abs_0_3_o,
    input                                      sao_param_hls_curr_sao_offset_abs_0_3_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_abs_1_0_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_abs_1_0_o,
    input                                      sao_param_hls_curr_sao_offset_abs_1_0_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_abs_1_1_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_abs_1_1_o,
    input                                      sao_param_hls_curr_sao_offset_abs_1_1_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_abs_1_2_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_abs_1_2_o,
    input                                      sao_param_hls_curr_sao_offset_abs_1_2_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_abs_1_3_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_abs_1_3_o,
    input                                      sao_param_hls_curr_sao_offset_abs_1_3_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_abs_2_0_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_abs_2_0_o,
    input                                      sao_param_hls_curr_sao_offset_abs_2_0_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_abs_2_1_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_abs_2_1_o,
    input                                      sao_param_hls_curr_sao_offset_abs_2_1_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_abs_2_2_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_abs_2_2_o,
    input                                      sao_param_hls_curr_sao_offset_abs_2_2_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_abs_2_3_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_abs_2_3_o,
    input                                      sao_param_hls_curr_sao_offset_abs_2_3_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_sign_0_0_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_sign_0_0_o,
    input                                      sao_param_hls_curr_sao_offset_sign_0_0_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_sign_0_1_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_sign_0_1_o,
    input                                      sao_param_hls_curr_sao_offset_sign_0_1_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_sign_0_2_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_sign_0_2_o,
    input                                      sao_param_hls_curr_sao_offset_sign_0_2_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_sign_0_3_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_sign_0_3_o,
    input                                      sao_param_hls_curr_sao_offset_sign_0_3_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_sign_1_0_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_sign_1_0_o,
    input                                      sao_param_hls_curr_sao_offset_sign_1_0_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_sign_1_1_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_sign_1_1_o,
    input                                      sao_param_hls_curr_sao_offset_sign_1_1_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_sign_1_2_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_sign_1_2_o,
    input                                      sao_param_hls_curr_sao_offset_sign_1_2_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_sign_1_3_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_sign_1_3_o,
    input                                      sao_param_hls_curr_sao_offset_sign_1_3_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_sign_2_0_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_sign_2_0_o,
    input                                      sao_param_hls_curr_sao_offset_sign_2_0_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_sign_2_1_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_sign_2_1_o,
    input                                      sao_param_hls_curr_sao_offset_sign_2_1_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_sign_2_2_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_sign_2_2_o,
    input                                      sao_param_hls_curr_sao_offset_sign_2_2_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_offset_sign_2_3_i,
    input        [7:0]                         sao_param_hls_curr_sao_offset_sign_2_3_o,
    input                                      sao_param_hls_curr_sao_offset_sign_2_3_o_ap_vld,
    input        [7:0]                         sao_param_hls_curr_sao_band_position_0,
    input                                      sao_param_hls_curr_sao_band_position_0_ap_vld,
    input        [7:0]                         sao_param_hls_curr_sao_band_position_1,
    input                                      sao_param_hls_curr_sao_band_position_1_ap_vld,
    input        [7:0]                         sao_param_hls_curr_sao_band_position_2,
    input                                      sao_param_hls_curr_sao_band_position_2_ap_vld,
    input        [15:0]                        sao_param_hls_curr_sao_offset_val_0_0,
    input                                      sao_param_hls_curr_sao_offset_val_0_0_ap_vld,
    output logic [15:0]                        sao_param_hls_curr_sao_offset_val_0_1_i,
    input        [15:0]                        sao_param_hls_curr_sao_offset_val_0_1_o,
    input                                      sao_param_hls_curr_sao_offset_val_0_1_o_ap_vld,
    output logic [15:0]                        sao_param_hls_curr_sao_offset_val_0_2_i,
    input        [15:0]                        sao_param_hls_curr_sao_offset_val_0_2_o,
    input                                      sao_param_hls_curr_sao_offset_val_0_2_o_ap_vld,
    output logic [15:0]                        sao_param_hls_curr_sao_offset_val_0_3_i,
    input        [15:0]                        sao_param_hls_curr_sao_offset_val_0_3_o,
    input                                      sao_param_hls_curr_sao_offset_val_0_3_o_ap_vld,
    output logic [15:0]                        sao_param_hls_curr_sao_offset_val_0_4_i,
    input        [15:0]                        sao_param_hls_curr_sao_offset_val_0_4_o,
    input                                      sao_param_hls_curr_sao_offset_val_0_4_o_ap_vld,
    input        [15:0]                        sao_param_hls_curr_sao_offset_val_1_0,
    input                                      sao_param_hls_curr_sao_offset_val_1_0_ap_vld,
    output logic [15:0]                        sao_param_hls_curr_sao_offset_val_1_1_i,
    input        [15:0]                        sao_param_hls_curr_sao_offset_val_1_1_o,
    input                                      sao_param_hls_curr_sao_offset_val_1_1_o_ap_vld,
    output logic [15:0]                        sao_param_hls_curr_sao_offset_val_1_2_i,
    input        [15:0]                        sao_param_hls_curr_sao_offset_val_1_2_o,
    input                                      sao_param_hls_curr_sao_offset_val_1_2_o_ap_vld,
    output logic [15:0]                        sao_param_hls_curr_sao_offset_val_1_3_i,
    input        [15:0]                        sao_param_hls_curr_sao_offset_val_1_3_o,
    input                                      sao_param_hls_curr_sao_offset_val_1_3_o_ap_vld,
    output logic [15:0]                        sao_param_hls_curr_sao_offset_val_1_4_i,
    input        [15:0]                        sao_param_hls_curr_sao_offset_val_1_4_o,
    input                                      sao_param_hls_curr_sao_offset_val_1_4_o_ap_vld,
    input        [15:0]                        sao_param_hls_curr_sao_offset_val_2_0,
    input                                      sao_param_hls_curr_sao_offset_val_2_0_ap_vld,
    output logic [15:0]                        sao_param_hls_curr_sao_offset_val_2_1_i,
    input        [15:0]                        sao_param_hls_curr_sao_offset_val_2_1_o,
    input                                      sao_param_hls_curr_sao_offset_val_2_1_o_ap_vld,
    output logic [15:0]                        sao_param_hls_curr_sao_offset_val_2_2_i,
    input        [15:0]                        sao_param_hls_curr_sao_offset_val_2_2_o,
    input                                      sao_param_hls_curr_sao_offset_val_2_2_o_ap_vld,
    output logic [15:0]                        sao_param_hls_curr_sao_offset_val_2_3_i,
    input        [15:0]                        sao_param_hls_curr_sao_offset_val_2_3_o,
    input                                      sao_param_hls_curr_sao_offset_val_2_3_o_ap_vld,
    output logic [15:0]                        sao_param_hls_curr_sao_offset_val_2_4_i,
    input        [15:0]                        sao_param_hls_curr_sao_offset_val_2_4_o,
    input                                      sao_param_hls_curr_sao_offset_val_2_4_o_ap_vld,
    input        [7:0]                         sao_param_hls_curr_sao_eo_class_0,
    input                                      sao_param_hls_curr_sao_eo_class_0_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_eo_class_1_i,
    input        [7:0]                         sao_param_hls_curr_sao_eo_class_1_o,
    input                                      sao_param_hls_curr_sao_eo_class_1_o_ap_vld,
    input        [7:0]                         sao_param_hls_curr_sao_eo_class_2,
    input                                      sao_param_hls_curr_sao_eo_class_2_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_type_idx_0_i,
    input        [7:0]                         sao_param_hls_curr_sao_type_idx_0_o,
    input                                      sao_param_hls_curr_sao_type_idx_0_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_type_idx_1_i,
    input        [7:0]                         sao_param_hls_curr_sao_type_idx_1_o,
    input                                      sao_param_hls_curr_sao_type_idx_1_o_ap_vld,
    output logic [7:0]                         sao_param_hls_curr_sao_type_idx_2_i,
    input        [7:0]                         sao_param_hls_curr_sao_type_idx_2_o,
    input                                      sao_param_hls_curr_sao_type_idx_2_o_ap_vld,
    input        [31:0]                        sao_param_hls_curr_sao_sao_merge_left_flag,
    input                                      sao_param_hls_curr_sao_sao_merge_left_flag_ap_vld,
    input        [31:0]                        sao_param_hls_curr_sao_sao_merge_up_flag,
    input                                      sao_param_hls_curr_sao_sao_merge_up_flag_ap_vld,
    output logic [7:0]                         sao_param_hls_left_sao_offset_abs_0_0,
    output logic [7:0]                         sao_param_hls_left_sao_offset_abs_0_1,
    output logic [7:0]                         sao_param_hls_left_sao_offset_abs_0_2,
    output logic [7:0]                         sao_param_hls_left_sao_offset_abs_0_3,
    output logic [7:0]                         sao_param_hls_left_sao_offset_abs_1_0,
    output logic [7:0]                         sao_param_hls_left_sao_offset_abs_1_1,
    output logic [7:0]                         sao_param_hls_left_sao_offset_abs_1_2,
    output logic [7:0]                         sao_param_hls_left_sao_offset_abs_1_3,
    output logic [7:0]                         sao_param_hls_left_sao_offset_abs_2_0,
    output logic [7:0]                         sao_param_hls_left_sao_offset_abs_2_1,
    output logic [7:0]                         sao_param_hls_left_sao_offset_abs_2_2,
    output logic [7:0]                         sao_param_hls_left_sao_offset_abs_2_3,
    output logic [7:0]                         sao_param_hls_left_sao_offset_sign_0_0,
    output logic [7:0]                         sao_param_hls_left_sao_offset_sign_0_1,
    output logic [7:0]                         sao_param_hls_left_sao_offset_sign_0_2,
    output logic [7:0]                         sao_param_hls_left_sao_offset_sign_0_3,
    output logic [7:0]                         sao_param_hls_left_sao_offset_sign_1_0,
    output logic [7:0]                         sao_param_hls_left_sao_offset_sign_1_1,
    output logic [7:0]                         sao_param_hls_left_sao_offset_sign_1_2,
    output logic [7:0]                         sao_param_hls_left_sao_offset_sign_1_3,
    output logic [7:0]                         sao_param_hls_left_sao_offset_sign_2_0,
    output logic [7:0]                         sao_param_hls_left_sao_offset_sign_2_1,
    output logic [7:0]                         sao_param_hls_left_sao_offset_sign_2_2,
    output logic [7:0]                         sao_param_hls_left_sao_offset_sign_2_3,
    output logic [7:0]                         sao_param_hls_left_sao_band_position_0,
    output logic [7:0]                         sao_param_hls_left_sao_band_position_1,
    output logic [7:0]                         sao_param_hls_left_sao_band_position_2,
    output logic [15:0]                        sao_param_hls_left_sao_offset_val_0_0,
    output logic [15:0]                        sao_param_hls_left_sao_offset_val_0_1,
    output logic [15:0]                        sao_param_hls_left_sao_offset_val_0_2,
    output logic [15:0]                        sao_param_hls_left_sao_offset_val_0_3,
    output logic [15:0]                        sao_param_hls_left_sao_offset_val_0_4,
    output logic [15:0]                        sao_param_hls_left_sao_offset_val_1_0,
    output logic [15:0]                        sao_param_hls_left_sao_offset_val_1_1,
    output logic [15:0]                        sao_param_hls_left_sao_offset_val_1_2,
    output logic [15:0]                        sao_param_hls_left_sao_offset_val_1_3,
    output logic [15:0]                        sao_param_hls_left_sao_offset_val_1_4,
    output logic [15:0]                        sao_param_hls_left_sao_offset_val_2_0,
    output logic [15:0]                        sao_param_hls_left_sao_offset_val_2_1,
    output logic [15:0]                        sao_param_hls_left_sao_offset_val_2_2,
    output logic [15:0]                        sao_param_hls_left_sao_offset_val_2_3,
    output logic [15:0]                        sao_param_hls_left_sao_offset_val_2_4,
    output logic [7:0]                         sao_param_hls_left_sao_eo_class_0,
    output logic [7:0]                         sao_param_hls_left_sao_eo_class_1,
    output logic [7:0]                         sao_param_hls_left_sao_eo_class_2,
    output logic [7:0]                         sao_param_hls_left_sao_type_idx_0,
    output logic [7:0]                         sao_param_hls_left_sao_type_idx_1,
    output logic [7:0]                         sao_param_hls_left_sao_type_idx_2,
    output logic [31:0]                        sao_param_hls_left_sao_sao_merge_left_flag,
    output logic [31:0]                        sao_param_hls_left_sao_sao_merge_up_flag,
    output logic [7:0]                         sao_param_hls_up_sao_offset_abs_0_0,
    output logic [7:0]                         sao_param_hls_up_sao_offset_abs_0_1,
    output logic [7:0]                         sao_param_hls_up_sao_offset_abs_0_2,
    output logic [7:0]                         sao_param_hls_up_sao_offset_abs_0_3,
    output logic [7:0]                         sao_param_hls_up_sao_offset_abs_1_0,
    output logic [7:0]                         sao_param_hls_up_sao_offset_abs_1_1,
    output logic [7:0]                         sao_param_hls_up_sao_offset_abs_1_2,
    output logic [7:0]                         sao_param_hls_up_sao_offset_abs_1_3,
    output logic [7:0]                         sao_param_hls_up_sao_offset_abs_2_0,
    output logic [7:0]                         sao_param_hls_up_sao_offset_abs_2_1,
    output logic [7:0]                         sao_param_hls_up_sao_offset_abs_2_2,
    output logic [7:0]                         sao_param_hls_up_sao_offset_abs_2_3,
    output logic [7:0]                         sao_param_hls_up_sao_offset_sign_0_0,
    output logic [7:0]                         sao_param_hls_up_sao_offset_sign_0_1,
    output logic [7:0]                         sao_param_hls_up_sao_offset_sign_0_2,
    output logic [7:0]                         sao_param_hls_up_sao_offset_sign_0_3,
    output logic [7:0]                         sao_param_hls_up_sao_offset_sign_1_0,
    output logic [7:0]                         sao_param_hls_up_sao_offset_sign_1_1,
    output logic [7:0]                         sao_param_hls_up_sao_offset_sign_1_2,
    output logic [7:0]                         sao_param_hls_up_sao_offset_sign_1_3,
    output logic [7:0]                         sao_param_hls_up_sao_offset_sign_2_0,
    output logic [7:0]                         sao_param_hls_up_sao_offset_sign_2_1,
    output logic [7:0]                         sao_param_hls_up_sao_offset_sign_2_2,
    output logic [7:0]                         sao_param_hls_up_sao_offset_sign_2_3,
    output logic [7:0]                         sao_param_hls_up_sao_band_position_0,
    output logic [7:0]                         sao_param_hls_up_sao_band_position_1,
    output logic [7:0]                         sao_param_hls_up_sao_band_position_2,
    output logic [15:0]                        sao_param_hls_up_sao_offset_val_0_0,
    output logic [15:0]                        sao_param_hls_up_sao_offset_val_0_1,
    output logic [15:0]                        sao_param_hls_up_sao_offset_val_0_2,
    output logic [15:0]                        sao_param_hls_up_sao_offset_val_0_3,
    output logic [15:0]                        sao_param_hls_up_sao_offset_val_0_4,
    output logic [15:0]                        sao_param_hls_up_sao_offset_val_1_0,
    output logic [15:0]                        sao_param_hls_up_sao_offset_val_1_1,
    output logic [15:0]                        sao_param_hls_up_sao_offset_val_1_2,
    output logic [15:0]                        sao_param_hls_up_sao_offset_val_1_3,
    output logic [15:0]                        sao_param_hls_up_sao_offset_val_1_4,
    output logic [15:0]                        sao_param_hls_up_sao_offset_val_2_0,
    output logic [15:0]                        sao_param_hls_up_sao_offset_val_2_1,
    output logic [15:0]                        sao_param_hls_up_sao_offset_val_2_2,
    output logic [15:0]                        sao_param_hls_up_sao_offset_val_2_3,
    output logic [15:0]                        sao_param_hls_up_sao_offset_val_2_4,
    output logic [7:0]                         sao_param_hls_up_sao_eo_class_0,
    output logic [7:0]                         sao_param_hls_up_sao_eo_class_1,
    output logic [7:0]                         sao_param_hls_up_sao_eo_class_2,
    output logic [7:0]                         sao_param_hls_up_sao_type_idx_0,
    output logic [7:0]                         sao_param_hls_up_sao_type_idx_1,
    output logic [7:0]                         sao_param_hls_up_sao_type_idx_2,
    output logic [31:0]                        sao_param_hls_up_sao_sao_merge_left_flag,
    output logic [31:0]                        sao_param_hls_up_sao_sao_merge_up_flag,
    output logic [7:0]                         sao_param_hls_slice_sample_adaptive_offset_flag_0,
    output logic [7:0]                         sao_param_hls_slice_sample_adaptive_offset_flag_1,
    output logic [7:0]                         sao_param_hls_slice_sample_adaptive_offset_flag_2,
    output logic [7:0]                         sao_param_hls_ctb_left_flag,
    output logic [7:0]                         sao_param_hls_ctb_up_flag,
    output logic [7:0]                         sao_param_hls_bit_depth,
    output logic                               xmem_copy_mvfield_hls_ready,
    input        [31:0]                        xmem_copy_mvfield_hls_tab_mvf_mv_0_x_Addr_A,
    input                                      xmem_copy_mvfield_hls_tab_mvf_mv_0_x_EN_A,
    input        [1:0]                         xmem_copy_mvfield_hls_tab_mvf_mv_0_x_WEN_A,
    input        [15:0]                        xmem_copy_mvfield_hls_tab_mvf_mv_0_x_Din_A,
    output logic [15:0]                        xmem_copy_mvfield_hls_tab_mvf_mv_0_x_Dout_A,
    input        [31:0]                        xmem_copy_mvfield_hls_tab_mvf_mv_0_y_Addr_A,
    input                                      xmem_copy_mvfield_hls_tab_mvf_mv_0_y_EN_A,
    input        [1:0]                         xmem_copy_mvfield_hls_tab_mvf_mv_0_y_WEN_A,
    input        [15:0]                        xmem_copy_mvfield_hls_tab_mvf_mv_0_y_Din_A,
    output logic [15:0]                        xmem_copy_mvfield_hls_tab_mvf_mv_0_y_Dout_A,
    input        [31:0]                        xmem_copy_mvfield_hls_tab_mvf_mv_1_x_Addr_A,
    input                                      xmem_copy_mvfield_hls_tab_mvf_mv_1_x_EN_A,
    input        [1:0]                         xmem_copy_mvfield_hls_tab_mvf_mv_1_x_WEN_A,
    input        [15:0]                        xmem_copy_mvfield_hls_tab_mvf_mv_1_x_Din_A,
    output logic [15:0]                        xmem_copy_mvfield_hls_tab_mvf_mv_1_x_Dout_A,
    input        [31:0]                        xmem_copy_mvfield_hls_tab_mvf_mv_1_y_Addr_A,
    input                                      xmem_copy_mvfield_hls_tab_mvf_mv_1_y_EN_A,
    input        [1:0]                         xmem_copy_mvfield_hls_tab_mvf_mv_1_y_WEN_A,
    input        [15:0]                        xmem_copy_mvfield_hls_tab_mvf_mv_1_y_Din_A,
    output logic [15:0]                        xmem_copy_mvfield_hls_tab_mvf_mv_1_y_Dout_A,
    input        [31:0]                        xmem_copy_mvfield_hls_tab_mvf_poc_0_Addr_A,
    input                                      xmem_copy_mvfield_hls_tab_mvf_poc_0_EN_A,
    input        [3:0]                         xmem_copy_mvfield_hls_tab_mvf_poc_0_WEN_A,
    input        [31:0]                        xmem_copy_mvfield_hls_tab_mvf_poc_0_Din_A,
    output logic [31:0]                        xmem_copy_mvfield_hls_tab_mvf_poc_0_Dout_A,
    input        [31:0]                        xmem_copy_mvfield_hls_tab_mvf_poc_1_Addr_A,
    input                                      xmem_copy_mvfield_hls_tab_mvf_poc_1_EN_A,
    input        [3:0]                         xmem_copy_mvfield_hls_tab_mvf_poc_1_WEN_A,
    input        [31:0]                        xmem_copy_mvfield_hls_tab_mvf_poc_1_Din_A,
    output logic [31:0]                        xmem_copy_mvfield_hls_tab_mvf_poc_1_Dout_A,
    input        [31:0]                        xmem_copy_mvfield_hls_tab_mvf_ref_idx_0_Addr_A,
    input                                      xmem_copy_mvfield_hls_tab_mvf_ref_idx_0_EN_A,
    input                                      xmem_copy_mvfield_hls_tab_mvf_ref_idx_0_WEN_A,
    input        [7:0]                         xmem_copy_mvfield_hls_tab_mvf_ref_idx_0_Din_A,
    output logic [7:0]                         xmem_copy_mvfield_hls_tab_mvf_ref_idx_0_Dout_A,
    input        [31:0]                        xmem_copy_mvfield_hls_tab_mvf_ref_idx_1_Addr_A,
    input                                      xmem_copy_mvfield_hls_tab_mvf_ref_idx_1_EN_A,
    input                                      xmem_copy_mvfield_hls_tab_mvf_ref_idx_1_WEN_A,
    input        [7:0]                         xmem_copy_mvfield_hls_tab_mvf_ref_idx_1_Din_A,
    output logic [7:0]                         xmem_copy_mvfield_hls_tab_mvf_ref_idx_1_Dout_A,
    output logic [15:0]                        xmem_copy_mvfield_hls_current_mv_mv_0_x,
    output logic [15:0]                        xmem_copy_mvfield_hls_current_mv_mv_0_y,
    output logic [15:0]                        xmem_copy_mvfield_hls_current_mv_mv_1_x,
    output logic [15:0]                        xmem_copy_mvfield_hls_current_mv_mv_1_y,
    output logic [31:0]                        xmem_copy_mvfield_hls_current_mv_poc_0,
    output logic [31:0]                        xmem_copy_mvfield_hls_current_mv_poc_1,
    output logic [7:0]                         xmem_copy_mvfield_hls_current_mv_ref_idx_0,
    output logic [7:0]                         xmem_copy_mvfield_hls_current_mv_ref_idx_1,
    output logic                               intra_pred_libx265_hls_ready,
    output logic [31:0]                        intra_pred_libx265_hls_tu_intra_pred_mode_c,
    output logic [31:0]                        intra_pred_libx265_hls_tu_intra_pred_mode,
    output logic [31:0]                        intra_pred_libx265_hls_hshift_0,
    output logic [31:0]                        intra_pred_libx265_hls_hshift_1,
    output logic [31:0]                        intra_pred_libx265_hls_hshift_2,
    output logic                               mv_mp_mode_mx_hls_ready,
    output logic [7:0]                         mv_mp_mode_mx_hls_log2_width,
    output logic [31:0]                        mv_mp_mode_mx_hls_min_pu_width,
    output logic [31:0]                        mv_mp_mode_mx_hls_log2_min_pu_size,
    input        [15:0]                        mv_mp_mode_mx_hls_mxx_x,
    input                                      mv_mp_mode_mx_hls_mxx_x_ap_vld,
    input        [15:0]                        mv_mp_mode_mx_hls_mxx_y,
    input                                      mv_mp_mode_mx_hls_mxx_y_ap_vld,
    input        [31:0]                        mv_mp_mode_mx_hls_tab_mvf_mv_0_x_Addr_A,
    input                                      mv_mp_mode_mx_hls_tab_mvf_mv_0_x_EN_A,
    input        [1:0]                         mv_mp_mode_mx_hls_tab_mvf_mv_0_x_WEN_A,
    input        [15:0]                        mv_mp_mode_mx_hls_tab_mvf_mv_0_x_Din_A,
    output logic [15:0]                        mv_mp_mode_mx_hls_tab_mvf_mv_0_x_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_hls_tab_mvf_mv_0_y_Addr_A,
    input                                      mv_mp_mode_mx_hls_tab_mvf_mv_0_y_EN_A,
    input        [1:0]                         mv_mp_mode_mx_hls_tab_mvf_mv_0_y_WEN_A,
    input        [15:0]                        mv_mp_mode_mx_hls_tab_mvf_mv_0_y_Din_A,
    output logic [15:0]                        mv_mp_mode_mx_hls_tab_mvf_mv_0_y_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_hls_tab_mvf_mv_1_x_Addr_A,
    input                                      mv_mp_mode_mx_hls_tab_mvf_mv_1_x_EN_A,
    input        [1:0]                         mv_mp_mode_mx_hls_tab_mvf_mv_1_x_WEN_A,
    input        [15:0]                        mv_mp_mode_mx_hls_tab_mvf_mv_1_x_Din_A,
    output logic [15:0]                        mv_mp_mode_mx_hls_tab_mvf_mv_1_x_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_hls_tab_mvf_mv_1_y_Addr_A,
    input                                      mv_mp_mode_mx_hls_tab_mvf_mv_1_y_EN_A,
    input        [1:0]                         mv_mp_mode_mx_hls_tab_mvf_mv_1_y_WEN_A,
    input        [15:0]                        mv_mp_mode_mx_hls_tab_mvf_mv_1_y_Din_A,
    output logic [15:0]                        mv_mp_mode_mx_hls_tab_mvf_mv_1_y_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_hls_tab_mvf_poc_0_Addr_A,
    input                                      mv_mp_mode_mx_hls_tab_mvf_poc_0_EN_A,
    input        [3:0]                         mv_mp_mode_mx_hls_tab_mvf_poc_0_WEN_A,
    input        [31:0]                        mv_mp_mode_mx_hls_tab_mvf_poc_0_Din_A,
    output logic [31:0]                        mv_mp_mode_mx_hls_tab_mvf_poc_0_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_hls_tab_mvf_poc_1_Addr_A,
    input                                      mv_mp_mode_mx_hls_tab_mvf_poc_1_EN_A,
    input        [3:0]                         mv_mp_mode_mx_hls_tab_mvf_poc_1_WEN_A,
    input        [31:0]                        mv_mp_mode_mx_hls_tab_mvf_poc_1_Din_A,
    output logic [31:0]                        mv_mp_mode_mx_hls_tab_mvf_poc_1_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_hls_tab_mvf_ref_idx_0_Addr_A,
    input                                      mv_mp_mode_mx_hls_tab_mvf_ref_idx_0_EN_A,
    input                                      mv_mp_mode_mx_hls_tab_mvf_ref_idx_0_WEN_A,
    input        [7:0]                         mv_mp_mode_mx_hls_tab_mvf_ref_idx_0_Din_A,
    output logic [7:0]                         mv_mp_mode_mx_hls_tab_mvf_ref_idx_0_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_hls_tab_mvf_ref_idx_1_Addr_A,
    input                                      mv_mp_mode_mx_hls_tab_mvf_ref_idx_1_EN_A,
    input                                      mv_mp_mode_mx_hls_tab_mvf_ref_idx_1_WEN_A,
    input        [7:0]                         mv_mp_mode_mx_hls_tab_mvf_ref_idx_1_Din_A,
    output logic [7:0]                         mv_mp_mode_mx_hls_tab_mvf_ref_idx_1_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_hls_tab_mvf_pred_flag_row_Addr_A,
    input                                      mv_mp_mode_mx_hls_tab_mvf_pred_flag_row_EN_A,
    input        [3:0]                         mv_mp_mode_mx_hls_tab_mvf_pred_flag_row_WEN_A,
    input        [31:0]                        mv_mp_mode_mx_hls_tab_mvf_pred_flag_row_Din_A,
    output logic [31:0]                        mv_mp_mode_mx_hls_tab_mvf_pred_flag_row_Dout_A,
    output logic                               mv_mp_mode_mx_lt_hls_ready,
    output logic [7:0]                         mv_mp_mode_mx_lt_hls_log2_width,
    output logic [31:0]                        mv_mp_mode_mx_lt_hls_min_pu_width,
    output logic [31:0]                        mv_mp_mode_mx_lt_hls_log2_min_pu_size,
    output logic [31:0]                        mv_mp_mode_mx_lt_hls_poc,
    input        [31:0]                        mv_mp_mode_mx_lt_hls_refPicList_0_isLongTerm_Addr_A,
    input                                      mv_mp_mode_mx_lt_hls_refPicList_0_isLongTerm_EN_A,
    input        [3:0]                         mv_mp_mode_mx_lt_hls_refPicList_0_isLongTerm_WEN_A,
    input        [31:0]                        mv_mp_mode_mx_lt_hls_refPicList_0_isLongTerm_Din_A,
    output logic [31:0]                        mv_mp_mode_mx_lt_hls_refPicList_0_isLongTerm_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_lt_hls_refPicList_1_isLongTerm_Addr_A,
    input                                      mv_mp_mode_mx_lt_hls_refPicList_1_isLongTerm_EN_A,
    input        [3:0]                         mv_mp_mode_mx_lt_hls_refPicList_1_isLongTerm_WEN_A,
    input        [31:0]                        mv_mp_mode_mx_lt_hls_refPicList_1_isLongTerm_Din_A,
    output logic [31:0]                        mv_mp_mode_mx_lt_hls_refPicList_1_isLongTerm_Dout_A,
    input        [15:0]                        mv_mp_mode_mx_lt_hls_mxx_x,
    input                                      mv_mp_mode_mx_lt_hls_mxx_x_ap_vld,
    input        [15:0]                        mv_mp_mode_mx_lt_hls_mxx_y,
    input                                      mv_mp_mode_mx_lt_hls_mxx_y_ap_vld,
    input        [31:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_x_Addr_A,
    input                                      mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_x_EN_A,
    input        [1:0]                         mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_x_WEN_A,
    input        [15:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_x_Din_A,
    output logic [15:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_x_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_y_Addr_A,
    input                                      mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_y_EN_A,
    input        [1:0]                         mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_y_WEN_A,
    input        [15:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_y_Din_A,
    output logic [15:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_y_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_x_Addr_A,
    input                                      mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_x_EN_A,
    input        [1:0]                         mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_x_WEN_A,
    input        [15:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_x_Din_A,
    output logic [15:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_x_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_y_Addr_A,
    input                                      mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_y_EN_A,
    input        [1:0]                         mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_y_WEN_A,
    input        [15:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_y_Din_A,
    output logic [15:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_y_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_poc_0_Addr_A,
    input                                      mv_mp_mode_mx_lt_hls_tab_mvf_poc_0_EN_A,
    input        [3:0]                         mv_mp_mode_mx_lt_hls_tab_mvf_poc_0_WEN_A,
    input        [31:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_poc_0_Din_A,
    output logic [31:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_poc_0_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_poc_1_Addr_A,
    input                                      mv_mp_mode_mx_lt_hls_tab_mvf_poc_1_EN_A,
    input        [3:0]                         mv_mp_mode_mx_lt_hls_tab_mvf_poc_1_WEN_A,
    input        [31:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_poc_1_Din_A,
    output logic [31:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_poc_1_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_0_Addr_A,
    input                                      mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_0_EN_A,
    input                                      mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_0_WEN_A,
    input        [7:0]                         mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_0_Din_A,
    output logic [7:0]                         mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_0_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_1_Addr_A,
    input                                      mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_1_EN_A,
    input                                      mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_1_WEN_A,
    input        [7:0]                         mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_1_Din_A,
    output logic [7:0]                         mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_1_Dout_A,
    input        [31:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_pred_flag_row_Addr_A,
    input                                      mv_mp_mode_mx_lt_hls_tab_mvf_pred_flag_row_EN_A,
    input        [3:0]                         mv_mp_mode_mx_lt_hls_tab_mvf_pred_flag_row_WEN_A,
    input        [31:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_pred_flag_row_Din_A,
    output logic [31:0]                        mv_mp_mode_mx_lt_hls_tab_mvf_pred_flag_row_Dout_A,
    output logic                               temporal_luma_motion_vector_hls_ready,
    output logic [7:0]                         temporal_luma_motion_vector_hls_log2_width,
    output logic [31:0]                        temporal_luma_motion_vector_hls_HEVCFrameSize,
    output logic [31:0]                        temporal_luma_motion_vector_hls_RefPicListSize,
    output logic [31:0]                        temporal_luma_motion_vector_hls_xm_x0,
    output logic [31:0]                        temporal_luma_motion_vector_hls_xm_y0,
    output logic [31:0]                        temporal_luma_motion_vector_hls_nPbW,
    output logic [31:0]                        temporal_luma_motion_vector_hls_nPbH,
    input        [15:0]                        temporal_luma_motion_vector_hls_mvLXCol_x,
    input                                      temporal_luma_motion_vector_hls_mvLXCol_x_ap_vld,
    input        [15:0]                        temporal_luma_motion_vector_hls_mvLXCol_y,
    input                                      temporal_luma_motion_vector_hls_mvLXCol_y_ap_vld,
    output logic [31:0]                        temporal_luma_motion_vector_hls_min_pu_width,
    output logic [31:0]                        temporal_luma_motion_vector_hls_log2_ctb_size,
    output logic [31:0]                        temporal_luma_motion_vector_hls_log2_min_pu_size,
    output logic [31:0]                        temporal_luma_motion_vector_hls_height,
    output logic [31:0]                        temporal_luma_motion_vector_hls_width,
    output logic [31:0]                        temporal_luma_motion_vector_hls_ctb_width,
    output logic [7:0]                         temporal_luma_motion_vector_hls_collocated_list,
    output logic [31:0]                        temporal_luma_motion_vector_hls_poc,
    input        [31:0]                        temporal_luma_motion_vector_hls_rpl_tab_void_Addr_A,
    input                                      temporal_luma_motion_vector_hls_rpl_tab_void_EN_A,
    input        [3:0]                         temporal_luma_motion_vector_hls_rpl_tab_void_WEN_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_rpl_tab_void_Din_A,
    output logic [31:0]                        temporal_luma_motion_vector_hls_rpl_tab_void_Dout_A,
    output logic [31:0]                        temporal_luma_motion_vector_hls_refPicList_0_nb_refs,
    output logic [31:0]                        temporal_luma_motion_vector_hls_refPicList_1_nb_refs,
    input        [31:0]                        temporal_luma_motion_vector_hls_refPicList_0_isLongTerm_Addr_A,
    input                                      temporal_luma_motion_vector_hls_refPicList_0_isLongTerm_EN_A,
    input        [3:0]                         temporal_luma_motion_vector_hls_refPicList_0_isLongTerm_WEN_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_refPicList_0_isLongTerm_Din_A,
    output logic [31:0]                        temporal_luma_motion_vector_hls_refPicList_0_isLongTerm_Dout_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_refPicList_1_isLongTerm_Addr_A,
    input                                      temporal_luma_motion_vector_hls_refPicList_1_isLongTerm_EN_A,
    input        [3:0]                         temporal_luma_motion_vector_hls_refPicList_1_isLongTerm_WEN_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_refPicList_1_isLongTerm_Din_A,
    output logic [31:0]                        temporal_luma_motion_vector_hls_refPicList_1_isLongTerm_Dout_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_refPicList_0_list_Addr_A,
    input                                      temporal_luma_motion_vector_hls_refPicList_0_list_EN_A,
    input        [3:0]                         temporal_luma_motion_vector_hls_refPicList_0_list_WEN_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_refPicList_0_list_Din_A,
    output logic [31:0]                        temporal_luma_motion_vector_hls_refPicList_0_list_Dout_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_refPicList_1_list_Addr_A,
    input                                      temporal_luma_motion_vector_hls_refPicList_1_list_EN_A,
    input        [3:0]                         temporal_luma_motion_vector_hls_refPicList_1_list_WEN_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_refPicList_1_list_Din_A,
    output logic [31:0]                        temporal_luma_motion_vector_hls_refPicList_1_list_Dout_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_x_Addr_A,
    input                                      temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_x_EN_A,
    input        [1:0]                         temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_x_WEN_A,
    input        [15:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_x_Din_A,
    output logic [15:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_x_Dout_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_y_Addr_A,
    input                                      temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_y_EN_A,
    input        [1:0]                         temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_y_WEN_A,
    input        [15:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_y_Din_A,
    output logic [15:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_y_Dout_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_x_Addr_A,
    input                                      temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_x_EN_A,
    input        [1:0]                         temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_x_WEN_A,
    input        [15:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_x_Din_A,
    output logic [15:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_x_Dout_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_y_Addr_A,
    input                                      temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_y_EN_A,
    input        [1:0]                         temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_y_WEN_A,
    input        [15:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_y_Din_A,
    output logic [15:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_y_Dout_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_0_Addr_A,
    input                                      temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_0_EN_A,
    input        [3:0]                         temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_0_WEN_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_0_Din_A,
    output logic [31:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_0_Dout_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_1_Addr_A,
    input                                      temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_1_EN_A,
    input        [3:0]                         temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_1_WEN_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_1_Din_A,
    output logic [31:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_1_Dout_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_0_Addr_A,
    input                                      temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_0_EN_A,
    input                                      temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_0_WEN_A,
    input        [7:0]                         temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_0_Din_A,
    output logic [7:0]                         temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_0_Dout_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_1_Addr_A,
    input                                      temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_1_EN_A,
    input                                      temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_1_WEN_A,
    input        [7:0]                         temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_1_Din_A,
    output logic [7:0]                         temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_1_Dout_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_pred_flag_row_Addr_A,
    input                                      temporal_luma_motion_vector_hls_collocated_tab_mvf_pred_flag_row_EN_A,
    input        [3:0]                         temporal_luma_motion_vector_hls_collocated_tab_mvf_pred_flag_row_WEN_A,
    input        [31:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_pred_flag_row_Din_A,
    output logic [31:0]                        temporal_luma_motion_vector_hls_collocated_tab_mvf_pred_flag_row_Dout_A,
    output logic                               is_diff_mer_hls_ready,
    output logic [31:0]                        is_diff_mer_hls_xm_x0,
    output logic [31:0]                        is_diff_mer_hls_xm_y0,
    output logic [7:0]                         is_diff_mer_hls_xm_log2_parallel_merge_level,
    output logic                               append_zero_motion_vector_candidates_hls_ready,
    output logic [31:0]                        append_zero_motion_vector_candidates_hls_merge_idx,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_0,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_0_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_1,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_1_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_2,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_2_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_3,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_3_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_4,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_4_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_0,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_0_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_1,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_1_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_2,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_2_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_3,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_3_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_4,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_4_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_0,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_0_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_1,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_1_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_2,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_2_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_3,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_3_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_4,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_4_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_0,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_0_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_1,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_1_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_2,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_2_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_3,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_3_ap_vld,
    input        [15:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_4,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_4_ap_vld,
    input        [31:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_0,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_poc0_0_ap_vld,
    input        [31:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_1,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_poc0_1_ap_vld,
    input        [31:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_2,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_poc0_2_ap_vld,
    input        [31:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_3,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_poc0_3_ap_vld,
    input        [31:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_4,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_poc0_4_ap_vld,
    input        [31:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_0,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_poc1_0_ap_vld,
    input        [31:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_1,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_poc1_1_ap_vld,
    input        [31:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_2,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_poc1_2_ap_vld,
    input        [31:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_3,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_poc1_3_ap_vld,
    input        [31:0]                        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_4,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_poc1_4_ap_vld,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_0,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_0_ap_vld,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_1,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_1_ap_vld,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_2,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_2_ap_vld,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_3,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_3_ap_vld,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_4,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_4_ap_vld,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_0,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_0_ap_vld,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_1,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_1_ap_vld,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_2,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_2_ap_vld,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_3,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_3_ap_vld,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_4,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_4_ap_vld,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_0,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_0_ap_vld,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_1,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_1_ap_vld,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_2,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_2_ap_vld,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_3,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_3_ap_vld,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_4,
    input                                      append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_4_ap_vld,
    output logic [7:0]                         append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_i,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_o,
    input                                      append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_o_ap_vld,
    output logic [7:0]                         append_zero_motion_vector_candidates_hls_zero_idx_i,
    input        [7:0]                         append_zero_motion_vector_candidates_hls_zero_idx_o,
    input                                      append_zero_motion_vector_candidates_hls_zero_idx_o_ap_vld,
    output logic [7:0]                         append_zero_motion_vector_candidates_hls_slice_type,
    input        [31:0]                        append_zero_motion_vector_candidates_hls_refPicList_0_list_Addr_A,
    input                                      append_zero_motion_vector_candidates_hls_refPicList_0_list_EN_A,
    input        [3:0]                         append_zero_motion_vector_candidates_hls_refPicList_0_list_WEN_A,
    input        [31:0]                        append_zero_motion_vector_candidates_hls_refPicList_0_list_Din_A,
    output logic [31:0]                        append_zero_motion_vector_candidates_hls_refPicList_0_list_Dout_A,
    input        [31:0]                        append_zero_motion_vector_candidates_hls_refPicList_1_list_Addr_A,
    input                                      append_zero_motion_vector_candidates_hls_refPicList_1_list_EN_A,
    input        [3:0]                         append_zero_motion_vector_candidates_hls_refPicList_1_list_WEN_A,
    input        [31:0]                        append_zero_motion_vector_candidates_hls_refPicList_1_list_Din_A,
    output logic [31:0]                        append_zero_motion_vector_candidates_hls_refPicList_1_list_Dout_A,
    output logic                               merge_mode_exit_hls_ready,
    output logic [31:0]                        merge_mode_exit_hls_merge_idx,
    input        [7:0]                         merge_mode_exit_hls_current_mv_pred_flag,
    input                                      merge_mode_exit_hls_current_mv_pred_flag_ap_vld,
    input        [15:0]                        merge_mode_exit_hls_current_mv_mv_0_x,
    input                                      merge_mode_exit_hls_current_mv_mv_0_x_ap_vld,
    input        [15:0]                        merge_mode_exit_hls_current_mv_mv_0_y,
    input                                      merge_mode_exit_hls_current_mv_mv_0_y_ap_vld,
    input        [15:0]                        merge_mode_exit_hls_current_mv_mv_1_x,
    input                                      merge_mode_exit_hls_current_mv_mv_1_x_ap_vld,
    input        [15:0]                        merge_mode_exit_hls_current_mv_mv_1_y,
    input                                      merge_mode_exit_hls_current_mv_mv_1_y_ap_vld,
    input        [31:0]                        merge_mode_exit_hls_current_mv_poc_0,
    input                                      merge_mode_exit_hls_current_mv_poc_0_ap_vld,
    input        [31:0]                        merge_mode_exit_hls_current_mv_poc_1,
    input                                      merge_mode_exit_hls_current_mv_poc_1_ap_vld,
    input        [7:0]                         merge_mode_exit_hls_current_mv_ref_idx_0,
    input                                      merge_mode_exit_hls_current_mv_ref_idx_0_ap_vld,
    input        [7:0]                         merge_mode_exit_hls_current_mv_ref_idx_1,
    input                                      merge_mode_exit_hls_current_mv_ref_idx_1_ap_vld,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv0_x_0,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv0_x_1,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv0_x_2,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv0_x_3,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv0_x_4,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv0_y_0,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv0_y_1,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv0_y_2,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv0_y_3,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv0_y_4,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv1_x_0,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv1_x_1,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv1_x_2,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv1_x_3,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv1_x_4,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv1_y_0,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv1_y_1,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv1_y_2,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv1_y_3,
    output logic [15:0]                        merge_mode_exit_hls_mergecand_list_mv1_y_4,
    output logic [31:0]                        merge_mode_exit_hls_mergecand_list_poc0_0,
    output logic [31:0]                        merge_mode_exit_hls_mergecand_list_poc0_1,
    output logic [31:0]                        merge_mode_exit_hls_mergecand_list_poc0_2,
    output logic [31:0]                        merge_mode_exit_hls_mergecand_list_poc0_3,
    output logic [31:0]                        merge_mode_exit_hls_mergecand_list_poc0_4,
    output logic [31:0]                        merge_mode_exit_hls_mergecand_list_poc1_0,
    output logic [31:0]                        merge_mode_exit_hls_mergecand_list_poc1_1,
    output logic [31:0]                        merge_mode_exit_hls_mergecand_list_poc1_2,
    output logic [31:0]                        merge_mode_exit_hls_mergecand_list_poc1_3,
    output logic [31:0]                        merge_mode_exit_hls_mergecand_list_poc1_4,
    output logic [7:0]                         merge_mode_exit_hls_mergecand_list_ref_idx0_0,
    output logic [7:0]                         merge_mode_exit_hls_mergecand_list_ref_idx0_1,
    output logic [7:0]                         merge_mode_exit_hls_mergecand_list_ref_idx0_2,
    output logic [7:0]                         merge_mode_exit_hls_mergecand_list_ref_idx0_3,
    output logic [7:0]                         merge_mode_exit_hls_mergecand_list_ref_idx0_4,
    output logic [7:0]                         merge_mode_exit_hls_mergecand_list_ref_idx1_0,
    output logic [7:0]                         merge_mode_exit_hls_mergecand_list_ref_idx1_1,
    output logic [7:0]                         merge_mode_exit_hls_mergecand_list_ref_idx1_2,
    output logic [7:0]                         merge_mode_exit_hls_mergecand_list_ref_idx1_3,
    output logic [7:0]                         merge_mode_exit_hls_mergecand_list_ref_idx1_4,
    output logic [7:0]                         merge_mode_exit_hls_mergecand_list_pred_flag_0_i,
    input        [7:0]                         merge_mode_exit_hls_mergecand_list_pred_flag_0_o,
    input                                      merge_mode_exit_hls_mergecand_list_pred_flag_0_o_ap_vld,
    output logic [7:0]                         merge_mode_exit_hls_mergecand_list_pred_flag_1_i,
    input        [7:0]                         merge_mode_exit_hls_mergecand_list_pred_flag_1_o,
    input                                      merge_mode_exit_hls_mergecand_list_pred_flag_1_o_ap_vld,
    output logic [7:0]                         merge_mode_exit_hls_mergecand_list_pred_flag_2_i,
    input        [7:0]                         merge_mode_exit_hls_mergecand_list_pred_flag_2_o,
    input                                      merge_mode_exit_hls_mergecand_list_pred_flag_2_o_ap_vld,
    output logic [7:0]                         merge_mode_exit_hls_mergecand_list_pred_flag_3_i,
    input        [7:0]                         merge_mode_exit_hls_mergecand_list_pred_flag_3_o,
    input                                      merge_mode_exit_hls_mergecand_list_pred_flag_3_o_ap_vld,
    output logic [7:0]                         merge_mode_exit_hls_mergecand_list_pred_flag_4_i,
    input        [7:0]                         merge_mode_exit_hls_mergecand_list_pred_flag_4_o,
    input                                      merge_mode_exit_hls_mergecand_list_pred_flag_4_o_ap_vld,
    output logic                               set_to_mergecand_list_hls_ready,
    output logic [7:0]                         set_to_mergecand_list_hls_log2_width,
    output logic [7:0]                         set_to_mergecand_list_hls_xm_nb_merge_cand,
    output logic [31:0]                        set_to_mergecand_list_hls_log2_min_pu_size,
    output logic [31:0]                        set_to_mergecand_list_hls_min_pu_width,
    input        [7:0]                         set_to_mergecand_list_hls_mergecand_list_pred_flag_0,
    input                                      set_to_mergecand_list_hls_mergecand_list_pred_flag_0_ap_vld,
    input        [7:0]                         set_to_mergecand_list_hls_mergecand_list_pred_flag_1,
    input                                      set_to_mergecand_list_hls_mergecand_list_pred_flag_1_ap_vld,
    input        [7:0]                         set_to_mergecand_list_hls_mergecand_list_pred_flag_2,
    input                                      set_to_mergecand_list_hls_mergecand_list_pred_flag_2_ap_vld,
    input        [7:0]                         set_to_mergecand_list_hls_mergecand_list_pred_flag_3,
    input                                      set_to_mergecand_list_hls_mergecand_list_pred_flag_3_ap_vld,
    input        [7:0]                         set_to_mergecand_list_hls_mergecand_list_pred_flag_4,
    input                                      set_to_mergecand_list_hls_mergecand_list_pred_flag_4_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv0_x_0,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv0_x_0_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv0_x_1,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv0_x_1_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv0_x_2,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv0_x_2_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv0_x_3,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv0_x_3_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv0_x_4,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv0_x_4_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv0_y_0,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv0_y_0_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv0_y_1,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv0_y_1_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv0_y_2,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv0_y_2_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv0_y_3,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv0_y_3_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv0_y_4,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv0_y_4_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv1_x_0,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv1_x_0_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv1_x_1,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv1_x_1_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv1_x_2,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv1_x_2_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv1_x_3,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv1_x_3_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv1_x_4,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv1_x_4_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv1_y_0,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv1_y_0_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv1_y_1,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv1_y_1_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv1_y_2,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv1_y_2_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv1_y_3,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv1_y_3_ap_vld,
    input        [15:0]                        set_to_mergecand_list_hls_mergecand_list_mv1_y_4,
    input                                      set_to_mergecand_list_hls_mergecand_list_mv1_y_4_ap_vld,
    input        [31:0]                        set_to_mergecand_list_hls_mergecand_list_poc0_0,
    input                                      set_to_mergecand_list_hls_mergecand_list_poc0_0_ap_vld,
    input        [31:0]                        set_to_mergecand_list_hls_mergecand_list_poc0_1,
    input                                      set_to_mergecand_list_hls_mergecand_list_poc0_1_ap_vld,
    input        [31:0]                        set_to_mergecand_list_hls_mergecand_list_poc0_2,
    input                                      set_to_mergecand_list_hls_mergecand_list_poc0_2_ap_vld,
    input        [31:0]                        set_to_mergecand_list_hls_mergecand_list_poc0_3,
    input                                      set_to_mergecand_list_hls_mergecand_list_poc0_3_ap_vld,
    input        [31:0]                        set_to_mergecand_list_hls_mergecand_list_poc0_4,
    input                                      set_to_mergecand_list_hls_mergecand_list_poc0_4_ap_vld,
    input        [31:0]                        set_to_mergecand_list_hls_mergecand_list_poc1_0,
    input                                      set_to_mergecand_list_hls_mergecand_list_poc1_0_ap_vld,
    input        [31:0]                        set_to_mergecand_list_hls_mergecand_list_poc1_1,
    input                                      set_to_mergecand_list_hls_mergecand_list_poc1_1_ap_vld,
    input        [31:0]                        set_to_mergecand_list_hls_mergecand_list_poc1_2,
    input                                      set_to_mergecand_list_hls_mergecand_list_poc1_2_ap_vld,
    input        [31:0]                        set_to_mergecand_list_hls_mergecand_list_poc1_3,
    input                                      set_to_mergecand_list_hls_mergecand_list_poc1_3_ap_vld,
    input        [31:0]                        set_to_mergecand_list_hls_mergecand_list_poc1_4,
    input                                      set_to_mergecand_list_hls_mergecand_list_poc1_4_ap_vld,
    input        [7:0]                         set_to_mergecand_list_hls_mergecand_list_ref_idx0_0,
    input                                      set_to_mergecand_list_hls_mergecand_list_ref_idx0_0_ap_vld,
    input        [7:0]                         set_to_mergecand_list_hls_mergecand_list_ref_idx0_1,
    input                                      set_to_mergecand_list_hls_mergecand_list_ref_idx0_1_ap_vld,
    input        [7:0]                         set_to_mergecand_list_hls_mergecand_list_ref_idx0_2,
    input                                      set_to_mergecand_list_hls_mergecand_list_ref_idx0_2_ap_vld,
    input        [7:0]                         set_to_mergecand_list_hls_mergecand_list_ref_idx0_3,
    input                                      set_to_mergecand_list_hls_mergecand_list_ref_idx0_3_ap_vld,
    input        [7:0]                         set_to_mergecand_list_hls_mergecand_list_ref_idx0_4,
    input                                      set_to_mergecand_list_hls_mergecand_list_ref_idx0_4_ap_vld,
    input        [7:0]                         set_to_mergecand_list_hls_mergecand_list_ref_idx1_0,
    input                                      set_to_mergecand_list_hls_mergecand_list_ref_idx1_0_ap_vld,
    input        [7:0]                         set_to_mergecand_list_hls_mergecand_list_ref_idx1_1,
    input                                      set_to_mergecand_list_hls_mergecand_list_ref_idx1_1_ap_vld,
    input        [7:0]                         set_to_mergecand_list_hls_mergecand_list_ref_idx1_2,
    input                                      set_to_mergecand_list_hls_mergecand_list_ref_idx1_2_ap_vld,
    input        [7:0]                         set_to_mergecand_list_hls_mergecand_list_ref_idx1_3,
    input                                      set_to_mergecand_list_hls_mergecand_list_ref_idx1_3_ap_vld,
    input        [7:0]                         set_to_mergecand_list_hls_mergecand_list_ref_idx1_4,
    input                                      set_to_mergecand_list_hls_mergecand_list_ref_idx1_4_ap_vld,
    input        [31:0]                        set_to_mergecand_list_hls_tab_mvf_mv_0_x_Addr_A,
    input                                      set_to_mergecand_list_hls_tab_mvf_mv_0_x_EN_A,
    input        [1:0]                         set_to_mergecand_list_hls_tab_mvf_mv_0_x_WEN_A,
    input        [15:0]                        set_to_mergecand_list_hls_tab_mvf_mv_0_x_Din_A,
    output logic [15:0]                        set_to_mergecand_list_hls_tab_mvf_mv_0_x_Dout_A,
    input        [31:0]                        set_to_mergecand_list_hls_tab_mvf_mv_0_y_Addr_A,
    input                                      set_to_mergecand_list_hls_tab_mvf_mv_0_y_EN_A,
    input        [1:0]                         set_to_mergecand_list_hls_tab_mvf_mv_0_y_WEN_A,
    input        [15:0]                        set_to_mergecand_list_hls_tab_mvf_mv_0_y_Din_A,
    output logic [15:0]                        set_to_mergecand_list_hls_tab_mvf_mv_0_y_Dout_A,
    input        [31:0]                        set_to_mergecand_list_hls_tab_mvf_mv_1_x_Addr_A,
    input                                      set_to_mergecand_list_hls_tab_mvf_mv_1_x_EN_A,
    input        [1:0]                         set_to_mergecand_list_hls_tab_mvf_mv_1_x_WEN_A,
    input        [15:0]                        set_to_mergecand_list_hls_tab_mvf_mv_1_x_Din_A,
    output logic [15:0]                        set_to_mergecand_list_hls_tab_mvf_mv_1_x_Dout_A,
    input        [31:0]                        set_to_mergecand_list_hls_tab_mvf_mv_1_y_Addr_A,
    input                                      set_to_mergecand_list_hls_tab_mvf_mv_1_y_EN_A,
    input        [1:0]                         set_to_mergecand_list_hls_tab_mvf_mv_1_y_WEN_A,
    input        [15:0]                        set_to_mergecand_list_hls_tab_mvf_mv_1_y_Din_A,
    output logic [15:0]                        set_to_mergecand_list_hls_tab_mvf_mv_1_y_Dout_A,
    input        [31:0]                        set_to_mergecand_list_hls_tab_mvf_poc_0_Addr_A,
    input                                      set_to_mergecand_list_hls_tab_mvf_poc_0_EN_A,
    input        [3:0]                         set_to_mergecand_list_hls_tab_mvf_poc_0_WEN_A,
    input        [31:0]                        set_to_mergecand_list_hls_tab_mvf_poc_0_Din_A,
    output logic [31:0]                        set_to_mergecand_list_hls_tab_mvf_poc_0_Dout_A,
    input        [31:0]                        set_to_mergecand_list_hls_tab_mvf_poc_1_Addr_A,
    input                                      set_to_mergecand_list_hls_tab_mvf_poc_1_EN_A,
    input        [3:0]                         set_to_mergecand_list_hls_tab_mvf_poc_1_WEN_A,
    input        [31:0]                        set_to_mergecand_list_hls_tab_mvf_poc_1_Din_A,
    output logic [31:0]                        set_to_mergecand_list_hls_tab_mvf_poc_1_Dout_A,
    input        [31:0]                        set_to_mergecand_list_hls_tab_mvf_ref_idx_0_Addr_A,
    input                                      set_to_mergecand_list_hls_tab_mvf_ref_idx_0_EN_A,
    input                                      set_to_mergecand_list_hls_tab_mvf_ref_idx_0_WEN_A,
    input        [7:0]                         set_to_mergecand_list_hls_tab_mvf_ref_idx_0_Din_A,
    output logic [7:0]                         set_to_mergecand_list_hls_tab_mvf_ref_idx_0_Dout_A,
    input        [31:0]                        set_to_mergecand_list_hls_tab_mvf_ref_idx_1_Addr_A,
    input                                      set_to_mergecand_list_hls_tab_mvf_ref_idx_1_EN_A,
    input                                      set_to_mergecand_list_hls_tab_mvf_ref_idx_1_WEN_A,
    input        [7:0]                         set_to_mergecand_list_hls_tab_mvf_ref_idx_1_Din_A,
    output logic [7:0]                         set_to_mergecand_list_hls_tab_mvf_ref_idx_1_Dout_A,
    input        [31:0]                        set_to_mergecand_list_hls_tab_mvf_pred_flag_row_Addr_A,
    input                                      set_to_mergecand_list_hls_tab_mvf_pred_flag_row_EN_A,
    input        [3:0]                         set_to_mergecand_list_hls_tab_mvf_pred_flag_row_WEN_A,
    input        [31:0]                        set_to_mergecand_list_hls_tab_mvf_pred_flag_row_Din_A,
    output logic [31:0]                        set_to_mergecand_list_hls_tab_mvf_pred_flag_row_Dout_A,
    output logic                               compare_mv_ref_idx_hls_ready,
    output logic [7:0]                         compare_mv_ref_idx_hls_log2_width,
    output logic [31:0]                        compare_mv_ref_idx_hls_min_pu_width,
    output logic [31:0]                        compare_mv_ref_idx_hls_log2_min_pu_size,
    input        [31:0]                        compare_mv_ref_idx_hls_tab_mvf_mv_0_x_Addr_A,
    input                                      compare_mv_ref_idx_hls_tab_mvf_mv_0_x_EN_A,
    input        [1:0]                         compare_mv_ref_idx_hls_tab_mvf_mv_0_x_WEN_A,
    input        [15:0]                        compare_mv_ref_idx_hls_tab_mvf_mv_0_x_Din_A,
    output logic [15:0]                        compare_mv_ref_idx_hls_tab_mvf_mv_0_x_Dout_A,
    input        [31:0]                        compare_mv_ref_idx_hls_tab_mvf_mv_0_y_Addr_A,
    input                                      compare_mv_ref_idx_hls_tab_mvf_mv_0_y_EN_A,
    input        [1:0]                         compare_mv_ref_idx_hls_tab_mvf_mv_0_y_WEN_A,
    input        [15:0]                        compare_mv_ref_idx_hls_tab_mvf_mv_0_y_Din_A,
    output logic [15:0]                        compare_mv_ref_idx_hls_tab_mvf_mv_0_y_Dout_A,
    input        [31:0]                        compare_mv_ref_idx_hls_tab_mvf_mv_1_x_Addr_A,
    input                                      compare_mv_ref_idx_hls_tab_mvf_mv_1_x_EN_A,
    input        [1:0]                         compare_mv_ref_idx_hls_tab_mvf_mv_1_x_WEN_A,
    input        [15:0]                        compare_mv_ref_idx_hls_tab_mvf_mv_1_x_Din_A,
    output logic [15:0]                        compare_mv_ref_idx_hls_tab_mvf_mv_1_x_Dout_A,
    input        [31:0]                        compare_mv_ref_idx_hls_tab_mvf_mv_1_y_Addr_A,
    input                                      compare_mv_ref_idx_hls_tab_mvf_mv_1_y_EN_A,
    input        [1:0]                         compare_mv_ref_idx_hls_tab_mvf_mv_1_y_WEN_A,
    input        [15:0]                        compare_mv_ref_idx_hls_tab_mvf_mv_1_y_Din_A,
    output logic [15:0]                        compare_mv_ref_idx_hls_tab_mvf_mv_1_y_Dout_A,
    input        [31:0]                        compare_mv_ref_idx_hls_tab_mvf_poc_0_Addr_A,
    input                                      compare_mv_ref_idx_hls_tab_mvf_poc_0_EN_A,
    input        [3:0]                         compare_mv_ref_idx_hls_tab_mvf_poc_0_WEN_A,
    input        [31:0]                        compare_mv_ref_idx_hls_tab_mvf_poc_0_Din_A,
    output logic [31:0]                        compare_mv_ref_idx_hls_tab_mvf_poc_0_Dout_A,
    input        [31:0]                        compare_mv_ref_idx_hls_tab_mvf_poc_1_Addr_A,
    input                                      compare_mv_ref_idx_hls_tab_mvf_poc_1_EN_A,
    input        [3:0]                         compare_mv_ref_idx_hls_tab_mvf_poc_1_WEN_A,
    input        [31:0]                        compare_mv_ref_idx_hls_tab_mvf_poc_1_Din_A,
    output logic [31:0]                        compare_mv_ref_idx_hls_tab_mvf_poc_1_Dout_A,
    input        [31:0]                        compare_mv_ref_idx_hls_tab_mvf_ref_idx_0_Addr_A,
    input                                      compare_mv_ref_idx_hls_tab_mvf_ref_idx_0_EN_A,
    input                                      compare_mv_ref_idx_hls_tab_mvf_ref_idx_0_WEN_A,
    input        [7:0]                         compare_mv_ref_idx_hls_tab_mvf_ref_idx_0_Din_A,
    output logic [7:0]                         compare_mv_ref_idx_hls_tab_mvf_ref_idx_0_Dout_A,
    input        [31:0]                        compare_mv_ref_idx_hls_tab_mvf_ref_idx_1_Addr_A,
    input                                      compare_mv_ref_idx_hls_tab_mvf_ref_idx_1_EN_A,
    input                                      compare_mv_ref_idx_hls_tab_mvf_ref_idx_1_WEN_A,
    input        [7:0]                         compare_mv_ref_idx_hls_tab_mvf_ref_idx_1_Din_A,
    output logic [7:0]                         compare_mv_ref_idx_hls_tab_mvf_ref_idx_1_Dout_A,
    input        [31:0]                        compare_mv_ref_idx_hls_tab_mvf_pred_flag_row_Addr_A,
    input                                      compare_mv_ref_idx_hls_tab_mvf_pred_flag_row_EN_A,
    input        [3:0]                         compare_mv_ref_idx_hls_tab_mvf_pred_flag_row_WEN_A,
    input        [31:0]                        compare_mv_ref_idx_hls_tab_mvf_pred_flag_row_Din_A,
    output logic [31:0]                        compare_mv_ref_idx_hls_tab_mvf_pred_flag_row_Dout_A,
    output logic                               combined_bi_predictive_merge_candidates_hls_ready,
    output logic [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_i,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_o_ap_vld,
    output logic [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_i,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_o_ap_vld,
    output logic [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_i,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_o_ap_vld,
    output logic [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_i,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_o_ap_vld,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_4,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_4_ap_vld,
    output logic [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_i,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_o_ap_vld,
    output logic [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_i,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_o_ap_vld,
    output logic [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_i,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_o_ap_vld,
    output logic [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_i,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_o_ap_vld,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_4,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_4_ap_vld,
    output logic [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_i,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_o_ap_vld,
    output logic [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_i,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_o_ap_vld,
    output logic [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_i,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_o_ap_vld,
    output logic [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_i,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_o_ap_vld,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_4,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_4_ap_vld,
    output logic [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_i,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_o_ap_vld,
    output logic [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_i,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_o_ap_vld,
    output logic [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_i,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_o_ap_vld,
    output logic [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_i,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_o_ap_vld,
    input        [15:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_4,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_4_ap_vld,
    output logic [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_i,
    input        [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_o_ap_vld,
    output logic [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_i,
    input        [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_o_ap_vld,
    output logic [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_i,
    input        [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_o_ap_vld,
    output logic [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_i,
    input        [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_o_ap_vld,
    input        [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_4,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_4_ap_vld,
    output logic [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_i,
    input        [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_o_ap_vld,
    output logic [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_i,
    input        [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_o_ap_vld,
    output logic [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_i,
    input        [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_o_ap_vld,
    output logic [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_i,
    input        [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_o_ap_vld,
    input        [31:0]                        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_4,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_4_ap_vld,
    output logic [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_i,
    input        [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_o_ap_vld,
    output logic [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_i,
    input        [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_o_ap_vld,
    output logic [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_i,
    input        [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_o_ap_vld,
    output logic [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_i,
    input        [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_o_ap_vld,
    input        [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_4,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_4_ap_vld,
    output logic [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_i,
    input        [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_o_ap_vld,
    output logic [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_i,
    input        [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_o_ap_vld,
    output logic [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_i,
    input        [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_o_ap_vld,
    output logic [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_i,
    input        [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_o_ap_vld,
    input        [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_4,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_4_ap_vld,
    output logic [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_i,
    input        [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_o_ap_vld,
    output logic [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_i,
    input        [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_o_ap_vld,
    output logic [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_i,
    input        [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_o_ap_vld,
    output logic [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_i,
    input        [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_o,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_o_ap_vld,
    input        [7:0]                         combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_4,
    input                                      combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_4_ap_vld,
    output logic [7:0]                         combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_i,
    input        [7:0]                         combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_o,
    input                                      combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_o_ap_vld,
    output logic [31:0]                        combined_bi_predictive_merge_candidates_hls_merge_idx,
    output logic                               ff_hevc_luma_mv_merge_mode_hls_ready,
    output logic [7:0]                         ff_hevc_luma_mv_merge_mode_hls_log2_width,
    output logic [7:0]                         ff_hevc_luma_mv_merge_mode_hls_collocated_list,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_min_pu_width,
    output logic                               ff_hevc_luma_mv_merge_mode_hls_cand_bottom_left,
    output logic                               ff_hevc_luma_mv_merge_mode_hls_cand_left,
    output logic                               ff_hevc_luma_mv_merge_mode_hls_cand_up_left,
    output logic                               ff_hevc_luma_mv_merge_mode_hls_cand_up,
    output logic                               ff_hevc_luma_mv_merge_mode_hls_cand_up_right,
    output logic [7:0]                         ff_hevc_luma_mv_merge_mode_hls_slice_type,
    output logic [7:0]                         ff_hevc_luma_mv_merge_mode_hls_part_mode,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_nb_refs_0,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_nb_refs_1,
    output logic [7:0]                         ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_i,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_o,
    input                                      ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_o_ap_vld,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_log2_min_pu_size,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_width,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_height,
    output logic [7:0]                         ff_hevc_luma_mv_merge_mode_hls_slice_temporal_mvp_enabled_flag,
    output logic [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mvLXCol_x,
    output logic [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mvLXCol_y,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_ref_poc,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_zero_idx,
    input                                      ff_hevc_luma_mv_merge_mode_hls_zero_idx_ap_vld,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_refPicList_0_nb_refs,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_refPicList_1_nb_refs,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_refPicList_0_list_Addr_A,
    input                                      ff_hevc_luma_mv_merge_mode_hls_refPicList_0_list_EN_A,
    input        [3:0]                         ff_hevc_luma_mv_merge_mode_hls_refPicList_0_list_WEN_A,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_refPicList_0_list_Din_A,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_refPicList_0_list_Dout_A,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_refPicList_1_list_Addr_A,
    input                                      ff_hevc_luma_mv_merge_mode_hls_refPicList_1_list_EN_A,
    input        [3:0]                         ff_hevc_luma_mv_merge_mode_hls_refPicList_1_list_WEN_A,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_refPicList_1_list_Din_A,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_refPicList_1_list_Dout_A,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_tab_mvf_pred_flag_row_Addr_A,
    input                                      ff_hevc_luma_mv_merge_mode_hls_tab_mvf_pred_flag_row_EN_A,
    input        [3:0]                         ff_hevc_luma_mv_merge_mode_hls_tab_mvf_pred_flag_row_WEN_A,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_tab_mvf_pred_flag_row_Din_A,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_tab_mvf_pred_flag_row_Dout_A,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_poc,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_max_num_merge_cand,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_nPbW_i,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_nPbW_o,
    input                                      ff_hevc_luma_mv_merge_mode_hls_nPbW_o_ap_vld,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_nPbH_i,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_nPbH_o,
    input                                      ff_hevc_luma_mv_merge_mode_hls_nPbH_o_ap_vld,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_part_idx,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_merge_idx,
    output logic [7:0]                         ff_hevc_luma_mv_merge_mode_hls_xm_log2_parallel_merge_level,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_xm_x,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_xm_y,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_xm_x0_i,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_xm_x0_o,
    input                                      ff_hevc_luma_mv_merge_mode_hls_xm_x0_o_ap_vld,
    output logic [31:0]                        ff_hevc_luma_mv_merge_mode_hls_xm_y0_i,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_xm_y0_o,
    input                                      ff_hevc_luma_mv_merge_mode_hls_xm_y0_o_ap_vld,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_xm_dbg,
    input                                      ff_hevc_luma_mv_merge_mode_hls_xm_dbg_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_0,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_0_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_1,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_1_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_2,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_2_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_3,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_3_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_4,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_4_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_0,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_0_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_1,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_1_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_2,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_2_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_3,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_3_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_4,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_4_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_0,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_0_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_1,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_1_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_2,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_2_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_3,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_3_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_4,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_4_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_0,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_0_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_1,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_1_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_2,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_2_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_3,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_3_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_4,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_4_ap_vld,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_0,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_0_ap_vld,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_1,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_1_ap_vld,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_2,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_2_ap_vld,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_3,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_3_ap_vld,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_4,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_4_ap_vld,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_0,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_0_ap_vld,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_1,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_1_ap_vld,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_2,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_2_ap_vld,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_3,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_3_ap_vld,
    input        [31:0]                        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_4,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_4_ap_vld,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_0,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_0_ap_vld,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_1,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_1_ap_vld,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_2,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_2_ap_vld,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_3,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_3_ap_vld,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_4,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_4_ap_vld,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_0,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_0_ap_vld,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_1,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_1_ap_vld,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_2,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_2_ap_vld,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_3,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_3_ap_vld,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_4,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_4_ap_vld,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_0,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_0_ap_vld,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_1,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_1_ap_vld,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_2,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_2_ap_vld,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_3,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_3_ap_vld,
    input        [7:0]                         ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_4,
    input                                      ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_4_ap_vld,
    output logic                               ff_hevc_luma_mv_mvp_mode_hls_ready,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_xm_x0,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_xm_y0,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_nPbW,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_nPbH,
    output logic [7:0]                         ff_hevc_luma_mv_mvp_mode_hls_log2_width,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_part_idx,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_poc,
    output logic [7:0]                         ff_hevc_luma_mv_mvp_mode_hls_slice_temporal_mvp_enabled_flag,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_merge_idx,
    input        [15:0]                        ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_x,
    input                                      ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_x_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_y,
    input                                      ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_y_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_x,
    input                                      ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_x_ap_vld,
    input        [15:0]                        ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_y,
    input                                      ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_y_ap_vld,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_current_mv_poc_0,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_current_mv_poc_1,
    output logic [7:0]                         ff_hevc_luma_mv_mvp_mode_hls_current_mv_ref_idx_0,
    output logic [7:0]                         ff_hevc_luma_mv_mvp_mode_hls_current_mv_ref_idx_1,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_min_pu_width,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_log2_min_pu_size,
    output logic [15:0]                        ff_hevc_luma_mv_mvp_mode_hls_mxx_x,
    output logic [15:0]                        ff_hevc_luma_mv_mvp_mode_hls_mxx_y,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_mvp_lx_flag,
    output logic [7:0]                         ff_hevc_luma_mv_mvp_mode_hls_cand_bottom_left,
    output logic [7:0]                         ff_hevc_luma_mv_mvp_mode_hls_cand_left,
    output logic [7:0]                         ff_hevc_luma_mv_mvp_mode_hls_cand_up,
    output logic [7:0]                         ff_hevc_luma_mv_mvp_mode_hls_cand_up_left,
    output logic [7:0]                         ff_hevc_luma_mv_mvp_mode_hls_cand_up_right,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_width,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_height,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_nb_refs,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_nb_refs,
    output logic [15:0]                        ff_hevc_luma_mv_mvp_mode_hls_mvLXCol_x,
    output logic [15:0]                        ff_hevc_luma_mv_mvp_mode_hls_mvLXCol_y,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_ref_poc,
    output logic [7:0]                         ff_hevc_luma_mv_mvp_mode_hls_collocated_list,
    output logic                               ff_hevc_luma_mv_mvp_mode_hls_is_temporal,
    input        [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_xm_dbg,
    input                                      ff_hevc_luma_mv_mvp_mode_hls_xm_dbg_ap_vld,
    input        [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_isLongTerm_Addr_A,
    input                                      ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_isLongTerm_EN_A,
    input        [3:0]                         ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_isLongTerm_WEN_A,
    input        [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_isLongTerm_Din_A,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_isLongTerm_Dout_A,
    input        [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_isLongTerm_Addr_A,
    input                                      ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_isLongTerm_EN_A,
    input        [3:0]                         ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_isLongTerm_WEN_A,
    input        [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_isLongTerm_Din_A,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_isLongTerm_Dout_A,
    input        [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_list_Addr_A,
    input                                      ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_list_EN_A,
    input        [3:0]                         ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_list_WEN_A,
    input        [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_list_Din_A,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_list_Dout_A,
    input        [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_list_Addr_A,
    input                                      ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_list_EN_A,
    input        [3:0]                         ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_list_WEN_A,
    input        [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_list_Din_A,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_list_Dout_A,
    input        [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_tab_mvf_pred_flag_row_Addr_A,
    input                                      ff_hevc_luma_mv_mvp_mode_hls_tab_mvf_pred_flag_row_EN_A,
    input        [3:0]                         ff_hevc_luma_mv_mvp_mode_hls_tab_mvf_pred_flag_row_WEN_A,
    input        [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_tab_mvf_pred_flag_row_Din_A,
    output logic [31:0]                        ff_hevc_luma_mv_mvp_mode_hls_tab_mvf_pred_flag_row_Dout_A,
    output logic                               hls_prediction_unit_hls_ready,
    output logic [31:0]                        hls_prediction_unit_hls_nPbW,
    output logic [31:0]                        hls_prediction_unit_hls_nPbH,
    output logic [31:0]                        hls_prediction_unit_hls_part_idx,
    output logic [31:0]                        hls_prediction_unit_hls_idx,
    output logic [31:0]                        hls_prediction_unit_hls_min_pu_width,
    output logic [31:0]                        hls_prediction_unit_hls_log2_min_cb_size,
    output logic [31:0]                        hls_prediction_unit_hls_min_cb_width,
    input        [31:0]                        hls_prediction_unit_hls_skip_flag_Addr_A,
    input                                      hls_prediction_unit_hls_skip_flag_EN_A,
    input                                      hls_prediction_unit_hls_skip_flag_WEN_A,
    input        [7:0]                         hls_prediction_unit_hls_skip_flag_Din_A,
    output logic [7:0]                         hls_prediction_unit_hls_skip_flag_Dout_A,
    output logic [31:0]                        hls_prediction_unit_hls_max_num_merge_cand,
    output logic [15:0]                        hls_prediction_unit_hls_current_mv_mv_0_x_i,
    input        [15:0]                        hls_prediction_unit_hls_current_mv_mv_0_x_o,
    input                                      hls_prediction_unit_hls_current_mv_mv_0_x_o_ap_vld,
    output logic [15:0]                        hls_prediction_unit_hls_current_mv_mv_0_y_i,
    input        [15:0]                        hls_prediction_unit_hls_current_mv_mv_0_y_o,
    input                                      hls_prediction_unit_hls_current_mv_mv_0_y_o_ap_vld,
    output logic [15:0]                        hls_prediction_unit_hls_current_mv_mv_1_x_i,
    input        [15:0]                        hls_prediction_unit_hls_current_mv_mv_1_x_o,
    input                                      hls_prediction_unit_hls_current_mv_mv_1_x_o_ap_vld,
    output logic [15:0]                        hls_prediction_unit_hls_current_mv_mv_1_y_i,
    input        [15:0]                        hls_prediction_unit_hls_current_mv_mv_1_y_o,
    input                                      hls_prediction_unit_hls_current_mv_mv_1_y_o_ap_vld,
    input        [31:0]                        hls_prediction_unit_hls_current_mv_poc_0,
    input                                      hls_prediction_unit_hls_current_mv_poc_0_ap_vld,
    input        [31:0]                        hls_prediction_unit_hls_current_mv_poc_1,
    input                                      hls_prediction_unit_hls_current_mv_poc_1_ap_vld,
    output logic [7:0]                         hls_prediction_unit_hls_current_mv_ref_idx_0_i,
    input        [7:0]                         hls_prediction_unit_hls_current_mv_ref_idx_0_o,
    input                                      hls_prediction_unit_hls_current_mv_ref_idx_0_o_ap_vld,
    output logic [7:0]                         hls_prediction_unit_hls_current_mv_ref_idx_1_i,
    input        [7:0]                         hls_prediction_unit_hls_current_mv_ref_idx_1_o,
    input                                      hls_prediction_unit_hls_current_mv_ref_idx_1_o_ap_vld,
    output logic [7:0]                         hls_prediction_unit_hls_current_mv_pred_flag_i,
    input        [7:0]                         hls_prediction_unit_hls_current_mv_pred_flag_o,
    input                                      hls_prediction_unit_hls_current_mv_pred_flag_o_ap_vld,
    output logic [7:0]                         hls_prediction_unit_hls_slice_type,
    output logic [31:0]                        hls_prediction_unit_hls_rv_ff_hevc_luma_mv_merge_mode,
    output logic [31:0]                        hls_prediction_unit_hls_rv_ff_hevc_ref_idx_lx_decode,
    output logic [31:0]                        hls_prediction_unit_hls_rv_ff_hevc_hls_mvd_coding,
    output logic [31:0]                        hls_prediction_unit_hls_rv_ff_hevc_luma_mv_mvp_mode,
    output logic [31:0]                        hls_prediction_unit_hls_rv_hevc_await_progress,
    output logic [31:0]                        hls_prediction_unit_hls_rv_hevc_await_progress_bl,
    output logic [31:0]                        hls_prediction_unit_hls_rv_ff_upsample_block,
    output logic [31:0]                        hls_prediction_unit_hls_rv_luma_mc_uni_libx265,
    output logic [31:0]                        hls_prediction_unit_hls_rv_chroma_mc_uni_libx265,
    output logic [31:0]                        hls_prediction_unit_hls_rv_xmem_copy_mvfield,
    output logic [31:0]                        hls_prediction_unit_hls_rv_setMVPOC,
    output logic [31:0]                        hls_prediction_unit_hls_rv_checkref,
    input        [31:0]                        hls_prediction_unit_hls_merge_idx,
    input                                      hls_prediction_unit_hls_merge_idx_ap_vld,
    input        [31:0]                        hls_prediction_unit_hls_mvp_lx_flag,
    input                                      hls_prediction_unit_hls_mvp_lx_flag_ap_vld,
    input        [15:0]                        hls_prediction_unit_hls_pu_mvd_x,
    input                                      hls_prediction_unit_hls_pu_mvd_x_ap_vld,
    input        [15:0]                        hls_prediction_unit_hls_pu_mvd_y,
    input                                      hls_prediction_unit_hls_pu_mvd_y_ap_vld,
    input        [31:0]                        hls_prediction_unit_hls_tab_mvf_pred_flag_row_Addr_A,
    input                                      hls_prediction_unit_hls_tab_mvf_pred_flag_row_EN_A,
    input        [3:0]                         hls_prediction_unit_hls_tab_mvf_pred_flag_row_WEN_A,
    input        [31:0]                        hls_prediction_unit_hls_tab_mvf_pred_flag_row_Din_A,
    output logic [31:0]                        hls_prediction_unit_hls_tab_mvf_pred_flag_row_Dout_A,
    output logic                               hls_prediction_unit_hls_skipref,
    output logic                               hls_prediction_unit_hls_interref,
    output logic [31:0]                        hls_prediction_unit_hls_log2_min_pu_size,
    output logic [7:0]                         hls_prediction_unit_hls_log2_width,
    input        [7:0]                         hls_prediction_unit_hls_merge_flag,
    input                                      hls_prediction_unit_hls_merge_flag_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_depth,
    output logic [31:0]                        hls_prediction_unit_hls_nb_refs_0,
    output logic [31:0]                        hls_prediction_unit_hls_nb_refs_1,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_0_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_0_o,
    input                                      hls_prediction_unit_hls_predColBuf_0_o_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_1_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_1_o,
    input                                      hls_prediction_unit_hls_predColBuf_1_o_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_2_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_2_o,
    input                                      hls_prediction_unit_hls_predColBuf_2_o_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_3_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_3_o,
    input                                      hls_prediction_unit_hls_predColBuf_3_o_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_4_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_4_o,
    input                                      hls_prediction_unit_hls_predColBuf_4_o_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_5_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_5_o,
    input                                      hls_prediction_unit_hls_predColBuf_5_o_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_6_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_6_o,
    input                                      hls_prediction_unit_hls_predColBuf_6_o_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_7_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_7_o,
    input                                      hls_prediction_unit_hls_predColBuf_7_o_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_8_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_8_o,
    input                                      hls_prediction_unit_hls_predColBuf_8_o_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_9_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_9_o,
    input                                      hls_prediction_unit_hls_predColBuf_9_o_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_10_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_10_o,
    input                                      hls_prediction_unit_hls_predColBuf_10_o_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_11_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_11_o,
    input                                      hls_prediction_unit_hls_predColBuf_11_o_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_12_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_12_o,
    input                                      hls_prediction_unit_hls_predColBuf_12_o_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_13_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_13_o,
    input                                      hls_prediction_unit_hls_predColBuf_13_o_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_14_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_14_o,
    input                                      hls_prediction_unit_hls_predColBuf_14_o_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_15_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_15_o,
    input                                      hls_prediction_unit_hls_predColBuf_15_o_ap_vld,
    output logic [31:0]                        hls_prediction_unit_hls_predColBuf_16_i,
    input        [31:0]                        hls_prediction_unit_hls_predColBuf_16_o,
    input                                      hls_prediction_unit_hls_predColBuf_16_o_ap_vld,
    input        [31:0]                        hls_prediction_unit_hls_refPicList_0_list_Addr_A,
    input                                      hls_prediction_unit_hls_refPicList_0_list_EN_A,
    input        [3:0]                         hls_prediction_unit_hls_refPicList_0_list_WEN_A,
    input        [31:0]                        hls_prediction_unit_hls_refPicList_0_list_Din_A,
    output logic [31:0]                        hls_prediction_unit_hls_refPicList_0_list_Dout_A,
    input        [31:0]                        hls_prediction_unit_hls_refPicList_1_list_Addr_A,
    input                                      hls_prediction_unit_hls_refPicList_1_list_EN_A,
    input        [3:0]                         hls_prediction_unit_hls_refPicList_1_list_WEN_A,
    input        [31:0]                        hls_prediction_unit_hls_refPicList_1_list_Din_A,
    output logic [31:0]                        hls_prediction_unit_hls_refPicList_1_list_Dout_A,
    input        [31:0]                        hls_prediction_unit_hls_refPicList_0_ref_Addr_A,
    input                                      hls_prediction_unit_hls_refPicList_0_ref_EN_A,
    input        [3:0]                         hls_prediction_unit_hls_refPicList_0_ref_WEN_A,
    input        [31:0]                        hls_prediction_unit_hls_refPicList_0_ref_Din_A,
    output logic [31:0]                        hls_prediction_unit_hls_refPicList_0_ref_Dout_A,
    input        [31:0]                        hls_prediction_unit_hls_refPicList_1_ref_Addr_A,
    input                                      hls_prediction_unit_hls_refPicList_1_ref_EN_A,
    input        [3:0]                         hls_prediction_unit_hls_refPicList_1_ref_WEN_A,
    input        [31:0]                        hls_prediction_unit_hls_refPicList_1_ref_Din_A,
    output logic [31:0]                        hls_prediction_unit_hls_refPicList_1_ref_Dout_A,
    output logic [7:0]                         hls_prediction_unit_hls_threads_type
);

//---------------------------------------------------------------------------
//signals 
//---------------------------------------------------------------------------
localparam BANK_NUM_ALL = BANK_NUM[MEM_TYPE_SCALAR] + BANK_NUM[MEM_TYPE_ARRAY] + BANK_NUM[MEM_TYPE_CYCLIC];


//---------------------------------------------------------------------------
//signals 
//---------------------------------------------------------------------------
logic [7:0]                 ap_part_w           [HLS_NUM];
logic [7:0]                 ap_part_r           [HLS_NUM];

logic                       ap_arb_start_r      [HLS_NUM];
logic                       ap_arb_start_2r     [HLS_NUM];

logic                       ap_arb_start_running   [HLS_NUM];
logic                       ap_arb_start_running_r [HLS_NUM];

logic                       ap_arb_ret_r        [HLS_NUM];
logic                       ap_arb_ret_2r       [HLS_NUM];

logic                       ap_start_r          [HLS_NUM];
logic                       ap_ready_r          [HLS_NUM];
logic                       ap_done_r           [HLS_NUM];

logic                       ap_running          [HLS_NUM];
logic                       ap_running_r        [HLS_NUM];

logic                       ap_arb_ret_running   [HLS_NUM];
logic                       ap_arb_ret_running_r [HLS_NUM];

logic                       ap_arb_reload        [HLS_NUM];
logic                       ap_arb_reload_r      [HLS_NUM];

logic                       ap_arb_reload_running   [HLS_NUM];
logic                       ap_arb_reload_running_r [HLS_NUM];


//dual port bank in scalar range
logic                       scalar_argdone          [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM];
logic                       scalar_argdone_r        [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM];

logic         				scalar_argAckdone   	[BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM];
logic         				scalar_argAckdone_r 	[BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM];
logic                       scalar_argAckdone_all	[HLS_NUM];
logic                       scalar_argAckdone_all_r	[HLS_NUM];

logic                       scalar_argdone_all      [HLS_NUM];
logic                       scalar_argdone_all_r    [HLS_NUM];
logic                       scalar_argVld_r         [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM];
logic                       scalar_argAck_r         [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM];
logic                       scalar_argVld_all       [HLS_NUM];
logic                       scalar_argVld_all_r     [HLS_NUM];
logic                       scalar_rdat_vld_r       [BANK_NUM[MEM_TYPE_SCALAR]][DUAL_PORT][SCALAR_MAX_MUX_NUM];

//single port bank in array range
logic                       array_argdone           [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM];
logic                       array_argdone_r         [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM];
logic                       array_argVld_r          [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM];
logic [XMEM_AW-1:0]         array_adr_r             [BANK_NUM[MEM_TYPE_ARRAY]][ARRAY_MAX_MUX_NUM];

//wide port bank in cyclic range
logic                       cyclic_argdone          [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM];
logic                       cyclic_argdone_r        [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM];
logic                       cyclic_argVld_r         [BANK_NUM[MEM_TYPE_CYCLIC]][CYCLIC_MAX_MUX_NUM];

logic [8-1:0]    innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_r;
logic            innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_ap_vld_r;
logic [32-1:0]   innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_r;
logic            innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_ap_vld_r;
logic [32-1:0]   innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_r;
logic            innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_ap_vld_r;
logic [32-1:0]   innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_r;
logic            innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_ap_vld_r;
logic [8-1:0]    innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_r;
logic            innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_ap_vld_r;
logic [32-1:0]   innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_r;
logic            innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_ap_vld_r;
logic [32-1:0]   innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_r;
logic            innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_ap_vld_r;
logic [32-1:0]   hevc_find_frame_end_hls_state64_0_o_r;
logic [32-1:0]   hevc_find_frame_end_hls_state64_1_o_r;
logic            hevc_find_frame_end_hls_state64_0_o_ap_vld_r;
logic            hevc_find_frame_end_hls_state64_1_o_ap_vld_r;
logic [32-1:0]   hevc_find_frame_end_hls_frame_start_found_o_r;
logic            hevc_find_frame_end_hls_frame_start_found_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_r;
logic            intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_r;
logic            intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_r;
logic            intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_r;
logic            intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_r;
logic            intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_r;
logic            intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_r;
logic            intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_r;
logic            intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_r;
logic            intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_r;
logic            intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_r;
logic            intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_r;
logic            intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_r;
logic            intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_r;
logic            intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_r;
logic            intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_r;
logic            intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_ap_vld_r;
logic [8-1:0]    intra_prediction_unit_ex_hls_max_trafo_depth_r;
logic            intra_prediction_unit_ex_hls_max_trafo_depth_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_r;
logic            hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_r;
logic            hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_qp_y_o_r;
logic            hls_transform_unit_ex_hls_qp_y_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_log2_trafo_size_r;
logic            hls_transform_unit_ex_hls_log2_trafo_size_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_log2_trafo_size_c_o_r;
logic            hls_transform_unit_ex_hls_log2_trafo_size_c_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_scan_idx_o_r;
logic            hls_transform_unit_ex_hls_scan_idx_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_scan_idx_c_r;
logic            hls_transform_unit_ex_hls_scan_idx_c_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_cmdr_run_o_r;
logic            hls_transform_unit_ex_hls_cmdr_run_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_nPbW_r;
logic            hls_transform_unit_ex_hls_nPbW_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_nPbH_r;
logic            hls_transform_unit_ex_hls_nPbH_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_up_r;
logic            hls_transform_unit_ex_hls_cand_up_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_left_r;
logic            hls_transform_unit_ex_hls_cand_left_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_up_left_r;
logic            hls_transform_unit_ex_hls_cand_up_left_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_up_right_sap_r;
logic            hls_transform_unit_ex_hls_cand_up_right_sap_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_up_right_r;
logic            hls_transform_unit_ex_hls_cand_up_right_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_bottom_left_o_r;
logic            hls_transform_unit_ex_hls_cand_bottom_left_o_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_up_c_r;
logic            hls_transform_unit_ex_hls_cand_up_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_left_c_r;
logic            hls_transform_unit_ex_hls_cand_left_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_up_left_c_r;
logic            hls_transform_unit_ex_hls_cand_up_left_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_up_right_sap_c_r;
logic            hls_transform_unit_ex_hls_cand_up_right_sap_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_up_right_c_r;
logic            hls_transform_unit_ex_hls_cand_up_right_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_cand_bottom_left_c_o_r;
logic            hls_transform_unit_ex_hls_cand_bottom_left_c_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_r;
logic            hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_r;
logic            hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_tu_cu_qp_delta_r;
logic            hls_transform_unit_ex_hls_tu_cu_qp_delta_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_tu_cross_pf_r;
logic            hls_transform_unit_ex_hls_tu_cross_pf_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_first_qp_group_o_r;
logic            hls_transform_unit_ex_hls_first_qp_group_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_r;
logic            hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_r;
logic            hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_qp_y_o_r;
logic            hls_transform_unit_ex_hls_dup1_qp_y_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup1_log2_trafo_size_r;
logic            hls_transform_unit_ex_hls_dup1_log2_trafo_size_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_r;
logic            hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_scan_idx_o_r;
logic            hls_transform_unit_ex_hls_dup1_scan_idx_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_scan_idx_c_r;
logic            hls_transform_unit_ex_hls_dup1_scan_idx_c_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_cmdr_run_o_r;
logic            hls_transform_unit_ex_hls_dup1_cmdr_run_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup1_nPbW_r;
logic            hls_transform_unit_ex_hls_dup1_nPbW_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup1_nPbH_r;
logic            hls_transform_unit_ex_hls_dup1_nPbH_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_up_r;
logic            hls_transform_unit_ex_hls_dup1_cand_up_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_left_r;
logic            hls_transform_unit_ex_hls_dup1_cand_left_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_up_left_r;
logic            hls_transform_unit_ex_hls_dup1_cand_up_left_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_up_right_sap_r;
logic            hls_transform_unit_ex_hls_dup1_cand_up_right_sap_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_up_right_r;
logic            hls_transform_unit_ex_hls_dup1_cand_up_right_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_r;
logic            hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_up_c_r;
logic            hls_transform_unit_ex_hls_dup1_cand_up_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_left_c_r;
logic            hls_transform_unit_ex_hls_dup1_cand_left_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_up_left_c_r;
logic            hls_transform_unit_ex_hls_dup1_cand_up_left_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_r;
logic            hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_up_right_c_r;
logic            hls_transform_unit_ex_hls_dup1_cand_up_right_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_r;
logic            hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_r;
logic            hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_r;
logic            hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_r;
logic            hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_tu_cross_pf_r;
logic            hls_transform_unit_ex_hls_dup1_tu_cross_pf_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup1_first_qp_group_o_r;
logic            hls_transform_unit_ex_hls_dup1_first_qp_group_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_r;
logic            hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_r;
logic            hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_qp_y_o_r;
logic            hls_transform_unit_ex_hls_dup2_qp_y_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup2_log2_trafo_size_r;
logic            hls_transform_unit_ex_hls_dup2_log2_trafo_size_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_r;
logic            hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_scan_idx_o_r;
logic            hls_transform_unit_ex_hls_dup2_scan_idx_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_scan_idx_c_r;
logic            hls_transform_unit_ex_hls_dup2_scan_idx_c_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_cmdr_run_o_r;
logic            hls_transform_unit_ex_hls_dup2_cmdr_run_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup2_nPbW_r;
logic            hls_transform_unit_ex_hls_dup2_nPbW_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup2_nPbH_r;
logic            hls_transform_unit_ex_hls_dup2_nPbH_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_up_r;
logic            hls_transform_unit_ex_hls_dup2_cand_up_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_left_r;
logic            hls_transform_unit_ex_hls_dup2_cand_left_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_up_left_r;
logic            hls_transform_unit_ex_hls_dup2_cand_up_left_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_up_right_sap_r;
logic            hls_transform_unit_ex_hls_dup2_cand_up_right_sap_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_up_right_r;
logic            hls_transform_unit_ex_hls_dup2_cand_up_right_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_r;
logic            hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_up_c_r;
logic            hls_transform_unit_ex_hls_dup2_cand_up_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_left_c_r;
logic            hls_transform_unit_ex_hls_dup2_cand_left_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_up_left_c_r;
logic            hls_transform_unit_ex_hls_dup2_cand_up_left_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_r;
logic            hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_up_right_c_r;
logic            hls_transform_unit_ex_hls_dup2_cand_up_right_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_r;
logic            hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_r;
logic            hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_r;
logic            hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_r;
logic            hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_tu_cross_pf_r;
logic            hls_transform_unit_ex_hls_dup2_tu_cross_pf_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup2_first_qp_group_o_r;
logic            hls_transform_unit_ex_hls_dup2_first_qp_group_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_r;
logic            hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_r;
logic            hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_qp_y_o_r;
logic            hls_transform_unit_ex_hls_dup3_qp_y_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup3_log2_trafo_size_r;
logic            hls_transform_unit_ex_hls_dup3_log2_trafo_size_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_r;
logic            hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_scan_idx_o_r;
logic            hls_transform_unit_ex_hls_dup3_scan_idx_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_scan_idx_c_r;
logic            hls_transform_unit_ex_hls_dup3_scan_idx_c_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_cmdr_run_o_r;
logic            hls_transform_unit_ex_hls_dup3_cmdr_run_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup3_nPbW_r;
logic            hls_transform_unit_ex_hls_dup3_nPbW_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup3_nPbH_r;
logic            hls_transform_unit_ex_hls_dup3_nPbH_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_up_r;
logic            hls_transform_unit_ex_hls_dup3_cand_up_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_left_r;
logic            hls_transform_unit_ex_hls_dup3_cand_left_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_up_left_r;
logic            hls_transform_unit_ex_hls_dup3_cand_up_left_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_up_right_sap_r;
logic            hls_transform_unit_ex_hls_dup3_cand_up_right_sap_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_up_right_r;
logic            hls_transform_unit_ex_hls_dup3_cand_up_right_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_r;
logic            hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_up_c_r;
logic            hls_transform_unit_ex_hls_dup3_cand_up_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_left_c_r;
logic            hls_transform_unit_ex_hls_dup3_cand_left_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_up_left_c_r;
logic            hls_transform_unit_ex_hls_dup3_cand_up_left_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_r;
logic            hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_up_right_c_r;
logic            hls_transform_unit_ex_hls_dup3_cand_up_right_c_ap_vld_r;
logic [1-1:0]    hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_r;
logic            hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_r;
logic            hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_r;
logic            hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_ap_vld_r;
logic [32-1:0]   hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_r;
logic            hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_tu_cross_pf_r;
logic            hls_transform_unit_ex_hls_dup3_tu_cross_pf_ap_vld_r;
logic [8-1:0]    hls_transform_unit_ex_hls_dup3_first_qp_group_o_r;
logic            hls_transform_unit_ex_hls_dup3_first_qp_group_o_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_log2_trafo_size_r;
logic            hls_transform_tree_hls_log2_trafo_size_ap_vld_r;
logic [8-1:0]    hls_transform_tree_hls_split_transform_flag_r;
logic            hls_transform_tree_hls_split_transform_flag_ap_vld_r;
logic [8-1:0]    hls_transform_tree_hls_cbf_data_r;
logic            hls_transform_tree_hls_cbf_data_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_tu_chroma_mode_c_r;
logic            hls_transform_tree_hls_tu_chroma_mode_c_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_tu_intra_pred_mode_r;
logic            hls_transform_tree_hls_tu_intra_pred_mode_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_tu_intra_pred_mode_c_r;
logic            hls_transform_tree_hls_tu_intra_pred_mode_c_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_cbf_luma_o_r;
logic            hls_transform_tree_hls_cbf_luma_o_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup1_log2_trafo_size_r;
logic            hls_transform_tree_hls_dup1_log2_trafo_size_ap_vld_r;
logic [8-1:0]    hls_transform_tree_hls_dup1_split_transform_flag_r;
logic            hls_transform_tree_hls_dup1_split_transform_flag_ap_vld_r;
logic [8-1:0]    hls_transform_tree_hls_dup1_cbf_data_r;
logic            hls_transform_tree_hls_dup1_cbf_data_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup1_tu_chroma_mode_c_r;
logic            hls_transform_tree_hls_dup1_tu_chroma_mode_c_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup1_tu_intra_pred_mode_r;
logic            hls_transform_tree_hls_dup1_tu_intra_pred_mode_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_r;
logic            hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup1_cbf_luma_o_r;
logic            hls_transform_tree_hls_dup1_cbf_luma_o_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup2_log2_trafo_size_r;
logic            hls_transform_tree_hls_dup2_log2_trafo_size_ap_vld_r;
logic [8-1:0]    hls_transform_tree_hls_dup2_split_transform_flag_r;
logic            hls_transform_tree_hls_dup2_split_transform_flag_ap_vld_r;
logic [8-1:0]    hls_transform_tree_hls_dup2_cbf_data_r;
logic            hls_transform_tree_hls_dup2_cbf_data_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup2_tu_chroma_mode_c_r;
logic            hls_transform_tree_hls_dup2_tu_chroma_mode_c_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup2_tu_intra_pred_mode_r;
logic            hls_transform_tree_hls_dup2_tu_intra_pred_mode_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_r;
logic            hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup2_cbf_luma_o_r;
logic            hls_transform_tree_hls_dup2_cbf_luma_o_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup3_log2_trafo_size_r;
logic            hls_transform_tree_hls_dup3_log2_trafo_size_ap_vld_r;
logic [8-1:0]    hls_transform_tree_hls_dup3_split_transform_flag_r;
logic            hls_transform_tree_hls_dup3_split_transform_flag_ap_vld_r;
logic [8-1:0]    hls_transform_tree_hls_dup3_cbf_data_r;
logic            hls_transform_tree_hls_dup3_cbf_data_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup3_tu_chroma_mode_c_r;
logic            hls_transform_tree_hls_dup3_tu_chroma_mode_c_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup3_tu_intra_pred_mode_r;
logic            hls_transform_tree_hls_dup3_tu_intra_pred_mode_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_r;
logic            hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_ap_vld_r;
logic [32-1:0]   hls_transform_tree_hls_dup3_cbf_luma_o_r;
logic            hls_transform_tree_hls_dup3_cbf_luma_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_x1_o_r;
logic            hls_coding_quadtree_hls_x1_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_y1_o_r;
logic            hls_coding_quadtree_hls_y1_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_log2_cb_size_minus_one_o_r;
logic            hls_coding_quadtree_hls_log2_cb_size_minus_one_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_cb_depth_plus_one_o_r;
logic            hls_coding_quadtree_hls_cb_depth_plus_one_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_split_cu_flag_o_r;
logic            hls_coding_quadtree_hls_split_cu_flag_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_more_data_o_r;
logic            hls_coding_quadtree_hls_more_data_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_qPy_pred_r;
logic            hls_coding_quadtree_hls_qPy_pred_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_qp_block_mask_o_r;
logic            hls_coding_quadtree_hls_qp_block_mask_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_cb_size_split_o_r;
logic            hls_coding_quadtree_hls_cb_size_split_o_ap_vld_r;
logic [8-1:0]    hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_r;
logic            hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_tu_cu_qp_delta_r;
logic            hls_coding_quadtree_hls_tu_cu_qp_delta_ap_vld_r;
logic [8-1:0]    hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_r;
logic            hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_depth_r;
logic            hls_coding_quadtree_hls_depth_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_x1_o_r;
logic            hls_coding_quadtree_hls_dup1_x1_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_y1_o_r;
logic            hls_coding_quadtree_hls_dup1_y1_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_r;
logic            hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_r;
logic            hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_split_cu_flag_o_r;
logic            hls_coding_quadtree_hls_dup1_split_cu_flag_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_more_data_o_r;
logic            hls_coding_quadtree_hls_dup1_more_data_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_qPy_pred_r;
logic            hls_coding_quadtree_hls_dup1_qPy_pred_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_qp_block_mask_o_r;
logic            hls_coding_quadtree_hls_dup1_qp_block_mask_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_cb_size_split_o_r;
logic            hls_coding_quadtree_hls_dup1_cb_size_split_o_ap_vld_r;
logic [8-1:0]    hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_r;
logic            hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_r;
logic            hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_ap_vld_r;
logic [8-1:0]    hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_r;
logic            hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup1_depth_r;
logic            hls_coding_quadtree_hls_dup1_depth_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_x1_o_r;
logic            hls_coding_quadtree_hls_dup2_x1_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_y1_o_r;
logic            hls_coding_quadtree_hls_dup2_y1_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_r;
logic            hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_r;
logic            hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_split_cu_flag_o_r;
logic            hls_coding_quadtree_hls_dup2_split_cu_flag_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_more_data_o_r;
logic            hls_coding_quadtree_hls_dup2_more_data_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_qPy_pred_r;
logic            hls_coding_quadtree_hls_dup2_qPy_pred_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_qp_block_mask_o_r;
logic            hls_coding_quadtree_hls_dup2_qp_block_mask_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_cb_size_split_o_r;
logic            hls_coding_quadtree_hls_dup2_cb_size_split_o_ap_vld_r;
logic [8-1:0]    hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_r;
logic            hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_r;
logic            hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_ap_vld_r;
logic [8-1:0]    hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_r;
logic            hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup2_depth_r;
logic            hls_coding_quadtree_hls_dup2_depth_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_x1_o_r;
logic            hls_coding_quadtree_hls_dup3_x1_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_y1_o_r;
logic            hls_coding_quadtree_hls_dup3_y1_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_r;
logic            hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_r;
logic            hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_split_cu_flag_o_r;
logic            hls_coding_quadtree_hls_dup3_split_cu_flag_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_more_data_o_r;
logic            hls_coding_quadtree_hls_dup3_more_data_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_qPy_pred_r;
logic            hls_coding_quadtree_hls_dup3_qPy_pred_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_qp_block_mask_o_r;
logic            hls_coding_quadtree_hls_dup3_qp_block_mask_o_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_cb_size_split_o_r;
logic            hls_coding_quadtree_hls_dup3_cb_size_split_o_ap_vld_r;
logic [8-1:0]    hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_r;
logic            hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_r;
logic            hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_ap_vld_r;
logic [8-1:0]    hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_r;
logic            hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_ap_vld_r;
logic [32-1:0]   hls_coding_quadtree_hls_dup3_depth_r;
logic            hls_coding_quadtree_hls_dup3_depth_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_cu_transquant_bypass_flag_o_r;
logic            hls_coding_unit_hls_cu_transquant_bypass_flag_o_ap_vld_r;
logic [1-1:0]    hls_coding_unit_hls_pcm_flag_o_r;
logic            hls_coding_unit_hls_pcm_flag_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_pred_mode_o_r;
logic            hls_coding_unit_hls_pred_mode_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_part_mode_o_r;
logic            hls_coding_unit_hls_part_mode_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_max_trafo_depth_r;
logic            hls_coding_unit_hls_max_trafo_depth_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_cb_size_o_r;
logic            hls_coding_unit_hls_cb_size_o_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_idx_o_r;
logic            hls_coding_unit_hls_idx_o_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_xm_xBase_r;
logic            hls_coding_unit_hls_xm_xBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_xm_yBase_r;
logic            hls_coding_unit_hls_xm_yBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_xm_cb_xBase_r;
logic            hls_coding_unit_hls_xm_cb_xBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_xm_cb_yBase_r;
logic            hls_coding_unit_hls_xm_cb_yBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_xm_log2_cb_size_r;
logic            hls_coding_unit_hls_xm_log2_cb_size_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_length_r_r;
logic            hls_coding_unit_hls_length_r_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_xm_x_r;
logic            hls_coding_unit_hls_xm_x_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_xm_y_r;
logic            hls_coding_unit_hls_xm_y_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_pu_intra_pred_mode_0_r;
logic            hls_coding_unit_hls_pu_intra_pred_mode_0_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_pu_intra_pred_mode_1_r;
logic            hls_coding_unit_hls_pu_intra_pred_mode_1_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_pu_intra_pred_mode_2_r;
logic            hls_coding_unit_hls_pu_intra_pred_mode_2_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_pu_intra_pred_mode_3_r;
logic            hls_coding_unit_hls_pu_intra_pred_mode_3_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_qPy_pred_r;
logic            hls_coding_unit_hls_qPy_pred_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_skip_flag_start_r;
logic            hls_coding_unit_hls_skip_flag_start_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_intra_split_flag_r;
logic            hls_coding_unit_hls_intra_split_flag_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_r;
logic            hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_ap_vld_r;
logic [1-1:0]    hls_coding_unit_hls_dup1_pcm_flag_o_r;
logic            hls_coding_unit_hls_dup1_pcm_flag_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_pred_mode_o_r;
logic            hls_coding_unit_hls_dup1_pred_mode_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_part_mode_o_r;
logic            hls_coding_unit_hls_dup1_part_mode_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_max_trafo_depth_r;
logic            hls_coding_unit_hls_dup1_max_trafo_depth_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_cb_size_o_r;
logic            hls_coding_unit_hls_dup1_cb_size_o_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_idx_o_r;
logic            hls_coding_unit_hls_dup1_idx_o_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_xm_xBase_r;
logic            hls_coding_unit_hls_dup1_xm_xBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_xm_yBase_r;
logic            hls_coding_unit_hls_dup1_xm_yBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_xm_cb_xBase_r;
logic            hls_coding_unit_hls_dup1_xm_cb_xBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_xm_cb_yBase_r;
logic            hls_coding_unit_hls_dup1_xm_cb_yBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_xm_log2_cb_size_r;
logic            hls_coding_unit_hls_dup1_xm_log2_cb_size_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_length_r_r;
logic            hls_coding_unit_hls_dup1_length_r_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_xm_x_r;
logic            hls_coding_unit_hls_dup1_xm_x_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_xm_y_r;
logic            hls_coding_unit_hls_dup1_xm_y_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_r;
logic            hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_r;
logic            hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_r;
logic            hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_r;
logic            hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_qPy_pred_r;
logic            hls_coding_unit_hls_dup1_qPy_pred_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup1_skip_flag_start_r;
logic            hls_coding_unit_hls_dup1_skip_flag_start_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup1_intra_split_flag_r;
logic            hls_coding_unit_hls_dup1_intra_split_flag_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_r;
logic            hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_ap_vld_r;
logic [1-1:0]    hls_coding_unit_hls_dup2_pcm_flag_o_r;
logic            hls_coding_unit_hls_dup2_pcm_flag_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_pred_mode_o_r;
logic            hls_coding_unit_hls_dup2_pred_mode_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_part_mode_o_r;
logic            hls_coding_unit_hls_dup2_part_mode_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_max_trafo_depth_r;
logic            hls_coding_unit_hls_dup2_max_trafo_depth_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_cb_size_o_r;
logic            hls_coding_unit_hls_dup2_cb_size_o_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_idx_o_r;
logic            hls_coding_unit_hls_dup2_idx_o_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_xm_xBase_r;
logic            hls_coding_unit_hls_dup2_xm_xBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_xm_yBase_r;
logic            hls_coding_unit_hls_dup2_xm_yBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_xm_cb_xBase_r;
logic            hls_coding_unit_hls_dup2_xm_cb_xBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_xm_cb_yBase_r;
logic            hls_coding_unit_hls_dup2_xm_cb_yBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_xm_log2_cb_size_r;
logic            hls_coding_unit_hls_dup2_xm_log2_cb_size_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_length_r_r;
logic            hls_coding_unit_hls_dup2_length_r_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_xm_x_r;
logic            hls_coding_unit_hls_dup2_xm_x_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_xm_y_r;
logic            hls_coding_unit_hls_dup2_xm_y_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_r;
logic            hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_r;
logic            hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_r;
logic            hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_r;
logic            hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_qPy_pred_r;
logic            hls_coding_unit_hls_dup2_qPy_pred_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup2_skip_flag_start_r;
logic            hls_coding_unit_hls_dup2_skip_flag_start_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup2_intra_split_flag_r;
logic            hls_coding_unit_hls_dup2_intra_split_flag_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_r;
logic            hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_ap_vld_r;
logic [1-1:0]    hls_coding_unit_hls_dup3_pcm_flag_o_r;
logic            hls_coding_unit_hls_dup3_pcm_flag_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_pred_mode_o_r;
logic            hls_coding_unit_hls_dup3_pred_mode_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_part_mode_o_r;
logic            hls_coding_unit_hls_dup3_part_mode_o_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_max_trafo_depth_r;
logic            hls_coding_unit_hls_dup3_max_trafo_depth_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_cb_size_o_r;
logic            hls_coding_unit_hls_dup3_cb_size_o_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_idx_o_r;
logic            hls_coding_unit_hls_dup3_idx_o_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_xm_xBase_r;
logic            hls_coding_unit_hls_dup3_xm_xBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_xm_yBase_r;
logic            hls_coding_unit_hls_dup3_xm_yBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_xm_cb_xBase_r;
logic            hls_coding_unit_hls_dup3_xm_cb_xBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_xm_cb_yBase_r;
logic            hls_coding_unit_hls_dup3_xm_cb_yBase_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_xm_log2_cb_size_r;
logic            hls_coding_unit_hls_dup3_xm_log2_cb_size_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_length_r_r;
logic            hls_coding_unit_hls_dup3_length_r_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_xm_x_r;
logic            hls_coding_unit_hls_dup3_xm_x_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_xm_y_r;
logic            hls_coding_unit_hls_dup3_xm_y_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_r;
logic            hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_r;
logic            hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_r;
logic            hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_r;
logic            hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_qPy_pred_r;
logic            hls_coding_unit_hls_dup3_qPy_pred_ap_vld_r;
logic [32-1:0]   hls_coding_unit_hls_dup3_skip_flag_start_r;
logic            hls_coding_unit_hls_dup3_skip_flag_start_ap_vld_r;
logic [8-1:0]    hls_coding_unit_hls_dup3_intra_split_flag_r;
logic            hls_coding_unit_hls_dup3_intra_split_flag_ap_vld_r;
logic [8-1:0]    copy_top_left_pixel_hls_cmdr_run_o_r;
logic            copy_top_left_pixel_hls_cmdr_run_o_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_0_r;
logic            genPredCol_hls_predColBuf_0_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_1_r;
logic            genPredCol_hls_predColBuf_1_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_2_r;
logic            genPredCol_hls_predColBuf_2_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_3_r;
logic            genPredCol_hls_predColBuf_3_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_4_r;
logic            genPredCol_hls_predColBuf_4_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_5_r;
logic            genPredCol_hls_predColBuf_5_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_6_r;
logic            genPredCol_hls_predColBuf_6_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_7_r;
logic            genPredCol_hls_predColBuf_7_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_8_r;
logic            genPredCol_hls_predColBuf_8_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_9_r;
logic            genPredCol_hls_predColBuf_9_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_10_r;
logic            genPredCol_hls_predColBuf_10_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_11_r;
logic            genPredCol_hls_predColBuf_11_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_12_r;
logic            genPredCol_hls_predColBuf_12_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_13_r;
logic            genPredCol_hls_predColBuf_13_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_14_r;
logic            genPredCol_hls_predColBuf_14_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_15_r;
logic            genPredCol_hls_predColBuf_15_ap_vld_r;
logic [32-1:0]   genPredCol_hls_predColBuf_16_o_r;
logic            genPredCol_hls_predColBuf_16_o_ap_vld_r;
logic [32-1:0]   ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_r;
logic            ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_ap_vld_r;
logic [8-1:0]    ff_hevc_set_qPy_hls_qp_y_r;
logic            ff_hevc_set_qPy_hls_qp_y_ap_vld_r;
logic [8-1:0]    ff_hevc_set_qPy_hls_first_qp_group_o_r;
logic            ff_hevc_set_qPy_hls_first_qp_group_o_ap_vld_r;
logic [8-1:0]    hls_decode_neighbour_hls_first_qp_group_r;
logic            hls_decode_neighbour_hls_first_qp_group_ap_vld_r;
logic [16-1:0]   hls_decode_neighbour_hls_end_of_tiles_x_r;
logic            hls_decode_neighbour_hls_end_of_tiles_x_ap_vld_r;
logic [16-1:0]   hls_decode_neighbour_hls_end_of_tiles_y_r;
logic            hls_decode_neighbour_hls_end_of_tiles_y_ap_vld_r;
logic [8-1:0]    hls_decode_neighbour_hls_slice_or_tiles_left_boundary_r;
logic            hls_decode_neighbour_hls_slice_or_tiles_left_boundary_ap_vld_r;
logic [8-1:0]    hls_decode_neighbour_hls_slice_or_tiles_up_boundary_r;
logic            hls_decode_neighbour_hls_slice_or_tiles_up_boundary_ap_vld_r;
logic [1-1:0]    hls_decode_neighbour_hls_ctb_left_flag_r;
logic            hls_decode_neighbour_hls_ctb_left_flag_ap_vld_r;
logic [1-1:0]    hls_decode_neighbour_hls_ctb_up_flag_r;
logic            hls_decode_neighbour_hls_ctb_up_flag_ap_vld_r;
logic [1-1:0]    hls_decode_neighbour_hls_ctb_up_right_flag_r;
logic            hls_decode_neighbour_hls_ctb_up_right_flag_ap_vld_r;
logic [1-1:0]    hls_decode_neighbour_hls_ctb_up_left_flag_r;
logic            hls_decode_neighbour_hls_ctb_up_left_flag_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_0_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_0_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_1_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_1_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_2_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_2_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_3_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_3_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_4_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_4_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_5_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_5_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_6_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_6_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_7_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_7_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_8_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_8_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_9_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_9_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_10_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_10_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_11_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_11_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_12_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_12_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_13_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_13_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_14_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_14_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_15_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_15_o_ap_vld_r;
logic [32-1:0]   set_tab_mvf_pred_flag_hls_predColBuf_16_o_r;
logic            set_tab_mvf_pred_flag_hls_predColBuf_16_o_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_hls_numIntraNeighbor_r;
logic            init_intra_neighbors_hls_numIntraNeighbor_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_hls_totalUnits_r;
logic            init_intra_neighbors_hls_totalUnits_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_hls_aboveUnits_r;
logic            init_intra_neighbors_hls_aboveUnits_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_hls_leftUnits_r;
logic            init_intra_neighbors_hls_leftUnits_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_hls_unitWidth_r;
logic            init_intra_neighbors_hls_unitWidth_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_hls_unitHeight_r;
logic            init_intra_neighbors_hls_unitHeight_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_hls_log2TrSize_r;
logic            init_intra_neighbors_hls_log2TrSize_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_hls_bNeighborFlags_0_o_r;
logic [32-1:0]   init_intra_neighbors_hls_bNeighborFlags_1_o_r;
logic            init_intra_neighbors_hls_bNeighborFlags_2_o_r;
logic            init_intra_neighbors_hls_bNeighborFlags_0_o_ap_vld_r;
logic            init_intra_neighbors_hls_bNeighborFlags_1_o_ap_vld_r;
logic            init_intra_neighbors_hls_bNeighborFlags_2_o_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_numIntraNeighbor_c_r;
logic            init_intra_neighbors_chroma_hls_numIntraNeighbor_c_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_totalUnits_c_r;
logic            init_intra_neighbors_chroma_hls_totalUnits_c_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_aboveUnits_c_r;
logic            init_intra_neighbors_chroma_hls_aboveUnits_c_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_leftUnits_c_r;
logic            init_intra_neighbors_chroma_hls_leftUnits_c_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_unitWidth_c_r;
logic            init_intra_neighbors_chroma_hls_unitWidth_c_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_unitHeight_c_r;
logic            init_intra_neighbors_chroma_hls_unitHeight_c_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_log2TrSize_c_r;
logic            init_intra_neighbors_chroma_hls_log2TrSize_c_ap_vld_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_r;
logic [32-1:0]   init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_r;
logic            init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_r;
logic            init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_ap_vld_r;
logic            init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_ap_vld_r;
logic            init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_ap_vld_r;
logic [1-1:0]    ff_hevc_set_neighbour_available_hls_cand_up_r;
logic            ff_hevc_set_neighbour_available_hls_cand_up_ap_vld_r;
logic [1-1:0]    ff_hevc_set_neighbour_available_hls_cand_left_r;
logic            ff_hevc_set_neighbour_available_hls_cand_left_ap_vld_r;
logic [1-1:0]    ff_hevc_set_neighbour_available_hls_cand_up_left_r;
logic            ff_hevc_set_neighbour_available_hls_cand_up_left_ap_vld_r;
logic [1-1:0]    ff_hevc_set_neighbour_available_hls_cand_up_right_sap_r;
logic            ff_hevc_set_neighbour_available_hls_cand_up_right_sap_ap_vld_r;
logic [1-1:0]    ff_hevc_set_neighbour_available_hls_cand_up_right_r;
logic            ff_hevc_set_neighbour_available_hls_cand_up_right_ap_vld_r;
logic [1-1:0]    ff_hevc_set_neighbour_available_hls_cand_bottom_left_r;
logic            ff_hevc_set_neighbour_available_hls_cand_bottom_left_ap_vld_r;
logic [32-1:0]   ff_hevc_set_neighbour_available_hls_nPbW_r;
logic            ff_hevc_set_neighbour_available_hls_nPbW_ap_vld_r;
logic [32-1:0]   ff_hevc_set_neighbour_available_hls_nPbH_r;
logic            ff_hevc_set_neighbour_available_hls_nPbH_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_0_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_0_o_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_1_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_1_o_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_2_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_2_o_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_3_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_3_o_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_4_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_4_o_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_5_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_5_o_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_6_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_6_o_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_7_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_7_o_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_8_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_8_o_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_9_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_9_o_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_10_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_10_o_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_11_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_11_o_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_12_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_12_o_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_13_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_13_o_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_14_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_14_o_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_15_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_15_o_ap_vld_r;
logic [32-1:0]   intra_prediction_unit_default_value_hls_predColBuf_16_o_r;
logic            intra_prediction_unit_default_value_hls_predColBuf_16_o_ap_vld_r;
logic [8-1:0]    luma_mc_uni_libx265_hls_dst_depth_r;
logic            luma_mc_uni_libx265_hls_dst_depth_ap_vld_r;
logic [32-1:0]   chroma_mc_uni_libx265_hls_xm_buf_linesize_r;
logic            chroma_mc_uni_libx265_hls_xm_buf_linesize_ap_vld_r;
logic [8-1:0]    chroma_mc_uni_libx265_hls_dst_depth_r;
logic            chroma_mc_uni_libx265_hls_dst_depth_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_abs_0_0_o_r;
logic            sao_param_hls_curr_sao_offset_abs_0_0_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_abs_0_1_o_r;
logic            sao_param_hls_curr_sao_offset_abs_0_1_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_abs_0_2_o_r;
logic            sao_param_hls_curr_sao_offset_abs_0_2_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_abs_0_3_o_r;
logic            sao_param_hls_curr_sao_offset_abs_0_3_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_abs_1_0_o_r;
logic            sao_param_hls_curr_sao_offset_abs_1_0_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_abs_1_1_o_r;
logic            sao_param_hls_curr_sao_offset_abs_1_1_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_abs_1_2_o_r;
logic            sao_param_hls_curr_sao_offset_abs_1_2_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_abs_1_3_o_r;
logic            sao_param_hls_curr_sao_offset_abs_1_3_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_abs_2_0_o_r;
logic            sao_param_hls_curr_sao_offset_abs_2_0_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_abs_2_1_o_r;
logic            sao_param_hls_curr_sao_offset_abs_2_1_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_abs_2_2_o_r;
logic            sao_param_hls_curr_sao_offset_abs_2_2_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_abs_2_3_o_r;
logic            sao_param_hls_curr_sao_offset_abs_2_3_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_sign_0_0_o_r;
logic            sao_param_hls_curr_sao_offset_sign_0_0_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_sign_0_1_o_r;
logic            sao_param_hls_curr_sao_offset_sign_0_1_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_sign_0_2_o_r;
logic            sao_param_hls_curr_sao_offset_sign_0_2_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_sign_0_3_o_r;
logic            sao_param_hls_curr_sao_offset_sign_0_3_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_sign_1_0_o_r;
logic            sao_param_hls_curr_sao_offset_sign_1_0_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_sign_1_1_o_r;
logic            sao_param_hls_curr_sao_offset_sign_1_1_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_sign_1_2_o_r;
logic            sao_param_hls_curr_sao_offset_sign_1_2_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_sign_1_3_o_r;
logic            sao_param_hls_curr_sao_offset_sign_1_3_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_sign_2_0_o_r;
logic            sao_param_hls_curr_sao_offset_sign_2_0_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_sign_2_1_o_r;
logic            sao_param_hls_curr_sao_offset_sign_2_1_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_sign_2_2_o_r;
logic            sao_param_hls_curr_sao_offset_sign_2_2_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_offset_sign_2_3_o_r;
logic            sao_param_hls_curr_sao_offset_sign_2_3_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_band_position_0_r;
logic            sao_param_hls_curr_sao_band_position_0_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_band_position_1_r;
logic            sao_param_hls_curr_sao_band_position_1_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_band_position_2_r;
logic            sao_param_hls_curr_sao_band_position_2_ap_vld_r;
logic [16-1:0]   sao_param_hls_curr_sao_offset_val_0_0_r;
logic            sao_param_hls_curr_sao_offset_val_0_0_ap_vld_r;
logic [16-1:0]   sao_param_hls_curr_sao_offset_val_0_1_o_r;
logic            sao_param_hls_curr_sao_offset_val_0_1_o_ap_vld_r;
logic [16-1:0]   sao_param_hls_curr_sao_offset_val_0_2_o_r;
logic            sao_param_hls_curr_sao_offset_val_0_2_o_ap_vld_r;
logic [16-1:0]   sao_param_hls_curr_sao_offset_val_0_3_o_r;
logic            sao_param_hls_curr_sao_offset_val_0_3_o_ap_vld_r;
logic [16-1:0]   sao_param_hls_curr_sao_offset_val_0_4_o_r;
logic            sao_param_hls_curr_sao_offset_val_0_4_o_ap_vld_r;
logic [16-1:0]   sao_param_hls_curr_sao_offset_val_1_0_r;
logic            sao_param_hls_curr_sao_offset_val_1_0_ap_vld_r;
logic [16-1:0]   sao_param_hls_curr_sao_offset_val_1_1_o_r;
logic            sao_param_hls_curr_sao_offset_val_1_1_o_ap_vld_r;
logic [16-1:0]   sao_param_hls_curr_sao_offset_val_1_2_o_r;
logic            sao_param_hls_curr_sao_offset_val_1_2_o_ap_vld_r;
logic [16-1:0]   sao_param_hls_curr_sao_offset_val_1_3_o_r;
logic            sao_param_hls_curr_sao_offset_val_1_3_o_ap_vld_r;
logic [16-1:0]   sao_param_hls_curr_sao_offset_val_1_4_o_r;
logic            sao_param_hls_curr_sao_offset_val_1_4_o_ap_vld_r;
logic [16-1:0]   sao_param_hls_curr_sao_offset_val_2_0_r;
logic            sao_param_hls_curr_sao_offset_val_2_0_ap_vld_r;
logic [16-1:0]   sao_param_hls_curr_sao_offset_val_2_1_o_r;
logic            sao_param_hls_curr_sao_offset_val_2_1_o_ap_vld_r;
logic [16-1:0]   sao_param_hls_curr_sao_offset_val_2_2_o_r;
logic            sao_param_hls_curr_sao_offset_val_2_2_o_ap_vld_r;
logic [16-1:0]   sao_param_hls_curr_sao_offset_val_2_3_o_r;
logic            sao_param_hls_curr_sao_offset_val_2_3_o_ap_vld_r;
logic [16-1:0]   sao_param_hls_curr_sao_offset_val_2_4_o_r;
logic            sao_param_hls_curr_sao_offset_val_2_4_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_eo_class_0_r;
logic            sao_param_hls_curr_sao_eo_class_0_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_eo_class_1_o_r;
logic            sao_param_hls_curr_sao_eo_class_1_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_eo_class_2_r;
logic            sao_param_hls_curr_sao_eo_class_2_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_type_idx_0_o_r;
logic            sao_param_hls_curr_sao_type_idx_0_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_type_idx_1_o_r;
logic            sao_param_hls_curr_sao_type_idx_1_o_ap_vld_r;
logic [8-1:0]    sao_param_hls_curr_sao_type_idx_2_o_r;
logic            sao_param_hls_curr_sao_type_idx_2_o_ap_vld_r;
logic [32-1:0]   sao_param_hls_curr_sao_sao_merge_left_flag_r;
logic            sao_param_hls_curr_sao_sao_merge_left_flag_ap_vld_r;
logic [32-1:0]   sao_param_hls_curr_sao_sao_merge_up_flag_r;
logic            sao_param_hls_curr_sao_sao_merge_up_flag_ap_vld_r;
logic [16-1:0]   mv_mp_mode_mx_hls_mxx_x_r;
logic            mv_mp_mode_mx_hls_mxx_x_ap_vld_r;
logic [16-1:0]   mv_mp_mode_mx_hls_mxx_y_r;
logic            mv_mp_mode_mx_hls_mxx_y_ap_vld_r;
logic [16-1:0]   mv_mp_mode_mx_lt_hls_mxx_x_r;
logic            mv_mp_mode_mx_lt_hls_mxx_x_ap_vld_r;
logic [16-1:0]   mv_mp_mode_mx_lt_hls_mxx_y_r;
logic            mv_mp_mode_mx_lt_hls_mxx_y_ap_vld_r;
logic [16-1:0]   temporal_luma_motion_vector_hls_mvLXCol_x_r;
logic            temporal_luma_motion_vector_hls_mvLXCol_x_ap_vld_r;
logic [16-1:0]   temporal_luma_motion_vector_hls_mvLXCol_y_r;
logic            temporal_luma_motion_vector_hls_mvLXCol_y_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_0_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_0_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_1_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_1_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_2_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_2_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_3_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_3_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_4_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_4_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_0_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_0_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_1_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_1_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_2_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_2_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_3_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_3_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_4_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_4_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_0_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_0_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_1_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_1_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_2_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_2_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_3_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_3_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_4_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_4_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_0_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_0_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_1_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_1_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_2_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_2_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_3_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_3_ap_vld_r;
logic [16-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_4_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_4_ap_vld_r;
logic [32-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_poc0_0_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_poc0_0_ap_vld_r;
logic [32-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_poc0_1_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_poc0_1_ap_vld_r;
logic [32-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_poc0_2_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_poc0_2_ap_vld_r;
logic [32-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_poc0_3_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_poc0_3_ap_vld_r;
logic [32-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_poc0_4_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_poc0_4_ap_vld_r;
logic [32-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_poc1_0_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_poc1_0_ap_vld_r;
logic [32-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_poc1_1_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_poc1_1_ap_vld_r;
logic [32-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_poc1_2_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_poc1_2_ap_vld_r;
logic [32-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_poc1_3_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_poc1_3_ap_vld_r;
logic [32-1:0]   append_zero_motion_vector_candidates_hls_mergecand_list_poc1_4_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_poc1_4_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_0_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_0_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_1_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_1_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_2_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_2_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_3_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_3_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_4_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_4_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_0_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_0_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_1_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_1_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_2_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_2_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_3_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_3_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_4_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_4_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_0_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_0_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_1_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_1_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_2_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_2_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_3_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_3_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_4_r;
logic            append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_4_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_o_r;
logic            append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_o_ap_vld_r;
logic [8-1:0]    append_zero_motion_vector_candidates_hls_zero_idx_o_r;
logic            append_zero_motion_vector_candidates_hls_zero_idx_o_ap_vld_r;
logic [8-1:0]    merge_mode_exit_hls_current_mv_pred_flag_r;
logic            merge_mode_exit_hls_current_mv_pred_flag_ap_vld_r;
logic [16-1:0]   merge_mode_exit_hls_current_mv_mv_0_x_r;
logic            merge_mode_exit_hls_current_mv_mv_0_x_ap_vld_r;
logic [16-1:0]   merge_mode_exit_hls_current_mv_mv_0_y_r;
logic            merge_mode_exit_hls_current_mv_mv_0_y_ap_vld_r;
logic [16-1:0]   merge_mode_exit_hls_current_mv_mv_1_x_r;
logic            merge_mode_exit_hls_current_mv_mv_1_x_ap_vld_r;
logic [16-1:0]   merge_mode_exit_hls_current_mv_mv_1_y_r;
logic            merge_mode_exit_hls_current_mv_mv_1_y_ap_vld_r;
logic [32-1:0]   merge_mode_exit_hls_current_mv_poc_0_r;
logic            merge_mode_exit_hls_current_mv_poc_0_ap_vld_r;
logic [32-1:0]   merge_mode_exit_hls_current_mv_poc_1_r;
logic            merge_mode_exit_hls_current_mv_poc_1_ap_vld_r;
logic [8-1:0]    merge_mode_exit_hls_current_mv_ref_idx_0_r;
logic            merge_mode_exit_hls_current_mv_ref_idx_0_ap_vld_r;
logic [8-1:0]    merge_mode_exit_hls_current_mv_ref_idx_1_r;
logic            merge_mode_exit_hls_current_mv_ref_idx_1_ap_vld_r;
logic [8-1:0]    merge_mode_exit_hls_mergecand_list_pred_flag_0_o_r;
logic            merge_mode_exit_hls_mergecand_list_pred_flag_0_o_ap_vld_r;
logic [8-1:0]    merge_mode_exit_hls_mergecand_list_pred_flag_1_o_r;
logic            merge_mode_exit_hls_mergecand_list_pred_flag_1_o_ap_vld_r;
logic [8-1:0]    merge_mode_exit_hls_mergecand_list_pred_flag_2_o_r;
logic            merge_mode_exit_hls_mergecand_list_pred_flag_2_o_ap_vld_r;
logic [8-1:0]    merge_mode_exit_hls_mergecand_list_pred_flag_3_o_r;
logic            merge_mode_exit_hls_mergecand_list_pred_flag_3_o_ap_vld_r;
logic [8-1:0]    merge_mode_exit_hls_mergecand_list_pred_flag_4_o_r;
logic            merge_mode_exit_hls_mergecand_list_pred_flag_4_o_ap_vld_r;
logic [8-1:0]    set_to_mergecand_list_hls_mergecand_list_pred_flag_0_r;
logic            set_to_mergecand_list_hls_mergecand_list_pred_flag_0_ap_vld_r;
logic [8-1:0]    set_to_mergecand_list_hls_mergecand_list_pred_flag_1_r;
logic            set_to_mergecand_list_hls_mergecand_list_pred_flag_1_ap_vld_r;
logic [8-1:0]    set_to_mergecand_list_hls_mergecand_list_pred_flag_2_r;
logic            set_to_mergecand_list_hls_mergecand_list_pred_flag_2_ap_vld_r;
logic [8-1:0]    set_to_mergecand_list_hls_mergecand_list_pred_flag_3_r;
logic            set_to_mergecand_list_hls_mergecand_list_pred_flag_3_ap_vld_r;
logic [8-1:0]    set_to_mergecand_list_hls_mergecand_list_pred_flag_4_r;
logic            set_to_mergecand_list_hls_mergecand_list_pred_flag_4_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv0_x_0_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv0_x_0_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv0_x_1_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv0_x_1_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv0_x_2_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv0_x_2_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv0_x_3_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv0_x_3_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv0_x_4_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv0_x_4_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv0_y_0_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv0_y_0_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv0_y_1_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv0_y_1_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv0_y_2_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv0_y_2_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv0_y_3_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv0_y_3_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv0_y_4_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv0_y_4_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv1_x_0_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv1_x_0_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv1_x_1_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv1_x_1_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv1_x_2_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv1_x_2_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv1_x_3_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv1_x_3_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv1_x_4_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv1_x_4_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv1_y_0_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv1_y_0_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv1_y_1_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv1_y_1_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv1_y_2_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv1_y_2_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv1_y_3_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv1_y_3_ap_vld_r;
logic [16-1:0]   set_to_mergecand_list_hls_mergecand_list_mv1_y_4_r;
logic            set_to_mergecand_list_hls_mergecand_list_mv1_y_4_ap_vld_r;
logic [32-1:0]   set_to_mergecand_list_hls_mergecand_list_poc0_0_r;
logic            set_to_mergecand_list_hls_mergecand_list_poc0_0_ap_vld_r;
logic [32-1:0]   set_to_mergecand_list_hls_mergecand_list_poc0_1_r;
logic            set_to_mergecand_list_hls_mergecand_list_poc0_1_ap_vld_r;
logic [32-1:0]   set_to_mergecand_list_hls_mergecand_list_poc0_2_r;
logic            set_to_mergecand_list_hls_mergecand_list_poc0_2_ap_vld_r;
logic [32-1:0]   set_to_mergecand_list_hls_mergecand_list_poc0_3_r;
logic            set_to_mergecand_list_hls_mergecand_list_poc0_3_ap_vld_r;
logic [32-1:0]   set_to_mergecand_list_hls_mergecand_list_poc0_4_r;
logic            set_to_mergecand_list_hls_mergecand_list_poc0_4_ap_vld_r;
logic [32-1:0]   set_to_mergecand_list_hls_mergecand_list_poc1_0_r;
logic            set_to_mergecand_list_hls_mergecand_list_poc1_0_ap_vld_r;
logic [32-1:0]   set_to_mergecand_list_hls_mergecand_list_poc1_1_r;
logic            set_to_mergecand_list_hls_mergecand_list_poc1_1_ap_vld_r;
logic [32-1:0]   set_to_mergecand_list_hls_mergecand_list_poc1_2_r;
logic            set_to_mergecand_list_hls_mergecand_list_poc1_2_ap_vld_r;
logic [32-1:0]   set_to_mergecand_list_hls_mergecand_list_poc1_3_r;
logic            set_to_mergecand_list_hls_mergecand_list_poc1_3_ap_vld_r;
logic [32-1:0]   set_to_mergecand_list_hls_mergecand_list_poc1_4_r;
logic            set_to_mergecand_list_hls_mergecand_list_poc1_4_ap_vld_r;
logic [8-1:0]    set_to_mergecand_list_hls_mergecand_list_ref_idx0_0_r;
logic            set_to_mergecand_list_hls_mergecand_list_ref_idx0_0_ap_vld_r;
logic [8-1:0]    set_to_mergecand_list_hls_mergecand_list_ref_idx0_1_r;
logic            set_to_mergecand_list_hls_mergecand_list_ref_idx0_1_ap_vld_r;
logic [8-1:0]    set_to_mergecand_list_hls_mergecand_list_ref_idx0_2_r;
logic            set_to_mergecand_list_hls_mergecand_list_ref_idx0_2_ap_vld_r;
logic [8-1:0]    set_to_mergecand_list_hls_mergecand_list_ref_idx0_3_r;
logic            set_to_mergecand_list_hls_mergecand_list_ref_idx0_3_ap_vld_r;
logic [8-1:0]    set_to_mergecand_list_hls_mergecand_list_ref_idx0_4_r;
logic            set_to_mergecand_list_hls_mergecand_list_ref_idx0_4_ap_vld_r;
logic [8-1:0]    set_to_mergecand_list_hls_mergecand_list_ref_idx1_0_r;
logic            set_to_mergecand_list_hls_mergecand_list_ref_idx1_0_ap_vld_r;
logic [8-1:0]    set_to_mergecand_list_hls_mergecand_list_ref_idx1_1_r;
logic            set_to_mergecand_list_hls_mergecand_list_ref_idx1_1_ap_vld_r;
logic [8-1:0]    set_to_mergecand_list_hls_mergecand_list_ref_idx1_2_r;
logic            set_to_mergecand_list_hls_mergecand_list_ref_idx1_2_ap_vld_r;
logic [8-1:0]    set_to_mergecand_list_hls_mergecand_list_ref_idx1_3_r;
logic            set_to_mergecand_list_hls_mergecand_list_ref_idx1_3_ap_vld_r;
logic [8-1:0]    set_to_mergecand_list_hls_mergecand_list_ref_idx1_4_r;
logic            set_to_mergecand_list_hls_mergecand_list_ref_idx1_4_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_o_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_o_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_o_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_o_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_4_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_4_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_o_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_o_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_o_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_o_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_4_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_4_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_o_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_o_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_o_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_o_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_4_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_4_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_o_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_o_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_o_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_o_ap_vld_r;
logic [16-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_4_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_4_ap_vld_r;
logic [32-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_o_ap_vld_r;
logic [32-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_o_ap_vld_r;
logic [32-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_o_ap_vld_r;
logic [32-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_o_ap_vld_r;
logic [32-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_4_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_4_ap_vld_r;
logic [32-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_o_ap_vld_r;
logic [32-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_o_ap_vld_r;
logic [32-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_o_ap_vld_r;
logic [32-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_o_ap_vld_r;
logic [32-1:0]   combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_4_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_4_ap_vld_r;
logic [8-1:0]    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_o_ap_vld_r;
logic [8-1:0]    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_o_ap_vld_r;
logic [8-1:0]    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_o_ap_vld_r;
logic [8-1:0]    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_o_ap_vld_r;
logic [8-1:0]    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_4_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_4_ap_vld_r;
logic [8-1:0]    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_o_ap_vld_r;
logic [8-1:0]    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_o_ap_vld_r;
logic [8-1:0]    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_o_ap_vld_r;
logic [8-1:0]    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_o_ap_vld_r;
logic [8-1:0]    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_4_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_4_ap_vld_r;
logic [8-1:0]    combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_o_ap_vld_r;
logic [8-1:0]    combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_o_ap_vld_r;
logic [8-1:0]    combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_o_ap_vld_r;
logic [8-1:0]    combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_o_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_o_ap_vld_r;
logic [8-1:0]    combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_4_r;
logic            combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_4_ap_vld_r;
logic [8-1:0]    combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_o_r;
logic            combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_o_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_o_r;
logic            ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_o_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_zero_idx_r;
logic            ff_hevc_luma_mv_merge_mode_hls_zero_idx_ap_vld_r;
logic [32-1:0]   ff_hevc_luma_mv_merge_mode_hls_nPbW_o_r;
logic            ff_hevc_luma_mv_merge_mode_hls_nPbW_o_ap_vld_r;
logic [32-1:0]   ff_hevc_luma_mv_merge_mode_hls_nPbH_o_r;
logic            ff_hevc_luma_mv_merge_mode_hls_nPbH_o_ap_vld_r;
logic [32-1:0]   ff_hevc_luma_mv_merge_mode_hls_xm_x0_o_r;
logic            ff_hevc_luma_mv_merge_mode_hls_xm_x0_o_ap_vld_r;
logic [32-1:0]   ff_hevc_luma_mv_merge_mode_hls_xm_y0_o_r;
logic            ff_hevc_luma_mv_merge_mode_hls_xm_y0_o_ap_vld_r;
logic [32-1:0]   ff_hevc_luma_mv_merge_mode_hls_xm_dbg_r;
logic            ff_hevc_luma_mv_merge_mode_hls_xm_dbg_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_0_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_0_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_1_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_1_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_2_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_2_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_3_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_3_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_4_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_4_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_0_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_0_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_1_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_1_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_2_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_2_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_3_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_3_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_4_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_4_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_0_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_0_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_1_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_1_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_2_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_2_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_3_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_3_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_4_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_4_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_0_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_0_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_1_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_1_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_2_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_2_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_3_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_3_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_4_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_4_ap_vld_r;
logic [32-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_0_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_0_ap_vld_r;
logic [32-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_1_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_1_ap_vld_r;
logic [32-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_2_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_2_ap_vld_r;
logic [32-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_3_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_3_ap_vld_r;
logic [32-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_4_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_4_ap_vld_r;
logic [32-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_0_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_0_ap_vld_r;
logic [32-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_1_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_1_ap_vld_r;
logic [32-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_2_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_2_ap_vld_r;
logic [32-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_3_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_3_ap_vld_r;
logic [32-1:0]   ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_4_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_4_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_0_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_0_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_1_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_1_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_2_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_2_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_3_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_3_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_4_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_4_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_0_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_0_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_1_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_1_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_2_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_2_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_3_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_3_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_4_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_4_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_0_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_0_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_1_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_1_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_2_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_2_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_3_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_3_ap_vld_r;
logic [8-1:0]    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_4_r;
logic            ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_4_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_x_r;
logic            ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_x_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_y_r;
logic            ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_y_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_x_r;
logic            ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_x_ap_vld_r;
logic [16-1:0]   ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_y_r;
logic            ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_y_ap_vld_r;
logic [32-1:0]   ff_hevc_luma_mv_mvp_mode_hls_xm_dbg_r;
logic            ff_hevc_luma_mv_mvp_mode_hls_xm_dbg_ap_vld_r;
logic [16-1:0]   hls_prediction_unit_hls_current_mv_mv_0_x_o_r;
logic            hls_prediction_unit_hls_current_mv_mv_0_x_o_ap_vld_r;
logic [16-1:0]   hls_prediction_unit_hls_current_mv_mv_0_y_o_r;
logic            hls_prediction_unit_hls_current_mv_mv_0_y_o_ap_vld_r;
logic [16-1:0]   hls_prediction_unit_hls_current_mv_mv_1_x_o_r;
logic            hls_prediction_unit_hls_current_mv_mv_1_x_o_ap_vld_r;
logic [16-1:0]   hls_prediction_unit_hls_current_mv_mv_1_y_o_r;
logic            hls_prediction_unit_hls_current_mv_mv_1_y_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_current_mv_poc_0_r;
logic            hls_prediction_unit_hls_current_mv_poc_0_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_current_mv_poc_1_r;
logic            hls_prediction_unit_hls_current_mv_poc_1_ap_vld_r;
logic [8-1:0]    hls_prediction_unit_hls_current_mv_ref_idx_0_o_r;
logic            hls_prediction_unit_hls_current_mv_ref_idx_0_o_ap_vld_r;
logic [8-1:0]    hls_prediction_unit_hls_current_mv_ref_idx_1_o_r;
logic            hls_prediction_unit_hls_current_mv_ref_idx_1_o_ap_vld_r;
logic [8-1:0]    hls_prediction_unit_hls_current_mv_pred_flag_o_r;
logic            hls_prediction_unit_hls_current_mv_pred_flag_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_merge_idx_r;
logic            hls_prediction_unit_hls_merge_idx_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_mvp_lx_flag_r;
logic            hls_prediction_unit_hls_mvp_lx_flag_ap_vld_r;
logic [16-1:0]   hls_prediction_unit_hls_pu_mvd_x_r;
logic            hls_prediction_unit_hls_pu_mvd_x_ap_vld_r;
logic [16-1:0]   hls_prediction_unit_hls_pu_mvd_y_r;
logic            hls_prediction_unit_hls_pu_mvd_y_ap_vld_r;
logic [8-1:0]    hls_prediction_unit_hls_merge_flag_r;
logic            hls_prediction_unit_hls_merge_flag_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_0_o_r;
logic            hls_prediction_unit_hls_predColBuf_0_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_1_o_r;
logic            hls_prediction_unit_hls_predColBuf_1_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_2_o_r;
logic            hls_prediction_unit_hls_predColBuf_2_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_3_o_r;
logic            hls_prediction_unit_hls_predColBuf_3_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_4_o_r;
logic            hls_prediction_unit_hls_predColBuf_4_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_5_o_r;
logic            hls_prediction_unit_hls_predColBuf_5_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_6_o_r;
logic            hls_prediction_unit_hls_predColBuf_6_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_7_o_r;
logic            hls_prediction_unit_hls_predColBuf_7_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_8_o_r;
logic            hls_prediction_unit_hls_predColBuf_8_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_9_o_r;
logic            hls_prediction_unit_hls_predColBuf_9_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_10_o_r;
logic            hls_prediction_unit_hls_predColBuf_10_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_11_o_r;
logic            hls_prediction_unit_hls_predColBuf_11_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_12_o_r;
logic            hls_prediction_unit_hls_predColBuf_12_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_13_o_r;
logic            hls_prediction_unit_hls_predColBuf_13_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_14_o_r;
logic            hls_prediction_unit_hls_predColBuf_14_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_15_o_r;
logic            hls_prediction_unit_hls_predColBuf_15_o_ap_vld_r;
logic [32-1:0]   hls_prediction_unit_hls_predColBuf_16_o_r;
logic            hls_prediction_unit_hls_predColBuf_16_o_ap_vld_r;
logic            innerloop_ff_hevc_extract_rbsp_1_hls_ready_r;
logic            innerloop_ff_hevc_extract_rbsp_2_hls_ready_r;
logic            fill_ref_samples_mtdma_top_wrp_ready_r;
logic            hevc_find_frame_end_hls_ready_r;
logic            intra_prediction_unit_ex_hls_ready_r;
logic            hls_transform_unit_ex_hls_ready_r;
logic            hls_transform_unit_ex_hls_dup1_ready_r;
logic            hls_transform_unit_ex_hls_dup2_ready_r;
logic            hls_transform_unit_ex_hls_dup3_ready_r;
logic            hls_transform_tree_hls_ready_r;
logic            hls_transform_tree_hls_dup1_ready_r;
logic            hls_transform_tree_hls_dup2_ready_r;
logic            hls_transform_tree_hls_dup3_ready_r;
logic            hls_coding_quadtree_hls_ready_r;
logic            hls_coding_quadtree_hls_dup1_ready_r;
logic            hls_coding_quadtree_hls_dup2_ready_r;
logic            hls_coding_quadtree_hls_dup3_ready_r;
logic            hls_coding_unit_hls_ready_r;
logic            hls_coding_unit_hls_dup1_ready_r;
logic            hls_coding_unit_hls_dup2_ready_r;
logic            hls_coding_unit_hls_dup3_ready_r;
logic            copy_top_left_pixel_hls_ready_r;
logic            genPredCol_hls_ready_r;
logic            ff_hevc_get_sub_cu_zscan_id_hls_ready_r;
logic            ff_hevc_skip_flag_decode_hls_ready_r;
logic            ff_hevc_set_qPy_hls_ready_r;
logic            ff_hevc_deblocking_boundary_strengths_hls_ready_r;
logic            hls_decode_neighbour_hls_ready_r;
logic            set_tab_mvf_pred_flag_hls_ready_r;
logic            init_intra_neighbors_hls_ready_r;
logic            init_intra_neighbors_chroma_hls_ready_r;
logic            ff_hevc_set_neighbour_available_hls_ready_r;
logic            intra_prediction_unit_default_value_hls_ready_r;
logic            z_scan_block_avail_hls_ready_r;
logic            luma_mc_uni_libx265_hls_ready_r;
logic            chroma_mc_uni_libx265_hls_ready_r;
logic            sao_param_hls_ready_r;
logic            xmem_copy_mvfield_hls_ready_r;
logic            intra_pred_libx265_hls_ready_r;
logic            mv_mp_mode_mx_hls_ready_r;
logic            mv_mp_mode_mx_lt_hls_ready_r;
logic            temporal_luma_motion_vector_hls_ready_r;
logic            is_diff_mer_hls_ready_r;
logic            append_zero_motion_vector_candidates_hls_ready_r;
logic            merge_mode_exit_hls_ready_r;
logic            set_to_mergecand_list_hls_ready_r;
logic            compare_mv_ref_idx_hls_ready_r;
logic            combined_bi_predictive_merge_candidates_hls_ready_r;
logic            ff_hevc_luma_mv_merge_mode_hls_ready_r;
logic            ff_hevc_luma_mv_mvp_mode_hls_ready_r;
logic            hls_prediction_unit_hls_ready_r;
logic            scalar_writing_0;
logic            scalar_writing_8;
logic            scalar_writing_16;
logic            scalar_writing_20;
logic            scalar_writing_28;
logic            scalar_writing_32;
logic            scalar_writing_40;
logic            scalar_writing_44;
logic            scalar_writing_48;
logic            scalar_writing_56;
logic            scalar_writing_132;
logic            scalar_writing_160;
logic            scalar_writing_164;
logic            scalar_writing_168;
logic            scalar_writing_180;
logic            scalar_writing_184;
logic            scalar_writing_188;
logic            scalar_writing_192;
logic            scalar_writing_196;
logic            scalar_writing_200;
logic            scalar_writing_204;
logic            scalar_writing_208;
logic            scalar_writing_212;
logic            scalar_writing_216;
logic            scalar_writing_220;
logic            scalar_writing_224;
logic            scalar_writing_228;
logic            scalar_writing_232;
logic            scalar_writing_236;
logic            scalar_writing_240;
logic            scalar_writing_244;
logic            scalar_writing_260;
logic            scalar_writing_264;
logic            scalar_writing_292;
logic            scalar_writing_296;
logic            scalar_writing_300;
logic            scalar_writing_304;
logic            scalar_writing_308;
logic            scalar_writing_312;
logic            scalar_writing_316;
logic            scalar_writing_464;
logic            scalar_writing_468;
logic            scalar_writing_472;
logic            scalar_writing_476;
logic            scalar_writing_484;
logic            scalar_writing_488;
logic            scalar_writing_504;
logic            scalar_writing_508;
logic            scalar_writing_509;
logic            scalar_writing_510;
logic            scalar_writing_511;
logic            scalar_writing_512;
logic            scalar_writing_513;
logic            scalar_writing_514;
logic            scalar_writing_515;
logic            scalar_writing_516;
logic            scalar_writing_517;
logic            scalar_writing_518;
logic            scalar_writing_519;
logic            scalar_writing_520;
logic            scalar_writing_521;
logic            scalar_writing_522;
logic            scalar_writing_523;
logic            scalar_writing_532;
logic            scalar_writing_536;
logic            scalar_writing_540;
logic            scalar_writing_544;
logic            scalar_writing_548;
logic            scalar_writing_552;
logic            scalar_writing_556;
logic            scalar_writing_560;
logic            scalar_writing_564;
logic            scalar_writing_568;
logic            scalar_writing_572;
logic            scalar_writing_576;
logic            scalar_writing_580;
logic            scalar_writing_584;
logic            scalar_writing_588;
logic            scalar_writing_596;
logic            scalar_writing_600;
logic            scalar_writing_604;
logic            scalar_writing_608;
logic            scalar_writing_612;
logic            scalar_writing_616;
logic            scalar_writing_620;
logic            scalar_writing_624;
logic            scalar_writing_628;
logic            scalar_writing_632;
logic            scalar_writing_636;
logic            scalar_writing_640;
logic            scalar_writing_644;
logic            scalar_writing_648;
logic            scalar_writing_652;
logic            scalar_writing_656;
logic            scalar_writing_660;
logic            scalar_writing_664;
logic            scalar_writing_668;
logic            scalar_writing_672;
logic            scalar_writing_684;
logic            scalar_writing_688;
logic            scalar_writing_692;
logic            scalar_writing_696;
logic            scalar_writing_700;
logic            scalar_writing_704;
logic            scalar_writing_708;
logic            scalar_writing_712;
logic            scalar_writing_784;
logic            scalar_writing_788;
logic            scalar_writing_792;
logic            scalar_writing_796;
logic            scalar_writing_800;
logic            scalar_writing_804;
logic            scalar_writing_808;
logic            scalar_writing_812;
logic            scalar_writing_816;
logic            scalar_writing_888;
logic            scalar_writing_892;
logic            scalar_writing_893;
logic            scalar_writing_894;
logic            scalar_writing_895;
logic            scalar_writing_896;
logic            scalar_writing_897;
logic            scalar_writing_898;
logic            scalar_writing_899;
logic            scalar_writing_900;
logic            scalar_writing_901;
logic            scalar_writing_902;
logic            scalar_writing_903;
logic            scalar_writing_904;
logic            scalar_writing_905;
logic            scalar_writing_906;
logic            scalar_writing_907;
logic            scalar_writing_908;
logic            scalar_writing_909;
logic            scalar_writing_910;
logic            scalar_writing_911;
logic            scalar_writing_912;
logic            scalar_writing_913;
logic            scalar_writing_914;
logic            scalar_writing_915;
logic            scalar_writing_922;
logic            scalar_writing_924;
logic            scalar_writing_926;
logic            scalar_writing_928;
logic            scalar_writing_932;
logic            scalar_writing_934;
logic            scalar_writing_936;
logic            scalar_writing_938;
logic            scalar_writing_942;
logic            scalar_writing_944;
logic            scalar_writing_946;
logic            scalar_writing_948;
logic            scalar_writing_953;
logic            scalar_writing_956;
logic            scalar_writing_957;
logic            scalar_writing_958;
logic            scalar_writing_1140;
logic            scalar_writing_1212;
logic            scalar_writing_1216;
logic            scalar_writing_1220;
logic            scalar_writing_1224;
logic            scalar_writing_1232;
logic            scalar_writing_1300;
logic            scalar_writing_1302;
logic            scalar_writing_1304;
logic            scalar_writing_1306;
logic            scalar_writing_1308;
logic            scalar_writing_1312;
logic            scalar_writing_1314;
logic            scalar_writing_1316;
logic            scalar_writing_1318;
logic            scalar_writing_1320;
logic            scalar_writing_1324;
logic            scalar_writing_1326;
logic            scalar_writing_1328;
logic            scalar_writing_1330;
logic            scalar_writing_1332;
logic            scalar_writing_1336;
logic            scalar_writing_1338;
logic            scalar_writing_1340;
logic            scalar_writing_1342;
logic            scalar_writing_1344;
logic            scalar_writing_1348;
logic            scalar_writing_1352;
logic            scalar_writing_1356;
logic            scalar_writing_1360;
logic            scalar_writing_1364;
logic            scalar_writing_1368;
logic            scalar_writing_1372;
logic            scalar_writing_1376;
logic            scalar_writing_1380;
logic            scalar_writing_1384;
logic            scalar_writing_1388;
logic            scalar_writing_1389;
logic            scalar_writing_1390;
logic            scalar_writing_1391;
logic            scalar_writing_1392;
logic            scalar_writing_1396;
logic            scalar_writing_1397;
logic            scalar_writing_1398;
logic            scalar_writing_1399;
logic            scalar_writing_1400;
logic            scalar_writing_1404;
logic            scalar_writing_1405;
logic            scalar_writing_1406;
logic            scalar_writing_1407;
logic            scalar_writing_1408;
logic            scalar_writing_1412;
logic            scalar_writing_1416;
logic            scalar_writing_1420;
logic            scalar_writing_1428;
logic            scalar_writing_1432;
logic            scalar_writing_1444;


always @ (posedge clk or negedge rstn) begin 
    if (~rstn) begin
        ap_part_r               <= '{default: '0};
        ap_arb_start_r          <= '{default: '0};
        ap_arb_start_2r         <= '{default: '0};
        ap_arb_start_running_r	<= '{default: '0};
        ap_arb_ret_r            <= '{default: '0};
        ap_arb_ret_2r           <= '{default: '0};
        ap_arb_ret_running_r    <= '{default: '0};
        ap_arb_reload_r         <= '{default: '0};
        ap_arb_reload_running_r <= '{default: '0};
        ap_running_r            <= '{default: '0};
        ap_start_r              <= '{default: '0};
        ap_ready_r              <= '{default: '0};
        ap_done_r               <= '{default: '0};
        scalar_argdone_r        <= '{default: '0};
        scalar_argdone_all_r    <= '{default: '0};
        scalar_argVld_r         <= '{default: '0};
        scalar_argVld_all_r     <= '{default: '0};
        scalar_argAck_r			<= '{default: '0};
		scalar_argAckdone_r		<= '{default: 1'b1};
		scalar_argAckdone_all_r	<= '{default: '0};
		scalar_rdat_vld_r		<= '{default: '0};
        array_argdone_r         <= '{default: '0};
        array_argVld_r          <= '{default: '0};
        array_adr_r             <= '{default: '0};
        cyclic_argdone_r        <= '{default: '0};
        cyclic_argVld_r         <= '{default: '0};
        
        innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_r <= 0;
        innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_ap_vld_r <= 0;
        innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_r <= 0;
        innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_ap_vld_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_ap_vld_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_ap_vld_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_ap_vld_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_ap_vld_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_r <= 0;
        innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_ap_vld_r <= 0;
        hevc_find_frame_end_hls_state64_0_o_r    <= 0;
        hevc_find_frame_end_hls_state64_1_o_r    <= 0;
        hevc_find_frame_end_hls_state64_0_o_ap_vld_r <= 0;
        hevc_find_frame_end_hls_state64_1_o_ap_vld_r <= 0;
        hevc_find_frame_end_hls_frame_start_found_o_r <= 0;
        hevc_find_frame_end_hls_frame_start_found_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_r <= 0;
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_r <= 0;
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_r <= 0;
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_r <= 0;
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_r <= 0;
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_r <= 0;
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_r <= 0;
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_r <= 0;
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_r <= 0;
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_ap_vld_r <= 0;
        intra_prediction_unit_ex_hls_max_trafo_depth_r <= 0;
        intra_prediction_unit_ex_hls_max_trafo_depth_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_r <= 0;
        hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_r <= 0;
        hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_qp_y_o_r       <= 0;
        hls_transform_unit_ex_hls_qp_y_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_log2_trafo_size_r <= 0;
        hls_transform_unit_ex_hls_log2_trafo_size_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_log2_trafo_size_c_o_r <= 0;
        hls_transform_unit_ex_hls_log2_trafo_size_c_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_scan_idx_o_r   <= 0;
        hls_transform_unit_ex_hls_scan_idx_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_scan_idx_c_r   <= 0;
        hls_transform_unit_ex_hls_scan_idx_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cmdr_run_o_r   <= 0;
        hls_transform_unit_ex_hls_cmdr_run_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_nPbW_r         <= 0;
        hls_transform_unit_ex_hls_nPbW_ap_vld_r  <= 0;
        hls_transform_unit_ex_hls_nPbH_r         <= 0;
        hls_transform_unit_ex_hls_nPbH_ap_vld_r  <= 0;
        hls_transform_unit_ex_hls_cand_up_r      <= 0;
        hls_transform_unit_ex_hls_cand_up_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_left_r    <= 0;
        hls_transform_unit_ex_hls_cand_left_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_up_left_r <= 0;
        hls_transform_unit_ex_hls_cand_up_left_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_up_right_sap_r <= 0;
        hls_transform_unit_ex_hls_cand_up_right_sap_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_up_right_r <= 0;
        hls_transform_unit_ex_hls_cand_up_right_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_bottom_left_o_r <= 0;
        hls_transform_unit_ex_hls_cand_bottom_left_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_up_c_r    <= 0;
        hls_transform_unit_ex_hls_cand_up_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_left_c_r  <= 0;
        hls_transform_unit_ex_hls_cand_left_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_up_left_c_r <= 0;
        hls_transform_unit_ex_hls_cand_up_left_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_up_right_sap_c_r <= 0;
        hls_transform_unit_ex_hls_cand_up_right_sap_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_up_right_c_r <= 0;
        hls_transform_unit_ex_hls_cand_up_right_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_cand_bottom_left_c_o_r <= 0;
        hls_transform_unit_ex_hls_cand_bottom_left_c_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_r <= 0;
        hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_r <= 0;
        hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_tu_cu_qp_delta_r <= 0;
        hls_transform_unit_ex_hls_tu_cu_qp_delta_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_tu_cross_pf_r  <= 0;
        hls_transform_unit_ex_hls_tu_cross_pf_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_first_qp_group_o_r <= 0;
        hls_transform_unit_ex_hls_first_qp_group_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_qp_y_o_r  <= 0;
        hls_transform_unit_ex_hls_dup1_qp_y_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_log2_trafo_size_r <= 0;
        hls_transform_unit_ex_hls_dup1_log2_trafo_size_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_r <= 0;
        hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_scan_idx_o_r <= 0;
        hls_transform_unit_ex_hls_dup1_scan_idx_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_scan_idx_c_r <= 0;
        hls_transform_unit_ex_hls_dup1_scan_idx_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cmdr_run_o_r <= 0;
        hls_transform_unit_ex_hls_dup1_cmdr_run_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_nPbW_r    <= 0;
        hls_transform_unit_ex_hls_dup1_nPbW_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_nPbH_r    <= 0;
        hls_transform_unit_ex_hls_dup1_nPbH_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_left_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_left_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_left_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_left_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_right_sap_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_right_sap_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_right_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_right_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_c_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_left_c_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_left_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_left_c_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_left_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_right_c_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_up_right_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_r <= 0;
        hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_cross_pf_r <= 0;
        hls_transform_unit_ex_hls_dup1_tu_cross_pf_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup1_first_qp_group_o_r <= 0;
        hls_transform_unit_ex_hls_dup1_first_qp_group_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_qp_y_o_r  <= 0;
        hls_transform_unit_ex_hls_dup2_qp_y_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_log2_trafo_size_r <= 0;
        hls_transform_unit_ex_hls_dup2_log2_trafo_size_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_r <= 0;
        hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_scan_idx_o_r <= 0;
        hls_transform_unit_ex_hls_dup2_scan_idx_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_scan_idx_c_r <= 0;
        hls_transform_unit_ex_hls_dup2_scan_idx_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cmdr_run_o_r <= 0;
        hls_transform_unit_ex_hls_dup2_cmdr_run_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_nPbW_r    <= 0;
        hls_transform_unit_ex_hls_dup2_nPbW_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_nPbH_r    <= 0;
        hls_transform_unit_ex_hls_dup2_nPbH_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_left_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_left_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_left_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_left_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_right_sap_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_right_sap_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_right_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_right_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_c_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_left_c_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_left_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_left_c_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_left_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_right_c_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_up_right_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_r <= 0;
        hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_cross_pf_r <= 0;
        hls_transform_unit_ex_hls_dup2_tu_cross_pf_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup2_first_qp_group_o_r <= 0;
        hls_transform_unit_ex_hls_dup2_first_qp_group_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_qp_y_o_r  <= 0;
        hls_transform_unit_ex_hls_dup3_qp_y_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_log2_trafo_size_r <= 0;
        hls_transform_unit_ex_hls_dup3_log2_trafo_size_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_r <= 0;
        hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_scan_idx_o_r <= 0;
        hls_transform_unit_ex_hls_dup3_scan_idx_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_scan_idx_c_r <= 0;
        hls_transform_unit_ex_hls_dup3_scan_idx_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cmdr_run_o_r <= 0;
        hls_transform_unit_ex_hls_dup3_cmdr_run_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_nPbW_r    <= 0;
        hls_transform_unit_ex_hls_dup3_nPbW_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_nPbH_r    <= 0;
        hls_transform_unit_ex_hls_dup3_nPbH_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_left_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_left_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_left_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_left_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_right_sap_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_right_sap_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_right_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_right_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_c_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_left_c_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_left_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_left_c_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_left_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_right_c_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_up_right_c_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_r <= 0;
        hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_cross_pf_r <= 0;
        hls_transform_unit_ex_hls_dup3_tu_cross_pf_ap_vld_r <= 0;
        hls_transform_unit_ex_hls_dup3_first_qp_group_o_r <= 0;
        hls_transform_unit_ex_hls_dup3_first_qp_group_o_ap_vld_r <= 0;
        hls_transform_tree_hls_log2_trafo_size_r <= 0;
        hls_transform_tree_hls_log2_trafo_size_ap_vld_r <= 0;
        hls_transform_tree_hls_split_transform_flag_r <= 0;
        hls_transform_tree_hls_split_transform_flag_ap_vld_r <= 0;
        hls_transform_tree_hls_cbf_data_r        <= 0;
        hls_transform_tree_hls_cbf_data_ap_vld_r <= 0;
        hls_transform_tree_hls_tu_chroma_mode_c_r <= 0;
        hls_transform_tree_hls_tu_chroma_mode_c_ap_vld_r <= 0;
        hls_transform_tree_hls_tu_intra_pred_mode_r <= 0;
        hls_transform_tree_hls_tu_intra_pred_mode_ap_vld_r <= 0;
        hls_transform_tree_hls_tu_intra_pred_mode_c_r <= 0;
        hls_transform_tree_hls_tu_intra_pred_mode_c_ap_vld_r <= 0;
        hls_transform_tree_hls_cbf_luma_o_r      <= 0;
        hls_transform_tree_hls_cbf_luma_o_ap_vld_r <= 0;
        hls_transform_tree_hls_dup1_log2_trafo_size_r <= 0;
        hls_transform_tree_hls_dup1_log2_trafo_size_ap_vld_r <= 0;
        hls_transform_tree_hls_dup1_split_transform_flag_r <= 0;
        hls_transform_tree_hls_dup1_split_transform_flag_ap_vld_r <= 0;
        hls_transform_tree_hls_dup1_cbf_data_r   <= 0;
        hls_transform_tree_hls_dup1_cbf_data_ap_vld_r <= 0;
        hls_transform_tree_hls_dup1_tu_chroma_mode_c_r <= 0;
        hls_transform_tree_hls_dup1_tu_chroma_mode_c_ap_vld_r <= 0;
        hls_transform_tree_hls_dup1_tu_intra_pred_mode_r <= 0;
        hls_transform_tree_hls_dup1_tu_intra_pred_mode_ap_vld_r <= 0;
        hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_r <= 0;
        hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_ap_vld_r <= 0;
        hls_transform_tree_hls_dup1_cbf_luma_o_r <= 0;
        hls_transform_tree_hls_dup1_cbf_luma_o_ap_vld_r <= 0;
        hls_transform_tree_hls_dup2_log2_trafo_size_r <= 0;
        hls_transform_tree_hls_dup2_log2_trafo_size_ap_vld_r <= 0;
        hls_transform_tree_hls_dup2_split_transform_flag_r <= 0;
        hls_transform_tree_hls_dup2_split_transform_flag_ap_vld_r <= 0;
        hls_transform_tree_hls_dup2_cbf_data_r   <= 0;
        hls_transform_tree_hls_dup2_cbf_data_ap_vld_r <= 0;
        hls_transform_tree_hls_dup2_tu_chroma_mode_c_r <= 0;
        hls_transform_tree_hls_dup2_tu_chroma_mode_c_ap_vld_r <= 0;
        hls_transform_tree_hls_dup2_tu_intra_pred_mode_r <= 0;
        hls_transform_tree_hls_dup2_tu_intra_pred_mode_ap_vld_r <= 0;
        hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_r <= 0;
        hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_ap_vld_r <= 0;
        hls_transform_tree_hls_dup2_cbf_luma_o_r <= 0;
        hls_transform_tree_hls_dup2_cbf_luma_o_ap_vld_r <= 0;
        hls_transform_tree_hls_dup3_log2_trafo_size_r <= 0;
        hls_transform_tree_hls_dup3_log2_trafo_size_ap_vld_r <= 0;
        hls_transform_tree_hls_dup3_split_transform_flag_r <= 0;
        hls_transform_tree_hls_dup3_split_transform_flag_ap_vld_r <= 0;
        hls_transform_tree_hls_dup3_cbf_data_r   <= 0;
        hls_transform_tree_hls_dup3_cbf_data_ap_vld_r <= 0;
        hls_transform_tree_hls_dup3_tu_chroma_mode_c_r <= 0;
        hls_transform_tree_hls_dup3_tu_chroma_mode_c_ap_vld_r <= 0;
        hls_transform_tree_hls_dup3_tu_intra_pred_mode_r <= 0;
        hls_transform_tree_hls_dup3_tu_intra_pred_mode_ap_vld_r <= 0;
        hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_r <= 0;
        hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_ap_vld_r <= 0;
        hls_transform_tree_hls_dup3_cbf_luma_o_r <= 0;
        hls_transform_tree_hls_dup3_cbf_luma_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_x1_o_r           <= 0;
        hls_coding_quadtree_hls_x1_o_ap_vld_r    <= 0;
        hls_coding_quadtree_hls_y1_o_r           <= 0;
        hls_coding_quadtree_hls_y1_o_ap_vld_r    <= 0;
        hls_coding_quadtree_hls_log2_cb_size_minus_one_o_r <= 0;
        hls_coding_quadtree_hls_log2_cb_size_minus_one_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_cb_depth_plus_one_o_r <= 0;
        hls_coding_quadtree_hls_cb_depth_plus_one_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_split_cu_flag_o_r <= 0;
        hls_coding_quadtree_hls_split_cu_flag_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_more_data_o_r    <= 0;
        hls_coding_quadtree_hls_more_data_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_qPy_pred_r       <= 0;
        hls_coding_quadtree_hls_qPy_pred_ap_vld_r <= 0;
        hls_coding_quadtree_hls_qp_block_mask_o_r <= 0;
        hls_coding_quadtree_hls_qp_block_mask_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_cb_size_split_o_r <= 0;
        hls_coding_quadtree_hls_cb_size_split_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_r <= 0;
        hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_ap_vld_r <= 0;
        hls_coding_quadtree_hls_tu_cu_qp_delta_r <= 0;
        hls_coding_quadtree_hls_tu_cu_qp_delta_ap_vld_r <= 0;
        hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_r <= 0;
        hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_ap_vld_r <= 0;
        hls_coding_quadtree_hls_depth_r          <= 0;
        hls_coding_quadtree_hls_depth_ap_vld_r   <= 0;
        hls_coding_quadtree_hls_dup1_x1_o_r      <= 0;
        hls_coding_quadtree_hls_dup1_x1_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_y1_o_r      <= 0;
        hls_coding_quadtree_hls_dup1_y1_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_r <= 0;
        hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_r <= 0;
        hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_split_cu_flag_o_r <= 0;
        hls_coding_quadtree_hls_dup1_split_cu_flag_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_more_data_o_r <= 0;
        hls_coding_quadtree_hls_dup1_more_data_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_qPy_pred_r  <= 0;
        hls_coding_quadtree_hls_dup1_qPy_pred_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_qp_block_mask_o_r <= 0;
        hls_coding_quadtree_hls_dup1_qp_block_mask_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_cb_size_split_o_r <= 0;
        hls_coding_quadtree_hls_dup1_cb_size_split_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_r <= 0;
        hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_r <= 0;
        hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_r <= 0;
        hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup1_depth_r     <= 0;
        hls_coding_quadtree_hls_dup1_depth_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_x1_o_r      <= 0;
        hls_coding_quadtree_hls_dup2_x1_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_y1_o_r      <= 0;
        hls_coding_quadtree_hls_dup2_y1_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_r <= 0;
        hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_r <= 0;
        hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_split_cu_flag_o_r <= 0;
        hls_coding_quadtree_hls_dup2_split_cu_flag_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_more_data_o_r <= 0;
        hls_coding_quadtree_hls_dup2_more_data_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_qPy_pred_r  <= 0;
        hls_coding_quadtree_hls_dup2_qPy_pred_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_qp_block_mask_o_r <= 0;
        hls_coding_quadtree_hls_dup2_qp_block_mask_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_cb_size_split_o_r <= 0;
        hls_coding_quadtree_hls_dup2_cb_size_split_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_r <= 0;
        hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_r <= 0;
        hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_r <= 0;
        hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup2_depth_r     <= 0;
        hls_coding_quadtree_hls_dup2_depth_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_x1_o_r      <= 0;
        hls_coding_quadtree_hls_dup3_x1_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_y1_o_r      <= 0;
        hls_coding_quadtree_hls_dup3_y1_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_r <= 0;
        hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_r <= 0;
        hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_split_cu_flag_o_r <= 0;
        hls_coding_quadtree_hls_dup3_split_cu_flag_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_more_data_o_r <= 0;
        hls_coding_quadtree_hls_dup3_more_data_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_qPy_pred_r  <= 0;
        hls_coding_quadtree_hls_dup3_qPy_pred_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_qp_block_mask_o_r <= 0;
        hls_coding_quadtree_hls_dup3_qp_block_mask_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_cb_size_split_o_r <= 0;
        hls_coding_quadtree_hls_dup3_cb_size_split_o_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_r <= 0;
        hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_r <= 0;
        hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_r <= 0;
        hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_ap_vld_r <= 0;
        hls_coding_quadtree_hls_dup3_depth_r     <= 0;
        hls_coding_quadtree_hls_dup3_depth_ap_vld_r <= 0;
        hls_coding_unit_hls_cu_transquant_bypass_flag_o_r <= 0;
        hls_coding_unit_hls_cu_transquant_bypass_flag_o_ap_vld_r <= 0;
        hls_coding_unit_hls_pcm_flag_o_r         <= 0;
        hls_coding_unit_hls_pcm_flag_o_ap_vld_r  <= 0;
        hls_coding_unit_hls_pred_mode_o_r        <= 0;
        hls_coding_unit_hls_pred_mode_o_ap_vld_r <= 0;
        hls_coding_unit_hls_part_mode_o_r        <= 0;
        hls_coding_unit_hls_part_mode_o_ap_vld_r <= 0;
        hls_coding_unit_hls_max_trafo_depth_r    <= 0;
        hls_coding_unit_hls_max_trafo_depth_ap_vld_r <= 0;
        hls_coding_unit_hls_cb_size_o_r          <= 0;
        hls_coding_unit_hls_cb_size_o_ap_vld_r   <= 0;
        hls_coding_unit_hls_idx_o_r              <= 0;
        hls_coding_unit_hls_idx_o_ap_vld_r       <= 0;
        hls_coding_unit_hls_xm_xBase_r           <= 0;
        hls_coding_unit_hls_xm_xBase_ap_vld_r    <= 0;
        hls_coding_unit_hls_xm_yBase_r           <= 0;
        hls_coding_unit_hls_xm_yBase_ap_vld_r    <= 0;
        hls_coding_unit_hls_xm_cb_xBase_r        <= 0;
        hls_coding_unit_hls_xm_cb_xBase_ap_vld_r <= 0;
        hls_coding_unit_hls_xm_cb_yBase_r        <= 0;
        hls_coding_unit_hls_xm_cb_yBase_ap_vld_r <= 0;
        hls_coding_unit_hls_xm_log2_cb_size_r    <= 0;
        hls_coding_unit_hls_xm_log2_cb_size_ap_vld_r <= 0;
        hls_coding_unit_hls_length_r_r           <= 0;
        hls_coding_unit_hls_length_r_ap_vld_r    <= 0;
        hls_coding_unit_hls_xm_x_r               <= 0;
        hls_coding_unit_hls_xm_x_ap_vld_r        <= 0;
        hls_coding_unit_hls_xm_y_r               <= 0;
        hls_coding_unit_hls_xm_y_ap_vld_r        <= 0;
        hls_coding_unit_hls_pu_intra_pred_mode_0_r <= 0;
        hls_coding_unit_hls_pu_intra_pred_mode_0_ap_vld_r <= 0;
        hls_coding_unit_hls_pu_intra_pred_mode_1_r <= 0;
        hls_coding_unit_hls_pu_intra_pred_mode_1_ap_vld_r <= 0;
        hls_coding_unit_hls_pu_intra_pred_mode_2_r <= 0;
        hls_coding_unit_hls_pu_intra_pred_mode_2_ap_vld_r <= 0;
        hls_coding_unit_hls_pu_intra_pred_mode_3_r <= 0;
        hls_coding_unit_hls_pu_intra_pred_mode_3_ap_vld_r <= 0;
        hls_coding_unit_hls_qPy_pred_r           <= 0;
        hls_coding_unit_hls_qPy_pred_ap_vld_r    <= 0;
        hls_coding_unit_hls_skip_flag_start_r    <= 0;
        hls_coding_unit_hls_skip_flag_start_ap_vld_r <= 0;
        hls_coding_unit_hls_intra_split_flag_r   <= 0;
        hls_coding_unit_hls_intra_split_flag_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_r <= 0;
        hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_pcm_flag_o_r    <= 0;
        hls_coding_unit_hls_dup1_pcm_flag_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_pred_mode_o_r   <= 0;
        hls_coding_unit_hls_dup1_pred_mode_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_part_mode_o_r   <= 0;
        hls_coding_unit_hls_dup1_part_mode_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_max_trafo_depth_r <= 0;
        hls_coding_unit_hls_dup1_max_trafo_depth_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_cb_size_o_r     <= 0;
        hls_coding_unit_hls_dup1_cb_size_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_idx_o_r         <= 0;
        hls_coding_unit_hls_dup1_idx_o_ap_vld_r  <= 0;
        hls_coding_unit_hls_dup1_xm_xBase_r      <= 0;
        hls_coding_unit_hls_dup1_xm_xBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_xm_yBase_r      <= 0;
        hls_coding_unit_hls_dup1_xm_yBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_xm_cb_xBase_r   <= 0;
        hls_coding_unit_hls_dup1_xm_cb_xBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_xm_cb_yBase_r   <= 0;
        hls_coding_unit_hls_dup1_xm_cb_yBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_xm_log2_cb_size_r <= 0;
        hls_coding_unit_hls_dup1_xm_log2_cb_size_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_length_r_r      <= 0;
        hls_coding_unit_hls_dup1_length_r_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_xm_x_r          <= 0;
        hls_coding_unit_hls_dup1_xm_x_ap_vld_r   <= 0;
        hls_coding_unit_hls_dup1_xm_y_r          <= 0;
        hls_coding_unit_hls_dup1_xm_y_ap_vld_r   <= 0;
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_r <= 0;
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_r <= 0;
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_r <= 0;
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_r <= 0;
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_qPy_pred_r      <= 0;
        hls_coding_unit_hls_dup1_qPy_pred_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_skip_flag_start_r <= 0;
        hls_coding_unit_hls_dup1_skip_flag_start_ap_vld_r <= 0;
        hls_coding_unit_hls_dup1_intra_split_flag_r <= 0;
        hls_coding_unit_hls_dup1_intra_split_flag_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_r <= 0;
        hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_pcm_flag_o_r    <= 0;
        hls_coding_unit_hls_dup2_pcm_flag_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_pred_mode_o_r   <= 0;
        hls_coding_unit_hls_dup2_pred_mode_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_part_mode_o_r   <= 0;
        hls_coding_unit_hls_dup2_part_mode_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_max_trafo_depth_r <= 0;
        hls_coding_unit_hls_dup2_max_trafo_depth_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_cb_size_o_r     <= 0;
        hls_coding_unit_hls_dup2_cb_size_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_idx_o_r         <= 0;
        hls_coding_unit_hls_dup2_idx_o_ap_vld_r  <= 0;
        hls_coding_unit_hls_dup2_xm_xBase_r      <= 0;
        hls_coding_unit_hls_dup2_xm_xBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_xm_yBase_r      <= 0;
        hls_coding_unit_hls_dup2_xm_yBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_xm_cb_xBase_r   <= 0;
        hls_coding_unit_hls_dup2_xm_cb_xBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_xm_cb_yBase_r   <= 0;
        hls_coding_unit_hls_dup2_xm_cb_yBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_xm_log2_cb_size_r <= 0;
        hls_coding_unit_hls_dup2_xm_log2_cb_size_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_length_r_r      <= 0;
        hls_coding_unit_hls_dup2_length_r_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_xm_x_r          <= 0;
        hls_coding_unit_hls_dup2_xm_x_ap_vld_r   <= 0;
        hls_coding_unit_hls_dup2_xm_y_r          <= 0;
        hls_coding_unit_hls_dup2_xm_y_ap_vld_r   <= 0;
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_r <= 0;
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_r <= 0;
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_r <= 0;
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_r <= 0;
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_qPy_pred_r      <= 0;
        hls_coding_unit_hls_dup2_qPy_pred_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_skip_flag_start_r <= 0;
        hls_coding_unit_hls_dup2_skip_flag_start_ap_vld_r <= 0;
        hls_coding_unit_hls_dup2_intra_split_flag_r <= 0;
        hls_coding_unit_hls_dup2_intra_split_flag_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_r <= 0;
        hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_pcm_flag_o_r    <= 0;
        hls_coding_unit_hls_dup3_pcm_flag_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_pred_mode_o_r   <= 0;
        hls_coding_unit_hls_dup3_pred_mode_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_part_mode_o_r   <= 0;
        hls_coding_unit_hls_dup3_part_mode_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_max_trafo_depth_r <= 0;
        hls_coding_unit_hls_dup3_max_trafo_depth_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_cb_size_o_r     <= 0;
        hls_coding_unit_hls_dup3_cb_size_o_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_idx_o_r         <= 0;
        hls_coding_unit_hls_dup3_idx_o_ap_vld_r  <= 0;
        hls_coding_unit_hls_dup3_xm_xBase_r      <= 0;
        hls_coding_unit_hls_dup3_xm_xBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_xm_yBase_r      <= 0;
        hls_coding_unit_hls_dup3_xm_yBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_xm_cb_xBase_r   <= 0;
        hls_coding_unit_hls_dup3_xm_cb_xBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_xm_cb_yBase_r   <= 0;
        hls_coding_unit_hls_dup3_xm_cb_yBase_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_xm_log2_cb_size_r <= 0;
        hls_coding_unit_hls_dup3_xm_log2_cb_size_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_length_r_r      <= 0;
        hls_coding_unit_hls_dup3_length_r_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_xm_x_r          <= 0;
        hls_coding_unit_hls_dup3_xm_x_ap_vld_r   <= 0;
        hls_coding_unit_hls_dup3_xm_y_r          <= 0;
        hls_coding_unit_hls_dup3_xm_y_ap_vld_r   <= 0;
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_r <= 0;
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_r <= 0;
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_r <= 0;
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_r <= 0;
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_qPy_pred_r      <= 0;
        hls_coding_unit_hls_dup3_qPy_pred_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_skip_flag_start_r <= 0;
        hls_coding_unit_hls_dup3_skip_flag_start_ap_vld_r <= 0;
        hls_coding_unit_hls_dup3_intra_split_flag_r <= 0;
        hls_coding_unit_hls_dup3_intra_split_flag_ap_vld_r <= 0;
        copy_top_left_pixel_hls_cmdr_run_o_r     <= 0;
        copy_top_left_pixel_hls_cmdr_run_o_ap_vld_r <= 0;
        genPredCol_hls_predColBuf_0_r            <= 0;
        genPredCol_hls_predColBuf_0_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_1_r            <= 0;
        genPredCol_hls_predColBuf_1_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_2_r            <= 0;
        genPredCol_hls_predColBuf_2_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_3_r            <= 0;
        genPredCol_hls_predColBuf_3_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_4_r            <= 0;
        genPredCol_hls_predColBuf_4_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_5_r            <= 0;
        genPredCol_hls_predColBuf_5_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_6_r            <= 0;
        genPredCol_hls_predColBuf_6_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_7_r            <= 0;
        genPredCol_hls_predColBuf_7_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_8_r            <= 0;
        genPredCol_hls_predColBuf_8_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_9_r            <= 0;
        genPredCol_hls_predColBuf_9_ap_vld_r     <= 0;
        genPredCol_hls_predColBuf_10_r           <= 0;
        genPredCol_hls_predColBuf_10_ap_vld_r    <= 0;
        genPredCol_hls_predColBuf_11_r           <= 0;
        genPredCol_hls_predColBuf_11_ap_vld_r    <= 0;
        genPredCol_hls_predColBuf_12_r           <= 0;
        genPredCol_hls_predColBuf_12_ap_vld_r    <= 0;
        genPredCol_hls_predColBuf_13_r           <= 0;
        genPredCol_hls_predColBuf_13_ap_vld_r    <= 0;
        genPredCol_hls_predColBuf_14_r           <= 0;
        genPredCol_hls_predColBuf_14_ap_vld_r    <= 0;
        genPredCol_hls_predColBuf_15_r           <= 0;
        genPredCol_hls_predColBuf_15_ap_vld_r    <= 0;
        genPredCol_hls_predColBuf_16_o_r         <= 0;
        genPredCol_hls_predColBuf_16_o_ap_vld_r  <= 0;
        ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_r <= 0;
        ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_ap_vld_r <= 0;
        ff_hevc_set_qPy_hls_qp_y_r               <= 0;
        ff_hevc_set_qPy_hls_qp_y_ap_vld_r        <= 0;
        ff_hevc_set_qPy_hls_first_qp_group_o_r   <= 0;
        ff_hevc_set_qPy_hls_first_qp_group_o_ap_vld_r <= 0;
        hls_decode_neighbour_hls_first_qp_group_r <= 0;
        hls_decode_neighbour_hls_first_qp_group_ap_vld_r <= 0;
        hls_decode_neighbour_hls_end_of_tiles_x_r <= 0;
        hls_decode_neighbour_hls_end_of_tiles_x_ap_vld_r <= 0;
        hls_decode_neighbour_hls_end_of_tiles_y_r <= 0;
        hls_decode_neighbour_hls_end_of_tiles_y_ap_vld_r <= 0;
        hls_decode_neighbour_hls_slice_or_tiles_left_boundary_r <= 0;
        hls_decode_neighbour_hls_slice_or_tiles_left_boundary_ap_vld_r <= 0;
        hls_decode_neighbour_hls_slice_or_tiles_up_boundary_r <= 0;
        hls_decode_neighbour_hls_slice_or_tiles_up_boundary_ap_vld_r <= 0;
        hls_decode_neighbour_hls_ctb_left_flag_r <= 0;
        hls_decode_neighbour_hls_ctb_left_flag_ap_vld_r <= 0;
        hls_decode_neighbour_hls_ctb_up_flag_r   <= 0;
        hls_decode_neighbour_hls_ctb_up_flag_ap_vld_r <= 0;
        hls_decode_neighbour_hls_ctb_up_right_flag_r <= 0;
        hls_decode_neighbour_hls_ctb_up_right_flag_ap_vld_r <= 0;
        hls_decode_neighbour_hls_ctb_up_left_flag_r <= 0;
        hls_decode_neighbour_hls_ctb_up_left_flag_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_0_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_0_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_1_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_1_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_2_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_2_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_3_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_3_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_4_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_4_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_5_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_5_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_6_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_6_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_7_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_7_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_8_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_8_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_9_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_9_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_10_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_10_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_11_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_11_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_12_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_12_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_13_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_13_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_14_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_14_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_15_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_15_o_ap_vld_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_16_o_r <= 0;
        set_tab_mvf_pred_flag_hls_predColBuf_16_o_ap_vld_r <= 0;
        init_intra_neighbors_hls_numIntraNeighbor_r <= 0;
        init_intra_neighbors_hls_numIntraNeighbor_ap_vld_r <= 0;
        init_intra_neighbors_hls_totalUnits_r    <= 0;
        init_intra_neighbors_hls_totalUnits_ap_vld_r <= 0;
        init_intra_neighbors_hls_aboveUnits_r    <= 0;
        init_intra_neighbors_hls_aboveUnits_ap_vld_r <= 0;
        init_intra_neighbors_hls_leftUnits_r     <= 0;
        init_intra_neighbors_hls_leftUnits_ap_vld_r <= 0;
        init_intra_neighbors_hls_unitWidth_r     <= 0;
        init_intra_neighbors_hls_unitWidth_ap_vld_r <= 0;
        init_intra_neighbors_hls_unitHeight_r    <= 0;
        init_intra_neighbors_hls_unitHeight_ap_vld_r <= 0;
        init_intra_neighbors_hls_log2TrSize_r    <= 0;
        init_intra_neighbors_hls_log2TrSize_ap_vld_r <= 0;
        init_intra_neighbors_hls_bNeighborFlags_0_o_r <= 0;
        init_intra_neighbors_hls_bNeighborFlags_1_o_r <= 0;
        init_intra_neighbors_hls_bNeighborFlags_2_o_r <= 0;
        init_intra_neighbors_hls_bNeighborFlags_0_o_ap_vld_r <= 0;
        init_intra_neighbors_hls_bNeighborFlags_1_o_ap_vld_r <= 0;
        init_intra_neighbors_hls_bNeighborFlags_2_o_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_numIntraNeighbor_c_r <= 0;
        init_intra_neighbors_chroma_hls_numIntraNeighbor_c_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_totalUnits_c_r <= 0;
        init_intra_neighbors_chroma_hls_totalUnits_c_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_aboveUnits_c_r <= 0;
        init_intra_neighbors_chroma_hls_aboveUnits_c_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_leftUnits_c_r <= 0;
        init_intra_neighbors_chroma_hls_leftUnits_c_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_unitWidth_c_r <= 0;
        init_intra_neighbors_chroma_hls_unitWidth_c_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_unitHeight_c_r <= 0;
        init_intra_neighbors_chroma_hls_unitHeight_c_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_log2TrSize_c_r <= 0;
        init_intra_neighbors_chroma_hls_log2TrSize_c_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_r <= 0;
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_r <= 0;
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_r <= 0;
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_ap_vld_r <= 0;
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_ap_vld_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_up_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_up_ap_vld_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_left_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_left_ap_vld_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_up_left_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_up_left_ap_vld_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_up_right_sap_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_up_right_sap_ap_vld_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_up_right_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_up_right_ap_vld_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_bottom_left_r <= 0;
        ff_hevc_set_neighbour_available_hls_cand_bottom_left_ap_vld_r <= 0;
        ff_hevc_set_neighbour_available_hls_nPbW_r <= 0;
        ff_hevc_set_neighbour_available_hls_nPbW_ap_vld_r <= 0;
        ff_hevc_set_neighbour_available_hls_nPbH_r <= 0;
        ff_hevc_set_neighbour_available_hls_nPbH_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_0_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_0_o_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_1_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_1_o_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_2_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_2_o_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_3_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_3_o_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_4_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_4_o_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_5_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_5_o_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_6_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_6_o_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_7_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_7_o_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_8_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_8_o_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_9_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_9_o_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_10_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_10_o_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_11_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_11_o_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_12_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_12_o_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_13_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_13_o_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_14_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_14_o_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_15_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_15_o_ap_vld_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_16_o_r <= 0;
        intra_prediction_unit_default_value_hls_predColBuf_16_o_ap_vld_r <= 0;
        luma_mc_uni_libx265_hls_dst_depth_r      <= 0;
        luma_mc_uni_libx265_hls_dst_depth_ap_vld_r <= 0;
        chroma_mc_uni_libx265_hls_xm_buf_linesize_r <= 0;
        chroma_mc_uni_libx265_hls_xm_buf_linesize_ap_vld_r <= 0;
        chroma_mc_uni_libx265_hls_dst_depth_r    <= 0;
        chroma_mc_uni_libx265_hls_dst_depth_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_abs_0_0_o_r <= 0;
        sao_param_hls_curr_sao_offset_abs_0_0_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_abs_0_1_o_r <= 0;
        sao_param_hls_curr_sao_offset_abs_0_1_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_abs_0_2_o_r <= 0;
        sao_param_hls_curr_sao_offset_abs_0_2_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_abs_0_3_o_r <= 0;
        sao_param_hls_curr_sao_offset_abs_0_3_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_abs_1_0_o_r <= 0;
        sao_param_hls_curr_sao_offset_abs_1_0_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_abs_1_1_o_r <= 0;
        sao_param_hls_curr_sao_offset_abs_1_1_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_abs_1_2_o_r <= 0;
        sao_param_hls_curr_sao_offset_abs_1_2_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_abs_1_3_o_r <= 0;
        sao_param_hls_curr_sao_offset_abs_1_3_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_abs_2_0_o_r <= 0;
        sao_param_hls_curr_sao_offset_abs_2_0_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_abs_2_1_o_r <= 0;
        sao_param_hls_curr_sao_offset_abs_2_1_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_abs_2_2_o_r <= 0;
        sao_param_hls_curr_sao_offset_abs_2_2_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_abs_2_3_o_r <= 0;
        sao_param_hls_curr_sao_offset_abs_2_3_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_sign_0_0_o_r <= 0;
        sao_param_hls_curr_sao_offset_sign_0_0_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_sign_0_1_o_r <= 0;
        sao_param_hls_curr_sao_offset_sign_0_1_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_sign_0_2_o_r <= 0;
        sao_param_hls_curr_sao_offset_sign_0_2_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_sign_0_3_o_r <= 0;
        sao_param_hls_curr_sao_offset_sign_0_3_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_sign_1_0_o_r <= 0;
        sao_param_hls_curr_sao_offset_sign_1_0_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_sign_1_1_o_r <= 0;
        sao_param_hls_curr_sao_offset_sign_1_1_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_sign_1_2_o_r <= 0;
        sao_param_hls_curr_sao_offset_sign_1_2_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_sign_1_3_o_r <= 0;
        sao_param_hls_curr_sao_offset_sign_1_3_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_sign_2_0_o_r <= 0;
        sao_param_hls_curr_sao_offset_sign_2_0_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_sign_2_1_o_r <= 0;
        sao_param_hls_curr_sao_offset_sign_2_1_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_sign_2_2_o_r <= 0;
        sao_param_hls_curr_sao_offset_sign_2_2_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_sign_2_3_o_r <= 0;
        sao_param_hls_curr_sao_offset_sign_2_3_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_band_position_0_r <= 0;
        sao_param_hls_curr_sao_band_position_0_ap_vld_r <= 0;
        sao_param_hls_curr_sao_band_position_1_r <= 0;
        sao_param_hls_curr_sao_band_position_1_ap_vld_r <= 0;
        sao_param_hls_curr_sao_band_position_2_r <= 0;
        sao_param_hls_curr_sao_band_position_2_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_val_0_0_r  <= 0;
        sao_param_hls_curr_sao_offset_val_0_0_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_val_0_1_o_r <= 0;
        sao_param_hls_curr_sao_offset_val_0_1_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_val_0_2_o_r <= 0;
        sao_param_hls_curr_sao_offset_val_0_2_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_val_0_3_o_r <= 0;
        sao_param_hls_curr_sao_offset_val_0_3_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_val_0_4_o_r <= 0;
        sao_param_hls_curr_sao_offset_val_0_4_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_val_1_0_r  <= 0;
        sao_param_hls_curr_sao_offset_val_1_0_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_val_1_1_o_r <= 0;
        sao_param_hls_curr_sao_offset_val_1_1_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_val_1_2_o_r <= 0;
        sao_param_hls_curr_sao_offset_val_1_2_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_val_1_3_o_r <= 0;
        sao_param_hls_curr_sao_offset_val_1_3_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_val_1_4_o_r <= 0;
        sao_param_hls_curr_sao_offset_val_1_4_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_val_2_0_r  <= 0;
        sao_param_hls_curr_sao_offset_val_2_0_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_val_2_1_o_r <= 0;
        sao_param_hls_curr_sao_offset_val_2_1_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_val_2_2_o_r <= 0;
        sao_param_hls_curr_sao_offset_val_2_2_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_val_2_3_o_r <= 0;
        sao_param_hls_curr_sao_offset_val_2_3_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_offset_val_2_4_o_r <= 0;
        sao_param_hls_curr_sao_offset_val_2_4_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_eo_class_0_r      <= 0;
        sao_param_hls_curr_sao_eo_class_0_ap_vld_r <= 0;
        sao_param_hls_curr_sao_eo_class_1_o_r    <= 0;
        sao_param_hls_curr_sao_eo_class_1_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_eo_class_2_r      <= 0;
        sao_param_hls_curr_sao_eo_class_2_ap_vld_r <= 0;
        sao_param_hls_curr_sao_type_idx_0_o_r    <= 0;
        sao_param_hls_curr_sao_type_idx_0_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_type_idx_1_o_r    <= 0;
        sao_param_hls_curr_sao_type_idx_1_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_type_idx_2_o_r    <= 0;
        sao_param_hls_curr_sao_type_idx_2_o_ap_vld_r <= 0;
        sao_param_hls_curr_sao_sao_merge_left_flag_r <= 0;
        sao_param_hls_curr_sao_sao_merge_left_flag_ap_vld_r <= 0;
        sao_param_hls_curr_sao_sao_merge_up_flag_r <= 0;
        sao_param_hls_curr_sao_sao_merge_up_flag_ap_vld_r <= 0;
        mv_mp_mode_mx_hls_mxx_x_r                <= 0;
        mv_mp_mode_mx_hls_mxx_x_ap_vld_r         <= 0;
        mv_mp_mode_mx_hls_mxx_y_r                <= 0;
        mv_mp_mode_mx_hls_mxx_y_ap_vld_r         <= 0;
        mv_mp_mode_mx_lt_hls_mxx_x_r             <= 0;
        mv_mp_mode_mx_lt_hls_mxx_x_ap_vld_r      <= 0;
        mv_mp_mode_mx_lt_hls_mxx_y_r             <= 0;
        mv_mp_mode_mx_lt_hls_mxx_y_ap_vld_r      <= 0;
        temporal_luma_motion_vector_hls_mvLXCol_x_r <= 0;
        temporal_luma_motion_vector_hls_mvLXCol_x_ap_vld_r <= 0;
        temporal_luma_motion_vector_hls_mvLXCol_y_r <= 0;
        temporal_luma_motion_vector_hls_mvLXCol_y_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_0_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_0_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_1_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_1_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_2_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_2_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_3_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_3_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_4_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_4_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_0_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_0_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_1_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_1_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_2_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_2_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_3_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_3_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_4_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_4_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_0_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_0_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_1_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_1_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_2_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_2_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_3_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_3_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_4_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_4_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_0_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_0_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_1_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_1_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_2_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_2_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_3_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_3_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_4_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_4_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_0_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_0_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_1_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_1_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_2_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_2_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_3_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_3_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_4_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_4_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_0_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_0_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_1_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_1_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_2_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_2_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_3_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_3_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_4_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_4_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_0_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_0_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_1_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_1_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_2_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_2_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_3_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_3_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_4_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_4_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_0_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_0_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_1_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_1_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_2_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_2_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_3_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_3_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_4_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_4_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_0_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_0_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_1_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_1_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_2_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_2_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_3_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_3_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_4_r <= 0;
        append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_4_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_o_r <= 0;
        append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_o_ap_vld_r <= 0;
        append_zero_motion_vector_candidates_hls_zero_idx_o_r <= 0;
        append_zero_motion_vector_candidates_hls_zero_idx_o_ap_vld_r <= 0;
        merge_mode_exit_hls_current_mv_pred_flag_r <= 0;
        merge_mode_exit_hls_current_mv_pred_flag_ap_vld_r <= 0;
        merge_mode_exit_hls_current_mv_mv_0_x_r  <= 0;
        merge_mode_exit_hls_current_mv_mv_0_x_ap_vld_r <= 0;
        merge_mode_exit_hls_current_mv_mv_0_y_r  <= 0;
        merge_mode_exit_hls_current_mv_mv_0_y_ap_vld_r <= 0;
        merge_mode_exit_hls_current_mv_mv_1_x_r  <= 0;
        merge_mode_exit_hls_current_mv_mv_1_x_ap_vld_r <= 0;
        merge_mode_exit_hls_current_mv_mv_1_y_r  <= 0;
        merge_mode_exit_hls_current_mv_mv_1_y_ap_vld_r <= 0;
        merge_mode_exit_hls_current_mv_poc_0_r   <= 0;
        merge_mode_exit_hls_current_mv_poc_0_ap_vld_r <= 0;
        merge_mode_exit_hls_current_mv_poc_1_r   <= 0;
        merge_mode_exit_hls_current_mv_poc_1_ap_vld_r <= 0;
        merge_mode_exit_hls_current_mv_ref_idx_0_r <= 0;
        merge_mode_exit_hls_current_mv_ref_idx_0_ap_vld_r <= 0;
        merge_mode_exit_hls_current_mv_ref_idx_1_r <= 0;
        merge_mode_exit_hls_current_mv_ref_idx_1_ap_vld_r <= 0;
        merge_mode_exit_hls_mergecand_list_pred_flag_0_o_r <= 0;
        merge_mode_exit_hls_mergecand_list_pred_flag_0_o_ap_vld_r <= 0;
        merge_mode_exit_hls_mergecand_list_pred_flag_1_o_r <= 0;
        merge_mode_exit_hls_mergecand_list_pred_flag_1_o_ap_vld_r <= 0;
        merge_mode_exit_hls_mergecand_list_pred_flag_2_o_r <= 0;
        merge_mode_exit_hls_mergecand_list_pred_flag_2_o_ap_vld_r <= 0;
        merge_mode_exit_hls_mergecand_list_pred_flag_3_o_r <= 0;
        merge_mode_exit_hls_mergecand_list_pred_flag_3_o_ap_vld_r <= 0;
        merge_mode_exit_hls_mergecand_list_pred_flag_4_o_r <= 0;
        merge_mode_exit_hls_mergecand_list_pred_flag_4_o_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_pred_flag_0_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_pred_flag_0_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_pred_flag_1_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_pred_flag_1_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_pred_flag_2_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_pred_flag_2_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_pred_flag_3_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_pred_flag_3_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_pred_flag_4_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_pred_flag_4_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_x_0_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_x_0_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_x_1_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_x_1_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_x_2_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_x_2_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_x_3_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_x_3_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_x_4_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_x_4_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_y_0_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_y_0_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_y_1_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_y_1_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_y_2_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_y_2_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_y_3_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_y_3_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_y_4_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv0_y_4_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_x_0_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_x_0_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_x_1_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_x_1_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_x_2_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_x_2_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_x_3_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_x_3_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_x_4_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_x_4_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_y_0_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_y_0_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_y_1_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_y_1_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_y_2_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_y_2_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_y_3_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_y_3_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_y_4_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_mv1_y_4_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc0_0_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc0_0_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc0_1_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc0_1_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc0_2_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc0_2_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc0_3_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc0_3_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc0_4_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc0_4_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc1_0_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc1_0_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc1_1_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc1_1_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc1_2_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc1_2_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc1_3_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc1_3_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc1_4_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_poc1_4_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx0_0_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx0_0_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx0_1_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx0_1_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx0_2_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx0_2_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx0_3_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx0_3_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx0_4_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx0_4_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx1_0_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx1_0_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx1_1_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx1_1_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx1_2_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx1_2_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx1_3_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx1_3_ap_vld_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx1_4_r <= 0;
        set_to_mergecand_list_hls_mergecand_list_ref_idx1_4_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_4_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_4_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_4_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_4_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_4_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_4_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_4_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_4_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_4_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_4_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_4_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_4_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_4_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_4_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_4_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_4_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_o_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_4_r <= 0;
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_4_ap_vld_r <= 0;
        combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_o_r <= 0;
        combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_o_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_o_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_o_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_zero_idx_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_zero_idx_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_nPbW_o_r  <= 0;
        ff_hevc_luma_mv_merge_mode_hls_nPbW_o_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_nPbH_o_r  <= 0;
        ff_hevc_luma_mv_merge_mode_hls_nPbH_o_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_xm_x0_o_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_xm_x0_o_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_xm_y0_o_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_xm_y0_o_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_xm_dbg_r  <= 0;
        ff_hevc_luma_mv_merge_mode_hls_xm_dbg_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_0_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_0_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_1_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_1_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_2_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_2_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_3_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_3_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_4_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_4_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_0_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_0_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_1_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_1_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_2_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_2_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_3_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_3_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_4_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_4_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_0_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_0_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_1_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_1_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_2_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_2_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_3_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_3_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_4_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_4_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_0_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_0_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_1_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_1_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_2_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_2_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_3_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_3_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_4_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_4_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_0_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_0_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_1_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_1_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_2_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_2_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_3_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_3_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_4_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_4_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_0_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_0_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_1_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_1_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_2_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_2_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_3_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_3_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_4_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_4_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_0_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_0_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_1_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_1_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_2_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_2_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_3_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_3_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_4_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_4_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_0_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_0_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_1_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_1_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_2_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_2_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_3_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_3_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_4_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_4_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_0_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_0_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_1_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_1_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_2_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_2_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_3_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_3_ap_vld_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_4_r <= 0;
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_4_ap_vld_r <= 0;
        ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_x_r <= 0;
        ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_x_ap_vld_r <= 0;
        ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_y_r <= 0;
        ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_y_ap_vld_r <= 0;
        ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_x_r <= 0;
        ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_x_ap_vld_r <= 0;
        ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_y_r <= 0;
        ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_y_ap_vld_r <= 0;
        ff_hevc_luma_mv_mvp_mode_hls_xm_dbg_r    <= 0;
        ff_hevc_luma_mv_mvp_mode_hls_xm_dbg_ap_vld_r <= 0;
        hls_prediction_unit_hls_current_mv_mv_0_x_o_r <= 0;
        hls_prediction_unit_hls_current_mv_mv_0_x_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_current_mv_mv_0_y_o_r <= 0;
        hls_prediction_unit_hls_current_mv_mv_0_y_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_current_mv_mv_1_x_o_r <= 0;
        hls_prediction_unit_hls_current_mv_mv_1_x_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_current_mv_mv_1_y_o_r <= 0;
        hls_prediction_unit_hls_current_mv_mv_1_y_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_current_mv_poc_0_r <= 0;
        hls_prediction_unit_hls_current_mv_poc_0_ap_vld_r <= 0;
        hls_prediction_unit_hls_current_mv_poc_1_r <= 0;
        hls_prediction_unit_hls_current_mv_poc_1_ap_vld_r <= 0;
        hls_prediction_unit_hls_current_mv_ref_idx_0_o_r <= 0;
        hls_prediction_unit_hls_current_mv_ref_idx_0_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_current_mv_ref_idx_1_o_r <= 0;
        hls_prediction_unit_hls_current_mv_ref_idx_1_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_current_mv_pred_flag_o_r <= 0;
        hls_prediction_unit_hls_current_mv_pred_flag_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_merge_idx_r      <= 0;
        hls_prediction_unit_hls_merge_idx_ap_vld_r <= 0;
        hls_prediction_unit_hls_mvp_lx_flag_r    <= 0;
        hls_prediction_unit_hls_mvp_lx_flag_ap_vld_r <= 0;
        hls_prediction_unit_hls_pu_mvd_x_r       <= 0;
        hls_prediction_unit_hls_pu_mvd_x_ap_vld_r <= 0;
        hls_prediction_unit_hls_pu_mvd_y_r       <= 0;
        hls_prediction_unit_hls_pu_mvd_y_ap_vld_r <= 0;
        hls_prediction_unit_hls_merge_flag_r     <= 0;
        hls_prediction_unit_hls_merge_flag_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_0_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_0_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_1_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_1_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_2_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_2_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_3_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_3_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_4_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_4_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_5_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_5_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_6_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_6_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_7_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_7_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_8_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_8_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_9_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_9_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_10_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_10_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_11_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_11_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_12_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_12_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_13_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_13_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_14_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_14_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_15_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_15_o_ap_vld_r <= 0;
        hls_prediction_unit_hls_predColBuf_16_o_r <= 0;
        hls_prediction_unit_hls_predColBuf_16_o_ap_vld_r <= 0;
        innerloop_ff_hevc_extract_rbsp_1_hls_ready_r <= 1;
        innerloop_ff_hevc_extract_rbsp_2_hls_ready_r <= 1;
        fill_ref_samples_mtdma_top_wrp_ready_r   <= 1;
        hevc_find_frame_end_hls_ready_r          <= 1;
        intra_prediction_unit_ex_hls_ready_r     <= 1;
        hls_transform_unit_ex_hls_ready_r        <= 1;
        hls_transform_unit_ex_hls_dup1_ready_r   <= 1;
        hls_transform_unit_ex_hls_dup2_ready_r   <= 1;
        hls_transform_unit_ex_hls_dup3_ready_r   <= 1;
        hls_transform_tree_hls_ready_r           <= 1;
        hls_transform_tree_hls_dup1_ready_r      <= 1;
        hls_transform_tree_hls_dup2_ready_r      <= 1;
        hls_transform_tree_hls_dup3_ready_r      <= 1;
        hls_coding_quadtree_hls_ready_r          <= 1;
        hls_coding_quadtree_hls_dup1_ready_r     <= 1;
        hls_coding_quadtree_hls_dup2_ready_r     <= 1;
        hls_coding_quadtree_hls_dup3_ready_r     <= 1;
        hls_coding_unit_hls_ready_r              <= 1;
        hls_coding_unit_hls_dup1_ready_r         <= 1;
        hls_coding_unit_hls_dup2_ready_r         <= 1;
        hls_coding_unit_hls_dup3_ready_r         <= 1;
        copy_top_left_pixel_hls_ready_r          <= 1;
        genPredCol_hls_ready_r                   <= 1;
        ff_hevc_get_sub_cu_zscan_id_hls_ready_r  <= 1;
        ff_hevc_skip_flag_decode_hls_ready_r     <= 1;
        ff_hevc_set_qPy_hls_ready_r              <= 1;
        ff_hevc_deblocking_boundary_strengths_hls_ready_r <= 1;
        hls_decode_neighbour_hls_ready_r         <= 1;
        set_tab_mvf_pred_flag_hls_ready_r        <= 1;
        init_intra_neighbors_hls_ready_r         <= 1;
        init_intra_neighbors_chroma_hls_ready_r  <= 1;
        ff_hevc_set_neighbour_available_hls_ready_r <= 1;
        intra_prediction_unit_default_value_hls_ready_r <= 1;
        z_scan_block_avail_hls_ready_r           <= 1;
        luma_mc_uni_libx265_hls_ready_r          <= 1;
        chroma_mc_uni_libx265_hls_ready_r        <= 1;
        sao_param_hls_ready_r                    <= 1;
        xmem_copy_mvfield_hls_ready_r            <= 1;
        intra_pred_libx265_hls_ready_r           <= 1;
        mv_mp_mode_mx_hls_ready_r                <= 1;
        mv_mp_mode_mx_lt_hls_ready_r             <= 1;
        temporal_luma_motion_vector_hls_ready_r  <= 1;
        is_diff_mer_hls_ready_r                  <= 1;
        append_zero_motion_vector_candidates_hls_ready_r <= 1;
        merge_mode_exit_hls_ready_r              <= 1;
        set_to_mergecand_list_hls_ready_r        <= 1;
        compare_mv_ref_idx_hls_ready_r           <= 1;
        combined_bi_predictive_merge_candidates_hls_ready_r <= 1;
        ff_hevc_luma_mv_merge_mode_hls_ready_r   <= 1;
        ff_hevc_luma_mv_mvp_mode_hls_ready_r     <= 1;
        hls_prediction_unit_hls_ready_r          <= 1;

    end 
    else begin
        ap_part_r               <= ap_part_w;
        ap_arb_start_r          <= ap_arb_start;
        ap_arb_start_2r         <= ap_arb_start_r;
        ap_arb_start_running_r	<= ap_arb_start_running;
        ap_arb_ret_r            <= ap_arb_ret;
        ap_arb_ret_2r           <= ap_arb_ret_r;
        ap_arb_ret_running_r    <= ap_arb_ret_running;
        ap_arb_reload_r         <= ap_arb_reload;
        ap_arb_reload_running_r <= ap_arb_reload_running;
        ap_running_r            <= ap_running;
        ap_start_r              <= ap_start;
        ap_ready_r              <= ap_ready;
        ap_done_r               <= ap_done;
        array_adr_r             <= array_adr;
        scalar_argdone_r        <= scalar_argdone;
        scalar_argdone_all_r    <= scalar_argdone_all;
        scalar_argVld_r         <= scalar_argVld;
        scalar_argVld_all_r     <= scalar_argVld_all;
		scalar_argAck_r			<= scalar_argAck;
		scalar_argAckdone_r		<= scalar_argAckdone;
		scalar_argAckdone_all_r <= scalar_argAckdone_all;
		scalar_rdat_vld_r		<= scalar_rdat_vld;
        array_argdone_r         <= array_argdone;
        array_argVld_r          <= array_argVld;
        cyclic_argdone_r        <= cyclic_argdone;
        cyclic_argVld_r         <= cyclic_argVld;
        
    //============================================================
    //innerloop_ff_hevc_extract_rbsp_1_hls       (f = 1)
    //============================================================
`ifdef enable_connect_innerloop_ff_hevc_extract_rbsp_1_hls
    //------READ (scalar, global adr = 640) always block-----//
    //s = 0; r = 0; a = 30;
    if (scalar_rdat_vld[0][0][30]) begin
        innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_r <= scalar_rdat  [0][0][30];    //bidir
    end
    //------WRITE (scalar, global adr = 640) always block-----//
    //s = 0; r = 0; a = 10;
    innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_ap_vld_r <= innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_ap_vld;
    if (innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_ap_vld) begin
        innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_r <= innerloop_ff_hevc_extract_rbsp_1_hls_zero_o;
    end
    //------READ (scalar, global adr = 1120) always block-----//
    //s = 24; r = 0; a = 23;
    if (scalar_rdat_vld[24][0][23]) begin
        innerloop_ff_hevc_extract_rbsp_1_hls_loop_init <= scalar_rdat  [24][0][23];
    end
    //------READ (scalar, global adr = 1128) always block-----//
    //s = 26; r = 0; a = 28;
    if (scalar_rdat_vld[26][0][28]) begin
        innerloop_ff_hevc_extract_rbsp_1_hls_loop_len <= scalar_rdat  [26][0][28];
    end
    //------READ (scalar, global adr = 1124) always block-----//
    //s = 25; r = 1; a = 19;
    if (scalar_rdat_vld[25][1][19]) begin
        innerloop_ff_hevc_extract_rbsp_1_hls_loop_inc <= scalar_rdat  [25][1][19];
    end
    //------WRITE (scalar, global adr = 1132) always block-----//
    //s = 27; r = 1; a = 9;
    innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_ap_vld_r <= innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_ap_vld;
    if (innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_ap_vld) begin
        innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_r <= innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt;
    end
`endif
    //============================================================
    //innerloop_ff_hevc_extract_rbsp_2_hls       (f = 2)
    //============================================================
`ifdef enable_connect_innerloop_ff_hevc_extract_rbsp_2_hls
    //------READ (scalar, global adr = 632) always block-----//
    //s = 30; r = 1; a = 16;
    if (scalar_rdat_vld[30][1][16]) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_r <= scalar_rdat  [30][1][16];    //bidir
    end
    //------WRITE (scalar, global adr = 632) always block-----//
    //s = 30; r = 1; a = 3;
    innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_ap_vld_r <= innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_ap_vld;
    if (innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_ap_vld) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_r <= innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o;
    end
    //------READ (scalar, global adr = 636) always block-----//
    //s = 31; r = 1; a = 33;
    if (scalar_rdat_vld[31][1][33]) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_r <= scalar_rdat  [31][1][33];    //bidir
    end
    //------WRITE (scalar, global adr = 636) always block-----//
    //s = 31; r = 0; a = 6;
    innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_ap_vld_r <= innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_ap_vld;
    if (innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_ap_vld) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_r <= innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o;
    end
    //------READ (scalar, global adr = 640) always block-----//
    //s = 0; r = 1; a = 30;
    if (scalar_rdat_vld[0][1][30]) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_r <= scalar_rdat  [0][1][30];    //bidir
    end
    //------WRITE (scalar, global adr = 640) always block-----//
    //s = 0; r = 1; a = 10;
    innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_ap_vld_r <= innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_ap_vld;
    if (innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_ap_vld) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_r <= innerloop_ff_hevc_extract_rbsp_2_hls_zero_o;
    end
    //------READ (scalar, global adr = 628) always block-----//
    //s = 29; r = 1; a = 31;
    if (scalar_rdat_vld[29][1][31]) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_r <= scalar_rdat  [29][1][31];    //bidir
    end
    //------WRITE (scalar, global adr = 628) always block-----//
    //s = 29; r = 1; a = 11;
    innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_ap_vld_r <= innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_ap_vld;
    if (innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_ap_vld) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_r <= innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o;
    end
    //------READ (scalar, global adr = 1120) always block-----//
    //s = 24; r = 1; a = 22;
    if (scalar_rdat_vld[24][1][22]) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_loop_init <= scalar_rdat  [24][1][22];
    end
    //------READ (scalar, global adr = 1128) always block-----//
    //s = 26; r = 1; a = 27;
    if (scalar_rdat_vld[26][1][27]) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_loop_len <= scalar_rdat  [26][1][27];
    end
    //------READ (scalar, global adr = 1124) always block-----//
    //s = 25; r = 0; a = 21;
    if (scalar_rdat_vld[25][0][21]) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_loop_inc <= scalar_rdat  [25][0][21];
    end
    //------WRITE (scalar, global adr = 1132) always block-----//
    //s = 27; r = 0; a = 10;
    innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_ap_vld_r <= innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_ap_vld;
    if (innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_ap_vld) begin
        innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_r <= innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt;
    end
`endif
    //============================================================
    //fill_ref_samples_mtdma_top_wrp       (f = 3)
    //============================================================
`ifdef enable_connect_fill_ref_samples_mtdma_top_wrp
    //------READ (scalar, global adr = 644) always block-----//
    //s = 1; r = 1; a = 12;
    if (scalar_rdat_vld[1][1][12]) begin
        fill_ref_samples_mtdma_top_wrp_numIntraNeighbor <= scalar_rdat  [1][1][12];
    end
    //------READ (scalar, global adr = 648) always block-----//
    //s = 2; r = 0; a = 10;
    if (scalar_rdat_vld[2][0][10]) begin
        fill_ref_samples_mtdma_top_wrp_totalUnits <= scalar_rdat  [2][0][10];
    end
    //------READ (scalar, global adr = 652) always block-----//
    //s = 3; r = 0; a = 11;
    if (scalar_rdat_vld[3][0][11]) begin
        fill_ref_samples_mtdma_top_wrp_aboveUnits <= scalar_rdat  [3][0][11];
    end
    //------READ (scalar, global adr = 656) always block-----//
    //s = 4; r = 1; a = 11;
    if (scalar_rdat_vld[4][1][11]) begin
        fill_ref_samples_mtdma_top_wrp_leftUnits <= scalar_rdat  [4][1][11];
    end
    //------READ (scalar, global adr = 660) always block-----//
    //s = 5; r = 1; a = 18;
    if (scalar_rdat_vld[5][1][18]) begin
        fill_ref_samples_mtdma_top_wrp_unitWidth <= scalar_rdat  [5][1][18];
    end
    //------READ (scalar, global adr = 664) always block-----//
    //s = 6; r = 1; a = 18;
    if (scalar_rdat_vld[6][1][18]) begin
        fill_ref_samples_mtdma_top_wrp_unitHeight <= scalar_rdat  [6][1][18];
    end
    //------READ (scalar, global adr = 668) always block-----//
    //s = 7; r = 1; a = 14;
    if (scalar_rdat_vld[7][1][14]) begin
        fill_ref_samples_mtdma_top_wrp_log2TrSize <= scalar_rdat  [7][1][14];
    end
    //------READ (scalar, global adr = 672) always block-----//
    //s = 8; r = 0; a = 20;
    if (scalar_rdat_vld[8][0][20]) begin
        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_0 <= scalar_rdat  [8][0][20];
    end
    //------READ (scalar, global adr = 672) always block-----//
    //s = 9; r = 0; a = 22;
    if (scalar_rdat_vld[9][0][22]) begin
        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_1 <= scalar_rdat  [9][0][22];
    end
    //------READ (scalar, global adr = 672) always block-----//
    //s = 10; r = 1; a = 16;
    if (scalar_rdat_vld[10][1][16]) begin
        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_2 <= scalar_rdat  [10][1][16];
    end
    //------READ (scalar, global adr = 684) always block-----//
    //s = 11; r = 0; a = 17;
    if (scalar_rdat_vld[11][0][17]) begin
        fill_ref_samples_mtdma_top_wrp_numIntraNeighbor_c <= scalar_rdat  [11][0][17];
    end
    //------READ (scalar, global adr = 688) always block-----//
    //s = 12; r = 0; a = 16;
    if (scalar_rdat_vld[12][0][16]) begin
        fill_ref_samples_mtdma_top_wrp_totalUnits_c <= scalar_rdat  [12][0][16];
    end
    //------READ (scalar, global adr = 692) always block-----//
    //s = 13; r = 0; a = 13;
    if (scalar_rdat_vld[13][0][13]) begin
        fill_ref_samples_mtdma_top_wrp_aboveUnits_c <= scalar_rdat  [13][0][13];
    end
    //------READ (scalar, global adr = 696) always block-----//
    //s = 14; r = 0; a = 16;
    if (scalar_rdat_vld[14][0][16]) begin
        fill_ref_samples_mtdma_top_wrp_leftUnits_c <= scalar_rdat  [14][0][16];
    end
    //------READ (scalar, global adr = 700) always block-----//
    //s = 15; r = 1; a = 14;
    if (scalar_rdat_vld[15][1][14]) begin
        fill_ref_samples_mtdma_top_wrp_unitWidth_c <= scalar_rdat  [15][1][14];
    end
    //------READ (scalar, global adr = 704) always block-----//
    //s = 16; r = 1; a = 8;
    if (scalar_rdat_vld[16][1][8]) begin
        fill_ref_samples_mtdma_top_wrp_unitHeight_c <= scalar_rdat  [16][1][8];
    end
    //------READ (scalar, global adr = 708) always block-----//
    //s = 17; r = 0; a = 12;
    if (scalar_rdat_vld[17][0][12]) begin
        fill_ref_samples_mtdma_top_wrp_log2TrSize_c <= scalar_rdat  [17][0][12];
    end
    //------READ (scalar, global adr = 712) always block-----//
    //s = 18; r = 1; a = 10;
    if (scalar_rdat_vld[18][1][10]) begin
        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_c_0 <= scalar_rdat  [18][1][10];
    end
    //------READ (scalar, global adr = 712) always block-----//
    //s = 19; r = 1; a = 11;
    if (scalar_rdat_vld[19][1][11]) begin
        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_c_1 <= scalar_rdat  [19][1][11];
    end
    //------READ (scalar, global adr = 712) always block-----//
    //s = 20; r = 0; a = 12;
    if (scalar_rdat_vld[20][0][12]) begin
        fill_ref_samples_mtdma_top_wrp_bNeighborFlags_c_2 <= scalar_rdat  [20][0][12];
    end
`endif
    //============================================================
    //hevc_find_frame_end_hls       (f = 4)
    //============================================================
`ifdef enable_connect_hevc_find_frame_end_hls
    //------READ (scalar, global adr = 0) always block-----//
    //s = 0; r = 0; a = 17;
    if (scalar_rdat_vld[0][0][17]) begin
        hevc_find_frame_end_hls_state64_0_o_r <= scalar_rdat  [0][0][17];    //bidir
    end
    //------READ (scalar, global adr = 0) always block-----//
    //s = 1; r = 1; a = 13;
    if (scalar_rdat_vld[1][1][13]) begin
        hevc_find_frame_end_hls_state64_1_o_r <= scalar_rdat  [1][1][13];    //bidir
    end
    //------WRITE (scalar, global adr = 0) always block-----//
    //s = 0; r = 1; a = 1;
    hevc_find_frame_end_hls_state64_0_o_ap_vld_r <= hevc_find_frame_end_hls_state64_0_o_ap_vld;
    if (hevc_find_frame_end_hls_state64_0_o_ap_vld) begin
        hevc_find_frame_end_hls_state64_0_o_r <= hevc_find_frame_end_hls_state64_0_o;
    end
    //------WRITE (scalar, global adr = 0) always block-----//
    //s = 1; r = 1; a = 1;
    hevc_find_frame_end_hls_state64_1_o_ap_vld_r <= hevc_find_frame_end_hls_state64_1_o_ap_vld;
    if (hevc_find_frame_end_hls_state64_1_o_ap_vld) begin
        hevc_find_frame_end_hls_state64_1_o_r <= hevc_find_frame_end_hls_state64_1_o;
    end
    //------READ (scalar, global adr = 8) always block-----//
    //s = 2; r = 1; a = 9;
    if (scalar_rdat_vld[2][1][9]) begin
        hevc_find_frame_end_hls_frame_start_found_o_r <= scalar_rdat  [2][1][9];    //bidir
    end
    //------WRITE (scalar, global adr = 8) always block-----//
    //s = 2; r = 0; a = 0;
    hevc_find_frame_end_hls_frame_start_found_o_ap_vld_r <= hevc_find_frame_end_hls_frame_start_found_o_ap_vld;
    if (hevc_find_frame_end_hls_frame_start_found_o_ap_vld) begin
        hevc_find_frame_end_hls_frame_start_found_o_r <= hevc_find_frame_end_hls_frame_start_found_o;
    end
`endif
    //============================================================
    //intra_prediction_unit_ex_hls       (f = 5)
    //============================================================
`ifdef enable_connect_intra_prediction_unit_ex_hls
    //------READ (scalar, complete partition, global adr = 520) always block-----//
    //s = 2; r = 1; a = 19;
    if (scalar_rdat_vld[2][1][19]) begin
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_r <= scalar_rdat  [2][1][19];
    end
    //------WRITE (scalar, complete partition, global adr = 520) always block -----//
    //s = 2; r = 1; a = 3;
    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_ap_vld_r <= intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_ap_vld;
    if (intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_ap_vld) begin
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_r <= intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o;
    end
    //------READ (scalar, complete partition, global adr = 521) always block-----//
    //s = 2; r = 0; a = 21;
    if (scalar_rdat_vld[2][0][21]) begin
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_r <= scalar_rdat  [2][0][21];
    end
    //------WRITE (scalar, complete partition, global adr = 521) always block -----//
    //s = 2; r = 0; a = 4;
    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_ap_vld_r <= intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_ap_vld;
    if (intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_ap_vld) begin
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_r <= intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o;
    end
    //------READ (scalar, complete partition, global adr = 522) always block-----//
    //s = 2; r = 1; a = 20;
    if (scalar_rdat_vld[2][1][20]) begin
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_r <= scalar_rdat  [2][1][20];
    end
    //------WRITE (scalar, complete partition, global adr = 522) always block -----//
    //s = 2; r = 1; a = 4;
    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_ap_vld_r <= intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_ap_vld;
    if (intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_ap_vld) begin
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_r <= intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o;
    end
    //------READ (scalar, complete partition, global adr = 523) always block-----//
    //s = 2; r = 0; a = 22;
    if (scalar_rdat_vld[2][0][22]) begin
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_r <= scalar_rdat  [2][0][22];
    end
    //------WRITE (scalar, complete partition, global adr = 523) always block -----//
    //s = 2; r = 0; a = 5;
    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_ap_vld_r <= intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_ap_vld;
    if (intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_ap_vld) begin
        intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_r <= intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o;
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 0; a = 28;
    if (scalar_rdat_vld[13][0][28]) begin
        intra_prediction_unit_ex_hls_part_mode <= scalar_rdat  [13][0][28];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 1; a = 19;
    if (scalar_rdat_vld[3][1][19]) begin
        intra_prediction_unit_ex_hls_min_pu_width <= scalar_rdat  [3][1][19];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 0; a = 33;
    if (scalar_rdat_vld[29][0][33]) begin
        intra_prediction_unit_ex_hls_log2_min_pu_size <= scalar_rdat  [29][0][33];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 30;
    if (scalar_rdat_vld[26][0][30]) begin
        intra_prediction_unit_ex_hls_log2_ctb_size <= scalar_rdat  [26][0][30];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 28;
    if (scalar_rdat_vld[23][1][28]) begin
        intra_prediction_unit_ex_hls_ctb_up_flag <= scalar_rdat  [23][1][28];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 23;
    if (scalar_rdat_vld[24][1][23]) begin
        intra_prediction_unit_ex_hls_ctb_left_flag <= scalar_rdat  [24][1][23];
    end
    //------READ (scalar, complete partition, global adr = 512) always block-----//
    //s = 0; r = 0; a = 31;
    if (scalar_rdat_vld[0][0][31]) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_r <= scalar_rdat  [0][0][31];
    end
    //------WRITE (scalar, complete partition, global adr = 512) always block -----//
    //s = 0; r = 0; a = 11;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_ap_vld_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o;
    end
    //------READ (scalar, complete partition, global adr = 513) always block-----//
    //s = 0; r = 1; a = 31;
    if (scalar_rdat_vld[0][1][31]) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_r <= scalar_rdat  [0][1][31];
    end
    //------WRITE (scalar, complete partition, global adr = 513) always block -----//
    //s = 0; r = 1; a = 11;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_ap_vld_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o;
    end
    //------READ (scalar, complete partition, global adr = 514) always block-----//
    //s = 0; r = 0; a = 32;
    if (scalar_rdat_vld[0][0][32]) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_r <= scalar_rdat  [0][0][32];
    end
    //------WRITE (scalar, complete partition, global adr = 514) always block -----//
    //s = 0; r = 0; a = 12;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_ap_vld_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o;
    end
    //------READ (scalar, complete partition, global adr = 515) always block-----//
    //s = 0; r = 1; a = 32;
    if (scalar_rdat_vld[0][1][32]) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_r <= scalar_rdat  [0][1][32];
    end
    //------WRITE (scalar, complete partition, global adr = 515) always block -----//
    //s = 0; r = 1; a = 12;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_ap_vld_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o;
    end
    //------WRITE (scalar, complete partition, global adr = 508) always block -----//
    //s = 31; r = 1; a = 6;
    intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_ap_vld_r <= intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_r <= intra_prediction_unit_ex_hls_pu_chroma_mode_c_0;
    end
    //------WRITE (scalar, complete partition, global adr = 509) always block -----//
    //s = 31; r = 0; a = 7;
    intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_ap_vld_r <= intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_r <= intra_prediction_unit_ex_hls_pu_chroma_mode_c_1;
    end
    //------WRITE (scalar, complete partition, global adr = 510) always block -----//
    //s = 31; r = 1; a = 7;
    intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_ap_vld_r <= intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_r <= intra_prediction_unit_ex_hls_pu_chroma_mode_c_2;
    end
    //------WRITE (scalar, complete partition, global adr = 511) always block -----//
    //s = 31; r = 0; a = 8;
    intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_ap_vld_r <= intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_r <= intra_prediction_unit_ex_hls_pu_chroma_mode_c_3;
    end
    //------WRITE (scalar, complete partition, global adr = 516) always block -----//
    //s = 1; r = 0; a = 5;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_ap_vld_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0;
    end
    //------WRITE (scalar, complete partition, global adr = 517) always block -----//
    //s = 1; r = 1; a = 5;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_ap_vld_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1;
    end
    //------WRITE (scalar, complete partition, global adr = 518) always block -----//
    //s = 1; r = 0; a = 6;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_ap_vld_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2;
    end
    //------WRITE (scalar, complete partition, global adr = 519) always block -----//
    //s = 1; r = 1; a = 6;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_ap_vld_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_ap_vld;
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_ap_vld) begin
        intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_r <= intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3;
    end
    //------READ (scalar, global adr = 324) always block-----//
    //s = 17; r = 0; a = 21;
    if (scalar_rdat_vld[17][0][21]) begin
        intra_prediction_unit_ex_hls_chroma_array_type <= scalar_rdat  [17][0][21];
    end
    //------WRITE (scalar, global adr = 576) always block-----//
    //s = 16; r = 1; a = 5;
    intra_prediction_unit_ex_hls_max_trafo_depth_ap_vld_r <= intra_prediction_unit_ex_hls_max_trafo_depth_ap_vld;
    if (intra_prediction_unit_ex_hls_max_trafo_depth_ap_vld) begin
        intra_prediction_unit_ex_hls_max_trafo_depth_r <= intra_prediction_unit_ex_hls_max_trafo_depth;
    end
    //------READ (scalar, global adr = 384) always block-----//
    //s = 0; r = 0; a = 33;
    if (scalar_rdat_vld[0][0][33]) begin
        intra_prediction_unit_ex_hls_max_transform_hierarchy_depth_intra <= scalar_rdat  [0][0][33];
    end
    //------READ (scalar, global adr = 568) always block-----//
    //s = 14; r = 0; a = 29;
    if (scalar_rdat_vld[14][0][29]) begin
        intra_prediction_unit_ex_hls_intra_split_flag <= scalar_rdat  [14][0][29];
    end
`endif
    //============================================================
    //hls_transform_unit_ex_hls       (f = 6)
    //============================================================
`ifdef enable_connect_hls_transform_unit_ex_hls
    //------READ (scalar, global adr = 20) always block-----//
    //s = 5; r = 0; a = 23;
    if (scalar_rdat_vld[5][0][23]) begin
        hls_transform_unit_ex_hls_cbf_luma <= scalar_rdat  [5][0][23];
    end
    //------READ (scalar, global adr = 16) always block-----//
    //s = 4; r = 0; a = 16;
    if (scalar_rdat_vld[4][0][16]) begin
        hls_transform_unit_ex_hls_cbf_data <= scalar_rdat  [4][0][16];
    end
    //------READ (scalar, global adr = 1160) always block-----//
    //s = 2; r = 0; a = 16;
    if (scalar_rdat_vld[2][0][16]) begin
        hls_transform_unit_ex_hls_chroma_qp_offset_list_len_minus1 <= scalar_rdat  [2][0][16];
    end
    //------READ (scalar, global adr = 1136) always block-----//
    //s = 28; r = 0; a = 18;
    if (scalar_rdat_vld[28][0][18]) begin
        hls_transform_unit_ex_hls_qp_bd_offset <= scalar_rdat  [28][0][18];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 1; a = 24;
    if (scalar_rdat_vld[12][1][24]) begin
        hls_transform_unit_ex_hls_pred_mode <= scalar_rdat  [12][1][24];
    end
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 0; a = 16;
    if (scalar_rdat_vld[20][0][16]) begin
        hls_transform_unit_ex_hls_hshift_0 <= scalar_rdat  [20][0][16];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 0; a = 15;
    if (scalar_rdat_vld[21][0][15]) begin
        hls_transform_unit_ex_hls_hshift_1 <= scalar_rdat  [21][0][15];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 0; a = 21;
    if (scalar_rdat_vld[22][0][21]) begin
        hls_transform_unit_ex_hls_hshift_2 <= scalar_rdat  [22][0][21];
    end
    //------READ (scalar, complete partition, global adr = 348) always block-----//
    //s = 23; r = 0; a = 19;
    if (scalar_rdat_vld[23][0][19]) begin
        hls_transform_unit_ex_hls_vshift_0 <= scalar_rdat  [23][0][19];
    end
    //------READ (scalar, complete partition, global adr = 352) always block-----//
    //s = 24; r = 0; a = 15;
    if (scalar_rdat_vld[24][0][15]) begin
        hls_transform_unit_ex_hls_vshift_1 <= scalar_rdat  [24][0][15];
    end
    //------READ (scalar, complete partition, global adr = 356) always block-----//
    //s = 25; r = 1; a = 9;
    if (scalar_rdat_vld[25][1][9]) begin
        hls_transform_unit_ex_hls_vshift_2 <= scalar_rdat  [25][1][9];
    end
    //------READ (scalar, global adr = 484) always block-----//
    //s = 25; r = 0; a = 11;
    if (scalar_rdat_vld[25][0][11]) begin
        hls_transform_unit_ex_hls_tu_intra_pred_mode <= scalar_rdat  [25][0][11];
    end
    //------READ (scalar, global adr = 488) always block-----//
    //s = 26; r = 0; a = 20;
    if (scalar_rdat_vld[26][0][20]) begin
        hls_transform_unit_ex_hls_tu_intra_pred_mode_c <= scalar_rdat  [26][0][20];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 22;
    if (scalar_rdat_vld[15][1][22]) begin
        hls_transform_unit_ex_hls_cu_transquant_bypass_flag <= scalar_rdat  [15][1][22];
    end
    //------WRITE (scalar, global adr = 492) always block-----//
    //s = 27; r = 1; a = 7;
    hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_ap_vld_r <= hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_ap_vld;
    if (hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_ap_vld) begin
        hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_r <= hls_transform_unit_ex_hls_tu_cu_qp_offset_cb;
    end
    //------WRITE (scalar, global adr = 496) always block-----//
    //s = 28; r = 1; a = 3;
    hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_ap_vld_r <= hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_ap_vld;
    if (hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_ap_vld) begin
        hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_r <= hls_transform_unit_ex_hls_tu_cu_qp_offset_cr;
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 28;
    if (scalar_rdat_vld[6][1][28]) begin
        hls_transform_unit_ex_hls_qp_y_o_r <= scalar_rdat  [6][1][28];    //bidir
    end
    //------WRITE (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 8;
    hls_transform_unit_ex_hls_qp_y_o_ap_vld_r <= hls_transform_unit_ex_hls_qp_y_o_ap_vld;
    if (hls_transform_unit_ex_hls_qp_y_o_ap_vld) begin
        hls_transform_unit_ex_hls_qp_y_o_r <= hls_transform_unit_ex_hls_qp_y_o;
    end
    //------WRITE (scalar, global adr = 168) always block-----//
    //s = 10; r = 1; a = 8;
    hls_transform_unit_ex_hls_log2_trafo_size_ap_vld_r <= hls_transform_unit_ex_hls_log2_trafo_size_ap_vld;
    if (hls_transform_unit_ex_hls_log2_trafo_size_ap_vld) begin
        hls_transform_unit_ex_hls_log2_trafo_size_r <= hls_transform_unit_ex_hls_log2_trafo_size;
    end
    //------READ (scalar, global adr = 56) always block-----//
    //s = 14; r = 1; a = 25;
    if (scalar_rdat_vld[14][1][25]) begin
        hls_transform_unit_ex_hls_log2_trafo_size_c_o_r <= scalar_rdat  [14][1][25];    //bidir
    end
    //------WRITE (scalar, global adr = 56) always block-----//
    //s = 14; r = 0; a = 8;
    hls_transform_unit_ex_hls_log2_trafo_size_c_o_ap_vld_r <= hls_transform_unit_ex_hls_log2_trafo_size_c_o_ap_vld;
    if (hls_transform_unit_ex_hls_log2_trafo_size_c_o_ap_vld) begin
        hls_transform_unit_ex_hls_log2_trafo_size_c_o_r <= hls_transform_unit_ex_hls_log2_trafo_size_c_o;
    end
    //------READ (scalar, global adr = 48) always block-----//
    //s = 12; r = 0; a = 26;
    if (scalar_rdat_vld[12][0][26]) begin
        hls_transform_unit_ex_hls_scan_idx_o_r <= scalar_rdat  [12][0][26];    //bidir
    end
    //------WRITE (scalar, global adr = 48) always block-----//
    //s = 12; r = 1; a = 7;
    hls_transform_unit_ex_hls_scan_idx_o_ap_vld_r <= hls_transform_unit_ex_hls_scan_idx_o_ap_vld;
    if (hls_transform_unit_ex_hls_scan_idx_o_ap_vld) begin
        hls_transform_unit_ex_hls_scan_idx_o_r <= hls_transform_unit_ex_hls_scan_idx_o;
    end
    //------WRITE (scalar, global adr = 52) always block-----//
    //s = 13; r = 1; a = 6;
    hls_transform_unit_ex_hls_scan_idx_c_ap_vld_r <= hls_transform_unit_ex_hls_scan_idx_c_ap_vld;
    if (hls_transform_unit_ex_hls_scan_idx_c_ap_vld) begin
        hls_transform_unit_ex_hls_scan_idx_c_r <= hls_transform_unit_ex_hls_scan_idx_c;
    end
    //------READ (scalar, global adr = 1140) always block-----//
    //s = 29; r = 1; a = 27;
    if (scalar_rdat_vld[29][1][27]) begin
        hls_transform_unit_ex_hls_cmdr_run_o_r <= scalar_rdat  [29][1][27];    //bidir
    end
    //------WRITE (scalar, global adr = 1140) always block-----//
    //s = 29; r = 1; a = 7;
    hls_transform_unit_ex_hls_cmdr_run_o_ap_vld_r <= hls_transform_unit_ex_hls_cmdr_run_o_ap_vld;
    if (hls_transform_unit_ex_hls_cmdr_run_o_ap_vld) begin
        hls_transform_unit_ex_hls_cmdr_run_o_r <= hls_transform_unit_ex_hls_cmdr_run_o;
    end
    //------READ (scalar, complete partition, global adr = 1244) always block-----//
    //s = 23; r = 1; a = 18;
    if (scalar_rdat_vld[23][1][18]) begin
        hls_transform_unit_ex_hls_buf_data_0 <= scalar_rdat  [23][1][18];
    end
    //------READ (scalar, complete partition, global adr = 1248) always block-----//
    //s = 24; r = 1; a = 14;
    if (scalar_rdat_vld[24][1][14]) begin
        hls_transform_unit_ex_hls_buf_data_1 <= scalar_rdat  [24][1][14];
    end
    //------READ (scalar, complete partition, global adr = 1252) always block-----//
    //s = 25; r = 1; a = 10;
    if (scalar_rdat_vld[25][1][10]) begin
        hls_transform_unit_ex_hls_buf_data_2 <= scalar_rdat  [25][1][10];
    end
    //------READ (scalar, complete partition, global adr = 1148) always block-----//
    //s = 31; r = 1; a = 31;
    if (scalar_rdat_vld[31][1][31]) begin
        hls_transform_unit_ex_hls_xm_linesize_0 <= scalar_rdat  [31][1][31];
    end
    //------READ (scalar, complete partition, global adr = 1152) always block-----//
    //s = 0; r = 0; a = 28;
    if (scalar_rdat_vld[0][0][28]) begin
        hls_transform_unit_ex_hls_xm_linesize_1 <= scalar_rdat  [0][0][28];
    end
    //------READ (scalar, complete partition, global adr = 1156) always block-----//
    //s = 1; r = 0; a = 26;
    if (scalar_rdat_vld[1][0][26]) begin
        hls_transform_unit_ex_hls_xm_linesize_2 <= scalar_rdat  [1][0][26];
    end
    //------READ (scalar, global adr = 1144) always block-----//
    //s = 30; r = 1; a = 13;
    if (scalar_rdat_vld[30][1][13]) begin
        hls_transform_unit_ex_hls_pixel_shift <= scalar_rdat  [30][1][13];
    end
    //------WRITE (scalar, global adr = 160) always block-----//
    //s = 8; r = 0; a = 11;
    hls_transform_unit_ex_hls_nPbW_ap_vld_r <= hls_transform_unit_ex_hls_nPbW_ap_vld;
    if (hls_transform_unit_ex_hls_nPbW_ap_vld) begin
        hls_transform_unit_ex_hls_nPbW_r <= hls_transform_unit_ex_hls_nPbW;
    end
    //------WRITE (scalar, global adr = 164) always block-----//
    //s = 9; r = 0; a = 11;
    hls_transform_unit_ex_hls_nPbH_ap_vld_r <= hls_transform_unit_ex_hls_nPbH_ap_vld;
    if (hls_transform_unit_ex_hls_nPbH_ap_vld) begin
        hls_transform_unit_ex_hls_nPbH_r <= hls_transform_unit_ex_hls_nPbH;
    end
    //------WRITE (scalar, global adr = 580) always block-----//
    //s = 17; r = 0; a = 3;
    hls_transform_unit_ex_hls_cand_up_ap_vld_r <= hls_transform_unit_ex_hls_cand_up_ap_vld;
    if (hls_transform_unit_ex_hls_cand_up_ap_vld) begin
        hls_transform_unit_ex_hls_cand_up_r <= hls_transform_unit_ex_hls_cand_up;
    end
    //------WRITE (scalar, global adr = 584) always block-----//
    //s = 18; r = 0; a = 3;
    hls_transform_unit_ex_hls_cand_left_ap_vld_r <= hls_transform_unit_ex_hls_cand_left_ap_vld;
    if (hls_transform_unit_ex_hls_cand_left_ap_vld) begin
        hls_transform_unit_ex_hls_cand_left_r <= hls_transform_unit_ex_hls_cand_left;
    end
    //------WRITE (scalar, global adr = 588) always block-----//
    //s = 19; r = 0; a = 4;
    hls_transform_unit_ex_hls_cand_up_left_ap_vld_r <= hls_transform_unit_ex_hls_cand_up_left_ap_vld;
    if (hls_transform_unit_ex_hls_cand_up_left_ap_vld) begin
        hls_transform_unit_ex_hls_cand_up_left_r <= hls_transform_unit_ex_hls_cand_up_left;
    end
    //------WRITE (scalar, global adr = 592) always block-----//
    //s = 20; r = 0; a = 6;
    hls_transform_unit_ex_hls_cand_up_right_sap_ap_vld_r <= hls_transform_unit_ex_hls_cand_up_right_sap_ap_vld;
    if (hls_transform_unit_ex_hls_cand_up_right_sap_ap_vld) begin
        hls_transform_unit_ex_hls_cand_up_right_sap_r <= hls_transform_unit_ex_hls_cand_up_right_sap;
    end
    //------WRITE (scalar, global adr = 596) always block-----//
    //s = 21; r = 0; a = 5;
    hls_transform_unit_ex_hls_cand_up_right_ap_vld_r <= hls_transform_unit_ex_hls_cand_up_right_ap_vld;
    if (hls_transform_unit_ex_hls_cand_up_right_ap_vld) begin
        hls_transform_unit_ex_hls_cand_up_right_r <= hls_transform_unit_ex_hls_cand_up_right;
    end
    //------READ (scalar, global adr = 600) always block-----//
    //s = 22; r = 1; a = 20;
    if (scalar_rdat_vld[22][1][20]) begin
        hls_transform_unit_ex_hls_cand_bottom_left_o_r <= scalar_rdat  [22][1][20];    //bidir
    end
    //------WRITE (scalar, global adr = 600) always block-----//
    //s = 22; r = 0; a = 5;
    hls_transform_unit_ex_hls_cand_bottom_left_o_ap_vld_r <= hls_transform_unit_ex_hls_cand_bottom_left_o_ap_vld;
    if (hls_transform_unit_ex_hls_cand_bottom_left_o_ap_vld) begin
        hls_transform_unit_ex_hls_cand_bottom_left_o_r <= hls_transform_unit_ex_hls_cand_bottom_left_o;
    end
    //------WRITE (scalar, global adr = 1412) always block-----//
    //s = 1; r = 1; a = 2;
    hls_transform_unit_ex_hls_cand_up_c_ap_vld_r <= hls_transform_unit_ex_hls_cand_up_c_ap_vld;
    if (hls_transform_unit_ex_hls_cand_up_c_ap_vld) begin
        hls_transform_unit_ex_hls_cand_up_c_r <= hls_transform_unit_ex_hls_cand_up_c;
    end
    //------WRITE (scalar, global adr = 1416) always block-----//
    //s = 2; r = 0; a = 1;
    hls_transform_unit_ex_hls_cand_left_c_ap_vld_r <= hls_transform_unit_ex_hls_cand_left_c_ap_vld;
    if (hls_transform_unit_ex_hls_cand_left_c_ap_vld) begin
        hls_transform_unit_ex_hls_cand_left_c_r <= hls_transform_unit_ex_hls_cand_left_c;
    end
    //------WRITE (scalar, global adr = 1420) always block-----//
    //s = 3; r = 0; a = 2;
    hls_transform_unit_ex_hls_cand_up_left_c_ap_vld_r <= hls_transform_unit_ex_hls_cand_up_left_c_ap_vld;
    if (hls_transform_unit_ex_hls_cand_up_left_c_ap_vld) begin
        hls_transform_unit_ex_hls_cand_up_left_c_r <= hls_transform_unit_ex_hls_cand_up_left_c;
    end
    //------WRITE (scalar, global adr = 1424) always block-----//
    //s = 4; r = 0; a = 5;
    hls_transform_unit_ex_hls_cand_up_right_sap_c_ap_vld_r <= hls_transform_unit_ex_hls_cand_up_right_sap_c_ap_vld;
    if (hls_transform_unit_ex_hls_cand_up_right_sap_c_ap_vld) begin
        hls_transform_unit_ex_hls_cand_up_right_sap_c_r <= hls_transform_unit_ex_hls_cand_up_right_sap_c;
    end
    //------WRITE (scalar, global adr = 1428) always block-----//
    //s = 5; r = 0; a = 9;
    hls_transform_unit_ex_hls_cand_up_right_c_ap_vld_r <= hls_transform_unit_ex_hls_cand_up_right_c_ap_vld;
    if (hls_transform_unit_ex_hls_cand_up_right_c_ap_vld) begin
        hls_transform_unit_ex_hls_cand_up_right_c_r <= hls_transform_unit_ex_hls_cand_up_right_c;
    end
    //------READ (scalar, global adr = 1432) always block-----//
    //s = 6; r = 0; a = 30;
    if (scalar_rdat_vld[6][0][30]) begin
        hls_transform_unit_ex_hls_cand_bottom_left_c_o_r <= scalar_rdat  [6][0][30];    //bidir
    end
    //------WRITE (scalar, global adr = 1432) always block-----//
    //s = 6; r = 0; a = 9;
    hls_transform_unit_ex_hls_cand_bottom_left_c_o_ap_vld_r <= hls_transform_unit_ex_hls_cand_bottom_left_c_o_ap_vld;
    if (hls_transform_unit_ex_hls_cand_bottom_left_c_o_ap_vld) begin
        hls_transform_unit_ex_hls_cand_bottom_left_c_o_r <= hls_transform_unit_ex_hls_cand_bottom_left_c_o;
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 19;
    if (scalar_rdat_vld[26][1][19]) begin
        hls_transform_unit_ex_hls_log2_ctb_size <= scalar_rdat  [26][1][19];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 0; a = 20;
    if (scalar_rdat_vld[23][0][20]) begin
        hls_transform_unit_ex_hls_ctb_up_flag <= scalar_rdat  [23][0][20];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 0; a = 16;
    if (scalar_rdat_vld[24][0][16]) begin
        hls_transform_unit_ex_hls_ctb_left_flag <= scalar_rdat  [24][0][16];
    end
    //------READ (scalar, global adr = 612) always block-----//
    //s = 25; r = 0; a = 12;
    if (scalar_rdat_vld[25][0][12]) begin
        hls_transform_unit_ex_hls_ctb_up_left_flag <= scalar_rdat  [25][0][12];
    end
    //------READ (scalar, global adr = 616) always block-----//
    //s = 26; r = 0; a = 21;
    if (scalar_rdat_vld[26][0][21]) begin
        hls_transform_unit_ex_hls_ctb_up_right_flag <= scalar_rdat  [26][0][21];
    end
    //------READ (scalar, global adr = 620) always block-----//
    //s = 27; r = 0; a = 21;
    if (scalar_rdat_vld[27][0][21]) begin
        hls_transform_unit_ex_hls_end_of_tiles_x <= scalar_rdat  [27][0][21];
    end
    //------READ (scalar, global adr = 624) always block-----//
    //s = 28; r = 1; a = 18;
    if (scalar_rdat_vld[28][1][18]) begin
        hls_transform_unit_ex_hls_end_of_tiles_y <= scalar_rdat  [28][1][18];
    end
    //------READ (scalar, global adr = 472) always block-----//
    //s = 22; r = 0; a = 22;
    if (scalar_rdat_vld[22][0][22]) begin
        hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_r <= scalar_rdat  [22][0][22];    //bidir
    end
    //------WRITE (scalar, global adr = 472) always block-----//
    //s = 22; r = 1; a = 5;
    hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r <= hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_ap_vld;
    if (hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_ap_vld) begin
        hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_r <= hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o;
    end
    //------READ (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 19;
    if (scalar_rdat_vld[23][1][19]) begin
        hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_r <= scalar_rdat  [23][1][19];    //bidir
    end
    //------WRITE (scalar, global adr = 476) always block-----//
    //s = 23; r = 0; a = 5;
    hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_ap_vld_r <= hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_ap_vld;
    if (hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_ap_vld) begin
        hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_r <= hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o;
    end
    //------WRITE (scalar, global adr = 468) always block-----//
    //s = 21; r = 1; a = 5;
    hls_transform_unit_ex_hls_tu_cu_qp_delta_ap_vld_r <= hls_transform_unit_ex_hls_tu_cu_qp_delta_ap_vld;
    if (hls_transform_unit_ex_hls_tu_cu_qp_delta_ap_vld) begin
        hls_transform_unit_ex_hls_tu_cu_qp_delta_r <= hls_transform_unit_ex_hls_tu_cu_qp_delta;
    end
    //------WRITE (scalar, global adr = 500) always block-----//
    //s = 29; r = 0; a = 8;
    hls_transform_unit_ex_hls_tu_cross_pf_ap_vld_r <= hls_transform_unit_ex_hls_tu_cross_pf_ap_vld;
    if (hls_transform_unit_ex_hls_tu_cross_pf_ap_vld) begin
        hls_transform_unit_ex_hls_tu_cross_pf_r <= hls_transform_unit_ex_hls_tu_cross_pf;
    end
    //------READ (scalar, global adr = 532) always block-----//
    //s = 5; r = 1; a = 22;
    if (scalar_rdat_vld[5][1][22]) begin
        hls_transform_unit_ex_hls_first_qp_group_o_r <= scalar_rdat  [5][1][22];    //bidir
    end
    //------WRITE (scalar, global adr = 532) always block-----//
    //s = 5; r = 1; a = 9;
    hls_transform_unit_ex_hls_first_qp_group_o_ap_vld_r <= hls_transform_unit_ex_hls_first_qp_group_o_ap_vld;
    if (hls_transform_unit_ex_hls_first_qp_group_o_ap_vld) begin
        hls_transform_unit_ex_hls_first_qp_group_o_r <= hls_transform_unit_ex_hls_first_qp_group_o;
    end
    //------READ (scalar, global adr = 328) always block-----//
    //s = 18; r = 0; a = 15;
    if (scalar_rdat_vld[18][0][15]) begin
        hls_transform_unit_ex_hls_chroma_format_idc <= scalar_rdat  [18][0][15];
    end
    //------READ (scalar, global adr = 448) always block-----//
    //s = 16; r = 0; a = 17;
    if (scalar_rdat_vld[16][0][17]) begin
        hls_transform_unit_ex_hls_cu_chroma_qp_offset_enabled_flag <= scalar_rdat  [16][0][17];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 0; a = 28;
    if (scalar_rdat_vld[11][0][28]) begin
        hls_transform_unit_ex_hls_cu_qp_delta_enabled_flag <= scalar_rdat  [11][0][28];
    end
    //------READ (scalar, global adr = 540) always block-----//
    //s = 7; r = 0; a = 21;
    if (scalar_rdat_vld[7][0][21]) begin
        hls_transform_unit_ex_hls_qPy_pred <= scalar_rdat  [7][0][21];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 1; a = 24;
    if (scalar_rdat_vld[13][1][24]) begin
        hls_transform_unit_ex_hls_diff_cu_qp_delta_depth <= scalar_rdat  [13][1][24];
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 0; a = 19;
    if (scalar_rdat_vld[28][0][19]) begin
        hls_transform_unit_ex_hls_log2_min_cb_size <= scalar_rdat  [28][0][19];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 1; a = 15;
    if (scalar_rdat_vld[2][1][15]) begin
        hls_transform_unit_ex_hls_min_cb_width <= scalar_rdat  [2][1][15];
    end
    //------READ (scalar, global adr = 460) always block-----//
    //s = 19; r = 1; a = 17;
    if (scalar_rdat_vld[19][1][17]) begin
        hls_transform_unit_ex_hls_slice_qp <= scalar_rdat  [19][1][17];
    end
`endif
    //============================================================
    //hls_transform_unit_ex_hls_dup1       (f = 7)
    //============================================================
`ifdef enable_connect_hls_transform_unit_ex_hls_dup1
    //------READ (scalar, global adr = 20) always block-----//
    //s = 5; r = 0; a = 24;
    if (scalar_rdat_vld[5][0][24]) begin
        hls_transform_unit_ex_hls_dup1_cbf_luma <= scalar_rdat  [5][0][24];
    end
    //------READ (scalar, global adr = 16) always block-----//
    //s = 4; r = 1; a = 16;
    if (scalar_rdat_vld[4][1][16]) begin
        hls_transform_unit_ex_hls_dup1_cbf_data <= scalar_rdat  [4][1][16];
    end
    //------READ (scalar, global adr = 1160) always block-----//
    //s = 2; r = 0; a = 17;
    if (scalar_rdat_vld[2][0][17]) begin
        hls_transform_unit_ex_hls_dup1_chroma_qp_offset_list_len_minus1 <= scalar_rdat  [2][0][17];
    end
    //------READ (scalar, global adr = 1136) always block-----//
    //s = 28; r = 1; a = 19;
    if (scalar_rdat_vld[28][1][19]) begin
        hls_transform_unit_ex_hls_dup1_qp_bd_offset <= scalar_rdat  [28][1][19];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 1; a = 25;
    if (scalar_rdat_vld[12][1][25]) begin
        hls_transform_unit_ex_hls_dup1_pred_mode <= scalar_rdat  [12][1][25];
    end
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 1; a = 16;
    if (scalar_rdat_vld[20][1][16]) begin
        hls_transform_unit_ex_hls_dup1_hshift_0 <= scalar_rdat  [20][1][16];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 1; a = 14;
    if (scalar_rdat_vld[21][1][14]) begin
        hls_transform_unit_ex_hls_dup1_hshift_1 <= scalar_rdat  [21][1][14];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 1; a = 21;
    if (scalar_rdat_vld[22][1][21]) begin
        hls_transform_unit_ex_hls_dup1_hshift_2 <= scalar_rdat  [22][1][21];
    end
    //------READ (scalar, complete partition, global adr = 348) always block-----//
    //s = 23; r = 0; a = 21;
    if (scalar_rdat_vld[23][0][21]) begin
        hls_transform_unit_ex_hls_dup1_vshift_0 <= scalar_rdat  [23][0][21];
    end
    //------READ (scalar, complete partition, global adr = 352) always block-----//
    //s = 24; r = 1; a = 15;
    if (scalar_rdat_vld[24][1][15]) begin
        hls_transform_unit_ex_hls_dup1_vshift_1 <= scalar_rdat  [24][1][15];
    end
    //------READ (scalar, complete partition, global adr = 356) always block-----//
    //s = 25; r = 1; a = 11;
    if (scalar_rdat_vld[25][1][11]) begin
        hls_transform_unit_ex_hls_dup1_vshift_2 <= scalar_rdat  [25][1][11];
    end
    //------READ (scalar, global adr = 484) always block-----//
    //s = 25; r = 0; a = 13;
    if (scalar_rdat_vld[25][0][13]) begin
        hls_transform_unit_ex_hls_dup1_tu_intra_pred_mode <= scalar_rdat  [25][0][13];
    end
    //------READ (scalar, global adr = 488) always block-----//
    //s = 26; r = 1; a = 20;
    if (scalar_rdat_vld[26][1][20]) begin
        hls_transform_unit_ex_hls_dup1_tu_intra_pred_mode_c <= scalar_rdat  [26][1][20];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 0; a = 23;
    if (scalar_rdat_vld[15][0][23]) begin
        hls_transform_unit_ex_hls_dup1_cu_transquant_bypass_flag <= scalar_rdat  [15][0][23];
    end
    //------WRITE (scalar, global adr = 492) always block-----//
    //s = 27; r = 0; a = 8;
    hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_ap_vld_r <= hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_r <= hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb;
    end
    //------WRITE (scalar, global adr = 496) always block-----//
    //s = 28; r = 0; a = 4;
    hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_ap_vld_r <= hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_r <= hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr;
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 29;
    if (scalar_rdat_vld[6][1][29]) begin
        hls_transform_unit_ex_hls_dup1_qp_y_o_r <= scalar_rdat  [6][1][29];    //bidir
    end
    //------WRITE (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 9;
    hls_transform_unit_ex_hls_dup1_qp_y_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_qp_y_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_qp_y_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_qp_y_o_r <= hls_transform_unit_ex_hls_dup1_qp_y_o;
    end
    //------WRITE (scalar, global adr = 168) always block-----//
    //s = 10; r = 0; a = 9;
    hls_transform_unit_ex_hls_dup1_log2_trafo_size_ap_vld_r <= hls_transform_unit_ex_hls_dup1_log2_trafo_size_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_log2_trafo_size_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_log2_trafo_size_r <= hls_transform_unit_ex_hls_dup1_log2_trafo_size;
    end
    //------READ (scalar, global adr = 56) always block-----//
    //s = 14; r = 0; a = 26;
    if (scalar_rdat_vld[14][0][26]) begin
        hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_r <= scalar_rdat  [14][0][26];    //bidir
    end
    //------WRITE (scalar, global adr = 56) always block-----//
    //s = 14; r = 1; a = 8;
    hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_r <= hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o;
    end
    //------READ (scalar, global adr = 48) always block-----//
    //s = 12; r = 0; a = 27;
    if (scalar_rdat_vld[12][0][27]) begin
        hls_transform_unit_ex_hls_dup1_scan_idx_o_r <= scalar_rdat  [12][0][27];    //bidir
    end
    //------WRITE (scalar, global adr = 48) always block-----//
    //s = 12; r = 0; a = 8;
    hls_transform_unit_ex_hls_dup1_scan_idx_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_scan_idx_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_scan_idx_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_scan_idx_o_r <= hls_transform_unit_ex_hls_dup1_scan_idx_o;
    end
    //------WRITE (scalar, global adr = 52) always block-----//
    //s = 13; r = 0; a = 7;
    hls_transform_unit_ex_hls_dup1_scan_idx_c_ap_vld_r <= hls_transform_unit_ex_hls_dup1_scan_idx_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_scan_idx_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_scan_idx_c_r <= hls_transform_unit_ex_hls_dup1_scan_idx_c;
    end
    //------READ (scalar, global adr = 1140) always block-----//
    //s = 29; r = 0; a = 28;
    if (scalar_rdat_vld[29][0][28]) begin
        hls_transform_unit_ex_hls_dup1_cmdr_run_o_r <= scalar_rdat  [29][0][28];    //bidir
    end
    //------WRITE (scalar, global adr = 1140) always block-----//
    //s = 29; r = 1; a = 8;
    hls_transform_unit_ex_hls_dup1_cmdr_run_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cmdr_run_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cmdr_run_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cmdr_run_o_r <= hls_transform_unit_ex_hls_dup1_cmdr_run_o;
    end
    //------READ (scalar, complete partition, global adr = 1244) always block-----//
    //s = 23; r = 1; a = 20;
    if (scalar_rdat_vld[23][1][20]) begin
        hls_transform_unit_ex_hls_dup1_buf_data_0 <= scalar_rdat  [23][1][20];
    end
    //------READ (scalar, complete partition, global adr = 1248) always block-----//
    //s = 24; r = 0; a = 17;
    if (scalar_rdat_vld[24][0][17]) begin
        hls_transform_unit_ex_hls_dup1_buf_data_1 <= scalar_rdat  [24][0][17];
    end
    //------READ (scalar, complete partition, global adr = 1252) always block-----//
    //s = 25; r = 1; a = 12;
    if (scalar_rdat_vld[25][1][12]) begin
        hls_transform_unit_ex_hls_dup1_buf_data_2 <= scalar_rdat  [25][1][12];
    end
    //------READ (scalar, complete partition, global adr = 1148) always block-----//
    //s = 31; r = 0; a = 33;
    if (scalar_rdat_vld[31][0][33]) begin
        hls_transform_unit_ex_hls_dup1_xm_linesize_0 <= scalar_rdat  [31][0][33];
    end
    //------READ (scalar, complete partition, global adr = 1152) always block-----//
    //s = 0; r = 1; a = 28;
    if (scalar_rdat_vld[0][1][28]) begin
        hls_transform_unit_ex_hls_dup1_xm_linesize_1 <= scalar_rdat  [0][1][28];
    end
    //------READ (scalar, complete partition, global adr = 1156) always block-----//
    //s = 1; r = 1; a = 26;
    if (scalar_rdat_vld[1][1][26]) begin
        hls_transform_unit_ex_hls_dup1_xm_linesize_2 <= scalar_rdat  [1][1][26];
    end
    //------READ (scalar, global adr = 1144) always block-----//
    //s = 30; r = 0; a = 14;
    if (scalar_rdat_vld[30][0][14]) begin
        hls_transform_unit_ex_hls_dup1_pixel_shift <= scalar_rdat  [30][0][14];
    end
    //------WRITE (scalar, global adr = 160) always block-----//
    //s = 8; r = 1; a = 11;
    hls_transform_unit_ex_hls_dup1_nPbW_ap_vld_r <= hls_transform_unit_ex_hls_dup1_nPbW_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_nPbW_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_nPbW_r <= hls_transform_unit_ex_hls_dup1_nPbW;
    end
    //------WRITE (scalar, global adr = 164) always block-----//
    //s = 9; r = 1; a = 11;
    hls_transform_unit_ex_hls_dup1_nPbH_ap_vld_r <= hls_transform_unit_ex_hls_dup1_nPbH_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_nPbH_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_nPbH_r <= hls_transform_unit_ex_hls_dup1_nPbH;
    end
    //------WRITE (scalar, global adr = 580) always block-----//
    //s = 17; r = 1; a = 3;
    hls_transform_unit_ex_hls_dup1_cand_up_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_up_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_up_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_up_r <= hls_transform_unit_ex_hls_dup1_cand_up;
    end
    //------WRITE (scalar, global adr = 584) always block-----//
    //s = 18; r = 1; a = 3;
    hls_transform_unit_ex_hls_dup1_cand_left_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_left_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_left_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_left_r <= hls_transform_unit_ex_hls_dup1_cand_left;
    end
    //------WRITE (scalar, global adr = 588) always block-----//
    //s = 19; r = 1; a = 4;
    hls_transform_unit_ex_hls_dup1_cand_up_left_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_up_left_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_up_left_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_up_left_r <= hls_transform_unit_ex_hls_dup1_cand_up_left;
    end
    //------WRITE (scalar, global adr = 592) always block-----//
    //s = 20; r = 1; a = 6;
    hls_transform_unit_ex_hls_dup1_cand_up_right_sap_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_up_right_sap_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_up_right_sap_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_up_right_sap_r <= hls_transform_unit_ex_hls_dup1_cand_up_right_sap;
    end
    //------WRITE (scalar, global adr = 596) always block-----//
    //s = 21; r = 0; a = 6;
    hls_transform_unit_ex_hls_dup1_cand_up_right_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_up_right_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_up_right_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_up_right_r <= hls_transform_unit_ex_hls_dup1_cand_up_right;
    end
    //------READ (scalar, global adr = 600) always block-----//
    //s = 22; r = 0; a = 23;
    if (scalar_rdat_vld[22][0][23]) begin
        hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_r <= scalar_rdat  [22][0][23];    //bidir
    end
    //------WRITE (scalar, global adr = 600) always block-----//
    //s = 22; r = 0; a = 6;
    hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_r <= hls_transform_unit_ex_hls_dup1_cand_bottom_left_o;
    end
    //------WRITE (scalar, global adr = 1412) always block-----//
    //s = 1; r = 0; a = 3;
    hls_transform_unit_ex_hls_dup1_cand_up_c_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_up_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_up_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_up_c_r <= hls_transform_unit_ex_hls_dup1_cand_up_c;
    end
    //------WRITE (scalar, global adr = 1416) always block-----//
    //s = 2; r = 1; a = 1;
    hls_transform_unit_ex_hls_dup1_cand_left_c_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_left_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_left_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_left_c_r <= hls_transform_unit_ex_hls_dup1_cand_left_c;
    end
    //------WRITE (scalar, global adr = 1420) always block-----//
    //s = 3; r = 1; a = 2;
    hls_transform_unit_ex_hls_dup1_cand_up_left_c_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_up_left_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_up_left_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_up_left_c_r <= hls_transform_unit_ex_hls_dup1_cand_up_left_c;
    end
    //------WRITE (scalar, global adr = 1424) always block-----//
    //s = 4; r = 1; a = 5;
    hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_r <= hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c;
    end
    //------WRITE (scalar, global adr = 1428) always block-----//
    //s = 5; r = 0; a = 10;
    hls_transform_unit_ex_hls_dup1_cand_up_right_c_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_up_right_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_up_right_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_up_right_c_r <= hls_transform_unit_ex_hls_dup1_cand_up_right_c;
    end
    //------READ (scalar, global adr = 1432) always block-----//
    //s = 6; r = 0; a = 31;
    if (scalar_rdat_vld[6][0][31]) begin
        hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_r <= scalar_rdat  [6][0][31];    //bidir
    end
    //------WRITE (scalar, global adr = 1432) always block-----//
    //s = 6; r = 0; a = 10;
    hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_r <= hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o;
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 22;
    if (scalar_rdat_vld[26][0][22]) begin
        hls_transform_unit_ex_hls_dup1_log2_ctb_size <= scalar_rdat  [26][0][22];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 0; a = 22;
    if (scalar_rdat_vld[23][0][22]) begin
        hls_transform_unit_ex_hls_dup1_ctb_up_flag <= scalar_rdat  [23][0][22];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 16;
    if (scalar_rdat_vld[24][1][16]) begin
        hls_transform_unit_ex_hls_dup1_ctb_left_flag <= scalar_rdat  [24][1][16];
    end
    //------READ (scalar, global adr = 612) always block-----//
    //s = 25; r = 0; a = 14;
    if (scalar_rdat_vld[25][0][14]) begin
        hls_transform_unit_ex_hls_dup1_ctb_up_left_flag <= scalar_rdat  [25][0][14];
    end
    //------READ (scalar, global adr = 616) always block-----//
    //s = 26; r = 1; a = 21;
    if (scalar_rdat_vld[26][1][21]) begin
        hls_transform_unit_ex_hls_dup1_ctb_up_right_flag <= scalar_rdat  [26][1][21];
    end
    //------READ (scalar, global adr = 620) always block-----//
    //s = 27; r = 1; a = 20;
    if (scalar_rdat_vld[27][1][20]) begin
        hls_transform_unit_ex_hls_dup1_end_of_tiles_x <= scalar_rdat  [27][1][20];
    end
    //------READ (scalar, global adr = 624) always block-----//
    //s = 28; r = 0; a = 20;
    if (scalar_rdat_vld[28][0][20]) begin
        hls_transform_unit_ex_hls_dup1_end_of_tiles_y <= scalar_rdat  [28][0][20];
    end
    //------READ (scalar, global adr = 472) always block-----//
    //s = 22; r = 1; a = 22;
    if (scalar_rdat_vld[22][1][22]) begin
        hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_r <= scalar_rdat  [22][1][22];    //bidir
    end
    //------WRITE (scalar, global adr = 472) always block-----//
    //s = 22; r = 1; a = 6;
    hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_r <= hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o;
    end
    //------READ (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 21;
    if (scalar_rdat_vld[23][1][21]) begin
        hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_r <= scalar_rdat  [23][1][21];    //bidir
    end
    //------WRITE (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 5;
    hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_r <= hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o;
    end
    //------WRITE (scalar, global adr = 468) always block-----//
    //s = 21; r = 1; a = 6;
    hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_ap_vld_r <= hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_r <= hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta;
    end
    //------WRITE (scalar, global adr = 500) always block-----//
    //s = 29; r = 0; a = 9;
    hls_transform_unit_ex_hls_dup1_tu_cross_pf_ap_vld_r <= hls_transform_unit_ex_hls_dup1_tu_cross_pf_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_tu_cross_pf_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_tu_cross_pf_r <= hls_transform_unit_ex_hls_dup1_tu_cross_pf;
    end
    //------READ (scalar, global adr = 532) always block-----//
    //s = 5; r = 1; a = 23;
    if (scalar_rdat_vld[5][1][23]) begin
        hls_transform_unit_ex_hls_dup1_first_qp_group_o_r <= scalar_rdat  [5][1][23];    //bidir
    end
    //------WRITE (scalar, global adr = 532) always block-----//
    //s = 5; r = 1; a = 10;
    hls_transform_unit_ex_hls_dup1_first_qp_group_o_ap_vld_r <= hls_transform_unit_ex_hls_dup1_first_qp_group_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup1_first_qp_group_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup1_first_qp_group_o_r <= hls_transform_unit_ex_hls_dup1_first_qp_group_o;
    end
    //------READ (scalar, global adr = 328) always block-----//
    //s = 18; r = 1; a = 14;
    if (scalar_rdat_vld[18][1][14]) begin
        hls_transform_unit_ex_hls_dup1_chroma_format_idc <= scalar_rdat  [18][1][14];
    end
    //------READ (scalar, global adr = 448) always block-----//
    //s = 16; r = 1; a = 16;
    if (scalar_rdat_vld[16][1][16]) begin
        hls_transform_unit_ex_hls_dup1_cu_chroma_qp_offset_enabled_flag <= scalar_rdat  [16][1][16];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 1; a = 28;
    if (scalar_rdat_vld[11][1][28]) begin
        hls_transform_unit_ex_hls_dup1_cu_qp_delta_enabled_flag <= scalar_rdat  [11][1][28];
    end
    //------READ (scalar, global adr = 540) always block-----//
    //s = 7; r = 1; a = 20;
    if (scalar_rdat_vld[7][1][20]) begin
        hls_transform_unit_ex_hls_dup1_qPy_pred <= scalar_rdat  [7][1][20];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 0; a = 25;
    if (scalar_rdat_vld[13][0][25]) begin
        hls_transform_unit_ex_hls_dup1_diff_cu_qp_delta_depth <= scalar_rdat  [13][0][25];
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 1; a = 20;
    if (scalar_rdat_vld[28][1][20]) begin
        hls_transform_unit_ex_hls_dup1_log2_min_cb_size <= scalar_rdat  [28][1][20];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 1; a = 16;
    if (scalar_rdat_vld[2][1][16]) begin
        hls_transform_unit_ex_hls_dup1_min_cb_width <= scalar_rdat  [2][1][16];
    end
    //------READ (scalar, global adr = 460) always block-----//
    //s = 19; r = 0; a = 18;
    if (scalar_rdat_vld[19][0][18]) begin
        hls_transform_unit_ex_hls_dup1_slice_qp <= scalar_rdat  [19][0][18];
    end
`endif
    //============================================================
    //hls_transform_unit_ex_hls_dup2       (f = 8)
    //============================================================
`ifdef enable_connect_hls_transform_unit_ex_hls_dup2
    //------READ (scalar, global adr = 20) always block-----//
    //s = 5; r = 0; a = 25;
    if (scalar_rdat_vld[5][0][25]) begin
        hls_transform_unit_ex_hls_dup2_cbf_luma <= scalar_rdat  [5][0][25];
    end
    //------READ (scalar, global adr = 16) always block-----//
    //s = 4; r = 0; a = 17;
    if (scalar_rdat_vld[4][0][17]) begin
        hls_transform_unit_ex_hls_dup2_cbf_data <= scalar_rdat  [4][0][17];
    end
    //------READ (scalar, global adr = 1160) always block-----//
    //s = 2; r = 0; a = 18;
    if (scalar_rdat_vld[2][0][18]) begin
        hls_transform_unit_ex_hls_dup2_chroma_qp_offset_list_len_minus1 <= scalar_rdat  [2][0][18];
    end
    //------READ (scalar, global adr = 1136) always block-----//
    //s = 28; r = 0; a = 21;
    if (scalar_rdat_vld[28][0][21]) begin
        hls_transform_unit_ex_hls_dup2_qp_bd_offset <= scalar_rdat  [28][0][21];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 1; a = 26;
    if (scalar_rdat_vld[12][1][26]) begin
        hls_transform_unit_ex_hls_dup2_pred_mode <= scalar_rdat  [12][1][26];
    end
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 0; a = 17;
    if (scalar_rdat_vld[20][0][17]) begin
        hls_transform_unit_ex_hls_dup2_hshift_0 <= scalar_rdat  [20][0][17];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 0; a = 16;
    if (scalar_rdat_vld[21][0][16]) begin
        hls_transform_unit_ex_hls_dup2_hshift_1 <= scalar_rdat  [21][0][16];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 0; a = 24;
    if (scalar_rdat_vld[22][0][24]) begin
        hls_transform_unit_ex_hls_dup2_hshift_2 <= scalar_rdat  [22][0][24];
    end
    //------READ (scalar, complete partition, global adr = 348) always block-----//
    //s = 23; r = 0; a = 23;
    if (scalar_rdat_vld[23][0][23]) begin
        hls_transform_unit_ex_hls_dup2_vshift_0 <= scalar_rdat  [23][0][23];
    end
    //------READ (scalar, complete partition, global adr = 352) always block-----//
    //s = 24; r = 0; a = 18;
    if (scalar_rdat_vld[24][0][18]) begin
        hls_transform_unit_ex_hls_dup2_vshift_1 <= scalar_rdat  [24][0][18];
    end
    //------READ (scalar, complete partition, global adr = 356) always block-----//
    //s = 25; r = 1; a = 13;
    if (scalar_rdat_vld[25][1][13]) begin
        hls_transform_unit_ex_hls_dup2_vshift_2 <= scalar_rdat  [25][1][13];
    end
    //------READ (scalar, global adr = 484) always block-----//
    //s = 25; r = 0; a = 15;
    if (scalar_rdat_vld[25][0][15]) begin
        hls_transform_unit_ex_hls_dup2_tu_intra_pred_mode <= scalar_rdat  [25][0][15];
    end
    //------READ (scalar, global adr = 488) always block-----//
    //s = 26; r = 0; a = 23;
    if (scalar_rdat_vld[26][0][23]) begin
        hls_transform_unit_ex_hls_dup2_tu_intra_pred_mode_c <= scalar_rdat  [26][0][23];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 23;
    if (scalar_rdat_vld[15][1][23]) begin
        hls_transform_unit_ex_hls_dup2_cu_transquant_bypass_flag <= scalar_rdat  [15][1][23];
    end
    //------WRITE (scalar, global adr = 492) always block-----//
    //s = 27; r = 1; a = 8;
    hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_ap_vld_r <= hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_r <= hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb;
    end
    //------WRITE (scalar, global adr = 496) always block-----//
    //s = 28; r = 1; a = 4;
    hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_ap_vld_r <= hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_r <= hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr;
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 30;
    if (scalar_rdat_vld[6][1][30]) begin
        hls_transform_unit_ex_hls_dup2_qp_y_o_r <= scalar_rdat  [6][1][30];    //bidir
    end
    //------WRITE (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 10;
    hls_transform_unit_ex_hls_dup2_qp_y_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_qp_y_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_qp_y_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_qp_y_o_r <= hls_transform_unit_ex_hls_dup2_qp_y_o;
    end
    //------WRITE (scalar, global adr = 168) always block-----//
    //s = 10; r = 1; a = 9;
    hls_transform_unit_ex_hls_dup2_log2_trafo_size_ap_vld_r <= hls_transform_unit_ex_hls_dup2_log2_trafo_size_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_log2_trafo_size_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_log2_trafo_size_r <= hls_transform_unit_ex_hls_dup2_log2_trafo_size;
    end
    //------READ (scalar, global adr = 56) always block-----//
    //s = 14; r = 1; a = 26;
    if (scalar_rdat_vld[14][1][26]) begin
        hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_r <= scalar_rdat  [14][1][26];    //bidir
    end
    //------WRITE (scalar, global adr = 56) always block-----//
    //s = 14; r = 0; a = 9;
    hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_r <= hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o;
    end
    //------READ (scalar, global adr = 48) always block-----//
    //s = 12; r = 0; a = 28;
    if (scalar_rdat_vld[12][0][28]) begin
        hls_transform_unit_ex_hls_dup2_scan_idx_o_r <= scalar_rdat  [12][0][28];    //bidir
    end
    //------WRITE (scalar, global adr = 48) always block-----//
    //s = 12; r = 1; a = 8;
    hls_transform_unit_ex_hls_dup2_scan_idx_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_scan_idx_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_scan_idx_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_scan_idx_o_r <= hls_transform_unit_ex_hls_dup2_scan_idx_o;
    end
    //------WRITE (scalar, global adr = 52) always block-----//
    //s = 13; r = 1; a = 7;
    hls_transform_unit_ex_hls_dup2_scan_idx_c_ap_vld_r <= hls_transform_unit_ex_hls_dup2_scan_idx_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_scan_idx_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_scan_idx_c_r <= hls_transform_unit_ex_hls_dup2_scan_idx_c;
    end
    //------READ (scalar, global adr = 1140) always block-----//
    //s = 29; r = 1; a = 28;
    if (scalar_rdat_vld[29][1][28]) begin
        hls_transform_unit_ex_hls_dup2_cmdr_run_o_r <= scalar_rdat  [29][1][28];    //bidir
    end
    //------WRITE (scalar, global adr = 1140) always block-----//
    //s = 29; r = 1; a = 9;
    hls_transform_unit_ex_hls_dup2_cmdr_run_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cmdr_run_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cmdr_run_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cmdr_run_o_r <= hls_transform_unit_ex_hls_dup2_cmdr_run_o;
    end
    //------READ (scalar, complete partition, global adr = 1244) always block-----//
    //s = 23; r = 1; a = 22;
    if (scalar_rdat_vld[23][1][22]) begin
        hls_transform_unit_ex_hls_dup2_buf_data_0 <= scalar_rdat  [23][1][22];
    end
    //------READ (scalar, complete partition, global adr = 1248) always block-----//
    //s = 24; r = 1; a = 17;
    if (scalar_rdat_vld[24][1][17]) begin
        hls_transform_unit_ex_hls_dup2_buf_data_1 <= scalar_rdat  [24][1][17];
    end
    //------READ (scalar, complete partition, global adr = 1252) always block-----//
    //s = 25; r = 1; a = 14;
    if (scalar_rdat_vld[25][1][14]) begin
        hls_transform_unit_ex_hls_dup2_buf_data_2 <= scalar_rdat  [25][1][14];
    end
    //------READ (scalar, complete partition, global adr = 1148) always block-----//
    //s = 31; r = 1; a = 32;
    if (scalar_rdat_vld[31][1][32]) begin
        hls_transform_unit_ex_hls_dup2_xm_linesize_0 <= scalar_rdat  [31][1][32];
    end
    //------READ (scalar, complete partition, global adr = 1152) always block-----//
    //s = 0; r = 0; a = 29;
    if (scalar_rdat_vld[0][0][29]) begin
        hls_transform_unit_ex_hls_dup2_xm_linesize_1 <= scalar_rdat  [0][0][29];
    end
    //------READ (scalar, complete partition, global adr = 1156) always block-----//
    //s = 1; r = 0; a = 27;
    if (scalar_rdat_vld[1][0][27]) begin
        hls_transform_unit_ex_hls_dup2_xm_linesize_2 <= scalar_rdat  [1][0][27];
    end
    //------READ (scalar, global adr = 1144) always block-----//
    //s = 30; r = 1; a = 14;
    if (scalar_rdat_vld[30][1][14]) begin
        hls_transform_unit_ex_hls_dup2_pixel_shift <= scalar_rdat  [30][1][14];
    end
    //------WRITE (scalar, global adr = 160) always block-----//
    //s = 8; r = 0; a = 12;
    hls_transform_unit_ex_hls_dup2_nPbW_ap_vld_r <= hls_transform_unit_ex_hls_dup2_nPbW_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_nPbW_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_nPbW_r <= hls_transform_unit_ex_hls_dup2_nPbW;
    end
    //------WRITE (scalar, global adr = 164) always block-----//
    //s = 9; r = 0; a = 12;
    hls_transform_unit_ex_hls_dup2_nPbH_ap_vld_r <= hls_transform_unit_ex_hls_dup2_nPbH_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_nPbH_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_nPbH_r <= hls_transform_unit_ex_hls_dup2_nPbH;
    end
    //------WRITE (scalar, global adr = 580) always block-----//
    //s = 17; r = 0; a = 4;
    hls_transform_unit_ex_hls_dup2_cand_up_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_up_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_up_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_up_r <= hls_transform_unit_ex_hls_dup2_cand_up;
    end
    //------WRITE (scalar, global adr = 584) always block-----//
    //s = 18; r = 0; a = 4;
    hls_transform_unit_ex_hls_dup2_cand_left_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_left_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_left_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_left_r <= hls_transform_unit_ex_hls_dup2_cand_left;
    end
    //------WRITE (scalar, global adr = 588) always block-----//
    //s = 19; r = 0; a = 5;
    hls_transform_unit_ex_hls_dup2_cand_up_left_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_up_left_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_up_left_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_up_left_r <= hls_transform_unit_ex_hls_dup2_cand_up_left;
    end
    //------WRITE (scalar, global adr = 592) always block-----//
    //s = 20; r = 0; a = 7;
    hls_transform_unit_ex_hls_dup2_cand_up_right_sap_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_up_right_sap_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_up_right_sap_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_up_right_sap_r <= hls_transform_unit_ex_hls_dup2_cand_up_right_sap;
    end
    //------WRITE (scalar, global adr = 596) always block-----//
    //s = 21; r = 0; a = 7;
    hls_transform_unit_ex_hls_dup2_cand_up_right_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_up_right_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_up_right_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_up_right_r <= hls_transform_unit_ex_hls_dup2_cand_up_right;
    end
    //------READ (scalar, global adr = 600) always block-----//
    //s = 22; r = 1; a = 23;
    if (scalar_rdat_vld[22][1][23]) begin
        hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_r <= scalar_rdat  [22][1][23];    //bidir
    end
    //------WRITE (scalar, global adr = 600) always block-----//
    //s = 22; r = 0; a = 7;
    hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_r <= hls_transform_unit_ex_hls_dup2_cand_bottom_left_o;
    end
    //------WRITE (scalar, global adr = 1412) always block-----//
    //s = 1; r = 1; a = 3;
    hls_transform_unit_ex_hls_dup2_cand_up_c_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_up_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_up_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_up_c_r <= hls_transform_unit_ex_hls_dup2_cand_up_c;
    end
    //------WRITE (scalar, global adr = 1416) always block-----//
    //s = 2; r = 0; a = 2;
    hls_transform_unit_ex_hls_dup2_cand_left_c_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_left_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_left_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_left_c_r <= hls_transform_unit_ex_hls_dup2_cand_left_c;
    end
    //------WRITE (scalar, global adr = 1420) always block-----//
    //s = 3; r = 0; a = 3;
    hls_transform_unit_ex_hls_dup2_cand_up_left_c_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_up_left_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_up_left_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_up_left_c_r <= hls_transform_unit_ex_hls_dup2_cand_up_left_c;
    end
    //------WRITE (scalar, global adr = 1424) always block-----//
    //s = 4; r = 0; a = 6;
    hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_r <= hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c;
    end
    //------WRITE (scalar, global adr = 1428) always block-----//
    //s = 5; r = 0; a = 11;
    hls_transform_unit_ex_hls_dup2_cand_up_right_c_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_up_right_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_up_right_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_up_right_c_r <= hls_transform_unit_ex_hls_dup2_cand_up_right_c;
    end
    //------READ (scalar, global adr = 1432) always block-----//
    //s = 6; r = 0; a = 32;
    if (scalar_rdat_vld[6][0][32]) begin
        hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_r <= scalar_rdat  [6][0][32];    //bidir
    end
    //------WRITE (scalar, global adr = 1432) always block-----//
    //s = 6; r = 0; a = 11;
    hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_r <= hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o;
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 22;
    if (scalar_rdat_vld[26][1][22]) begin
        hls_transform_unit_ex_hls_dup2_log2_ctb_size <= scalar_rdat  [26][1][22];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 0; a = 24;
    if (scalar_rdat_vld[23][0][24]) begin
        hls_transform_unit_ex_hls_dup2_ctb_up_flag <= scalar_rdat  [23][0][24];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 0; a = 19;
    if (scalar_rdat_vld[24][0][19]) begin
        hls_transform_unit_ex_hls_dup2_ctb_left_flag <= scalar_rdat  [24][0][19];
    end
    //------READ (scalar, global adr = 612) always block-----//
    //s = 25; r = 0; a = 16;
    if (scalar_rdat_vld[25][0][16]) begin
        hls_transform_unit_ex_hls_dup2_ctb_up_left_flag <= scalar_rdat  [25][0][16];
    end
    //------READ (scalar, global adr = 616) always block-----//
    //s = 26; r = 0; a = 24;
    if (scalar_rdat_vld[26][0][24]) begin
        hls_transform_unit_ex_hls_dup2_ctb_up_right_flag <= scalar_rdat  [26][0][24];
    end
    //------READ (scalar, global adr = 620) always block-----//
    //s = 27; r = 0; a = 22;
    if (scalar_rdat_vld[27][0][22]) begin
        hls_transform_unit_ex_hls_dup2_end_of_tiles_x <= scalar_rdat  [27][0][22];
    end
    //------READ (scalar, global adr = 624) always block-----//
    //s = 28; r = 1; a = 21;
    if (scalar_rdat_vld[28][1][21]) begin
        hls_transform_unit_ex_hls_dup2_end_of_tiles_y <= scalar_rdat  [28][1][21];
    end
    //------READ (scalar, global adr = 472) always block-----//
    //s = 22; r = 0; a = 25;
    if (scalar_rdat_vld[22][0][25]) begin
        hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_r <= scalar_rdat  [22][0][25];    //bidir
    end
    //------WRITE (scalar, global adr = 472) always block-----//
    //s = 22; r = 1; a = 7;
    hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_r <= hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o;
    end
    //------READ (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 23;
    if (scalar_rdat_vld[23][1][23]) begin
        hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_r <= scalar_rdat  [23][1][23];    //bidir
    end
    //------WRITE (scalar, global adr = 476) always block-----//
    //s = 23; r = 0; a = 6;
    hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_r <= hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o;
    end
    //------WRITE (scalar, global adr = 468) always block-----//
    //s = 21; r = 1; a = 7;
    hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_ap_vld_r <= hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_r <= hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta;
    end
    //------WRITE (scalar, global adr = 500) always block-----//
    //s = 29; r = 0; a = 10;
    hls_transform_unit_ex_hls_dup2_tu_cross_pf_ap_vld_r <= hls_transform_unit_ex_hls_dup2_tu_cross_pf_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_tu_cross_pf_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_tu_cross_pf_r <= hls_transform_unit_ex_hls_dup2_tu_cross_pf;
    end
    //------READ (scalar, global adr = 532) always block-----//
    //s = 5; r = 1; a = 24;
    if (scalar_rdat_vld[5][1][24]) begin
        hls_transform_unit_ex_hls_dup2_first_qp_group_o_r <= scalar_rdat  [5][1][24];    //bidir
    end
    //------WRITE (scalar, global adr = 532) always block-----//
    //s = 5; r = 1; a = 11;
    hls_transform_unit_ex_hls_dup2_first_qp_group_o_ap_vld_r <= hls_transform_unit_ex_hls_dup2_first_qp_group_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup2_first_qp_group_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup2_first_qp_group_o_r <= hls_transform_unit_ex_hls_dup2_first_qp_group_o;
    end
    //------READ (scalar, global adr = 328) always block-----//
    //s = 18; r = 0; a = 16;
    if (scalar_rdat_vld[18][0][16]) begin
        hls_transform_unit_ex_hls_dup2_chroma_format_idc <= scalar_rdat  [18][0][16];
    end
    //------READ (scalar, global adr = 448) always block-----//
    //s = 16; r = 0; a = 18;
    if (scalar_rdat_vld[16][0][18]) begin
        hls_transform_unit_ex_hls_dup2_cu_chroma_qp_offset_enabled_flag <= scalar_rdat  [16][0][18];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 0; a = 29;
    if (scalar_rdat_vld[11][0][29]) begin
        hls_transform_unit_ex_hls_dup2_cu_qp_delta_enabled_flag <= scalar_rdat  [11][0][29];
    end
    //------READ (scalar, global adr = 540) always block-----//
    //s = 7; r = 0; a = 22;
    if (scalar_rdat_vld[7][0][22]) begin
        hls_transform_unit_ex_hls_dup2_qPy_pred <= scalar_rdat  [7][0][22];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 1; a = 25;
    if (scalar_rdat_vld[13][1][25]) begin
        hls_transform_unit_ex_hls_dup2_diff_cu_qp_delta_depth <= scalar_rdat  [13][1][25];
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 0; a = 22;
    if (scalar_rdat_vld[28][0][22]) begin
        hls_transform_unit_ex_hls_dup2_log2_min_cb_size <= scalar_rdat  [28][0][22];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 1; a = 17;
    if (scalar_rdat_vld[2][1][17]) begin
        hls_transform_unit_ex_hls_dup2_min_cb_width <= scalar_rdat  [2][1][17];
    end
    //------READ (scalar, global adr = 460) always block-----//
    //s = 19; r = 1; a = 18;
    if (scalar_rdat_vld[19][1][18]) begin
        hls_transform_unit_ex_hls_dup2_slice_qp <= scalar_rdat  [19][1][18];
    end
`endif
    //============================================================
    //hls_transform_unit_ex_hls_dup3       (f = 9)
    //============================================================
`ifdef enable_connect_hls_transform_unit_ex_hls_dup3
    //------READ (scalar, global adr = 20) always block-----//
    //s = 5; r = 0; a = 26;
    if (scalar_rdat_vld[5][0][26]) begin
        hls_transform_unit_ex_hls_dup3_cbf_luma <= scalar_rdat  [5][0][26];
    end
    //------READ (scalar, global adr = 16) always block-----//
    //s = 4; r = 1; a = 17;
    if (scalar_rdat_vld[4][1][17]) begin
        hls_transform_unit_ex_hls_dup3_cbf_data <= scalar_rdat  [4][1][17];
    end
    //------READ (scalar, global adr = 1160) always block-----//
    //s = 2; r = 0; a = 19;
    if (scalar_rdat_vld[2][0][19]) begin
        hls_transform_unit_ex_hls_dup3_chroma_qp_offset_list_len_minus1 <= scalar_rdat  [2][0][19];
    end
    //------READ (scalar, global adr = 1136) always block-----//
    //s = 28; r = 1; a = 22;
    if (scalar_rdat_vld[28][1][22]) begin
        hls_transform_unit_ex_hls_dup3_qp_bd_offset <= scalar_rdat  [28][1][22];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 1; a = 27;
    if (scalar_rdat_vld[12][1][27]) begin
        hls_transform_unit_ex_hls_dup3_pred_mode <= scalar_rdat  [12][1][27];
    end
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 1; a = 17;
    if (scalar_rdat_vld[20][1][17]) begin
        hls_transform_unit_ex_hls_dup3_hshift_0 <= scalar_rdat  [20][1][17];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 1; a = 15;
    if (scalar_rdat_vld[21][1][15]) begin
        hls_transform_unit_ex_hls_dup3_hshift_1 <= scalar_rdat  [21][1][15];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 1; a = 24;
    if (scalar_rdat_vld[22][1][24]) begin
        hls_transform_unit_ex_hls_dup3_hshift_2 <= scalar_rdat  [22][1][24];
    end
    //------READ (scalar, complete partition, global adr = 348) always block-----//
    //s = 23; r = 0; a = 25;
    if (scalar_rdat_vld[23][0][25]) begin
        hls_transform_unit_ex_hls_dup3_vshift_0 <= scalar_rdat  [23][0][25];
    end
    //------READ (scalar, complete partition, global adr = 352) always block-----//
    //s = 24; r = 1; a = 18;
    if (scalar_rdat_vld[24][1][18]) begin
        hls_transform_unit_ex_hls_dup3_vshift_1 <= scalar_rdat  [24][1][18];
    end
    //------READ (scalar, complete partition, global adr = 356) always block-----//
    //s = 25; r = 1; a = 15;
    if (scalar_rdat_vld[25][1][15]) begin
        hls_transform_unit_ex_hls_dup3_vshift_2 <= scalar_rdat  [25][1][15];
    end
    //------READ (scalar, global adr = 484) always block-----//
    //s = 25; r = 0; a = 17;
    if (scalar_rdat_vld[25][0][17]) begin
        hls_transform_unit_ex_hls_dup3_tu_intra_pred_mode <= scalar_rdat  [25][0][17];
    end
    //------READ (scalar, global adr = 488) always block-----//
    //s = 26; r = 1; a = 23;
    if (scalar_rdat_vld[26][1][23]) begin
        hls_transform_unit_ex_hls_dup3_tu_intra_pred_mode_c <= scalar_rdat  [26][1][23];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 0; a = 24;
    if (scalar_rdat_vld[15][0][24]) begin
        hls_transform_unit_ex_hls_dup3_cu_transquant_bypass_flag <= scalar_rdat  [15][0][24];
    end
    //------WRITE (scalar, global adr = 492) always block-----//
    //s = 27; r = 0; a = 9;
    hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_ap_vld_r <= hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_r <= hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb;
    end
    //------WRITE (scalar, global adr = 496) always block-----//
    //s = 28; r = 0; a = 5;
    hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_ap_vld_r <= hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_r <= hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr;
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 31;
    if (scalar_rdat_vld[6][1][31]) begin
        hls_transform_unit_ex_hls_dup3_qp_y_o_r <= scalar_rdat  [6][1][31];    //bidir
    end
    //------WRITE (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 11;
    hls_transform_unit_ex_hls_dup3_qp_y_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_qp_y_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_qp_y_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_qp_y_o_r <= hls_transform_unit_ex_hls_dup3_qp_y_o;
    end
    //------WRITE (scalar, global adr = 168) always block-----//
    //s = 10; r = 0; a = 10;
    hls_transform_unit_ex_hls_dup3_log2_trafo_size_ap_vld_r <= hls_transform_unit_ex_hls_dup3_log2_trafo_size_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_log2_trafo_size_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_log2_trafo_size_r <= hls_transform_unit_ex_hls_dup3_log2_trafo_size;
    end
    //------READ (scalar, global adr = 56) always block-----//
    //s = 14; r = 0; a = 27;
    if (scalar_rdat_vld[14][0][27]) begin
        hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_r <= scalar_rdat  [14][0][27];    //bidir
    end
    //------WRITE (scalar, global adr = 56) always block-----//
    //s = 14; r = 1; a = 9;
    hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_r <= hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o;
    end
    //------READ (scalar, global adr = 48) always block-----//
    //s = 12; r = 0; a = 29;
    if (scalar_rdat_vld[12][0][29]) begin
        hls_transform_unit_ex_hls_dup3_scan_idx_o_r <= scalar_rdat  [12][0][29];    //bidir
    end
    //------WRITE (scalar, global adr = 48) always block-----//
    //s = 12; r = 0; a = 9;
    hls_transform_unit_ex_hls_dup3_scan_idx_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_scan_idx_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_scan_idx_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_scan_idx_o_r <= hls_transform_unit_ex_hls_dup3_scan_idx_o;
    end
    //------WRITE (scalar, global adr = 52) always block-----//
    //s = 13; r = 0; a = 8;
    hls_transform_unit_ex_hls_dup3_scan_idx_c_ap_vld_r <= hls_transform_unit_ex_hls_dup3_scan_idx_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_scan_idx_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_scan_idx_c_r <= hls_transform_unit_ex_hls_dup3_scan_idx_c;
    end
    //------READ (scalar, global adr = 1140) always block-----//
    //s = 29; r = 0; a = 29;
    if (scalar_rdat_vld[29][0][29]) begin
        hls_transform_unit_ex_hls_dup3_cmdr_run_o_r <= scalar_rdat  [29][0][29];    //bidir
    end
    //------WRITE (scalar, global adr = 1140) always block-----//
    //s = 29; r = 1; a = 10;
    hls_transform_unit_ex_hls_dup3_cmdr_run_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cmdr_run_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cmdr_run_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cmdr_run_o_r <= hls_transform_unit_ex_hls_dup3_cmdr_run_o;
    end
    //------READ (scalar, complete partition, global adr = 1244) always block-----//
    //s = 23; r = 1; a = 24;
    if (scalar_rdat_vld[23][1][24]) begin
        hls_transform_unit_ex_hls_dup3_buf_data_0 <= scalar_rdat  [23][1][24];
    end
    //------READ (scalar, complete partition, global adr = 1248) always block-----//
    //s = 24; r = 0; a = 20;
    if (scalar_rdat_vld[24][0][20]) begin
        hls_transform_unit_ex_hls_dup3_buf_data_1 <= scalar_rdat  [24][0][20];
    end
    //------READ (scalar, complete partition, global adr = 1252) always block-----//
    //s = 25; r = 1; a = 16;
    if (scalar_rdat_vld[25][1][16]) begin
        hls_transform_unit_ex_hls_dup3_buf_data_2 <= scalar_rdat  [25][1][16];
    end
    //------READ (scalar, complete partition, global adr = 1148) always block-----//
    //s = 31; r = 0; a = 34;
    if (scalar_rdat_vld[31][0][34]) begin
        hls_transform_unit_ex_hls_dup3_xm_linesize_0 <= scalar_rdat  [31][0][34];
    end
    //------READ (scalar, complete partition, global adr = 1152) always block-----//
    //s = 0; r = 1; a = 29;
    if (scalar_rdat_vld[0][1][29]) begin
        hls_transform_unit_ex_hls_dup3_xm_linesize_1 <= scalar_rdat  [0][1][29];
    end
    //------READ (scalar, complete partition, global adr = 1156) always block-----//
    //s = 1; r = 1; a = 27;
    if (scalar_rdat_vld[1][1][27]) begin
        hls_transform_unit_ex_hls_dup3_xm_linesize_2 <= scalar_rdat  [1][1][27];
    end
    //------READ (scalar, global adr = 1144) always block-----//
    //s = 30; r = 0; a = 15;
    if (scalar_rdat_vld[30][0][15]) begin
        hls_transform_unit_ex_hls_dup3_pixel_shift <= scalar_rdat  [30][0][15];
    end
    //------WRITE (scalar, global adr = 160) always block-----//
    //s = 8; r = 1; a = 12;
    hls_transform_unit_ex_hls_dup3_nPbW_ap_vld_r <= hls_transform_unit_ex_hls_dup3_nPbW_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_nPbW_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_nPbW_r <= hls_transform_unit_ex_hls_dup3_nPbW;
    end
    //------WRITE (scalar, global adr = 164) always block-----//
    //s = 9; r = 1; a = 12;
    hls_transform_unit_ex_hls_dup3_nPbH_ap_vld_r <= hls_transform_unit_ex_hls_dup3_nPbH_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_nPbH_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_nPbH_r <= hls_transform_unit_ex_hls_dup3_nPbH;
    end
    //------WRITE (scalar, global adr = 580) always block-----//
    //s = 17; r = 1; a = 4;
    hls_transform_unit_ex_hls_dup3_cand_up_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_up_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_up_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_up_r <= hls_transform_unit_ex_hls_dup3_cand_up;
    end
    //------WRITE (scalar, global adr = 584) always block-----//
    //s = 18; r = 1; a = 4;
    hls_transform_unit_ex_hls_dup3_cand_left_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_left_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_left_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_left_r <= hls_transform_unit_ex_hls_dup3_cand_left;
    end
    //------WRITE (scalar, global adr = 588) always block-----//
    //s = 19; r = 1; a = 5;
    hls_transform_unit_ex_hls_dup3_cand_up_left_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_up_left_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_up_left_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_up_left_r <= hls_transform_unit_ex_hls_dup3_cand_up_left;
    end
    //------WRITE (scalar, global adr = 592) always block-----//
    //s = 20; r = 1; a = 7;
    hls_transform_unit_ex_hls_dup3_cand_up_right_sap_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_up_right_sap_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_up_right_sap_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_up_right_sap_r <= hls_transform_unit_ex_hls_dup3_cand_up_right_sap;
    end
    //------WRITE (scalar, global adr = 596) always block-----//
    //s = 21; r = 0; a = 8;
    hls_transform_unit_ex_hls_dup3_cand_up_right_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_up_right_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_up_right_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_up_right_r <= hls_transform_unit_ex_hls_dup3_cand_up_right;
    end
    //------READ (scalar, global adr = 600) always block-----//
    //s = 22; r = 0; a = 26;
    if (scalar_rdat_vld[22][0][26]) begin
        hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_r <= scalar_rdat  [22][0][26];    //bidir
    end
    //------WRITE (scalar, global adr = 600) always block-----//
    //s = 22; r = 0; a = 8;
    hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_r <= hls_transform_unit_ex_hls_dup3_cand_bottom_left_o;
    end
    //------WRITE (scalar, global adr = 1412) always block-----//
    //s = 1; r = 0; a = 4;
    hls_transform_unit_ex_hls_dup3_cand_up_c_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_up_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_up_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_up_c_r <= hls_transform_unit_ex_hls_dup3_cand_up_c;
    end
    //------WRITE (scalar, global adr = 1416) always block-----//
    //s = 2; r = 1; a = 2;
    hls_transform_unit_ex_hls_dup3_cand_left_c_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_left_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_left_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_left_c_r <= hls_transform_unit_ex_hls_dup3_cand_left_c;
    end
    //------WRITE (scalar, global adr = 1420) always block-----//
    //s = 3; r = 1; a = 3;
    hls_transform_unit_ex_hls_dup3_cand_up_left_c_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_up_left_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_up_left_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_up_left_c_r <= hls_transform_unit_ex_hls_dup3_cand_up_left_c;
    end
    //------WRITE (scalar, global adr = 1424) always block-----//
    //s = 4; r = 1; a = 6;
    hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_r <= hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c;
    end
    //------WRITE (scalar, global adr = 1428) always block-----//
    //s = 5; r = 0; a = 12;
    hls_transform_unit_ex_hls_dup3_cand_up_right_c_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_up_right_c_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_up_right_c_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_up_right_c_r <= hls_transform_unit_ex_hls_dup3_cand_up_right_c;
    end
    //------READ (scalar, global adr = 1432) always block-----//
    //s = 6; r = 0; a = 33;
    if (scalar_rdat_vld[6][0][33]) begin
        hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_r <= scalar_rdat  [6][0][33];    //bidir
    end
    //------WRITE (scalar, global adr = 1432) always block-----//
    //s = 6; r = 0; a = 12;
    hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_r <= hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o;
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 25;
    if (scalar_rdat_vld[26][0][25]) begin
        hls_transform_unit_ex_hls_dup3_log2_ctb_size <= scalar_rdat  [26][0][25];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 0; a = 26;
    if (scalar_rdat_vld[23][0][26]) begin
        hls_transform_unit_ex_hls_dup3_ctb_up_flag <= scalar_rdat  [23][0][26];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 19;
    if (scalar_rdat_vld[24][1][19]) begin
        hls_transform_unit_ex_hls_dup3_ctb_left_flag <= scalar_rdat  [24][1][19];
    end
    //------READ (scalar, global adr = 612) always block-----//
    //s = 25; r = 0; a = 18;
    if (scalar_rdat_vld[25][0][18]) begin
        hls_transform_unit_ex_hls_dup3_ctb_up_left_flag <= scalar_rdat  [25][0][18];
    end
    //------READ (scalar, global adr = 616) always block-----//
    //s = 26; r = 1; a = 24;
    if (scalar_rdat_vld[26][1][24]) begin
        hls_transform_unit_ex_hls_dup3_ctb_up_right_flag <= scalar_rdat  [26][1][24];
    end
    //------READ (scalar, global adr = 620) always block-----//
    //s = 27; r = 1; a = 21;
    if (scalar_rdat_vld[27][1][21]) begin
        hls_transform_unit_ex_hls_dup3_end_of_tiles_x <= scalar_rdat  [27][1][21];
    end
    //------READ (scalar, global adr = 624) always block-----//
    //s = 28; r = 0; a = 23;
    if (scalar_rdat_vld[28][0][23]) begin
        hls_transform_unit_ex_hls_dup3_end_of_tiles_y <= scalar_rdat  [28][0][23];
    end
    //------READ (scalar, global adr = 472) always block-----//
    //s = 22; r = 1; a = 25;
    if (scalar_rdat_vld[22][1][25]) begin
        hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_r <= scalar_rdat  [22][1][25];    //bidir
    end
    //------WRITE (scalar, global adr = 472) always block-----//
    //s = 22; r = 1; a = 8;
    hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_r <= hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o;
    end
    //------READ (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 25;
    if (scalar_rdat_vld[23][1][25]) begin
        hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_r <= scalar_rdat  [23][1][25];    //bidir
    end
    //------WRITE (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 6;
    hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_r <= hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o;
    end
    //------WRITE (scalar, global adr = 468) always block-----//
    //s = 21; r = 1; a = 8;
    hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_ap_vld_r <= hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_r <= hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta;
    end
    //------WRITE (scalar, global adr = 500) always block-----//
    //s = 29; r = 0; a = 11;
    hls_transform_unit_ex_hls_dup3_tu_cross_pf_ap_vld_r <= hls_transform_unit_ex_hls_dup3_tu_cross_pf_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_tu_cross_pf_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_tu_cross_pf_r <= hls_transform_unit_ex_hls_dup3_tu_cross_pf;
    end
    //------READ (scalar, global adr = 532) always block-----//
    //s = 5; r = 1; a = 25;
    if (scalar_rdat_vld[5][1][25]) begin
        hls_transform_unit_ex_hls_dup3_first_qp_group_o_r <= scalar_rdat  [5][1][25];    //bidir
    end
    //------WRITE (scalar, global adr = 532) always block-----//
    //s = 5; r = 1; a = 12;
    hls_transform_unit_ex_hls_dup3_first_qp_group_o_ap_vld_r <= hls_transform_unit_ex_hls_dup3_first_qp_group_o_ap_vld;
    if (hls_transform_unit_ex_hls_dup3_first_qp_group_o_ap_vld) begin
        hls_transform_unit_ex_hls_dup3_first_qp_group_o_r <= hls_transform_unit_ex_hls_dup3_first_qp_group_o;
    end
    //------READ (scalar, global adr = 328) always block-----//
    //s = 18; r = 1; a = 15;
    if (scalar_rdat_vld[18][1][15]) begin
        hls_transform_unit_ex_hls_dup3_chroma_format_idc <= scalar_rdat  [18][1][15];
    end
    //------READ (scalar, global adr = 448) always block-----//
    //s = 16; r = 1; a = 17;
    if (scalar_rdat_vld[16][1][17]) begin
        hls_transform_unit_ex_hls_dup3_cu_chroma_qp_offset_enabled_flag <= scalar_rdat  [16][1][17];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 1; a = 29;
    if (scalar_rdat_vld[11][1][29]) begin
        hls_transform_unit_ex_hls_dup3_cu_qp_delta_enabled_flag <= scalar_rdat  [11][1][29];
    end
    //------READ (scalar, global adr = 540) always block-----//
    //s = 7; r = 1; a = 21;
    if (scalar_rdat_vld[7][1][21]) begin
        hls_transform_unit_ex_hls_dup3_qPy_pred <= scalar_rdat  [7][1][21];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 0; a = 26;
    if (scalar_rdat_vld[13][0][26]) begin
        hls_transform_unit_ex_hls_dup3_diff_cu_qp_delta_depth <= scalar_rdat  [13][0][26];
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 1; a = 23;
    if (scalar_rdat_vld[28][1][23]) begin
        hls_transform_unit_ex_hls_dup3_log2_min_cb_size <= scalar_rdat  [28][1][23];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 1; a = 18;
    if (scalar_rdat_vld[2][1][18]) begin
        hls_transform_unit_ex_hls_dup3_min_cb_width <= scalar_rdat  [2][1][18];
    end
    //------READ (scalar, global adr = 460) always block-----//
    //s = 19; r = 0; a = 19;
    if (scalar_rdat_vld[19][0][19]) begin
        hls_transform_unit_ex_hls_dup3_slice_qp <= scalar_rdat  [19][0][19];
    end
`endif
    //============================================================
    //hls_transform_tree_hls       (f = 10)
    //============================================================
`ifdef enable_connect_hls_transform_tree_hls
    //------WRITE (scalar, global adr = 168) always block-----//
    //s = 10; r = 1; a = 6;
    hls_transform_tree_hls_log2_trafo_size_ap_vld_r <= hls_transform_tree_hls_log2_trafo_size_ap_vld;
    if (hls_transform_tree_hls_log2_trafo_size_ap_vld) begin
        hls_transform_tree_hls_log2_trafo_size_r <= hls_transform_tree_hls_log2_trafo_size;
    end
    //------WRITE (scalar, global adr = 12) always block-----//
    //s = 3; r = 0; a = 0;
    hls_transform_tree_hls_split_transform_flag_ap_vld_r <= hls_transform_tree_hls_split_transform_flag_ap_vld;
    if (hls_transform_tree_hls_split_transform_flag_ap_vld) begin
        hls_transform_tree_hls_split_transform_flag_r <= hls_transform_tree_hls_split_transform_flag;
    end
    //------WRITE (scalar, global adr = 16) always block-----//
    //s = 4; r = 0; a = 3;
    hls_transform_tree_hls_cbf_data_ap_vld_r <= hls_transform_tree_hls_cbf_data_ap_vld;
    if (hls_transform_tree_hls_cbf_data_ap_vld) begin
        hls_transform_tree_hls_cbf_data_r <= hls_transform_tree_hls_cbf_data;
    end
    //------READ (scalar, global adr = 1164) always block-----//
    //s = 3; r = 1; a = 13;
    if (scalar_rdat_vld[3][1][13]) begin
        hls_transform_tree_hls_disable_deblocking_filter_flag <= scalar_rdat  [3][1][13];
    end
    //------READ (scalar, global adr = 440) always block-----//
    //s = 14; r = 1; a = 21;
    if (scalar_rdat_vld[14][1][21]) begin
        hls_transform_tree_hls_transquant_bypass_enable_flag <= scalar_rdat  [14][1][21];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 20;
    if (scalar_rdat_vld[15][1][20]) begin
        hls_transform_tree_hls_cu_transquant_bypass_flag <= scalar_rdat  [15][1][20];
    end
    //------WRITE (scalar, global adr = 480) always block-----//
    //s = 24; r = 0; a = 3;
    hls_transform_tree_hls_tu_chroma_mode_c_ap_vld_r <= hls_transform_tree_hls_tu_chroma_mode_c_ap_vld;
    if (hls_transform_tree_hls_tu_chroma_mode_c_ap_vld) begin
        hls_transform_tree_hls_tu_chroma_mode_c_r <= hls_transform_tree_hls_tu_chroma_mode_c;
    end
    //------WRITE (scalar, global adr = 484) always block-----//
    //s = 25; r = 0; a = 3;
    hls_transform_tree_hls_tu_intra_pred_mode_ap_vld_r <= hls_transform_tree_hls_tu_intra_pred_mode_ap_vld;
    if (hls_transform_tree_hls_tu_intra_pred_mode_ap_vld) begin
        hls_transform_tree_hls_tu_intra_pred_mode_r <= hls_transform_tree_hls_tu_intra_pred_mode;
    end
    //------WRITE (scalar, global adr = 488) always block-----//
    //s = 26; r = 0; a = 3;
    hls_transform_tree_hls_tu_intra_pred_mode_c_ap_vld_r <= hls_transform_tree_hls_tu_intra_pred_mode_c_ap_vld;
    if (hls_transform_tree_hls_tu_intra_pred_mode_c_ap_vld) begin
        hls_transform_tree_hls_tu_intra_pred_mode_c_r <= hls_transform_tree_hls_tu_intra_pred_mode_c;
    end
    //------READ (scalar, complete partition, global adr = 508) always block-----//
    //s = 31; r = 1; a = 21;
    if (scalar_rdat_vld[31][1][21]) begin
        hls_transform_tree_hls_pu_chroma_mode_c_0 <= scalar_rdat  [31][1][21];
    end
    //------READ (scalar, complete partition, global adr = 509) always block-----//
    //s = 31; r = 0; a = 23;
    if (scalar_rdat_vld[31][0][23]) begin
        hls_transform_tree_hls_pu_chroma_mode_c_1 <= scalar_rdat  [31][0][23];
    end
    //------READ (scalar, complete partition, global adr = 510) always block-----//
    //s = 31; r = 1; a = 22;
    if (scalar_rdat_vld[31][1][22]) begin
        hls_transform_tree_hls_pu_chroma_mode_c_2 <= scalar_rdat  [31][1][22];
    end
    //------READ (scalar, complete partition, global adr = 511) always block-----//
    //s = 31; r = 0; a = 24;
    if (scalar_rdat_vld[31][0][24]) begin
        hls_transform_tree_hls_pu_chroma_mode_c_3 <= scalar_rdat  [31][0][24];
    end
    //------READ (scalar, complete partition, global adr = 512) always block-----//
    //s = 0; r = 0; a = 20;
    if (scalar_rdat_vld[0][0][20]) begin
        hls_transform_tree_hls_pu_intra_pred_mode_0 <= scalar_rdat  [0][0][20];
    end
    //------READ (scalar, complete partition, global adr = 513) always block-----//
    //s = 0; r = 1; a = 20;
    if (scalar_rdat_vld[0][1][20]) begin
        hls_transform_tree_hls_pu_intra_pred_mode_1 <= scalar_rdat  [0][1][20];
    end
    //------READ (scalar, complete partition, global adr = 514) always block-----//
    //s = 0; r = 0; a = 21;
    if (scalar_rdat_vld[0][0][21]) begin
        hls_transform_tree_hls_pu_intra_pred_mode_2 <= scalar_rdat  [0][0][21];
    end
    //------READ (scalar, complete partition, global adr = 515) always block-----//
    //s = 0; r = 1; a = 21;
    if (scalar_rdat_vld[0][1][21]) begin
        hls_transform_tree_hls_pu_intra_pred_mode_3 <= scalar_rdat  [0][1][21];
    end
    //------READ (scalar, complete partition, global adr = 516) always block-----//
    //s = 1; r = 0; a = 16;
    if (scalar_rdat_vld[1][0][16]) begin
        hls_transform_tree_hls_pu_intra_pred_mode_c_0 <= scalar_rdat  [1][0][16];
    end
    //------READ (scalar, complete partition, global adr = 517) always block-----//
    //s = 1; r = 1; a = 16;
    if (scalar_rdat_vld[1][1][16]) begin
        hls_transform_tree_hls_pu_intra_pred_mode_c_1 <= scalar_rdat  [1][1][16];
    end
    //------READ (scalar, complete partition, global adr = 518) always block-----//
    //s = 1; r = 0; a = 17;
    if (scalar_rdat_vld[1][0][17]) begin
        hls_transform_tree_hls_pu_intra_pred_mode_c_2 <= scalar_rdat  [1][0][17];
    end
    //------READ (scalar, complete partition, global adr = 519) always block-----//
    //s = 1; r = 1; a = 17;
    if (scalar_rdat_vld[1][1][17]) begin
        hls_transform_tree_hls_pu_intra_pred_mode_c_3 <= scalar_rdat  [1][1][17];
    end
    //------READ (scalar, global adr = 568) always block-----//
    //s = 14; r = 0; a = 22;
    if (scalar_rdat_vld[14][0][22]) begin
        hls_transform_tree_hls_intra_split_flag <= scalar_rdat  [14][0][22];
    end
    //------READ (scalar, global adr = 364) always block-----//
    //s = 27; r = 0; a = 17;
    if (scalar_rdat_vld[27][0][17]) begin
        hls_transform_tree_hls_log2_max_trafo_size <= scalar_rdat  [27][0][17];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 1; a = 11;
    if (scalar_rdat_vld[30][1][11]) begin
        hls_transform_tree_hls_log2_min_tb_size <= scalar_rdat  [30][1][11];
    end
    //------READ (scalar, global adr = 576) always block-----//
    //s = 16; r = 0; a = 15;
    if (scalar_rdat_vld[16][0][15]) begin
        hls_transform_tree_hls_max_trafo_depth <= scalar_rdat  [16][0][15];
    end
    //------READ (scalar, global adr = 380) always block-----//
    //s = 31; r = 1; a = 23;
    if (scalar_rdat_vld[31][1][23]) begin
        hls_transform_tree_hls_max_transform_hierarchy_depth_inter <= scalar_rdat  [31][1][23];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 1; a = 22;
    if (scalar_rdat_vld[12][1][22]) begin
        hls_transform_tree_hls_pred_mode <= scalar_rdat  [12][1][22];
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 1; a = 22;
    if (scalar_rdat_vld[13][1][22]) begin
        hls_transform_tree_hls_part_mode <= scalar_rdat  [13][1][22];
    end
    //------READ (scalar, global adr = 324) always block-----//
    //s = 17; r = 0; a = 16;
    if (scalar_rdat_vld[17][0][16]) begin
        hls_transform_tree_hls_chroma_array_type <= scalar_rdat  [17][0][16];
    end
    //------READ (scalar, global adr = 328) always block-----//
    //s = 18; r = 0; a = 13;
    if (scalar_rdat_vld[18][0][13]) begin
        hls_transform_tree_hls_chroma_format_idc <= scalar_rdat  [18][0][13];
    end
    //------READ (scalar, global adr = 20) always block-----//
    //s = 5; r = 0; a = 21;
    if (scalar_rdat_vld[5][0][21]) begin
        hls_transform_tree_hls_cbf_luma_o_r <= scalar_rdat  [5][0][21];    //bidir
    end
    //------WRITE (scalar, global adr = 20) always block-----//
    //s = 5; r = 0; a = 7;
    hls_transform_tree_hls_cbf_luma_o_ap_vld_r <= hls_transform_tree_hls_cbf_luma_o_ap_vld;
    if (hls_transform_tree_hls_cbf_luma_o_ap_vld) begin
        hls_transform_tree_hls_cbf_luma_o_r <= hls_transform_tree_hls_cbf_luma_o;
    end
    //------READ (scalar, global adr = 1260) always block-----//
    //s = 27; r = 1; a = 16;
    if (scalar_rdat_vld[27][1][16]) begin
        hls_transform_tree_hls_rv_hls_transform_unit <= scalar_rdat  [27][1][16];
    end
    //------READ (scalar, global adr = 1264) always block-----//
    //s = 28; r = 0; a = 16;
    if (scalar_rdat_vld[28][0][16]) begin
        hls_transform_tree_hls_rv_ff_hevc_deblocking_boundary_strengths <= scalar_rdat  [28][0][16];
    end
    //------READ (scalar, global adr = 1268) always block-----//
    //s = 29; r = 1; a = 23;
    if (scalar_rdat_vld[29][1][23]) begin
        hls_transform_tree_hls_rv_set_deblocking_bypass <= scalar_rdat  [29][1][23];
    end
    //------READ (scalar, global adr = 1240) always block-----//
    //s = 22; r = 0; a = 19;
    if (scalar_rdat_vld[22][0][19]) begin
        hls_transform_tree_hls_rv_callback_flag <= scalar_rdat  [22][0][19];
    end
    //------READ (scalar, global adr = 388) always block-----//
    //s = 1; r = 0; a = 18;
    if (scalar_rdat_vld[1][0][18]) begin
        hls_transform_tree_hls_min_tb_width <= scalar_rdat  [1][0][18];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 18;
    if (scalar_rdat_vld[26][0][18]) begin
        hls_transform_tree_hls_log2_ctb_size <= scalar_rdat  [26][0][18];
    end
    //------READ (scalar, global adr = 32) always block-----//
    //s = 8; r = 1; a = 25;
    if (scalar_rdat_vld[8][1][25]) begin
        hls_transform_tree_hls_cb_size <= scalar_rdat  [8][1][25];
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 1; a = 26;
    if (scalar_rdat_vld[6][1][26]) begin
        hls_transform_tree_hls_width <= scalar_rdat  [6][1][26];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 1; a = 15;
    if (scalar_rdat_vld[19][1][15]) begin
        hls_transform_tree_hls_height <= scalar_rdat  [19][1][15];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 0; a = 24;
    if (scalar_rdat_vld[29][0][24]) begin
        hls_transform_tree_hls_log2_min_pu_size <= scalar_rdat  [29][0][24];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 0; a = 15;
    if (scalar_rdat_vld[3][0][15]) begin
        hls_transform_tree_hls_min_pu_width <= scalar_rdat  [3][0][15];
    end
`endif
    //============================================================
    //hls_transform_tree_hls_dup1       (f = 11)
    //============================================================
`ifdef enable_connect_hls_transform_tree_hls_dup1
    //------WRITE (scalar, global adr = 168) always block-----//
    //s = 10; r = 0; a = 7;
    hls_transform_tree_hls_dup1_log2_trafo_size_ap_vld_r <= hls_transform_tree_hls_dup1_log2_trafo_size_ap_vld;
    if (hls_transform_tree_hls_dup1_log2_trafo_size_ap_vld) begin
        hls_transform_tree_hls_dup1_log2_trafo_size_r <= hls_transform_tree_hls_dup1_log2_trafo_size;
    end
    //------WRITE (scalar, global adr = 12) always block-----//
    //s = 3; r = 1; a = 0;
    hls_transform_tree_hls_dup1_split_transform_flag_ap_vld_r <= hls_transform_tree_hls_dup1_split_transform_flag_ap_vld;
    if (hls_transform_tree_hls_dup1_split_transform_flag_ap_vld) begin
        hls_transform_tree_hls_dup1_split_transform_flag_r <= hls_transform_tree_hls_dup1_split_transform_flag;
    end
    //------WRITE (scalar, global adr = 16) always block-----//
    //s = 4; r = 1; a = 3;
    hls_transform_tree_hls_dup1_cbf_data_ap_vld_r <= hls_transform_tree_hls_dup1_cbf_data_ap_vld;
    if (hls_transform_tree_hls_dup1_cbf_data_ap_vld) begin
        hls_transform_tree_hls_dup1_cbf_data_r <= hls_transform_tree_hls_dup1_cbf_data;
    end
    //------READ (scalar, global adr = 1164) always block-----//
    //s = 3; r = 1; a = 14;
    if (scalar_rdat_vld[3][1][14]) begin
        hls_transform_tree_hls_dup1_disable_deblocking_filter_flag <= scalar_rdat  [3][1][14];
    end
    //------READ (scalar, global adr = 440) always block-----//
    //s = 14; r = 1; a = 22;
    if (scalar_rdat_vld[14][1][22]) begin
        hls_transform_tree_hls_dup1_transquant_bypass_enable_flag <= scalar_rdat  [14][1][22];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 0; a = 21;
    if (scalar_rdat_vld[15][0][21]) begin
        hls_transform_tree_hls_dup1_cu_transquant_bypass_flag <= scalar_rdat  [15][0][21];
    end
    //------WRITE (scalar, global adr = 480) always block-----//
    //s = 24; r = 1; a = 3;
    hls_transform_tree_hls_dup1_tu_chroma_mode_c_ap_vld_r <= hls_transform_tree_hls_dup1_tu_chroma_mode_c_ap_vld;
    if (hls_transform_tree_hls_dup1_tu_chroma_mode_c_ap_vld) begin
        hls_transform_tree_hls_dup1_tu_chroma_mode_c_r <= hls_transform_tree_hls_dup1_tu_chroma_mode_c;
    end
    //------WRITE (scalar, global adr = 484) always block-----//
    //s = 25; r = 1; a = 3;
    hls_transform_tree_hls_dup1_tu_intra_pred_mode_ap_vld_r <= hls_transform_tree_hls_dup1_tu_intra_pred_mode_ap_vld;
    if (hls_transform_tree_hls_dup1_tu_intra_pred_mode_ap_vld) begin
        hls_transform_tree_hls_dup1_tu_intra_pred_mode_r <= hls_transform_tree_hls_dup1_tu_intra_pred_mode;
    end
    //------WRITE (scalar, global adr = 488) always block-----//
    //s = 26; r = 1; a = 3;
    hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_ap_vld_r <= hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_ap_vld;
    if (hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_ap_vld) begin
        hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_r <= hls_transform_tree_hls_dup1_tu_intra_pred_mode_c;
    end
    //------READ (scalar, complete partition, global adr = 508) always block-----//
    //s = 31; r = 0; a = 25;
    if (scalar_rdat_vld[31][0][25]) begin
        hls_transform_tree_hls_dup1_pu_chroma_mode_c_0 <= scalar_rdat  [31][0][25];
    end
    //------READ (scalar, complete partition, global adr = 509) always block-----//
    //s = 31; r = 1; a = 24;
    if (scalar_rdat_vld[31][1][24]) begin
        hls_transform_tree_hls_dup1_pu_chroma_mode_c_1 <= scalar_rdat  [31][1][24];
    end
    //------READ (scalar, complete partition, global adr = 510) always block-----//
    //s = 31; r = 0; a = 26;
    if (scalar_rdat_vld[31][0][26]) begin
        hls_transform_tree_hls_dup1_pu_chroma_mode_c_2 <= scalar_rdat  [31][0][26];
    end
    //------READ (scalar, complete partition, global adr = 511) always block-----//
    //s = 31; r = 1; a = 25;
    if (scalar_rdat_vld[31][1][25]) begin
        hls_transform_tree_hls_dup1_pu_chroma_mode_c_3 <= scalar_rdat  [31][1][25];
    end
    //------READ (scalar, complete partition, global adr = 512) always block-----//
    //s = 0; r = 0; a = 22;
    if (scalar_rdat_vld[0][0][22]) begin
        hls_transform_tree_hls_dup1_pu_intra_pred_mode_0 <= scalar_rdat  [0][0][22];
    end
    //------READ (scalar, complete partition, global adr = 513) always block-----//
    //s = 0; r = 1; a = 22;
    if (scalar_rdat_vld[0][1][22]) begin
        hls_transform_tree_hls_dup1_pu_intra_pred_mode_1 <= scalar_rdat  [0][1][22];
    end
    //------READ (scalar, complete partition, global adr = 514) always block-----//
    //s = 0; r = 0; a = 23;
    if (scalar_rdat_vld[0][0][23]) begin
        hls_transform_tree_hls_dup1_pu_intra_pred_mode_2 <= scalar_rdat  [0][0][23];
    end
    //------READ (scalar, complete partition, global adr = 515) always block-----//
    //s = 0; r = 1; a = 23;
    if (scalar_rdat_vld[0][1][23]) begin
        hls_transform_tree_hls_dup1_pu_intra_pred_mode_3 <= scalar_rdat  [0][1][23];
    end
    //------READ (scalar, complete partition, global adr = 516) always block-----//
    //s = 1; r = 1; a = 18;
    if (scalar_rdat_vld[1][1][18]) begin
        hls_transform_tree_hls_dup1_pu_intra_pred_mode_c_0 <= scalar_rdat  [1][1][18];
    end
    //------READ (scalar, complete partition, global adr = 517) always block-----//
    //s = 1; r = 0; a = 19;
    if (scalar_rdat_vld[1][0][19]) begin
        hls_transform_tree_hls_dup1_pu_intra_pred_mode_c_1 <= scalar_rdat  [1][0][19];
    end
    //------READ (scalar, complete partition, global adr = 518) always block-----//
    //s = 1; r = 1; a = 19;
    if (scalar_rdat_vld[1][1][19]) begin
        hls_transform_tree_hls_dup1_pu_intra_pred_mode_c_2 <= scalar_rdat  [1][1][19];
    end
    //------READ (scalar, complete partition, global adr = 519) always block-----//
    //s = 1; r = 0; a = 20;
    if (scalar_rdat_vld[1][0][20]) begin
        hls_transform_tree_hls_dup1_pu_intra_pred_mode_c_3 <= scalar_rdat  [1][0][20];
    end
    //------READ (scalar, global adr = 568) always block-----//
    //s = 14; r = 0; a = 23;
    if (scalar_rdat_vld[14][0][23]) begin
        hls_transform_tree_hls_dup1_intra_split_flag <= scalar_rdat  [14][0][23];
    end
    //------READ (scalar, global adr = 364) always block-----//
    //s = 27; r = 0; a = 18;
    if (scalar_rdat_vld[27][0][18]) begin
        hls_transform_tree_hls_dup1_log2_max_trafo_size <= scalar_rdat  [27][0][18];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 0; a = 12;
    if (scalar_rdat_vld[30][0][12]) begin
        hls_transform_tree_hls_dup1_log2_min_tb_size <= scalar_rdat  [30][0][12];
    end
    //------READ (scalar, global adr = 576) always block-----//
    //s = 16; r = 1; a = 14;
    if (scalar_rdat_vld[16][1][14]) begin
        hls_transform_tree_hls_dup1_max_trafo_depth <= scalar_rdat  [16][1][14];
    end
    //------READ (scalar, global adr = 380) always block-----//
    //s = 31; r = 0; a = 27;
    if (scalar_rdat_vld[31][0][27]) begin
        hls_transform_tree_hls_dup1_max_transform_hierarchy_depth_inter <= scalar_rdat  [31][0][27];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 24;
    if (scalar_rdat_vld[12][0][24]) begin
        hls_transform_tree_hls_dup1_pred_mode <= scalar_rdat  [12][0][24];
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 0; a = 23;
    if (scalar_rdat_vld[13][0][23]) begin
        hls_transform_tree_hls_dup1_part_mode <= scalar_rdat  [13][0][23];
    end
    //------READ (scalar, global adr = 324) always block-----//
    //s = 17; r = 1; a = 16;
    if (scalar_rdat_vld[17][1][16]) begin
        hls_transform_tree_hls_dup1_chroma_array_type <= scalar_rdat  [17][1][16];
    end
    //------READ (scalar, global adr = 328) always block-----//
    //s = 18; r = 1; a = 12;
    if (scalar_rdat_vld[18][1][12]) begin
        hls_transform_tree_hls_dup1_chroma_format_idc <= scalar_rdat  [18][1][12];
    end
    //------READ (scalar, global adr = 20) always block-----//
    //s = 5; r = 1; a = 20;
    if (scalar_rdat_vld[5][1][20]) begin
        hls_transform_tree_hls_dup1_cbf_luma_o_r <= scalar_rdat  [5][1][20];    //bidir
    end
    //------WRITE (scalar, global adr = 20) always block-----//
    //s = 5; r = 1; a = 7;
    hls_transform_tree_hls_dup1_cbf_luma_o_ap_vld_r <= hls_transform_tree_hls_dup1_cbf_luma_o_ap_vld;
    if (hls_transform_tree_hls_dup1_cbf_luma_o_ap_vld) begin
        hls_transform_tree_hls_dup1_cbf_luma_o_r <= hls_transform_tree_hls_dup1_cbf_luma_o;
    end
    //------READ (scalar, global adr = 1260) always block-----//
    //s = 27; r = 1; a = 17;
    if (scalar_rdat_vld[27][1][17]) begin
        hls_transform_tree_hls_dup1_rv_hls_transform_unit <= scalar_rdat  [27][1][17];
    end
    //------READ (scalar, global adr = 1264) always block-----//
    //s = 28; r = 1; a = 16;
    if (scalar_rdat_vld[28][1][16]) begin
        hls_transform_tree_hls_dup1_rv_ff_hevc_deblocking_boundary_strengths <= scalar_rdat  [28][1][16];
    end
    //------READ (scalar, global adr = 1268) always block-----//
    //s = 29; r = 1; a = 24;
    if (scalar_rdat_vld[29][1][24]) begin
        hls_transform_tree_hls_dup1_rv_set_deblocking_bypass <= scalar_rdat  [29][1][24];
    end
    //------READ (scalar, global adr = 1240) always block-----//
    //s = 22; r = 1; a = 18;
    if (scalar_rdat_vld[22][1][18]) begin
        hls_transform_tree_hls_dup1_rv_callback_flag <= scalar_rdat  [22][1][18];
    end
    //------READ (scalar, global adr = 388) always block-----//
    //s = 1; r = 1; a = 20;
    if (scalar_rdat_vld[1][1][20]) begin
        hls_transform_tree_hls_dup1_min_tb_width <= scalar_rdat  [1][1][20];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 17;
    if (scalar_rdat_vld[26][1][17]) begin
        hls_transform_tree_hls_dup1_log2_ctb_size <= scalar_rdat  [26][1][17];
    end
    //------READ (scalar, global adr = 32) always block-----//
    //s = 8; r = 0; a = 26;
    if (scalar_rdat_vld[8][0][26]) begin
        hls_transform_tree_hls_dup1_cb_size <= scalar_rdat  [8][0][26];
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 0; a = 28;
    if (scalar_rdat_vld[6][0][28]) begin
        hls_transform_tree_hls_dup1_width <= scalar_rdat  [6][0][28];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 0; a = 16;
    if (scalar_rdat_vld[19][0][16]) begin
        hls_transform_tree_hls_dup1_height <= scalar_rdat  [19][0][16];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 0; a = 25;
    if (scalar_rdat_vld[29][0][25]) begin
        hls_transform_tree_hls_dup1_log2_min_pu_size <= scalar_rdat  [29][0][25];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 0; a = 16;
    if (scalar_rdat_vld[3][0][16]) begin
        hls_transform_tree_hls_dup1_min_pu_width <= scalar_rdat  [3][0][16];
    end
`endif
    //============================================================
    //hls_transform_tree_hls_dup2       (f = 12)
    //============================================================
`ifdef enable_connect_hls_transform_tree_hls_dup2
    //------WRITE (scalar, global adr = 168) always block-----//
    //s = 10; r = 1; a = 7;
    hls_transform_tree_hls_dup2_log2_trafo_size_ap_vld_r <= hls_transform_tree_hls_dup2_log2_trafo_size_ap_vld;
    if (hls_transform_tree_hls_dup2_log2_trafo_size_ap_vld) begin
        hls_transform_tree_hls_dup2_log2_trafo_size_r <= hls_transform_tree_hls_dup2_log2_trafo_size;
    end
    //------WRITE (scalar, global adr = 12) always block-----//
    //s = 3; r = 0; a = 1;
    hls_transform_tree_hls_dup2_split_transform_flag_ap_vld_r <= hls_transform_tree_hls_dup2_split_transform_flag_ap_vld;
    if (hls_transform_tree_hls_dup2_split_transform_flag_ap_vld) begin
        hls_transform_tree_hls_dup2_split_transform_flag_r <= hls_transform_tree_hls_dup2_split_transform_flag;
    end
    //------WRITE (scalar, global adr = 16) always block-----//
    //s = 4; r = 0; a = 4;
    hls_transform_tree_hls_dup2_cbf_data_ap_vld_r <= hls_transform_tree_hls_dup2_cbf_data_ap_vld;
    if (hls_transform_tree_hls_dup2_cbf_data_ap_vld) begin
        hls_transform_tree_hls_dup2_cbf_data_r <= hls_transform_tree_hls_dup2_cbf_data;
    end
    //------READ (scalar, global adr = 1164) always block-----//
    //s = 3; r = 1; a = 15;
    if (scalar_rdat_vld[3][1][15]) begin
        hls_transform_tree_hls_dup2_disable_deblocking_filter_flag <= scalar_rdat  [3][1][15];
    end
    //------READ (scalar, global adr = 440) always block-----//
    //s = 14; r = 1; a = 23;
    if (scalar_rdat_vld[14][1][23]) begin
        hls_transform_tree_hls_dup2_transquant_bypass_enable_flag <= scalar_rdat  [14][1][23];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 21;
    if (scalar_rdat_vld[15][1][21]) begin
        hls_transform_tree_hls_dup2_cu_transquant_bypass_flag <= scalar_rdat  [15][1][21];
    end
    //------WRITE (scalar, global adr = 480) always block-----//
    //s = 24; r = 0; a = 4;
    hls_transform_tree_hls_dup2_tu_chroma_mode_c_ap_vld_r <= hls_transform_tree_hls_dup2_tu_chroma_mode_c_ap_vld;
    if (hls_transform_tree_hls_dup2_tu_chroma_mode_c_ap_vld) begin
        hls_transform_tree_hls_dup2_tu_chroma_mode_c_r <= hls_transform_tree_hls_dup2_tu_chroma_mode_c;
    end
    //------WRITE (scalar, global adr = 484) always block-----//
    //s = 25; r = 0; a = 4;
    hls_transform_tree_hls_dup2_tu_intra_pred_mode_ap_vld_r <= hls_transform_tree_hls_dup2_tu_intra_pred_mode_ap_vld;
    if (hls_transform_tree_hls_dup2_tu_intra_pred_mode_ap_vld) begin
        hls_transform_tree_hls_dup2_tu_intra_pred_mode_r <= hls_transform_tree_hls_dup2_tu_intra_pred_mode;
    end
    //------WRITE (scalar, global adr = 488) always block-----//
    //s = 26; r = 0; a = 4;
    hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_ap_vld_r <= hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_ap_vld;
    if (hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_ap_vld) begin
        hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_r <= hls_transform_tree_hls_dup2_tu_intra_pred_mode_c;
    end
    //------READ (scalar, complete partition, global adr = 508) always block-----//
    //s = 31; r = 1; a = 26;
    if (scalar_rdat_vld[31][1][26]) begin
        hls_transform_tree_hls_dup2_pu_chroma_mode_c_0 <= scalar_rdat  [31][1][26];
    end
    //------READ (scalar, complete partition, global adr = 509) always block-----//
    //s = 31; r = 0; a = 28;
    if (scalar_rdat_vld[31][0][28]) begin
        hls_transform_tree_hls_dup2_pu_chroma_mode_c_1 <= scalar_rdat  [31][0][28];
    end
    //------READ (scalar, complete partition, global adr = 510) always block-----//
    //s = 31; r = 1; a = 27;
    if (scalar_rdat_vld[31][1][27]) begin
        hls_transform_tree_hls_dup2_pu_chroma_mode_c_2 <= scalar_rdat  [31][1][27];
    end
    //------READ (scalar, complete partition, global adr = 511) always block-----//
    //s = 31; r = 0; a = 29;
    if (scalar_rdat_vld[31][0][29]) begin
        hls_transform_tree_hls_dup2_pu_chroma_mode_c_3 <= scalar_rdat  [31][0][29];
    end
    //------READ (scalar, complete partition, global adr = 512) always block-----//
    //s = 0; r = 0; a = 24;
    if (scalar_rdat_vld[0][0][24]) begin
        hls_transform_tree_hls_dup2_pu_intra_pred_mode_0 <= scalar_rdat  [0][0][24];
    end
    //------READ (scalar, complete partition, global adr = 513) always block-----//
    //s = 0; r = 1; a = 24;
    if (scalar_rdat_vld[0][1][24]) begin
        hls_transform_tree_hls_dup2_pu_intra_pred_mode_1 <= scalar_rdat  [0][1][24];
    end
    //------READ (scalar, complete partition, global adr = 514) always block-----//
    //s = 0; r = 0; a = 25;
    if (scalar_rdat_vld[0][0][25]) begin
        hls_transform_tree_hls_dup2_pu_intra_pred_mode_2 <= scalar_rdat  [0][0][25];
    end
    //------READ (scalar, complete partition, global adr = 515) always block-----//
    //s = 0; r = 1; a = 25;
    if (scalar_rdat_vld[0][1][25]) begin
        hls_transform_tree_hls_dup2_pu_intra_pred_mode_3 <= scalar_rdat  [0][1][25];
    end
    //------READ (scalar, complete partition, global adr = 516) always block-----//
    //s = 1; r = 0; a = 21;
    if (scalar_rdat_vld[1][0][21]) begin
        hls_transform_tree_hls_dup2_pu_intra_pred_mode_c_0 <= scalar_rdat  [1][0][21];
    end
    //------READ (scalar, complete partition, global adr = 517) always block-----//
    //s = 1; r = 1; a = 21;
    if (scalar_rdat_vld[1][1][21]) begin
        hls_transform_tree_hls_dup2_pu_intra_pred_mode_c_1 <= scalar_rdat  [1][1][21];
    end
    //------READ (scalar, complete partition, global adr = 518) always block-----//
    //s = 1; r = 0; a = 22;
    if (scalar_rdat_vld[1][0][22]) begin
        hls_transform_tree_hls_dup2_pu_intra_pred_mode_c_2 <= scalar_rdat  [1][0][22];
    end
    //------READ (scalar, complete partition, global adr = 519) always block-----//
    //s = 1; r = 1; a = 22;
    if (scalar_rdat_vld[1][1][22]) begin
        hls_transform_tree_hls_dup2_pu_intra_pred_mode_c_3 <= scalar_rdat  [1][1][22];
    end
    //------READ (scalar, global adr = 568) always block-----//
    //s = 14; r = 0; a = 24;
    if (scalar_rdat_vld[14][0][24]) begin
        hls_transform_tree_hls_dup2_intra_split_flag <= scalar_rdat  [14][0][24];
    end
    //------READ (scalar, global adr = 364) always block-----//
    //s = 27; r = 0; a = 19;
    if (scalar_rdat_vld[27][0][19]) begin
        hls_transform_tree_hls_dup2_log2_max_trafo_size <= scalar_rdat  [27][0][19];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 1; a = 12;
    if (scalar_rdat_vld[30][1][12]) begin
        hls_transform_tree_hls_dup2_log2_min_tb_size <= scalar_rdat  [30][1][12];
    end
    //------READ (scalar, global adr = 576) always block-----//
    //s = 16; r = 0; a = 16;
    if (scalar_rdat_vld[16][0][16]) begin
        hls_transform_tree_hls_dup2_max_trafo_depth <= scalar_rdat  [16][0][16];
    end
    //------READ (scalar, global adr = 380) always block-----//
    //s = 31; r = 1; a = 28;
    if (scalar_rdat_vld[31][1][28]) begin
        hls_transform_tree_hls_dup2_max_transform_hierarchy_depth_inter <= scalar_rdat  [31][1][28];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 1; a = 23;
    if (scalar_rdat_vld[12][1][23]) begin
        hls_transform_tree_hls_dup2_pred_mode <= scalar_rdat  [12][1][23];
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 1; a = 23;
    if (scalar_rdat_vld[13][1][23]) begin
        hls_transform_tree_hls_dup2_part_mode <= scalar_rdat  [13][1][23];
    end
    //------READ (scalar, global adr = 324) always block-----//
    //s = 17; r = 0; a = 17;
    if (scalar_rdat_vld[17][0][17]) begin
        hls_transform_tree_hls_dup2_chroma_array_type <= scalar_rdat  [17][0][17];
    end
    //------READ (scalar, global adr = 328) always block-----//
    //s = 18; r = 0; a = 14;
    if (scalar_rdat_vld[18][0][14]) begin
        hls_transform_tree_hls_dup2_chroma_format_idc <= scalar_rdat  [18][0][14];
    end
    //------READ (scalar, global adr = 20) always block-----//
    //s = 5; r = 0; a = 22;
    if (scalar_rdat_vld[5][0][22]) begin
        hls_transform_tree_hls_dup2_cbf_luma_o_r <= scalar_rdat  [5][0][22];    //bidir
    end
    //------WRITE (scalar, global adr = 20) always block-----//
    //s = 5; r = 0; a = 8;
    hls_transform_tree_hls_dup2_cbf_luma_o_ap_vld_r <= hls_transform_tree_hls_dup2_cbf_luma_o_ap_vld;
    if (hls_transform_tree_hls_dup2_cbf_luma_o_ap_vld) begin
        hls_transform_tree_hls_dup2_cbf_luma_o_r <= hls_transform_tree_hls_dup2_cbf_luma_o;
    end
    //------READ (scalar, global adr = 1260) always block-----//
    //s = 27; r = 1; a = 18;
    if (scalar_rdat_vld[27][1][18]) begin
        hls_transform_tree_hls_dup2_rv_hls_transform_unit <= scalar_rdat  [27][1][18];
    end
    //------READ (scalar, global adr = 1264) always block-----//
    //s = 28; r = 0; a = 17;
    if (scalar_rdat_vld[28][0][17]) begin
        hls_transform_tree_hls_dup2_rv_ff_hevc_deblocking_boundary_strengths <= scalar_rdat  [28][0][17];
    end
    //------READ (scalar, global adr = 1268) always block-----//
    //s = 29; r = 1; a = 25;
    if (scalar_rdat_vld[29][1][25]) begin
        hls_transform_tree_hls_dup2_rv_set_deblocking_bypass <= scalar_rdat  [29][1][25];
    end
    //------READ (scalar, global adr = 1240) always block-----//
    //s = 22; r = 0; a = 20;
    if (scalar_rdat_vld[22][0][20]) begin
        hls_transform_tree_hls_dup2_rv_callback_flag <= scalar_rdat  [22][0][20];
    end
    //------READ (scalar, global adr = 388) always block-----//
    //s = 1; r = 0; a = 23;
    if (scalar_rdat_vld[1][0][23]) begin
        hls_transform_tree_hls_dup2_min_tb_width <= scalar_rdat  [1][0][23];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 19;
    if (scalar_rdat_vld[26][0][19]) begin
        hls_transform_tree_hls_dup2_log2_ctb_size <= scalar_rdat  [26][0][19];
    end
    //------READ (scalar, global adr = 32) always block-----//
    //s = 8; r = 1; a = 26;
    if (scalar_rdat_vld[8][1][26]) begin
        hls_transform_tree_hls_dup2_cb_size <= scalar_rdat  [8][1][26];
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 1; a = 27;
    if (scalar_rdat_vld[6][1][27]) begin
        hls_transform_tree_hls_dup2_width <= scalar_rdat  [6][1][27];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 1; a = 16;
    if (scalar_rdat_vld[19][1][16]) begin
        hls_transform_tree_hls_dup2_height <= scalar_rdat  [19][1][16];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 0; a = 26;
    if (scalar_rdat_vld[29][0][26]) begin
        hls_transform_tree_hls_dup2_log2_min_pu_size <= scalar_rdat  [29][0][26];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 0; a = 17;
    if (scalar_rdat_vld[3][0][17]) begin
        hls_transform_tree_hls_dup2_min_pu_width <= scalar_rdat  [3][0][17];
    end
`endif
    //============================================================
    //hls_transform_tree_hls_dup3       (f = 13)
    //============================================================
`ifdef enable_connect_hls_transform_tree_hls_dup3
    //------WRITE (scalar, global adr = 168) always block-----//
    //s = 10; r = 0; a = 8;
    hls_transform_tree_hls_dup3_log2_trafo_size_ap_vld_r <= hls_transform_tree_hls_dup3_log2_trafo_size_ap_vld;
    if (hls_transform_tree_hls_dup3_log2_trafo_size_ap_vld) begin
        hls_transform_tree_hls_dup3_log2_trafo_size_r <= hls_transform_tree_hls_dup3_log2_trafo_size;
    end
    //------WRITE (scalar, global adr = 12) always block-----//
    //s = 3; r = 1; a = 1;
    hls_transform_tree_hls_dup3_split_transform_flag_ap_vld_r <= hls_transform_tree_hls_dup3_split_transform_flag_ap_vld;
    if (hls_transform_tree_hls_dup3_split_transform_flag_ap_vld) begin
        hls_transform_tree_hls_dup3_split_transform_flag_r <= hls_transform_tree_hls_dup3_split_transform_flag;
    end
    //------WRITE (scalar, global adr = 16) always block-----//
    //s = 4; r = 1; a = 4;
    hls_transform_tree_hls_dup3_cbf_data_ap_vld_r <= hls_transform_tree_hls_dup3_cbf_data_ap_vld;
    if (hls_transform_tree_hls_dup3_cbf_data_ap_vld) begin
        hls_transform_tree_hls_dup3_cbf_data_r <= hls_transform_tree_hls_dup3_cbf_data;
    end
    //------READ (scalar, global adr = 1164) always block-----//
    //s = 3; r = 1; a = 16;
    if (scalar_rdat_vld[3][1][16]) begin
        hls_transform_tree_hls_dup3_disable_deblocking_filter_flag <= scalar_rdat  [3][1][16];
    end
    //------READ (scalar, global adr = 440) always block-----//
    //s = 14; r = 1; a = 24;
    if (scalar_rdat_vld[14][1][24]) begin
        hls_transform_tree_hls_dup3_transquant_bypass_enable_flag <= scalar_rdat  [14][1][24];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 0; a = 22;
    if (scalar_rdat_vld[15][0][22]) begin
        hls_transform_tree_hls_dup3_cu_transquant_bypass_flag <= scalar_rdat  [15][0][22];
    end
    //------WRITE (scalar, global adr = 480) always block-----//
    //s = 24; r = 1; a = 4;
    hls_transform_tree_hls_dup3_tu_chroma_mode_c_ap_vld_r <= hls_transform_tree_hls_dup3_tu_chroma_mode_c_ap_vld;
    if (hls_transform_tree_hls_dup3_tu_chroma_mode_c_ap_vld) begin
        hls_transform_tree_hls_dup3_tu_chroma_mode_c_r <= hls_transform_tree_hls_dup3_tu_chroma_mode_c;
    end
    //------WRITE (scalar, global adr = 484) always block-----//
    //s = 25; r = 1; a = 4;
    hls_transform_tree_hls_dup3_tu_intra_pred_mode_ap_vld_r <= hls_transform_tree_hls_dup3_tu_intra_pred_mode_ap_vld;
    if (hls_transform_tree_hls_dup3_tu_intra_pred_mode_ap_vld) begin
        hls_transform_tree_hls_dup3_tu_intra_pred_mode_r <= hls_transform_tree_hls_dup3_tu_intra_pred_mode;
    end
    //------WRITE (scalar, global adr = 488) always block-----//
    //s = 26; r = 1; a = 4;
    hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_ap_vld_r <= hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_ap_vld;
    if (hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_ap_vld) begin
        hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_r <= hls_transform_tree_hls_dup3_tu_intra_pred_mode_c;
    end
    //------READ (scalar, complete partition, global adr = 508) always block-----//
    //s = 31; r = 0; a = 30;
    if (scalar_rdat_vld[31][0][30]) begin
        hls_transform_tree_hls_dup3_pu_chroma_mode_c_0 <= scalar_rdat  [31][0][30];
    end
    //------READ (scalar, complete partition, global adr = 509) always block-----//
    //s = 31; r = 1; a = 29;
    if (scalar_rdat_vld[31][1][29]) begin
        hls_transform_tree_hls_dup3_pu_chroma_mode_c_1 <= scalar_rdat  [31][1][29];
    end
    //------READ (scalar, complete partition, global adr = 510) always block-----//
    //s = 31; r = 0; a = 31;
    if (scalar_rdat_vld[31][0][31]) begin
        hls_transform_tree_hls_dup3_pu_chroma_mode_c_2 <= scalar_rdat  [31][0][31];
    end
    //------READ (scalar, complete partition, global adr = 511) always block-----//
    //s = 31; r = 1; a = 30;
    if (scalar_rdat_vld[31][1][30]) begin
        hls_transform_tree_hls_dup3_pu_chroma_mode_c_3 <= scalar_rdat  [31][1][30];
    end
    //------READ (scalar, complete partition, global adr = 512) always block-----//
    //s = 0; r = 0; a = 26;
    if (scalar_rdat_vld[0][0][26]) begin
        hls_transform_tree_hls_dup3_pu_intra_pred_mode_0 <= scalar_rdat  [0][0][26];
    end
    //------READ (scalar, complete partition, global adr = 513) always block-----//
    //s = 0; r = 1; a = 26;
    if (scalar_rdat_vld[0][1][26]) begin
        hls_transform_tree_hls_dup3_pu_intra_pred_mode_1 <= scalar_rdat  [0][1][26];
    end
    //------READ (scalar, complete partition, global adr = 514) always block-----//
    //s = 0; r = 0; a = 27;
    if (scalar_rdat_vld[0][0][27]) begin
        hls_transform_tree_hls_dup3_pu_intra_pred_mode_2 <= scalar_rdat  [0][0][27];
    end
    //------READ (scalar, complete partition, global adr = 515) always block-----//
    //s = 0; r = 1; a = 27;
    if (scalar_rdat_vld[0][1][27]) begin
        hls_transform_tree_hls_dup3_pu_intra_pred_mode_3 <= scalar_rdat  [0][1][27];
    end
    //------READ (scalar, complete partition, global adr = 516) always block-----//
    //s = 1; r = 1; a = 23;
    if (scalar_rdat_vld[1][1][23]) begin
        hls_transform_tree_hls_dup3_pu_intra_pred_mode_c_0 <= scalar_rdat  [1][1][23];
    end
    //------READ (scalar, complete partition, global adr = 517) always block-----//
    //s = 1; r = 0; a = 24;
    if (scalar_rdat_vld[1][0][24]) begin
        hls_transform_tree_hls_dup3_pu_intra_pred_mode_c_1 <= scalar_rdat  [1][0][24];
    end
    //------READ (scalar, complete partition, global adr = 518) always block-----//
    //s = 1; r = 1; a = 24;
    if (scalar_rdat_vld[1][1][24]) begin
        hls_transform_tree_hls_dup3_pu_intra_pred_mode_c_2 <= scalar_rdat  [1][1][24];
    end
    //------READ (scalar, complete partition, global adr = 519) always block-----//
    //s = 1; r = 0; a = 25;
    if (scalar_rdat_vld[1][0][25]) begin
        hls_transform_tree_hls_dup3_pu_intra_pred_mode_c_3 <= scalar_rdat  [1][0][25];
    end
    //------READ (scalar, global adr = 568) always block-----//
    //s = 14; r = 0; a = 25;
    if (scalar_rdat_vld[14][0][25]) begin
        hls_transform_tree_hls_dup3_intra_split_flag <= scalar_rdat  [14][0][25];
    end
    //------READ (scalar, global adr = 364) always block-----//
    //s = 27; r = 0; a = 20;
    if (scalar_rdat_vld[27][0][20]) begin
        hls_transform_tree_hls_dup3_log2_max_trafo_size <= scalar_rdat  [27][0][20];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 0; a = 13;
    if (scalar_rdat_vld[30][0][13]) begin
        hls_transform_tree_hls_dup3_log2_min_tb_size <= scalar_rdat  [30][0][13];
    end
    //------READ (scalar, global adr = 576) always block-----//
    //s = 16; r = 1; a = 15;
    if (scalar_rdat_vld[16][1][15]) begin
        hls_transform_tree_hls_dup3_max_trafo_depth <= scalar_rdat  [16][1][15];
    end
    //------READ (scalar, global adr = 380) always block-----//
    //s = 31; r = 0; a = 32;
    if (scalar_rdat_vld[31][0][32]) begin
        hls_transform_tree_hls_dup3_max_transform_hierarchy_depth_inter <= scalar_rdat  [31][0][32];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 25;
    if (scalar_rdat_vld[12][0][25]) begin
        hls_transform_tree_hls_dup3_pred_mode <= scalar_rdat  [12][0][25];
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 0; a = 24;
    if (scalar_rdat_vld[13][0][24]) begin
        hls_transform_tree_hls_dup3_part_mode <= scalar_rdat  [13][0][24];
    end
    //------READ (scalar, global adr = 324) always block-----//
    //s = 17; r = 1; a = 17;
    if (scalar_rdat_vld[17][1][17]) begin
        hls_transform_tree_hls_dup3_chroma_array_type <= scalar_rdat  [17][1][17];
    end
    //------READ (scalar, global adr = 328) always block-----//
    //s = 18; r = 1; a = 13;
    if (scalar_rdat_vld[18][1][13]) begin
        hls_transform_tree_hls_dup3_chroma_format_idc <= scalar_rdat  [18][1][13];
    end
    //------READ (scalar, global adr = 20) always block-----//
    //s = 5; r = 1; a = 21;
    if (scalar_rdat_vld[5][1][21]) begin
        hls_transform_tree_hls_dup3_cbf_luma_o_r <= scalar_rdat  [5][1][21];    //bidir
    end
    //------WRITE (scalar, global adr = 20) always block-----//
    //s = 5; r = 1; a = 8;
    hls_transform_tree_hls_dup3_cbf_luma_o_ap_vld_r <= hls_transform_tree_hls_dup3_cbf_luma_o_ap_vld;
    if (hls_transform_tree_hls_dup3_cbf_luma_o_ap_vld) begin
        hls_transform_tree_hls_dup3_cbf_luma_o_r <= hls_transform_tree_hls_dup3_cbf_luma_o;
    end
    //------READ (scalar, global adr = 1260) always block-----//
    //s = 27; r = 1; a = 19;
    if (scalar_rdat_vld[27][1][19]) begin
        hls_transform_tree_hls_dup3_rv_hls_transform_unit <= scalar_rdat  [27][1][19];
    end
    //------READ (scalar, global adr = 1264) always block-----//
    //s = 28; r = 1; a = 17;
    if (scalar_rdat_vld[28][1][17]) begin
        hls_transform_tree_hls_dup3_rv_ff_hevc_deblocking_boundary_strengths <= scalar_rdat  [28][1][17];
    end
    //------READ (scalar, global adr = 1268) always block-----//
    //s = 29; r = 1; a = 26;
    if (scalar_rdat_vld[29][1][26]) begin
        hls_transform_tree_hls_dup3_rv_set_deblocking_bypass <= scalar_rdat  [29][1][26];
    end
    //------READ (scalar, global adr = 1240) always block-----//
    //s = 22; r = 1; a = 19;
    if (scalar_rdat_vld[22][1][19]) begin
        hls_transform_tree_hls_dup3_rv_callback_flag <= scalar_rdat  [22][1][19];
    end
    //------READ (scalar, global adr = 388) always block-----//
    //s = 1; r = 1; a = 25;
    if (scalar_rdat_vld[1][1][25]) begin
        hls_transform_tree_hls_dup3_min_tb_width <= scalar_rdat  [1][1][25];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 18;
    if (scalar_rdat_vld[26][1][18]) begin
        hls_transform_tree_hls_dup3_log2_ctb_size <= scalar_rdat  [26][1][18];
    end
    //------READ (scalar, global adr = 32) always block-----//
    //s = 8; r = 0; a = 27;
    if (scalar_rdat_vld[8][0][27]) begin
        hls_transform_tree_hls_dup3_cb_size <= scalar_rdat  [8][0][27];
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 0; a = 29;
    if (scalar_rdat_vld[6][0][29]) begin
        hls_transform_tree_hls_dup3_width <= scalar_rdat  [6][0][29];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 0; a = 17;
    if (scalar_rdat_vld[19][0][17]) begin
        hls_transform_tree_hls_dup3_height <= scalar_rdat  [19][0][17];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 0; a = 27;
    if (scalar_rdat_vld[29][0][27]) begin
        hls_transform_tree_hls_dup3_log2_min_pu_size <= scalar_rdat  [29][0][27];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 0; a = 18;
    if (scalar_rdat_vld[3][0][18]) begin
        hls_transform_tree_hls_dup3_min_pu_width <= scalar_rdat  [3][0][18];
    end
`endif
    //============================================================
    //hls_coding_quadtree_hls       (f = 14)
    //============================================================
`ifdef enable_connect_hls_coding_quadtree_hls
    //------READ (scalar, global adr = 300) always block-----//
    //s = 11; r = 0; a = 18;
    if (scalar_rdat_vld[11][0][18]) begin
        hls_coding_quadtree_hls_x1_o_r <= scalar_rdat  [11][0][18];    //bidir
    end
    //------WRITE (scalar, global adr = 300) always block-----//
    //s = 11; r = 1; a = 3;
    hls_coding_quadtree_hls_x1_o_ap_vld_r <= hls_coding_quadtree_hls_x1_o_ap_vld;
    if (hls_coding_quadtree_hls_x1_o_ap_vld) begin
        hls_coding_quadtree_hls_x1_o_r <= hls_coding_quadtree_hls_x1_o;
    end
    //------READ (scalar, global adr = 304) always block-----//
    //s = 12; r = 1; a = 15;
    if (scalar_rdat_vld[12][1][15]) begin
        hls_coding_quadtree_hls_y1_o_r <= scalar_rdat  [12][1][15];    //bidir
    end
    //------WRITE (scalar, global adr = 304) always block-----//
    //s = 12; r = 0; a = 3;
    hls_coding_quadtree_hls_y1_o_ap_vld_r <= hls_coding_quadtree_hls_y1_o_ap_vld;
    if (hls_coding_quadtree_hls_y1_o_ap_vld) begin
        hls_coding_quadtree_hls_y1_o_r <= hls_coding_quadtree_hls_y1_o;
    end
    //------READ (scalar, global adr = 312) always block-----//
    //s = 14; r = 1; a = 16;
    if (scalar_rdat_vld[14][1][16]) begin
        hls_coding_quadtree_hls_log2_cb_size_minus_one_o_r <= scalar_rdat  [14][1][16];    //bidir
    end
    //------WRITE (scalar, global adr = 312) always block-----//
    //s = 14; r = 1; a = 3;
    hls_coding_quadtree_hls_log2_cb_size_minus_one_o_ap_vld_r <= hls_coding_quadtree_hls_log2_cb_size_minus_one_o_ap_vld;
    if (hls_coding_quadtree_hls_log2_cb_size_minus_one_o_ap_vld) begin
        hls_coding_quadtree_hls_log2_cb_size_minus_one_o_r <= hls_coding_quadtree_hls_log2_cb_size_minus_one_o;
    end
    //------READ (scalar, global adr = 316) always block-----//
    //s = 15; r = 0; a = 15;
    if (scalar_rdat_vld[15][0][15]) begin
        hls_coding_quadtree_hls_cb_depth_plus_one_o_r <= scalar_rdat  [15][0][15];    //bidir
    end
    //------WRITE (scalar, global adr = 316) always block-----//
    //s = 15; r = 1; a = 3;
    hls_coding_quadtree_hls_cb_depth_plus_one_o_ap_vld_r <= hls_coding_quadtree_hls_cb_depth_plus_one_o_ap_vld;
    if (hls_coding_quadtree_hls_cb_depth_plus_one_o_ap_vld) begin
        hls_coding_quadtree_hls_cb_depth_plus_one_o_r <= hls_coding_quadtree_hls_cb_depth_plus_one_o;
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 0; a = 20;
    if (scalar_rdat_vld[6][0][20]) begin
        hls_coding_quadtree_hls_width <= scalar_rdat  [6][0][20];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 0; a = 12;
    if (scalar_rdat_vld[19][0][12]) begin
        hls_coding_quadtree_hls_height <= scalar_rdat  [19][0][12];
    end
    //------READ (scalar, global adr = 292) always block-----//
    //s = 9; r = 1; a = 22;
    if (scalar_rdat_vld[9][1][22]) begin
        hls_coding_quadtree_hls_split_cu_flag_o_r <= scalar_rdat  [9][1][22];    //bidir
    end
    //------WRITE (scalar, global adr = 292) always block-----//
    //s = 9; r = 0; a = 4;
    hls_coding_quadtree_hls_split_cu_flag_o_ap_vld_r <= hls_coding_quadtree_hls_split_cu_flag_o_ap_vld;
    if (hls_coding_quadtree_hls_split_cu_flag_o_ap_vld) begin
        hls_coding_quadtree_hls_split_cu_flag_o_r <= hls_coding_quadtree_hls_split_cu_flag_o;
    end
    //------READ (scalar, global adr = 296) always block-----//
    //s = 10; r = 0; a = 17;
    if (scalar_rdat_vld[10][0][17]) begin
        hls_coding_quadtree_hls_more_data_o_r <= scalar_rdat  [10][0][17];    //bidir
    end
    //------WRITE (scalar, global adr = 296) always block-----//
    //s = 10; r = 0; a = 2;
    hls_coding_quadtree_hls_more_data_o_ap_vld_r <= hls_coding_quadtree_hls_more_data_o_ap_vld;
    if (hls_coding_quadtree_hls_more_data_o_ap_vld) begin
        hls_coding_quadtree_hls_more_data_o_r <= hls_coding_quadtree_hls_more_data_o;
    end
    //------READ (scalar, global adr = 1256) always block-----//
    //s = 26; r = 0; a = 11;
    if (scalar_rdat_vld[26][0][11]) begin
        hls_coding_quadtree_hls_rv_hls_coding_unit <= scalar_rdat  [26][0][11];
    end
    //------READ (scalar, global adr = 1240) always block-----//
    //s = 22; r = 0; a = 14;
    if (scalar_rdat_vld[22][0][14]) begin
        hls_coding_quadtree_hls_rv_callback_flag <= scalar_rdat  [22][0][14];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 10;
    if (scalar_rdat_vld[26][1][10]) begin
        hls_coding_quadtree_hls_log2_ctb_size <= scalar_rdat  [26][1][10];
    end
    //------WRITE (scalar, global adr = 540) always block-----//
    //s = 7; r = 0; a = 2;
    hls_coding_quadtree_hls_qPy_pred_ap_vld_r <= hls_coding_quadtree_hls_qPy_pred_ap_vld;
    if (hls_coding_quadtree_hls_qPy_pred_ap_vld) begin
        hls_coding_quadtree_hls_qPy_pred_r <= hls_coding_quadtree_hls_qPy_pred;
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 19;
    if (scalar_rdat_vld[6][1][19]) begin
        hls_coding_quadtree_hls_qp_y <= scalar_rdat  [6][1][19];
    end
    //------READ (scalar, global adr = 40) always block-----//
    //s = 10; r = 1; a = 17;
    if (scalar_rdat_vld[10][1][17]) begin
        hls_coding_quadtree_hls_qp_block_mask_o_r <= scalar_rdat  [10][1][17];    //bidir
    end
    //------WRITE (scalar, global adr = 40) always block-----//
    //s = 10; r = 1; a = 2;
    hls_coding_quadtree_hls_qp_block_mask_o_ap_vld_r <= hls_coding_quadtree_hls_qp_block_mask_o_ap_vld;
    if (hls_coding_quadtree_hls_qp_block_mask_o_ap_vld) begin
        hls_coding_quadtree_hls_qp_block_mask_o_r <= hls_coding_quadtree_hls_qp_block_mask_o;
    end
    //------READ (scalar, global adr = 308) always block-----//
    //s = 13; r = 1; a = 13;
    if (scalar_rdat_vld[13][1][13]) begin
        hls_coding_quadtree_hls_cb_size_split_o_r <= scalar_rdat  [13][1][13];    //bidir
    end
    //------WRITE (scalar, global adr = 308) always block-----//
    //s = 13; r = 0; a = 2;
    hls_coding_quadtree_hls_cb_size_split_o_ap_vld_r <= hls_coding_quadtree_hls_cb_size_split_o_ap_vld;
    if (hls_coding_quadtree_hls_cb_size_split_o_ap_vld) begin
        hls_coding_quadtree_hls_cb_size_split_o_r <= hls_coding_quadtree_hls_cb_size_split_o;
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 0; a = 9;
    if (scalar_rdat_vld[28][0][9]) begin
        hls_coding_quadtree_hls_log2_min_cb_size <= scalar_rdat  [28][0][9];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 0; a = 11;
    if (scalar_rdat_vld[2][0][11]) begin
        hls_coding_quadtree_hls_min_cb_width <= scalar_rdat  [2][0][11];
    end
    //------WRITE (scalar, global adr = 476) always block-----//
    //s = 23; r = 0; a = 2;
    hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_ap_vld_r <= hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_ap_vld;
    if (hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_ap_vld) begin
        hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_r <= hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded;
    end
    //------WRITE (scalar, global adr = 468) always block-----//
    //s = 21; r = 1; a = 2;
    hls_coding_quadtree_hls_tu_cu_qp_delta_ap_vld_r <= hls_coding_quadtree_hls_tu_cu_qp_delta_ap_vld;
    if (hls_coding_quadtree_hls_tu_cu_qp_delta_ap_vld) begin
        hls_coding_quadtree_hls_tu_cu_qp_delta_r <= hls_coding_quadtree_hls_tu_cu_qp_delta;
    end
    //------WRITE (scalar, global adr = 472) always block-----//
    //s = 22; r = 1; a = 2;
    hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_ap_vld_r <= hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_ap_vld;
    if (hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_ap_vld) begin
        hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_r <= hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded;
    end
    //------WRITE (scalar, global adr = 464) always block-----//
    //s = 20; r = 1; a = 3;
    hls_coding_quadtree_hls_depth_ap_vld_r <= hls_coding_quadtree_hls_depth_ap_vld;
    if (hls_coding_quadtree_hls_depth_ap_vld) begin
        hls_coding_quadtree_hls_depth_r <= hls_coding_quadtree_hls_depth;
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 0; a = 10;
    if (scalar_rdat_vld[24][0][10]) begin
        hls_coding_quadtree_hls_ctb_left_flag <= scalar_rdat  [24][0][10];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 0; a = 12;
    if (scalar_rdat_vld[23][0][12]) begin
        hls_coding_quadtree_hls_ctb_up_flag <= scalar_rdat  [23][0][12];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 1; a = 18;
    if (scalar_rdat_vld[11][1][18]) begin
        hls_coding_quadtree_hls_cu_qp_delta_enabled_flag <= scalar_rdat  [11][1][18];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 0; a = 14;
    if (scalar_rdat_vld[13][0][14]) begin
        hls_coding_quadtree_hls_diff_cu_qp_delta_depth <= scalar_rdat  [13][0][14];
    end
    //------READ (scalar, global adr = 448) always block-----//
    //s = 16; r = 0; a = 10;
    if (scalar_rdat_vld[16][0][10]) begin
        hls_coding_quadtree_hls_cu_chroma_qp_offset_enabled_flag <= scalar_rdat  [16][0][10];
    end
    //------READ (scalar, global adr = 432) always block-----//
    //s = 12; r = 0; a = 17;
    if (scalar_rdat_vld[12][0][17]) begin
        hls_coding_quadtree_hls_diff_cu_chroma_qp_offset_depth <= scalar_rdat  [12][0][17];
    end
`endif
    //============================================================
    //hls_coding_quadtree_hls_dup1       (f = 15)
    //============================================================
`ifdef enable_connect_hls_coding_quadtree_hls_dup1
    //------READ (scalar, global adr = 300) always block-----//
    //s = 11; r = 0; a = 19;
    if (scalar_rdat_vld[11][0][19]) begin
        hls_coding_quadtree_hls_dup1_x1_o_r <= scalar_rdat  [11][0][19];    //bidir
    end
    //------WRITE (scalar, global adr = 300) always block-----//
    //s = 11; r = 0; a = 4;
    hls_coding_quadtree_hls_dup1_x1_o_ap_vld_r <= hls_coding_quadtree_hls_dup1_x1_o_ap_vld;
    if (hls_coding_quadtree_hls_dup1_x1_o_ap_vld) begin
        hls_coding_quadtree_hls_dup1_x1_o_r <= hls_coding_quadtree_hls_dup1_x1_o;
    end
    //------READ (scalar, global adr = 304) always block-----//
    //s = 12; r = 1; a = 16;
    if (scalar_rdat_vld[12][1][16]) begin
        hls_coding_quadtree_hls_dup1_y1_o_r <= scalar_rdat  [12][1][16];    //bidir
    end
    //------WRITE (scalar, global adr = 304) always block-----//
    //s = 12; r = 1; a = 3;
    hls_coding_quadtree_hls_dup1_y1_o_ap_vld_r <= hls_coding_quadtree_hls_dup1_y1_o_ap_vld;
    if (hls_coding_quadtree_hls_dup1_y1_o_ap_vld) begin
        hls_coding_quadtree_hls_dup1_y1_o_r <= hls_coding_quadtree_hls_dup1_y1_o;
    end
    //------READ (scalar, global adr = 312) always block-----//
    //s = 14; r = 0; a = 17;
    if (scalar_rdat_vld[14][0][17]) begin
        hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_r <= scalar_rdat  [14][0][17];    //bidir
    end
    //------WRITE (scalar, global adr = 312) always block-----//
    //s = 14; r = 0; a = 4;
    hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_ap_vld_r <= hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_ap_vld;
    if (hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_ap_vld) begin
        hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_r <= hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o;
    end
    //------READ (scalar, global adr = 316) always block-----//
    //s = 15; r = 1; a = 15;
    if (scalar_rdat_vld[15][1][15]) begin
        hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_r <= scalar_rdat  [15][1][15];    //bidir
    end
    //------WRITE (scalar, global adr = 316) always block-----//
    //s = 15; r = 0; a = 4;
    hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_ap_vld_r <= hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_ap_vld;
    if (hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_ap_vld) begin
        hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_r <= hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o;
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 0; a = 21;
    if (scalar_rdat_vld[6][0][21]) begin
        hls_coding_quadtree_hls_dup1_width <= scalar_rdat  [6][0][21];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 1; a = 12;
    if (scalar_rdat_vld[19][1][12]) begin
        hls_coding_quadtree_hls_dup1_height <= scalar_rdat  [19][1][12];
    end
    //------READ (scalar, global adr = 292) always block-----//
    //s = 9; r = 0; a = 23;
    if (scalar_rdat_vld[9][0][23]) begin
        hls_coding_quadtree_hls_dup1_split_cu_flag_o_r <= scalar_rdat  [9][0][23];    //bidir
    end
    //------WRITE (scalar, global adr = 292) always block-----//
    //s = 9; r = 1; a = 4;
    hls_coding_quadtree_hls_dup1_split_cu_flag_o_ap_vld_r <= hls_coding_quadtree_hls_dup1_split_cu_flag_o_ap_vld;
    if (hls_coding_quadtree_hls_dup1_split_cu_flag_o_ap_vld) begin
        hls_coding_quadtree_hls_dup1_split_cu_flag_o_r <= hls_coding_quadtree_hls_dup1_split_cu_flag_o;
    end
    //------READ (scalar, global adr = 296) always block-----//
    //s = 10; r = 0; a = 18;
    if (scalar_rdat_vld[10][0][18]) begin
        hls_coding_quadtree_hls_dup1_more_data_o_r <= scalar_rdat  [10][0][18];    //bidir
    end
    //------WRITE (scalar, global adr = 296) always block-----//
    //s = 10; r = 0; a = 3;
    hls_coding_quadtree_hls_dup1_more_data_o_ap_vld_r <= hls_coding_quadtree_hls_dup1_more_data_o_ap_vld;
    if (hls_coding_quadtree_hls_dup1_more_data_o_ap_vld) begin
        hls_coding_quadtree_hls_dup1_more_data_o_r <= hls_coding_quadtree_hls_dup1_more_data_o;
    end
    //------READ (scalar, global adr = 1256) always block-----//
    //s = 26; r = 0; a = 12;
    if (scalar_rdat_vld[26][0][12]) begin
        hls_coding_quadtree_hls_dup1_rv_hls_coding_unit <= scalar_rdat  [26][0][12];
    end
    //------READ (scalar, global adr = 1240) always block-----//
    //s = 22; r = 1; a = 13;
    if (scalar_rdat_vld[22][1][13]) begin
        hls_coding_quadtree_hls_dup1_rv_callback_flag <= scalar_rdat  [22][1][13];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 11;
    if (scalar_rdat_vld[26][1][11]) begin
        hls_coding_quadtree_hls_dup1_log2_ctb_size <= scalar_rdat  [26][1][11];
    end
    //------WRITE (scalar, global adr = 540) always block-----//
    //s = 7; r = 1; a = 2;
    hls_coding_quadtree_hls_dup1_qPy_pred_ap_vld_r <= hls_coding_quadtree_hls_dup1_qPy_pred_ap_vld;
    if (hls_coding_quadtree_hls_dup1_qPy_pred_ap_vld) begin
        hls_coding_quadtree_hls_dup1_qPy_pred_r <= hls_coding_quadtree_hls_dup1_qPy_pred;
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 20;
    if (scalar_rdat_vld[6][1][20]) begin
        hls_coding_quadtree_hls_dup1_qp_y <= scalar_rdat  [6][1][20];
    end
    //------READ (scalar, global adr = 40) always block-----//
    //s = 10; r = 1; a = 18;
    if (scalar_rdat_vld[10][1][18]) begin
        hls_coding_quadtree_hls_dup1_qp_block_mask_o_r <= scalar_rdat  [10][1][18];    //bidir
    end
    //------WRITE (scalar, global adr = 40) always block-----//
    //s = 10; r = 1; a = 3;
    hls_coding_quadtree_hls_dup1_qp_block_mask_o_ap_vld_r <= hls_coding_quadtree_hls_dup1_qp_block_mask_o_ap_vld;
    if (hls_coding_quadtree_hls_dup1_qp_block_mask_o_ap_vld) begin
        hls_coding_quadtree_hls_dup1_qp_block_mask_o_r <= hls_coding_quadtree_hls_dup1_qp_block_mask_o;
    end
    //------READ (scalar, global adr = 308) always block-----//
    //s = 13; r = 1; a = 14;
    if (scalar_rdat_vld[13][1][14]) begin
        hls_coding_quadtree_hls_dup1_cb_size_split_o_r <= scalar_rdat  [13][1][14];    //bidir
    end
    //------WRITE (scalar, global adr = 308) always block-----//
    //s = 13; r = 1; a = 2;
    hls_coding_quadtree_hls_dup1_cb_size_split_o_ap_vld_r <= hls_coding_quadtree_hls_dup1_cb_size_split_o_ap_vld;
    if (hls_coding_quadtree_hls_dup1_cb_size_split_o_ap_vld) begin
        hls_coding_quadtree_hls_dup1_cb_size_split_o_r <= hls_coding_quadtree_hls_dup1_cb_size_split_o;
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 1; a = 9;
    if (scalar_rdat_vld[28][1][9]) begin
        hls_coding_quadtree_hls_dup1_log2_min_cb_size <= scalar_rdat  [28][1][9];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 1; a = 10;
    if (scalar_rdat_vld[2][1][10]) begin
        hls_coding_quadtree_hls_dup1_min_cb_width <= scalar_rdat  [2][1][10];
    end
    //------WRITE (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 2;
    hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_ap_vld_r <= hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_ap_vld;
    if (hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_ap_vld) begin
        hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_r <= hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded;
    end
    //------WRITE (scalar, global adr = 468) always block-----//
    //s = 21; r = 0; a = 3;
    hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_ap_vld_r <= hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_ap_vld;
    if (hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_ap_vld) begin
        hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_r <= hls_coding_quadtree_hls_dup1_tu_cu_qp_delta;
    end
    //------WRITE (scalar, global adr = 472) always block-----//
    //s = 22; r = 0; a = 3;
    hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_ap_vld_r <= hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_ap_vld;
    if (hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_ap_vld) begin
        hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_r <= hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded;
    end
    //------WRITE (scalar, global adr = 464) always block-----//
    //s = 20; r = 0; a = 4;
    hls_coding_quadtree_hls_dup1_depth_ap_vld_r <= hls_coding_quadtree_hls_dup1_depth_ap_vld;
    if (hls_coding_quadtree_hls_dup1_depth_ap_vld) begin
        hls_coding_quadtree_hls_dup1_depth_r <= hls_coding_quadtree_hls_dup1_depth;
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 9;
    if (scalar_rdat_vld[24][1][9]) begin
        hls_coding_quadtree_hls_dup1_ctb_left_flag <= scalar_rdat  [24][1][9];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 11;
    if (scalar_rdat_vld[23][1][11]) begin
        hls_coding_quadtree_hls_dup1_ctb_up_flag <= scalar_rdat  [23][1][11];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 1; a = 19;
    if (scalar_rdat_vld[11][1][19]) begin
        hls_coding_quadtree_hls_dup1_cu_qp_delta_enabled_flag <= scalar_rdat  [11][1][19];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 0; a = 15;
    if (scalar_rdat_vld[13][0][15]) begin
        hls_coding_quadtree_hls_dup1_diff_cu_qp_delta_depth <= scalar_rdat  [13][0][15];
    end
    //------READ (scalar, global adr = 448) always block-----//
    //s = 16; r = 1; a = 9;
    if (scalar_rdat_vld[16][1][9]) begin
        hls_coding_quadtree_hls_dup1_cu_chroma_qp_offset_enabled_flag <= scalar_rdat  [16][1][9];
    end
    //------READ (scalar, global adr = 432) always block-----//
    //s = 12; r = 0; a = 18;
    if (scalar_rdat_vld[12][0][18]) begin
        hls_coding_quadtree_hls_dup1_diff_cu_chroma_qp_offset_depth <= scalar_rdat  [12][0][18];
    end
`endif
    //============================================================
    //hls_coding_quadtree_hls_dup2       (f = 16)
    //============================================================
`ifdef enable_connect_hls_coding_quadtree_hls_dup2
    //------READ (scalar, global adr = 300) always block-----//
    //s = 11; r = 0; a = 20;
    if (scalar_rdat_vld[11][0][20]) begin
        hls_coding_quadtree_hls_dup2_x1_o_r <= scalar_rdat  [11][0][20];    //bidir
    end
    //------WRITE (scalar, global adr = 300) always block-----//
    //s = 11; r = 1; a = 4;
    hls_coding_quadtree_hls_dup2_x1_o_ap_vld_r <= hls_coding_quadtree_hls_dup2_x1_o_ap_vld;
    if (hls_coding_quadtree_hls_dup2_x1_o_ap_vld) begin
        hls_coding_quadtree_hls_dup2_x1_o_r <= hls_coding_quadtree_hls_dup2_x1_o;
    end
    //------READ (scalar, global adr = 304) always block-----//
    //s = 12; r = 1; a = 17;
    if (scalar_rdat_vld[12][1][17]) begin
        hls_coding_quadtree_hls_dup2_y1_o_r <= scalar_rdat  [12][1][17];    //bidir
    end
    //------WRITE (scalar, global adr = 304) always block-----//
    //s = 12; r = 0; a = 4;
    hls_coding_quadtree_hls_dup2_y1_o_ap_vld_r <= hls_coding_quadtree_hls_dup2_y1_o_ap_vld;
    if (hls_coding_quadtree_hls_dup2_y1_o_ap_vld) begin
        hls_coding_quadtree_hls_dup2_y1_o_r <= hls_coding_quadtree_hls_dup2_y1_o;
    end
    //------READ (scalar, global adr = 312) always block-----//
    //s = 14; r = 1; a = 17;
    if (scalar_rdat_vld[14][1][17]) begin
        hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_r <= scalar_rdat  [14][1][17];    //bidir
    end
    //------WRITE (scalar, global adr = 312) always block-----//
    //s = 14; r = 1; a = 4;
    hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_ap_vld_r <= hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_ap_vld;
    if (hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_ap_vld) begin
        hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_r <= hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o;
    end
    //------READ (scalar, global adr = 316) always block-----//
    //s = 15; r = 0; a = 16;
    if (scalar_rdat_vld[15][0][16]) begin
        hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_r <= scalar_rdat  [15][0][16];    //bidir
    end
    //------WRITE (scalar, global adr = 316) always block-----//
    //s = 15; r = 1; a = 4;
    hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_ap_vld_r <= hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_ap_vld;
    if (hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_ap_vld) begin
        hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_r <= hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o;
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 0; a = 22;
    if (scalar_rdat_vld[6][0][22]) begin
        hls_coding_quadtree_hls_dup2_width <= scalar_rdat  [6][0][22];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 0; a = 13;
    if (scalar_rdat_vld[19][0][13]) begin
        hls_coding_quadtree_hls_dup2_height <= scalar_rdat  [19][0][13];
    end
    //------READ (scalar, global adr = 292) always block-----//
    //s = 9; r = 1; a = 23;
    if (scalar_rdat_vld[9][1][23]) begin
        hls_coding_quadtree_hls_dup2_split_cu_flag_o_r <= scalar_rdat  [9][1][23];    //bidir
    end
    //------WRITE (scalar, global adr = 292) always block-----//
    //s = 9; r = 0; a = 5;
    hls_coding_quadtree_hls_dup2_split_cu_flag_o_ap_vld_r <= hls_coding_quadtree_hls_dup2_split_cu_flag_o_ap_vld;
    if (hls_coding_quadtree_hls_dup2_split_cu_flag_o_ap_vld) begin
        hls_coding_quadtree_hls_dup2_split_cu_flag_o_r <= hls_coding_quadtree_hls_dup2_split_cu_flag_o;
    end
    //------READ (scalar, global adr = 296) always block-----//
    //s = 10; r = 0; a = 19;
    if (scalar_rdat_vld[10][0][19]) begin
        hls_coding_quadtree_hls_dup2_more_data_o_r <= scalar_rdat  [10][0][19];    //bidir
    end
    //------WRITE (scalar, global adr = 296) always block-----//
    //s = 10; r = 0; a = 4;
    hls_coding_quadtree_hls_dup2_more_data_o_ap_vld_r <= hls_coding_quadtree_hls_dup2_more_data_o_ap_vld;
    if (hls_coding_quadtree_hls_dup2_more_data_o_ap_vld) begin
        hls_coding_quadtree_hls_dup2_more_data_o_r <= hls_coding_quadtree_hls_dup2_more_data_o;
    end
    //------READ (scalar, global adr = 1256) always block-----//
    //s = 26; r = 0; a = 13;
    if (scalar_rdat_vld[26][0][13]) begin
        hls_coding_quadtree_hls_dup2_rv_hls_coding_unit <= scalar_rdat  [26][0][13];
    end
    //------READ (scalar, global adr = 1240) always block-----//
    //s = 22; r = 0; a = 15;
    if (scalar_rdat_vld[22][0][15]) begin
        hls_coding_quadtree_hls_dup2_rv_callback_flag <= scalar_rdat  [22][0][15];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 12;
    if (scalar_rdat_vld[26][1][12]) begin
        hls_coding_quadtree_hls_dup2_log2_ctb_size <= scalar_rdat  [26][1][12];
    end
    //------WRITE (scalar, global adr = 540) always block-----//
    //s = 7; r = 0; a = 3;
    hls_coding_quadtree_hls_dup2_qPy_pred_ap_vld_r <= hls_coding_quadtree_hls_dup2_qPy_pred_ap_vld;
    if (hls_coding_quadtree_hls_dup2_qPy_pred_ap_vld) begin
        hls_coding_quadtree_hls_dup2_qPy_pred_r <= hls_coding_quadtree_hls_dup2_qPy_pred;
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 21;
    if (scalar_rdat_vld[6][1][21]) begin
        hls_coding_quadtree_hls_dup2_qp_y <= scalar_rdat  [6][1][21];
    end
    //------READ (scalar, global adr = 40) always block-----//
    //s = 10; r = 1; a = 19;
    if (scalar_rdat_vld[10][1][19]) begin
        hls_coding_quadtree_hls_dup2_qp_block_mask_o_r <= scalar_rdat  [10][1][19];    //bidir
    end
    //------WRITE (scalar, global adr = 40) always block-----//
    //s = 10; r = 1; a = 4;
    hls_coding_quadtree_hls_dup2_qp_block_mask_o_ap_vld_r <= hls_coding_quadtree_hls_dup2_qp_block_mask_o_ap_vld;
    if (hls_coding_quadtree_hls_dup2_qp_block_mask_o_ap_vld) begin
        hls_coding_quadtree_hls_dup2_qp_block_mask_o_r <= hls_coding_quadtree_hls_dup2_qp_block_mask_o;
    end
    //------READ (scalar, global adr = 308) always block-----//
    //s = 13; r = 1; a = 15;
    if (scalar_rdat_vld[13][1][15]) begin
        hls_coding_quadtree_hls_dup2_cb_size_split_o_r <= scalar_rdat  [13][1][15];    //bidir
    end
    //------WRITE (scalar, global adr = 308) always block-----//
    //s = 13; r = 0; a = 3;
    hls_coding_quadtree_hls_dup2_cb_size_split_o_ap_vld_r <= hls_coding_quadtree_hls_dup2_cb_size_split_o_ap_vld;
    if (hls_coding_quadtree_hls_dup2_cb_size_split_o_ap_vld) begin
        hls_coding_quadtree_hls_dup2_cb_size_split_o_r <= hls_coding_quadtree_hls_dup2_cb_size_split_o;
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 0; a = 10;
    if (scalar_rdat_vld[28][0][10]) begin
        hls_coding_quadtree_hls_dup2_log2_min_cb_size <= scalar_rdat  [28][0][10];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 0; a = 12;
    if (scalar_rdat_vld[2][0][12]) begin
        hls_coding_quadtree_hls_dup2_min_cb_width <= scalar_rdat  [2][0][12];
    end
    //------WRITE (scalar, global adr = 476) always block-----//
    //s = 23; r = 0; a = 3;
    hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_ap_vld_r <= hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_ap_vld;
    if (hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_ap_vld) begin
        hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_r <= hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded;
    end
    //------WRITE (scalar, global adr = 468) always block-----//
    //s = 21; r = 1; a = 3;
    hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_ap_vld_r <= hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_ap_vld;
    if (hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_ap_vld) begin
        hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_r <= hls_coding_quadtree_hls_dup2_tu_cu_qp_delta;
    end
    //------WRITE (scalar, global adr = 472) always block-----//
    //s = 22; r = 1; a = 3;
    hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_ap_vld_r <= hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_ap_vld;
    if (hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_ap_vld) begin
        hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_r <= hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded;
    end
    //------WRITE (scalar, global adr = 464) always block-----//
    //s = 20; r = 1; a = 4;
    hls_coding_quadtree_hls_dup2_depth_ap_vld_r <= hls_coding_quadtree_hls_dup2_depth_ap_vld;
    if (hls_coding_quadtree_hls_dup2_depth_ap_vld) begin
        hls_coding_quadtree_hls_dup2_depth_r <= hls_coding_quadtree_hls_dup2_depth;
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 0; a = 11;
    if (scalar_rdat_vld[24][0][11]) begin
        hls_coding_quadtree_hls_dup2_ctb_left_flag <= scalar_rdat  [24][0][11];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 0; a = 13;
    if (scalar_rdat_vld[23][0][13]) begin
        hls_coding_quadtree_hls_dup2_ctb_up_flag <= scalar_rdat  [23][0][13];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 1; a = 20;
    if (scalar_rdat_vld[11][1][20]) begin
        hls_coding_quadtree_hls_dup2_cu_qp_delta_enabled_flag <= scalar_rdat  [11][1][20];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 0; a = 16;
    if (scalar_rdat_vld[13][0][16]) begin
        hls_coding_quadtree_hls_dup2_diff_cu_qp_delta_depth <= scalar_rdat  [13][0][16];
    end
    //------READ (scalar, global adr = 448) always block-----//
    //s = 16; r = 0; a = 11;
    if (scalar_rdat_vld[16][0][11]) begin
        hls_coding_quadtree_hls_dup2_cu_chroma_qp_offset_enabled_flag <= scalar_rdat  [16][0][11];
    end
    //------READ (scalar, global adr = 432) always block-----//
    //s = 12; r = 0; a = 19;
    if (scalar_rdat_vld[12][0][19]) begin
        hls_coding_quadtree_hls_dup2_diff_cu_chroma_qp_offset_depth <= scalar_rdat  [12][0][19];
    end
`endif
    //============================================================
    //hls_coding_quadtree_hls_dup3       (f = 17)
    //============================================================
`ifdef enable_connect_hls_coding_quadtree_hls_dup3
    //------READ (scalar, global adr = 300) always block-----//
    //s = 11; r = 0; a = 21;
    if (scalar_rdat_vld[11][0][21]) begin
        hls_coding_quadtree_hls_dup3_x1_o_r <= scalar_rdat  [11][0][21];    //bidir
    end
    //------WRITE (scalar, global adr = 300) always block-----//
    //s = 11; r = 0; a = 5;
    hls_coding_quadtree_hls_dup3_x1_o_ap_vld_r <= hls_coding_quadtree_hls_dup3_x1_o_ap_vld;
    if (hls_coding_quadtree_hls_dup3_x1_o_ap_vld) begin
        hls_coding_quadtree_hls_dup3_x1_o_r <= hls_coding_quadtree_hls_dup3_x1_o;
    end
    //------READ (scalar, global adr = 304) always block-----//
    //s = 12; r = 1; a = 18;
    if (scalar_rdat_vld[12][1][18]) begin
        hls_coding_quadtree_hls_dup3_y1_o_r <= scalar_rdat  [12][1][18];    //bidir
    end
    //------WRITE (scalar, global adr = 304) always block-----//
    //s = 12; r = 1; a = 4;
    hls_coding_quadtree_hls_dup3_y1_o_ap_vld_r <= hls_coding_quadtree_hls_dup3_y1_o_ap_vld;
    if (hls_coding_quadtree_hls_dup3_y1_o_ap_vld) begin
        hls_coding_quadtree_hls_dup3_y1_o_r <= hls_coding_quadtree_hls_dup3_y1_o;
    end
    //------READ (scalar, global adr = 312) always block-----//
    //s = 14; r = 0; a = 18;
    if (scalar_rdat_vld[14][0][18]) begin
        hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_r <= scalar_rdat  [14][0][18];    //bidir
    end
    //------WRITE (scalar, global adr = 312) always block-----//
    //s = 14; r = 0; a = 5;
    hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_ap_vld_r <= hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_ap_vld;
    if (hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_ap_vld) begin
        hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_r <= hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o;
    end
    //------READ (scalar, global adr = 316) always block-----//
    //s = 15; r = 1; a = 16;
    if (scalar_rdat_vld[15][1][16]) begin
        hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_r <= scalar_rdat  [15][1][16];    //bidir
    end
    //------WRITE (scalar, global adr = 316) always block-----//
    //s = 15; r = 0; a = 5;
    hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_ap_vld_r <= hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_ap_vld;
    if (hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_ap_vld) begin
        hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_r <= hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o;
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 0; a = 23;
    if (scalar_rdat_vld[6][0][23]) begin
        hls_coding_quadtree_hls_dup3_width <= scalar_rdat  [6][0][23];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 1; a = 13;
    if (scalar_rdat_vld[19][1][13]) begin
        hls_coding_quadtree_hls_dup3_height <= scalar_rdat  [19][1][13];
    end
    //------READ (scalar, global adr = 292) always block-----//
    //s = 9; r = 0; a = 24;
    if (scalar_rdat_vld[9][0][24]) begin
        hls_coding_quadtree_hls_dup3_split_cu_flag_o_r <= scalar_rdat  [9][0][24];    //bidir
    end
    //------WRITE (scalar, global adr = 292) always block-----//
    //s = 9; r = 1; a = 5;
    hls_coding_quadtree_hls_dup3_split_cu_flag_o_ap_vld_r <= hls_coding_quadtree_hls_dup3_split_cu_flag_o_ap_vld;
    if (hls_coding_quadtree_hls_dup3_split_cu_flag_o_ap_vld) begin
        hls_coding_quadtree_hls_dup3_split_cu_flag_o_r <= hls_coding_quadtree_hls_dup3_split_cu_flag_o;
    end
    //------READ (scalar, global adr = 296) always block-----//
    //s = 10; r = 0; a = 20;
    if (scalar_rdat_vld[10][0][20]) begin
        hls_coding_quadtree_hls_dup3_more_data_o_r <= scalar_rdat  [10][0][20];    //bidir
    end
    //------WRITE (scalar, global adr = 296) always block-----//
    //s = 10; r = 0; a = 5;
    hls_coding_quadtree_hls_dup3_more_data_o_ap_vld_r <= hls_coding_quadtree_hls_dup3_more_data_o_ap_vld;
    if (hls_coding_quadtree_hls_dup3_more_data_o_ap_vld) begin
        hls_coding_quadtree_hls_dup3_more_data_o_r <= hls_coding_quadtree_hls_dup3_more_data_o;
    end
    //------READ (scalar, global adr = 1256) always block-----//
    //s = 26; r = 0; a = 14;
    if (scalar_rdat_vld[26][0][14]) begin
        hls_coding_quadtree_hls_dup3_rv_hls_coding_unit <= scalar_rdat  [26][0][14];
    end
    //------READ (scalar, global adr = 1240) always block-----//
    //s = 22; r = 1; a = 14;
    if (scalar_rdat_vld[22][1][14]) begin
        hls_coding_quadtree_hls_dup3_rv_callback_flag <= scalar_rdat  [22][1][14];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 13;
    if (scalar_rdat_vld[26][1][13]) begin
        hls_coding_quadtree_hls_dup3_log2_ctb_size <= scalar_rdat  [26][1][13];
    end
    //------WRITE (scalar, global adr = 540) always block-----//
    //s = 7; r = 1; a = 3;
    hls_coding_quadtree_hls_dup3_qPy_pred_ap_vld_r <= hls_coding_quadtree_hls_dup3_qPy_pred_ap_vld;
    if (hls_coding_quadtree_hls_dup3_qPy_pred_ap_vld) begin
        hls_coding_quadtree_hls_dup3_qPy_pred_r <= hls_coding_quadtree_hls_dup3_qPy_pred;
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 22;
    if (scalar_rdat_vld[6][1][22]) begin
        hls_coding_quadtree_hls_dup3_qp_y <= scalar_rdat  [6][1][22];
    end
    //------READ (scalar, global adr = 40) always block-----//
    //s = 10; r = 1; a = 20;
    if (scalar_rdat_vld[10][1][20]) begin
        hls_coding_quadtree_hls_dup3_qp_block_mask_o_r <= scalar_rdat  [10][1][20];    //bidir
    end
    //------WRITE (scalar, global adr = 40) always block-----//
    //s = 10; r = 1; a = 5;
    hls_coding_quadtree_hls_dup3_qp_block_mask_o_ap_vld_r <= hls_coding_quadtree_hls_dup3_qp_block_mask_o_ap_vld;
    if (hls_coding_quadtree_hls_dup3_qp_block_mask_o_ap_vld) begin
        hls_coding_quadtree_hls_dup3_qp_block_mask_o_r <= hls_coding_quadtree_hls_dup3_qp_block_mask_o;
    end
    //------READ (scalar, global adr = 308) always block-----//
    //s = 13; r = 1; a = 16;
    if (scalar_rdat_vld[13][1][16]) begin
        hls_coding_quadtree_hls_dup3_cb_size_split_o_r <= scalar_rdat  [13][1][16];    //bidir
    end
    //------WRITE (scalar, global adr = 308) always block-----//
    //s = 13; r = 1; a = 3;
    hls_coding_quadtree_hls_dup3_cb_size_split_o_ap_vld_r <= hls_coding_quadtree_hls_dup3_cb_size_split_o_ap_vld;
    if (hls_coding_quadtree_hls_dup3_cb_size_split_o_ap_vld) begin
        hls_coding_quadtree_hls_dup3_cb_size_split_o_r <= hls_coding_quadtree_hls_dup3_cb_size_split_o;
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 1; a = 10;
    if (scalar_rdat_vld[28][1][10]) begin
        hls_coding_quadtree_hls_dup3_log2_min_cb_size <= scalar_rdat  [28][1][10];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 1; a = 11;
    if (scalar_rdat_vld[2][1][11]) begin
        hls_coding_quadtree_hls_dup3_min_cb_width <= scalar_rdat  [2][1][11];
    end
    //------WRITE (scalar, global adr = 476) always block-----//
    //s = 23; r = 1; a = 3;
    hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_ap_vld_r <= hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_ap_vld;
    if (hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_ap_vld) begin
        hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_r <= hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded;
    end
    //------WRITE (scalar, global adr = 468) always block-----//
    //s = 21; r = 0; a = 4;
    hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_ap_vld_r <= hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_ap_vld;
    if (hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_ap_vld) begin
        hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_r <= hls_coding_quadtree_hls_dup3_tu_cu_qp_delta;
    end
    //------WRITE (scalar, global adr = 472) always block-----//
    //s = 22; r = 0; a = 4;
    hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_ap_vld_r <= hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_ap_vld;
    if (hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_ap_vld) begin
        hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_r <= hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded;
    end
    //------WRITE (scalar, global adr = 464) always block-----//
    //s = 20; r = 0; a = 5;
    hls_coding_quadtree_hls_dup3_depth_ap_vld_r <= hls_coding_quadtree_hls_dup3_depth_ap_vld;
    if (hls_coding_quadtree_hls_dup3_depth_ap_vld) begin
        hls_coding_quadtree_hls_dup3_depth_r <= hls_coding_quadtree_hls_dup3_depth;
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 10;
    if (scalar_rdat_vld[24][1][10]) begin
        hls_coding_quadtree_hls_dup3_ctb_left_flag <= scalar_rdat  [24][1][10];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 12;
    if (scalar_rdat_vld[23][1][12]) begin
        hls_coding_quadtree_hls_dup3_ctb_up_flag <= scalar_rdat  [23][1][12];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 1; a = 21;
    if (scalar_rdat_vld[11][1][21]) begin
        hls_coding_quadtree_hls_dup3_cu_qp_delta_enabled_flag <= scalar_rdat  [11][1][21];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 0; a = 17;
    if (scalar_rdat_vld[13][0][17]) begin
        hls_coding_quadtree_hls_dup3_diff_cu_qp_delta_depth <= scalar_rdat  [13][0][17];
    end
    //------READ (scalar, global adr = 448) always block-----//
    //s = 16; r = 1; a = 10;
    if (scalar_rdat_vld[16][1][10]) begin
        hls_coding_quadtree_hls_dup3_cu_chroma_qp_offset_enabled_flag <= scalar_rdat  [16][1][10];
    end
    //------READ (scalar, global adr = 432) always block-----//
    //s = 12; r = 0; a = 20;
    if (scalar_rdat_vld[12][0][20]) begin
        hls_coding_quadtree_hls_dup3_diff_cu_chroma_qp_offset_depth <= scalar_rdat  [12][0][20];
    end
`endif
    //============================================================
    //hls_coding_unit_hls       (f = 18)
    //============================================================
`ifdef enable_connect_hls_coding_unit_hls
    //------READ (scalar, global adr = 420) always block-----//
    //s = 9; r = 1; a = 24;
    if (scalar_rdat_vld[9][1][24]) begin
        hls_coding_unit_hls_loop_filter_disable_flag <= scalar_rdat  [9][1][24];
    end
    //------READ (scalar, global adr = 380) always block-----//
    //s = 31; r = 0; a = 18;
    if (scalar_rdat_vld[31][0][18]) begin
        hls_coding_unit_hls_max_transform_hierarchy_depth_inter <= scalar_rdat  [31][0][18];
    end
    //------READ (scalar, global adr = 1164) always block-----//
    //s = 3; r = 1; a = 10;
    if (scalar_rdat_vld[3][1][10]) begin
        hls_coding_unit_hls_disable_deblocking_filter_flag <= scalar_rdat  [3][1][10];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 0; a = 22;
    if (scalar_rdat_vld[11][0][22]) begin
        hls_coding_unit_hls_cu_qp_delta_enabled_flag <= scalar_rdat  [11][0][22];
    end
    //------READ (scalar, global adr = 476) always block-----//
    //s = 23; r = 0; a = 14;
    if (scalar_rdat_vld[23][0][14]) begin
        hls_coding_unit_hls_tu_is_cu_qp_delta_coded <= scalar_rdat  [23][0][14];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 0; a = 17;
    if (scalar_rdat_vld[15][0][17]) begin
        hls_coding_unit_hls_cu_transquant_bypass_flag_o_r <= scalar_rdat  [15][0][17];    //bidir
    end
    //------WRITE (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 5;
    hls_coding_unit_hls_cu_transquant_bypass_flag_o_ap_vld_r <= hls_coding_unit_hls_cu_transquant_bypass_flag_o_ap_vld;
    if (hls_coding_unit_hls_cu_transquant_bypass_flag_o_ap_vld) begin
        hls_coding_unit_hls_cu_transquant_bypass_flag_o_r <= hls_coding_unit_hls_cu_transquant_bypass_flag_o;
    end
    //------READ (scalar, global adr = 28) always block-----//
    //s = 7; r = 0; a = 16;
    if (scalar_rdat_vld[7][0][16]) begin
        hls_coding_unit_hls_pcm_flag_o_r <= scalar_rdat  [7][0][16];    //bidir
    end
    //------WRITE (scalar, global adr = 28) always block-----//
    //s = 7; r = 0; a = 4;
    hls_coding_unit_hls_pcm_flag_o_ap_vld_r <= hls_coding_unit_hls_pcm_flag_o_ap_vld;
    if (hls_coding_unit_hls_pcm_flag_o_ap_vld) begin
        hls_coding_unit_hls_pcm_flag_o_r <= hls_coding_unit_hls_pcm_flag_o;
    end
    //------READ (scalar, global adr = 504) always block-----//
    //s = 30; r = 1; a = 7;
    if (scalar_rdat_vld[30][1][7]) begin
        hls_coding_unit_hls_merge_flag <= scalar_rdat  [30][1][7];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 1; a = 19;
    if (scalar_rdat_vld[12][1][19]) begin
        hls_coding_unit_hls_pred_mode_o_r <= scalar_rdat  [12][1][19];    //bidir
    end
    //------WRITE (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 5;
    hls_coding_unit_hls_pred_mode_o_ap_vld_r <= hls_coding_unit_hls_pred_mode_o_ap_vld;
    if (hls_coding_unit_hls_pred_mode_o_ap_vld) begin
        hls_coding_unit_hls_pred_mode_o_r <= hls_coding_unit_hls_pred_mode_o;
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 1; a = 17;
    if (scalar_rdat_vld[13][1][17]) begin
        hls_coding_unit_hls_part_mode_o_r <= scalar_rdat  [13][1][17];    //bidir
    end
    //------WRITE (scalar, global adr = 564) always block-----//
    //s = 13; r = 0; a = 4;
    hls_coding_unit_hls_part_mode_o_ap_vld_r <= hls_coding_unit_hls_part_mode_o_ap_vld;
    if (hls_coding_unit_hls_part_mode_o_ap_vld) begin
        hls_coding_unit_hls_part_mode_o_r <= hls_coding_unit_hls_part_mode_o;
    end
    //------WRITE (scalar, global adr = 576) always block-----//
    //s = 16; r = 0; a = 2;
    hls_coding_unit_hls_max_trafo_depth_ap_vld_r <= hls_coding_unit_hls_max_trafo_depth_ap_vld;
    if (hls_coding_unit_hls_max_trafo_depth_ap_vld) begin
        hls_coding_unit_hls_max_trafo_depth_r <= hls_coding_unit_hls_max_trafo_depth;
    end
    //------READ (scalar, global adr = 32) always block-----//
    //s = 8; r = 1; a = 20;
    if (scalar_rdat_vld[8][1][20]) begin
        hls_coding_unit_hls_cb_size_o_r <= scalar_rdat  [8][1][20];    //bidir
    end
    //------WRITE (scalar, global adr = 32) always block-----//
    //s = 8; r = 0; a = 4;
    hls_coding_unit_hls_cb_size_o_ap_vld_r <= hls_coding_unit_hls_cb_size_o_ap_vld;
    if (hls_coding_unit_hls_cb_size_o_ap_vld) begin
        hls_coding_unit_hls_cb_size_o_r <= hls_coding_unit_hls_cb_size_o;
    end
    //------READ (scalar, global adr = 44) always block-----//
    //s = 11; r = 1; a = 22;
    if (scalar_rdat_vld[11][1][22]) begin
        hls_coding_unit_hls_idx_o_r <= scalar_rdat  [11][1][22];    //bidir
    end
    //------WRITE (scalar, global adr = 44) always block-----//
    //s = 11; r = 1; a = 5;
    hls_coding_unit_hls_idx_o_ap_vld_r <= hls_coding_unit_hls_idx_o_ap_vld;
    if (hls_coding_unit_hls_idx_o_ap_vld) begin
        hls_coding_unit_hls_idx_o_r <= hls_coding_unit_hls_idx_o;
    end
    //------WRITE (scalar, global adr = 1168) always block-----//
    //s = 4; r = 1; a = 0;
    hls_coding_unit_hls_xm_xBase_ap_vld_r <= hls_coding_unit_hls_xm_xBase_ap_vld;
    if (hls_coding_unit_hls_xm_xBase_ap_vld) begin
        hls_coding_unit_hls_xm_xBase_r <= hls_coding_unit_hls_xm_xBase;
    end
    //------WRITE (scalar, global adr = 1172) always block-----//
    //s = 5; r = 0; a = 4;
    hls_coding_unit_hls_xm_yBase_ap_vld_r <= hls_coding_unit_hls_xm_yBase_ap_vld;
    if (hls_coding_unit_hls_xm_yBase_ap_vld) begin
        hls_coding_unit_hls_xm_yBase_r <= hls_coding_unit_hls_xm_yBase;
    end
    //------WRITE (scalar, global adr = 1176) always block-----//
    //s = 6; r = 0; a = 4;
    hls_coding_unit_hls_xm_cb_xBase_ap_vld_r <= hls_coding_unit_hls_xm_cb_xBase_ap_vld;
    if (hls_coding_unit_hls_xm_cb_xBase_ap_vld) begin
        hls_coding_unit_hls_xm_cb_xBase_r <= hls_coding_unit_hls_xm_cb_xBase;
    end
    //------WRITE (scalar, global adr = 1180) always block-----//
    //s = 7; r = 1; a = 4;
    hls_coding_unit_hls_xm_cb_yBase_ap_vld_r <= hls_coding_unit_hls_xm_cb_yBase_ap_vld;
    if (hls_coding_unit_hls_xm_cb_yBase_ap_vld) begin
        hls_coding_unit_hls_xm_cb_yBase_r <= hls_coding_unit_hls_xm_cb_yBase;
    end
    //------WRITE (scalar, global adr = 1184) always block-----//
    //s = 8; r = 1; a = 4;
    hls_coding_unit_hls_xm_log2_cb_size_ap_vld_r <= hls_coding_unit_hls_xm_log2_cb_size_ap_vld;
    if (hls_coding_unit_hls_xm_log2_cb_size_ap_vld) begin
        hls_coding_unit_hls_xm_log2_cb_size_r <= hls_coding_unit_hls_xm_log2_cb_size;
    end
    //------READ (scalar, global adr = 1268) always block-----//
    //s = 29; r = 1; a = 20;
    if (scalar_rdat_vld[29][1][20]) begin
        hls_coding_unit_hls_rv_set_deblocking_bypass <= scalar_rdat  [29][1][20];
    end
    //------READ (scalar, global adr = 1264) always block-----//
    //s = 28; r = 0; a = 11;
    if (scalar_rdat_vld[28][0][11]) begin
        hls_coding_unit_hls_rv_ff_hevc_deblocking_boundary_strengths <= scalar_rdat  [28][0][11];
    end
    //------READ (scalar, global adr = 1272) always block-----//
    //s = 30; r = 0; a = 8;
    if (scalar_rdat_vld[30][0][8]) begin
        hls_coding_unit_hls_rv_hls_pcm_sample <= scalar_rdat  [30][0][8];
    end
    //------READ (scalar, global adr = 1276) always block-----//
    //s = 31; r = 1; a = 17;
    if (scalar_rdat_vld[31][1][17]) begin
        hls_coding_unit_hls_rv_hls_prediction_unit <= scalar_rdat  [31][1][17];
    end
    //------READ (scalar, global adr = 1280) always block-----//
    //s = 0; r = 1; a = 17;
    if (scalar_rdat_vld[0][1][17]) begin
        hls_coding_unit_hls_rv_hls_intra_prediction_unit <= scalar_rdat  [0][1][17];
    end
    //------READ (scalar, global adr = 1284) always block-----//
    //s = 1; r = 0; a = 14;
    if (scalar_rdat_vld[1][0][14]) begin
        hls_coding_unit_hls_rv_hls_transform_tree <= scalar_rdat  [1][0][14];
    end
    //------READ (scalar, global adr = 1240) always block-----//
    //s = 22; r = 0; a = 16;
    if (scalar_rdat_vld[22][0][16]) begin
        hls_coding_unit_hls_rv_callback_flag <= scalar_rdat  [22][0][16];
    end
    //------WRITE (scalar, global adr = 36) always block-----//
    //s = 9; r = 0; a = 6;
    hls_coding_unit_hls_length_r_ap_vld_r <= hls_coding_unit_hls_length_r_ap_vld;
    if (hls_coding_unit_hls_length_r_ap_vld) begin
        hls_coding_unit_hls_length_r_r <= hls_coding_unit_hls_length_r;
    end
    //------WRITE (scalar, global adr = 544) always block-----//
    //s = 8; r = 0; a = 5;
    hls_coding_unit_hls_xm_x_ap_vld_r <= hls_coding_unit_hls_xm_x_ap_vld;
    if (hls_coding_unit_hls_xm_x_ap_vld) begin
        hls_coding_unit_hls_xm_x_r <= hls_coding_unit_hls_xm_x;
    end
    //------WRITE (scalar, global adr = 548) always block-----//
    //s = 9; r = 1; a = 6;
    hls_coding_unit_hls_xm_y_ap_vld_r <= hls_coding_unit_hls_xm_y_ap_vld;
    if (hls_coding_unit_hls_xm_y_ap_vld) begin
        hls_coding_unit_hls_xm_y_r <= hls_coding_unit_hls_xm_y;
    end
    //------WRITE (scalar, complete partition, global adr = 512) always block -----//
    //s = 0; r = 0; a = 2;
    hls_coding_unit_hls_pu_intra_pred_mode_0_ap_vld_r <= hls_coding_unit_hls_pu_intra_pred_mode_0_ap_vld;
    if (hls_coding_unit_hls_pu_intra_pred_mode_0_ap_vld) begin
        hls_coding_unit_hls_pu_intra_pred_mode_0_r <= hls_coding_unit_hls_pu_intra_pred_mode_0;
    end
    //------WRITE (scalar, complete partition, global adr = 513) always block -----//
    //s = 0; r = 1; a = 2;
    hls_coding_unit_hls_pu_intra_pred_mode_1_ap_vld_r <= hls_coding_unit_hls_pu_intra_pred_mode_1_ap_vld;
    if (hls_coding_unit_hls_pu_intra_pred_mode_1_ap_vld) begin
        hls_coding_unit_hls_pu_intra_pred_mode_1_r <= hls_coding_unit_hls_pu_intra_pred_mode_1;
    end
    //------WRITE (scalar, complete partition, global adr = 514) always block -----//
    //s = 0; r = 0; a = 3;
    hls_coding_unit_hls_pu_intra_pred_mode_2_ap_vld_r <= hls_coding_unit_hls_pu_intra_pred_mode_2_ap_vld;
    if (hls_coding_unit_hls_pu_intra_pred_mode_2_ap_vld) begin
        hls_coding_unit_hls_pu_intra_pred_mode_2_r <= hls_coding_unit_hls_pu_intra_pred_mode_2;
    end
    //------WRITE (scalar, complete partition, global adr = 515) always block -----//
    //s = 0; r = 1; a = 3;
    hls_coding_unit_hls_pu_intra_pred_mode_3_ap_vld_r <= hls_coding_unit_hls_pu_intra_pred_mode_3_ap_vld;
    if (hls_coding_unit_hls_pu_intra_pred_mode_3_ap_vld) begin
        hls_coding_unit_hls_pu_intra_pred_mode_3_r <= hls_coding_unit_hls_pu_intra_pred_mode_3;
    end
    //------WRITE (scalar, global adr = 540) always block-----//
    //s = 7; r = 0; a = 5;
    hls_coding_unit_hls_qPy_pred_ap_vld_r <= hls_coding_unit_hls_qPy_pred_ap_vld;
    if (hls_coding_unit_hls_qPy_pred_ap_vld) begin
        hls_coding_unit_hls_qPy_pred_r <= hls_coding_unit_hls_qPy_pred;
    end
    //------WRITE (scalar, global adr = 24) always block-----//
    //s = 6; r = 1; a = 4;
    hls_coding_unit_hls_skip_flag_start_ap_vld_r <= hls_coding_unit_hls_skip_flag_start_ap_vld;
    if (hls_coding_unit_hls_skip_flag_start_ap_vld) begin
        hls_coding_unit_hls_skip_flag_start_r <= hls_coding_unit_hls_skip_flag_start;
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 1; a = 11;
    if (scalar_rdat_vld[28][1][11]) begin
        hls_coding_unit_hls_log2_min_cb_size <= scalar_rdat  [28][1][11];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 15;
    if (scalar_rdat_vld[26][0][15]) begin
        hls_coding_unit_hls_log2_ctb_size <= scalar_rdat  [26][0][15];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 0; a = 18;
    if (scalar_rdat_vld[13][0][18]) begin
        hls_coding_unit_hls_diff_cu_qp_delta_depth <= scalar_rdat  [13][0][18];
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 0; a = 24;
    if (scalar_rdat_vld[6][0][24]) begin
        hls_coding_unit_hls_qp_y <= scalar_rdat  [6][0][24];
    end
    //------READ (scalar, global adr = 440) always block-----//
    //s = 14; r = 1; a = 18;
    if (scalar_rdat_vld[14][1][18]) begin
        hls_coding_unit_hls_transquant_bypass_enable_flag <= scalar_rdat  [14][1][18];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 0; a = 13;
    if (scalar_rdat_vld[2][0][13]) begin
        hls_coding_unit_hls_min_cb_width <= scalar_rdat  [2][0][13];
    end
    //------WRITE (scalar, global adr = 568) always block-----//
    //s = 14; r = 1; a = 5;
    hls_coding_unit_hls_intra_split_flag_ap_vld_r <= hls_coding_unit_hls_intra_split_flag_ap_vld;
    if (hls_coding_unit_hls_intra_split_flag_ap_vld) begin
        hls_coding_unit_hls_intra_split_flag_r <= hls_coding_unit_hls_intra_split_flag;
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 1; a = 12;
    if (scalar_rdat_vld[17][1][12]) begin
        hls_coding_unit_hls_slice_type <= scalar_rdat  [17][1][12];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 0; a = 12;
    if (scalar_rdat_vld[24][0][12]) begin
        hls_coding_unit_hls_ctb_left_flag <= scalar_rdat  [24][0][12];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 13;
    if (scalar_rdat_vld[23][1][13]) begin
        hls_coding_unit_hls_ctb_up_flag <= scalar_rdat  [23][1][13];
    end
    //------READ (scalar, global adr = 320) always block-----//
    //s = 16; r = 0; a = 12;
    if (scalar_rdat_vld[16][0][12]) begin
        hls_coding_unit_hls_amp_enabled_flag <= scalar_rdat  [16][0][12];
    end
    //------READ (scalar, global adr = 400) always block-----//
    //s = 4; r = 0; a = 12;
    if (scalar_rdat_vld[4][0][12]) begin
        hls_coding_unit_hls_pcm_enabled_flag <= scalar_rdat  [4][0][12];
    end
    //------READ (scalar, global adr = 412) always block-----//
    //s = 7; r = 1; a = 15;
    if (scalar_rdat_vld[7][1][15]) begin
        hls_coding_unit_hls_log2_min_pcm_cb_size <= scalar_rdat  [7][1][15];
    end
    //------READ (scalar, global adr = 416) always block-----//
    //s = 8; r = 0; a = 21;
    if (scalar_rdat_vld[8][0][21]) begin
        hls_coding_unit_hls_log2_max_pcm_cb_size <= scalar_rdat  [8][0][21];
    end
    //------READ (scalar, global adr = 464) always block-----//
    //s = 20; r = 1; a = 12;
    if (scalar_rdat_vld[20][1][12]) begin
        hls_coding_unit_hls_depth <= scalar_rdat  [20][1][12];
    end
`endif
    //============================================================
    //hls_coding_unit_hls_dup1       (f = 19)
    //============================================================
`ifdef enable_connect_hls_coding_unit_hls_dup1
    //------READ (scalar, global adr = 420) always block-----//
    //s = 9; r = 0; a = 25;
    if (scalar_rdat_vld[9][0][25]) begin
        hls_coding_unit_hls_dup1_loop_filter_disable_flag <= scalar_rdat  [9][0][25];
    end
    //------READ (scalar, global adr = 380) always block-----//
    //s = 31; r = 0; a = 19;
    if (scalar_rdat_vld[31][0][19]) begin
        hls_coding_unit_hls_dup1_max_transform_hierarchy_depth_inter <= scalar_rdat  [31][0][19];
    end
    //------READ (scalar, global adr = 1164) always block-----//
    //s = 3; r = 0; a = 12;
    if (scalar_rdat_vld[3][0][12]) begin
        hls_coding_unit_hls_dup1_disable_deblocking_filter_flag <= scalar_rdat  [3][0][12];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 0; a = 23;
    if (scalar_rdat_vld[11][0][23]) begin
        hls_coding_unit_hls_dup1_cu_qp_delta_enabled_flag <= scalar_rdat  [11][0][23];
    end
    //------READ (scalar, global adr = 476) always block-----//
    //s = 23; r = 0; a = 15;
    if (scalar_rdat_vld[23][0][15]) begin
        hls_coding_unit_hls_dup1_tu_is_cu_qp_delta_coded <= scalar_rdat  [23][0][15];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 17;
    if (scalar_rdat_vld[15][1][17]) begin
        hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_r <= scalar_rdat  [15][1][17];    //bidir
    end
    //------WRITE (scalar, global adr = 572) always block-----//
    //s = 15; r = 0; a = 6;
    hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_ap_vld_r <= hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_ap_vld;
    if (hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_ap_vld) begin
        hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_r <= hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o;
    end
    //------READ (scalar, global adr = 28) always block-----//
    //s = 7; r = 0; a = 17;
    if (scalar_rdat_vld[7][0][17]) begin
        hls_coding_unit_hls_dup1_pcm_flag_o_r <= scalar_rdat  [7][0][17];    //bidir
    end
    //------WRITE (scalar, global adr = 28) always block-----//
    //s = 7; r = 1; a = 5;
    hls_coding_unit_hls_dup1_pcm_flag_o_ap_vld_r <= hls_coding_unit_hls_dup1_pcm_flag_o_ap_vld;
    if (hls_coding_unit_hls_dup1_pcm_flag_o_ap_vld) begin
        hls_coding_unit_hls_dup1_pcm_flag_o_r <= hls_coding_unit_hls_dup1_pcm_flag_o;
    end
    //------READ (scalar, global adr = 504) always block-----//
    //s = 30; r = 1; a = 8;
    if (scalar_rdat_vld[30][1][8]) begin
        hls_coding_unit_hls_dup1_merge_flag <= scalar_rdat  [30][1][8];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 21;
    if (scalar_rdat_vld[12][0][21]) begin
        hls_coding_unit_hls_dup1_pred_mode_o_r <= scalar_rdat  [12][0][21];    //bidir
    end
    //------WRITE (scalar, global adr = 560) always block-----//
    //s = 12; r = 1; a = 5;
    hls_coding_unit_hls_dup1_pred_mode_o_ap_vld_r <= hls_coding_unit_hls_dup1_pred_mode_o_ap_vld;
    if (hls_coding_unit_hls_dup1_pred_mode_o_ap_vld) begin
        hls_coding_unit_hls_dup1_pred_mode_o_r <= hls_coding_unit_hls_dup1_pred_mode_o;
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 1; a = 18;
    if (scalar_rdat_vld[13][1][18]) begin
        hls_coding_unit_hls_dup1_part_mode_o_r <= scalar_rdat  [13][1][18];    //bidir
    end
    //------WRITE (scalar, global adr = 564) always block-----//
    //s = 13; r = 1; a = 4;
    hls_coding_unit_hls_dup1_part_mode_o_ap_vld_r <= hls_coding_unit_hls_dup1_part_mode_o_ap_vld;
    if (hls_coding_unit_hls_dup1_part_mode_o_ap_vld) begin
        hls_coding_unit_hls_dup1_part_mode_o_r <= hls_coding_unit_hls_dup1_part_mode_o;
    end
    //------WRITE (scalar, global adr = 576) always block-----//
    //s = 16; r = 1; a = 2;
    hls_coding_unit_hls_dup1_max_trafo_depth_ap_vld_r <= hls_coding_unit_hls_dup1_max_trafo_depth_ap_vld;
    if (hls_coding_unit_hls_dup1_max_trafo_depth_ap_vld) begin
        hls_coding_unit_hls_dup1_max_trafo_depth_r <= hls_coding_unit_hls_dup1_max_trafo_depth;
    end
    //------READ (scalar, global adr = 32) always block-----//
    //s = 8; r = 1; a = 21;
    if (scalar_rdat_vld[8][1][21]) begin
        hls_coding_unit_hls_dup1_cb_size_o_r <= scalar_rdat  [8][1][21];    //bidir
    end
    //------WRITE (scalar, global adr = 32) always block-----//
    //s = 8; r = 1; a = 5;
    hls_coding_unit_hls_dup1_cb_size_o_ap_vld_r <= hls_coding_unit_hls_dup1_cb_size_o_ap_vld;
    if (hls_coding_unit_hls_dup1_cb_size_o_ap_vld) begin
        hls_coding_unit_hls_dup1_cb_size_o_r <= hls_coding_unit_hls_dup1_cb_size_o;
    end
    //------READ (scalar, global adr = 44) always block-----//
    //s = 11; r = 1; a = 23;
    if (scalar_rdat_vld[11][1][23]) begin
        hls_coding_unit_hls_dup1_idx_o_r <= scalar_rdat  [11][1][23];    //bidir
    end
    //------WRITE (scalar, global adr = 44) always block-----//
    //s = 11; r = 0; a = 6;
    hls_coding_unit_hls_dup1_idx_o_ap_vld_r <= hls_coding_unit_hls_dup1_idx_o_ap_vld;
    if (hls_coding_unit_hls_dup1_idx_o_ap_vld) begin
        hls_coding_unit_hls_dup1_idx_o_r <= hls_coding_unit_hls_dup1_idx_o;
    end
    //------WRITE (scalar, global adr = 1168) always block-----//
    //s = 4; r = 0; a = 1;
    hls_coding_unit_hls_dup1_xm_xBase_ap_vld_r <= hls_coding_unit_hls_dup1_xm_xBase_ap_vld;
    if (hls_coding_unit_hls_dup1_xm_xBase_ap_vld) begin
        hls_coding_unit_hls_dup1_xm_xBase_r <= hls_coding_unit_hls_dup1_xm_xBase;
    end
    //------WRITE (scalar, global adr = 1172) always block-----//
    //s = 5; r = 1; a = 4;
    hls_coding_unit_hls_dup1_xm_yBase_ap_vld_r <= hls_coding_unit_hls_dup1_xm_yBase_ap_vld;
    if (hls_coding_unit_hls_dup1_xm_yBase_ap_vld) begin
        hls_coding_unit_hls_dup1_xm_yBase_r <= hls_coding_unit_hls_dup1_xm_yBase;
    end
    //------WRITE (scalar, global adr = 1176) always block-----//
    //s = 6; r = 0; a = 5;
    hls_coding_unit_hls_dup1_xm_cb_xBase_ap_vld_r <= hls_coding_unit_hls_dup1_xm_cb_xBase_ap_vld;
    if (hls_coding_unit_hls_dup1_xm_cb_xBase_ap_vld) begin
        hls_coding_unit_hls_dup1_xm_cb_xBase_r <= hls_coding_unit_hls_dup1_xm_cb_xBase;
    end
    //------WRITE (scalar, global adr = 1180) always block-----//
    //s = 7; r = 0; a = 6;
    hls_coding_unit_hls_dup1_xm_cb_yBase_ap_vld_r <= hls_coding_unit_hls_dup1_xm_cb_yBase_ap_vld;
    if (hls_coding_unit_hls_dup1_xm_cb_yBase_ap_vld) begin
        hls_coding_unit_hls_dup1_xm_cb_yBase_r <= hls_coding_unit_hls_dup1_xm_cb_yBase;
    end
    //------WRITE (scalar, global adr = 1184) always block-----//
    //s = 8; r = 0; a = 6;
    hls_coding_unit_hls_dup1_xm_log2_cb_size_ap_vld_r <= hls_coding_unit_hls_dup1_xm_log2_cb_size_ap_vld;
    if (hls_coding_unit_hls_dup1_xm_log2_cb_size_ap_vld) begin
        hls_coding_unit_hls_dup1_xm_log2_cb_size_r <= hls_coding_unit_hls_dup1_xm_log2_cb_size;
    end
    //------READ (scalar, global adr = 1268) always block-----//
    //s = 29; r = 0; a = 21;
    if (scalar_rdat_vld[29][0][21]) begin
        hls_coding_unit_hls_dup1_rv_set_deblocking_bypass <= scalar_rdat  [29][0][21];
    end
    //------READ (scalar, global adr = 1264) always block-----//
    //s = 28; r = 0; a = 12;
    if (scalar_rdat_vld[28][0][12]) begin
        hls_coding_unit_hls_dup1_rv_ff_hevc_deblocking_boundary_strengths <= scalar_rdat  [28][0][12];
    end
    //------READ (scalar, global adr = 1272) always block-----//
    //s = 30; r = 0; a = 9;
    if (scalar_rdat_vld[30][0][9]) begin
        hls_coding_unit_hls_dup1_rv_hls_pcm_sample <= scalar_rdat  [30][0][9];
    end
    //------READ (scalar, global adr = 1276) always block-----//
    //s = 31; r = 1; a = 18;
    if (scalar_rdat_vld[31][1][18]) begin
        hls_coding_unit_hls_dup1_rv_hls_prediction_unit <= scalar_rdat  [31][1][18];
    end
    //------READ (scalar, global adr = 1280) always block-----//
    //s = 0; r = 0; a = 18;
    if (scalar_rdat_vld[0][0][18]) begin
        hls_coding_unit_hls_dup1_rv_hls_intra_prediction_unit <= scalar_rdat  [0][0][18];
    end
    //------READ (scalar, global adr = 1284) always block-----//
    //s = 1; r = 1; a = 14;
    if (scalar_rdat_vld[1][1][14]) begin
        hls_coding_unit_hls_dup1_rv_hls_transform_tree <= scalar_rdat  [1][1][14];
    end
    //------READ (scalar, global adr = 1240) always block-----//
    //s = 22; r = 1; a = 15;
    if (scalar_rdat_vld[22][1][15]) begin
        hls_coding_unit_hls_dup1_rv_callback_flag <= scalar_rdat  [22][1][15];
    end
    //------WRITE (scalar, global adr = 36) always block-----//
    //s = 9; r = 0; a = 7;
    hls_coding_unit_hls_dup1_length_r_ap_vld_r <= hls_coding_unit_hls_dup1_length_r_ap_vld;
    if (hls_coding_unit_hls_dup1_length_r_ap_vld) begin
        hls_coding_unit_hls_dup1_length_r_r <= hls_coding_unit_hls_dup1_length_r;
    end
    //------WRITE (scalar, global adr = 544) always block-----//
    //s = 8; r = 1; a = 6;
    hls_coding_unit_hls_dup1_xm_x_ap_vld_r <= hls_coding_unit_hls_dup1_xm_x_ap_vld;
    if (hls_coding_unit_hls_dup1_xm_x_ap_vld) begin
        hls_coding_unit_hls_dup1_xm_x_r <= hls_coding_unit_hls_dup1_xm_x;
    end
    //------WRITE (scalar, global adr = 548) always block-----//
    //s = 9; r = 1; a = 7;
    hls_coding_unit_hls_dup1_xm_y_ap_vld_r <= hls_coding_unit_hls_dup1_xm_y_ap_vld;
    if (hls_coding_unit_hls_dup1_xm_y_ap_vld) begin
        hls_coding_unit_hls_dup1_xm_y_r <= hls_coding_unit_hls_dup1_xm_y;
    end
    //------WRITE (scalar, complete partition, global adr = 512) always block -----//
    //s = 0; r = 0; a = 4;
    hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_ap_vld_r <= hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_ap_vld;
    if (hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_ap_vld) begin
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_r <= hls_coding_unit_hls_dup1_pu_intra_pred_mode_0;
    end
    //------WRITE (scalar, complete partition, global adr = 513) always block -----//
    //s = 0; r = 1; a = 4;
    hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_ap_vld_r <= hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_ap_vld;
    if (hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_ap_vld) begin
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_r <= hls_coding_unit_hls_dup1_pu_intra_pred_mode_1;
    end
    //------WRITE (scalar, complete partition, global adr = 514) always block -----//
    //s = 0; r = 0; a = 5;
    hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_ap_vld_r <= hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_ap_vld;
    if (hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_ap_vld) begin
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_r <= hls_coding_unit_hls_dup1_pu_intra_pred_mode_2;
    end
    //------WRITE (scalar, complete partition, global adr = 515) always block -----//
    //s = 0; r = 1; a = 5;
    hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_ap_vld_r <= hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_ap_vld;
    if (hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_ap_vld) begin
        hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_r <= hls_coding_unit_hls_dup1_pu_intra_pred_mode_3;
    end
    //------WRITE (scalar, global adr = 540) always block-----//
    //s = 7; r = 1; a = 6;
    hls_coding_unit_hls_dup1_qPy_pred_ap_vld_r <= hls_coding_unit_hls_dup1_qPy_pred_ap_vld;
    if (hls_coding_unit_hls_dup1_qPy_pred_ap_vld) begin
        hls_coding_unit_hls_dup1_qPy_pred_r <= hls_coding_unit_hls_dup1_qPy_pred;
    end
    //------WRITE (scalar, global adr = 24) always block-----//
    //s = 6; r = 1; a = 5;
    hls_coding_unit_hls_dup1_skip_flag_start_ap_vld_r <= hls_coding_unit_hls_dup1_skip_flag_start_ap_vld;
    if (hls_coding_unit_hls_dup1_skip_flag_start_ap_vld) begin
        hls_coding_unit_hls_dup1_skip_flag_start_r <= hls_coding_unit_hls_dup1_skip_flag_start;
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 1; a = 12;
    if (scalar_rdat_vld[28][1][12]) begin
        hls_coding_unit_hls_dup1_log2_min_cb_size <= scalar_rdat  [28][1][12];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 14;
    if (scalar_rdat_vld[26][1][14]) begin
        hls_coding_unit_hls_dup1_log2_ctb_size <= scalar_rdat  [26][1][14];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 0; a = 19;
    if (scalar_rdat_vld[13][0][19]) begin
        hls_coding_unit_hls_dup1_diff_cu_qp_delta_depth <= scalar_rdat  [13][0][19];
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 23;
    if (scalar_rdat_vld[6][1][23]) begin
        hls_coding_unit_hls_dup1_qp_y <= scalar_rdat  [6][1][23];
    end
    //------READ (scalar, global adr = 440) always block-----//
    //s = 14; r = 0; a = 19;
    if (scalar_rdat_vld[14][0][19]) begin
        hls_coding_unit_hls_dup1_transquant_bypass_enable_flag <= scalar_rdat  [14][0][19];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 1; a = 12;
    if (scalar_rdat_vld[2][1][12]) begin
        hls_coding_unit_hls_dup1_min_cb_width <= scalar_rdat  [2][1][12];
    end
    //------WRITE (scalar, global adr = 568) always block-----//
    //s = 14; r = 0; a = 6;
    hls_coding_unit_hls_dup1_intra_split_flag_ap_vld_r <= hls_coding_unit_hls_dup1_intra_split_flag_ap_vld;
    if (hls_coding_unit_hls_dup1_intra_split_flag_ap_vld) begin
        hls_coding_unit_hls_dup1_intra_split_flag_r <= hls_coding_unit_hls_dup1_intra_split_flag;
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 0; a = 13;
    if (scalar_rdat_vld[17][0][13]) begin
        hls_coding_unit_hls_dup1_slice_type <= scalar_rdat  [17][0][13];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 11;
    if (scalar_rdat_vld[24][1][11]) begin
        hls_coding_unit_hls_dup1_ctb_left_flag <= scalar_rdat  [24][1][11];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 14;
    if (scalar_rdat_vld[23][1][14]) begin
        hls_coding_unit_hls_dup1_ctb_up_flag <= scalar_rdat  [23][1][14];
    end
    //------READ (scalar, global adr = 320) always block-----//
    //s = 16; r = 1; a = 11;
    if (scalar_rdat_vld[16][1][11]) begin
        hls_coding_unit_hls_dup1_amp_enabled_flag <= scalar_rdat  [16][1][11];
    end
    //------READ (scalar, global adr = 400) always block-----//
    //s = 4; r = 1; a = 12;
    if (scalar_rdat_vld[4][1][12]) begin
        hls_coding_unit_hls_dup1_pcm_enabled_flag <= scalar_rdat  [4][1][12];
    end
    //------READ (scalar, global adr = 412) always block-----//
    //s = 7; r = 1; a = 16;
    if (scalar_rdat_vld[7][1][16]) begin
        hls_coding_unit_hls_dup1_log2_min_pcm_cb_size <= scalar_rdat  [7][1][16];
    end
    //------READ (scalar, global adr = 416) always block-----//
    //s = 8; r = 0; a = 22;
    if (scalar_rdat_vld[8][0][22]) begin
        hls_coding_unit_hls_dup1_log2_max_pcm_cb_size <= scalar_rdat  [8][0][22];
    end
    //------READ (scalar, global adr = 464) always block-----//
    //s = 20; r = 0; a = 13;
    if (scalar_rdat_vld[20][0][13]) begin
        hls_coding_unit_hls_dup1_depth <= scalar_rdat  [20][0][13];
    end
`endif
    //============================================================
    //hls_coding_unit_hls_dup2       (f = 20)
    //============================================================
`ifdef enable_connect_hls_coding_unit_hls_dup2
    //------READ (scalar, global adr = 420) always block-----//
    //s = 9; r = 1; a = 25;
    if (scalar_rdat_vld[9][1][25]) begin
        hls_coding_unit_hls_dup2_loop_filter_disable_flag <= scalar_rdat  [9][1][25];
    end
    //------READ (scalar, global adr = 380) always block-----//
    //s = 31; r = 0; a = 20;
    if (scalar_rdat_vld[31][0][20]) begin
        hls_coding_unit_hls_dup2_max_transform_hierarchy_depth_inter <= scalar_rdat  [31][0][20];
    end
    //------READ (scalar, global adr = 1164) always block-----//
    //s = 3; r = 1; a = 11;
    if (scalar_rdat_vld[3][1][11]) begin
        hls_coding_unit_hls_dup2_disable_deblocking_filter_flag <= scalar_rdat  [3][1][11];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 0; a = 24;
    if (scalar_rdat_vld[11][0][24]) begin
        hls_coding_unit_hls_dup2_cu_qp_delta_enabled_flag <= scalar_rdat  [11][0][24];
    end
    //------READ (scalar, global adr = 476) always block-----//
    //s = 23; r = 0; a = 16;
    if (scalar_rdat_vld[23][0][16]) begin
        hls_coding_unit_hls_dup2_tu_is_cu_qp_delta_coded <= scalar_rdat  [23][0][16];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 0; a = 18;
    if (scalar_rdat_vld[15][0][18]) begin
        hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_r <= scalar_rdat  [15][0][18];    //bidir
    end
    //------WRITE (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 6;
    hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_ap_vld_r <= hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_ap_vld;
    if (hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_ap_vld) begin
        hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_r <= hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o;
    end
    //------READ (scalar, global adr = 28) always block-----//
    //s = 7; r = 0; a = 18;
    if (scalar_rdat_vld[7][0][18]) begin
        hls_coding_unit_hls_dup2_pcm_flag_o_r <= scalar_rdat  [7][0][18];    //bidir
    end
    //------WRITE (scalar, global adr = 28) always block-----//
    //s = 7; r = 0; a = 7;
    hls_coding_unit_hls_dup2_pcm_flag_o_ap_vld_r <= hls_coding_unit_hls_dup2_pcm_flag_o_ap_vld;
    if (hls_coding_unit_hls_dup2_pcm_flag_o_ap_vld) begin
        hls_coding_unit_hls_dup2_pcm_flag_o_r <= hls_coding_unit_hls_dup2_pcm_flag_o;
    end
    //------READ (scalar, global adr = 504) always block-----//
    //s = 30; r = 1; a = 9;
    if (scalar_rdat_vld[30][1][9]) begin
        hls_coding_unit_hls_dup2_merge_flag <= scalar_rdat  [30][1][9];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 1; a = 20;
    if (scalar_rdat_vld[12][1][20]) begin
        hls_coding_unit_hls_dup2_pred_mode_o_r <= scalar_rdat  [12][1][20];    //bidir
    end
    //------WRITE (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 6;
    hls_coding_unit_hls_dup2_pred_mode_o_ap_vld_r <= hls_coding_unit_hls_dup2_pred_mode_o_ap_vld;
    if (hls_coding_unit_hls_dup2_pred_mode_o_ap_vld) begin
        hls_coding_unit_hls_dup2_pred_mode_o_r <= hls_coding_unit_hls_dup2_pred_mode_o;
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 1; a = 19;
    if (scalar_rdat_vld[13][1][19]) begin
        hls_coding_unit_hls_dup2_part_mode_o_r <= scalar_rdat  [13][1][19];    //bidir
    end
    //------WRITE (scalar, global adr = 564) always block-----//
    //s = 13; r = 0; a = 5;
    hls_coding_unit_hls_dup2_part_mode_o_ap_vld_r <= hls_coding_unit_hls_dup2_part_mode_o_ap_vld;
    if (hls_coding_unit_hls_dup2_part_mode_o_ap_vld) begin
        hls_coding_unit_hls_dup2_part_mode_o_r <= hls_coding_unit_hls_dup2_part_mode_o;
    end
    //------WRITE (scalar, global adr = 576) always block-----//
    //s = 16; r = 0; a = 3;
    hls_coding_unit_hls_dup2_max_trafo_depth_ap_vld_r <= hls_coding_unit_hls_dup2_max_trafo_depth_ap_vld;
    if (hls_coding_unit_hls_dup2_max_trafo_depth_ap_vld) begin
        hls_coding_unit_hls_dup2_max_trafo_depth_r <= hls_coding_unit_hls_dup2_max_trafo_depth;
    end
    //------READ (scalar, global adr = 32) always block-----//
    //s = 8; r = 1; a = 22;
    if (scalar_rdat_vld[8][1][22]) begin
        hls_coding_unit_hls_dup2_cb_size_o_r <= scalar_rdat  [8][1][22];    //bidir
    end
    //------WRITE (scalar, global adr = 32) always block-----//
    //s = 8; r = 0; a = 7;
    hls_coding_unit_hls_dup2_cb_size_o_ap_vld_r <= hls_coding_unit_hls_dup2_cb_size_o_ap_vld;
    if (hls_coding_unit_hls_dup2_cb_size_o_ap_vld) begin
        hls_coding_unit_hls_dup2_cb_size_o_r <= hls_coding_unit_hls_dup2_cb_size_o;
    end
    //------READ (scalar, global adr = 44) always block-----//
    //s = 11; r = 1; a = 24;
    if (scalar_rdat_vld[11][1][24]) begin
        hls_coding_unit_hls_dup2_idx_o_r <= scalar_rdat  [11][1][24];    //bidir
    end
    //------WRITE (scalar, global adr = 44) always block-----//
    //s = 11; r = 1; a = 6;
    hls_coding_unit_hls_dup2_idx_o_ap_vld_r <= hls_coding_unit_hls_dup2_idx_o_ap_vld;
    if (hls_coding_unit_hls_dup2_idx_o_ap_vld) begin
        hls_coding_unit_hls_dup2_idx_o_r <= hls_coding_unit_hls_dup2_idx_o;
    end
    //------WRITE (scalar, global adr = 1168) always block-----//
    //s = 4; r = 1; a = 1;
    hls_coding_unit_hls_dup2_xm_xBase_ap_vld_r <= hls_coding_unit_hls_dup2_xm_xBase_ap_vld;
    if (hls_coding_unit_hls_dup2_xm_xBase_ap_vld) begin
        hls_coding_unit_hls_dup2_xm_xBase_r <= hls_coding_unit_hls_dup2_xm_xBase;
    end
    //------WRITE (scalar, global adr = 1172) always block-----//
    //s = 5; r = 0; a = 5;
    hls_coding_unit_hls_dup2_xm_yBase_ap_vld_r <= hls_coding_unit_hls_dup2_xm_yBase_ap_vld;
    if (hls_coding_unit_hls_dup2_xm_yBase_ap_vld) begin
        hls_coding_unit_hls_dup2_xm_yBase_r <= hls_coding_unit_hls_dup2_xm_yBase;
    end
    //------WRITE (scalar, global adr = 1176) always block-----//
    //s = 6; r = 0; a = 6;
    hls_coding_unit_hls_dup2_xm_cb_xBase_ap_vld_r <= hls_coding_unit_hls_dup2_xm_cb_xBase_ap_vld;
    if (hls_coding_unit_hls_dup2_xm_cb_xBase_ap_vld) begin
        hls_coding_unit_hls_dup2_xm_cb_xBase_r <= hls_coding_unit_hls_dup2_xm_cb_xBase;
    end
    //------WRITE (scalar, global adr = 1180) always block-----//
    //s = 7; r = 1; a = 7;
    hls_coding_unit_hls_dup2_xm_cb_yBase_ap_vld_r <= hls_coding_unit_hls_dup2_xm_cb_yBase_ap_vld;
    if (hls_coding_unit_hls_dup2_xm_cb_yBase_ap_vld) begin
        hls_coding_unit_hls_dup2_xm_cb_yBase_r <= hls_coding_unit_hls_dup2_xm_cb_yBase;
    end
    //------WRITE (scalar, global adr = 1184) always block-----//
    //s = 8; r = 1; a = 7;
    hls_coding_unit_hls_dup2_xm_log2_cb_size_ap_vld_r <= hls_coding_unit_hls_dup2_xm_log2_cb_size_ap_vld;
    if (hls_coding_unit_hls_dup2_xm_log2_cb_size_ap_vld) begin
        hls_coding_unit_hls_dup2_xm_log2_cb_size_r <= hls_coding_unit_hls_dup2_xm_log2_cb_size;
    end
    //------READ (scalar, global adr = 1268) always block-----//
    //s = 29; r = 1; a = 21;
    if (scalar_rdat_vld[29][1][21]) begin
        hls_coding_unit_hls_dup2_rv_set_deblocking_bypass <= scalar_rdat  [29][1][21];
    end
    //------READ (scalar, global adr = 1264) always block-----//
    //s = 28; r = 0; a = 13;
    if (scalar_rdat_vld[28][0][13]) begin
        hls_coding_unit_hls_dup2_rv_ff_hevc_deblocking_boundary_strengths <= scalar_rdat  [28][0][13];
    end
    //------READ (scalar, global adr = 1272) always block-----//
    //s = 30; r = 0; a = 10;
    if (scalar_rdat_vld[30][0][10]) begin
        hls_coding_unit_hls_dup2_rv_hls_pcm_sample <= scalar_rdat  [30][0][10];
    end
    //------READ (scalar, global adr = 1276) always block-----//
    //s = 31; r = 1; a = 19;
    if (scalar_rdat_vld[31][1][19]) begin
        hls_coding_unit_hls_dup2_rv_hls_prediction_unit <= scalar_rdat  [31][1][19];
    end
    //------READ (scalar, global adr = 1280) always block-----//
    //s = 0; r = 1; a = 18;
    if (scalar_rdat_vld[0][1][18]) begin
        hls_coding_unit_hls_dup2_rv_hls_intra_prediction_unit <= scalar_rdat  [0][1][18];
    end
    //------READ (scalar, global adr = 1284) always block-----//
    //s = 1; r = 0; a = 15;
    if (scalar_rdat_vld[1][0][15]) begin
        hls_coding_unit_hls_dup2_rv_hls_transform_tree <= scalar_rdat  [1][0][15];
    end
    //------READ (scalar, global adr = 1240) always block-----//
    //s = 22; r = 0; a = 17;
    if (scalar_rdat_vld[22][0][17]) begin
        hls_coding_unit_hls_dup2_rv_callback_flag <= scalar_rdat  [22][0][17];
    end
    //------WRITE (scalar, global adr = 36) always block-----//
    //s = 9; r = 0; a = 8;
    hls_coding_unit_hls_dup2_length_r_ap_vld_r <= hls_coding_unit_hls_dup2_length_r_ap_vld;
    if (hls_coding_unit_hls_dup2_length_r_ap_vld) begin
        hls_coding_unit_hls_dup2_length_r_r <= hls_coding_unit_hls_dup2_length_r;
    end
    //------WRITE (scalar, global adr = 544) always block-----//
    //s = 8; r = 0; a = 8;
    hls_coding_unit_hls_dup2_xm_x_ap_vld_r <= hls_coding_unit_hls_dup2_xm_x_ap_vld;
    if (hls_coding_unit_hls_dup2_xm_x_ap_vld) begin
        hls_coding_unit_hls_dup2_xm_x_r <= hls_coding_unit_hls_dup2_xm_x;
    end
    //------WRITE (scalar, global adr = 548) always block-----//
    //s = 9; r = 1; a = 8;
    hls_coding_unit_hls_dup2_xm_y_ap_vld_r <= hls_coding_unit_hls_dup2_xm_y_ap_vld;
    if (hls_coding_unit_hls_dup2_xm_y_ap_vld) begin
        hls_coding_unit_hls_dup2_xm_y_r <= hls_coding_unit_hls_dup2_xm_y;
    end
    //------WRITE (scalar, complete partition, global adr = 512) always block -----//
    //s = 0; r = 0; a = 6;
    hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_ap_vld_r <= hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_ap_vld;
    if (hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_ap_vld) begin
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_r <= hls_coding_unit_hls_dup2_pu_intra_pred_mode_0;
    end
    //------WRITE (scalar, complete partition, global adr = 513) always block -----//
    //s = 0; r = 1; a = 6;
    hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_ap_vld_r <= hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_ap_vld;
    if (hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_ap_vld) begin
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_r <= hls_coding_unit_hls_dup2_pu_intra_pred_mode_1;
    end
    //------WRITE (scalar, complete partition, global adr = 514) always block -----//
    //s = 0; r = 0; a = 7;
    hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_ap_vld_r <= hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_ap_vld;
    if (hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_ap_vld) begin
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_r <= hls_coding_unit_hls_dup2_pu_intra_pred_mode_2;
    end
    //------WRITE (scalar, complete partition, global adr = 515) always block -----//
    //s = 0; r = 1; a = 7;
    hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_ap_vld_r <= hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_ap_vld;
    if (hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_ap_vld) begin
        hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_r <= hls_coding_unit_hls_dup2_pu_intra_pred_mode_3;
    end
    //------WRITE (scalar, global adr = 540) always block-----//
    //s = 7; r = 0; a = 8;
    hls_coding_unit_hls_dup2_qPy_pred_ap_vld_r <= hls_coding_unit_hls_dup2_qPy_pred_ap_vld;
    if (hls_coding_unit_hls_dup2_qPy_pred_ap_vld) begin
        hls_coding_unit_hls_dup2_qPy_pred_r <= hls_coding_unit_hls_dup2_qPy_pred;
    end
    //------WRITE (scalar, global adr = 24) always block-----//
    //s = 6; r = 1; a = 6;
    hls_coding_unit_hls_dup2_skip_flag_start_ap_vld_r <= hls_coding_unit_hls_dup2_skip_flag_start_ap_vld;
    if (hls_coding_unit_hls_dup2_skip_flag_start_ap_vld) begin
        hls_coding_unit_hls_dup2_skip_flag_start_r <= hls_coding_unit_hls_dup2_skip_flag_start;
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 1; a = 13;
    if (scalar_rdat_vld[28][1][13]) begin
        hls_coding_unit_hls_dup2_log2_min_cb_size <= scalar_rdat  [28][1][13];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 16;
    if (scalar_rdat_vld[26][0][16]) begin
        hls_coding_unit_hls_dup2_log2_ctb_size <= scalar_rdat  [26][0][16];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 0; a = 20;
    if (scalar_rdat_vld[13][0][20]) begin
        hls_coding_unit_hls_dup2_diff_cu_qp_delta_depth <= scalar_rdat  [13][0][20];
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 0; a = 25;
    if (scalar_rdat_vld[6][0][25]) begin
        hls_coding_unit_hls_dup2_qp_y <= scalar_rdat  [6][0][25];
    end
    //------READ (scalar, global adr = 440) always block-----//
    //s = 14; r = 1; a = 19;
    if (scalar_rdat_vld[14][1][19]) begin
        hls_coding_unit_hls_dup2_transquant_bypass_enable_flag <= scalar_rdat  [14][1][19];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 0; a = 14;
    if (scalar_rdat_vld[2][0][14]) begin
        hls_coding_unit_hls_dup2_min_cb_width <= scalar_rdat  [2][0][14];
    end
    //------WRITE (scalar, global adr = 568) always block-----//
    //s = 14; r = 1; a = 6;
    hls_coding_unit_hls_dup2_intra_split_flag_ap_vld_r <= hls_coding_unit_hls_dup2_intra_split_flag_ap_vld;
    if (hls_coding_unit_hls_dup2_intra_split_flag_ap_vld) begin
        hls_coding_unit_hls_dup2_intra_split_flag_r <= hls_coding_unit_hls_dup2_intra_split_flag;
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 1; a = 13;
    if (scalar_rdat_vld[17][1][13]) begin
        hls_coding_unit_hls_dup2_slice_type <= scalar_rdat  [17][1][13];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 0; a = 13;
    if (scalar_rdat_vld[24][0][13]) begin
        hls_coding_unit_hls_dup2_ctb_left_flag <= scalar_rdat  [24][0][13];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 15;
    if (scalar_rdat_vld[23][1][15]) begin
        hls_coding_unit_hls_dup2_ctb_up_flag <= scalar_rdat  [23][1][15];
    end
    //------READ (scalar, global adr = 320) always block-----//
    //s = 16; r = 0; a = 13;
    if (scalar_rdat_vld[16][0][13]) begin
        hls_coding_unit_hls_dup2_amp_enabled_flag <= scalar_rdat  [16][0][13];
    end
    //------READ (scalar, global adr = 400) always block-----//
    //s = 4; r = 0; a = 13;
    if (scalar_rdat_vld[4][0][13]) begin
        hls_coding_unit_hls_dup2_pcm_enabled_flag <= scalar_rdat  [4][0][13];
    end
    //------READ (scalar, global adr = 412) always block-----//
    //s = 7; r = 1; a = 17;
    if (scalar_rdat_vld[7][1][17]) begin
        hls_coding_unit_hls_dup2_log2_min_pcm_cb_size <= scalar_rdat  [7][1][17];
    end
    //------READ (scalar, global adr = 416) always block-----//
    //s = 8; r = 0; a = 23;
    if (scalar_rdat_vld[8][0][23]) begin
        hls_coding_unit_hls_dup2_log2_max_pcm_cb_size <= scalar_rdat  [8][0][23];
    end
    //------READ (scalar, global adr = 464) always block-----//
    //s = 20; r = 1; a = 13;
    if (scalar_rdat_vld[20][1][13]) begin
        hls_coding_unit_hls_dup2_depth <= scalar_rdat  [20][1][13];
    end
`endif
    //============================================================
    //hls_coding_unit_hls_dup3       (f = 21)
    //============================================================
`ifdef enable_connect_hls_coding_unit_hls_dup3
    //------READ (scalar, global adr = 420) always block-----//
    //s = 9; r = 0; a = 26;
    if (scalar_rdat_vld[9][0][26]) begin
        hls_coding_unit_hls_dup3_loop_filter_disable_flag <= scalar_rdat  [9][0][26];
    end
    //------READ (scalar, global adr = 380) always block-----//
    //s = 31; r = 0; a = 21;
    if (scalar_rdat_vld[31][0][21]) begin
        hls_coding_unit_hls_dup3_max_transform_hierarchy_depth_inter <= scalar_rdat  [31][0][21];
    end
    //------READ (scalar, global adr = 1164) always block-----//
    //s = 3; r = 0; a = 13;
    if (scalar_rdat_vld[3][0][13]) begin
        hls_coding_unit_hls_dup3_disable_deblocking_filter_flag <= scalar_rdat  [3][0][13];
    end
    //------READ (scalar, global adr = 428) always block-----//
    //s = 11; r = 0; a = 25;
    if (scalar_rdat_vld[11][0][25]) begin
        hls_coding_unit_hls_dup3_cu_qp_delta_enabled_flag <= scalar_rdat  [11][0][25];
    end
    //------READ (scalar, global adr = 476) always block-----//
    //s = 23; r = 0; a = 17;
    if (scalar_rdat_vld[23][0][17]) begin
        hls_coding_unit_hls_dup3_tu_is_cu_qp_delta_coded <= scalar_rdat  [23][0][17];
    end
    //------READ (scalar, global adr = 572) always block-----//
    //s = 15; r = 1; a = 18;
    if (scalar_rdat_vld[15][1][18]) begin
        hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_r <= scalar_rdat  [15][1][18];    //bidir
    end
    //------WRITE (scalar, global adr = 572) always block-----//
    //s = 15; r = 0; a = 7;
    hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_ap_vld_r <= hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_ap_vld;
    if (hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_ap_vld) begin
        hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_r <= hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o;
    end
    //------READ (scalar, global adr = 28) always block-----//
    //s = 7; r = 0; a = 19;
    if (scalar_rdat_vld[7][0][19]) begin
        hls_coding_unit_hls_dup3_pcm_flag_o_r <= scalar_rdat  [7][0][19];    //bidir
    end
    //------WRITE (scalar, global adr = 28) always block-----//
    //s = 7; r = 1; a = 8;
    hls_coding_unit_hls_dup3_pcm_flag_o_ap_vld_r <= hls_coding_unit_hls_dup3_pcm_flag_o_ap_vld;
    if (hls_coding_unit_hls_dup3_pcm_flag_o_ap_vld) begin
        hls_coding_unit_hls_dup3_pcm_flag_o_r <= hls_coding_unit_hls_dup3_pcm_flag_o;
    end
    //------READ (scalar, global adr = 504) always block-----//
    //s = 30; r = 1; a = 10;
    if (scalar_rdat_vld[30][1][10]) begin
        hls_coding_unit_hls_dup3_merge_flag <= scalar_rdat  [30][1][10];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 0; a = 22;
    if (scalar_rdat_vld[12][0][22]) begin
        hls_coding_unit_hls_dup3_pred_mode_o_r <= scalar_rdat  [12][0][22];    //bidir
    end
    //------WRITE (scalar, global adr = 560) always block-----//
    //s = 12; r = 1; a = 6;
    hls_coding_unit_hls_dup3_pred_mode_o_ap_vld_r <= hls_coding_unit_hls_dup3_pred_mode_o_ap_vld;
    if (hls_coding_unit_hls_dup3_pred_mode_o_ap_vld) begin
        hls_coding_unit_hls_dup3_pred_mode_o_r <= hls_coding_unit_hls_dup3_pred_mode_o;
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 1; a = 20;
    if (scalar_rdat_vld[13][1][20]) begin
        hls_coding_unit_hls_dup3_part_mode_o_r <= scalar_rdat  [13][1][20];    //bidir
    end
    //------WRITE (scalar, global adr = 564) always block-----//
    //s = 13; r = 1; a = 5;
    hls_coding_unit_hls_dup3_part_mode_o_ap_vld_r <= hls_coding_unit_hls_dup3_part_mode_o_ap_vld;
    if (hls_coding_unit_hls_dup3_part_mode_o_ap_vld) begin
        hls_coding_unit_hls_dup3_part_mode_o_r <= hls_coding_unit_hls_dup3_part_mode_o;
    end
    //------WRITE (scalar, global adr = 576) always block-----//
    //s = 16; r = 1; a = 3;
    hls_coding_unit_hls_dup3_max_trafo_depth_ap_vld_r <= hls_coding_unit_hls_dup3_max_trafo_depth_ap_vld;
    if (hls_coding_unit_hls_dup3_max_trafo_depth_ap_vld) begin
        hls_coding_unit_hls_dup3_max_trafo_depth_r <= hls_coding_unit_hls_dup3_max_trafo_depth;
    end
    //------READ (scalar, global adr = 32) always block-----//
    //s = 8; r = 1; a = 23;
    if (scalar_rdat_vld[8][1][23]) begin
        hls_coding_unit_hls_dup3_cb_size_o_r <= scalar_rdat  [8][1][23];    //bidir
    end
    //------WRITE (scalar, global adr = 32) always block-----//
    //s = 8; r = 1; a = 8;
    hls_coding_unit_hls_dup3_cb_size_o_ap_vld_r <= hls_coding_unit_hls_dup3_cb_size_o_ap_vld;
    if (hls_coding_unit_hls_dup3_cb_size_o_ap_vld) begin
        hls_coding_unit_hls_dup3_cb_size_o_r <= hls_coding_unit_hls_dup3_cb_size_o;
    end
    //------READ (scalar, global adr = 44) always block-----//
    //s = 11; r = 1; a = 25;
    if (scalar_rdat_vld[11][1][25]) begin
        hls_coding_unit_hls_dup3_idx_o_r <= scalar_rdat  [11][1][25];    //bidir
    end
    //------WRITE (scalar, global adr = 44) always block-----//
    //s = 11; r = 0; a = 7;
    hls_coding_unit_hls_dup3_idx_o_ap_vld_r <= hls_coding_unit_hls_dup3_idx_o_ap_vld;
    if (hls_coding_unit_hls_dup3_idx_o_ap_vld) begin
        hls_coding_unit_hls_dup3_idx_o_r <= hls_coding_unit_hls_dup3_idx_o;
    end
    //------WRITE (scalar, global adr = 1168) always block-----//
    //s = 4; r = 0; a = 2;
    hls_coding_unit_hls_dup3_xm_xBase_ap_vld_r <= hls_coding_unit_hls_dup3_xm_xBase_ap_vld;
    if (hls_coding_unit_hls_dup3_xm_xBase_ap_vld) begin
        hls_coding_unit_hls_dup3_xm_xBase_r <= hls_coding_unit_hls_dup3_xm_xBase;
    end
    //------WRITE (scalar, global adr = 1172) always block-----//
    //s = 5; r = 1; a = 5;
    hls_coding_unit_hls_dup3_xm_yBase_ap_vld_r <= hls_coding_unit_hls_dup3_xm_yBase_ap_vld;
    if (hls_coding_unit_hls_dup3_xm_yBase_ap_vld) begin
        hls_coding_unit_hls_dup3_xm_yBase_r <= hls_coding_unit_hls_dup3_xm_yBase;
    end
    //------WRITE (scalar, global adr = 1176) always block-----//
    //s = 6; r = 0; a = 7;
    hls_coding_unit_hls_dup3_xm_cb_xBase_ap_vld_r <= hls_coding_unit_hls_dup3_xm_cb_xBase_ap_vld;
    if (hls_coding_unit_hls_dup3_xm_cb_xBase_ap_vld) begin
        hls_coding_unit_hls_dup3_xm_cb_xBase_r <= hls_coding_unit_hls_dup3_xm_cb_xBase;
    end
    //------WRITE (scalar, global adr = 1180) always block-----//
    //s = 7; r = 0; a = 9;
    hls_coding_unit_hls_dup3_xm_cb_yBase_ap_vld_r <= hls_coding_unit_hls_dup3_xm_cb_yBase_ap_vld;
    if (hls_coding_unit_hls_dup3_xm_cb_yBase_ap_vld) begin
        hls_coding_unit_hls_dup3_xm_cb_yBase_r <= hls_coding_unit_hls_dup3_xm_cb_yBase;
    end
    //------WRITE (scalar, global adr = 1184) always block-----//
    //s = 8; r = 0; a = 9;
    hls_coding_unit_hls_dup3_xm_log2_cb_size_ap_vld_r <= hls_coding_unit_hls_dup3_xm_log2_cb_size_ap_vld;
    if (hls_coding_unit_hls_dup3_xm_log2_cb_size_ap_vld) begin
        hls_coding_unit_hls_dup3_xm_log2_cb_size_r <= hls_coding_unit_hls_dup3_xm_log2_cb_size;
    end
    //------READ (scalar, global adr = 1268) always block-----//
    //s = 29; r = 0; a = 22;
    if (scalar_rdat_vld[29][0][22]) begin
        hls_coding_unit_hls_dup3_rv_set_deblocking_bypass <= scalar_rdat  [29][0][22];
    end
    //------READ (scalar, global adr = 1264) always block-----//
    //s = 28; r = 0; a = 14;
    if (scalar_rdat_vld[28][0][14]) begin
        hls_coding_unit_hls_dup3_rv_ff_hevc_deblocking_boundary_strengths <= scalar_rdat  [28][0][14];
    end
    //------READ (scalar, global adr = 1272) always block-----//
    //s = 30; r = 0; a = 11;
    if (scalar_rdat_vld[30][0][11]) begin
        hls_coding_unit_hls_dup3_rv_hls_pcm_sample <= scalar_rdat  [30][0][11];
    end
    //------READ (scalar, global adr = 1276) always block-----//
    //s = 31; r = 1; a = 20;
    if (scalar_rdat_vld[31][1][20]) begin
        hls_coding_unit_hls_dup3_rv_hls_prediction_unit <= scalar_rdat  [31][1][20];
    end
    //------READ (scalar, global adr = 1280) always block-----//
    //s = 0; r = 0; a = 19;
    if (scalar_rdat_vld[0][0][19]) begin
        hls_coding_unit_hls_dup3_rv_hls_intra_prediction_unit <= scalar_rdat  [0][0][19];
    end
    //------READ (scalar, global adr = 1284) always block-----//
    //s = 1; r = 1; a = 15;
    if (scalar_rdat_vld[1][1][15]) begin
        hls_coding_unit_hls_dup3_rv_hls_transform_tree <= scalar_rdat  [1][1][15];
    end
    //------READ (scalar, global adr = 1240) always block-----//
    //s = 22; r = 1; a = 16;
    if (scalar_rdat_vld[22][1][16]) begin
        hls_coding_unit_hls_dup3_rv_callback_flag <= scalar_rdat  [22][1][16];
    end
    //------WRITE (scalar, global adr = 36) always block-----//
    //s = 9; r = 0; a = 9;
    hls_coding_unit_hls_dup3_length_r_ap_vld_r <= hls_coding_unit_hls_dup3_length_r_ap_vld;
    if (hls_coding_unit_hls_dup3_length_r_ap_vld) begin
        hls_coding_unit_hls_dup3_length_r_r <= hls_coding_unit_hls_dup3_length_r;
    end
    //------WRITE (scalar, global adr = 544) always block-----//
    //s = 8; r = 1; a = 9;
    hls_coding_unit_hls_dup3_xm_x_ap_vld_r <= hls_coding_unit_hls_dup3_xm_x_ap_vld;
    if (hls_coding_unit_hls_dup3_xm_x_ap_vld) begin
        hls_coding_unit_hls_dup3_xm_x_r <= hls_coding_unit_hls_dup3_xm_x;
    end
    //------WRITE (scalar, global adr = 548) always block-----//
    //s = 9; r = 1; a = 9;
    hls_coding_unit_hls_dup3_xm_y_ap_vld_r <= hls_coding_unit_hls_dup3_xm_y_ap_vld;
    if (hls_coding_unit_hls_dup3_xm_y_ap_vld) begin
        hls_coding_unit_hls_dup3_xm_y_r <= hls_coding_unit_hls_dup3_xm_y;
    end
    //------WRITE (scalar, complete partition, global adr = 512) always block -----//
    //s = 0; r = 0; a = 8;
    hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_ap_vld_r <= hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_ap_vld;
    if (hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_ap_vld) begin
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_r <= hls_coding_unit_hls_dup3_pu_intra_pred_mode_0;
    end
    //------WRITE (scalar, complete partition, global adr = 513) always block -----//
    //s = 0; r = 1; a = 8;
    hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_ap_vld_r <= hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_ap_vld;
    if (hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_ap_vld) begin
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_r <= hls_coding_unit_hls_dup3_pu_intra_pred_mode_1;
    end
    //------WRITE (scalar, complete partition, global adr = 514) always block -----//
    //s = 0; r = 0; a = 9;
    hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_ap_vld_r <= hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_ap_vld;
    if (hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_ap_vld) begin
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_r <= hls_coding_unit_hls_dup3_pu_intra_pred_mode_2;
    end
    //------WRITE (scalar, complete partition, global adr = 515) always block -----//
    //s = 0; r = 1; a = 9;
    hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_ap_vld_r <= hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_ap_vld;
    if (hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_ap_vld) begin
        hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_r <= hls_coding_unit_hls_dup3_pu_intra_pred_mode_3;
    end
    //------WRITE (scalar, global adr = 540) always block-----//
    //s = 7; r = 1; a = 9;
    hls_coding_unit_hls_dup3_qPy_pred_ap_vld_r <= hls_coding_unit_hls_dup3_qPy_pred_ap_vld;
    if (hls_coding_unit_hls_dup3_qPy_pred_ap_vld) begin
        hls_coding_unit_hls_dup3_qPy_pred_r <= hls_coding_unit_hls_dup3_qPy_pred;
    end
    //------WRITE (scalar, global adr = 24) always block-----//
    //s = 6; r = 1; a = 7;
    hls_coding_unit_hls_dup3_skip_flag_start_ap_vld_r <= hls_coding_unit_hls_dup3_skip_flag_start_ap_vld;
    if (hls_coding_unit_hls_dup3_skip_flag_start_ap_vld) begin
        hls_coding_unit_hls_dup3_skip_flag_start_r <= hls_coding_unit_hls_dup3_skip_flag_start;
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 1; a = 14;
    if (scalar_rdat_vld[28][1][14]) begin
        hls_coding_unit_hls_dup3_log2_min_cb_size <= scalar_rdat  [28][1][14];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 15;
    if (scalar_rdat_vld[26][1][15]) begin
        hls_coding_unit_hls_dup3_log2_ctb_size <= scalar_rdat  [26][1][15];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 0; a = 21;
    if (scalar_rdat_vld[13][0][21]) begin
        hls_coding_unit_hls_dup3_diff_cu_qp_delta_depth <= scalar_rdat  [13][0][21];
    end
    //------READ (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 24;
    if (scalar_rdat_vld[6][1][24]) begin
        hls_coding_unit_hls_dup3_qp_y <= scalar_rdat  [6][1][24];
    end
    //------READ (scalar, global adr = 440) always block-----//
    //s = 14; r = 0; a = 20;
    if (scalar_rdat_vld[14][0][20]) begin
        hls_coding_unit_hls_dup3_transquant_bypass_enable_flag <= scalar_rdat  [14][0][20];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 1; a = 13;
    if (scalar_rdat_vld[2][1][13]) begin
        hls_coding_unit_hls_dup3_min_cb_width <= scalar_rdat  [2][1][13];
    end
    //------WRITE (scalar, global adr = 568) always block-----//
    //s = 14; r = 0; a = 7;
    hls_coding_unit_hls_dup3_intra_split_flag_ap_vld_r <= hls_coding_unit_hls_dup3_intra_split_flag_ap_vld;
    if (hls_coding_unit_hls_dup3_intra_split_flag_ap_vld) begin
        hls_coding_unit_hls_dup3_intra_split_flag_r <= hls_coding_unit_hls_dup3_intra_split_flag;
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 0; a = 14;
    if (scalar_rdat_vld[17][0][14]) begin
        hls_coding_unit_hls_dup3_slice_type <= scalar_rdat  [17][0][14];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 12;
    if (scalar_rdat_vld[24][1][12]) begin
        hls_coding_unit_hls_dup3_ctb_left_flag <= scalar_rdat  [24][1][12];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 16;
    if (scalar_rdat_vld[23][1][16]) begin
        hls_coding_unit_hls_dup3_ctb_up_flag <= scalar_rdat  [23][1][16];
    end
    //------READ (scalar, global adr = 320) always block-----//
    //s = 16; r = 1; a = 12;
    if (scalar_rdat_vld[16][1][12]) begin
        hls_coding_unit_hls_dup3_amp_enabled_flag <= scalar_rdat  [16][1][12];
    end
    //------READ (scalar, global adr = 400) always block-----//
    //s = 4; r = 1; a = 13;
    if (scalar_rdat_vld[4][1][13]) begin
        hls_coding_unit_hls_dup3_pcm_enabled_flag <= scalar_rdat  [4][1][13];
    end
    //------READ (scalar, global adr = 412) always block-----//
    //s = 7; r = 1; a = 18;
    if (scalar_rdat_vld[7][1][18]) begin
        hls_coding_unit_hls_dup3_log2_min_pcm_cb_size <= scalar_rdat  [7][1][18];
    end
    //------READ (scalar, global adr = 416) always block-----//
    //s = 8; r = 0; a = 24;
    if (scalar_rdat_vld[8][0][24]) begin
        hls_coding_unit_hls_dup3_log2_max_pcm_cb_size <= scalar_rdat  [8][0][24];
    end
    //------READ (scalar, global adr = 464) always block-----//
    //s = 20; r = 0; a = 14;
    if (scalar_rdat_vld[20][0][14]) begin
        hls_coding_unit_hls_dup3_depth <= scalar_rdat  [20][0][14];
    end
`endif
    //============================================================
    //copy_top_left_pixel_hls       (f = 22)
    //============================================================
`ifdef enable_connect_copy_top_left_pixel_hls
    //------READ (scalar, global adr = 168) always block-----//
    //s = 10; r = 0; a = 14;
    if (scalar_rdat_vld[10][0][14]) begin
        copy_top_left_pixel_hls_log2_trafo_size <= scalar_rdat  [10][0][14];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 7;
    if (scalar_rdat_vld[26][0][7]) begin
        copy_top_left_pixel_hls_log2_ctb_size <= scalar_rdat  [26][0][7];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 1; a = 5;
    if (scalar_rdat_vld[30][1][5]) begin
        copy_top_left_pixel_hls_log2_min_tb_size <= scalar_rdat  [30][1][5];
    end
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 1; a = 13;
    if (scalar_rdat_vld[12][1][13]) begin
        copy_top_left_pixel_hls_pred_mode <= scalar_rdat  [12][1][13];
    end
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 1; a = 11;
    if (scalar_rdat_vld[20][1][11]) begin
        copy_top_left_pixel_hls_hshift_0 <= scalar_rdat  [20][1][11];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 1; a = 10;
    if (scalar_rdat_vld[21][1][10]) begin
        copy_top_left_pixel_hls_hshift_1 <= scalar_rdat  [21][1][10];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 1; a = 11;
    if (scalar_rdat_vld[22][1][11]) begin
        copy_top_left_pixel_hls_hshift_2 <= scalar_rdat  [22][1][11];
    end
    //------READ (scalar, complete partition, global adr = 348) always block-----//
    //s = 23; r = 0; a = 10;
    if (scalar_rdat_vld[23][0][10]) begin
        copy_top_left_pixel_hls_vshift_0 <= scalar_rdat  [23][0][10];
    end
    //------READ (scalar, complete partition, global adr = 352) always block-----//
    //s = 24; r = 0; a = 8;
    if (scalar_rdat_vld[24][0][8]) begin
        copy_top_left_pixel_hls_vshift_1 <= scalar_rdat  [24][0][8];
    end
    //------READ (scalar, complete partition, global adr = 356) always block-----//
    //s = 25; r = 0; a = 8;
    if (scalar_rdat_vld[25][0][8]) begin
        copy_top_left_pixel_hls_vshift_2 <= scalar_rdat  [25][0][8];
    end
    //------READ (scalar, complete partition, global adr = 1244) always block-----//
    //s = 23; r = 1; a = 9;
    if (scalar_rdat_vld[23][1][9]) begin
        copy_top_left_pixel_hls_buf_data_0 <= scalar_rdat  [23][1][9];
    end
    //------READ (scalar, complete partition, global adr = 1248) always block-----//
    //s = 24; r = 1; a = 7;
    if (scalar_rdat_vld[24][1][7]) begin
        copy_top_left_pixel_hls_buf_data_1 <= scalar_rdat  [24][1][7];
    end
    //------READ (scalar, complete partition, global adr = 1252) always block-----//
    //s = 25; r = 1; a = 7;
    if (scalar_rdat_vld[25][1][7]) begin
        copy_top_left_pixel_hls_buf_data_2 <= scalar_rdat  [25][1][7];
    end
    //------READ (scalar, complete partition, global adr = 1148) always block-----//
    //s = 31; r = 1; a = 16;
    if (scalar_rdat_vld[31][1][16]) begin
        copy_top_left_pixel_hls_xm_linesize_0 <= scalar_rdat  [31][1][16];
    end
    //------READ (scalar, complete partition, global adr = 1152) always block-----//
    //s = 0; r = 1; a = 16;
    if (scalar_rdat_vld[0][1][16]) begin
        copy_top_left_pixel_hls_xm_linesize_1 <= scalar_rdat  [0][1][16];
    end
    //------READ (scalar, complete partition, global adr = 1156) always block-----//
    //s = 1; r = 0; a = 10;
    if (scalar_rdat_vld[1][0][10]) begin
        copy_top_left_pixel_hls_xm_linesize_2 <= scalar_rdat  [1][0][10];
    end
    //------READ (scalar, global adr = 1140) always block-----//
    //s = 29; r = 0; a = 18;
    if (scalar_rdat_vld[29][0][18]) begin
        copy_top_left_pixel_hls_cmdr_run_o_r <= scalar_rdat  [29][0][18];    //bidir
    end
    //------WRITE (scalar, global adr = 1140) always block-----//
    //s = 29; r = 0; a = 4;
    copy_top_left_pixel_hls_cmdr_run_o_ap_vld_r <= copy_top_left_pixel_hls_cmdr_run_o_ap_vld;
    if (copy_top_left_pixel_hls_cmdr_run_o_ap_vld) begin
        copy_top_left_pixel_hls_cmdr_run_o_r <= copy_top_left_pixel_hls_cmdr_run_o;
    end
`endif
    //============================================================
    //genPredCol_hls       (f = 23)
    //============================================================
`ifdef enable_connect_genPredCol_hls
    //------WRITE (scalar, complete partition, global adr = 180) always block -----//
    //s = 13; r = 1; a = 1;
    genPredCol_hls_predColBuf_0_ap_vld_r <= genPredCol_hls_predColBuf_0_ap_vld;
    if (genPredCol_hls_predColBuf_0_ap_vld) begin
        genPredCol_hls_predColBuf_0_r <= genPredCol_hls_predColBuf_0;
    end
    //------WRITE (scalar, complete partition, global adr = 184) always block -----//
    //s = 14; r = 0; a = 3;
    genPredCol_hls_predColBuf_1_ap_vld_r <= genPredCol_hls_predColBuf_1_ap_vld;
    if (genPredCol_hls_predColBuf_1_ap_vld) begin
        genPredCol_hls_predColBuf_1_r <= genPredCol_hls_predColBuf_1;
    end
    //------WRITE (scalar, complete partition, global adr = 188) always block -----//
    //s = 15; r = 0; a = 3;
    genPredCol_hls_predColBuf_2_ap_vld_r <= genPredCol_hls_predColBuf_2_ap_vld;
    if (genPredCol_hls_predColBuf_2_ap_vld) begin
        genPredCol_hls_predColBuf_2_r <= genPredCol_hls_predColBuf_2;
    end
    //------WRITE (scalar, complete partition, global adr = 192) always block -----//
    //s = 16; r = 1; a = 1;
    genPredCol_hls_predColBuf_3_ap_vld_r <= genPredCol_hls_predColBuf_3_ap_vld;
    if (genPredCol_hls_predColBuf_3_ap_vld) begin
        genPredCol_hls_predColBuf_3_r <= genPredCol_hls_predColBuf_3;
    end
    //------WRITE (scalar, complete partition, global adr = 196) always block -----//
    //s = 17; r = 0; a = 2;
    genPredCol_hls_predColBuf_4_ap_vld_r <= genPredCol_hls_predColBuf_4_ap_vld;
    if (genPredCol_hls_predColBuf_4_ap_vld) begin
        genPredCol_hls_predColBuf_4_r <= genPredCol_hls_predColBuf_4;
    end
    //------WRITE (scalar, complete partition, global adr = 200) always block -----//
    //s = 18; r = 0; a = 2;
    genPredCol_hls_predColBuf_5_ap_vld_r <= genPredCol_hls_predColBuf_5_ap_vld;
    if (genPredCol_hls_predColBuf_5_ap_vld) begin
        genPredCol_hls_predColBuf_5_r <= genPredCol_hls_predColBuf_5;
    end
    //------WRITE (scalar, complete partition, global adr = 204) always block -----//
    //s = 19; r = 0; a = 3;
    genPredCol_hls_predColBuf_6_ap_vld_r <= genPredCol_hls_predColBuf_6_ap_vld;
    if (genPredCol_hls_predColBuf_6_ap_vld) begin
        genPredCol_hls_predColBuf_6_r <= genPredCol_hls_predColBuf_6;
    end
    //------WRITE (scalar, complete partition, global adr = 208) always block -----//
    //s = 20; r = 0; a = 3;
    genPredCol_hls_predColBuf_7_ap_vld_r <= genPredCol_hls_predColBuf_7_ap_vld;
    if (genPredCol_hls_predColBuf_7_ap_vld) begin
        genPredCol_hls_predColBuf_7_r <= genPredCol_hls_predColBuf_7;
    end
    //------WRITE (scalar, complete partition, global adr = 212) always block -----//
    //s = 21; r = 0; a = 2;
    genPredCol_hls_predColBuf_8_ap_vld_r <= genPredCol_hls_predColBuf_8_ap_vld;
    if (genPredCol_hls_predColBuf_8_ap_vld) begin
        genPredCol_hls_predColBuf_8_r <= genPredCol_hls_predColBuf_8;
    end
    //------WRITE (scalar, complete partition, global adr = 216) always block -----//
    //s = 22; r = 0; a = 2;
    genPredCol_hls_predColBuf_9_ap_vld_r <= genPredCol_hls_predColBuf_9_ap_vld;
    if (genPredCol_hls_predColBuf_9_ap_vld) begin
        genPredCol_hls_predColBuf_9_r <= genPredCol_hls_predColBuf_9;
    end
    //------WRITE (scalar, complete partition, global adr = 220) always block -----//
    //s = 23; r = 1; a = 1;
    genPredCol_hls_predColBuf_10_ap_vld_r <= genPredCol_hls_predColBuf_10_ap_vld;
    if (genPredCol_hls_predColBuf_10_ap_vld) begin
        genPredCol_hls_predColBuf_10_r <= genPredCol_hls_predColBuf_10;
    end
    //------WRITE (scalar, complete partition, global adr = 224) always block -----//
    //s = 24; r = 1; a = 1;
    genPredCol_hls_predColBuf_11_ap_vld_r <= genPredCol_hls_predColBuf_11_ap_vld;
    if (genPredCol_hls_predColBuf_11_ap_vld) begin
        genPredCol_hls_predColBuf_11_r <= genPredCol_hls_predColBuf_11;
    end
    //------WRITE (scalar, complete partition, global adr = 228) always block -----//
    //s = 25; r = 1; a = 1;
    genPredCol_hls_predColBuf_12_ap_vld_r <= genPredCol_hls_predColBuf_12_ap_vld;
    if (genPredCol_hls_predColBuf_12_ap_vld) begin
        genPredCol_hls_predColBuf_12_r <= genPredCol_hls_predColBuf_12;
    end
    //------WRITE (scalar, complete partition, global adr = 232) always block -----//
    //s = 26; r = 1; a = 1;
    genPredCol_hls_predColBuf_13_ap_vld_r <= genPredCol_hls_predColBuf_13_ap_vld;
    if (genPredCol_hls_predColBuf_13_ap_vld) begin
        genPredCol_hls_predColBuf_13_r <= genPredCol_hls_predColBuf_13;
    end
    //------WRITE (scalar, complete partition, global adr = 236) always block -----//
    //s = 27; r = 0; a = 6;
    genPredCol_hls_predColBuf_14_ap_vld_r <= genPredCol_hls_predColBuf_14_ap_vld;
    if (genPredCol_hls_predColBuf_14_ap_vld) begin
        genPredCol_hls_predColBuf_14_r <= genPredCol_hls_predColBuf_14;
    end
    //------WRITE (scalar, complete partition, global adr = 240) always block -----//
    //s = 28; r = 0; a = 2;
    genPredCol_hls_predColBuf_15_ap_vld_r <= genPredCol_hls_predColBuf_15_ap_vld;
    if (genPredCol_hls_predColBuf_15_ap_vld) begin
        genPredCol_hls_predColBuf_15_r <= genPredCol_hls_predColBuf_15;
    end
    //------READ (scalar, complete partition, global adr = 244) always block-----//
    //s = 29; r = 0; a = 20;
    if (scalar_rdat_vld[29][0][20]) begin
        genPredCol_hls_predColBuf_16_o_r <= scalar_rdat  [29][0][20];
    end
    //------WRITE (scalar, complete partition, global adr = 244) always block -----//
    //s = 29; r = 1; a = 6;
    genPredCol_hls_predColBuf_16_o_ap_vld_r <= genPredCol_hls_predColBuf_16_o_ap_vld;
    if (genPredCol_hls_predColBuf_16_o_ap_vld) begin
        genPredCol_hls_predColBuf_16_o_r <= genPredCol_hls_predColBuf_16_o;
    end
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 1; a = 17;
    if (scalar_rdat_vld[11][1][17]) begin
        genPredCol_hls_log2_width <= scalar_rdat  [11][1][17];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 0; a = 7;
    if (scalar_rdat_vld[30][0][7]) begin
        genPredCol_hls_log2_min_tb_size <= scalar_rdat  [30][0][7];
    end
    //------READ (scalar, global adr = 388) always block-----//
    //s = 1; r = 0; a = 13;
    if (scalar_rdat_vld[1][0][13]) begin
        genPredCol_hls_min_tb_width <= scalar_rdat  [1][0][13];
    end
`endif
    //============================================================
    //ff_hevc_get_sub_cu_zscan_id_hls       (f = 24)
    //============================================================
`ifdef enable_connect_ff_hevc_get_sub_cu_zscan_id_hls
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 7;
    if (scalar_rdat_vld[26][1][7]) begin
        ff_hevc_get_sub_cu_zscan_id_hls_log2_ctb_size <= scalar_rdat  [26][1][7];
    end
    //------WRITE (scalar, global adr = 248) always block-----//
    //s = 30; r = 1; a = 1;
    ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_ap_vld_r <= ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_ap_vld;
    if (ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_ap_vld) begin
        ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_r <= ff_hevc_get_sub_cu_zscan_id_hls_zscan_id;
    end
`endif
    //============================================================
    //ff_hevc_skip_flag_decode_hls       (f = 25)
    //============================================================
`ifdef enable_connect_ff_hevc_skip_flag_decode_hls
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 9;
    if (scalar_rdat_vld[26][1][9]) begin
        ff_hevc_skip_flag_decode_hls_log2_ctb_size <= scalar_rdat  [26][1][9];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 8;
    if (scalar_rdat_vld[24][1][8]) begin
        ff_hevc_skip_flag_decode_hls_ctb_left_flag <= scalar_rdat  [24][1][8];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 10;
    if (scalar_rdat_vld[23][1][10]) begin
        ff_hevc_skip_flag_decode_hls_ctb_up_flag <= scalar_rdat  [23][1][10];
    end
`endif
    //============================================================
    //ff_hevc_set_qPy_hls       (f = 26)
    //============================================================
`ifdef enable_connect_ff_hevc_set_qPy_hls
    //------WRITE (scalar, global adr = 536) always block-----//
    //s = 6; r = 1; a = 3;
    ff_hevc_set_qPy_hls_qp_y_ap_vld_r <= ff_hevc_set_qPy_hls_qp_y_ap_vld;
    if (ff_hevc_set_qPy_hls_qp_y_ap_vld) begin
        ff_hevc_set_qPy_hls_qp_y_r <= ff_hevc_set_qPy_hls_qp_y;
    end
    //------READ (scalar, global adr = 532) always block-----//
    //s = 5; r = 0; a = 19;
    if (scalar_rdat_vld[5][0][19]) begin
        ff_hevc_set_qPy_hls_first_qp_group_o_r <= scalar_rdat  [5][0][19];    //bidir
    end
    //------WRITE (scalar, global adr = 532) always block-----//
    //s = 5; r = 1; a = 3;
    ff_hevc_set_qPy_hls_first_qp_group_o_ap_vld_r <= ff_hevc_set_qPy_hls_first_qp_group_o_ap_vld;
    if (ff_hevc_set_qPy_hls_first_qp_group_o_ap_vld) begin
        ff_hevc_set_qPy_hls_first_qp_group_o_r <= ff_hevc_set_qPy_hls_first_qp_group_o;
    end
    //------READ (scalar, global adr = 540) always block-----//
    //s = 7; r = 0; a = 15;
    if (scalar_rdat_vld[7][0][15]) begin
        ff_hevc_set_qPy_hls_qPy_pred <= scalar_rdat  [7][0][15];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 10;
    if (scalar_rdat_vld[26][0][10]) begin
        ff_hevc_set_qPy_hls_log2_ctb_size <= scalar_rdat  [26][0][10];
    end
    //------READ (scalar, global adr = 436) always block-----//
    //s = 13; r = 1; a = 12;
    if (scalar_rdat_vld[13][1][12]) begin
        ff_hevc_set_qPy_hls_diff_cu_qp_delta_depth <= scalar_rdat  [13][1][12];
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 0; a = 8;
    if (scalar_rdat_vld[28][0][8]) begin
        ff_hevc_set_qPy_hls_log2_min_cb_size <= scalar_rdat  [28][0][8];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 1; a = 8;
    if (scalar_rdat_vld[2][1][8]) begin
        ff_hevc_set_qPy_hls_min_cb_width <= scalar_rdat  [2][1][8];
    end
    //------READ (scalar, global adr = 460) always block-----//
    //s = 19; r = 0; a = 11;
    if (scalar_rdat_vld[19][0][11]) begin
        ff_hevc_set_qPy_hls_slice_qp <= scalar_rdat  [19][0][11];
    end
    //------READ (scalar, global adr = 468) always block-----//
    //s = 21; r = 1; a = 12;
    if (scalar_rdat_vld[21][1][12]) begin
        ff_hevc_set_qPy_hls_tu_cu_qp_delta <= scalar_rdat  [21][1][12];
    end
    //------READ (scalar, global adr = 1136) always block-----//
    //s = 28; r = 1; a = 8;
    if (scalar_rdat_vld[28][1][8]) begin
        ff_hevc_set_qPy_hls_qp_bd_offset <= scalar_rdat  [28][1][8];
    end
`endif
    //============================================================
    //ff_hevc_deblocking_boundary_strengths_hls       (f = 27)
    //============================================================
`ifdef enable_connect_ff_hevc_deblocking_boundary_strengths_hls
    //------READ (scalar, global adr = 168) always block-----//
    //s = 10; r = 1; a = 14;
    if (scalar_rdat_vld[10][1][14]) begin
        ff_hevc_deblocking_boundary_strengths_hls_log2_trafo_size <= scalar_rdat  [10][1][14];
    end
    //------READ (scalar, global adr = 1512) always block-----//
    //s = 26; r = 1; a = 6;
    if (scalar_rdat_vld[26][1][6]) begin
        ff_hevc_deblocking_boundary_strengths_hls_bs_width <= scalar_rdat  [26][1][6];
    end
    //------READ (scalar, global adr = 1508) always block-----//
    //s = 25; r = 0; a = 9;
    if (scalar_rdat_vld[25][0][9]) begin
        ff_hevc_deblocking_boundary_strengths_hls_slice_loop_filter_across_slices_enabled_flag <= scalar_rdat  [25][0][9];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 1; a = 18;
    if (scalar_rdat_vld[29][1][18]) begin
        ff_hevc_deblocking_boundary_strengths_hls_log2_min_pu_size <= scalar_rdat  [29][1][18];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 0; a = 6;
    if (scalar_rdat_vld[30][0][6]) begin
        ff_hevc_deblocking_boundary_strengths_hls_log2_min_tb_size <= scalar_rdat  [30][0][6];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 8;
    if (scalar_rdat_vld[26][0][8]) begin
        ff_hevc_deblocking_boundary_strengths_hls_log2_ctb_size <= scalar_rdat  [26][0][8];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 1; a = 6;
    if (scalar_rdat_vld[3][1][6]) begin
        ff_hevc_deblocking_boundary_strengths_hls_min_pu_width <= scalar_rdat  [3][1][6];
    end
    //------READ (scalar, global adr = 388) always block-----//
    //s = 1; r = 1; a = 10;
    if (scalar_rdat_vld[1][1][10]) begin
        ff_hevc_deblocking_boundary_strengths_hls_min_tb_width <= scalar_rdat  [1][1][10];
    end
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 0; a = 13;
    if (scalar_rdat_vld[11][0][13]) begin
        ff_hevc_deblocking_boundary_strengths_hls_log2_width <= scalar_rdat  [11][0][13];
    end
    //------READ (scalar, global adr = 264) always block-----//
    //s = 2; r = 0; a = 8;
    if (scalar_rdat_vld[2][0][8]) begin
        ff_hevc_deblocking_boundary_strengths_hls_slice_or_tiles_up_boundary <= scalar_rdat  [2][0][8];
    end
    //------READ (scalar, global adr = 260) always block-----//
    //s = 1; r = 0; a = 11;
    if (scalar_rdat_vld[1][0][11]) begin
        ff_hevc_deblocking_boundary_strengths_hls_slice_or_tiles_left_boundary <= scalar_rdat  [1][0][11];
    end
    //------READ (scalar, global adr = 268) always block-----//
    //s = 3; r = 0; a = 8;
    if (scalar_rdat_vld[3][0][8]) begin
        ff_hevc_deblocking_boundary_strengths_hls_loop_filter_across_tiles_enabled_flag <= scalar_rdat  [3][0][8];
    end
`endif
    //============================================================
    //hls_decode_neighbour_hls       (f = 28)
    //============================================================
`ifdef enable_connect_hls_decode_neighbour_hls
    //------WRITE (scalar, global adr = 532) always block-----//
    //s = 5; r = 0; a = 6;
    hls_decode_neighbour_hls_first_qp_group_ap_vld_r <= hls_decode_neighbour_hls_first_qp_group_ap_vld;
    if (hls_decode_neighbour_hls_first_qp_group_ap_vld) begin
        hls_decode_neighbour_hls_first_qp_group_r <= hls_decode_neighbour_hls_first_qp_group;
    end
    //------WRITE (scalar, global adr = 620) always block-----//
    //s = 27; r = 1; a = 6;
    hls_decode_neighbour_hls_end_of_tiles_x_ap_vld_r <= hls_decode_neighbour_hls_end_of_tiles_x_ap_vld;
    if (hls_decode_neighbour_hls_end_of_tiles_x_ap_vld) begin
        hls_decode_neighbour_hls_end_of_tiles_x_r <= hls_decode_neighbour_hls_end_of_tiles_x;
    end
    //------WRITE (scalar, global adr = 624) always block-----//
    //s = 28; r = 1; a = 2;
    hls_decode_neighbour_hls_end_of_tiles_y_ap_vld_r <= hls_decode_neighbour_hls_end_of_tiles_y_ap_vld;
    if (hls_decode_neighbour_hls_end_of_tiles_y_ap_vld) begin
        hls_decode_neighbour_hls_end_of_tiles_y_r <= hls_decode_neighbour_hls_end_of_tiles_y;
    end
    //------WRITE (scalar, global adr = 260) always block-----//
    //s = 1; r = 0; a = 2;
    hls_decode_neighbour_hls_slice_or_tiles_left_boundary_ap_vld_r <= hls_decode_neighbour_hls_slice_or_tiles_left_boundary_ap_vld;
    if (hls_decode_neighbour_hls_slice_or_tiles_left_boundary_ap_vld) begin
        hls_decode_neighbour_hls_slice_or_tiles_left_boundary_r <= hls_decode_neighbour_hls_slice_or_tiles_left_boundary;
    end
    //------WRITE (scalar, global adr = 264) always block-----//
    //s = 2; r = 1; a = 0;
    hls_decode_neighbour_hls_slice_or_tiles_up_boundary_ap_vld_r <= hls_decode_neighbour_hls_slice_or_tiles_up_boundary_ap_vld;
    if (hls_decode_neighbour_hls_slice_or_tiles_up_boundary_ap_vld) begin
        hls_decode_neighbour_hls_slice_or_tiles_up_boundary_r <= hls_decode_neighbour_hls_slice_or_tiles_up_boundary;
    end
    //------WRITE (scalar, global adr = 608) always block-----//
    //s = 24; r = 0; a = 2;
    hls_decode_neighbour_hls_ctb_left_flag_ap_vld_r <= hls_decode_neighbour_hls_ctb_left_flag_ap_vld;
    if (hls_decode_neighbour_hls_ctb_left_flag_ap_vld) begin
        hls_decode_neighbour_hls_ctb_left_flag_r <= hls_decode_neighbour_hls_ctb_left_flag;
    end
    //------WRITE (scalar, global adr = 604) always block-----//
    //s = 23; r = 0; a = 4;
    hls_decode_neighbour_hls_ctb_up_flag_ap_vld_r <= hls_decode_neighbour_hls_ctb_up_flag_ap_vld;
    if (hls_decode_neighbour_hls_ctb_up_flag_ap_vld) begin
        hls_decode_neighbour_hls_ctb_up_flag_r <= hls_decode_neighbour_hls_ctb_up_flag;
    end
    //------WRITE (scalar, global adr = 616) always block-----//
    //s = 26; r = 0; a = 2;
    hls_decode_neighbour_hls_ctb_up_right_flag_ap_vld_r <= hls_decode_neighbour_hls_ctb_up_right_flag_ap_vld;
    if (hls_decode_neighbour_hls_ctb_up_right_flag_ap_vld) begin
        hls_decode_neighbour_hls_ctb_up_right_flag_r <= hls_decode_neighbour_hls_ctb_up_right_flag;
    end
    //------WRITE (scalar, global adr = 612) always block-----//
    //s = 25; r = 0; a = 2;
    hls_decode_neighbour_hls_ctb_up_left_flag_ap_vld_r <= hls_decode_neighbour_hls_ctb_up_left_flag_ap_vld;
    if (hls_decode_neighbour_hls_ctb_up_left_flag_ap_vld) begin
        hls_decode_neighbour_hls_ctb_up_left_flag_r <= hls_decode_neighbour_hls_ctb_up_left_flag;
    end
    //------READ (scalar, global adr = 272) always block-----//
    //s = 4; r = 0; a = 14;
    if (scalar_rdat_vld[4][0][14]) begin
        hls_decode_neighbour_hls_x_ctb <= scalar_rdat  [4][0][14];
    end
    //------READ (scalar, global adr = 276) always block-----//
    //s = 5; r = 0; a = 20;
    if (scalar_rdat_vld[5][0][20]) begin
        hls_decode_neighbour_hls_y_ctb <= scalar_rdat  [5][0][20];
    end
    //------READ (scalar, global adr = 280) always block-----//
    //s = 6; r = 0; a = 26;
    if (scalar_rdat_vld[6][0][26]) begin
        hls_decode_neighbour_hls_ctb_addr_ts <= scalar_rdat  [6][0][26];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 17;
    if (scalar_rdat_vld[26][0][17]) begin
        hls_decode_neighbour_hls_log2_ctb_size <= scalar_rdat  [26][0][17];
    end
    //------READ (scalar, global adr = 284) always block-----//
    //s = 7; r = 0; a = 20;
    if (scalar_rdat_vld[7][0][20]) begin
        hls_decode_neighbour_hls_ctb_width <= scalar_rdat  [7][0][20];
    end
    //------READ (scalar, global adr = 288) always block-----//
    //s = 8; r = 1; a = 24;
    if (scalar_rdat_vld[8][1][24]) begin
        hls_decode_neighbour_hls_slice_addr <= scalar_rdat  [8][1][24];
    end
    //------READ (scalar, global adr = 252) always block-----//
    //s = 31; r = 0; a = 22;
    if (scalar_rdat_vld[31][0][22]) begin
        hls_decode_neighbour_hls_entropy_coding_sync_enabled_flag <= scalar_rdat  [31][0][22];
    end
    //------READ (scalar, global adr = 256) always block-----//
    //s = 0; r = 1; a = 19;
    if (scalar_rdat_vld[0][1][19]) begin
        hls_decode_neighbour_hls_tiles_enabled_flag <= scalar_rdat  [0][1][19];
    end
    //------READ (scalar, global adr = 444) always block-----//
    //s = 15; r = 0; a = 19;
    if (scalar_rdat_vld[15][0][19]) begin
        hls_decode_neighbour_hls_num_tile_columns <= scalar_rdat  [15][0][19];
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 1; a = 25;
    if (scalar_rdat_vld[6][1][25]) begin
        hls_decode_neighbour_hls_width <= scalar_rdat  [6][1][25];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 0; a = 14;
    if (scalar_rdat_vld[19][0][14]) begin
        hls_decode_neighbour_hls_height <= scalar_rdat  [19][0][14];
    end
`endif
    //============================================================
    //set_tab_mvf_pred_flag_hls       (f = 29)
    //============================================================
`ifdef enable_connect_set_tab_mvf_pred_flag_hls
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 1; a = 38;
    if (scalar_rdat_vld[29][1][38]) begin
        set_tab_mvf_pred_flag_hls_log2_min_pu_size <= scalar_rdat  [29][1][38];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 0; a = 25;
    if (scalar_rdat_vld[3][0][25]) begin
        set_tab_mvf_pred_flag_hls_min_pu_width <= scalar_rdat  [3][0][25];
    end
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 1; a = 36;
    if (scalar_rdat_vld[11][1][36]) begin
        set_tab_mvf_pred_flag_hls_log2_width <= scalar_rdat  [11][1][36];
    end
    //------READ (scalar, complete partition, global adr = 180) always block-----//
    //s = 13; r = 1; a = 30;
    if (scalar_rdat_vld[13][1][30]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_0_o_r <= scalar_rdat  [13][1][30];
    end
    //------WRITE (scalar, complete partition, global adr = 180) always block -----//
    //s = 13; r = 0; a = 10;
    set_tab_mvf_pred_flag_hls_predColBuf_0_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_0_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_0_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_0_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_0_o;
    end
    //------READ (scalar, complete partition, global adr = 184) always block-----//
    //s = 14; r = 0; a = 32;
    if (scalar_rdat_vld[14][0][32]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_1_o_r <= scalar_rdat  [14][0][32];
    end
    //------WRITE (scalar, complete partition, global adr = 184) always block -----//
    //s = 14; r = 1; a = 12;
    set_tab_mvf_pred_flag_hls_predColBuf_1_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_1_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_1_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_1_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_1_o;
    end
    //------READ (scalar, complete partition, global adr = 188) always block-----//
    //s = 15; r = 1; a = 29;
    if (scalar_rdat_vld[15][1][29]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_2_o_r <= scalar_rdat  [15][1][29];
    end
    //------WRITE (scalar, complete partition, global adr = 188) always block -----//
    //s = 15; r = 1; a = 11;
    set_tab_mvf_pred_flag_hls_predColBuf_2_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_2_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_2_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_2_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_2_o;
    end
    //------READ (scalar, complete partition, global adr = 192) always block-----//
    //s = 16; r = 0; a = 22;
    if (scalar_rdat_vld[16][0][22]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_3_o_r <= scalar_rdat  [16][0][22];
    end
    //------WRITE (scalar, complete partition, global adr = 192) always block -----//
    //s = 16; r = 1; a = 7;
    set_tab_mvf_pred_flag_hls_predColBuf_3_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_3_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_3_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_3_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_3_o;
    end
    //------READ (scalar, complete partition, global adr = 196) always block-----//
    //s = 17; r = 1; a = 23;
    if (scalar_rdat_vld[17][1][23]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_4_o_r <= scalar_rdat  [17][1][23];
    end
    //------WRITE (scalar, complete partition, global adr = 196) always block -----//
    //s = 17; r = 1; a = 6;
    set_tab_mvf_pred_flag_hls_predColBuf_4_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_4_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_4_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_4_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_4_o;
    end
    //------READ (scalar, complete partition, global adr = 200) always block-----//
    //s = 18; r = 0; a = 23;
    if (scalar_rdat_vld[18][0][23]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_5_o_r <= scalar_rdat  [18][0][23];
    end
    //------WRITE (scalar, complete partition, global adr = 200) always block -----//
    //s = 18; r = 0; a = 6;
    set_tab_mvf_pred_flag_hls_predColBuf_5_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_5_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_5_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_5_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_5_o;
    end
    //------READ (scalar, complete partition, global adr = 204) always block-----//
    //s = 19; r = 1; a = 26;
    if (scalar_rdat_vld[19][1][26]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_6_o_r <= scalar_rdat  [19][1][26];
    end
    //------WRITE (scalar, complete partition, global adr = 204) always block -----//
    //s = 19; r = 0; a = 7;
    set_tab_mvf_pred_flag_hls_predColBuf_6_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_6_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_6_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_6_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_6_o;
    end
    //------READ (scalar, complete partition, global adr = 208) always block-----//
    //s = 20; r = 0; a = 26;
    if (scalar_rdat_vld[20][0][26]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_7_o_r <= scalar_rdat  [20][0][26];
    end
    //------WRITE (scalar, complete partition, global adr = 208) always block -----//
    //s = 20; r = 0; a = 9;
    set_tab_mvf_pred_flag_hls_predColBuf_7_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_7_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_7_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_7_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_7_o;
    end
    //------READ (scalar, complete partition, global adr = 212) always block-----//
    //s = 21; r = 1; a = 24;
    if (scalar_rdat_vld[21][1][24]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_8_o_r <= scalar_rdat  [21][1][24];
    end
    //------WRITE (scalar, complete partition, global adr = 212) always block -----//
    //s = 21; r = 1; a = 9;
    set_tab_mvf_pred_flag_hls_predColBuf_8_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_8_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_8_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_8_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_8_o;
    end
    //------READ (scalar, complete partition, global adr = 216) always block-----//
    //s = 22; r = 1; a = 33;
    if (scalar_rdat_vld[22][1][33]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_9_o_r <= scalar_rdat  [22][1][33];
    end
    //------WRITE (scalar, complete partition, global adr = 216) always block -----//
    //s = 22; r = 1; a = 9;
    set_tab_mvf_pred_flag_hls_predColBuf_9_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_9_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_9_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_9_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_9_o;
    end
    //------READ (scalar, complete partition, global adr = 220) always block-----//
    //s = 23; r = 0; a = 34;
    if (scalar_rdat_vld[23][0][34]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_10_o_r <= scalar_rdat  [23][0][34];
    end
    //------WRITE (scalar, complete partition, global adr = 220) always block -----//
    //s = 23; r = 1; a = 7;
    set_tab_mvf_pred_flag_hls_predColBuf_10_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_10_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_10_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_10_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_10_o;
    end
    //------READ (scalar, complete partition, global adr = 224) always block-----//
    //s = 24; r = 0; a = 28;
    if (scalar_rdat_vld[24][0][28]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_11_o_r <= scalar_rdat  [24][0][28];
    end
    //------WRITE (scalar, complete partition, global adr = 224) always block -----//
    //s = 24; r = 1; a = 5;
    set_tab_mvf_pred_flag_hls_predColBuf_11_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_11_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_11_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_11_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_11_o;
    end
    //------READ (scalar, complete partition, global adr = 228) always block-----//
    //s = 25; r = 1; a = 23;
    if (scalar_rdat_vld[25][1][23]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_12_o_r <= scalar_rdat  [25][1][23];
    end
    //------WRITE (scalar, complete partition, global adr = 228) always block -----//
    //s = 25; r = 1; a = 5;
    set_tab_mvf_pred_flag_hls_predColBuf_12_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_12_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_12_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_12_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_12_o;
    end
    //------READ (scalar, complete partition, global adr = 232) always block-----//
    //s = 26; r = 0; a = 32;
    if (scalar_rdat_vld[26][0][32]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_13_o_r <= scalar_rdat  [26][0][32];
    end
    //------WRITE (scalar, complete partition, global adr = 232) always block -----//
    //s = 26; r = 1; a = 5;
    set_tab_mvf_pred_flag_hls_predColBuf_13_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_13_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_13_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_13_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_13_o;
    end
    //------READ (scalar, complete partition, global adr = 236) always block-----//
    //s = 27; r = 0; a = 28;
    if (scalar_rdat_vld[27][0][28]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_14_o_r <= scalar_rdat  [27][0][28];
    end
    //------WRITE (scalar, complete partition, global adr = 236) always block -----//
    //s = 27; r = 0; a = 11;
    set_tab_mvf_pred_flag_hls_predColBuf_14_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_14_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_14_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_14_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_14_o;
    end
    //------READ (scalar, complete partition, global adr = 240) always block-----//
    //s = 28; r = 0; a = 27;
    if (scalar_rdat_vld[28][0][27]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_15_o_r <= scalar_rdat  [28][0][27];
    end
    //------WRITE (scalar, complete partition, global adr = 240) always block -----//
    //s = 28; r = 0; a = 6;
    set_tab_mvf_pred_flag_hls_predColBuf_15_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_15_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_15_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_15_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_15_o;
    end
    //------READ (scalar, complete partition, global adr = 244) always block-----//
    //s = 29; r = 0; a = 39;
    if (scalar_rdat_vld[29][0][39]) begin
        set_tab_mvf_pred_flag_hls_predColBuf_16_o_r <= scalar_rdat  [29][0][39];
    end
    //------WRITE (scalar, complete partition, global adr = 244) always block -----//
    //s = 29; r = 1; a = 12;
    set_tab_mvf_pred_flag_hls_predColBuf_16_o_ap_vld_r <= set_tab_mvf_pred_flag_hls_predColBuf_16_o_ap_vld;
    if (set_tab_mvf_pred_flag_hls_predColBuf_16_o_ap_vld) begin
        set_tab_mvf_pred_flag_hls_predColBuf_16_o_r <= set_tab_mvf_pred_flag_hls_predColBuf_16_o;
    end
`endif
    //============================================================
    //init_intra_neighbors_hls       (f = 30)
    //============================================================
`ifdef enable_connect_init_intra_neighbors_hls
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 1; a = 19;
    if (scalar_rdat_vld[20][1][19]) begin
        init_intra_neighbors_hls_hshift_0 <= scalar_rdat  [20][1][19];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 0; a = 18;
    if (scalar_rdat_vld[21][0][18]) begin
        init_intra_neighbors_hls_hshift_1 <= scalar_rdat  [21][0][18];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 0; a = 28;
    if (scalar_rdat_vld[22][0][28]) begin
        init_intra_neighbors_hls_hshift_2 <= scalar_rdat  [22][0][28];
    end
    //------READ (scalar, complete partition, global adr = 348) always block-----//
    //s = 23; r = 0; a = 28;
    if (scalar_rdat_vld[23][0][28]) begin
        init_intra_neighbors_hls_vshift_0 <= scalar_rdat  [23][0][28];
    end
    //------READ (scalar, complete partition, global adr = 352) always block-----//
    //s = 24; r = 0; a = 22;
    if (scalar_rdat_vld[24][0][22]) begin
        init_intra_neighbors_hls_vshift_1 <= scalar_rdat  [24][0][22];
    end
    //------READ (scalar, complete partition, global adr = 356) always block-----//
    //s = 25; r = 1; a = 18;
    if (scalar_rdat_vld[25][1][18]) begin
        init_intra_neighbors_hls_vshift_2 <= scalar_rdat  [25][1][18];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 1; a = 30;
    if (scalar_rdat_vld[29][1][30]) begin
        init_intra_neighbors_hls_log2_min_pu_size <= scalar_rdat  [29][1][30];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 0; a = 16;
    if (scalar_rdat_vld[30][0][16]) begin
        init_intra_neighbors_hls_log2_min_tb_size <= scalar_rdat  [30][0][16];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 27;
    if (scalar_rdat_vld[26][0][27]) begin
        init_intra_neighbors_hls_log2_ctb_size <= scalar_rdat  [26][0][27];
    end
    //------READ (scalar, global adr = 404) always block-----//
    //s = 5; r = 0; a = 28;
    if (scalar_rdat_vld[5][0][28]) begin
        init_intra_neighbors_hls_tb_mask <= scalar_rdat  [5][0][28];
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 1; a = 33;
    if (scalar_rdat_vld[6][1][33]) begin
        init_intra_neighbors_hls_width <= scalar_rdat  [6][1][33];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 0; a = 21;
    if (scalar_rdat_vld[19][0][21]) begin
        init_intra_neighbors_hls_height <= scalar_rdat  [19][0][21];
    end
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 1; a = 30;
    if (scalar_rdat_vld[11][1][30]) begin
        init_intra_neighbors_hls_log2_width <= scalar_rdat  [11][1][30];
    end
    //------READ (scalar, global adr = 176) always block-----//
    //s = 12; r = 0; a = 30;
    if (scalar_rdat_vld[12][0][30]) begin
        init_intra_neighbors_hls_log2_height <= scalar_rdat  [12][0][30];
    end
    //------READ (scalar, global adr = 424) always block-----//
    //s = 10; r = 1; a = 22;
    if (scalar_rdat_vld[10][1][22]) begin
        init_intra_neighbors_hls_constrained_intra_pred_flag <= scalar_rdat  [10][1][22];
    end
    //------READ (scalar, global adr = 600) always block-----//
    //s = 22; r = 1; a = 27;
    if (scalar_rdat_vld[22][1][27]) begin
        init_intra_neighbors_hls_cand_bottom_left <= scalar_rdat  [22][1][27];
    end
    //------READ (scalar, global adr = 584) always block-----//
    //s = 18; r = 0; a = 18;
    if (scalar_rdat_vld[18][0][18]) begin
        init_intra_neighbors_hls_cand_left <= scalar_rdat  [18][0][18];
    end
    //------READ (scalar, global adr = 588) always block-----//
    //s = 19; r = 1; a = 21;
    if (scalar_rdat_vld[19][1][21]) begin
        init_intra_neighbors_hls_cand_up_left <= scalar_rdat  [19][1][21];
    end
    //------READ (scalar, global adr = 580) always block-----//
    //s = 17; r = 0; a = 19;
    if (scalar_rdat_vld[17][0][19]) begin
        init_intra_neighbors_hls_cand_up <= scalar_rdat  [17][0][19];
    end
    //------READ (scalar, global adr = 596) always block-----//
    //s = 21; r = 1; a = 17;
    if (scalar_rdat_vld[21][1][17]) begin
        init_intra_neighbors_hls_cand_up_right <= scalar_rdat  [21][1][17];
    end
    //------WRITE (scalar, global adr = 644) always block-----//
    //s = 1; r = 1; a = 4;
    init_intra_neighbors_hls_numIntraNeighbor_ap_vld_r <= init_intra_neighbors_hls_numIntraNeighbor_ap_vld;
    if (init_intra_neighbors_hls_numIntraNeighbor_ap_vld) begin
        init_intra_neighbors_hls_numIntraNeighbor_r <= init_intra_neighbors_hls_numIntraNeighbor;
    end
    //------WRITE (scalar, global adr = 648) always block-----//
    //s = 2; r = 0; a = 3;
    init_intra_neighbors_hls_totalUnits_ap_vld_r <= init_intra_neighbors_hls_totalUnits_ap_vld;
    if (init_intra_neighbors_hls_totalUnits_ap_vld) begin
        init_intra_neighbors_hls_totalUnits_r <= init_intra_neighbors_hls_totalUnits;
    end
    //------WRITE (scalar, global adr = 652) always block-----//
    //s = 3; r = 0; a = 4;
    init_intra_neighbors_hls_aboveUnits_ap_vld_r <= init_intra_neighbors_hls_aboveUnits_ap_vld;
    if (init_intra_neighbors_hls_aboveUnits_ap_vld) begin
        init_intra_neighbors_hls_aboveUnits_r <= init_intra_neighbors_hls_aboveUnits;
    end
    //------WRITE (scalar, global adr = 656) always block-----//
    //s = 4; r = 0; a = 7;
    init_intra_neighbors_hls_leftUnits_ap_vld_r <= init_intra_neighbors_hls_leftUnits_ap_vld;
    if (init_intra_neighbors_hls_leftUnits_ap_vld) begin
        init_intra_neighbors_hls_leftUnits_r <= init_intra_neighbors_hls_leftUnits;
    end
    //------WRITE (scalar, global adr = 660) always block-----//
    //s = 5; r = 0; a = 13;
    init_intra_neighbors_hls_unitWidth_ap_vld_r <= init_intra_neighbors_hls_unitWidth_ap_vld;
    if (init_intra_neighbors_hls_unitWidth_ap_vld) begin
        init_intra_neighbors_hls_unitWidth_r <= init_intra_neighbors_hls_unitWidth;
    end
    //------WRITE (scalar, global adr = 664) always block-----//
    //s = 6; r = 1; a = 12;
    init_intra_neighbors_hls_unitHeight_ap_vld_r <= init_intra_neighbors_hls_unitHeight_ap_vld;
    if (init_intra_neighbors_hls_unitHeight_ap_vld) begin
        init_intra_neighbors_hls_unitHeight_r <= init_intra_neighbors_hls_unitHeight;
    end
    //------WRITE (scalar, global adr = 668) always block-----//
    //s = 7; r = 0; a = 11;
    init_intra_neighbors_hls_log2TrSize_ap_vld_r <= init_intra_neighbors_hls_log2TrSize_ap_vld;
    if (init_intra_neighbors_hls_log2TrSize_ap_vld) begin
        init_intra_neighbors_hls_log2TrSize_r <= init_intra_neighbors_hls_log2TrSize;
    end
    //------READ (scalar, global adr = 672) always block-----//
    //s = 8; r = 1; a = 27;
    if (scalar_rdat_vld[8][1][27]) begin
        init_intra_neighbors_hls_bNeighborFlags_0_o_r <= scalar_rdat  [8][1][27];    //bidir
    end
    //------READ (scalar, global adr = 672) always block-----//
    //s = 9; r = 0; a = 27;
    if (scalar_rdat_vld[9][0][27]) begin
        init_intra_neighbors_hls_bNeighborFlags_1_o_r <= scalar_rdat  [9][0][27];    //bidir
    end
    //------READ (scalar, global adr = 672) always block-----//
    //s = 10; r = 0; a = 23;
    if (scalar_rdat_vld[10][0][23]) begin
        init_intra_neighbors_hls_bNeighborFlags_2_o_r <= scalar_rdat  [10][0][23];    //bidir
    end
    //------WRITE (scalar, global adr = 672) always block-----//
    //s = 8; r = 0; a = 13;
    init_intra_neighbors_hls_bNeighborFlags_0_o_ap_vld_r <= init_intra_neighbors_hls_bNeighborFlags_0_o_ap_vld;
    if (init_intra_neighbors_hls_bNeighborFlags_0_o_ap_vld) begin
        init_intra_neighbors_hls_bNeighborFlags_0_o_r <= init_intra_neighbors_hls_bNeighborFlags_0_o;
    end
    //------WRITE (scalar, global adr = 672) always block-----//
    //s = 9; r = 0; a = 13;
    init_intra_neighbors_hls_bNeighborFlags_1_o_ap_vld_r <= init_intra_neighbors_hls_bNeighborFlags_1_o_ap_vld;
    if (init_intra_neighbors_hls_bNeighborFlags_1_o_ap_vld) begin
        init_intra_neighbors_hls_bNeighborFlags_1_o_r <= init_intra_neighbors_hls_bNeighborFlags_1_o;
    end
    //------WRITE (scalar, global adr = 672) always block-----//
    //s = 10; r = 1; a = 10;
    init_intra_neighbors_hls_bNeighborFlags_2_o_ap_vld_r <= init_intra_neighbors_hls_bNeighborFlags_2_o_ap_vld;
    if (init_intra_neighbors_hls_bNeighborFlags_2_o_ap_vld) begin
        init_intra_neighbors_hls_bNeighborFlags_2_o_r <= init_intra_neighbors_hls_bNeighborFlags_2_o;
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 1; a = 18;
    if (scalar_rdat_vld[3][1][18]) begin
        init_intra_neighbors_hls_min_pu_width <= scalar_rdat  [3][1][18];
    end
    //------READ (scalar, complete partition, global adr = 180) always block-----//
    //s = 13; r = 0; a = 27;
    if (scalar_rdat_vld[13][0][27]) begin
        init_intra_neighbors_hls_predColBuf_0 <= scalar_rdat  [13][0][27];
    end
    //------READ (scalar, complete partition, global adr = 184) always block-----//
    //s = 14; r = 0; a = 28;
    if (scalar_rdat_vld[14][0][28]) begin
        init_intra_neighbors_hls_predColBuf_1 <= scalar_rdat  [14][0][28];
    end
    //------READ (scalar, complete partition, global adr = 188) always block-----//
    //s = 15; r = 0; a = 25;
    if (scalar_rdat_vld[15][0][25]) begin
        init_intra_neighbors_hls_predColBuf_2 <= scalar_rdat  [15][0][25];
    end
    //------READ (scalar, complete partition, global adr = 192) always block-----//
    //s = 16; r = 1; a = 18;
    if (scalar_rdat_vld[16][1][18]) begin
        init_intra_neighbors_hls_predColBuf_3 <= scalar_rdat  [16][1][18];
    end
    //------READ (scalar, complete partition, global adr = 196) always block-----//
    //s = 17; r = 1; a = 19;
    if (scalar_rdat_vld[17][1][19]) begin
        init_intra_neighbors_hls_predColBuf_4 <= scalar_rdat  [17][1][19];
    end
    //------READ (scalar, complete partition, global adr = 200) always block-----//
    //s = 18; r = 1; a = 17;
    if (scalar_rdat_vld[18][1][17]) begin
        init_intra_neighbors_hls_predColBuf_5 <= scalar_rdat  [18][1][17];
    end
    //------READ (scalar, complete partition, global adr = 204) always block-----//
    //s = 19; r = 0; a = 22;
    if (scalar_rdat_vld[19][0][22]) begin
        init_intra_neighbors_hls_predColBuf_6 <= scalar_rdat  [19][0][22];
    end
    //------READ (scalar, complete partition, global adr = 208) always block-----//
    //s = 20; r = 0; a = 20;
    if (scalar_rdat_vld[20][0][20]) begin
        init_intra_neighbors_hls_predColBuf_7 <= scalar_rdat  [20][0][20];
    end
    //------READ (scalar, complete partition, global adr = 212) always block-----//
    //s = 21; r = 0; a = 19;
    if (scalar_rdat_vld[21][0][19]) begin
        init_intra_neighbors_hls_predColBuf_8 <= scalar_rdat  [21][0][19];
    end
    //------READ (scalar, complete partition, global adr = 216) always block-----//
    //s = 22; r = 0; a = 29;
    if (scalar_rdat_vld[22][0][29]) begin
        init_intra_neighbors_hls_predColBuf_9 <= scalar_rdat  [22][0][29];
    end
    //------READ (scalar, complete partition, global adr = 220) always block-----//
    //s = 23; r = 1; a = 27;
    if (scalar_rdat_vld[23][1][27]) begin
        init_intra_neighbors_hls_predColBuf_10 <= scalar_rdat  [23][1][27];
    end
    //------READ (scalar, complete partition, global adr = 224) always block-----//
    //s = 24; r = 1; a = 21;
    if (scalar_rdat_vld[24][1][21]) begin
        init_intra_neighbors_hls_predColBuf_11 <= scalar_rdat  [24][1][21];
    end
    //------READ (scalar, complete partition, global adr = 228) always block-----//
    //s = 25; r = 0; a = 20;
    if (scalar_rdat_vld[25][0][20]) begin
        init_intra_neighbors_hls_predColBuf_12 <= scalar_rdat  [25][0][20];
    end
    //------READ (scalar, complete partition, global adr = 232) always block-----//
    //s = 26; r = 1; a = 26;
    if (scalar_rdat_vld[26][1][26]) begin
        init_intra_neighbors_hls_predColBuf_13 <= scalar_rdat  [26][1][26];
    end
    //------READ (scalar, complete partition, global adr = 236) always block-----//
    //s = 27; r = 1; a = 22;
    if (scalar_rdat_vld[27][1][22]) begin
        init_intra_neighbors_hls_predColBuf_14 <= scalar_rdat  [27][1][22];
    end
    //------READ (scalar, complete partition, global adr = 240) always block-----//
    //s = 28; r = 1; a = 24;
    if (scalar_rdat_vld[28][1][24]) begin
        init_intra_neighbors_hls_predColBuf_15 <= scalar_rdat  [28][1][24];
    end
    //------READ (scalar, complete partition, global adr = 244) always block-----//
    //s = 29; r = 0; a = 31;
    if (scalar_rdat_vld[29][0][31]) begin
        init_intra_neighbors_hls_predColBuf_16 <= scalar_rdat  [29][0][31];
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 0; a = 20;
    if (scalar_rdat_vld[17][0][20]) begin
        init_intra_neighbors_hls_slice_type <= scalar_rdat  [17][0][20];
    end
`endif
    //============================================================
    //init_intra_neighbors_chroma_hls       (f = 31)
    //============================================================
`ifdef enable_connect_init_intra_neighbors_chroma_hls
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 0; a = 18;
    if (scalar_rdat_vld[20][0][18]) begin
        init_intra_neighbors_chroma_hls_hshift_0 <= scalar_rdat  [20][0][18];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 0; a = 17;
    if (scalar_rdat_vld[21][0][17]) begin
        init_intra_neighbors_chroma_hls_hshift_1 <= scalar_rdat  [21][0][17];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 0; a = 27;
    if (scalar_rdat_vld[22][0][27]) begin
        init_intra_neighbors_chroma_hls_hshift_2 <= scalar_rdat  [22][0][27];
    end
    //------READ (scalar, complete partition, global adr = 348) always block-----//
    //s = 23; r = 0; a = 27;
    if (scalar_rdat_vld[23][0][27]) begin
        init_intra_neighbors_chroma_hls_vshift_0 <= scalar_rdat  [23][0][27];
    end
    //------READ (scalar, complete partition, global adr = 352) always block-----//
    //s = 24; r = 0; a = 21;
    if (scalar_rdat_vld[24][0][21]) begin
        init_intra_neighbors_chroma_hls_vshift_1 <= scalar_rdat  [24][0][21];
    end
    //------READ (scalar, complete partition, global adr = 356) always block-----//
    //s = 25; r = 1; a = 17;
    if (scalar_rdat_vld[25][1][17]) begin
        init_intra_neighbors_chroma_hls_vshift_2 <= scalar_rdat  [25][1][17];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 1; a = 29;
    if (scalar_rdat_vld[29][1][29]) begin
        init_intra_neighbors_chroma_hls_log2_min_pu_size <= scalar_rdat  [29][1][29];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 1; a = 15;
    if (scalar_rdat_vld[30][1][15]) begin
        init_intra_neighbors_chroma_hls_log2_min_tb_size <= scalar_rdat  [30][1][15];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 26;
    if (scalar_rdat_vld[26][0][26]) begin
        init_intra_neighbors_chroma_hls_log2_ctb_size <= scalar_rdat  [26][0][26];
    end
    //------READ (scalar, global adr = 404) always block-----//
    //s = 5; r = 0; a = 27;
    if (scalar_rdat_vld[5][0][27]) begin
        init_intra_neighbors_chroma_hls_tb_mask <= scalar_rdat  [5][0][27];
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 1; a = 32;
    if (scalar_rdat_vld[6][1][32]) begin
        init_intra_neighbors_chroma_hls_width <= scalar_rdat  [6][1][32];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 1; a = 19;
    if (scalar_rdat_vld[19][1][19]) begin
        init_intra_neighbors_chroma_hls_height <= scalar_rdat  [19][1][19];
    end
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 0; a = 30;
    if (scalar_rdat_vld[11][0][30]) begin
        init_intra_neighbors_chroma_hls_log2_width <= scalar_rdat  [11][0][30];
    end
    //------READ (scalar, global adr = 176) always block-----//
    //s = 12; r = 1; a = 28;
    if (scalar_rdat_vld[12][1][28]) begin
        init_intra_neighbors_chroma_hls_log2_height <= scalar_rdat  [12][1][28];
    end
    //------READ (scalar, global adr = 424) always block-----//
    //s = 10; r = 0; a = 22;
    if (scalar_rdat_vld[10][0][22]) begin
        init_intra_neighbors_chroma_hls_constrained_intra_pred_flag <= scalar_rdat  [10][0][22];
    end
    //------READ (scalar, global adr = 1432) always block-----//
    //s = 6; r = 0; a = 34;
    if (scalar_rdat_vld[6][0][34]) begin
        init_intra_neighbors_chroma_hls_cand_bottom_left_c <= scalar_rdat  [6][0][34];
    end
    //------READ (scalar, global adr = 1416) always block-----//
    //s = 2; r = 0; a = 20;
    if (scalar_rdat_vld[2][0][20]) begin
        init_intra_neighbors_chroma_hls_cand_left_c <= scalar_rdat  [2][0][20];
    end
    //------READ (scalar, global adr = 1420) always block-----//
    //s = 3; r = 1; a = 17;
    if (scalar_rdat_vld[3][1][17]) begin
        init_intra_neighbors_chroma_hls_cand_up_left_c <= scalar_rdat  [3][1][17];
    end
    //------READ (scalar, global adr = 1412) always block-----//
    //s = 1; r = 0; a = 28;
    if (scalar_rdat_vld[1][0][28]) begin
        init_intra_neighbors_chroma_hls_cand_up_c <= scalar_rdat  [1][0][28];
    end
    //------READ (scalar, global adr = 1428) always block-----//
    //s = 5; r = 1; a = 26;
    if (scalar_rdat_vld[5][1][26]) begin
        init_intra_neighbors_chroma_hls_cand_up_right_c <= scalar_rdat  [5][1][26];
    end
    //------WRITE (scalar, global adr = 684) always block-----//
    //s = 11; r = 0; a = 8;
    init_intra_neighbors_chroma_hls_numIntraNeighbor_c_ap_vld_r <= init_intra_neighbors_chroma_hls_numIntraNeighbor_c_ap_vld;
    if (init_intra_neighbors_chroma_hls_numIntraNeighbor_c_ap_vld) begin
        init_intra_neighbors_chroma_hls_numIntraNeighbor_c_r <= init_intra_neighbors_chroma_hls_numIntraNeighbor_c;
    end
    //------WRITE (scalar, global adr = 688) always block-----//
    //s = 12; r = 1; a = 9;
    init_intra_neighbors_chroma_hls_totalUnits_c_ap_vld_r <= init_intra_neighbors_chroma_hls_totalUnits_c_ap_vld;
    if (init_intra_neighbors_chroma_hls_totalUnits_c_ap_vld) begin
        init_intra_neighbors_chroma_hls_totalUnits_c_r <= init_intra_neighbors_chroma_hls_totalUnits_c;
    end
    //------WRITE (scalar, global adr = 692) always block-----//
    //s = 13; r = 1; a = 8;
    init_intra_neighbors_chroma_hls_aboveUnits_c_ap_vld_r <= init_intra_neighbors_chroma_hls_aboveUnits_c_ap_vld;
    if (init_intra_neighbors_chroma_hls_aboveUnits_c_ap_vld) begin
        init_intra_neighbors_chroma_hls_aboveUnits_c_r <= init_intra_neighbors_chroma_hls_aboveUnits_c;
    end
    //------WRITE (scalar, global adr = 696) always block-----//
    //s = 14; r = 0; a = 10;
    init_intra_neighbors_chroma_hls_leftUnits_c_ap_vld_r <= init_intra_neighbors_chroma_hls_leftUnits_c_ap_vld;
    if (init_intra_neighbors_chroma_hls_leftUnits_c_ap_vld) begin
        init_intra_neighbors_chroma_hls_leftUnits_c_r <= init_intra_neighbors_chroma_hls_leftUnits_c;
    end
    //------WRITE (scalar, global adr = 700) always block-----//
    //s = 15; r = 0; a = 8;
    init_intra_neighbors_chroma_hls_unitWidth_c_ap_vld_r <= init_intra_neighbors_chroma_hls_unitWidth_c_ap_vld;
    if (init_intra_neighbors_chroma_hls_unitWidth_c_ap_vld) begin
        init_intra_neighbors_chroma_hls_unitWidth_c_r <= init_intra_neighbors_chroma_hls_unitWidth_c;
    end
    //------WRITE (scalar, global adr = 704) always block-----//
    //s = 16; r = 1; a = 4;
    init_intra_neighbors_chroma_hls_unitHeight_c_ap_vld_r <= init_intra_neighbors_chroma_hls_unitHeight_c_ap_vld;
    if (init_intra_neighbors_chroma_hls_unitHeight_c_ap_vld) begin
        init_intra_neighbors_chroma_hls_unitHeight_c_r <= init_intra_neighbors_chroma_hls_unitHeight_c;
    end
    //------WRITE (scalar, global adr = 708) always block-----//
    //s = 17; r = 0; a = 5;
    init_intra_neighbors_chroma_hls_log2TrSize_c_ap_vld_r <= init_intra_neighbors_chroma_hls_log2TrSize_c_ap_vld;
    if (init_intra_neighbors_chroma_hls_log2TrSize_c_ap_vld) begin
        init_intra_neighbors_chroma_hls_log2TrSize_c_r <= init_intra_neighbors_chroma_hls_log2TrSize_c;
    end
    //------READ (scalar, global adr = 712) always block-----//
    //s = 18; r = 0; a = 17;
    if (scalar_rdat_vld[18][0][17]) begin
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_r <= scalar_rdat  [18][0][17];    //bidir
    end
    //------READ (scalar, global adr = 712) always block-----//
    //s = 19; r = 0; a = 20;
    if (scalar_rdat_vld[19][0][20]) begin
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_r <= scalar_rdat  [19][0][20];    //bidir
    end
    //------READ (scalar, global adr = 712) always block-----//
    //s = 20; r = 1; a = 18;
    if (scalar_rdat_vld[20][1][18]) begin
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_r <= scalar_rdat  [20][1][18];    //bidir
    end
    //------WRITE (scalar, global adr = 712) always block-----//
    //s = 18; r = 0; a = 5;
    init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_ap_vld_r <= init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_ap_vld;
    if (init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_ap_vld) begin
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_r <= init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o;
    end
    //------WRITE (scalar, global adr = 712) always block-----//
    //s = 19; r = 0; a = 6;
    init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_ap_vld_r <= init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_ap_vld;
    if (init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_ap_vld) begin
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_r <= init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o;
    end
    //------WRITE (scalar, global adr = 712) always block-----//
    //s = 20; r = 0; a = 8;
    init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_ap_vld_r <= init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_ap_vld;
    if (init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_ap_vld) begin
        init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_r <= init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o;
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 0; a = 19;
    if (scalar_rdat_vld[3][0][19]) begin
        init_intra_neighbors_chroma_hls_min_pu_width <= scalar_rdat  [3][0][19];
    end
    //------READ (scalar, complete partition, global adr = 180) always block-----//
    //s = 13; r = 1; a = 26;
    if (scalar_rdat_vld[13][1][26]) begin
        init_intra_neighbors_chroma_hls_predColBuf_0 <= scalar_rdat  [13][1][26];
    end
    //------READ (scalar, complete partition, global adr = 184) always block-----//
    //s = 14; r = 1; a = 27;
    if (scalar_rdat_vld[14][1][27]) begin
        init_intra_neighbors_chroma_hls_predColBuf_1 <= scalar_rdat  [14][1][27];
    end
    //------READ (scalar, complete partition, global adr = 188) always block-----//
    //s = 15; r = 1; a = 24;
    if (scalar_rdat_vld[15][1][24]) begin
        init_intra_neighbors_chroma_hls_predColBuf_2 <= scalar_rdat  [15][1][24];
    end
    //------READ (scalar, complete partition, global adr = 192) always block-----//
    //s = 16; r = 0; a = 19;
    if (scalar_rdat_vld[16][0][19]) begin
        init_intra_neighbors_chroma_hls_predColBuf_3 <= scalar_rdat  [16][0][19];
    end
    //------READ (scalar, complete partition, global adr = 196) always block-----//
    //s = 17; r = 0; a = 18;
    if (scalar_rdat_vld[17][0][18]) begin
        init_intra_neighbors_chroma_hls_predColBuf_4 <= scalar_rdat  [17][0][18];
    end
    //------READ (scalar, complete partition, global adr = 200) always block-----//
    //s = 18; r = 1; a = 16;
    if (scalar_rdat_vld[18][1][16]) begin
        init_intra_neighbors_chroma_hls_predColBuf_5 <= scalar_rdat  [18][1][16];
    end
    //------READ (scalar, complete partition, global adr = 204) always block-----//
    //s = 19; r = 1; a = 20;
    if (scalar_rdat_vld[19][1][20]) begin
        init_intra_neighbors_chroma_hls_predColBuf_6 <= scalar_rdat  [19][1][20];
    end
    //------READ (scalar, complete partition, global adr = 208) always block-----//
    //s = 20; r = 0; a = 19;
    if (scalar_rdat_vld[20][0][19]) begin
        init_intra_neighbors_chroma_hls_predColBuf_7 <= scalar_rdat  [20][0][19];
    end
    //------READ (scalar, complete partition, global adr = 212) always block-----//
    //s = 21; r = 1; a = 16;
    if (scalar_rdat_vld[21][1][16]) begin
        init_intra_neighbors_chroma_hls_predColBuf_8 <= scalar_rdat  [21][1][16];
    end
    //------READ (scalar, complete partition, global adr = 216) always block-----//
    //s = 22; r = 1; a = 26;
    if (scalar_rdat_vld[22][1][26]) begin
        init_intra_neighbors_chroma_hls_predColBuf_9 <= scalar_rdat  [22][1][26];
    end
    //------READ (scalar, complete partition, global adr = 220) always block-----//
    //s = 23; r = 1; a = 26;
    if (scalar_rdat_vld[23][1][26]) begin
        init_intra_neighbors_chroma_hls_predColBuf_10 <= scalar_rdat  [23][1][26];
    end
    //------READ (scalar, complete partition, global adr = 224) always block-----//
    //s = 24; r = 1; a = 20;
    if (scalar_rdat_vld[24][1][20]) begin
        init_intra_neighbors_chroma_hls_predColBuf_11 <= scalar_rdat  [24][1][20];
    end
    //------READ (scalar, complete partition, global adr = 228) always block-----//
    //s = 25; r = 0; a = 19;
    if (scalar_rdat_vld[25][0][19]) begin
        init_intra_neighbors_chroma_hls_predColBuf_12 <= scalar_rdat  [25][0][19];
    end
    //------READ (scalar, complete partition, global adr = 232) always block-----//
    //s = 26; r = 1; a = 25;
    if (scalar_rdat_vld[26][1][25]) begin
        init_intra_neighbors_chroma_hls_predColBuf_13 <= scalar_rdat  [26][1][25];
    end
    //------READ (scalar, complete partition, global adr = 236) always block-----//
    //s = 27; r = 0; a = 23;
    if (scalar_rdat_vld[27][0][23]) begin
        init_intra_neighbors_chroma_hls_predColBuf_14 <= scalar_rdat  [27][0][23];
    end
    //------READ (scalar, complete partition, global adr = 240) always block-----//
    //s = 28; r = 0; a = 24;
    if (scalar_rdat_vld[28][0][24]) begin
        init_intra_neighbors_chroma_hls_predColBuf_15 <= scalar_rdat  [28][0][24];
    end
    //------READ (scalar, complete partition, global adr = 244) always block-----//
    //s = 29; r = 0; a = 30;
    if (scalar_rdat_vld[29][0][30]) begin
        init_intra_neighbors_chroma_hls_predColBuf_16 <= scalar_rdat  [29][0][30];
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 1; a = 18;
    if (scalar_rdat_vld[17][1][18]) begin
        init_intra_neighbors_chroma_hls_slice_type <= scalar_rdat  [17][1][18];
    end
`endif
    //============================================================
    //ff_hevc_set_neighbour_available_hls       (f = 32)
    //============================================================
`ifdef enable_connect_ff_hevc_set_neighbour_available_hls
    //------WRITE (scalar, global adr = 580) always block-----//
    //s = 17; r = 1; a = 1;
    ff_hevc_set_neighbour_available_hls_cand_up_ap_vld_r <= ff_hevc_set_neighbour_available_hls_cand_up_ap_vld;
    if (ff_hevc_set_neighbour_available_hls_cand_up_ap_vld) begin
        ff_hevc_set_neighbour_available_hls_cand_up_r <= ff_hevc_set_neighbour_available_hls_cand_up;
    end
    //------WRITE (scalar, global adr = 584) always block-----//
    //s = 18; r = 1; a = 1;
    ff_hevc_set_neighbour_available_hls_cand_left_ap_vld_r <= ff_hevc_set_neighbour_available_hls_cand_left_ap_vld;
    if (ff_hevc_set_neighbour_available_hls_cand_left_ap_vld) begin
        ff_hevc_set_neighbour_available_hls_cand_left_r <= ff_hevc_set_neighbour_available_hls_cand_left;
    end
    //------WRITE (scalar, global adr = 588) always block-----//
    //s = 19; r = 1; a = 2;
    ff_hevc_set_neighbour_available_hls_cand_up_left_ap_vld_r <= ff_hevc_set_neighbour_available_hls_cand_up_left_ap_vld;
    if (ff_hevc_set_neighbour_available_hls_cand_up_left_ap_vld) begin
        ff_hevc_set_neighbour_available_hls_cand_up_left_r <= ff_hevc_set_neighbour_available_hls_cand_up_left;
    end
    //------WRITE (scalar, global adr = 592) always block-----//
    //s = 20; r = 1; a = 2;
    ff_hevc_set_neighbour_available_hls_cand_up_right_sap_ap_vld_r <= ff_hevc_set_neighbour_available_hls_cand_up_right_sap_ap_vld;
    if (ff_hevc_set_neighbour_available_hls_cand_up_right_sap_ap_vld) begin
        ff_hevc_set_neighbour_available_hls_cand_up_right_sap_r <= ff_hevc_set_neighbour_available_hls_cand_up_right_sap;
    end
    //------WRITE (scalar, global adr = 596) always block-----//
    //s = 21; r = 1; a = 1;
    ff_hevc_set_neighbour_available_hls_cand_up_right_ap_vld_r <= ff_hevc_set_neighbour_available_hls_cand_up_right_ap_vld;
    if (ff_hevc_set_neighbour_available_hls_cand_up_right_ap_vld) begin
        ff_hevc_set_neighbour_available_hls_cand_up_right_r <= ff_hevc_set_neighbour_available_hls_cand_up_right;
    end
    //------WRITE (scalar, global adr = 600) always block-----//
    //s = 22; r = 1; a = 1;
    ff_hevc_set_neighbour_available_hls_cand_bottom_left_ap_vld_r <= ff_hevc_set_neighbour_available_hls_cand_bottom_left_ap_vld;
    if (ff_hevc_set_neighbour_available_hls_cand_bottom_left_ap_vld) begin
        ff_hevc_set_neighbour_available_hls_cand_bottom_left_r <= ff_hevc_set_neighbour_available_hls_cand_bottom_left;
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 9;
    if (scalar_rdat_vld[26][0][9]) begin
        ff_hevc_set_neighbour_available_hls_log2_ctb_size <= scalar_rdat  [26][0][9];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 0; a = 11;
    if (scalar_rdat_vld[23][0][11]) begin
        ff_hevc_set_neighbour_available_hls_ctb_up_flag <= scalar_rdat  [23][0][11];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 0; a = 9;
    if (scalar_rdat_vld[24][0][9]) begin
        ff_hevc_set_neighbour_available_hls_ctb_left_flag <= scalar_rdat  [24][0][9];
    end
    //------READ (scalar, global adr = 612) always block-----//
    //s = 25; r = 1; a = 8;
    if (scalar_rdat_vld[25][1][8]) begin
        ff_hevc_set_neighbour_available_hls_ctb_up_left_flag <= scalar_rdat  [25][1][8];
    end
    //------READ (scalar, global adr = 616) always block-----//
    //s = 26; r = 1; a = 8;
    if (scalar_rdat_vld[26][1][8]) begin
        ff_hevc_set_neighbour_available_hls_ctb_up_right_flag <= scalar_rdat  [26][1][8];
    end
    //------READ (scalar, global adr = 620) always block-----//
    //s = 27; r = 0; a = 16;
    if (scalar_rdat_vld[27][0][16]) begin
        ff_hevc_set_neighbour_available_hls_end_of_tiles_x <= scalar_rdat  [27][0][16];
    end
    //------READ (scalar, global adr = 624) always block-----//
    //s = 28; r = 1; a = 7;
    if (scalar_rdat_vld[28][1][7]) begin
        ff_hevc_set_neighbour_available_hls_end_of_tiles_y <= scalar_rdat  [28][1][7];
    end
    //------WRITE (scalar, global adr = 160) always block-----//
    //s = 8; r = 1; a = 3;
    ff_hevc_set_neighbour_available_hls_nPbW_ap_vld_r <= ff_hevc_set_neighbour_available_hls_nPbW_ap_vld;
    if (ff_hevc_set_neighbour_available_hls_nPbW_ap_vld) begin
        ff_hevc_set_neighbour_available_hls_nPbW_r <= ff_hevc_set_neighbour_available_hls_nPbW;
    end
    //------WRITE (scalar, global adr = 164) always block-----//
    //s = 9; r = 1; a = 3;
    ff_hevc_set_neighbour_available_hls_nPbH_ap_vld_r <= ff_hevc_set_neighbour_available_hls_nPbH_ap_vld;
    if (ff_hevc_set_neighbour_available_hls_nPbH_ap_vld) begin
        ff_hevc_set_neighbour_available_hls_nPbH_r <= ff_hevc_set_neighbour_available_hls_nPbH;
    end
`endif
    //============================================================
    //intra_prediction_unit_default_value_hls       (f = 33)
    //============================================================
`ifdef enable_connect_intra_prediction_unit_default_value_hls
    //------READ (scalar, global adr = 560) always block-----//
    //s = 12; r = 1; a = 29;
    if (scalar_rdat_vld[12][1][29]) begin
        intra_prediction_unit_default_value_hls_pred_mode <= scalar_rdat  [12][1][29];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 0; a = 32;
    if (scalar_rdat_vld[29][0][32]) begin
        intra_prediction_unit_default_value_hls_log2_min_pu_size <= scalar_rdat  [29][0][32];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 0; a = 20;
    if (scalar_rdat_vld[3][0][20]) begin
        intra_prediction_unit_default_value_hls_min_pu_width <= scalar_rdat  [3][0][20];
    end
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 0; a = 31;
    if (scalar_rdat_vld[11][0][31]) begin
        intra_prediction_unit_default_value_hls_log2_width <= scalar_rdat  [11][0][31];
    end
    //------READ (scalar, complete partition, global adr = 180) always block-----//
    //s = 13; r = 1; a = 27;
    if (scalar_rdat_vld[13][1][27]) begin
        intra_prediction_unit_default_value_hls_predColBuf_0_o_r <= scalar_rdat  [13][1][27];
    end
    //------WRITE (scalar, complete partition, global adr = 180) always block -----//
    //s = 13; r = 0; a = 9;
    intra_prediction_unit_default_value_hls_predColBuf_0_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_0_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_0_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_0_o_r <= intra_prediction_unit_default_value_hls_predColBuf_0_o;
    end
    //------READ (scalar, complete partition, global adr = 184) always block-----//
    //s = 14; r = 1; a = 28;
    if (scalar_rdat_vld[14][1][28]) begin
        intra_prediction_unit_default_value_hls_predColBuf_1_o_r <= scalar_rdat  [14][1][28];
    end
    //------WRITE (scalar, complete partition, global adr = 184) always block -----//
    //s = 14; r = 1; a = 10;
    intra_prediction_unit_default_value_hls_predColBuf_1_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_1_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_1_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_1_o_r <= intra_prediction_unit_default_value_hls_predColBuf_1_o;
    end
    //------READ (scalar, complete partition, global adr = 188) always block-----//
    //s = 15; r = 1; a = 25;
    if (scalar_rdat_vld[15][1][25]) begin
        intra_prediction_unit_default_value_hls_predColBuf_2_o_r <= scalar_rdat  [15][1][25];
    end
    //------WRITE (scalar, complete partition, global adr = 188) always block -----//
    //s = 15; r = 1; a = 8;
    intra_prediction_unit_default_value_hls_predColBuf_2_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_2_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_2_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_2_o_r <= intra_prediction_unit_default_value_hls_predColBuf_2_o;
    end
    //------READ (scalar, complete partition, global adr = 192) always block-----//
    //s = 16; r = 0; a = 20;
    if (scalar_rdat_vld[16][0][20]) begin
        intra_prediction_unit_default_value_hls_predColBuf_3_o_r <= scalar_rdat  [16][0][20];
    end
    //------WRITE (scalar, complete partition, global adr = 192) always block -----//
    //s = 16; r = 0; a = 5;
    intra_prediction_unit_default_value_hls_predColBuf_3_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_3_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_3_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_3_o_r <= intra_prediction_unit_default_value_hls_predColBuf_3_o;
    end
    //------READ (scalar, complete partition, global adr = 196) always block-----//
    //s = 17; r = 1; a = 20;
    if (scalar_rdat_vld[17][1][20]) begin
        intra_prediction_unit_default_value_hls_predColBuf_4_o_r <= scalar_rdat  [17][1][20];
    end
    //------WRITE (scalar, complete partition, global adr = 196) always block -----//
    //s = 17; r = 1; a = 5;
    intra_prediction_unit_default_value_hls_predColBuf_4_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_4_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_4_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_4_o_r <= intra_prediction_unit_default_value_hls_predColBuf_4_o;
    end
    //------READ (scalar, complete partition, global adr = 200) always block-----//
    //s = 18; r = 0; a = 19;
    if (scalar_rdat_vld[18][0][19]) begin
        intra_prediction_unit_default_value_hls_predColBuf_5_o_r <= scalar_rdat  [18][0][19];
    end
    //------WRITE (scalar, complete partition, global adr = 200) always block -----//
    //s = 18; r = 1; a = 5;
    intra_prediction_unit_default_value_hls_predColBuf_5_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_5_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_5_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_5_o_r <= intra_prediction_unit_default_value_hls_predColBuf_5_o;
    end
    //------READ (scalar, complete partition, global adr = 204) always block-----//
    //s = 19; r = 1; a = 22;
    if (scalar_rdat_vld[19][1][22]) begin
        intra_prediction_unit_default_value_hls_predColBuf_6_o_r <= scalar_rdat  [19][1][22];
    end
    //------WRITE (scalar, complete partition, global adr = 204) always block -----//
    //s = 19; r = 1; a = 6;
    intra_prediction_unit_default_value_hls_predColBuf_6_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_6_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_6_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_6_o_r <= intra_prediction_unit_default_value_hls_predColBuf_6_o;
    end
    //------READ (scalar, complete partition, global adr = 208) always block-----//
    //s = 20; r = 0; a = 21;
    if (scalar_rdat_vld[20][0][21]) begin
        intra_prediction_unit_default_value_hls_predColBuf_7_o_r <= scalar_rdat  [20][0][21];
    end
    //------WRITE (scalar, complete partition, global adr = 208) always block -----//
    //s = 20; r = 1; a = 8;
    intra_prediction_unit_default_value_hls_predColBuf_7_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_7_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_7_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_7_o_r <= intra_prediction_unit_default_value_hls_predColBuf_7_o;
    end
    //------READ (scalar, complete partition, global adr = 212) always block-----//
    //s = 21; r = 0; a = 20;
    if (scalar_rdat_vld[21][0][20]) begin
        intra_prediction_unit_default_value_hls_predColBuf_8_o_r <= scalar_rdat  [21][0][20];
    end
    //------WRITE (scalar, complete partition, global adr = 212) always block -----//
    //s = 21; r = 0; a = 9;
    intra_prediction_unit_default_value_hls_predColBuf_8_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_8_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_8_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_8_o_r <= intra_prediction_unit_default_value_hls_predColBuf_8_o;
    end
    //------READ (scalar, complete partition, global adr = 216) always block-----//
    //s = 22; r = 0; a = 30;
    if (scalar_rdat_vld[22][0][30]) begin
        intra_prediction_unit_default_value_hls_predColBuf_9_o_r <= scalar_rdat  [22][0][30];
    end
    //------WRITE (scalar, complete partition, global adr = 216) always block -----//
    //s = 22; r = 0; a = 9;
    intra_prediction_unit_default_value_hls_predColBuf_9_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_9_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_9_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_9_o_r <= intra_prediction_unit_default_value_hls_predColBuf_9_o;
    end
    //------READ (scalar, complete partition, global adr = 220) always block-----//
    //s = 23; r = 0; a = 29;
    if (scalar_rdat_vld[23][0][29]) begin
        intra_prediction_unit_default_value_hls_predColBuf_10_o_r <= scalar_rdat  [23][0][29];
    end
    //------WRITE (scalar, complete partition, global adr = 220) always block -----//
    //s = 23; r = 0; a = 7;
    intra_prediction_unit_default_value_hls_predColBuf_10_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_10_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_10_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_10_o_r <= intra_prediction_unit_default_value_hls_predColBuf_10_o;
    end
    //------READ (scalar, complete partition, global adr = 224) always block-----//
    //s = 24; r = 0; a = 24;
    if (scalar_rdat_vld[24][0][24]) begin
        intra_prediction_unit_default_value_hls_predColBuf_11_o_r <= scalar_rdat  [24][0][24];
    end
    //------WRITE (scalar, complete partition, global adr = 224) always block -----//
    //s = 24; r = 0; a = 5;
    intra_prediction_unit_default_value_hls_predColBuf_11_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_11_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_11_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_11_o_r <= intra_prediction_unit_default_value_hls_predColBuf_11_o;
    end
    //------READ (scalar, complete partition, global adr = 228) always block-----//
    //s = 25; r = 0; a = 22;
    if (scalar_rdat_vld[25][0][22]) begin
        intra_prediction_unit_default_value_hls_predColBuf_12_o_r <= scalar_rdat  [25][0][22];
    end
    //------WRITE (scalar, complete partition, global adr = 228) always block -----//
    //s = 25; r = 0; a = 5;
    intra_prediction_unit_default_value_hls_predColBuf_12_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_12_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_12_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_12_o_r <= intra_prediction_unit_default_value_hls_predColBuf_12_o;
    end
    //------READ (scalar, complete partition, global adr = 232) always block-----//
    //s = 26; r = 1; a = 28;
    if (scalar_rdat_vld[26][1][28]) begin
        intra_prediction_unit_default_value_hls_predColBuf_13_o_r <= scalar_rdat  [26][1][28];
    end
    //------WRITE (scalar, complete partition, global adr = 232) always block -----//
    //s = 26; r = 0; a = 5;
    intra_prediction_unit_default_value_hls_predColBuf_13_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_13_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_13_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_13_o_r <= intra_prediction_unit_default_value_hls_predColBuf_13_o;
    end
    //------READ (scalar, complete partition, global adr = 236) always block-----//
    //s = 27; r = 0; a = 24;
    if (scalar_rdat_vld[27][0][24]) begin
        intra_prediction_unit_default_value_hls_predColBuf_14_o_r <= scalar_rdat  [27][0][24];
    end
    //------WRITE (scalar, complete partition, global adr = 236) always block -----//
    //s = 27; r = 1; a = 10;
    intra_prediction_unit_default_value_hls_predColBuf_14_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_14_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_14_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_14_o_r <= intra_prediction_unit_default_value_hls_predColBuf_14_o;
    end
    //------READ (scalar, complete partition, global adr = 240) always block-----//
    //s = 28; r = 0; a = 25;
    if (scalar_rdat_vld[28][0][25]) begin
        intra_prediction_unit_default_value_hls_predColBuf_15_o_r <= scalar_rdat  [28][0][25];
    end
    //------WRITE (scalar, complete partition, global adr = 240) always block -----//
    //s = 28; r = 1; a = 5;
    intra_prediction_unit_default_value_hls_predColBuf_15_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_15_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_15_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_15_o_r <= intra_prediction_unit_default_value_hls_predColBuf_15_o;
    end
    //------READ (scalar, complete partition, global adr = 244) always block-----//
    //s = 29; r = 1; a = 32;
    if (scalar_rdat_vld[29][1][32]) begin
        intra_prediction_unit_default_value_hls_predColBuf_16_o_r <= scalar_rdat  [29][1][32];
    end
    //------WRITE (scalar, complete partition, global adr = 244) always block -----//
    //s = 29; r = 0; a = 12;
    intra_prediction_unit_default_value_hls_predColBuf_16_o_ap_vld_r <= intra_prediction_unit_default_value_hls_predColBuf_16_o_ap_vld;
    if (intra_prediction_unit_default_value_hls_predColBuf_16_o_ap_vld) begin
        intra_prediction_unit_default_value_hls_predColBuf_16_o_r <= intra_prediction_unit_default_value_hls_predColBuf_16_o;
    end
`endif
    //============================================================
    //z_scan_block_avail_hls       (f = 34)
    //============================================================
`ifdef enable_connect_z_scan_block_avail_hls
    //------READ (scalar, global adr = 404) always block-----//
    //s = 5; r = 0; a = 33;
    if (scalar_rdat_vld[5][0][33]) begin
        z_scan_block_avail_hls_tb_mask <= scalar_rdat  [5][0][33];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 0; a = 33;
    if (scalar_rdat_vld[26][0][33]) begin
        z_scan_block_avail_hls_log2_ctb_size <= scalar_rdat  [26][0][33];
    end
    //------READ (scalar, global adr = 376) always block-----//
    //s = 30; r = 0; a = 19;
    if (scalar_rdat_vld[30][0][19]) begin
        z_scan_block_avail_hls_log2_min_tb_size <= scalar_rdat  [30][0][19];
    end
    //------READ (scalar, global adr = 552) always block-----//
    //s = 10; r = 0; a = 30;
    if (scalar_rdat_vld[10][0][30]) begin
        z_scan_block_avail_hls_xm_x0 <= scalar_rdat  [10][0][30];
    end
    //------READ (scalar, global adr = 556) always block-----//
    //s = 11; r = 1; a = 39;
    if (scalar_rdat_vld[11][1][39]) begin
        z_scan_block_avail_hls_xm_y0 <= scalar_rdat  [11][1][39];
    end
`endif
    //============================================================
    //luma_mc_uni_libx265_hls       (f = 35)
    //============================================================
`ifdef enable_connect_luma_mc_uni_libx265_hls
    //------READ (scalar, complete partition, global adr = 1556) always block-----//
    //s = 5; r = 1; a = 27;
    if (scalar_rdat_vld[5][1][27]) begin
        luma_mc_uni_libx265_hls_frame_data_0 <= scalar_rdat  [5][1][27];
    end
    //------READ (scalar, complete partition, global adr = 1560) always block-----//
    //s = 6; r = 0; a = 35;
    if (scalar_rdat_vld[6][0][35]) begin
        luma_mc_uni_libx265_hls_frame_data_1 <= scalar_rdat  [6][0][35];
    end
    //------READ (scalar, complete partition, global adr = 1564) always block-----//
    //s = 7; r = 0; a = 23;
    if (scalar_rdat_vld[7][0][23]) begin
        luma_mc_uni_libx265_hls_frame_data_2 <= scalar_rdat  [7][0][23];
    end
    //------READ (scalar, complete partition, global adr = 1568) always block-----//
    //s = 8; r = 0; a = 28;
    if (scalar_rdat_vld[8][0][28]) begin
        luma_mc_uni_libx265_hls_frame_linesize_0 <= scalar_rdat  [8][0][28];
    end
    //------READ (scalar, complete partition, global adr = 1572) always block-----//
    //s = 9; r = 1; a = 27;
    if (scalar_rdat_vld[9][1][27]) begin
        luma_mc_uni_libx265_hls_frame_linesize_1 <= scalar_rdat  [9][1][27];
    end
    //------READ (scalar, complete partition, global adr = 1576) always block-----//
    //s = 10; r = 0; a = 24;
    if (scalar_rdat_vld[10][0][24]) begin
        luma_mc_uni_libx265_hls_frame_linesize_2 <= scalar_rdat  [10][0][24];
    end
    //------READ (scalar, global adr = 784) always block-----//
    //s = 4; r = 0; a = 18;
    if (scalar_rdat_vld[4][0][18]) begin
        luma_mc_uni_libx265_hls_current_mv_mv_0_x <= scalar_rdat  [4][0][18];
    end
    //------READ (scalar, global adr = 788) always block-----//
    //s = 5; r = 0; a = 29;
    if (scalar_rdat_vld[5][0][29]) begin
        luma_mc_uni_libx265_hls_current_mv_mv_0_y <= scalar_rdat  [5][0][29];
    end
    //------READ (scalar, global adr = 792) always block-----//
    //s = 6; r = 1; a = 34;
    if (scalar_rdat_vld[6][1][34]) begin
        luma_mc_uni_libx265_hls_current_mv_mv_1_x <= scalar_rdat  [6][1][34];
    end
    //------READ (scalar, global adr = 796) always block-----//
    //s = 7; r = 1; a = 22;
    if (scalar_rdat_vld[7][1][22]) begin
        luma_mc_uni_libx265_hls_current_mv_mv_1_y <= scalar_rdat  [7][1][22];
    end
    //------READ (scalar, global adr = 800) always block-----//
    //s = 8; r = 1; a = 28;
    if (scalar_rdat_vld[8][1][28]) begin
        luma_mc_uni_libx265_hls_current_mv_poc_0 <= scalar_rdat  [8][1][28];
    end
    //------READ (scalar, global adr = 804) always block-----//
    //s = 9; r = 0; a = 28;
    if (scalar_rdat_vld[9][0][28]) begin
        luma_mc_uni_libx265_hls_current_mv_poc_1 <= scalar_rdat  [9][0][28];
    end
    //------READ (scalar, global adr = 808) always block-----//
    //s = 10; r = 1; a = 24;
    if (scalar_rdat_vld[10][1][24]) begin
        luma_mc_uni_libx265_hls_current_mv_ref_idx_0 <= scalar_rdat  [10][1][24];
    end
    //------READ (scalar, global adr = 812) always block-----//
    //s = 11; r = 0; a = 32;
    if (scalar_rdat_vld[11][0][32]) begin
        luma_mc_uni_libx265_hls_current_mv_ref_idx_1 <= scalar_rdat  [11][0][32];
    end
    //------READ (scalar, global adr = 816) always block-----//
    //s = 12; r = 0; a = 31;
    if (scalar_rdat_vld[12][0][31]) begin
        luma_mc_uni_libx265_hls_current_mv_pred_flag <= scalar_rdat  [12][0][31];
    end
    //------READ (scalar, global adr = 728) always block-----//
    //s = 22; r = 1; a = 29;
    if (scalar_rdat_vld[22][1][29]) begin
        luma_mc_uni_libx265_hls_ref_idx <= scalar_rdat  [22][1][29];
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 1; a = 21;
    if (scalar_rdat_vld[17][1][21]) begin
        luma_mc_uni_libx265_hls_slice_type <= scalar_rdat  [17][1][21];
    end
    //------READ (scalar, global adr = 1532) always block-----//
    //s = 31; r = 0; a = 35;
    if (scalar_rdat_vld[31][0][35]) begin
        luma_mc_uni_libx265_hls_weighted_pred_flag <= scalar_rdat  [31][0][35];
    end
    //------READ (scalar, global adr = 1536) always block-----//
    //s = 0; r = 1; a = 33;
    if (scalar_rdat_vld[0][1][33]) begin
        luma_mc_uni_libx265_hls_weighted_bipred_flag <= scalar_rdat  [0][1][33];
    end
    //------READ (scalar, global adr = 1144) always block-----//
    //s = 30; r = 0; a = 17;
    if (scalar_rdat_vld[30][0][17]) begin
        luma_mc_uni_libx265_hls_pixel_shift <= scalar_rdat  [30][0][17];
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 0; a = 36;
    if (scalar_rdat_vld[6][0][36]) begin
        luma_mc_uni_libx265_hls_width <= scalar_rdat  [6][0][36];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 0; a = 23;
    if (scalar_rdat_vld[19][0][23]) begin
        luma_mc_uni_libx265_hls_height <= scalar_rdat  [19][0][23];
    end
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 1; a = 21;
    if (scalar_rdat_vld[20][1][21]) begin
        luma_mc_uni_libx265_hls_hshift_0 <= scalar_rdat  [20][1][21];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 0; a = 21;
    if (scalar_rdat_vld[21][0][21]) begin
        luma_mc_uni_libx265_hls_hshift_1 <= scalar_rdat  [21][0][21];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 0; a = 31;
    if (scalar_rdat_vld[22][0][31]) begin
        luma_mc_uni_libx265_hls_hshift_2 <= scalar_rdat  [22][0][31];
    end
    //------READ (scalar, complete partition, global adr = 348) always block-----//
    //s = 23; r = 0; a = 30;
    if (scalar_rdat_vld[23][0][30]) begin
        luma_mc_uni_libx265_hls_vshift_0 <= scalar_rdat  [23][0][30];
    end
    //------READ (scalar, complete partition, global adr = 352) always block-----//
    //s = 24; r = 0; a = 25;
    if (scalar_rdat_vld[24][0][25]) begin
        luma_mc_uni_libx265_hls_vshift_1 <= scalar_rdat  [24][0][25];
    end
    //------READ (scalar, complete partition, global adr = 356) always block-----//
    //s = 25; r = 1; a = 21;
    if (scalar_rdat_vld[25][1][21]) begin
        luma_mc_uni_libx265_hls_vshift_2 <= scalar_rdat  [25][1][21];
    end
    //------READ (scalar, global adr = 1524) always block-----//
    //s = 29; r = 1; a = 33;
    if (scalar_rdat_vld[29][1][33]) begin
        luma_mc_uni_libx265_hls_bit_depth <= scalar_rdat  [29][1][33];
    end
    //------READ (scalar, global adr = 1516) always block-----//
    //s = 27; r = 1; a = 23;
    if (scalar_rdat_vld[27][1][23]) begin
        luma_mc_uni_libx265_hls_luma_log2_weight_denom <= scalar_rdat  [27][1][23];
    end
    //------WRITE (scalar, global adr = 1528) always block-----//
    //s = 30; r = 0; a = 4;
    luma_mc_uni_libx265_hls_dst_depth_ap_vld_r <= luma_mc_uni_libx265_hls_dst_depth_ap_vld;
    if (luma_mc_uni_libx265_hls_dst_depth_ap_vld) begin
        luma_mc_uni_libx265_hls_dst_depth_r <= luma_mc_uni_libx265_hls_dst_depth;
    end
`endif
    //============================================================
    //chroma_mc_uni_libx265_hls       (f = 36)
    //============================================================
`ifdef enable_connect_chroma_mc_uni_libx265_hls
    //------READ (scalar, complete partition, global adr = 1556) always block-----//
    //s = 5; r = 0; a = 17;
    if (scalar_rdat_vld[5][0][17]) begin
        chroma_mc_uni_libx265_hls_frame_data_0 <= scalar_rdat  [5][0][17];
    end
    //------READ (scalar, complete partition, global adr = 1560) always block-----//
    //s = 6; r = 0; a = 16;
    if (scalar_rdat_vld[6][0][16]) begin
        chroma_mc_uni_libx265_hls_frame_data_1 <= scalar_rdat  [6][0][16];
    end
    //------READ (scalar, complete partition, global adr = 1564) always block-----//
    //s = 7; r = 0; a = 14;
    if (scalar_rdat_vld[7][0][14]) begin
        chroma_mc_uni_libx265_hls_frame_data_2 <= scalar_rdat  [7][0][14];
    end
    //------READ (scalar, complete partition, global adr = 1568) always block-----//
    //s = 8; r = 0; a = 16;
    if (scalar_rdat_vld[8][0][16]) begin
        chroma_mc_uni_libx265_hls_frame_linesize_0 <= scalar_rdat  [8][0][16];
    end
    //------READ (scalar, complete partition, global adr = 1572) always block-----//
    //s = 9; r = 1; a = 16;
    if (scalar_rdat_vld[9][1][16]) begin
        chroma_mc_uni_libx265_hls_frame_linesize_1 <= scalar_rdat  [9][1][16];
    end
    //------READ (scalar, complete partition, global adr = 1576) always block-----//
    //s = 10; r = 0; a = 13;
    if (scalar_rdat_vld[10][0][13]) begin
        chroma_mc_uni_libx265_hls_frame_linesize_2 <= scalar_rdat  [10][0][13];
    end
    //------READ (scalar, global adr = 784) always block-----//
    //s = 4; r = 0; a = 10;
    if (scalar_rdat_vld[4][0][10]) begin
        chroma_mc_uni_libx265_hls_current_mv_mv_0_x <= scalar_rdat  [4][0][10];
    end
    //------READ (scalar, global adr = 788) always block-----//
    //s = 5; r = 1; a = 16;
    if (scalar_rdat_vld[5][1][16]) begin
        chroma_mc_uni_libx265_hls_current_mv_mv_0_y <= scalar_rdat  [5][1][16];
    end
    //------READ (scalar, global adr = 792) always block-----//
    //s = 6; r = 1; a = 15;
    if (scalar_rdat_vld[6][1][15]) begin
        chroma_mc_uni_libx265_hls_current_mv_mv_1_x <= scalar_rdat  [6][1][15];
    end
    //------READ (scalar, global adr = 796) always block-----//
    //s = 7; r = 1; a = 13;
    if (scalar_rdat_vld[7][1][13]) begin
        chroma_mc_uni_libx265_hls_current_mv_mv_1_y <= scalar_rdat  [7][1][13];
    end
    //------READ (scalar, global adr = 800) always block-----//
    //s = 8; r = 1; a = 16;
    if (scalar_rdat_vld[8][1][16]) begin
        chroma_mc_uni_libx265_hls_current_mv_poc_0 <= scalar_rdat  [8][1][16];
    end
    //------READ (scalar, global adr = 804) always block-----//
    //s = 9; r = 0; a = 17;
    if (scalar_rdat_vld[9][0][17]) begin
        chroma_mc_uni_libx265_hls_current_mv_poc_1 <= scalar_rdat  [9][0][17];
    end
    //------READ (scalar, global adr = 808) always block-----//
    //s = 10; r = 1; a = 13;
    if (scalar_rdat_vld[10][1][13]) begin
        chroma_mc_uni_libx265_hls_current_mv_ref_idx_0 <= scalar_rdat  [10][1][13];
    end
    //------READ (scalar, global adr = 812) always block-----//
    //s = 11; r = 0; a = 11;
    if (scalar_rdat_vld[11][0][11]) begin
        chroma_mc_uni_libx265_hls_current_mv_ref_idx_1 <= scalar_rdat  [11][0][11];
    end
    //------READ (scalar, global adr = 816) always block-----//
    //s = 12; r = 0; a = 13;
    if (scalar_rdat_vld[12][0][13]) begin
        chroma_mc_uni_libx265_hls_current_mv_pred_flag <= scalar_rdat  [12][0][13];
    end
    //------READ (scalar, global adr = 728) always block-----//
    //s = 22; r = 0; a = 11;
    if (scalar_rdat_vld[22][0][11]) begin
        chroma_mc_uni_libx265_hls_ref_idx <= scalar_rdat  [22][0][11];
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 1; a = 8;
    if (scalar_rdat_vld[17][1][8]) begin
        chroma_mc_uni_libx265_hls_slice_type <= scalar_rdat  [17][1][8];
    end
    //------READ (scalar, global adr = 1532) always block-----//
    //s = 31; r = 0; a = 15;
    if (scalar_rdat_vld[31][0][15]) begin
        chroma_mc_uni_libx265_hls_weighted_pred_flag <= scalar_rdat  [31][0][15];
    end
    //------READ (scalar, global adr = 1536) always block-----//
    //s = 0; r = 0; a = 16;
    if (scalar_rdat_vld[0][0][16]) begin
        chroma_mc_uni_libx265_hls_weighted_bipred_flag <= scalar_rdat  [0][0][16];
    end
    //------READ (scalar, global adr = 1144) always block-----//
    //s = 30; r = 0; a = 5;
    if (scalar_rdat_vld[30][0][5]) begin
        chroma_mc_uni_libx265_hls_pixel_shift <= scalar_rdat  [30][0][5];
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 0; a = 17;
    if (scalar_rdat_vld[6][0][17]) begin
        chroma_mc_uni_libx265_hls_width <= scalar_rdat  [6][0][17];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 0; a = 8;
    if (scalar_rdat_vld[19][0][8]) begin
        chroma_mc_uni_libx265_hls_height <= scalar_rdat  [19][0][8];
    end
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 1; a = 10;
    if (scalar_rdat_vld[20][1][10]) begin
        chroma_mc_uni_libx265_hls_hshift_0 <= scalar_rdat  [20][1][10];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 0; a = 11;
    if (scalar_rdat_vld[21][0][11]) begin
        chroma_mc_uni_libx265_hls_hshift_1 <= scalar_rdat  [21][0][11];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 1; a = 10;
    if (scalar_rdat_vld[22][1][10]) begin
        chroma_mc_uni_libx265_hls_hshift_2 <= scalar_rdat  [22][1][10];
    end
    //------READ (scalar, complete partition, global adr = 348) always block-----//
    //s = 23; r = 0; a = 9;
    if (scalar_rdat_vld[23][0][9]) begin
        chroma_mc_uni_libx265_hls_vshift_0 <= scalar_rdat  [23][0][9];
    end
    //------READ (scalar, complete partition, global adr = 352) always block-----//
    //s = 24; r = 0; a = 7;
    if (scalar_rdat_vld[24][0][7]) begin
        chroma_mc_uni_libx265_hls_vshift_1 <= scalar_rdat  [24][0][7];
    end
    //------READ (scalar, complete partition, global adr = 356) always block-----//
    //s = 25; r = 0; a = 7;
    if (scalar_rdat_vld[25][0][7]) begin
        chroma_mc_uni_libx265_hls_vshift_2 <= scalar_rdat  [25][0][7];
    end
    //------READ (scalar, global adr = 1524) always block-----//
    //s = 29; r = 0; a = 15;
    if (scalar_rdat_vld[29][0][15]) begin
        chroma_mc_uni_libx265_hls_bit_depth <= scalar_rdat  [29][0][15];
    end
    //------READ (scalar, global adr = 1520) always block-----//
    //s = 28; r = 0; a = 7;
    if (scalar_rdat_vld[28][0][7]) begin
        chroma_mc_uni_libx265_hls_chroma_log2_weight_denom <= scalar_rdat  [28][0][7];
    end
    //------WRITE (scalar, global adr = 752) always block-----//
    //s = 28; r = 1; a = 0;
    chroma_mc_uni_libx265_hls_xm_buf_linesize_ap_vld_r <= chroma_mc_uni_libx265_hls_xm_buf_linesize_ap_vld;
    if (chroma_mc_uni_libx265_hls_xm_buf_linesize_ap_vld) begin
        chroma_mc_uni_libx265_hls_xm_buf_linesize_r <= chroma_mc_uni_libx265_hls_xm_buf_linesize;
    end
    //------WRITE (scalar, global adr = 1528) always block-----//
    //s = 30; r = 1; a = 0;
    chroma_mc_uni_libx265_hls_dst_depth_ap_vld_r <= chroma_mc_uni_libx265_hls_dst_depth_ap_vld;
    if (chroma_mc_uni_libx265_hls_dst_depth_ap_vld) begin
        chroma_mc_uni_libx265_hls_dst_depth_r <= chroma_mc_uni_libx265_hls_dst_depth;
    end
`endif
    //============================================================
    //sao_param_hls       (f = 37)
    //============================================================
`ifdef enable_connect_sao_param_hls
    //------READ (scalar, complete partition, global adr = 892) always block-----//
    //s = 31; r = 1; a = 36;
    if (scalar_rdat_vld[31][1][36]) begin
        sao_param_hls_curr_sao_offset_abs_0_0_o_r <= scalar_rdat  [31][1][36];
    end
    //------WRITE (scalar, complete partition, global adr = 892) always block -----//
    //s = 31; r = 1; a = 10;
    sao_param_hls_curr_sao_offset_abs_0_0_o_ap_vld_r <= sao_param_hls_curr_sao_offset_abs_0_0_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_abs_0_0_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_abs_0_0_o_r <= sao_param_hls_curr_sao_offset_abs_0_0_o;
    end
    //------READ (scalar, complete partition, global adr = 893) always block-----//
    //s = 31; r = 0; a = 38;
    if (scalar_rdat_vld[31][0][38]) begin
        sao_param_hls_curr_sao_offset_abs_0_1_o_r <= scalar_rdat  [31][0][38];
    end
    //------WRITE (scalar, complete partition, global adr = 893) always block -----//
    //s = 31; r = 0; a = 11;
    sao_param_hls_curr_sao_offset_abs_0_1_o_ap_vld_r <= sao_param_hls_curr_sao_offset_abs_0_1_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_abs_0_1_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_abs_0_1_o_r <= sao_param_hls_curr_sao_offset_abs_0_1_o;
    end
    //------READ (scalar, complete partition, global adr = 894) always block-----//
    //s = 31; r = 1; a = 37;
    if (scalar_rdat_vld[31][1][37]) begin
        sao_param_hls_curr_sao_offset_abs_0_2_o_r <= scalar_rdat  [31][1][37];
    end
    //------WRITE (scalar, complete partition, global adr = 894) always block -----//
    //s = 31; r = 1; a = 11;
    sao_param_hls_curr_sao_offset_abs_0_2_o_ap_vld_r <= sao_param_hls_curr_sao_offset_abs_0_2_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_abs_0_2_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_abs_0_2_o_r <= sao_param_hls_curr_sao_offset_abs_0_2_o;
    end
    //------READ (scalar, complete partition, global adr = 895) always block-----//
    //s = 31; r = 0; a = 39;
    if (scalar_rdat_vld[31][0][39]) begin
        sao_param_hls_curr_sao_offset_abs_0_3_o_r <= scalar_rdat  [31][0][39];
    end
    //------WRITE (scalar, complete partition, global adr = 895) always block -----//
    //s = 31; r = 0; a = 12;
    sao_param_hls_curr_sao_offset_abs_0_3_o_ap_vld_r <= sao_param_hls_curr_sao_offset_abs_0_3_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_abs_0_3_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_abs_0_3_o_r <= sao_param_hls_curr_sao_offset_abs_0_3_o;
    end
    //------READ (scalar, complete partition, global adr = 896) always block-----//
    //s = 0; r = 1; a = 34;
    if (scalar_rdat_vld[0][1][34]) begin
        sao_param_hls_curr_sao_offset_abs_1_0_o_r <= scalar_rdat  [0][1][34];
    end
    //------WRITE (scalar, complete partition, global adr = 896) always block -----//
    //s = 0; r = 1; a = 13;
    sao_param_hls_curr_sao_offset_abs_1_0_o_ap_vld_r <= sao_param_hls_curr_sao_offset_abs_1_0_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_abs_1_0_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_abs_1_0_o_r <= sao_param_hls_curr_sao_offset_abs_1_0_o;
    end
    //------READ (scalar, complete partition, global adr = 897) always block-----//
    //s = 0; r = 0; a = 35;
    if (scalar_rdat_vld[0][0][35]) begin
        sao_param_hls_curr_sao_offset_abs_1_1_o_r <= scalar_rdat  [0][0][35];
    end
    //------WRITE (scalar, complete partition, global adr = 897) always block -----//
    //s = 0; r = 0; a = 14;
    sao_param_hls_curr_sao_offset_abs_1_1_o_ap_vld_r <= sao_param_hls_curr_sao_offset_abs_1_1_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_abs_1_1_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_abs_1_1_o_r <= sao_param_hls_curr_sao_offset_abs_1_1_o;
    end
    //------READ (scalar, complete partition, global adr = 898) always block-----//
    //s = 0; r = 1; a = 35;
    if (scalar_rdat_vld[0][1][35]) begin
        sao_param_hls_curr_sao_offset_abs_1_2_o_r <= scalar_rdat  [0][1][35];
    end
    //------WRITE (scalar, complete partition, global adr = 898) always block -----//
    //s = 0; r = 1; a = 14;
    sao_param_hls_curr_sao_offset_abs_1_2_o_ap_vld_r <= sao_param_hls_curr_sao_offset_abs_1_2_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_abs_1_2_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_abs_1_2_o_r <= sao_param_hls_curr_sao_offset_abs_1_2_o;
    end
    //------READ (scalar, complete partition, global adr = 899) always block-----//
    //s = 0; r = 0; a = 36;
    if (scalar_rdat_vld[0][0][36]) begin
        sao_param_hls_curr_sao_offset_abs_1_3_o_r <= scalar_rdat  [0][0][36];
    end
    //------WRITE (scalar, complete partition, global adr = 899) always block -----//
    //s = 0; r = 0; a = 15;
    sao_param_hls_curr_sao_offset_abs_1_3_o_ap_vld_r <= sao_param_hls_curr_sao_offset_abs_1_3_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_abs_1_3_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_abs_1_3_o_r <= sao_param_hls_curr_sao_offset_abs_1_3_o;
    end
    //------READ (scalar, complete partition, global adr = 900) always block-----//
    //s = 1; r = 1; a = 28;
    if (scalar_rdat_vld[1][1][28]) begin
        sao_param_hls_curr_sao_offset_abs_2_0_o_r <= scalar_rdat  [1][1][28];
    end
    //------WRITE (scalar, complete partition, global adr = 900) always block -----//
    //s = 1; r = 0; a = 7;
    sao_param_hls_curr_sao_offset_abs_2_0_o_ap_vld_r <= sao_param_hls_curr_sao_offset_abs_2_0_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_abs_2_0_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_abs_2_0_o_r <= sao_param_hls_curr_sao_offset_abs_2_0_o;
    end
    //------READ (scalar, complete partition, global adr = 901) always block-----//
    //s = 1; r = 0; a = 29;
    if (scalar_rdat_vld[1][0][29]) begin
        sao_param_hls_curr_sao_offset_abs_2_1_o_r <= scalar_rdat  [1][0][29];
    end
    //------WRITE (scalar, complete partition, global adr = 901) always block -----//
    //s = 1; r = 1; a = 7;
    sao_param_hls_curr_sao_offset_abs_2_1_o_ap_vld_r <= sao_param_hls_curr_sao_offset_abs_2_1_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_abs_2_1_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_abs_2_1_o_r <= sao_param_hls_curr_sao_offset_abs_2_1_o;
    end
    //------READ (scalar, complete partition, global adr = 902) always block-----//
    //s = 1; r = 1; a = 29;
    if (scalar_rdat_vld[1][1][29]) begin
        sao_param_hls_curr_sao_offset_abs_2_2_o_r <= scalar_rdat  [1][1][29];
    end
    //------WRITE (scalar, complete partition, global adr = 902) always block -----//
    //s = 1; r = 0; a = 8;
    sao_param_hls_curr_sao_offset_abs_2_2_o_ap_vld_r <= sao_param_hls_curr_sao_offset_abs_2_2_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_abs_2_2_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_abs_2_2_o_r <= sao_param_hls_curr_sao_offset_abs_2_2_o;
    end
    //------READ (scalar, complete partition, global adr = 903) always block-----//
    //s = 1; r = 0; a = 30;
    if (scalar_rdat_vld[1][0][30]) begin
        sao_param_hls_curr_sao_offset_abs_2_3_o_r <= scalar_rdat  [1][0][30];
    end
    //------WRITE (scalar, complete partition, global adr = 903) always block -----//
    //s = 1; r = 1; a = 8;
    sao_param_hls_curr_sao_offset_abs_2_3_o_ap_vld_r <= sao_param_hls_curr_sao_offset_abs_2_3_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_abs_2_3_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_abs_2_3_o_r <= sao_param_hls_curr_sao_offset_abs_2_3_o;
    end
    //------READ (scalar, complete partition, global adr = 904) always block-----//
    //s = 2; r = 1; a = 21;
    if (scalar_rdat_vld[2][1][21]) begin
        sao_param_hls_curr_sao_offset_sign_0_0_o_r <= scalar_rdat  [2][1][21];
    end
    //------WRITE (scalar, complete partition, global adr = 904) always block -----//
    //s = 2; r = 1; a = 5;
    sao_param_hls_curr_sao_offset_sign_0_0_o_ap_vld_r <= sao_param_hls_curr_sao_offset_sign_0_0_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_sign_0_0_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_sign_0_0_o_r <= sao_param_hls_curr_sao_offset_sign_0_0_o;
    end
    //------READ (scalar, complete partition, global adr = 905) always block-----//
    //s = 2; r = 0; a = 23;
    if (scalar_rdat_vld[2][0][23]) begin
        sao_param_hls_curr_sao_offset_sign_0_1_o_r <= scalar_rdat  [2][0][23];
    end
    //------WRITE (scalar, complete partition, global adr = 905) always block -----//
    //s = 2; r = 0; a = 6;
    sao_param_hls_curr_sao_offset_sign_0_1_o_ap_vld_r <= sao_param_hls_curr_sao_offset_sign_0_1_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_sign_0_1_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_sign_0_1_o_r <= sao_param_hls_curr_sao_offset_sign_0_1_o;
    end
    //------READ (scalar, complete partition, global adr = 906) always block-----//
    //s = 2; r = 1; a = 22;
    if (scalar_rdat_vld[2][1][22]) begin
        sao_param_hls_curr_sao_offset_sign_0_2_o_r <= scalar_rdat  [2][1][22];
    end
    //------WRITE (scalar, complete partition, global adr = 906) always block -----//
    //s = 2; r = 1; a = 6;
    sao_param_hls_curr_sao_offset_sign_0_2_o_ap_vld_r <= sao_param_hls_curr_sao_offset_sign_0_2_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_sign_0_2_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_sign_0_2_o_r <= sao_param_hls_curr_sao_offset_sign_0_2_o;
    end
    //------READ (scalar, complete partition, global adr = 907) always block-----//
    //s = 2; r = 0; a = 24;
    if (scalar_rdat_vld[2][0][24]) begin
        sao_param_hls_curr_sao_offset_sign_0_3_o_r <= scalar_rdat  [2][0][24];
    end
    //------WRITE (scalar, complete partition, global adr = 907) always block -----//
    //s = 2; r = 0; a = 7;
    sao_param_hls_curr_sao_offset_sign_0_3_o_ap_vld_r <= sao_param_hls_curr_sao_offset_sign_0_3_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_sign_0_3_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_sign_0_3_o_r <= sao_param_hls_curr_sao_offset_sign_0_3_o;
    end
    //------READ (scalar, complete partition, global adr = 908) always block-----//
    //s = 3; r = 1; a = 21;
    if (scalar_rdat_vld[3][1][21]) begin
        sao_param_hls_curr_sao_offset_sign_1_0_o_r <= scalar_rdat  [3][1][21];
    end
    //------WRITE (scalar, complete partition, global adr = 908) always block -----//
    //s = 3; r = 1; a = 4;
    sao_param_hls_curr_sao_offset_sign_1_0_o_ap_vld_r <= sao_param_hls_curr_sao_offset_sign_1_0_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_sign_1_0_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_sign_1_0_o_r <= sao_param_hls_curr_sao_offset_sign_1_0_o;
    end
    //------READ (scalar, complete partition, global adr = 909) always block-----//
    //s = 3; r = 0; a = 23;
    if (scalar_rdat_vld[3][0][23]) begin
        sao_param_hls_curr_sao_offset_sign_1_1_o_r <= scalar_rdat  [3][0][23];
    end
    //------WRITE (scalar, complete partition, global adr = 909) always block -----//
    //s = 3; r = 0; a = 5;
    sao_param_hls_curr_sao_offset_sign_1_1_o_ap_vld_r <= sao_param_hls_curr_sao_offset_sign_1_1_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_sign_1_1_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_sign_1_1_o_r <= sao_param_hls_curr_sao_offset_sign_1_1_o;
    end
    //------READ (scalar, complete partition, global adr = 910) always block-----//
    //s = 3; r = 1; a = 22;
    if (scalar_rdat_vld[3][1][22]) begin
        sao_param_hls_curr_sao_offset_sign_1_2_o_r <= scalar_rdat  [3][1][22];
    end
    //------WRITE (scalar, complete partition, global adr = 910) always block -----//
    //s = 3; r = 1; a = 5;
    sao_param_hls_curr_sao_offset_sign_1_2_o_ap_vld_r <= sao_param_hls_curr_sao_offset_sign_1_2_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_sign_1_2_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_sign_1_2_o_r <= sao_param_hls_curr_sao_offset_sign_1_2_o;
    end
    //------READ (scalar, complete partition, global adr = 911) always block-----//
    //s = 3; r = 0; a = 24;
    if (scalar_rdat_vld[3][0][24]) begin
        sao_param_hls_curr_sao_offset_sign_1_3_o_r <= scalar_rdat  [3][0][24];
    end
    //------WRITE (scalar, complete partition, global adr = 911) always block -----//
    //s = 3; r = 0; a = 6;
    sao_param_hls_curr_sao_offset_sign_1_3_o_ap_vld_r <= sao_param_hls_curr_sao_offset_sign_1_3_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_sign_1_3_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_sign_1_3_o_r <= sao_param_hls_curr_sao_offset_sign_1_3_o;
    end
    //------READ (scalar, complete partition, global adr = 912) always block-----//
    //s = 4; r = 1; a = 18;
    if (scalar_rdat_vld[4][1][18]) begin
        sao_param_hls_curr_sao_offset_sign_2_0_o_r <= scalar_rdat  [4][1][18];
    end
    //------WRITE (scalar, complete partition, global adr = 912) always block -----//
    //s = 4; r = 0; a = 8;
    sao_param_hls_curr_sao_offset_sign_2_0_o_ap_vld_r <= sao_param_hls_curr_sao_offset_sign_2_0_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_sign_2_0_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_sign_2_0_o_r <= sao_param_hls_curr_sao_offset_sign_2_0_o;
    end
    //------READ (scalar, complete partition, global adr = 913) always block-----//
    //s = 4; r = 0; a = 19;
    if (scalar_rdat_vld[4][0][19]) begin
        sao_param_hls_curr_sao_offset_sign_2_1_o_r <= scalar_rdat  [4][0][19];
    end
    //------WRITE (scalar, complete partition, global adr = 913) always block -----//
    //s = 4; r = 1; a = 8;
    sao_param_hls_curr_sao_offset_sign_2_1_o_ap_vld_r <= sao_param_hls_curr_sao_offset_sign_2_1_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_sign_2_1_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_sign_2_1_o_r <= sao_param_hls_curr_sao_offset_sign_2_1_o;
    end
    //------READ (scalar, complete partition, global adr = 914) always block-----//
    //s = 4; r = 1; a = 19;
    if (scalar_rdat_vld[4][1][19]) begin
        sao_param_hls_curr_sao_offset_sign_2_2_o_r <= scalar_rdat  [4][1][19];
    end
    //------WRITE (scalar, complete partition, global adr = 914) always block -----//
    //s = 4; r = 0; a = 9;
    sao_param_hls_curr_sao_offset_sign_2_2_o_ap_vld_r <= sao_param_hls_curr_sao_offset_sign_2_2_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_sign_2_2_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_sign_2_2_o_r <= sao_param_hls_curr_sao_offset_sign_2_2_o;
    end
    //------READ (scalar, complete partition, global adr = 915) always block-----//
    //s = 4; r = 0; a = 20;
    if (scalar_rdat_vld[4][0][20]) begin
        sao_param_hls_curr_sao_offset_sign_2_3_o_r <= scalar_rdat  [4][0][20];
    end
    //------WRITE (scalar, complete partition, global adr = 915) always block -----//
    //s = 4; r = 1; a = 9;
    sao_param_hls_curr_sao_offset_sign_2_3_o_ap_vld_r <= sao_param_hls_curr_sao_offset_sign_2_3_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_sign_2_3_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_sign_2_3_o_r <= sao_param_hls_curr_sao_offset_sign_2_3_o;
    end
    //------WRITE (scalar, complete partition, global adr = 916) always block -----//
    //s = 5; r = 0; a = 14;
    sao_param_hls_curr_sao_band_position_0_ap_vld_r <= sao_param_hls_curr_sao_band_position_0_ap_vld;
    if (sao_param_hls_curr_sao_band_position_0_ap_vld) begin
        sao_param_hls_curr_sao_band_position_0_r <= sao_param_hls_curr_sao_band_position_0;
    end
    //------WRITE (scalar, complete partition, global adr = 917) always block -----//
    //s = 5; r = 1; a = 14;
    sao_param_hls_curr_sao_band_position_1_ap_vld_r <= sao_param_hls_curr_sao_band_position_1_ap_vld;
    if (sao_param_hls_curr_sao_band_position_1_ap_vld) begin
        sao_param_hls_curr_sao_band_position_1_r <= sao_param_hls_curr_sao_band_position_1;
    end
    //------WRITE (scalar, complete partition, global adr = 918) always block -----//
    //s = 5; r = 0; a = 15;
    sao_param_hls_curr_sao_band_position_2_ap_vld_r <= sao_param_hls_curr_sao_band_position_2_ap_vld;
    if (sao_param_hls_curr_sao_band_position_2_ap_vld) begin
        sao_param_hls_curr_sao_band_position_2_r <= sao_param_hls_curr_sao_band_position_2;
    end
    //------WRITE (scalar, complete partition, global adr = 920) always block -----//
    //s = 6; r = 1; a = 13;
    sao_param_hls_curr_sao_offset_val_0_0_ap_vld_r <= sao_param_hls_curr_sao_offset_val_0_0_ap_vld;
    if (sao_param_hls_curr_sao_offset_val_0_0_ap_vld) begin
        sao_param_hls_curr_sao_offset_val_0_0_r <= sao_param_hls_curr_sao_offset_val_0_0;
    end
    //------READ (scalar, complete partition, global adr = 922) always block-----//
    //s = 6; r = 1; a = 36;
    if (scalar_rdat_vld[6][1][36]) begin
        sao_param_hls_curr_sao_offset_val_0_1_o_r <= scalar_rdat  [6][1][36];
    end
    //------WRITE (scalar, complete partition, global adr = 922) always block -----//
    //s = 6; r = 0; a = 14;
    sao_param_hls_curr_sao_offset_val_0_1_o_ap_vld_r <= sao_param_hls_curr_sao_offset_val_0_1_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_val_0_1_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_val_0_1_o_r <= sao_param_hls_curr_sao_offset_val_0_1_o;
    end
    //------READ (scalar, complete partition, global adr = 924) always block-----//
    //s = 7; r = 1; a = 23;
    if (scalar_rdat_vld[7][1][23]) begin
        sao_param_hls_curr_sao_offset_val_0_2_o_r <= scalar_rdat  [7][1][23];
    end
    //------WRITE (scalar, complete partition, global adr = 924) always block -----//
    //s = 7; r = 0; a = 12;
    sao_param_hls_curr_sao_offset_val_0_2_o_ap_vld_r <= sao_param_hls_curr_sao_offset_val_0_2_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_val_0_2_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_val_0_2_o_r <= sao_param_hls_curr_sao_offset_val_0_2_o;
    end
    //------READ (scalar, complete partition, global adr = 926) always block-----//
    //s = 7; r = 0; a = 25;
    if (scalar_rdat_vld[7][0][25]) begin
        sao_param_hls_curr_sao_offset_val_0_3_o_r <= scalar_rdat  [7][0][25];
    end
    //------WRITE (scalar, complete partition, global adr = 926) always block -----//
    //s = 7; r = 1; a = 12;
    sao_param_hls_curr_sao_offset_val_0_3_o_ap_vld_r <= sao_param_hls_curr_sao_offset_val_0_3_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_val_0_3_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_val_0_3_o_r <= sao_param_hls_curr_sao_offset_val_0_3_o;
    end
    //------READ (scalar, complete partition, global adr = 928) always block-----//
    //s = 8; r = 0; a = 30;
    if (scalar_rdat_vld[8][0][30]) begin
        sao_param_hls_curr_sao_offset_val_0_4_o_r <= scalar_rdat  [8][0][30];
    end
    //------WRITE (scalar, complete partition, global adr = 928) always block -----//
    //s = 8; r = 0; a = 14;
    sao_param_hls_curr_sao_offset_val_0_4_o_ap_vld_r <= sao_param_hls_curr_sao_offset_val_0_4_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_val_0_4_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_val_0_4_o_r <= sao_param_hls_curr_sao_offset_val_0_4_o;
    end
    //------WRITE (scalar, complete partition, global adr = 930) always block -----//
    //s = 8; r = 1; a = 14;
    sao_param_hls_curr_sao_offset_val_1_0_ap_vld_r <= sao_param_hls_curr_sao_offset_val_1_0_ap_vld;
    if (sao_param_hls_curr_sao_offset_val_1_0_ap_vld) begin
        sao_param_hls_curr_sao_offset_val_1_0_r <= sao_param_hls_curr_sao_offset_val_1_0;
    end
    //------READ (scalar, complete partition, global adr = 932) always block-----//
    //s = 9; r = 0; a = 30;
    if (scalar_rdat_vld[9][0][30]) begin
        sao_param_hls_curr_sao_offset_val_1_1_o_r <= scalar_rdat  [9][0][30];
    end
    //------WRITE (scalar, complete partition, global adr = 932) always block -----//
    //s = 9; r = 0; a = 14;
    sao_param_hls_curr_sao_offset_val_1_1_o_ap_vld_r <= sao_param_hls_curr_sao_offset_val_1_1_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_val_1_1_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_val_1_1_o_r <= sao_param_hls_curr_sao_offset_val_1_1_o;
    end
    //------READ (scalar, complete partition, global adr = 934) always block-----//
    //s = 9; r = 1; a = 30;
    if (scalar_rdat_vld[9][1][30]) begin
        sao_param_hls_curr_sao_offset_val_1_2_o_r <= scalar_rdat  [9][1][30];
    end
    //------WRITE (scalar, complete partition, global adr = 934) always block -----//
    //s = 9; r = 1; a = 14;
    sao_param_hls_curr_sao_offset_val_1_2_o_ap_vld_r <= sao_param_hls_curr_sao_offset_val_1_2_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_val_1_2_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_val_1_2_o_r <= sao_param_hls_curr_sao_offset_val_1_2_o;
    end
    //------READ (scalar, complete partition, global adr = 936) always block-----//
    //s = 10; r = 1; a = 25;
    if (scalar_rdat_vld[10][1][25]) begin
        sao_param_hls_curr_sao_offset_val_1_3_o_r <= scalar_rdat  [10][1][25];
    end
    //------WRITE (scalar, complete partition, global adr = 936) always block -----//
    //s = 10; r = 1; a = 11;
    sao_param_hls_curr_sao_offset_val_1_3_o_ap_vld_r <= sao_param_hls_curr_sao_offset_val_1_3_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_val_1_3_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_val_1_3_o_r <= sao_param_hls_curr_sao_offset_val_1_3_o;
    end
    //------READ (scalar, complete partition, global adr = 938) always block-----//
    //s = 10; r = 0; a = 26;
    if (scalar_rdat_vld[10][0][26]) begin
        sao_param_hls_curr_sao_offset_val_1_4_o_r <= scalar_rdat  [10][0][26];
    end
    //------WRITE (scalar, complete partition, global adr = 938) always block -----//
    //s = 10; r = 0; a = 12;
    sao_param_hls_curr_sao_offset_val_1_4_o_ap_vld_r <= sao_param_hls_curr_sao_offset_val_1_4_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_val_1_4_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_val_1_4_o_r <= sao_param_hls_curr_sao_offset_val_1_4_o;
    end
    //------WRITE (scalar, complete partition, global adr = 940) always block -----//
    //s = 11; r = 0; a = 9;
    sao_param_hls_curr_sao_offset_val_2_0_ap_vld_r <= sao_param_hls_curr_sao_offset_val_2_0_ap_vld;
    if (sao_param_hls_curr_sao_offset_val_2_0_ap_vld) begin
        sao_param_hls_curr_sao_offset_val_2_0_r <= sao_param_hls_curr_sao_offset_val_2_0;
    end
    //------READ (scalar, complete partition, global adr = 942) always block-----//
    //s = 11; r = 1; a = 34;
    if (scalar_rdat_vld[11][1][34]) begin
        sao_param_hls_curr_sao_offset_val_2_1_o_r <= scalar_rdat  [11][1][34];
    end
    //------WRITE (scalar, complete partition, global adr = 942) always block -----//
    //s = 11; r = 1; a = 9;
    sao_param_hls_curr_sao_offset_val_2_1_o_ap_vld_r <= sao_param_hls_curr_sao_offset_val_2_1_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_val_2_1_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_val_2_1_o_r <= sao_param_hls_curr_sao_offset_val_2_1_o;
    end
    //------READ (scalar, complete partition, global adr = 944) always block-----//
    //s = 12; r = 1; a = 31;
    if (scalar_rdat_vld[12][1][31]) begin
        sao_param_hls_curr_sao_offset_val_2_2_o_r <= scalar_rdat  [12][1][31];
    end
    //------WRITE (scalar, complete partition, global adr = 944) always block -----//
    //s = 12; r = 1; a = 10;
    sao_param_hls_curr_sao_offset_val_2_2_o_ap_vld_r <= sao_param_hls_curr_sao_offset_val_2_2_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_val_2_2_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_val_2_2_o_r <= sao_param_hls_curr_sao_offset_val_2_2_o;
    end
    //------READ (scalar, complete partition, global adr = 946) always block-----//
    //s = 12; r = 0; a = 33;
    if (scalar_rdat_vld[12][0][33]) begin
        sao_param_hls_curr_sao_offset_val_2_3_o_r <= scalar_rdat  [12][0][33];
    end
    //------WRITE (scalar, complete partition, global adr = 946) always block -----//
    //s = 12; r = 0; a = 11;
    sao_param_hls_curr_sao_offset_val_2_3_o_ap_vld_r <= sao_param_hls_curr_sao_offset_val_2_3_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_val_2_3_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_val_2_3_o_r <= sao_param_hls_curr_sao_offset_val_2_3_o;
    end
    //------READ (scalar, complete partition, global adr = 948) always block-----//
    //s = 13; r = 0; a = 29;
    if (scalar_rdat_vld[13][0][29]) begin
        sao_param_hls_curr_sao_offset_val_2_4_o_r <= scalar_rdat  [13][0][29];
    end
    //------WRITE (scalar, complete partition, global adr = 948) always block -----//
    //s = 13; r = 1; a = 9;
    sao_param_hls_curr_sao_offset_val_2_4_o_ap_vld_r <= sao_param_hls_curr_sao_offset_val_2_4_o_ap_vld;
    if (sao_param_hls_curr_sao_offset_val_2_4_o_ap_vld) begin
        sao_param_hls_curr_sao_offset_val_2_4_o_r <= sao_param_hls_curr_sao_offset_val_2_4_o;
    end
    //------WRITE (scalar, complete partition, global adr = 952) always block -----//
    //s = 14; r = 0; a = 11;
    sao_param_hls_curr_sao_eo_class_0_ap_vld_r <= sao_param_hls_curr_sao_eo_class_0_ap_vld;
    if (sao_param_hls_curr_sao_eo_class_0_ap_vld) begin
        sao_param_hls_curr_sao_eo_class_0_r <= sao_param_hls_curr_sao_eo_class_0;
    end
    //------READ (scalar, complete partition, global adr = 953) always block-----//
    //s = 14; r = 1; a = 30;
    if (scalar_rdat_vld[14][1][30]) begin
        sao_param_hls_curr_sao_eo_class_1_o_r <= scalar_rdat  [14][1][30];
    end
    //------WRITE (scalar, complete partition, global adr = 953) always block -----//
    //s = 14; r = 1; a = 11;
    sao_param_hls_curr_sao_eo_class_1_o_ap_vld_r <= sao_param_hls_curr_sao_eo_class_1_o_ap_vld;
    if (sao_param_hls_curr_sao_eo_class_1_o_ap_vld) begin
        sao_param_hls_curr_sao_eo_class_1_o_r <= sao_param_hls_curr_sao_eo_class_1_o;
    end
    //------WRITE (scalar, complete partition, global adr = 954) always block -----//
    //s = 14; r = 0; a = 12;
    sao_param_hls_curr_sao_eo_class_2_ap_vld_r <= sao_param_hls_curr_sao_eo_class_2_ap_vld;
    if (sao_param_hls_curr_sao_eo_class_2_ap_vld) begin
        sao_param_hls_curr_sao_eo_class_2_r <= sao_param_hls_curr_sao_eo_class_2;
    end
    //------READ (scalar, complete partition, global adr = 956) always block-----//
    //s = 15; r = 0; a = 27;
    if (scalar_rdat_vld[15][0][27]) begin
        sao_param_hls_curr_sao_type_idx_0_o_r <= scalar_rdat  [15][0][27];
    end
    //------WRITE (scalar, complete partition, global adr = 956) always block -----//
    //s = 15; r = 0; a = 10;
    sao_param_hls_curr_sao_type_idx_0_o_ap_vld_r <= sao_param_hls_curr_sao_type_idx_0_o_ap_vld;
    if (sao_param_hls_curr_sao_type_idx_0_o_ap_vld) begin
        sao_param_hls_curr_sao_type_idx_0_o_r <= sao_param_hls_curr_sao_type_idx_0_o;
    end
    //------READ (scalar, complete partition, global adr = 957) always block-----//
    //s = 15; r = 1; a = 27;
    if (scalar_rdat_vld[15][1][27]) begin
        sao_param_hls_curr_sao_type_idx_1_o_r <= scalar_rdat  [15][1][27];
    end
    //------WRITE (scalar, complete partition, global adr = 957) always block -----//
    //s = 15; r = 1; a = 10;
    sao_param_hls_curr_sao_type_idx_1_o_ap_vld_r <= sao_param_hls_curr_sao_type_idx_1_o_ap_vld;
    if (sao_param_hls_curr_sao_type_idx_1_o_ap_vld) begin
        sao_param_hls_curr_sao_type_idx_1_o_r <= sao_param_hls_curr_sao_type_idx_1_o;
    end
    //------READ (scalar, complete partition, global adr = 958) always block-----//
    //s = 15; r = 0; a = 28;
    if (scalar_rdat_vld[15][0][28]) begin
        sao_param_hls_curr_sao_type_idx_2_o_r <= scalar_rdat  [15][0][28];
    end
    //------WRITE (scalar, complete partition, global adr = 958) always block -----//
    //s = 15; r = 0; a = 11;
    sao_param_hls_curr_sao_type_idx_2_o_ap_vld_r <= sao_param_hls_curr_sao_type_idx_2_o_ap_vld;
    if (sao_param_hls_curr_sao_type_idx_2_o_ap_vld) begin
        sao_param_hls_curr_sao_type_idx_2_o_r <= sao_param_hls_curr_sao_type_idx_2_o;
    end
    //------WRITE (scalar, global adr = 960) always block-----//
    //s = 16; r = 0; a = 7;
    sao_param_hls_curr_sao_sao_merge_left_flag_ap_vld_r <= sao_param_hls_curr_sao_sao_merge_left_flag_ap_vld;
    if (sao_param_hls_curr_sao_sao_merge_left_flag_ap_vld) begin
        sao_param_hls_curr_sao_sao_merge_left_flag_r <= sao_param_hls_curr_sao_sao_merge_left_flag;
    end
    //------WRITE (scalar, global adr = 964) always block-----//
    //s = 17; r = 0; a = 6;
    sao_param_hls_curr_sao_sao_merge_up_flag_ap_vld_r <= sao_param_hls_curr_sao_sao_merge_up_flag_ap_vld;
    if (sao_param_hls_curr_sao_sao_merge_up_flag_ap_vld) begin
        sao_param_hls_curr_sao_sao_merge_up_flag_r <= sao_param_hls_curr_sao_sao_merge_up_flag;
    end
    //------READ (scalar, complete partition, global adr = 968) always block-----//
    //s = 18; r = 0; a = 20;
    if (scalar_rdat_vld[18][0][20]) begin
        sao_param_hls_left_sao_offset_abs_0_0 <= scalar_rdat  [18][0][20];
    end
    //------READ (scalar, complete partition, global adr = 969) always block-----//
    //s = 18; r = 1; a = 19;
    if (scalar_rdat_vld[18][1][19]) begin
        sao_param_hls_left_sao_offset_abs_0_1 <= scalar_rdat  [18][1][19];
    end
    //------READ (scalar, complete partition, global adr = 970) always block-----//
    //s = 18; r = 0; a = 21;
    if (scalar_rdat_vld[18][0][21]) begin
        sao_param_hls_left_sao_offset_abs_0_2 <= scalar_rdat  [18][0][21];
    end
    //------READ (scalar, complete partition, global adr = 971) always block-----//
    //s = 18; r = 1; a = 20;
    if (scalar_rdat_vld[18][1][20]) begin
        sao_param_hls_left_sao_offset_abs_0_3 <= scalar_rdat  [18][1][20];
    end
    //------READ (scalar, complete partition, global adr = 972) always block-----//
    //s = 19; r = 0; a = 24;
    if (scalar_rdat_vld[19][0][24]) begin
        sao_param_hls_left_sao_offset_abs_1_0 <= scalar_rdat  [19][0][24];
    end
    //------READ (scalar, complete partition, global adr = 973) always block-----//
    //s = 19; r = 1; a = 24;
    if (scalar_rdat_vld[19][1][24]) begin
        sao_param_hls_left_sao_offset_abs_1_1 <= scalar_rdat  [19][1][24];
    end
    //------READ (scalar, complete partition, global adr = 974) always block-----//
    //s = 19; r = 0; a = 25;
    if (scalar_rdat_vld[19][0][25]) begin
        sao_param_hls_left_sao_offset_abs_1_2 <= scalar_rdat  [19][0][25];
    end
    //------READ (scalar, complete partition, global adr = 975) always block-----//
    //s = 19; r = 1; a = 25;
    if (scalar_rdat_vld[19][1][25]) begin
        sao_param_hls_left_sao_offset_abs_1_3 <= scalar_rdat  [19][1][25];
    end
    //------READ (scalar, complete partition, global adr = 976) always block-----//
    //s = 20; r = 1; a = 22;
    if (scalar_rdat_vld[20][1][22]) begin
        sao_param_hls_left_sao_offset_abs_2_0 <= scalar_rdat  [20][1][22];
    end
    //------READ (scalar, complete partition, global adr = 977) always block-----//
    //s = 20; r = 0; a = 23;
    if (scalar_rdat_vld[20][0][23]) begin
        sao_param_hls_left_sao_offset_abs_2_1 <= scalar_rdat  [20][0][23];
    end
    //------READ (scalar, complete partition, global adr = 978) always block-----//
    //s = 20; r = 1; a = 23;
    if (scalar_rdat_vld[20][1][23]) begin
        sao_param_hls_left_sao_offset_abs_2_2 <= scalar_rdat  [20][1][23];
    end
    //------READ (scalar, complete partition, global adr = 979) always block-----//
    //s = 20; r = 0; a = 24;
    if (scalar_rdat_vld[20][0][24]) begin
        sao_param_hls_left_sao_offset_abs_2_3 <= scalar_rdat  [20][0][24];
    end
    //------READ (scalar, complete partition, global adr = 980) always block-----//
    //s = 21; r = 0; a = 22;
    if (scalar_rdat_vld[21][0][22]) begin
        sao_param_hls_left_sao_offset_sign_0_0 <= scalar_rdat  [21][0][22];
    end
    //------READ (scalar, complete partition, global adr = 981) always block-----//
    //s = 21; r = 1; a = 21;
    if (scalar_rdat_vld[21][1][21]) begin
        sao_param_hls_left_sao_offset_sign_0_1 <= scalar_rdat  [21][1][21];
    end
    //------READ (scalar, complete partition, global adr = 982) always block-----//
    //s = 21; r = 0; a = 23;
    if (scalar_rdat_vld[21][0][23]) begin
        sao_param_hls_left_sao_offset_sign_0_2 <= scalar_rdat  [21][0][23];
    end
    //------READ (scalar, complete partition, global adr = 983) always block-----//
    //s = 21; r = 1; a = 22;
    if (scalar_rdat_vld[21][1][22]) begin
        sao_param_hls_left_sao_offset_sign_0_3 <= scalar_rdat  [21][1][22];
    end
    //------READ (scalar, complete partition, global adr = 984) always block-----//
    //s = 22; r = 0; a = 32;
    if (scalar_rdat_vld[22][0][32]) begin
        sao_param_hls_left_sao_offset_sign_1_0 <= scalar_rdat  [22][0][32];
    end
    //------READ (scalar, complete partition, global adr = 985) always block-----//
    //s = 22; r = 1; a = 31;
    if (scalar_rdat_vld[22][1][31]) begin
        sao_param_hls_left_sao_offset_sign_1_1 <= scalar_rdat  [22][1][31];
    end
    //------READ (scalar, complete partition, global adr = 986) always block-----//
    //s = 22; r = 0; a = 33;
    if (scalar_rdat_vld[22][0][33]) begin
        sao_param_hls_left_sao_offset_sign_1_2 <= scalar_rdat  [22][0][33];
    end
    //------READ (scalar, complete partition, global adr = 987) always block-----//
    //s = 22; r = 1; a = 32;
    if (scalar_rdat_vld[22][1][32]) begin
        sao_param_hls_left_sao_offset_sign_1_3 <= scalar_rdat  [22][1][32];
    end
    //------READ (scalar, complete partition, global adr = 988) always block-----//
    //s = 23; r = 0; a = 31;
    if (scalar_rdat_vld[23][0][31]) begin
        sao_param_hls_left_sao_offset_sign_2_0 <= scalar_rdat  [23][0][31];
    end
    //------READ (scalar, complete partition, global adr = 989) always block-----//
    //s = 23; r = 1; a = 30;
    if (scalar_rdat_vld[23][1][30]) begin
        sao_param_hls_left_sao_offset_sign_2_1 <= scalar_rdat  [23][1][30];
    end
    //------READ (scalar, complete partition, global adr = 990) always block-----//
    //s = 23; r = 0; a = 32;
    if (scalar_rdat_vld[23][0][32]) begin
        sao_param_hls_left_sao_offset_sign_2_2 <= scalar_rdat  [23][0][32];
    end
    //------READ (scalar, complete partition, global adr = 991) always block-----//
    //s = 23; r = 1; a = 31;
    if (scalar_rdat_vld[23][1][31]) begin
        sao_param_hls_left_sao_offset_sign_2_3 <= scalar_rdat  [23][1][31];
    end
    //------READ (scalar, complete partition, global adr = 992) always block-----//
    //s = 24; r = 0; a = 26;
    if (scalar_rdat_vld[24][0][26]) begin
        sao_param_hls_left_sao_band_position_0 <= scalar_rdat  [24][0][26];
    end
    //------READ (scalar, complete partition, global adr = 993) always block-----//
    //s = 24; r = 1; a = 25;
    if (scalar_rdat_vld[24][1][25]) begin
        sao_param_hls_left_sao_band_position_1 <= scalar_rdat  [24][1][25];
    end
    //------READ (scalar, complete partition, global adr = 994) always block-----//
    //s = 24; r = 0; a = 27;
    if (scalar_rdat_vld[24][0][27]) begin
        sao_param_hls_left_sao_band_position_2 <= scalar_rdat  [24][0][27];
    end
    //------READ (scalar, complete partition, global adr = 996) always block-----//
    //s = 25; r = 1; a = 22;
    if (scalar_rdat_vld[25][1][22]) begin
        sao_param_hls_left_sao_offset_val_0_0 <= scalar_rdat  [25][1][22];
    end
    //------READ (scalar, complete partition, global adr = 998) always block-----//
    //s = 25; r = 0; a = 24;
    if (scalar_rdat_vld[25][0][24]) begin
        sao_param_hls_left_sao_offset_val_0_1 <= scalar_rdat  [25][0][24];
    end
    //------READ (scalar, complete partition, global adr = 1000) always block-----//
    //s = 26; r = 0; a = 31;
    if (scalar_rdat_vld[26][0][31]) begin
        sao_param_hls_left_sao_offset_val_0_2 <= scalar_rdat  [26][0][31];
    end
    //------READ (scalar, complete partition, global adr = 1002) always block-----//
    //s = 26; r = 1; a = 30;
    if (scalar_rdat_vld[26][1][30]) begin
        sao_param_hls_left_sao_offset_val_0_3 <= scalar_rdat  [26][1][30];
    end
    //------READ (scalar, complete partition, global adr = 1004) always block-----//
    //s = 27; r = 0; a = 27;
    if (scalar_rdat_vld[27][0][27]) begin
        sao_param_hls_left_sao_offset_val_0_4 <= scalar_rdat  [27][0][27];
    end
    //------READ (scalar, complete partition, global adr = 1006) always block-----//
    //s = 27; r = 1; a = 26;
    if (scalar_rdat_vld[27][1][26]) begin
        sao_param_hls_left_sao_offset_val_1_0 <= scalar_rdat  [27][1][26];
    end
    //------READ (scalar, complete partition, global adr = 1008) always block-----//
    //s = 28; r = 0; a = 26;
    if (scalar_rdat_vld[28][0][26]) begin
        sao_param_hls_left_sao_offset_val_1_1 <= scalar_rdat  [28][0][26];
    end
    //------READ (scalar, complete partition, global adr = 1010) always block-----//
    //s = 28; r = 1; a = 26;
    if (scalar_rdat_vld[28][1][26]) begin
        sao_param_hls_left_sao_offset_val_1_2 <= scalar_rdat  [28][1][26];
    end
    //------READ (scalar, complete partition, global adr = 1012) always block-----//
    //s = 29; r = 0; a = 37;
    if (scalar_rdat_vld[29][0][37]) begin
        sao_param_hls_left_sao_offset_val_1_3 <= scalar_rdat  [29][0][37];
    end
    //------READ (scalar, complete partition, global adr = 1014) always block-----//
    //s = 29; r = 1; a = 37;
    if (scalar_rdat_vld[29][1][37]) begin
        sao_param_hls_left_sao_offset_val_1_4 <= scalar_rdat  [29][1][37];
    end
    //------READ (scalar, complete partition, global adr = 1016) always block-----//
    //s = 30; r = 0; a = 18;
    if (scalar_rdat_vld[30][0][18]) begin
        sao_param_hls_left_sao_offset_val_2_0 <= scalar_rdat  [30][0][18];
    end
    //------READ (scalar, complete partition, global adr = 1018) always block-----//
    //s = 30; r = 1; a = 18;
    if (scalar_rdat_vld[30][1][18]) begin
        sao_param_hls_left_sao_offset_val_2_1 <= scalar_rdat  [30][1][18];
    end
    //------READ (scalar, complete partition, global adr = 1020) always block-----//
    //s = 31; r = 1; a = 38;
    if (scalar_rdat_vld[31][1][38]) begin
        sao_param_hls_left_sao_offset_val_2_2 <= scalar_rdat  [31][1][38];
    end
    //------READ (scalar, complete partition, global adr = 1022) always block-----//
    //s = 31; r = 0; a = 40;
    if (scalar_rdat_vld[31][0][40]) begin
        sao_param_hls_left_sao_offset_val_2_3 <= scalar_rdat  [31][0][40];
    end
    //------READ (scalar, complete partition, global adr = 1024) always block-----//
    //s = 0; r = 1; a = 36;
    if (scalar_rdat_vld[0][1][36]) begin
        sao_param_hls_left_sao_offset_val_2_4 <= scalar_rdat  [0][1][36];
    end
    //------READ (scalar, complete partition, global adr = 1028) always block-----//
    //s = 1; r = 1; a = 30;
    if (scalar_rdat_vld[1][1][30]) begin
        sao_param_hls_left_sao_eo_class_0 <= scalar_rdat  [1][1][30];
    end
    //------READ (scalar, complete partition, global adr = 1029) always block-----//
    //s = 1; r = 0; a = 31;
    if (scalar_rdat_vld[1][0][31]) begin
        sao_param_hls_left_sao_eo_class_1 <= scalar_rdat  [1][0][31];
    end
    //------READ (scalar, complete partition, global adr = 1030) always block-----//
    //s = 1; r = 1; a = 31;
    if (scalar_rdat_vld[1][1][31]) begin
        sao_param_hls_left_sao_eo_class_2 <= scalar_rdat  [1][1][31];
    end
    //------READ (scalar, complete partition, global adr = 1032) always block-----//
    //s = 2; r = 1; a = 23;
    if (scalar_rdat_vld[2][1][23]) begin
        sao_param_hls_left_sao_type_idx_0 <= scalar_rdat  [2][1][23];
    end
    //------READ (scalar, complete partition, global adr = 1033) always block-----//
    //s = 2; r = 0; a = 25;
    if (scalar_rdat_vld[2][0][25]) begin
        sao_param_hls_left_sao_type_idx_1 <= scalar_rdat  [2][0][25];
    end
    //------READ (scalar, complete partition, global adr = 1034) always block-----//
    //s = 2; r = 1; a = 24;
    if (scalar_rdat_vld[2][1][24]) begin
        sao_param_hls_left_sao_type_idx_2 <= scalar_rdat  [2][1][24];
    end
    //------READ (scalar, global adr = 1036) always block-----//
    //s = 3; r = 1; a = 23;
    if (scalar_rdat_vld[3][1][23]) begin
        sao_param_hls_left_sao_sao_merge_left_flag <= scalar_rdat  [3][1][23];
    end
    //------READ (scalar, global adr = 1040) always block-----//
    //s = 4; r = 1; a = 20;
    if (scalar_rdat_vld[4][1][20]) begin
        sao_param_hls_left_sao_sao_merge_up_flag <= scalar_rdat  [4][1][20];
    end
    //------READ (scalar, complete partition, global adr = 1044) always block-----//
    //s = 5; r = 1; a = 29;
    if (scalar_rdat_vld[5][1][29]) begin
        sao_param_hls_up_sao_offset_abs_0_0 <= scalar_rdat  [5][1][29];
    end
    //------READ (scalar, complete partition, global adr = 1045) always block-----//
    //s = 5; r = 0; a = 31;
    if (scalar_rdat_vld[5][0][31]) begin
        sao_param_hls_up_sao_offset_abs_0_1 <= scalar_rdat  [5][0][31];
    end
    //------READ (scalar, complete partition, global adr = 1046) always block-----//
    //s = 5; r = 1; a = 30;
    if (scalar_rdat_vld[5][1][30]) begin
        sao_param_hls_up_sao_offset_abs_0_2 <= scalar_rdat  [5][1][30];
    end
    //------READ (scalar, complete partition, global adr = 1047) always block-----//
    //s = 5; r = 0; a = 32;
    if (scalar_rdat_vld[5][0][32]) begin
        sao_param_hls_up_sao_offset_abs_0_3 <= scalar_rdat  [5][0][32];
    end
    //------READ (scalar, complete partition, global adr = 1048) always block-----//
    //s = 6; r = 0; a = 38;
    if (scalar_rdat_vld[6][0][38]) begin
        sao_param_hls_up_sao_offset_abs_1_0 <= scalar_rdat  [6][0][38];
    end
    //------READ (scalar, complete partition, global adr = 1049) always block-----//
    //s = 6; r = 1; a = 37;
    if (scalar_rdat_vld[6][1][37]) begin
        sao_param_hls_up_sao_offset_abs_1_1 <= scalar_rdat  [6][1][37];
    end
    //------READ (scalar, complete partition, global adr = 1050) always block-----//
    //s = 6; r = 0; a = 39;
    if (scalar_rdat_vld[6][0][39]) begin
        sao_param_hls_up_sao_offset_abs_1_2 <= scalar_rdat  [6][0][39];
    end
    //------READ (scalar, complete partition, global adr = 1051) always block-----//
    //s = 6; r = 1; a = 38;
    if (scalar_rdat_vld[6][1][38]) begin
        sao_param_hls_up_sao_offset_abs_1_3 <= scalar_rdat  [6][1][38];
    end
    //------READ (scalar, complete partition, global adr = 1052) always block-----//
    //s = 7; r = 1; a = 24;
    if (scalar_rdat_vld[7][1][24]) begin
        sao_param_hls_up_sao_offset_abs_2_0 <= scalar_rdat  [7][1][24];
    end
    //------READ (scalar, complete partition, global adr = 1053) always block-----//
    //s = 7; r = 0; a = 26;
    if (scalar_rdat_vld[7][0][26]) begin
        sao_param_hls_up_sao_offset_abs_2_1 <= scalar_rdat  [7][0][26];
    end
    //------READ (scalar, complete partition, global adr = 1054) always block-----//
    //s = 7; r = 1; a = 25;
    if (scalar_rdat_vld[7][1][25]) begin
        sao_param_hls_up_sao_offset_abs_2_2 <= scalar_rdat  [7][1][25];
    end
    //------READ (scalar, complete partition, global adr = 1055) always block-----//
    //s = 7; r = 0; a = 27;
    if (scalar_rdat_vld[7][0][27]) begin
        sao_param_hls_up_sao_offset_abs_2_3 <= scalar_rdat  [7][0][27];
    end
    //------READ (scalar, complete partition, global adr = 1056) always block-----//
    //s = 8; r = 1; a = 30;
    if (scalar_rdat_vld[8][1][30]) begin
        sao_param_hls_up_sao_offset_sign_0_0 <= scalar_rdat  [8][1][30];
    end
    //------READ (scalar, complete partition, global adr = 1057) always block-----//
    //s = 8; r = 0; a = 31;
    if (scalar_rdat_vld[8][0][31]) begin
        sao_param_hls_up_sao_offset_sign_0_1 <= scalar_rdat  [8][0][31];
    end
    //------READ (scalar, complete partition, global adr = 1058) always block-----//
    //s = 8; r = 1; a = 31;
    if (scalar_rdat_vld[8][1][31]) begin
        sao_param_hls_up_sao_offset_sign_0_2 <= scalar_rdat  [8][1][31];
    end
    //------READ (scalar, complete partition, global adr = 1059) always block-----//
    //s = 8; r = 0; a = 32;
    if (scalar_rdat_vld[8][0][32]) begin
        sao_param_hls_up_sao_offset_sign_0_3 <= scalar_rdat  [8][0][32];
    end
    //------READ (scalar, complete partition, global adr = 1060) always block-----//
    //s = 9; r = 0; a = 31;
    if (scalar_rdat_vld[9][0][31]) begin
        sao_param_hls_up_sao_offset_sign_1_0 <= scalar_rdat  [9][0][31];
    end
    //------READ (scalar, complete partition, global adr = 1061) always block-----//
    //s = 9; r = 1; a = 31;
    if (scalar_rdat_vld[9][1][31]) begin
        sao_param_hls_up_sao_offset_sign_1_1 <= scalar_rdat  [9][1][31];
    end
    //------READ (scalar, complete partition, global adr = 1062) always block-----//
    //s = 9; r = 0; a = 32;
    if (scalar_rdat_vld[9][0][32]) begin
        sao_param_hls_up_sao_offset_sign_1_2 <= scalar_rdat  [9][0][32];
    end
    //------READ (scalar, complete partition, global adr = 1063) always block-----//
    //s = 9; r = 1; a = 32;
    if (scalar_rdat_vld[9][1][32]) begin
        sao_param_hls_up_sao_offset_sign_1_3 <= scalar_rdat  [9][1][32];
    end
    //------READ (scalar, complete partition, global adr = 1064) always block-----//
    //s = 10; r = 1; a = 26;
    if (scalar_rdat_vld[10][1][26]) begin
        sao_param_hls_up_sao_offset_sign_2_0 <= scalar_rdat  [10][1][26];
    end
    //------READ (scalar, complete partition, global adr = 1065) always block-----//
    //s = 10; r = 0; a = 27;
    if (scalar_rdat_vld[10][0][27]) begin
        sao_param_hls_up_sao_offset_sign_2_1 <= scalar_rdat  [10][0][27];
    end
    //------READ (scalar, complete partition, global adr = 1066) always block-----//
    //s = 10; r = 1; a = 27;
    if (scalar_rdat_vld[10][1][27]) begin
        sao_param_hls_up_sao_offset_sign_2_2 <= scalar_rdat  [10][1][27];
    end
    //------READ (scalar, complete partition, global adr = 1067) always block-----//
    //s = 10; r = 0; a = 28;
    if (scalar_rdat_vld[10][0][28]) begin
        sao_param_hls_up_sao_offset_sign_2_3 <= scalar_rdat  [10][0][28];
    end
    //------READ (scalar, complete partition, global adr = 1068) always block-----//
    //s = 11; r = 0; a = 35;
    if (scalar_rdat_vld[11][0][35]) begin
        sao_param_hls_up_sao_band_position_0 <= scalar_rdat  [11][0][35];
    end
    //------READ (scalar, complete partition, global adr = 1069) always block-----//
    //s = 11; r = 1; a = 35;
    if (scalar_rdat_vld[11][1][35]) begin
        sao_param_hls_up_sao_band_position_1 <= scalar_rdat  [11][1][35];
    end
    //------READ (scalar, complete partition, global adr = 1070) always block-----//
    //s = 11; r = 0; a = 36;
    if (scalar_rdat_vld[11][0][36]) begin
        sao_param_hls_up_sao_band_position_2 <= scalar_rdat  [11][0][36];
    end
    //------READ (scalar, complete partition, global adr = 1072) always block-----//
    //s = 12; r = 1; a = 32;
    if (scalar_rdat_vld[12][1][32]) begin
        sao_param_hls_up_sao_offset_val_0_0 <= scalar_rdat  [12][1][32];
    end
    //------READ (scalar, complete partition, global adr = 1074) always block-----//
    //s = 12; r = 0; a = 34;
    if (scalar_rdat_vld[12][0][34]) begin
        sao_param_hls_up_sao_offset_val_0_1 <= scalar_rdat  [12][0][34];
    end
    //------READ (scalar, complete partition, global adr = 1076) always block-----//
    //s = 13; r = 1; a = 29;
    if (scalar_rdat_vld[13][1][29]) begin
        sao_param_hls_up_sao_offset_val_0_2 <= scalar_rdat  [13][1][29];
    end
    //------READ (scalar, complete partition, global adr = 1078) always block-----//
    //s = 13; r = 0; a = 30;
    if (scalar_rdat_vld[13][0][30]) begin
        sao_param_hls_up_sao_offset_val_0_3 <= scalar_rdat  [13][0][30];
    end
    //------READ (scalar, complete partition, global adr = 1080) always block-----//
    //s = 14; r = 0; a = 31;
    if (scalar_rdat_vld[14][0][31]) begin
        sao_param_hls_up_sao_offset_val_0_4 <= scalar_rdat  [14][0][31];
    end
    //------READ (scalar, complete partition, global adr = 1082) always block-----//
    //s = 14; r = 1; a = 31;
    if (scalar_rdat_vld[14][1][31]) begin
        sao_param_hls_up_sao_offset_val_1_0 <= scalar_rdat  [14][1][31];
    end
    //------READ (scalar, complete partition, global adr = 1084) always block-----//
    //s = 15; r = 1; a = 28;
    if (scalar_rdat_vld[15][1][28]) begin
        sao_param_hls_up_sao_offset_val_1_1 <= scalar_rdat  [15][1][28];
    end
    //------READ (scalar, complete partition, global adr = 1086) always block-----//
    //s = 15; r = 0; a = 29;
    if (scalar_rdat_vld[15][0][29]) begin
        sao_param_hls_up_sao_offset_val_1_2 <= scalar_rdat  [15][0][29];
    end
    //------READ (scalar, complete partition, global adr = 1088) always block-----//
    //s = 16; r = 0; a = 21;
    if (scalar_rdat_vld[16][0][21]) begin
        sao_param_hls_up_sao_offset_val_1_3 <= scalar_rdat  [16][0][21];
    end
    //------READ (scalar, complete partition, global adr = 1090) always block-----//
    //s = 16; r = 1; a = 20;
    if (scalar_rdat_vld[16][1][20]) begin
        sao_param_hls_up_sao_offset_val_1_4 <= scalar_rdat  [16][1][20];
    end
    //------READ (scalar, complete partition, global adr = 1092) always block-----//
    //s = 17; r = 1; a = 22;
    if (scalar_rdat_vld[17][1][22]) begin
        sao_param_hls_up_sao_offset_val_2_0 <= scalar_rdat  [17][1][22];
    end
    //------READ (scalar, complete partition, global adr = 1094) always block-----//
    //s = 17; r = 0; a = 23;
    if (scalar_rdat_vld[17][0][23]) begin
        sao_param_hls_up_sao_offset_val_2_1 <= scalar_rdat  [17][0][23];
    end
    //------READ (scalar, complete partition, global adr = 1096) always block-----//
    //s = 18; r = 0; a = 22;
    if (scalar_rdat_vld[18][0][22]) begin
        sao_param_hls_up_sao_offset_val_2_2 <= scalar_rdat  [18][0][22];
    end
    //------READ (scalar, complete partition, global adr = 1098) always block-----//
    //s = 18; r = 1; a = 21;
    if (scalar_rdat_vld[18][1][21]) begin
        sao_param_hls_up_sao_offset_val_2_3 <= scalar_rdat  [18][1][21];
    end
    //------READ (scalar, complete partition, global adr = 1100) always block-----//
    //s = 19; r = 0; a = 26;
    if (scalar_rdat_vld[19][0][26]) begin
        sao_param_hls_up_sao_offset_val_2_4 <= scalar_rdat  [19][0][26];
    end
    //------READ (scalar, complete partition, global adr = 1104) always block-----//
    //s = 20; r = 1; a = 24;
    if (scalar_rdat_vld[20][1][24]) begin
        sao_param_hls_up_sao_eo_class_0 <= scalar_rdat  [20][1][24];
    end
    //------READ (scalar, complete partition, global adr = 1105) always block-----//
    //s = 20; r = 0; a = 25;
    if (scalar_rdat_vld[20][0][25]) begin
        sao_param_hls_up_sao_eo_class_1 <= scalar_rdat  [20][0][25];
    end
    //------READ (scalar, complete partition, global adr = 1106) always block-----//
    //s = 20; r = 1; a = 25;
    if (scalar_rdat_vld[20][1][25]) begin
        sao_param_hls_up_sao_eo_class_2 <= scalar_rdat  [20][1][25];
    end
    //------READ (scalar, complete partition, global adr = 1108) always block-----//
    //s = 21; r = 0; a = 24;
    if (scalar_rdat_vld[21][0][24]) begin
        sao_param_hls_up_sao_type_idx_0 <= scalar_rdat  [21][0][24];
    end
    //------READ (scalar, complete partition, global adr = 1109) always block-----//
    //s = 21; r = 1; a = 23;
    if (scalar_rdat_vld[21][1][23]) begin
        sao_param_hls_up_sao_type_idx_1 <= scalar_rdat  [21][1][23];
    end
    //------READ (scalar, complete partition, global adr = 1110) always block-----//
    //s = 21; r = 0; a = 25;
    if (scalar_rdat_vld[21][0][25]) begin
        sao_param_hls_up_sao_type_idx_2 <= scalar_rdat  [21][0][25];
    end
    //------READ (scalar, global adr = 1112) always block-----//
    //s = 22; r = 0; a = 34;
    if (scalar_rdat_vld[22][0][34]) begin
        sao_param_hls_up_sao_sao_merge_left_flag <= scalar_rdat  [22][0][34];
    end
    //------READ (scalar, global adr = 1116) always block-----//
    //s = 23; r = 0; a = 33;
    if (scalar_rdat_vld[23][0][33]) begin
        sao_param_hls_up_sao_sao_merge_up_flag <= scalar_rdat  [23][0][33];
    end
    //------READ (scalar, complete partition, global adr = 1288) always block-----//
    //s = 2; r = 0; a = 26;
    if (scalar_rdat_vld[2][0][26]) begin
        sao_param_hls_slice_sample_adaptive_offset_flag_0 <= scalar_rdat  [2][0][26];
    end
    //------READ (scalar, complete partition, global adr = 1289) always block-----//
    //s = 2; r = 1; a = 25;
    if (scalar_rdat_vld[2][1][25]) begin
        sao_param_hls_slice_sample_adaptive_offset_flag_1 <= scalar_rdat  [2][1][25];
    end
    //------READ (scalar, complete partition, global adr = 1290) always block-----//
    //s = 2; r = 0; a = 27;
    if (scalar_rdat_vld[2][0][27]) begin
        sao_param_hls_slice_sample_adaptive_offset_flag_2 <= scalar_rdat  [2][0][27];
    end
    //------READ (scalar, global adr = 608) always block-----//
    //s = 24; r = 1; a = 26;
    if (scalar_rdat_vld[24][1][26]) begin
        sao_param_hls_ctb_left_flag <= scalar_rdat  [24][1][26];
    end
    //------READ (scalar, global adr = 604) always block-----//
    //s = 23; r = 1; a = 32;
    if (scalar_rdat_vld[23][1][32]) begin
        sao_param_hls_ctb_up_flag <= scalar_rdat  [23][1][32];
    end
    //------READ (scalar, global adr = 1524) always block-----//
    //s = 29; r = 0; a = 38;
    if (scalar_rdat_vld[29][0][38]) begin
        sao_param_hls_bit_depth <= scalar_rdat  [29][0][38];
    end
`endif
    //============================================================
    //xmem_copy_mvfield_hls       (f = 38)
    //============================================================
`ifdef enable_connect_xmem_copy_mvfield_hls
    //------READ (scalar, global adr = 784) always block-----//
    //s = 4; r = 0; a = 21;
    if (scalar_rdat_vld[4][0][21]) begin
        xmem_copy_mvfield_hls_current_mv_mv_0_x <= scalar_rdat  [4][0][21];
    end
    //------READ (scalar, global adr = 788) always block-----//
    //s = 5; r = 1; a = 31;
    if (scalar_rdat_vld[5][1][31]) begin
        xmem_copy_mvfield_hls_current_mv_mv_0_y <= scalar_rdat  [5][1][31];
    end
    //------READ (scalar, global adr = 792) always block-----//
    //s = 6; r = 1; a = 39;
    if (scalar_rdat_vld[6][1][39]) begin
        xmem_copy_mvfield_hls_current_mv_mv_1_x <= scalar_rdat  [6][1][39];
    end
    //------READ (scalar, global adr = 796) always block-----//
    //s = 7; r = 0; a = 28;
    if (scalar_rdat_vld[7][0][28]) begin
        xmem_copy_mvfield_hls_current_mv_mv_1_y <= scalar_rdat  [7][0][28];
    end
    //------READ (scalar, global adr = 800) always block-----//
    //s = 8; r = 0; a = 33;
    if (scalar_rdat_vld[8][0][33]) begin
        xmem_copy_mvfield_hls_current_mv_poc_0 <= scalar_rdat  [8][0][33];
    end
    //------READ (scalar, global adr = 804) always block-----//
    //s = 9; r = 0; a = 34;
    if (scalar_rdat_vld[9][0][34]) begin
        xmem_copy_mvfield_hls_current_mv_poc_1 <= scalar_rdat  [9][0][34];
    end
    //------READ (scalar, global adr = 808) always block-----//
    //s = 10; r = 1; a = 29;
    if (scalar_rdat_vld[10][1][29]) begin
        xmem_copy_mvfield_hls_current_mv_ref_idx_0 <= scalar_rdat  [10][1][29];
    end
    //------READ (scalar, global adr = 812) always block-----//
    //s = 11; r = 0; a = 39;
    if (scalar_rdat_vld[11][0][39]) begin
        xmem_copy_mvfield_hls_current_mv_ref_idx_1 <= scalar_rdat  [11][0][39];
    end
`endif
    //============================================================
    //intra_pred_libx265_hls       (f = 39)
    //============================================================
`ifdef enable_connect_intra_pred_libx265_hls
    //------READ (scalar, global adr = 488) always block-----//
    //s = 26; r = 0; a = 29;
    if (scalar_rdat_vld[26][0][29]) begin
        intra_pred_libx265_hls_tu_intra_pred_mode_c <= scalar_rdat  [26][0][29];
    end
    //------READ (scalar, global adr = 484) always block-----//
    //s = 25; r = 1; a = 20;
    if (scalar_rdat_vld[25][1][20]) begin
        intra_pred_libx265_hls_tu_intra_pred_mode <= scalar_rdat  [25][1][20];
    end
    //------READ (scalar, complete partition, global adr = 336) always block-----//
    //s = 20; r = 1; a = 20;
    if (scalar_rdat_vld[20][1][20]) begin
        intra_pred_libx265_hls_hshift_0 <= scalar_rdat  [20][1][20];
    end
    //------READ (scalar, complete partition, global adr = 340) always block-----//
    //s = 21; r = 1; a = 18;
    if (scalar_rdat_vld[21][1][18]) begin
        intra_pred_libx265_hls_hshift_1 <= scalar_rdat  [21][1][18];
    end
    //------READ (scalar, complete partition, global adr = 344) always block-----//
    //s = 22; r = 1; a = 28;
    if (scalar_rdat_vld[22][1][28]) begin
        intra_pred_libx265_hls_hshift_2 <= scalar_rdat  [22][1][28];
    end
`endif
    //============================================================
    //mv_mp_mode_mx_hls       (f = 40)
    //============================================================
`ifdef enable_connect_mv_mp_mode_mx_hls
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 1; a = 33;
    if (scalar_rdat_vld[11][1][33]) begin
        mv_mp_mode_mx_hls_log2_width <= scalar_rdat  [11][1][33];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 0; a = 21;
    if (scalar_rdat_vld[3][0][21]) begin
        mv_mp_mode_mx_hls_min_pu_width <= scalar_rdat  [3][0][21];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 0; a = 36;
    if (scalar_rdat_vld[29][0][36]) begin
        mv_mp_mode_mx_hls_log2_min_pu_size <= scalar_rdat  [29][0][36];
    end
    //------WRITE (scalar, global adr = 1212) always block-----//
    //s = 15; r = 0; a = 9;
    mv_mp_mode_mx_hls_mxx_x_ap_vld_r <= mv_mp_mode_mx_hls_mxx_x_ap_vld;
    if (mv_mp_mode_mx_hls_mxx_x_ap_vld) begin
        mv_mp_mode_mx_hls_mxx_x_r <= mv_mp_mode_mx_hls_mxx_x;
    end
    //------WRITE (scalar, global adr = 1216) always block-----//
    //s = 16; r = 0; a = 6;
    mv_mp_mode_mx_hls_mxx_y_ap_vld_r <= mv_mp_mode_mx_hls_mxx_y_ap_vld;
    if (mv_mp_mode_mx_hls_mxx_y_ap_vld) begin
        mv_mp_mode_mx_hls_mxx_y_r <= mv_mp_mode_mx_hls_mxx_y;
    end
`endif
    //============================================================
    //mv_mp_mode_mx_lt_hls       (f = 41)
    //============================================================
`ifdef enable_connect_mv_mp_mode_mx_lt_hls
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 0; a = 34;
    if (scalar_rdat_vld[11][0][34]) begin
        mv_mp_mode_mx_lt_hls_log2_width <= scalar_rdat  [11][0][34];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 1; a = 20;
    if (scalar_rdat_vld[3][1][20]) begin
        mv_mp_mode_mx_lt_hls_min_pu_width <= scalar_rdat  [3][1][20];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 1; a = 36;
    if (scalar_rdat_vld[29][1][36]) begin
        mv_mp_mode_mx_lt_hls_log2_min_pu_size <= scalar_rdat  [29][1][36];
    end
    //------READ (scalar, global adr = 1548) always block-----//
    //s = 3; r = 0; a = 22;
    if (scalar_rdat_vld[3][0][22]) begin
        mv_mp_mode_mx_lt_hls_poc <= scalar_rdat  [3][0][22];
    end
    //------WRITE (scalar, global adr = 1212) always block-----//
    //s = 15; r = 1; a = 9;
    mv_mp_mode_mx_lt_hls_mxx_x_ap_vld_r <= mv_mp_mode_mx_lt_hls_mxx_x_ap_vld;
    if (mv_mp_mode_mx_lt_hls_mxx_x_ap_vld) begin
        mv_mp_mode_mx_lt_hls_mxx_x_r <= mv_mp_mode_mx_lt_hls_mxx_x;
    end
    //------WRITE (scalar, global adr = 1216) always block-----//
    //s = 16; r = 1; a = 6;
    mv_mp_mode_mx_lt_hls_mxx_y_ap_vld_r <= mv_mp_mode_mx_lt_hls_mxx_y_ap_vld;
    if (mv_mp_mode_mx_lt_hls_mxx_y_ap_vld) begin
        mv_mp_mode_mx_lt_hls_mxx_y_r <= mv_mp_mode_mx_lt_hls_mxx_y;
    end
`endif
    //============================================================
    //temporal_luma_motion_vector_hls       (f = 42)
    //============================================================
`ifdef enable_connect_temporal_luma_motion_vector_hls
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 1; a = 37;
    if (scalar_rdat_vld[11][1][37]) begin
        temporal_luma_motion_vector_hls_log2_width <= scalar_rdat  [11][1][37];
    end
    //------READ (scalar, global adr = 1188) always block-----//
    //s = 9; r = 0; a = 33;
    if (scalar_rdat_vld[9][0][33]) begin
        temporal_luma_motion_vector_hls_HEVCFrameSize <= scalar_rdat  [9][0][33];
    end
    //------READ (scalar, global adr = 1192) always block-----//
    //s = 10; r = 1; a = 28;
    if (scalar_rdat_vld[10][1][28]) begin
        temporal_luma_motion_vector_hls_RefPicListSize <= scalar_rdat  [10][1][28];
    end
    //------READ (scalar, global adr = 552) always block-----//
    //s = 10; r = 0; a = 29;
    if (scalar_rdat_vld[10][0][29]) begin
        temporal_luma_motion_vector_hls_xm_x0 <= scalar_rdat  [10][0][29];
    end
    //------READ (scalar, global adr = 556) always block-----//
    //s = 11; r = 0; a = 38;
    if (scalar_rdat_vld[11][0][38]) begin
        temporal_luma_motion_vector_hls_xm_y0 <= scalar_rdat  [11][0][38];
    end
    //------READ (scalar, global adr = 160) always block-----//
    //s = 8; r = 1; a = 32;
    if (scalar_rdat_vld[8][1][32]) begin
        temporal_luma_motion_vector_hls_nPbW <= scalar_rdat  [8][1][32];
    end
    //------READ (scalar, global adr = 164) always block-----//
    //s = 9; r = 1; a = 33;
    if (scalar_rdat_vld[9][1][33]) begin
        temporal_luma_motion_vector_hls_nPbH <= scalar_rdat  [9][1][33];
    end
    //------WRITE (scalar, global adr = 1220) always block-----//
    //s = 17; r = 1; a = 7;
    temporal_luma_motion_vector_hls_mvLXCol_x_ap_vld_r <= temporal_luma_motion_vector_hls_mvLXCol_x_ap_vld;
    if (temporal_luma_motion_vector_hls_mvLXCol_x_ap_vld) begin
        temporal_luma_motion_vector_hls_mvLXCol_x_r <= temporal_luma_motion_vector_hls_mvLXCol_x;
    end
    //------WRITE (scalar, global adr = 1224) always block-----//
    //s = 18; r = 0; a = 7;
    temporal_luma_motion_vector_hls_mvLXCol_y_ap_vld_r <= temporal_luma_motion_vector_hls_mvLXCol_y_ap_vld;
    if (temporal_luma_motion_vector_hls_mvLXCol_y_ap_vld) begin
        temporal_luma_motion_vector_hls_mvLXCol_y_r <= temporal_luma_motion_vector_hls_mvLXCol_y;
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 0; a = 26;
    if (scalar_rdat_vld[3][0][26]) begin
        temporal_luma_motion_vector_hls_min_pu_width <= scalar_rdat  [3][0][26];
    end
    //------READ (scalar, global adr = 360) always block-----//
    //s = 26; r = 1; a = 31;
    if (scalar_rdat_vld[26][1][31]) begin
        temporal_luma_motion_vector_hls_log2_ctb_size <= scalar_rdat  [26][1][31];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 0; a = 40;
    if (scalar_rdat_vld[29][0][40]) begin
        temporal_luma_motion_vector_hls_log2_min_pu_size <= scalar_rdat  [29][0][40];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 0; a = 27;
    if (scalar_rdat_vld[19][0][27]) begin
        temporal_luma_motion_vector_hls_height <= scalar_rdat  [19][0][27];
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 0; a = 40;
    if (scalar_rdat_vld[6][0][40]) begin
        temporal_luma_motion_vector_hls_width <= scalar_rdat  [6][0][40];
    end
    //------READ (scalar, global adr = 284) always block-----//
    //s = 7; r = 1; a = 26;
    if (scalar_rdat_vld[7][1][26]) begin
        temporal_luma_motion_vector_hls_ctb_width <= scalar_rdat  [7][1][26];
    end
    //------READ (scalar, global adr = 1208) always block-----//
    //s = 14; r = 1; a = 32;
    if (scalar_rdat_vld[14][1][32]) begin
        temporal_luma_motion_vector_hls_collocated_list <= scalar_rdat  [14][1][32];
    end
    //------READ (scalar, global adr = 1548) always block-----//
    //s = 3; r = 1; a = 25;
    if (scalar_rdat_vld[3][1][25]) begin
        temporal_luma_motion_vector_hls_poc <= scalar_rdat  [3][1][25];
    end
    //------READ (scalar, global adr = 1196) always block-----//
    //s = 11; r = 1; a = 38;
    if (scalar_rdat_vld[11][1][38]) begin
        temporal_luma_motion_vector_hls_refPicList_0_nb_refs <= scalar_rdat  [11][1][38];
    end
    //------READ (scalar, global adr = 1200) always block-----//
    //s = 12; r = 1; a = 33;
    if (scalar_rdat_vld[12][1][33]) begin
        temporal_luma_motion_vector_hls_refPicList_1_nb_refs <= scalar_rdat  [12][1][33];
    end
`endif
    //============================================================
    //is_diff_mer_hls       (f = 43)
    //============================================================
`ifdef enable_connect_is_diff_mer_hls
    //------READ (scalar, global adr = 552) always block-----//
    //s = 10; r = 1; a = 23;
    if (scalar_rdat_vld[10][1][23]) begin
        is_diff_mer_hls_xm_x0 <= scalar_rdat  [10][1][23];
    end
    //------READ (scalar, global adr = 556) always block-----//
    //s = 11; r = 1; a = 31;
    if (scalar_rdat_vld[11][1][31]) begin
        is_diff_mer_hls_xm_y0 <= scalar_rdat  [11][1][31];
    end
    //------READ (scalar, global adr = 1236) always block-----//
    //s = 21; r = 1; a = 19;
    if (scalar_rdat_vld[21][1][19]) begin
        is_diff_mer_hls_xm_log2_parallel_merge_level <= scalar_rdat  [21][1][19];
    end
`endif
    //============================================================
    //append_zero_motion_vector_candidates_hls       (f = 44)
    //============================================================
`ifdef enable_connect_append_zero_motion_vector_candidates_hls
    //------READ (scalar, global adr = 1444) always block-----//
    //s = 9; r = 0; a = 16;
    if (scalar_rdat_vld[9][0][16]) begin
        append_zero_motion_vector_candidates_hls_merge_idx <= scalar_rdat  [9][0][16];
    end
    //------WRITE (scalar, complete partition, global adr = 1300) always block -----//
    //s = 5; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_0_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_0_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_0_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_0_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1302) always block -----//
    //s = 5; r = 1; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_1_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_1_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_1_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_1_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1304) always block -----//
    //s = 6; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_2_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_2_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_2_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_2_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1306) always block -----//
    //s = 6; r = 1; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_3_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_3_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_3_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_3_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1308) always block -----//
    //s = 7; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_4_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_4_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_4_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_4_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1312) always block -----//
    //s = 8; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_0_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_0_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_0_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_0_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1314) always block -----//
    //s = 8; r = 1; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_1_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_1_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_1_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_1_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1316) always block -----//
    //s = 9; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_2_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_2_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_2_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_2_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1318) always block -----//
    //s = 9; r = 1; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_3_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_3_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_3_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_3_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1320) always block -----//
    //s = 10; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_4_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_4_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_4_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_4_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1324) always block -----//
    //s = 11; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_0_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_0_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_0_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_0_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1326) always block -----//
    //s = 11; r = 1; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_1_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_1_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_1_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_1_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1328) always block -----//
    //s = 12; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_2_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_2_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_2_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_2_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1330) always block -----//
    //s = 12; r = 1; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_3_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_3_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_3_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_3_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1332) always block -----//
    //s = 13; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_4_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_4_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_4_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_4_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1336) always block -----//
    //s = 14; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_0_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_0_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_0_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_0_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1338) always block -----//
    //s = 14; r = 1; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_1_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_1_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_1_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_1_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1340) always block -----//
    //s = 15; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_2_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_2_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_2_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_2_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1342) always block -----//
    //s = 15; r = 1; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_3_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_3_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_3_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_3_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1344) always block -----//
    //s = 16; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_4_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_4_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_4_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_4_r <= append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1348) always block -----//
    //s = 17; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_poc0_0_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc0_0_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc0_0_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_0_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc0_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1352) always block -----//
    //s = 18; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_poc0_1_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc0_1_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc0_1_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_1_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc0_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1356) always block -----//
    //s = 19; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_poc0_2_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc0_2_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc0_2_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_2_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc0_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1360) always block -----//
    //s = 20; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_poc0_3_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc0_3_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc0_3_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_3_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc0_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1364) always block -----//
    //s = 21; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_poc0_4_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc0_4_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc0_4_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_poc0_4_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc0_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1368) always block -----//
    //s = 22; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_poc1_0_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc1_0_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc1_0_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_0_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc1_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1372) always block -----//
    //s = 23; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_poc1_1_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc1_1_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc1_1_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_1_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc1_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1376) always block -----//
    //s = 24; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_poc1_2_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc1_2_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc1_2_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_2_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc1_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1380) always block -----//
    //s = 25; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_poc1_3_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc1_3_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc1_3_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_3_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc1_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1384) always block -----//
    //s = 26; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_poc1_4_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc1_4_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc1_4_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_poc1_4_r <= append_zero_motion_vector_candidates_hls_mergecand_list_poc1_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1388) always block -----//
    //s = 27; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_0_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_0_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_0_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_0_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1389) always block -----//
    //s = 27; r = 1; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_1_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_1_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_1_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_1_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1390) always block -----//
    //s = 27; r = 0; a = 1;
    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_2_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_2_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_2_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_2_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1391) always block -----//
    //s = 27; r = 1; a = 1;
    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_3_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_3_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_3_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_3_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1392) always block -----//
    //s = 28; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_4_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_4_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_4_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_4_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1396) always block -----//
    //s = 29; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_0_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_0_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_0_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_0_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1397) always block -----//
    //s = 29; r = 1; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_1_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_1_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_1_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_1_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1398) always block -----//
    //s = 29; r = 0; a = 1;
    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_2_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_2_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_2_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_2_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1399) always block -----//
    //s = 29; r = 1; a = 1;
    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_3_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_3_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_3_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_3_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1400) always block -----//
    //s = 30; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_4_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_4_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_4_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_4_r <= append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1404) always block -----//
    //s = 31; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_0_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_0_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_0_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_0_r <= append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1405) always block -----//
    //s = 31; r = 1; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_1_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_1_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_1_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_1_r <= append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1406) always block -----//
    //s = 31; r = 0; a = 1;
    append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_2_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_2_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_2_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_2_r <= append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1407) always block -----//
    //s = 31; r = 1; a = 1;
    append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_3_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_3_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_3_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_3_r <= append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1408) always block -----//
    //s = 0; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_4_ap_vld_r <= append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_4_ap_vld;
    if (append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_4_ap_vld) begin
        append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_4_r <= append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_4;
    end
    //------READ (scalar, global adr = 132) always block-----//
    //s = 1; r = 0; a = 9;
    if (scalar_rdat_vld[1][0][9]) begin
        append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_o_r <= scalar_rdat  [1][0][9];    //bidir
    end
    //------WRITE (scalar, global adr = 132) always block-----//
    //s = 1; r = 0; a = 0;
    append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_o_ap_vld_r <= append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_o_ap_vld;
    if (append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_o_ap_vld) begin
        append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_o_r <= append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_o;
    end
    //------READ (scalar, global adr = 1232) always block-----//
    //s = 20; r = 0; a = 10;
    if (scalar_rdat_vld[20][0][10]) begin
        append_zero_motion_vector_candidates_hls_zero_idx_o_r <= scalar_rdat  [20][0][10];    //bidir
    end
    //------WRITE (scalar, global adr = 1232) always block-----//
    //s = 20; r = 1; a = 0;
    append_zero_motion_vector_candidates_hls_zero_idx_o_ap_vld_r <= append_zero_motion_vector_candidates_hls_zero_idx_o_ap_vld;
    if (append_zero_motion_vector_candidates_hls_zero_idx_o_ap_vld) begin
        append_zero_motion_vector_candidates_hls_zero_idx_o_r <= append_zero_motion_vector_candidates_hls_zero_idx_o;
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 0; a = 8;
    if (scalar_rdat_vld[17][0][8]) begin
        append_zero_motion_vector_candidates_hls_slice_type <= scalar_rdat  [17][0][8];
    end
`endif
    //============================================================
    //merge_mode_exit_hls       (f = 45)
    //============================================================
`ifdef enable_connect_merge_mode_exit_hls
    //------READ (scalar, global adr = 1444) always block-----//
    //s = 9; r = 1; a = 28;
    if (scalar_rdat_vld[9][1][28]) begin
        merge_mode_exit_hls_merge_idx <= scalar_rdat  [9][1][28];
    end
    //------WRITE (scalar, global adr = 816) always block-----//
    //s = 12; r = 0; a = 10;
    merge_mode_exit_hls_current_mv_pred_flag_ap_vld_r <= merge_mode_exit_hls_current_mv_pred_flag_ap_vld;
    if (merge_mode_exit_hls_current_mv_pred_flag_ap_vld) begin
        merge_mode_exit_hls_current_mv_pred_flag_r <= merge_mode_exit_hls_current_mv_pred_flag;
    end
    //------WRITE (scalar, global adr = 784) always block-----//
    //s = 4; r = 1; a = 7;
    merge_mode_exit_hls_current_mv_mv_0_x_ap_vld_r <= merge_mode_exit_hls_current_mv_mv_0_x_ap_vld;
    if (merge_mode_exit_hls_current_mv_mv_0_x_ap_vld) begin
        merge_mode_exit_hls_current_mv_mv_0_x_r <= merge_mode_exit_hls_current_mv_mv_0_x;
    end
    //------WRITE (scalar, global adr = 788) always block-----//
    //s = 5; r = 1; a = 13;
    merge_mode_exit_hls_current_mv_mv_0_y_ap_vld_r <= merge_mode_exit_hls_current_mv_mv_0_y_ap_vld;
    if (merge_mode_exit_hls_current_mv_mv_0_y_ap_vld) begin
        merge_mode_exit_hls_current_mv_mv_0_y_r <= merge_mode_exit_hls_current_mv_mv_0_y;
    end
    //------WRITE (scalar, global adr = 792) always block-----//
    //s = 6; r = 0; a = 13;
    merge_mode_exit_hls_current_mv_mv_1_x_ap_vld_r <= merge_mode_exit_hls_current_mv_mv_1_x_ap_vld;
    if (merge_mode_exit_hls_current_mv_mv_1_x_ap_vld) begin
        merge_mode_exit_hls_current_mv_mv_1_x_r <= merge_mode_exit_hls_current_mv_mv_1_x;
    end
    //------WRITE (scalar, global adr = 796) always block-----//
    //s = 7; r = 1; a = 11;
    merge_mode_exit_hls_current_mv_mv_1_y_ap_vld_r <= merge_mode_exit_hls_current_mv_mv_1_y_ap_vld;
    if (merge_mode_exit_hls_current_mv_mv_1_y_ap_vld) begin
        merge_mode_exit_hls_current_mv_mv_1_y_r <= merge_mode_exit_hls_current_mv_mv_1_y;
    end
    //------WRITE (scalar, global adr = 800) always block-----//
    //s = 8; r = 1; a = 13;
    merge_mode_exit_hls_current_mv_poc_0_ap_vld_r <= merge_mode_exit_hls_current_mv_poc_0_ap_vld;
    if (merge_mode_exit_hls_current_mv_poc_0_ap_vld) begin
        merge_mode_exit_hls_current_mv_poc_0_r <= merge_mode_exit_hls_current_mv_poc_0;
    end
    //------WRITE (scalar, global adr = 804) always block-----//
    //s = 9; r = 1; a = 13;
    merge_mode_exit_hls_current_mv_poc_1_ap_vld_r <= merge_mode_exit_hls_current_mv_poc_1_ap_vld;
    if (merge_mode_exit_hls_current_mv_poc_1_ap_vld) begin
        merge_mode_exit_hls_current_mv_poc_1_r <= merge_mode_exit_hls_current_mv_poc_1;
    end
    //------WRITE (scalar, global adr = 808) always block-----//
    //s = 10; r = 0; a = 11;
    merge_mode_exit_hls_current_mv_ref_idx_0_ap_vld_r <= merge_mode_exit_hls_current_mv_ref_idx_0_ap_vld;
    if (merge_mode_exit_hls_current_mv_ref_idx_0_ap_vld) begin
        merge_mode_exit_hls_current_mv_ref_idx_0_r <= merge_mode_exit_hls_current_mv_ref_idx_0;
    end
    //------WRITE (scalar, global adr = 812) always block-----//
    //s = 11; r = 1; a = 8;
    merge_mode_exit_hls_current_mv_ref_idx_1_ap_vld_r <= merge_mode_exit_hls_current_mv_ref_idx_1_ap_vld;
    if (merge_mode_exit_hls_current_mv_ref_idx_1_ap_vld) begin
        merge_mode_exit_hls_current_mv_ref_idx_1_r <= merge_mode_exit_hls_current_mv_ref_idx_1;
    end
    //------READ (scalar, complete partition, global adr = 1300) always block-----//
    //s = 5; r = 1; a = 28;
    if (scalar_rdat_vld[5][1][28]) begin
        merge_mode_exit_hls_mergecand_list_mv0_x_0 <= scalar_rdat  [5][1][28];
    end
    //------READ (scalar, complete partition, global adr = 1302) always block-----//
    //s = 5; r = 0; a = 30;
    if (scalar_rdat_vld[5][0][30]) begin
        merge_mode_exit_hls_mergecand_list_mv0_x_1 <= scalar_rdat  [5][0][30];
    end
    //------READ (scalar, complete partition, global adr = 1304) always block-----//
    //s = 6; r = 1; a = 35;
    if (scalar_rdat_vld[6][1][35]) begin
        merge_mode_exit_hls_mergecand_list_mv0_x_2 <= scalar_rdat  [6][1][35];
    end
    //------READ (scalar, complete partition, global adr = 1306) always block-----//
    //s = 6; r = 0; a = 37;
    if (scalar_rdat_vld[6][0][37]) begin
        merge_mode_exit_hls_mergecand_list_mv0_x_3 <= scalar_rdat  [6][0][37];
    end
    //------READ (scalar, complete partition, global adr = 1308) always block-----//
    //s = 7; r = 0; a = 24;
    if (scalar_rdat_vld[7][0][24]) begin
        merge_mode_exit_hls_mergecand_list_mv0_x_4 <= scalar_rdat  [7][0][24];
    end
    //------READ (scalar, complete partition, global adr = 1312) always block-----//
    //s = 8; r = 0; a = 29;
    if (scalar_rdat_vld[8][0][29]) begin
        merge_mode_exit_hls_mergecand_list_mv0_y_0 <= scalar_rdat  [8][0][29];
    end
    //------READ (scalar, complete partition, global adr = 1314) always block-----//
    //s = 8; r = 1; a = 29;
    if (scalar_rdat_vld[8][1][29]) begin
        merge_mode_exit_hls_mergecand_list_mv0_y_1 <= scalar_rdat  [8][1][29];
    end
    //------READ (scalar, complete partition, global adr = 1316) always block-----//
    //s = 9; r = 0; a = 29;
    if (scalar_rdat_vld[9][0][29]) begin
        merge_mode_exit_hls_mergecand_list_mv0_y_2 <= scalar_rdat  [9][0][29];
    end
    //------READ (scalar, complete partition, global adr = 1318) always block-----//
    //s = 9; r = 1; a = 29;
    if (scalar_rdat_vld[9][1][29]) begin
        merge_mode_exit_hls_mergecand_list_mv0_y_3 <= scalar_rdat  [9][1][29];
    end
    //------READ (scalar, complete partition, global adr = 1320) always block-----//
    //s = 10; r = 0; a = 25;
    if (scalar_rdat_vld[10][0][25]) begin
        merge_mode_exit_hls_mergecand_list_mv0_y_4 <= scalar_rdat  [10][0][25];
    end
    //------READ (scalar, complete partition, global adr = 1324) always block-----//
    //s = 11; r = 1; a = 32;
    if (scalar_rdat_vld[11][1][32]) begin
        merge_mode_exit_hls_mergecand_list_mv1_x_0 <= scalar_rdat  [11][1][32];
    end
    //------READ (scalar, complete partition, global adr = 1326) always block-----//
    //s = 11; r = 0; a = 33;
    if (scalar_rdat_vld[11][0][33]) begin
        merge_mode_exit_hls_mergecand_list_mv1_x_1 <= scalar_rdat  [11][0][33];
    end
    //------READ (scalar, complete partition, global adr = 1328) always block-----//
    //s = 12; r = 1; a = 30;
    if (scalar_rdat_vld[12][1][30]) begin
        merge_mode_exit_hls_mergecand_list_mv1_x_2 <= scalar_rdat  [12][1][30];
    end
    //------READ (scalar, complete partition, global adr = 1330) always block-----//
    //s = 12; r = 0; a = 32;
    if (scalar_rdat_vld[12][0][32]) begin
        merge_mode_exit_hls_mergecand_list_mv1_x_3 <= scalar_rdat  [12][0][32];
    end
    //------READ (scalar, complete partition, global adr = 1332) always block-----//
    //s = 13; r = 1; a = 28;
    if (scalar_rdat_vld[13][1][28]) begin
        merge_mode_exit_hls_mergecand_list_mv1_x_4 <= scalar_rdat  [13][1][28];
    end
    //------READ (scalar, complete partition, global adr = 1336) always block-----//
    //s = 14; r = 1; a = 29;
    if (scalar_rdat_vld[14][1][29]) begin
        merge_mode_exit_hls_mergecand_list_mv1_y_0 <= scalar_rdat  [14][1][29];
    end
    //------READ (scalar, complete partition, global adr = 1338) always block-----//
    //s = 14; r = 0; a = 30;
    if (scalar_rdat_vld[14][0][30]) begin
        merge_mode_exit_hls_mergecand_list_mv1_y_1 <= scalar_rdat  [14][0][30];
    end
    //------READ (scalar, complete partition, global adr = 1340) always block-----//
    //s = 15; r = 0; a = 26;
    if (scalar_rdat_vld[15][0][26]) begin
        merge_mode_exit_hls_mergecand_list_mv1_y_2 <= scalar_rdat  [15][0][26];
    end
    //------READ (scalar, complete partition, global adr = 1342) always block-----//
    //s = 15; r = 1; a = 26;
    if (scalar_rdat_vld[15][1][26]) begin
        merge_mode_exit_hls_mergecand_list_mv1_y_3 <= scalar_rdat  [15][1][26];
    end
    //------READ (scalar, complete partition, global adr = 1344) always block-----//
    //s = 16; r = 1; a = 19;
    if (scalar_rdat_vld[16][1][19]) begin
        merge_mode_exit_hls_mergecand_list_mv1_y_4 <= scalar_rdat  [16][1][19];
    end
    //------READ (scalar, complete partition, global adr = 1348) always block-----//
    //s = 17; r = 0; a = 22;
    if (scalar_rdat_vld[17][0][22]) begin
        merge_mode_exit_hls_mergecand_list_poc0_0 <= scalar_rdat  [17][0][22];
    end
    //------READ (scalar, complete partition, global adr = 1352) always block-----//
    //s = 18; r = 1; a = 18;
    if (scalar_rdat_vld[18][1][18]) begin
        merge_mode_exit_hls_mergecand_list_poc0_1 <= scalar_rdat  [18][1][18];
    end
    //------READ (scalar, complete partition, global adr = 1356) always block-----//
    //s = 19; r = 1; a = 23;
    if (scalar_rdat_vld[19][1][23]) begin
        merge_mode_exit_hls_mergecand_list_poc0_2 <= scalar_rdat  [19][1][23];
    end
    //------READ (scalar, complete partition, global adr = 1360) always block-----//
    //s = 20; r = 0; a = 22;
    if (scalar_rdat_vld[20][0][22]) begin
        merge_mode_exit_hls_mergecand_list_poc0_3 <= scalar_rdat  [20][0][22];
    end
    //------READ (scalar, complete partition, global adr = 1364) always block-----//
    //s = 21; r = 1; a = 20;
    if (scalar_rdat_vld[21][1][20]) begin
        merge_mode_exit_hls_mergecand_list_poc0_4 <= scalar_rdat  [21][1][20];
    end
    //------READ (scalar, complete partition, global adr = 1368) always block-----//
    //s = 22; r = 1; a = 30;
    if (scalar_rdat_vld[22][1][30]) begin
        merge_mode_exit_hls_mergecand_list_poc1_0 <= scalar_rdat  [22][1][30];
    end
    //------READ (scalar, complete partition, global adr = 1372) always block-----//
    //s = 23; r = 1; a = 29;
    if (scalar_rdat_vld[23][1][29]) begin
        merge_mode_exit_hls_mergecand_list_poc1_1 <= scalar_rdat  [23][1][29];
    end
    //------READ (scalar, complete partition, global adr = 1376) always block-----//
    //s = 24; r = 1; a = 24;
    if (scalar_rdat_vld[24][1][24]) begin
        merge_mode_exit_hls_mergecand_list_poc1_2 <= scalar_rdat  [24][1][24];
    end
    //------READ (scalar, complete partition, global adr = 1380) always block-----//
    //s = 25; r = 0; a = 23;
    if (scalar_rdat_vld[25][0][23]) begin
        merge_mode_exit_hls_mergecand_list_poc1_3 <= scalar_rdat  [25][0][23];
    end
    //------READ (scalar, complete partition, global adr = 1384) always block-----//
    //s = 26; r = 1; a = 29;
    if (scalar_rdat_vld[26][1][29]) begin
        merge_mode_exit_hls_mergecand_list_poc1_4 <= scalar_rdat  [26][1][29];
    end
    //------READ (scalar, complete partition, global adr = 1388) always block-----//
    //s = 27; r = 0; a = 25;
    if (scalar_rdat_vld[27][0][25]) begin
        merge_mode_exit_hls_mergecand_list_ref_idx0_0 <= scalar_rdat  [27][0][25];
    end
    //------READ (scalar, complete partition, global adr = 1389) always block-----//
    //s = 27; r = 1; a = 24;
    if (scalar_rdat_vld[27][1][24]) begin
        merge_mode_exit_hls_mergecand_list_ref_idx0_1 <= scalar_rdat  [27][1][24];
    end
    //------READ (scalar, complete partition, global adr = 1390) always block-----//
    //s = 27; r = 0; a = 26;
    if (scalar_rdat_vld[27][0][26]) begin
        merge_mode_exit_hls_mergecand_list_ref_idx0_2 <= scalar_rdat  [27][0][26];
    end
    //------READ (scalar, complete partition, global adr = 1391) always block-----//
    //s = 27; r = 1; a = 25;
    if (scalar_rdat_vld[27][1][25]) begin
        merge_mode_exit_hls_mergecand_list_ref_idx0_3 <= scalar_rdat  [27][1][25];
    end
    //------READ (scalar, complete partition, global adr = 1392) always block-----//
    //s = 28; r = 1; a = 25;
    if (scalar_rdat_vld[28][1][25]) begin
        merge_mode_exit_hls_mergecand_list_ref_idx0_4 <= scalar_rdat  [28][1][25];
    end
    //------READ (scalar, complete partition, global adr = 1396) always block-----//
    //s = 29; r = 0; a = 34;
    if (scalar_rdat_vld[29][0][34]) begin
        merge_mode_exit_hls_mergecand_list_ref_idx1_0 <= scalar_rdat  [29][0][34];
    end
    //------READ (scalar, complete partition, global adr = 1397) always block-----//
    //s = 29; r = 1; a = 34;
    if (scalar_rdat_vld[29][1][34]) begin
        merge_mode_exit_hls_mergecand_list_ref_idx1_1 <= scalar_rdat  [29][1][34];
    end
    //------READ (scalar, complete partition, global adr = 1398) always block-----//
    //s = 29; r = 0; a = 35;
    if (scalar_rdat_vld[29][0][35]) begin
        merge_mode_exit_hls_mergecand_list_ref_idx1_2 <= scalar_rdat  [29][0][35];
    end
    //------READ (scalar, complete partition, global adr = 1399) always block-----//
    //s = 29; r = 1; a = 35;
    if (scalar_rdat_vld[29][1][35]) begin
        merge_mode_exit_hls_mergecand_list_ref_idx1_3 <= scalar_rdat  [29][1][35];
    end
    //------READ (scalar, complete partition, global adr = 1400) always block-----//
    //s = 30; r = 1; a = 17;
    if (scalar_rdat_vld[30][1][17]) begin
        merge_mode_exit_hls_mergecand_list_ref_idx1_4 <= scalar_rdat  [30][1][17];
    end
    //------READ (scalar, complete partition, global adr = 1404) always block-----//
    //s = 31; r = 1; a = 34;
    if (scalar_rdat_vld[31][1][34]) begin
        merge_mode_exit_hls_mergecand_list_pred_flag_0_o_r <= scalar_rdat  [31][1][34];
    end
    //------WRITE (scalar, complete partition, global adr = 1404) always block -----//
    //s = 31; r = 1; a = 8;
    merge_mode_exit_hls_mergecand_list_pred_flag_0_o_ap_vld_r <= merge_mode_exit_hls_mergecand_list_pred_flag_0_o_ap_vld;
    if (merge_mode_exit_hls_mergecand_list_pred_flag_0_o_ap_vld) begin
        merge_mode_exit_hls_mergecand_list_pred_flag_0_o_r <= merge_mode_exit_hls_mergecand_list_pred_flag_0_o;
    end
    //------READ (scalar, complete partition, global adr = 1405) always block-----//
    //s = 31; r = 0; a = 36;
    if (scalar_rdat_vld[31][0][36]) begin
        merge_mode_exit_hls_mergecand_list_pred_flag_1_o_r <= scalar_rdat  [31][0][36];
    end
    //------WRITE (scalar, complete partition, global adr = 1405) always block -----//
    //s = 31; r = 0; a = 9;
    merge_mode_exit_hls_mergecand_list_pred_flag_1_o_ap_vld_r <= merge_mode_exit_hls_mergecand_list_pred_flag_1_o_ap_vld;
    if (merge_mode_exit_hls_mergecand_list_pred_flag_1_o_ap_vld) begin
        merge_mode_exit_hls_mergecand_list_pred_flag_1_o_r <= merge_mode_exit_hls_mergecand_list_pred_flag_1_o;
    end
    //------READ (scalar, complete partition, global adr = 1406) always block-----//
    //s = 31; r = 1; a = 35;
    if (scalar_rdat_vld[31][1][35]) begin
        merge_mode_exit_hls_mergecand_list_pred_flag_2_o_r <= scalar_rdat  [31][1][35];
    end
    //------WRITE (scalar, complete partition, global adr = 1406) always block -----//
    //s = 31; r = 1; a = 9;
    merge_mode_exit_hls_mergecand_list_pred_flag_2_o_ap_vld_r <= merge_mode_exit_hls_mergecand_list_pred_flag_2_o_ap_vld;
    if (merge_mode_exit_hls_mergecand_list_pred_flag_2_o_ap_vld) begin
        merge_mode_exit_hls_mergecand_list_pred_flag_2_o_r <= merge_mode_exit_hls_mergecand_list_pred_flag_2_o;
    end
    //------READ (scalar, complete partition, global adr = 1407) always block-----//
    //s = 31; r = 0; a = 37;
    if (scalar_rdat_vld[31][0][37]) begin
        merge_mode_exit_hls_mergecand_list_pred_flag_3_o_r <= scalar_rdat  [31][0][37];
    end
    //------WRITE (scalar, complete partition, global adr = 1407) always block -----//
    //s = 31; r = 0; a = 10;
    merge_mode_exit_hls_mergecand_list_pred_flag_3_o_ap_vld_r <= merge_mode_exit_hls_mergecand_list_pred_flag_3_o_ap_vld;
    if (merge_mode_exit_hls_mergecand_list_pred_flag_3_o_ap_vld) begin
        merge_mode_exit_hls_mergecand_list_pred_flag_3_o_r <= merge_mode_exit_hls_mergecand_list_pred_flag_3_o;
    end
    //------READ (scalar, complete partition, global adr = 1408) always block-----//
    //s = 0; r = 0; a = 34;
    if (scalar_rdat_vld[0][0][34]) begin
        merge_mode_exit_hls_mergecand_list_pred_flag_4_o_r <= scalar_rdat  [0][0][34];
    end
    //------WRITE (scalar, complete partition, global adr = 1408) always block -----//
    //s = 0; r = 0; a = 13;
    merge_mode_exit_hls_mergecand_list_pred_flag_4_o_ap_vld_r <= merge_mode_exit_hls_mergecand_list_pred_flag_4_o_ap_vld;
    if (merge_mode_exit_hls_mergecand_list_pred_flag_4_o_ap_vld) begin
        merge_mode_exit_hls_mergecand_list_pred_flag_4_o_r <= merge_mode_exit_hls_mergecand_list_pred_flag_4_o;
    end
`endif
    //============================================================
    //set_to_mergecand_list_hls       (f = 46)
    //============================================================
`ifdef enable_connect_set_to_mergecand_list_hls
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 0; a = 37;
    if (scalar_rdat_vld[11][0][37]) begin
        set_to_mergecand_list_hls_log2_width <= scalar_rdat  [11][0][37];
    end
    //------READ (scalar, global adr = 132) always block-----//
    //s = 1; r = 0; a = 32;
    if (scalar_rdat_vld[1][0][32]) begin
        set_to_mergecand_list_hls_xm_nb_merge_cand <= scalar_rdat  [1][0][32];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 1; a = 39;
    if (scalar_rdat_vld[29][1][39]) begin
        set_to_mergecand_list_hls_log2_min_pu_size <= scalar_rdat  [29][1][39];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 1; a = 24;
    if (scalar_rdat_vld[3][1][24]) begin
        set_to_mergecand_list_hls_min_pu_width <= scalar_rdat  [3][1][24];
    end
    //------WRITE (scalar, complete partition, global adr = 1404) always block -----//
    //s = 31; r = 1; a = 12;
    set_to_mergecand_list_hls_mergecand_list_pred_flag_0_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_pred_flag_0_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_pred_flag_0_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_pred_flag_0_r <= set_to_mergecand_list_hls_mergecand_list_pred_flag_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1405) always block -----//
    //s = 31; r = 0; a = 13;
    set_to_mergecand_list_hls_mergecand_list_pred_flag_1_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_pred_flag_1_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_pred_flag_1_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_pred_flag_1_r <= set_to_mergecand_list_hls_mergecand_list_pred_flag_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1406) always block -----//
    //s = 31; r = 1; a = 13;
    set_to_mergecand_list_hls_mergecand_list_pred_flag_2_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_pred_flag_2_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_pred_flag_2_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_pred_flag_2_r <= set_to_mergecand_list_hls_mergecand_list_pred_flag_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1407) always block -----//
    //s = 31; r = 0; a = 14;
    set_to_mergecand_list_hls_mergecand_list_pred_flag_3_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_pred_flag_3_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_pred_flag_3_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_pred_flag_3_r <= set_to_mergecand_list_hls_mergecand_list_pred_flag_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1408) always block -----//
    //s = 0; r = 1; a = 15;
    set_to_mergecand_list_hls_mergecand_list_pred_flag_4_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_pred_flag_4_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_pred_flag_4_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_pred_flag_4_r <= set_to_mergecand_list_hls_mergecand_list_pred_flag_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1300) always block -----//
    //s = 5; r = 1; a = 15;
    set_to_mergecand_list_hls_mergecand_list_mv0_x_0_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv0_x_0_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv0_x_0_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv0_x_0_r <= set_to_mergecand_list_hls_mergecand_list_mv0_x_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1302) always block -----//
    //s = 5; r = 0; a = 16;
    set_to_mergecand_list_hls_mergecand_list_mv0_x_1_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv0_x_1_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv0_x_1_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv0_x_1_r <= set_to_mergecand_list_hls_mergecand_list_mv0_x_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1304) always block -----//
    //s = 6; r = 1; a = 14;
    set_to_mergecand_list_hls_mergecand_list_mv0_x_2_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv0_x_2_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv0_x_2_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv0_x_2_r <= set_to_mergecand_list_hls_mergecand_list_mv0_x_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1306) always block -----//
    //s = 6; r = 0; a = 15;
    set_to_mergecand_list_hls_mergecand_list_mv0_x_3_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv0_x_3_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv0_x_3_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv0_x_3_r <= set_to_mergecand_list_hls_mergecand_list_mv0_x_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1308) always block -----//
    //s = 7; r = 0; a = 13;
    set_to_mergecand_list_hls_mergecand_list_mv0_x_4_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv0_x_4_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv0_x_4_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv0_x_4_r <= set_to_mergecand_list_hls_mergecand_list_mv0_x_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1312) always block -----//
    //s = 8; r = 0; a = 15;
    set_to_mergecand_list_hls_mergecand_list_mv0_y_0_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv0_y_0_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv0_y_0_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv0_y_0_r <= set_to_mergecand_list_hls_mergecand_list_mv0_y_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1314) always block -----//
    //s = 8; r = 1; a = 15;
    set_to_mergecand_list_hls_mergecand_list_mv0_y_1_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv0_y_1_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv0_y_1_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv0_y_1_r <= set_to_mergecand_list_hls_mergecand_list_mv0_y_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1316) always block -----//
    //s = 9; r = 0; a = 15;
    set_to_mergecand_list_hls_mergecand_list_mv0_y_2_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv0_y_2_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv0_y_2_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv0_y_2_r <= set_to_mergecand_list_hls_mergecand_list_mv0_y_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1318) always block -----//
    //s = 9; r = 1; a = 15;
    set_to_mergecand_list_hls_mergecand_list_mv0_y_3_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv0_y_3_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv0_y_3_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv0_y_3_r <= set_to_mergecand_list_hls_mergecand_list_mv0_y_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1320) always block -----//
    //s = 10; r = 1; a = 12;
    set_to_mergecand_list_hls_mergecand_list_mv0_y_4_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv0_y_4_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv0_y_4_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv0_y_4_r <= set_to_mergecand_list_hls_mergecand_list_mv0_y_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1324) always block -----//
    //s = 11; r = 0; a = 10;
    set_to_mergecand_list_hls_mergecand_list_mv1_x_0_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv1_x_0_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv1_x_0_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv1_x_0_r <= set_to_mergecand_list_hls_mergecand_list_mv1_x_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1326) always block -----//
    //s = 11; r = 1; a = 10;
    set_to_mergecand_list_hls_mergecand_list_mv1_x_1_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv1_x_1_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv1_x_1_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv1_x_1_r <= set_to_mergecand_list_hls_mergecand_list_mv1_x_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1328) always block -----//
    //s = 12; r = 1; a = 11;
    set_to_mergecand_list_hls_mergecand_list_mv1_x_2_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv1_x_2_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv1_x_2_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv1_x_2_r <= set_to_mergecand_list_hls_mergecand_list_mv1_x_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1330) always block -----//
    //s = 12; r = 0; a = 12;
    set_to_mergecand_list_hls_mergecand_list_mv1_x_3_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv1_x_3_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv1_x_3_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv1_x_3_r <= set_to_mergecand_list_hls_mergecand_list_mv1_x_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1332) always block -----//
    //s = 13; r = 1; a = 10;
    set_to_mergecand_list_hls_mergecand_list_mv1_x_4_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv1_x_4_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv1_x_4_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv1_x_4_r <= set_to_mergecand_list_hls_mergecand_list_mv1_x_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1336) always block -----//
    //s = 14; r = 0; a = 13;
    set_to_mergecand_list_hls_mergecand_list_mv1_y_0_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv1_y_0_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv1_y_0_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv1_y_0_r <= set_to_mergecand_list_hls_mergecand_list_mv1_y_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1338) always block -----//
    //s = 14; r = 1; a = 13;
    set_to_mergecand_list_hls_mergecand_list_mv1_y_1_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv1_y_1_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv1_y_1_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv1_y_1_r <= set_to_mergecand_list_hls_mergecand_list_mv1_y_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1340) always block -----//
    //s = 15; r = 0; a = 12;
    set_to_mergecand_list_hls_mergecand_list_mv1_y_2_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv1_y_2_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv1_y_2_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv1_y_2_r <= set_to_mergecand_list_hls_mergecand_list_mv1_y_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1342) always block -----//
    //s = 15; r = 1; a = 12;
    set_to_mergecand_list_hls_mergecand_list_mv1_y_3_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv1_y_3_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv1_y_3_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv1_y_3_r <= set_to_mergecand_list_hls_mergecand_list_mv1_y_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1344) always block -----//
    //s = 16; r = 0; a = 8;
    set_to_mergecand_list_hls_mergecand_list_mv1_y_4_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_mv1_y_4_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_mv1_y_4_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_mv1_y_4_r <= set_to_mergecand_list_hls_mergecand_list_mv1_y_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1348) always block -----//
    //s = 17; r = 0; a = 7;
    set_to_mergecand_list_hls_mergecand_list_poc0_0_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_poc0_0_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_poc0_0_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_poc0_0_r <= set_to_mergecand_list_hls_mergecand_list_poc0_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1352) always block -----//
    //s = 18; r = 1; a = 6;
    set_to_mergecand_list_hls_mergecand_list_poc0_1_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_poc0_1_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_poc0_1_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_poc0_1_r <= set_to_mergecand_list_hls_mergecand_list_poc0_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1356) always block -----//
    //s = 19; r = 1; a = 7;
    set_to_mergecand_list_hls_mergecand_list_poc0_2_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_poc0_2_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_poc0_2_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_poc0_2_r <= set_to_mergecand_list_hls_mergecand_list_poc0_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1360) always block -----//
    //s = 20; r = 1; a = 9;
    set_to_mergecand_list_hls_mergecand_list_poc0_3_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_poc0_3_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_poc0_3_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_poc0_3_r <= set_to_mergecand_list_hls_mergecand_list_poc0_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1364) always block -----//
    //s = 21; r = 0; a = 10;
    set_to_mergecand_list_hls_mergecand_list_poc0_4_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_poc0_4_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_poc0_4_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_poc0_4_r <= set_to_mergecand_list_hls_mergecand_list_poc0_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1368) always block -----//
    //s = 22; r = 0; a = 10;
    set_to_mergecand_list_hls_mergecand_list_poc1_0_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_poc1_0_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_poc1_0_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_poc1_0_r <= set_to_mergecand_list_hls_mergecand_list_poc1_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1372) always block -----//
    //s = 23; r = 0; a = 8;
    set_to_mergecand_list_hls_mergecand_list_poc1_1_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_poc1_1_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_poc1_1_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_poc1_1_r <= set_to_mergecand_list_hls_mergecand_list_poc1_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1376) always block -----//
    //s = 24; r = 0; a = 6;
    set_to_mergecand_list_hls_mergecand_list_poc1_2_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_poc1_2_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_poc1_2_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_poc1_2_r <= set_to_mergecand_list_hls_mergecand_list_poc1_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1380) always block -----//
    //s = 25; r = 0; a = 6;
    set_to_mergecand_list_hls_mergecand_list_poc1_3_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_poc1_3_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_poc1_3_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_poc1_3_r <= set_to_mergecand_list_hls_mergecand_list_poc1_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1384) always block -----//
    //s = 26; r = 0; a = 6;
    set_to_mergecand_list_hls_mergecand_list_poc1_4_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_poc1_4_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_poc1_4_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_poc1_4_r <= set_to_mergecand_list_hls_mergecand_list_poc1_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1388) always block -----//
    //s = 27; r = 1; a = 11;
    set_to_mergecand_list_hls_mergecand_list_ref_idx0_0_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx0_0_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx0_0_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_ref_idx0_0_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx0_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1389) always block -----//
    //s = 27; r = 0; a = 12;
    set_to_mergecand_list_hls_mergecand_list_ref_idx0_1_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx0_1_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx0_1_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_ref_idx0_1_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx0_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1390) always block -----//
    //s = 27; r = 1; a = 12;
    set_to_mergecand_list_hls_mergecand_list_ref_idx0_2_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx0_2_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx0_2_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_ref_idx0_2_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx0_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1391) always block -----//
    //s = 27; r = 0; a = 13;
    set_to_mergecand_list_hls_mergecand_list_ref_idx0_3_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx0_3_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx0_3_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_ref_idx0_3_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx0_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1392) always block -----//
    //s = 28; r = 1; a = 6;
    set_to_mergecand_list_hls_mergecand_list_ref_idx0_4_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx0_4_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx0_4_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_ref_idx0_4_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx0_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1396) always block -----//
    //s = 29; r = 0; a = 13;
    set_to_mergecand_list_hls_mergecand_list_ref_idx1_0_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx1_0_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx1_0_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_ref_idx1_0_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx1_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1397) always block -----//
    //s = 29; r = 1; a = 13;
    set_to_mergecand_list_hls_mergecand_list_ref_idx1_1_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx1_1_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx1_1_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_ref_idx1_1_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx1_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1398) always block -----//
    //s = 29; r = 0; a = 14;
    set_to_mergecand_list_hls_mergecand_list_ref_idx1_2_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx1_2_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx1_2_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_ref_idx1_2_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx1_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1399) always block -----//
    //s = 29; r = 1; a = 14;
    set_to_mergecand_list_hls_mergecand_list_ref_idx1_3_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx1_3_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx1_3_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_ref_idx1_3_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx1_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1400) always block -----//
    //s = 30; r = 1; a = 4;
    set_to_mergecand_list_hls_mergecand_list_ref_idx1_4_ap_vld_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx1_4_ap_vld;
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx1_4_ap_vld) begin
        set_to_mergecand_list_hls_mergecand_list_ref_idx1_4_r <= set_to_mergecand_list_hls_mergecand_list_ref_idx1_4;
    end
`endif
    //============================================================
    //compare_mv_ref_idx_hls       (f = 47)
    //============================================================
`ifdef enable_connect_compare_mv_ref_idx_hls
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 1; a = 12;
    if (scalar_rdat_vld[11][1][12]) begin
        compare_mv_ref_idx_hls_log2_width <= scalar_rdat  [11][1][12];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 0; a = 7;
    if (scalar_rdat_vld[3][0][7]) begin
        compare_mv_ref_idx_hls_min_pu_width <= scalar_rdat  [3][0][7];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 1; a = 17;
    if (scalar_rdat_vld[29][1][17]) begin
        compare_mv_ref_idx_hls_log2_min_pu_size <= scalar_rdat  [29][1][17];
    end
`endif
    //============================================================
    //combined_bi_predictive_merge_candidates_hls       (f = 48)
    //============================================================
`ifdef enable_connect_combined_bi_predictive_merge_candidates_hls
    //------READ (scalar, complete partition, global adr = 1300) always block-----//
    //s = 5; r = 0; a = 18;
    if (scalar_rdat_vld[5][0][18]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_o_r <= scalar_rdat  [5][0][18];
    end
    //------WRITE (scalar, complete partition, global adr = 1300) always block -----//
    //s = 5; r = 0; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_o;
    end
    //------READ (scalar, complete partition, global adr = 1302) always block-----//
    //s = 5; r = 1; a = 17;
    if (scalar_rdat_vld[5][1][17]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_o_r <= scalar_rdat  [5][1][17];
    end
    //------WRITE (scalar, complete partition, global adr = 1302) always block -----//
    //s = 5; r = 1; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_o;
    end
    //------READ (scalar, complete partition, global adr = 1304) always block-----//
    //s = 6; r = 1; a = 16;
    if (scalar_rdat_vld[6][1][16]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_o_r <= scalar_rdat  [6][1][16];
    end
    //------WRITE (scalar, complete partition, global adr = 1304) always block -----//
    //s = 6; r = 0; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_o;
    end
    //------READ (scalar, complete partition, global adr = 1306) always block-----//
    //s = 6; r = 0; a = 18;
    if (scalar_rdat_vld[6][0][18]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_o_r <= scalar_rdat  [6][0][18];
    end
    //------WRITE (scalar, complete partition, global adr = 1306) always block -----//
    //s = 6; r = 1; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_o;
    end
    //------WRITE (scalar, complete partition, global adr = 1308) always block -----//
    //s = 7; r = 1; a = 0;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_4_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_4_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_4_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_4_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_4;
    end
    //------READ (scalar, complete partition, global adr = 1312) always block-----//
    //s = 8; r = 0; a = 17;
    if (scalar_rdat_vld[8][0][17]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_o_r <= scalar_rdat  [8][0][17];
    end
    //------WRITE (scalar, complete partition, global adr = 1312) always block -----//
    //s = 8; r = 0; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_o;
    end
    //------READ (scalar, complete partition, global adr = 1314) always block-----//
    //s = 8; r = 1; a = 17;
    if (scalar_rdat_vld[8][1][17]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_o_r <= scalar_rdat  [8][1][17];
    end
    //------WRITE (scalar, complete partition, global adr = 1314) always block -----//
    //s = 8; r = 1; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_o;
    end
    //------READ (scalar, complete partition, global adr = 1316) always block-----//
    //s = 9; r = 1; a = 17;
    if (scalar_rdat_vld[9][1][17]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_o_r <= scalar_rdat  [9][1][17];
    end
    //------WRITE (scalar, complete partition, global adr = 1316) always block -----//
    //s = 9; r = 0; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_o;
    end
    //------READ (scalar, complete partition, global adr = 1318) always block-----//
    //s = 9; r = 0; a = 18;
    if (scalar_rdat_vld[9][0][18]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_o_r <= scalar_rdat  [9][0][18];
    end
    //------WRITE (scalar, complete partition, global adr = 1318) always block -----//
    //s = 9; r = 1; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_o;
    end
    //------WRITE (scalar, complete partition, global adr = 1320) always block -----//
    //s = 10; r = 1; a = 0;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_4_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_4_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_4_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_4_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_4;
    end
    //------READ (scalar, complete partition, global adr = 1324) always block-----//
    //s = 11; r = 1; a = 11;
    if (scalar_rdat_vld[11][1][11]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_o_r <= scalar_rdat  [11][1][11];
    end
    //------WRITE (scalar, complete partition, global adr = 1324) always block -----//
    //s = 11; r = 0; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_o;
    end
    //------READ (scalar, complete partition, global adr = 1326) always block-----//
    //s = 11; r = 0; a = 12;
    if (scalar_rdat_vld[11][0][12]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_o_r <= scalar_rdat  [11][0][12];
    end
    //------WRITE (scalar, complete partition, global adr = 1326) always block -----//
    //s = 11; r = 1; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_o;
    end
    //------READ (scalar, complete partition, global adr = 1328) always block-----//
    //s = 12; r = 1; a = 12;
    if (scalar_rdat_vld[12][1][12]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_o_r <= scalar_rdat  [12][1][12];
    end
    //------WRITE (scalar, complete partition, global adr = 1328) always block -----//
    //s = 12; r = 0; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_o;
    end
    //------READ (scalar, complete partition, global adr = 1330) always block-----//
    //s = 12; r = 0; a = 14;
    if (scalar_rdat_vld[12][0][14]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_o_r <= scalar_rdat  [12][0][14];
    end
    //------WRITE (scalar, complete partition, global adr = 1330) always block -----//
    //s = 12; r = 1; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_o;
    end
    //------WRITE (scalar, complete partition, global adr = 1332) always block -----//
    //s = 13; r = 1; a = 0;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_4_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_4_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_4_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_4_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_4;
    end
    //------READ (scalar, complete partition, global adr = 1336) always block-----//
    //s = 14; r = 0; a = 14;
    if (scalar_rdat_vld[14][0][14]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_o_r <= scalar_rdat  [14][0][14];
    end
    //------WRITE (scalar, complete partition, global adr = 1336) always block -----//
    //s = 14; r = 0; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_o;
    end
    //------READ (scalar, complete partition, global adr = 1338) always block-----//
    //s = 14; r = 1; a = 14;
    if (scalar_rdat_vld[14][1][14]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_o_r <= scalar_rdat  [14][1][14];
    end
    //------WRITE (scalar, complete partition, global adr = 1338) always block -----//
    //s = 14; r = 1; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_o;
    end
    //------READ (scalar, complete partition, global adr = 1340) always block-----//
    //s = 15; r = 0; a = 13;
    if (scalar_rdat_vld[15][0][13]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_o_r <= scalar_rdat  [15][0][13];
    end
    //------WRITE (scalar, complete partition, global adr = 1340) always block -----//
    //s = 15; r = 0; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_o;
    end
    //------READ (scalar, complete partition, global adr = 1342) always block-----//
    //s = 15; r = 1; a = 13;
    if (scalar_rdat_vld[15][1][13]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_o_r <= scalar_rdat  [15][1][13];
    end
    //------WRITE (scalar, complete partition, global adr = 1342) always block -----//
    //s = 15; r = 1; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_o;
    end
    //------WRITE (scalar, complete partition, global adr = 1344) always block -----//
    //s = 16; r = 1; a = 0;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_4_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_4_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_4_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_4_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_4;
    end
    //------READ (scalar, complete partition, global adr = 1348) always block-----//
    //s = 17; r = 0; a = 9;
    if (scalar_rdat_vld[17][0][9]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_o_r <= scalar_rdat  [17][0][9];
    end
    //------WRITE (scalar, complete partition, global adr = 1348) always block -----//
    //s = 17; r = 1; a = 0;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_o;
    end
    //------READ (scalar, complete partition, global adr = 1352) always block-----//
    //s = 18; r = 0; a = 8;
    if (scalar_rdat_vld[18][0][8]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_o_r <= scalar_rdat  [18][0][8];
    end
    //------WRITE (scalar, complete partition, global adr = 1352) always block -----//
    //s = 18; r = 1; a = 0;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_o;
    end
    //------READ (scalar, complete partition, global adr = 1356) always block-----//
    //s = 19; r = 1; a = 8;
    if (scalar_rdat_vld[19][1][8]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_o_r <= scalar_rdat  [19][1][8];
    end
    //------WRITE (scalar, complete partition, global adr = 1356) always block -----//
    //s = 19; r = 1; a = 0;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_o;
    end
    //------READ (scalar, complete partition, global adr = 1360) always block-----//
    //s = 20; r = 0; a = 11;
    if (scalar_rdat_vld[20][0][11]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_o_r <= scalar_rdat  [20][0][11];
    end
    //------WRITE (scalar, complete partition, global adr = 1360) always block -----//
    //s = 20; r = 0; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_o;
    end
    //------WRITE (scalar, complete partition, global adr = 1364) always block -----//
    //s = 21; r = 1; a = 0;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_4_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_4_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_4_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_4_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_4;
    end
    //------READ (scalar, complete partition, global adr = 1368) always block-----//
    //s = 22; r = 0; a = 12;
    if (scalar_rdat_vld[22][0][12]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_o_r <= scalar_rdat  [22][0][12];
    end
    //------WRITE (scalar, complete partition, global adr = 1368) always block -----//
    //s = 22; r = 1; a = 0;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_o;
    end
    //------READ (scalar, complete partition, global adr = 1372) always block-----//
    //s = 23; r = 1; a = 8;
    if (scalar_rdat_vld[23][1][8]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_o_r <= scalar_rdat  [23][1][8];
    end
    //------WRITE (scalar, complete partition, global adr = 1372) always block -----//
    //s = 23; r = 1; a = 0;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_o;
    end
    //------READ (scalar, complete partition, global adr = 1376) always block-----//
    //s = 24; r = 1; a = 6;
    if (scalar_rdat_vld[24][1][6]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_o_r <= scalar_rdat  [24][1][6];
    end
    //------WRITE (scalar, complete partition, global adr = 1376) always block -----//
    //s = 24; r = 1; a = 0;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_o;
    end
    //------READ (scalar, complete partition, global adr = 1380) always block-----//
    //s = 25; r = 1; a = 6;
    if (scalar_rdat_vld[25][1][6]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_o_r <= scalar_rdat  [25][1][6];
    end
    //------WRITE (scalar, complete partition, global adr = 1380) always block -----//
    //s = 25; r = 1; a = 0;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_o;
    end
    //------WRITE (scalar, complete partition, global adr = 1384) always block -----//
    //s = 26; r = 1; a = 0;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_4_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_4_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_4_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_4_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_4;
    end
    //------READ (scalar, complete partition, global adr = 1388) always block-----//
    //s = 27; r = 0; a = 14;
    if (scalar_rdat_vld[27][0][14]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_o_r <= scalar_rdat  [27][0][14];
    end
    //------WRITE (scalar, complete partition, global adr = 1388) always block -----//
    //s = 27; r = 0; a = 2;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_o;
    end
    //------READ (scalar, complete partition, global adr = 1389) always block-----//
    //s = 27; r = 1; a = 13;
    if (scalar_rdat_vld[27][1][13]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_o_r <= scalar_rdat  [27][1][13];
    end
    //------WRITE (scalar, complete partition, global adr = 1389) always block -----//
    //s = 27; r = 1; a = 2;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_o;
    end
    //------READ (scalar, complete partition, global adr = 1390) always block-----//
    //s = 27; r = 0; a = 15;
    if (scalar_rdat_vld[27][0][15]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_o_r <= scalar_rdat  [27][0][15];
    end
    //------WRITE (scalar, complete partition, global adr = 1390) always block -----//
    //s = 27; r = 0; a = 3;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_o;
    end
    //------READ (scalar, complete partition, global adr = 1391) always block-----//
    //s = 27; r = 1; a = 14;
    if (scalar_rdat_vld[27][1][14]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_o_r <= scalar_rdat  [27][1][14];
    end
    //------WRITE (scalar, complete partition, global adr = 1391) always block -----//
    //s = 27; r = 1; a = 3;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_o;
    end
    //------WRITE (scalar, complete partition, global adr = 1392) always block -----//
    //s = 28; r = 0; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_4_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_4_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_4_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_4_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_4;
    end
    //------READ (scalar, complete partition, global adr = 1396) always block-----//
    //s = 29; r = 1; a = 15;
    if (scalar_rdat_vld[29][1][15]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_o_r <= scalar_rdat  [29][1][15];
    end
    //------WRITE (scalar, complete partition, global adr = 1396) always block -----//
    //s = 29; r = 0; a = 2;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_o;
    end
    //------READ (scalar, complete partition, global adr = 1397) always block-----//
    //s = 29; r = 0; a = 16;
    if (scalar_rdat_vld[29][0][16]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_o_r <= scalar_rdat  [29][0][16];
    end
    //------WRITE (scalar, complete partition, global adr = 1397) always block -----//
    //s = 29; r = 1; a = 2;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_o;
    end
    //------READ (scalar, complete partition, global adr = 1398) always block-----//
    //s = 29; r = 1; a = 16;
    if (scalar_rdat_vld[29][1][16]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_o_r <= scalar_rdat  [29][1][16];
    end
    //------WRITE (scalar, complete partition, global adr = 1398) always block -----//
    //s = 29; r = 0; a = 3;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_o;
    end
    //------READ (scalar, complete partition, global adr = 1399) always block-----//
    //s = 29; r = 0; a = 17;
    if (scalar_rdat_vld[29][0][17]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_o_r <= scalar_rdat  [29][0][17];
    end
    //------WRITE (scalar, complete partition, global adr = 1399) always block -----//
    //s = 29; r = 1; a = 3;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_o;
    end
    //------WRITE (scalar, complete partition, global adr = 1400) always block -----//
    //s = 30; r = 0; a = 1;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_4_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_4_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_4_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_4_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_4;
    end
    //------READ (scalar, complete partition, global adr = 1404) always block-----//
    //s = 31; r = 1; a = 14;
    if (scalar_rdat_vld[31][1][14]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_o_r <= scalar_rdat  [31][1][14];
    end
    //------WRITE (scalar, complete partition, global adr = 1404) always block -----//
    //s = 31; r = 0; a = 2;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_o;
    end
    //------READ (scalar, complete partition, global adr = 1405) always block-----//
    //s = 31; r = 0; a = 16;
    if (scalar_rdat_vld[31][0][16]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_o_r <= scalar_rdat  [31][0][16];
    end
    //------WRITE (scalar, complete partition, global adr = 1405) always block -----//
    //s = 31; r = 1; a = 2;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_o;
    end
    //------READ (scalar, complete partition, global adr = 1406) always block-----//
    //s = 31; r = 1; a = 15;
    if (scalar_rdat_vld[31][1][15]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_o_r <= scalar_rdat  [31][1][15];
    end
    //------WRITE (scalar, complete partition, global adr = 1406) always block -----//
    //s = 31; r = 0; a = 3;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_o;
    end
    //------READ (scalar, complete partition, global adr = 1407) always block-----//
    //s = 31; r = 0; a = 17;
    if (scalar_rdat_vld[31][0][17]) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_o_r <= scalar_rdat  [31][0][17];
    end
    //------WRITE (scalar, complete partition, global adr = 1407) always block -----//
    //s = 31; r = 1; a = 3;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_o_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_o;
    end
    //------WRITE (scalar, complete partition, global adr = 1408) always block -----//
    //s = 0; r = 1; a = 0;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_4_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_4_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_4_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_4_r <= combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_4;
    end
    //------READ (scalar, global adr = 132) always block-----//
    //s = 1; r = 1; a = 9;
    if (scalar_rdat_vld[1][1][9]) begin
        combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_o_r <= scalar_rdat  [1][1][9];    //bidir
    end
    //------WRITE (scalar, global adr = 132) always block-----//
    //s = 1; r = 1; a = 0;
    combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_o_ap_vld_r <= combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_o_ap_vld;
    if (combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_o_ap_vld) begin
        combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_o_r <= combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_o;
    end
    //------READ (scalar, global adr = 1444) always block-----//
    //s = 9; r = 1; a = 18;
    if (scalar_rdat_vld[9][1][18]) begin
        combined_bi_predictive_merge_candidates_hls_merge_idx <= scalar_rdat  [9][1][18];
    end
`endif
    //============================================================
    //ff_hevc_luma_mv_merge_mode_hls       (f = 49)
    //============================================================
`ifdef enable_connect_ff_hevc_luma_mv_merge_mode_hls
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 1; a = 13;
    if (scalar_rdat_vld[11][1][13]) begin
        ff_hevc_luma_mv_merge_mode_hls_log2_width <= scalar_rdat  [11][1][13];
    end
    //------READ (scalar, global adr = 1208) always block-----//
    //s = 14; r = 0; a = 15;
    if (scalar_rdat_vld[14][0][15]) begin
        ff_hevc_luma_mv_merge_mode_hls_collocated_list <= scalar_rdat  [14][0][15];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 1; a = 7;
    if (scalar_rdat_vld[3][1][7]) begin
        ff_hevc_luma_mv_merge_mode_hls_min_pu_width <= scalar_rdat  [3][1][7];
    end
    //------READ (scalar, global adr = 600) always block-----//
    //s = 22; r = 0; a = 13;
    if (scalar_rdat_vld[22][0][13]) begin
        ff_hevc_luma_mv_merge_mode_hls_cand_bottom_left <= scalar_rdat  [22][0][13];
    end
    //------READ (scalar, global adr = 584) always block-----//
    //s = 18; r = 1; a = 7;
    if (scalar_rdat_vld[18][1][7]) begin
        ff_hevc_luma_mv_merge_mode_hls_cand_left <= scalar_rdat  [18][1][7];
    end
    //------READ (scalar, global adr = 588) always block-----//
    //s = 19; r = 0; a = 9;
    if (scalar_rdat_vld[19][0][9]) begin
        ff_hevc_luma_mv_merge_mode_hls_cand_up_left <= scalar_rdat  [19][0][9];
    end
    //------READ (scalar, global adr = 580) always block-----//
    //s = 17; r = 1; a = 9;
    if (scalar_rdat_vld[17][1][9]) begin
        ff_hevc_luma_mv_merge_mode_hls_cand_up <= scalar_rdat  [17][1][9];
    end
    //------READ (scalar, global adr = 596) always block-----//
    //s = 21; r = 0; a = 12;
    if (scalar_rdat_vld[21][0][12]) begin
        ff_hevc_luma_mv_merge_mode_hls_cand_up_right <= scalar_rdat  [21][0][12];
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 0; a = 10;
    if (scalar_rdat_vld[17][0][10]) begin
        ff_hevc_luma_mv_merge_mode_hls_slice_type <= scalar_rdat  [17][0][10];
    end
    //------READ (scalar, global adr = 564) always block-----//
    //s = 13; r = 0; a = 11;
    if (scalar_rdat_vld[13][0][11]) begin
        ff_hevc_luma_mv_merge_mode_hls_part_mode <= scalar_rdat  [13][0][11];
    end
    //------READ (scalar, complete partition, global adr = 1292) always block-----//
    //s = 3; r = 0; a = 9;
    if (scalar_rdat_vld[3][0][9]) begin
        ff_hevc_luma_mv_merge_mode_hls_nb_refs_0 <= scalar_rdat  [3][0][9];
    end
    //------READ (scalar, complete partition, global adr = 1296) always block-----//
    //s = 4; r = 1; a = 10;
    if (scalar_rdat_vld[4][1][10]) begin
        ff_hevc_luma_mv_merge_mode_hls_nb_refs_1 <= scalar_rdat  [4][1][10];
    end
    //------READ (scalar, global adr = 132) always block-----//
    //s = 1; r = 1; a = 11;
    if (scalar_rdat_vld[1][1][11]) begin
        ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_o_r <= scalar_rdat  [1][1][11];    //bidir
    end
    //------WRITE (scalar, global adr = 132) always block-----//
    //s = 1; r = 0; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_o_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_o_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_o_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_o_r <= ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_o;
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 0; a = 19;
    if (scalar_rdat_vld[29][0][19]) begin
        ff_hevc_luma_mv_merge_mode_hls_log2_min_pu_size <= scalar_rdat  [29][0][19];
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 1; a = 17;
    if (scalar_rdat_vld[6][1][17]) begin
        ff_hevc_luma_mv_merge_mode_hls_width <= scalar_rdat  [6][1][17];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 1; a = 9;
    if (scalar_rdat_vld[19][1][9]) begin
        ff_hevc_luma_mv_merge_mode_hls_height <= scalar_rdat  [19][1][9];
    end
    //------READ (scalar, global adr = 456) always block-----//
    //s = 18; r = 0; a = 9;
    if (scalar_rdat_vld[18][0][9]) begin
        ff_hevc_luma_mv_merge_mode_hls_slice_temporal_mvp_enabled_flag <= scalar_rdat  [18][0][9];
    end
    //------READ (scalar, global adr = 1220) always block-----//
    //s = 17; r = 1; a = 10;
    if (scalar_rdat_vld[17][1][10]) begin
        ff_hevc_luma_mv_merge_mode_hls_mvLXCol_x <= scalar_rdat  [17][1][10];
    end
    //------READ (scalar, global adr = 1224) always block-----//
    //s = 18; r = 1; a = 8;
    if (scalar_rdat_vld[18][1][8]) begin
        ff_hevc_luma_mv_merge_mode_hls_mvLXCol_y <= scalar_rdat  [18][1][8];
    end
    //------READ (scalar, global adr = 1204) always block-----//
    //s = 13; r = 1; a = 11;
    if (scalar_rdat_vld[13][1][11]) begin
        ff_hevc_luma_mv_merge_mode_hls_ref_poc <= scalar_rdat  [13][1][11];
    end
    //------WRITE (scalar, global adr = 1232) always block-----//
    //s = 20; r = 1; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_zero_idx_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_zero_idx_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_zero_idx_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_zero_idx_r <= ff_hevc_luma_mv_merge_mode_hls_zero_idx;
    end
    //------READ (scalar, global adr = 1196) always block-----//
    //s = 11; r = 0; a = 14;
    if (scalar_rdat_vld[11][0][14]) begin
        ff_hevc_luma_mv_merge_mode_hls_refPicList_0_nb_refs <= scalar_rdat  [11][0][14];
    end
    //------READ (scalar, global adr = 1200) always block-----//
    //s = 12; r = 0; a = 15;
    if (scalar_rdat_vld[12][0][15]) begin
        ff_hevc_luma_mv_merge_mode_hls_refPicList_1_nb_refs <= scalar_rdat  [12][0][15];
    end
    //------READ (scalar, global adr = 1548) always block-----//
    //s = 3; r = 1; a = 8;
    if (scalar_rdat_vld[3][1][8]) begin
        ff_hevc_luma_mv_merge_mode_hls_poc <= scalar_rdat  [3][1][8];
    end
    //------READ (scalar, global adr = 1552) always block-----//
    //s = 4; r = 0; a = 11;
    if (scalar_rdat_vld[4][0][11]) begin
        ff_hevc_luma_mv_merge_mode_hls_max_num_merge_cand <= scalar_rdat  [4][0][11];
    end
    //------READ (scalar, global adr = 160) always block-----//
    //s = 8; r = 0; a = 18;
    if (scalar_rdat_vld[8][0][18]) begin
        ff_hevc_luma_mv_merge_mode_hls_nPbW_o_r <= scalar_rdat  [8][0][18];    //bidir
    end
    //------WRITE (scalar, global adr = 160) always block-----//
    //s = 8; r = 0; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_nPbW_o_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_nPbW_o_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_nPbW_o_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_nPbW_o_r <= ff_hevc_luma_mv_merge_mode_hls_nPbW_o;
    end
    //------READ (scalar, global adr = 164) always block-----//
    //s = 9; r = 0; a = 19;
    if (scalar_rdat_vld[9][0][19]) begin
        ff_hevc_luma_mv_merge_mode_hls_nPbH_o_r <= scalar_rdat  [9][0][19];    //bidir
    end
    //------WRITE (scalar, global adr = 164) always block-----//
    //s = 9; r = 0; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_nPbH_o_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_nPbH_o_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_nPbH_o_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_nPbH_o_r <= ff_hevc_luma_mv_merge_mode_hls_nPbH_o;
    end
    //------READ (scalar, global adr = 1544) always block-----//
    //s = 2; r = 1; a = 7;
    if (scalar_rdat_vld[2][1][7]) begin
        ff_hevc_luma_mv_merge_mode_hls_part_idx <= scalar_rdat  [2][1][7];
    end
    //------READ (scalar, global adr = 1444) always block-----//
    //s = 9; r = 1; a = 19;
    if (scalar_rdat_vld[9][1][19]) begin
        ff_hevc_luma_mv_merge_mode_hls_merge_idx <= scalar_rdat  [9][1][19];
    end
    //------READ (scalar, global adr = 1236) always block-----//
    //s = 21; r = 1; a = 11;
    if (scalar_rdat_vld[21][1][11]) begin
        ff_hevc_luma_mv_merge_mode_hls_xm_log2_parallel_merge_level <= scalar_rdat  [21][1][11];
    end
    //------READ (scalar, global adr = 544) always block-----//
    //s = 8; r = 1; a = 18;
    if (scalar_rdat_vld[8][1][18]) begin
        ff_hevc_luma_mv_merge_mode_hls_xm_x <= scalar_rdat  [8][1][18];
    end
    //------READ (scalar, global adr = 548) always block-----//
    //s = 9; r = 0; a = 20;
    if (scalar_rdat_vld[9][0][20]) begin
        ff_hevc_luma_mv_merge_mode_hls_xm_y <= scalar_rdat  [9][0][20];
    end
    //------READ (scalar, global adr = 552) always block-----//
    //s = 10; r = 0; a = 15;
    if (scalar_rdat_vld[10][0][15]) begin
        ff_hevc_luma_mv_merge_mode_hls_xm_x0_o_r <= scalar_rdat  [10][0][15];    //bidir
    end
    //------WRITE (scalar, global adr = 552) always block-----//
    //s = 10; r = 0; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_xm_x0_o_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_xm_x0_o_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_xm_x0_o_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_xm_x0_o_r <= ff_hevc_luma_mv_merge_mode_hls_xm_x0_o;
    end
    //------READ (scalar, global adr = 556) always block-----//
    //s = 11; r = 1; a = 14;
    if (scalar_rdat_vld[11][1][14]) begin
        ff_hevc_luma_mv_merge_mode_hls_xm_y0_o_r <= scalar_rdat  [11][1][14];    //bidir
    end
    //------WRITE (scalar, global adr = 556) always block-----//
    //s = 11; r = 0; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_xm_y0_o_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_xm_y0_o_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_xm_y0_o_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_xm_y0_o_r <= ff_hevc_luma_mv_merge_mode_hls_xm_y0_o;
    end
    //------WRITE (scalar, global adr = 1228) always block-----//
    //s = 19; r = 0; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_xm_dbg_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_xm_dbg_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_xm_dbg_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_xm_dbg_r <= ff_hevc_luma_mv_merge_mode_hls_xm_dbg;
    end
    //------WRITE (scalar, complete partition, global adr = 1300) always block -----//
    //s = 5; r = 0; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_0_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_0_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_0_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_0_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1302) always block -----//
    //s = 5; r = 1; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_1_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_1_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_1_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_1_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1304) always block -----//
    //s = 6; r = 0; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_2_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_2_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_2_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_2_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1306) always block -----//
    //s = 6; r = 1; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_3_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_3_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_3_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_3_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1308) always block -----//
    //s = 7; r = 0; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_4_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_4_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_4_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_4_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1312) always block -----//
    //s = 8; r = 1; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_0_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_0_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_0_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_0_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1314) always block -----//
    //s = 8; r = 0; a = 3;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_1_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_1_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_1_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_1_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1316) always block -----//
    //s = 9; r = 1; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_2_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_2_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_2_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_2_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1318) always block -----//
    //s = 9; r = 0; a = 3;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_3_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_3_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_3_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_3_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1320) always block -----//
    //s = 10; r = 1; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_4_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_4_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_4_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_4_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1324) always block -----//
    //s = 11; r = 1; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_0_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_0_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_0_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_0_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1326) always block -----//
    //s = 11; r = 0; a = 3;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_1_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_1_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_1_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_1_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1328) always block -----//
    //s = 12; r = 0; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_2_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_2_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_2_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_2_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1330) always block -----//
    //s = 12; r = 1; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_3_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_3_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_3_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_3_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1332) always block -----//
    //s = 13; r = 0; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_4_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_4_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_4_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_4_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1336) always block -----//
    //s = 14; r = 0; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_0_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_0_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_0_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_0_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1338) always block -----//
    //s = 14; r = 1; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_1_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_1_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_1_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_1_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1340) always block -----//
    //s = 15; r = 0; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_2_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_2_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_2_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_2_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1342) always block -----//
    //s = 15; r = 1; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_3_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_3_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_3_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_3_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1344) always block -----//
    //s = 16; r = 0; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_4_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_4_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_4_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_4_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1348) always block -----//
    //s = 17; r = 0; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_0_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_0_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_0_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_0_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1352) always block -----//
    //s = 18; r = 0; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_1_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_1_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_1_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_1_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1356) always block -----//
    //s = 19; r = 1; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_2_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_2_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_2_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_2_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1360) always block -----//
    //s = 20; r = 0; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_3_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_3_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_3_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_3_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1364) always block -----//
    //s = 21; r = 0; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_4_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_4_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_4_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_4_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1368) always block -----//
    //s = 22; r = 0; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_0_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_0_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_0_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_0_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1372) always block -----//
    //s = 23; r = 0; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_1_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_1_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_1_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_1_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1376) always block -----//
    //s = 24; r = 0; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_2_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_2_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_2_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_2_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1380) always block -----//
    //s = 25; r = 0; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_3_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_3_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_3_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_3_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1384) always block -----//
    //s = 26; r = 0; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_4_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_4_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_4_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_4_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1388) always block -----//
    //s = 27; r = 0; a = 4;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_0_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_0_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_0_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_0_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1389) always block -----//
    //s = 27; r = 1; a = 4;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_1_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_1_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_1_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_1_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1390) always block -----//
    //s = 27; r = 0; a = 5;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_2_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_2_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_2_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_2_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1391) always block -----//
    //s = 27; r = 1; a = 5;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_3_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_3_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_3_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_3_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1392) always block -----//
    //s = 28; r = 1; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_4_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_4_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_4_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_4_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1396) always block -----//
    //s = 29; r = 1; a = 4;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_0_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_0_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_0_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_0_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1397) always block -----//
    //s = 29; r = 0; a = 5;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_1_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_1_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_1_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_1_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1398) always block -----//
    //s = 29; r = 1; a = 5;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_2_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_2_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_2_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_2_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1399) always block -----//
    //s = 29; r = 0; a = 6;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_3_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_3_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_3_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_3_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1400) always block -----//
    //s = 30; r = 0; a = 2;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_4_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_4_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_4_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_4_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_4;
    end
    //------WRITE (scalar, complete partition, global adr = 1404) always block -----//
    //s = 31; r = 0; a = 4;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_0_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_0_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_0_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_0_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_0;
    end
    //------WRITE (scalar, complete partition, global adr = 1405) always block -----//
    //s = 31; r = 1; a = 4;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_1_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_1_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_1_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_1_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_1;
    end
    //------WRITE (scalar, complete partition, global adr = 1406) always block -----//
    //s = 31; r = 0; a = 5;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_2_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_2_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_2_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_2_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_2;
    end
    //------WRITE (scalar, complete partition, global adr = 1407) always block -----//
    //s = 31; r = 1; a = 5;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_3_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_3_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_3_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_3_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_3;
    end
    //------WRITE (scalar, complete partition, global adr = 1408) always block -----//
    //s = 0; r = 0; a = 1;
    ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_4_ap_vld_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_4_ap_vld;
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_4_ap_vld) begin
        ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_4_r <= ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_4;
    end
`endif
    //============================================================
    //ff_hevc_luma_mv_mvp_mode_hls       (f = 50)
    //============================================================
`ifdef enable_connect_ff_hevc_luma_mv_mvp_mode_hls
    //------READ (scalar, global adr = 552) always block-----//
    //s = 10; r = 1; a = 15;
    if (scalar_rdat_vld[10][1][15]) begin
        ff_hevc_luma_mv_mvp_mode_hls_xm_x0 <= scalar_rdat  [10][1][15];
    end
    //------READ (scalar, global adr = 556) always block-----//
    //s = 11; r = 0; a = 15;
    if (scalar_rdat_vld[11][0][15]) begin
        ff_hevc_luma_mv_mvp_mode_hls_xm_y0 <= scalar_rdat  [11][0][15];
    end
    //------READ (scalar, global adr = 160) always block-----//
    //s = 8; r = 0; a = 19;
    if (scalar_rdat_vld[8][0][19]) begin
        ff_hevc_luma_mv_mvp_mode_hls_nPbW <= scalar_rdat  [8][0][19];
    end
    //------READ (scalar, global adr = 164) always block-----//
    //s = 9; r = 1; a = 20;
    if (scalar_rdat_vld[9][1][20]) begin
        ff_hevc_luma_mv_mvp_mode_hls_nPbH <= scalar_rdat  [9][1][20];
    end
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 1; a = 15;
    if (scalar_rdat_vld[11][1][15]) begin
        ff_hevc_luma_mv_mvp_mode_hls_log2_width <= scalar_rdat  [11][1][15];
    end
    //------READ (scalar, global adr = 1544) always block-----//
    //s = 2; r = 0; a = 9;
    if (scalar_rdat_vld[2][0][9]) begin
        ff_hevc_luma_mv_mvp_mode_hls_part_idx <= scalar_rdat  [2][0][9];
    end
    //------READ (scalar, global adr = 1548) always block-----//
    //s = 3; r = 0; a = 10;
    if (scalar_rdat_vld[3][0][10]) begin
        ff_hevc_luma_mv_mvp_mode_hls_poc <= scalar_rdat  [3][0][10];
    end
    //------READ (scalar, global adr = 456) always block-----//
    //s = 18; r = 0; a = 10;
    if (scalar_rdat_vld[18][0][10]) begin
        ff_hevc_luma_mv_mvp_mode_hls_slice_temporal_mvp_enabled_flag <= scalar_rdat  [18][0][10];
    end
    //------READ (scalar, global adr = 1444) always block-----//
    //s = 9; r = 0; a = 21;
    if (scalar_rdat_vld[9][0][21]) begin
        ff_hevc_luma_mv_mvp_mode_hls_merge_idx <= scalar_rdat  [9][0][21];
    end
    //------WRITE (scalar, global adr = 784) always block-----//
    //s = 4; r = 0; a = 0;
    ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_x_ap_vld_r <= ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_x_ap_vld;
    if (ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_x_ap_vld) begin
        ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_x_r <= ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_x;
    end
    //------WRITE (scalar, global adr = 788) always block-----//
    //s = 5; r = 0; a = 3;
    ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_y_ap_vld_r <= ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_y_ap_vld;
    if (ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_y_ap_vld) begin
        ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_y_r <= ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_y;
    end
    //------WRITE (scalar, global adr = 792) always block-----//
    //s = 6; r = 0; a = 3;
    ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_x_ap_vld_r <= ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_x_ap_vld;
    if (ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_x_ap_vld) begin
        ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_x_r <= ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_x;
    end
    //------WRITE (scalar, global adr = 796) always block-----//
    //s = 7; r = 1; a = 1;
    ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_y_ap_vld_r <= ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_y_ap_vld;
    if (ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_y_ap_vld) begin
        ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_y_r <= ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_y;
    end
    //------READ (scalar, global adr = 800) always block-----//
    //s = 8; r = 1; a = 19;
    if (scalar_rdat_vld[8][1][19]) begin
        ff_hevc_luma_mv_mvp_mode_hls_current_mv_poc_0 <= scalar_rdat  [8][1][19];
    end
    //------READ (scalar, global adr = 804) always block-----//
    //s = 9; r = 1; a = 21;
    if (scalar_rdat_vld[9][1][21]) begin
        ff_hevc_luma_mv_mvp_mode_hls_current_mv_poc_1 <= scalar_rdat  [9][1][21];
    end
    //------READ (scalar, global adr = 808) always block-----//
    //s = 10; r = 0; a = 16;
    if (scalar_rdat_vld[10][0][16]) begin
        ff_hevc_luma_mv_mvp_mode_hls_current_mv_ref_idx_0 <= scalar_rdat  [10][0][16];
    end
    //------READ (scalar, global adr = 812) always block-----//
    //s = 11; r = 0; a = 16;
    if (scalar_rdat_vld[11][0][16]) begin
        ff_hevc_luma_mv_mvp_mode_hls_current_mv_ref_idx_1 <= scalar_rdat  [11][0][16];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 1; a = 9;
    if (scalar_rdat_vld[3][1][9]) begin
        ff_hevc_luma_mv_mvp_mode_hls_min_pu_width <= scalar_rdat  [3][1][9];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 1; a = 19;
    if (scalar_rdat_vld[29][1][19]) begin
        ff_hevc_luma_mv_mvp_mode_hls_log2_min_pu_size <= scalar_rdat  [29][1][19];
    end
    //------READ (scalar, global adr = 1212) always block-----//
    //s = 15; r = 0; a = 14;
    if (scalar_rdat_vld[15][0][14]) begin
        ff_hevc_luma_mv_mvp_mode_hls_mxx_x <= scalar_rdat  [15][0][14];
    end
    //------READ (scalar, global adr = 1216) always block-----//
    //s = 16; r = 0; a = 9;
    if (scalar_rdat_vld[16][0][9]) begin
        ff_hevc_luma_mv_mvp_mode_hls_mxx_y <= scalar_rdat  [16][0][9];
    end
    //------READ (scalar, global adr = 888) always block-----//
    //s = 30; r = 1; a = 6;
    if (scalar_rdat_vld[30][1][6]) begin
        ff_hevc_luma_mv_mvp_mode_hls_mvp_lx_flag <= scalar_rdat  [30][1][6];
    end
    //------READ (scalar, global adr = 600) always block-----//
    //s = 22; r = 1; a = 12;
    if (scalar_rdat_vld[22][1][12]) begin
        ff_hevc_luma_mv_mvp_mode_hls_cand_bottom_left <= scalar_rdat  [22][1][12];
    end
    //------READ (scalar, global adr = 584) always block-----//
    //s = 18; r = 1; a = 9;
    if (scalar_rdat_vld[18][1][9]) begin
        ff_hevc_luma_mv_mvp_mode_hls_cand_left <= scalar_rdat  [18][1][9];
    end
    //------READ (scalar, global adr = 580) always block-----//
    //s = 17; r = 0; a = 11;
    if (scalar_rdat_vld[17][0][11]) begin
        ff_hevc_luma_mv_mvp_mode_hls_cand_up <= scalar_rdat  [17][0][11];
    end
    //------READ (scalar, global adr = 588) always block-----//
    //s = 19; r = 0; a = 10;
    if (scalar_rdat_vld[19][0][10]) begin
        ff_hevc_luma_mv_mvp_mode_hls_cand_up_left <= scalar_rdat  [19][0][10];
    end
    //------READ (scalar, global adr = 596) always block-----//
    //s = 21; r = 0; a = 13;
    if (scalar_rdat_vld[21][0][13]) begin
        ff_hevc_luma_mv_mvp_mode_hls_cand_up_right <= scalar_rdat  [21][0][13];
    end
    //------READ (scalar, global adr = 408) always block-----//
    //s = 6; r = 0; a = 19;
    if (scalar_rdat_vld[6][0][19]) begin
        ff_hevc_luma_mv_mvp_mode_hls_width <= scalar_rdat  [6][0][19];
    end
    //------READ (scalar, global adr = 332) always block-----//
    //s = 19; r = 1; a = 10;
    if (scalar_rdat_vld[19][1][10]) begin
        ff_hevc_luma_mv_mvp_mode_hls_height <= scalar_rdat  [19][1][10];
    end
    //------READ (scalar, global adr = 1196) always block-----//
    //s = 11; r = 1; a = 16;
    if (scalar_rdat_vld[11][1][16]) begin
        ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_nb_refs <= scalar_rdat  [11][1][16];
    end
    //------READ (scalar, global adr = 1200) always block-----//
    //s = 12; r = 1; a = 14;
    if (scalar_rdat_vld[12][1][14]) begin
        ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_nb_refs <= scalar_rdat  [12][1][14];
    end
    //------READ (scalar, global adr = 1220) always block-----//
    //s = 17; r = 1; a = 11;
    if (scalar_rdat_vld[17][1][11]) begin
        ff_hevc_luma_mv_mvp_mode_hls_mvLXCol_x <= scalar_rdat  [17][1][11];
    end
    //------READ (scalar, global adr = 1224) always block-----//
    //s = 18; r = 0; a = 11;
    if (scalar_rdat_vld[18][0][11]) begin
        ff_hevc_luma_mv_mvp_mode_hls_mvLXCol_y <= scalar_rdat  [18][0][11];
    end
    //------READ (scalar, global adr = 1204) always block-----//
    //s = 13; r = 0; a = 12;
    if (scalar_rdat_vld[13][0][12]) begin
        ff_hevc_luma_mv_mvp_mode_hls_ref_poc <= scalar_rdat  [13][0][12];
    end
    //------READ (scalar, global adr = 1208) always block-----//
    //s = 14; r = 1; a = 15;
    if (scalar_rdat_vld[14][1][15]) begin
        ff_hevc_luma_mv_mvp_mode_hls_collocated_list <= scalar_rdat  [14][1][15];
    end
    //------READ (scalar, global adr = 1540) always block-----//
    //s = 1; r = 0; a = 12;
    if (scalar_rdat_vld[1][0][12]) begin
        ff_hevc_luma_mv_mvp_mode_hls_is_temporal <= scalar_rdat  [1][0][12];
    end
    //------WRITE (scalar, global adr = 1228) always block-----//
    //s = 19; r = 0; a = 2;
    ff_hevc_luma_mv_mvp_mode_hls_xm_dbg_ap_vld_r <= ff_hevc_luma_mv_mvp_mode_hls_xm_dbg_ap_vld;
    if (ff_hevc_luma_mv_mvp_mode_hls_xm_dbg_ap_vld) begin
        ff_hevc_luma_mv_mvp_mode_hls_xm_dbg_r <= ff_hevc_luma_mv_mvp_mode_hls_xm_dbg;
    end
`endif
    //============================================================
    //hls_prediction_unit_hls       (f = 51)
    //============================================================
`ifdef enable_connect_hls_prediction_unit_hls
    //------READ (scalar, global adr = 160) always block-----//
    //s = 8; r = 0; a = 25;
    if (scalar_rdat_vld[8][0][25]) begin
        hls_prediction_unit_hls_nPbW <= scalar_rdat  [8][0][25];
    end
    //------READ (scalar, global adr = 164) always block-----//
    //s = 9; r = 1; a = 26;
    if (scalar_rdat_vld[9][1][26]) begin
        hls_prediction_unit_hls_nPbH <= scalar_rdat  [9][1][26];
    end
    //------READ (scalar, global adr = 1544) always block-----//
    //s = 2; r = 0; a = 15;
    if (scalar_rdat_vld[2][0][15]) begin
        hls_prediction_unit_hls_part_idx <= scalar_rdat  [2][0][15];
    end
    //------READ (scalar, global adr = 44) always block-----//
    //s = 11; r = 0; a = 26;
    if (scalar_rdat_vld[11][0][26]) begin
        hls_prediction_unit_hls_idx <= scalar_rdat  [11][0][26];
    end
    //------READ (scalar, global adr = 396) always block-----//
    //s = 3; r = 1; a = 12;
    if (scalar_rdat_vld[3][1][12]) begin
        hls_prediction_unit_hls_min_pu_width <= scalar_rdat  [3][1][12];
    end
    //------READ (scalar, global adr = 368) always block-----//
    //s = 28; r = 0; a = 15;
    if (scalar_rdat_vld[28][0][15]) begin
        hls_prediction_unit_hls_log2_min_cb_size <= scalar_rdat  [28][0][15];
    end
    //------READ (scalar, global adr = 392) always block-----//
    //s = 2; r = 1; a = 14;
    if (scalar_rdat_vld[2][1][14]) begin
        hls_prediction_unit_hls_min_cb_width <= scalar_rdat  [2][1][14];
    end
    //------READ (scalar, global adr = 1552) always block-----//
    //s = 4; r = 1; a = 14;
    if (scalar_rdat_vld[4][1][14]) begin
        hls_prediction_unit_hls_max_num_merge_cand <= scalar_rdat  [4][1][14];
    end
    //------READ (scalar, global adr = 784) always block-----//
    //s = 4; r = 0; a = 15;
    if (scalar_rdat_vld[4][0][15]) begin
        hls_prediction_unit_hls_current_mv_mv_0_x_o_r <= scalar_rdat  [4][0][15];    //bidir
    end
    //------WRITE (scalar, global adr = 784) always block-----//
    //s = 4; r = 1; a = 2;
    hls_prediction_unit_hls_current_mv_mv_0_x_o_ap_vld_r <= hls_prediction_unit_hls_current_mv_mv_0_x_o_ap_vld;
    if (hls_prediction_unit_hls_current_mv_mv_0_x_o_ap_vld) begin
        hls_prediction_unit_hls_current_mv_mv_0_x_o_r <= hls_prediction_unit_hls_current_mv_mv_0_x_o;
    end
    //------READ (scalar, global adr = 788) always block-----//
    //s = 5; r = 1; a = 19;
    if (scalar_rdat_vld[5][1][19]) begin
        hls_prediction_unit_hls_current_mv_mv_0_y_o_r <= scalar_rdat  [5][1][19];    //bidir
    end
    //------WRITE (scalar, global adr = 788) always block-----//
    //s = 5; r = 1; a = 6;
    hls_prediction_unit_hls_current_mv_mv_0_y_o_ap_vld_r <= hls_prediction_unit_hls_current_mv_mv_0_y_o_ap_vld;
    if (hls_prediction_unit_hls_current_mv_mv_0_y_o_ap_vld) begin
        hls_prediction_unit_hls_current_mv_mv_0_y_o_r <= hls_prediction_unit_hls_current_mv_mv_0_y_o;
    end
    //------READ (scalar, global adr = 792) always block-----//
    //s = 6; r = 0; a = 27;
    if (scalar_rdat_vld[6][0][27]) begin
        hls_prediction_unit_hls_current_mv_mv_1_x_o_r <= scalar_rdat  [6][0][27];    //bidir
    end
    //------WRITE (scalar, global adr = 792) always block-----//
    //s = 6; r = 0; a = 8;
    hls_prediction_unit_hls_current_mv_mv_1_x_o_ap_vld_r <= hls_prediction_unit_hls_current_mv_mv_1_x_o_ap_vld;
    if (hls_prediction_unit_hls_current_mv_mv_1_x_o_ap_vld) begin
        hls_prediction_unit_hls_current_mv_mv_1_x_o_r <= hls_prediction_unit_hls_current_mv_mv_1_x_o;
    end
    //------READ (scalar, global adr = 796) always block-----//
    //s = 7; r = 1; a = 19;
    if (scalar_rdat_vld[7][1][19]) begin
        hls_prediction_unit_hls_current_mv_mv_1_y_o_r <= scalar_rdat  [7][1][19];    //bidir
    end
    //------WRITE (scalar, global adr = 796) always block-----//
    //s = 7; r = 0; a = 10;
    hls_prediction_unit_hls_current_mv_mv_1_y_o_ap_vld_r <= hls_prediction_unit_hls_current_mv_mv_1_y_o_ap_vld;
    if (hls_prediction_unit_hls_current_mv_mv_1_y_o_ap_vld) begin
        hls_prediction_unit_hls_current_mv_mv_1_y_o_r <= hls_prediction_unit_hls_current_mv_mv_1_y_o;
    end
    //------WRITE (scalar, global adr = 800) always block-----//
    //s = 8; r = 0; a = 10;
    hls_prediction_unit_hls_current_mv_poc_0_ap_vld_r <= hls_prediction_unit_hls_current_mv_poc_0_ap_vld;
    if (hls_prediction_unit_hls_current_mv_poc_0_ap_vld) begin
        hls_prediction_unit_hls_current_mv_poc_0_r <= hls_prediction_unit_hls_current_mv_poc_0;
    end
    //------WRITE (scalar, global adr = 804) always block-----//
    //s = 9; r = 0; a = 10;
    hls_prediction_unit_hls_current_mv_poc_1_ap_vld_r <= hls_prediction_unit_hls_current_mv_poc_1_ap_vld;
    if (hls_prediction_unit_hls_current_mv_poc_1_ap_vld) begin
        hls_prediction_unit_hls_current_mv_poc_1_r <= hls_prediction_unit_hls_current_mv_poc_1;
    end
    //------READ (scalar, global adr = 808) always block-----//
    //s = 10; r = 0; a = 21;
    if (scalar_rdat_vld[10][0][21]) begin
        hls_prediction_unit_hls_current_mv_ref_idx_0_o_r <= scalar_rdat  [10][0][21];    //bidir
    end
    //------WRITE (scalar, global adr = 808) always block-----//
    //s = 10; r = 0; a = 6;
    hls_prediction_unit_hls_current_mv_ref_idx_0_o_ap_vld_r <= hls_prediction_unit_hls_current_mv_ref_idx_0_o_ap_vld;
    if (hls_prediction_unit_hls_current_mv_ref_idx_0_o_ap_vld) begin
        hls_prediction_unit_hls_current_mv_ref_idx_0_o_r <= hls_prediction_unit_hls_current_mv_ref_idx_0_o;
    end
    //------READ (scalar, global adr = 812) always block-----//
    //s = 11; r = 1; a = 26;
    if (scalar_rdat_vld[11][1][26]) begin
        hls_prediction_unit_hls_current_mv_ref_idx_1_o_r <= scalar_rdat  [11][1][26];    //bidir
    end
    //------WRITE (scalar, global adr = 812) always block-----//
    //s = 11; r = 1; a = 7;
    hls_prediction_unit_hls_current_mv_ref_idx_1_o_ap_vld_r <= hls_prediction_unit_hls_current_mv_ref_idx_1_o_ap_vld;
    if (hls_prediction_unit_hls_current_mv_ref_idx_1_o_ap_vld) begin
        hls_prediction_unit_hls_current_mv_ref_idx_1_o_r <= hls_prediction_unit_hls_current_mv_ref_idx_1_o;
    end
    //------READ (scalar, global adr = 816) always block-----//
    //s = 12; r = 1; a = 21;
    if (scalar_rdat_vld[12][1][21]) begin
        hls_prediction_unit_hls_current_mv_pred_flag_o_r <= scalar_rdat  [12][1][21];    //bidir
    end
    //------WRITE (scalar, global adr = 816) always block-----//
    //s = 12; r = 0; a = 7;
    hls_prediction_unit_hls_current_mv_pred_flag_o_ap_vld_r <= hls_prediction_unit_hls_current_mv_pred_flag_o_ap_vld;
    if (hls_prediction_unit_hls_current_mv_pred_flag_o_ap_vld) begin
        hls_prediction_unit_hls_current_mv_pred_flag_o_r <= hls_prediction_unit_hls_current_mv_pred_flag_o;
    end
    //------READ (scalar, global adr = 452) always block-----//
    //s = 17; r = 1; a = 14;
    if (scalar_rdat_vld[17][1][14]) begin
        hls_prediction_unit_hls_slice_type <= scalar_rdat  [17][1][14];
    end
    //------READ (scalar, global adr = 1456) always block-----//
    //s = 12; r = 0; a = 23;
    if (scalar_rdat_vld[12][0][23]) begin
        hls_prediction_unit_hls_rv_ff_hevc_luma_mv_merge_mode <= scalar_rdat  [12][0][23];
    end
    //------READ (scalar, global adr = 1460) always block-----//
    //s = 13; r = 1; a = 21;
    if (scalar_rdat_vld[13][1][21]) begin
        hls_prediction_unit_hls_rv_ff_hevc_ref_idx_lx_decode <= scalar_rdat  [13][1][21];
    end
    //------READ (scalar, global adr = 1464) always block-----//
    //s = 14; r = 1; a = 20;
    if (scalar_rdat_vld[14][1][20]) begin
        hls_prediction_unit_hls_rv_ff_hevc_hls_mvd_coding <= scalar_rdat  [14][1][20];
    end
    //------READ (scalar, global adr = 1468) always block-----//
    //s = 15; r = 1; a = 19;
    if (scalar_rdat_vld[15][1][19]) begin
        hls_prediction_unit_hls_rv_ff_hevc_luma_mv_mvp_mode <= scalar_rdat  [15][1][19];
    end
    //------READ (scalar, global adr = 1472) always block-----//
    //s = 16; r = 0; a = 14;
    if (scalar_rdat_vld[16][0][14]) begin
        hls_prediction_unit_hls_rv_hevc_await_progress <= scalar_rdat  [16][0][14];
    end
    //------READ (scalar, global adr = 1476) always block-----//
    //s = 17; r = 0; a = 15;
    if (scalar_rdat_vld[17][0][15]) begin
        hls_prediction_unit_hls_rv_hevc_await_progress_bl <= scalar_rdat  [17][0][15];
    end
    //------READ (scalar, global adr = 1480) always block-----//
    //s = 18; r = 0; a = 12;
    if (scalar_rdat_vld[18][0][12]) begin
        hls_prediction_unit_hls_rv_ff_upsample_block <= scalar_rdat  [18][0][12];
    end
    //------READ (scalar, global adr = 1484) always block-----//
    //s = 19; r = 1; a = 14;
    if (scalar_rdat_vld[19][1][14]) begin
        hls_prediction_unit_hls_rv_luma_mc_uni_libx265 <= scalar_rdat  [19][1][14];
    end
    //------READ (scalar, global adr = 1488) always block-----//
    //s = 20; r = 1; a = 14;
    if (scalar_rdat_vld[20][1][14]) begin
        hls_prediction_unit_hls_rv_chroma_mc_uni_libx265 <= scalar_rdat  [20][1][14];
    end
    //------READ (scalar, global adr = 1492) always block-----//
    //s = 21; r = 0; a = 14;
    if (scalar_rdat_vld[21][0][14]) begin
        hls_prediction_unit_hls_rv_xmem_copy_mvfield <= scalar_rdat  [21][0][14];
    end
    //------READ (scalar, global adr = 1496) always block-----//
    //s = 22; r = 0; a = 18;
    if (scalar_rdat_vld[22][0][18]) begin
        hls_prediction_unit_hls_rv_setMVPOC <= scalar_rdat  [22][0][18];
    end
    //------READ (scalar, global adr = 1500) always block-----//
    //s = 23; r = 0; a = 18;
    if (scalar_rdat_vld[23][0][18]) begin
        hls_prediction_unit_hls_rv_checkref <= scalar_rdat  [23][0][18];
    end
    //------WRITE (scalar, global adr = 1444) always block-----//
    //s = 9; r = 1; a = 10;
    hls_prediction_unit_hls_merge_idx_ap_vld_r <= hls_prediction_unit_hls_merge_idx_ap_vld;
    if (hls_prediction_unit_hls_merge_idx_ap_vld) begin
        hls_prediction_unit_hls_merge_idx_r <= hls_prediction_unit_hls_merge_idx;
    end
    //------WRITE (scalar, global adr = 888) always block-----//
    //s = 30; r = 1; a = 2;
    hls_prediction_unit_hls_mvp_lx_flag_ap_vld_r <= hls_prediction_unit_hls_mvp_lx_flag_ap_vld;
    if (hls_prediction_unit_hls_mvp_lx_flag_ap_vld) begin
        hls_prediction_unit_hls_mvp_lx_flag_r <= hls_prediction_unit_hls_mvp_lx_flag;
    end
    //------WRITE (scalar, global adr = 1436) always block-----//
    //s = 7; r = 1; a = 10;
    hls_prediction_unit_hls_pu_mvd_x_ap_vld_r <= hls_prediction_unit_hls_pu_mvd_x_ap_vld;
    if (hls_prediction_unit_hls_pu_mvd_x_ap_vld) begin
        hls_prediction_unit_hls_pu_mvd_x_r <= hls_prediction_unit_hls_pu_mvd_x;
    end
    //------WRITE (scalar, global adr = 1440) always block-----//
    //s = 8; r = 1; a = 10;
    hls_prediction_unit_hls_pu_mvd_y_ap_vld_r <= hls_prediction_unit_hls_pu_mvd_y_ap_vld;
    if (hls_prediction_unit_hls_pu_mvd_y_ap_vld) begin
        hls_prediction_unit_hls_pu_mvd_y_r <= hls_prediction_unit_hls_pu_mvd_y;
    end
    //------READ (scalar, global adr = 1448) always block-----//
    //s = 10; r = 1; a = 21;
    if (scalar_rdat_vld[10][1][21]) begin
        hls_prediction_unit_hls_skipref <= scalar_rdat  [10][1][21];
    end
    //------READ (scalar, global adr = 1452) always block-----//
    //s = 11; r = 0; a = 27;
    if (scalar_rdat_vld[11][0][27]) begin
        hls_prediction_unit_hls_interref <= scalar_rdat  [11][0][27];
    end
    //------READ (scalar, global adr = 372) always block-----//
    //s = 29; r = 1; a = 22;
    if (scalar_rdat_vld[29][1][22]) begin
        hls_prediction_unit_hls_log2_min_pu_size <= scalar_rdat  [29][1][22];
    end
    //------READ (scalar, global adr = 172) always block-----//
    //s = 11; r = 1; a = 27;
    if (scalar_rdat_vld[11][1][27]) begin
        hls_prediction_unit_hls_log2_width <= scalar_rdat  [11][1][27];
    end
    //------WRITE (scalar, global adr = 504) always block-----//
    //s = 30; r = 0; a = 3;
    hls_prediction_unit_hls_merge_flag_ap_vld_r <= hls_prediction_unit_hls_merge_flag_ap_vld;
    if (hls_prediction_unit_hls_merge_flag_ap_vld) begin
        hls_prediction_unit_hls_merge_flag_r <= hls_prediction_unit_hls_merge_flag;
    end
    //------READ (scalar, global adr = 464) always block-----//
    //s = 20; r = 0; a = 15;
    if (scalar_rdat_vld[20][0][15]) begin
        hls_prediction_unit_hls_depth <= scalar_rdat  [20][0][15];
    end
    //------READ (scalar, complete partition, global adr = 1292) always block-----//
    //s = 3; r = 0; a = 14;
    if (scalar_rdat_vld[3][0][14]) begin
        hls_prediction_unit_hls_nb_refs_0 <= scalar_rdat  [3][0][14];
    end
    //------READ (scalar, complete partition, global adr = 1296) always block-----//
    //s = 4; r = 1; a = 15;
    if (scalar_rdat_vld[4][1][15]) begin
        hls_prediction_unit_hls_nb_refs_1 <= scalar_rdat  [4][1][15];
    end
    //------READ (scalar, complete partition, global adr = 180) always block-----//
    //s = 13; r = 0; a = 22;
    if (scalar_rdat_vld[13][0][22]) begin
        hls_prediction_unit_hls_predColBuf_0_o_r <= scalar_rdat  [13][0][22];
    end
    //------WRITE (scalar, complete partition, global adr = 180) always block -----//
    //s = 13; r = 0; a = 6;
    hls_prediction_unit_hls_predColBuf_0_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_0_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_0_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_0_o_r <= hls_prediction_unit_hls_predColBuf_0_o;
    end
    //------READ (scalar, complete partition, global adr = 184) always block-----//
    //s = 14; r = 0; a = 21;
    if (scalar_rdat_vld[14][0][21]) begin
        hls_prediction_unit_hls_predColBuf_1_o_r <= scalar_rdat  [14][0][21];
    end
    //------WRITE (scalar, complete partition, global adr = 184) always block -----//
    //s = 14; r = 1; a = 7;
    hls_prediction_unit_hls_predColBuf_1_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_1_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_1_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_1_o_r <= hls_prediction_unit_hls_predColBuf_1_o;
    end
    //------READ (scalar, complete partition, global adr = 188) always block-----//
    //s = 15; r = 0; a = 20;
    if (scalar_rdat_vld[15][0][20]) begin
        hls_prediction_unit_hls_predColBuf_2_o_r <= scalar_rdat  [15][0][20];
    end
    //------WRITE (scalar, complete partition, global adr = 188) always block -----//
    //s = 15; r = 1; a = 7;
    hls_prediction_unit_hls_predColBuf_2_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_2_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_2_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_2_o_r <= hls_prediction_unit_hls_predColBuf_2_o;
    end
    //------READ (scalar, complete partition, global adr = 192) always block-----//
    //s = 16; r = 1; a = 13;
    if (scalar_rdat_vld[16][1][13]) begin
        hls_prediction_unit_hls_predColBuf_3_o_r <= scalar_rdat  [16][1][13];
    end
    //------WRITE (scalar, complete partition, global adr = 192) always block -----//
    //s = 16; r = 0; a = 4;
    hls_prediction_unit_hls_predColBuf_3_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_3_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_3_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_3_o_r <= hls_prediction_unit_hls_predColBuf_3_o;
    end
    //------READ (scalar, complete partition, global adr = 196) always block-----//
    //s = 17; r = 1; a = 15;
    if (scalar_rdat_vld[17][1][15]) begin
        hls_prediction_unit_hls_predColBuf_4_o_r <= scalar_rdat  [17][1][15];
    end
    //------WRITE (scalar, complete partition, global adr = 196) always block -----//
    //s = 17; r = 1; a = 2;
    hls_prediction_unit_hls_predColBuf_4_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_4_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_4_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_4_o_r <= hls_prediction_unit_hls_predColBuf_4_o;
    end
    //------READ (scalar, complete partition, global adr = 200) always block-----//
    //s = 18; r = 1; a = 11;
    if (scalar_rdat_vld[18][1][11]) begin
        hls_prediction_unit_hls_predColBuf_5_o_r <= scalar_rdat  [18][1][11];
    end
    //------WRITE (scalar, complete partition, global adr = 200) always block -----//
    //s = 18; r = 1; a = 2;
    hls_prediction_unit_hls_predColBuf_5_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_5_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_5_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_5_o_r <= hls_prediction_unit_hls_predColBuf_5_o;
    end
    //------READ (scalar, complete partition, global adr = 204) always block-----//
    //s = 19; r = 0; a = 15;
    if (scalar_rdat_vld[19][0][15]) begin
        hls_prediction_unit_hls_predColBuf_6_o_r <= scalar_rdat  [19][0][15];
    end
    //------WRITE (scalar, complete partition, global adr = 204) always block -----//
    //s = 19; r = 1; a = 3;
    hls_prediction_unit_hls_predColBuf_6_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_6_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_6_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_6_o_r <= hls_prediction_unit_hls_predColBuf_6_o;
    end
    //------READ (scalar, complete partition, global adr = 208) always block-----//
    //s = 20; r = 1; a = 15;
    if (scalar_rdat_vld[20][1][15]) begin
        hls_prediction_unit_hls_predColBuf_7_o_r <= scalar_rdat  [20][1][15];
    end
    //------WRITE (scalar, complete partition, global adr = 208) always block -----//
    //s = 20; r = 1; a = 5;
    hls_prediction_unit_hls_predColBuf_7_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_7_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_7_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_7_o_r <= hls_prediction_unit_hls_predColBuf_7_o;
    end
    //------READ (scalar, complete partition, global adr = 212) always block-----//
    //s = 21; r = 1; a = 13;
    if (scalar_rdat_vld[21][1][13]) begin
        hls_prediction_unit_hls_predColBuf_8_o_r <= scalar_rdat  [21][1][13];
    end
    //------WRITE (scalar, complete partition, global adr = 212) always block -----//
    //s = 21; r = 1; a = 4;
    hls_prediction_unit_hls_predColBuf_8_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_8_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_8_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_8_o_r <= hls_prediction_unit_hls_predColBuf_8_o;
    end
    //------READ (scalar, complete partition, global adr = 216) always block-----//
    //s = 22; r = 1; a = 17;
    if (scalar_rdat_vld[22][1][17]) begin
        hls_prediction_unit_hls_predColBuf_9_o_r <= scalar_rdat  [22][1][17];
    end
    //------WRITE (scalar, complete partition, global adr = 216) always block -----//
    //s = 22; r = 1; a = 4;
    hls_prediction_unit_hls_predColBuf_9_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_9_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_9_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_9_o_r <= hls_prediction_unit_hls_predColBuf_9_o;
    end
    //------READ (scalar, complete partition, global adr = 220) always block-----//
    //s = 23; r = 1; a = 17;
    if (scalar_rdat_vld[23][1][17]) begin
        hls_prediction_unit_hls_predColBuf_10_o_r <= scalar_rdat  [23][1][17];
    end
    //------WRITE (scalar, complete partition, global adr = 220) always block -----//
    //s = 23; r = 1; a = 4;
    hls_prediction_unit_hls_predColBuf_10_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_10_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_10_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_10_o_r <= hls_prediction_unit_hls_predColBuf_10_o;
    end
    //------READ (scalar, complete partition, global adr = 224) always block-----//
    //s = 24; r = 0; a = 14;
    if (scalar_rdat_vld[24][0][14]) begin
        hls_prediction_unit_hls_predColBuf_11_o_r <= scalar_rdat  [24][0][14];
    end
    //------WRITE (scalar, complete partition, global adr = 224) always block -----//
    //s = 24; r = 1; a = 2;
    hls_prediction_unit_hls_predColBuf_11_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_11_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_11_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_11_o_r <= hls_prediction_unit_hls_predColBuf_11_o;
    end
    //------READ (scalar, complete partition, global adr = 228) always block-----//
    //s = 25; r = 0; a = 10;
    if (scalar_rdat_vld[25][0][10]) begin
        hls_prediction_unit_hls_predColBuf_12_o_r <= scalar_rdat  [25][0][10];
    end
    //------WRITE (scalar, complete partition, global adr = 228) always block -----//
    //s = 25; r = 1; a = 2;
    hls_prediction_unit_hls_predColBuf_12_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_12_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_12_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_12_o_r <= hls_prediction_unit_hls_predColBuf_12_o;
    end
    //------READ (scalar, complete partition, global adr = 232) always block-----//
    //s = 26; r = 1; a = 16;
    if (scalar_rdat_vld[26][1][16]) begin
        hls_prediction_unit_hls_predColBuf_13_o_r <= scalar_rdat  [26][1][16];
    end
    //------WRITE (scalar, complete partition, global adr = 232) always block -----//
    //s = 26; r = 1; a = 2;
    hls_prediction_unit_hls_predColBuf_13_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_13_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_13_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_13_o_r <= hls_prediction_unit_hls_predColBuf_13_o;
    end
    //------READ (scalar, complete partition, global adr = 236) always block-----//
    //s = 27; r = 1; a = 15;
    if (scalar_rdat_vld[27][1][15]) begin
        hls_prediction_unit_hls_predColBuf_14_o_r <= scalar_rdat  [27][1][15];
    end
    //------WRITE (scalar, complete partition, global adr = 236) always block -----//
    //s = 27; r = 0; a = 7;
    hls_prediction_unit_hls_predColBuf_14_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_14_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_14_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_14_o_r <= hls_prediction_unit_hls_predColBuf_14_o;
    end
    //------READ (scalar, complete partition, global adr = 240) always block-----//
    //s = 28; r = 1; a = 15;
    if (scalar_rdat_vld[28][1][15]) begin
        hls_prediction_unit_hls_predColBuf_15_o_r <= scalar_rdat  [28][1][15];
    end
    //------WRITE (scalar, complete partition, global adr = 240) always block -----//
    //s = 28; r = 0; a = 3;
    hls_prediction_unit_hls_predColBuf_15_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_15_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_15_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_15_o_r <= hls_prediction_unit_hls_predColBuf_15_o;
    end
    //------READ (scalar, complete partition, global adr = 244) always block-----//
    //s = 29; r = 0; a = 23;
    if (scalar_rdat_vld[29][0][23]) begin
        hls_prediction_unit_hls_predColBuf_16_o_r <= scalar_rdat  [29][0][23];
    end
    //------WRITE (scalar, complete partition, global adr = 244) always block -----//
    //s = 29; r = 0; a = 7;
    hls_prediction_unit_hls_predColBuf_16_o_ap_vld_r <= hls_prediction_unit_hls_predColBuf_16_o_ap_vld;
    if (hls_prediction_unit_hls_predColBuf_16_o_ap_vld) begin
        hls_prediction_unit_hls_predColBuf_16_o_r <= hls_prediction_unit_hls_predColBuf_16_o;
    end
    //------READ (scalar, global adr = 1504) always block-----//
    //s = 24; r = 1; a = 13;
    if (scalar_rdat_vld[24][1][13]) begin
        hls_prediction_unit_hls_threads_type <= scalar_rdat  [24][1][13];
    end
`endif
        innerloop_ff_hevc_extract_rbsp_1_hls_ready_r <= innerloop_ff_hevc_extract_rbsp_1_hls_ready;
        innerloop_ff_hevc_extract_rbsp_2_hls_ready_r <= innerloop_ff_hevc_extract_rbsp_2_hls_ready;
        fill_ref_samples_mtdma_top_wrp_ready_r   <= fill_ref_samples_mtdma_top_wrp_ready;
        hevc_find_frame_end_hls_ready_r          <= hevc_find_frame_end_hls_ready;
        intra_prediction_unit_ex_hls_ready_r     <= intra_prediction_unit_ex_hls_ready;
        hls_transform_unit_ex_hls_ready_r        <= hls_transform_unit_ex_hls_ready;
        hls_transform_unit_ex_hls_dup1_ready_r   <= hls_transform_unit_ex_hls_dup1_ready;
        hls_transform_unit_ex_hls_dup2_ready_r   <= hls_transform_unit_ex_hls_dup2_ready;
        hls_transform_unit_ex_hls_dup3_ready_r   <= hls_transform_unit_ex_hls_dup3_ready;
        hls_transform_tree_hls_ready_r           <= hls_transform_tree_hls_ready;
        hls_transform_tree_hls_dup1_ready_r      <= hls_transform_tree_hls_dup1_ready;
        hls_transform_tree_hls_dup2_ready_r      <= hls_transform_tree_hls_dup2_ready;
        hls_transform_tree_hls_dup3_ready_r      <= hls_transform_tree_hls_dup3_ready;
        hls_coding_quadtree_hls_ready_r          <= hls_coding_quadtree_hls_ready;
        hls_coding_quadtree_hls_dup1_ready_r     <= hls_coding_quadtree_hls_dup1_ready;
        hls_coding_quadtree_hls_dup2_ready_r     <= hls_coding_quadtree_hls_dup2_ready;
        hls_coding_quadtree_hls_dup3_ready_r     <= hls_coding_quadtree_hls_dup3_ready;
        hls_coding_unit_hls_ready_r              <= hls_coding_unit_hls_ready;
        hls_coding_unit_hls_dup1_ready_r         <= hls_coding_unit_hls_dup1_ready;
        hls_coding_unit_hls_dup2_ready_r         <= hls_coding_unit_hls_dup2_ready;
        hls_coding_unit_hls_dup3_ready_r         <= hls_coding_unit_hls_dup3_ready;
        copy_top_left_pixel_hls_ready_r          <= copy_top_left_pixel_hls_ready;
        genPredCol_hls_ready_r                   <= genPredCol_hls_ready;
        ff_hevc_get_sub_cu_zscan_id_hls_ready_r  <= ff_hevc_get_sub_cu_zscan_id_hls_ready;
        ff_hevc_skip_flag_decode_hls_ready_r     <= ff_hevc_skip_flag_decode_hls_ready;
        ff_hevc_set_qPy_hls_ready_r              <= ff_hevc_set_qPy_hls_ready;
        ff_hevc_deblocking_boundary_strengths_hls_ready_r <= ff_hevc_deblocking_boundary_strengths_hls_ready;
        hls_decode_neighbour_hls_ready_r         <= hls_decode_neighbour_hls_ready;
        set_tab_mvf_pred_flag_hls_ready_r        <= set_tab_mvf_pred_flag_hls_ready;
        init_intra_neighbors_hls_ready_r         <= init_intra_neighbors_hls_ready;
        init_intra_neighbors_chroma_hls_ready_r  <= init_intra_neighbors_chroma_hls_ready;
        ff_hevc_set_neighbour_available_hls_ready_r <= ff_hevc_set_neighbour_available_hls_ready;
        intra_prediction_unit_default_value_hls_ready_r <= intra_prediction_unit_default_value_hls_ready;
        z_scan_block_avail_hls_ready_r           <= z_scan_block_avail_hls_ready;
        luma_mc_uni_libx265_hls_ready_r          <= luma_mc_uni_libx265_hls_ready;
        chroma_mc_uni_libx265_hls_ready_r        <= chroma_mc_uni_libx265_hls_ready;
        sao_param_hls_ready_r                    <= sao_param_hls_ready;
        xmem_copy_mvfield_hls_ready_r            <= xmem_copy_mvfield_hls_ready;
        intra_pred_libx265_hls_ready_r           <= intra_pred_libx265_hls_ready;
        mv_mp_mode_mx_hls_ready_r                <= mv_mp_mode_mx_hls_ready;
        mv_mp_mode_mx_lt_hls_ready_r             <= mv_mp_mode_mx_lt_hls_ready;
        temporal_luma_motion_vector_hls_ready_r  <= temporal_luma_motion_vector_hls_ready;
        is_diff_mer_hls_ready_r                  <= is_diff_mer_hls_ready;
        append_zero_motion_vector_candidates_hls_ready_r <= append_zero_motion_vector_candidates_hls_ready;
        merge_mode_exit_hls_ready_r              <= merge_mode_exit_hls_ready;
        set_to_mergecand_list_hls_ready_r        <= set_to_mergecand_list_hls_ready;
        compare_mv_ref_idx_hls_ready_r           <= compare_mv_ref_idx_hls_ready;
        combined_bi_predictive_merge_candidates_hls_ready_r <= combined_bi_predictive_merge_candidates_hls_ready;
        ff_hevc_luma_mv_merge_mode_hls_ready_r   <= ff_hevc_luma_mv_merge_mode_hls_ready;
        ff_hevc_luma_mv_mvp_mode_hls_ready_r     <= ff_hevc_luma_mv_mvp_mode_hls_ready;
        hls_prediction_unit_hls_ready_r          <= hls_prediction_unit_hls_ready;

    end
end


always_comb begin
    ap_part_w               = ap_part_r;
    ap_arb_start_running    = ap_arb_start_running_r;
    ap_arb_ret_running      = ap_arb_ret_running_r;
    ap_running              = ap_running_r;
    ap_start                = ap_start_r;
    ap_arb_reload_running   = ap_arb_reload_running_r;
    ap_arb_reload           = '{default: '0};
    scalar_argdone          = scalar_argdone_r;
    scalar_argAckdone		= scalar_argAckdone_r;
    array_argdone           = array_argdone_r;
    cyclic_argdone          = cyclic_argdone_r;

    scalar_argVld           = scalar_argVld_r;
    array_argVld            = array_argVld_r;
    cyclic_argVld           = cyclic_argVld_r;

    scalar_adr              = '{default: '0};
    scalar_wdat             = '{default: '0};
    scalar_argdone_all      = '{default: '0};
    scalar_argVld_all       = '{default: '0};
    scalar_argAckdone_all   = scalar_argAckdone_all_r;
    //array_adr             = '{default: '0};
    array_adr               = array_adr_r;
    array_wdat              = '{default: '0};
    cyclic_adr              = '{default: '0};
    cyclic_wdat             = '{default: '0};

    array_ap_ce             = '{default: '0};
    cyclic_ap_ce            = '{default: '0};
    innerloop_ff_hevc_extract_rbsp_1_hls_ready = innerloop_ff_hevc_extract_rbsp_1_hls_ready_r;
    innerloop_ff_hevc_extract_rbsp_2_hls_ready = innerloop_ff_hevc_extract_rbsp_2_hls_ready_r;
    fill_ref_samples_mtdma_top_wrp_ready     = fill_ref_samples_mtdma_top_wrp_ready_r;
    hevc_find_frame_end_hls_ready            = hevc_find_frame_end_hls_ready_r;
    intra_prediction_unit_ex_hls_ready       = intra_prediction_unit_ex_hls_ready_r;
    hls_transform_unit_ex_hls_ready          = hls_transform_unit_ex_hls_ready_r;
    hls_transform_unit_ex_hls_dup1_ready     = hls_transform_unit_ex_hls_dup1_ready_r;
    hls_transform_unit_ex_hls_dup2_ready     = hls_transform_unit_ex_hls_dup2_ready_r;
    hls_transform_unit_ex_hls_dup3_ready     = hls_transform_unit_ex_hls_dup3_ready_r;
    hls_transform_tree_hls_ready             = hls_transform_tree_hls_ready_r;
    hls_transform_tree_hls_dup1_ready        = hls_transform_tree_hls_dup1_ready_r;
    hls_transform_tree_hls_dup2_ready        = hls_transform_tree_hls_dup2_ready_r;
    hls_transform_tree_hls_dup3_ready        = hls_transform_tree_hls_dup3_ready_r;
    hls_coding_quadtree_hls_ready            = hls_coding_quadtree_hls_ready_r;
    hls_coding_quadtree_hls_dup1_ready       = hls_coding_quadtree_hls_dup1_ready_r;
    hls_coding_quadtree_hls_dup2_ready       = hls_coding_quadtree_hls_dup2_ready_r;
    hls_coding_quadtree_hls_dup3_ready       = hls_coding_quadtree_hls_dup3_ready_r;
    hls_coding_unit_hls_ready                = hls_coding_unit_hls_ready_r;
    hls_coding_unit_hls_dup1_ready           = hls_coding_unit_hls_dup1_ready_r;
    hls_coding_unit_hls_dup2_ready           = hls_coding_unit_hls_dup2_ready_r;
    hls_coding_unit_hls_dup3_ready           = hls_coding_unit_hls_dup3_ready_r;
    copy_top_left_pixel_hls_ready            = copy_top_left_pixel_hls_ready_r;
    genPredCol_hls_ready                     = genPredCol_hls_ready_r;
    ff_hevc_get_sub_cu_zscan_id_hls_ready    = ff_hevc_get_sub_cu_zscan_id_hls_ready_r;
    ff_hevc_skip_flag_decode_hls_ready       = ff_hevc_skip_flag_decode_hls_ready_r;
    ff_hevc_set_qPy_hls_ready                = ff_hevc_set_qPy_hls_ready_r;
    ff_hevc_deblocking_boundary_strengths_hls_ready = ff_hevc_deblocking_boundary_strengths_hls_ready_r;
    hls_decode_neighbour_hls_ready           = hls_decode_neighbour_hls_ready_r;
    set_tab_mvf_pred_flag_hls_ready          = set_tab_mvf_pred_flag_hls_ready_r;
    init_intra_neighbors_hls_ready           = init_intra_neighbors_hls_ready_r;
    init_intra_neighbors_chroma_hls_ready    = init_intra_neighbors_chroma_hls_ready_r;
    ff_hevc_set_neighbour_available_hls_ready = ff_hevc_set_neighbour_available_hls_ready_r;
    intra_prediction_unit_default_value_hls_ready = intra_prediction_unit_default_value_hls_ready_r;
    z_scan_block_avail_hls_ready             = z_scan_block_avail_hls_ready_r;
    luma_mc_uni_libx265_hls_ready            = luma_mc_uni_libx265_hls_ready_r;
    chroma_mc_uni_libx265_hls_ready          = chroma_mc_uni_libx265_hls_ready_r;
    sao_param_hls_ready                      = sao_param_hls_ready_r;
    xmem_copy_mvfield_hls_ready              = xmem_copy_mvfield_hls_ready_r;
    intra_pred_libx265_hls_ready             = intra_pred_libx265_hls_ready_r;
    mv_mp_mode_mx_hls_ready                  = mv_mp_mode_mx_hls_ready_r;
    mv_mp_mode_mx_lt_hls_ready               = mv_mp_mode_mx_lt_hls_ready_r;
    temporal_luma_motion_vector_hls_ready    = temporal_luma_motion_vector_hls_ready_r;
    is_diff_mer_hls_ready                    = is_diff_mer_hls_ready_r;
    append_zero_motion_vector_candidates_hls_ready = append_zero_motion_vector_candidates_hls_ready_r;
    merge_mode_exit_hls_ready                = merge_mode_exit_hls_ready_r;
    set_to_mergecand_list_hls_ready          = set_to_mergecand_list_hls_ready_r;
    compare_mv_ref_idx_hls_ready             = compare_mv_ref_idx_hls_ready_r;
    combined_bi_predictive_merge_candidates_hls_ready = combined_bi_predictive_merge_candidates_hls_ready_r;
    ff_hevc_luma_mv_merge_mode_hls_ready     = ff_hevc_luma_mv_merge_mode_hls_ready_r;
    ff_hevc_luma_mv_mvp_mode_hls_ready       = ff_hevc_luma_mv_mvp_mode_hls_ready_r;
    hls_prediction_unit_hls_ready            = hls_prediction_unit_hls_ready_r;
    //============================================================
    //innerloop_ff_hevc_extract_rbsp_1_hls       (f = 1)
    //============================================================
`ifdef enable_connect_innerloop_ff_hevc_extract_rbsp_1_hls
    //------READ (scalar, global adr = 640) comb block-----//
    //s = 0; r = 0; a = 30;
    if (scalar_rdat_vld_r[0][0][30]) begin
        scalar_argdone [0][0][30] = 1;
    end
    scalar_adr[0][0][30] = {ap_part[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][30]) begin
        scalar_argVld[0][0][30] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        scalar_argVld[0][0][30] = 1;
    end

    //------WRITE (scalar, global adr = 640) comb block-----//
    //s = 0; r = 0; a = 10;
    if (scalar_argAck [0][0][10]) begin
        scalar_argVld [0][0][10] = 0;
        scalar_argAckdone [0][0][10] = 1;
    end
    if (innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_ap_vld_r) begin
        scalar_argVld [0][0][10] = 1;
        scalar_argAckdone [0][0][10] = 0;
        ap_part_w[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION] = ap_part[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][10] = innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_r;
    scalar_adr    [0][0][10] = {ap_part_w[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1120) comb block-----//
    //s = 24; r = 0; a = 23;
    if (scalar_rdat_vld_r[24][0][23]) begin
        scalar_argdone [24][0][23] = 1;
    end
    scalar_adr[24][0][23] = {ap_part[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][23]) begin
        scalar_argVld[24][0][23] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        scalar_argVld[24][0][23] = 1;
    end

    //------READ (scalar, global adr = 1128) comb block-----//
    //s = 26; r = 0; a = 28;
    if (scalar_rdat_vld_r[26][0][28]) begin
        scalar_argdone [26][0][28] = 1;
    end
    scalar_adr[26][0][28] = {ap_part[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][28]) begin
        scalar_argVld[26][0][28] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        scalar_argVld[26][0][28] = 1;
    end

    //------READ (scalar, global adr = 1124) comb block-----//
    //s = 25; r = 1; a = 19;
    if (scalar_rdat_vld_r[25][1][19]) begin
        scalar_argdone [25][1][19] = 1;
    end
    scalar_adr[25][1][19] = {ap_part[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][19]) begin
        scalar_argVld[25][1][19] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        scalar_argVld[25][1][19] = 1;
    end

    //------WRITE (scalar, global adr = 1132) comb block-----//
    //s = 27; r = 1; a = 9;
    if (scalar_argAck [27][1][9]) begin
        scalar_argVld [27][1][9] = 0;
        scalar_argAckdone [27][1][9] = 1;
    end
    if (innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_ap_vld_r) begin
        scalar_argVld [27][1][9] = 1;
        scalar_argAckdone [27][1][9] = 0;
        ap_part_w[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION] = ap_part[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][1][9] = innerloop_ff_hevc_extract_rbsp_1_hls_loop_cnt_r;
    scalar_adr    [27][1][9] = {ap_part_w[innerloop_ff_hevc_extract_rbsp_1_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (ap_arb_ret[innerloop_ff_hevc_extract_rbsp_1_hls] & ~ap_arb_ret_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        ap_arb_ret_running[innerloop_ff_hevc_extract_rbsp_1_hls] = 1;
        innerloop_ff_hevc_extract_rbsp_1_hls_ready = 0;
    end

    scalar_argAckdone_all[innerloop_ff_hevc_extract_rbsp_1_hls] = scalar_argAckdone[0][0][10] &
                                                scalar_argAckdone[27][1][9];
    if (ap_arb_ret_running[innerloop_ff_hevc_extract_rbsp_1_hls] & scalar_argAckdone_all[innerloop_ff_hevc_extract_rbsp_1_hls] &~ ap_arb_reload_running_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        ap_arb_reload[innerloop_ff_hevc_extract_rbsp_1_hls] = 1;
        ap_arb_reload_running[innerloop_ff_hevc_extract_rbsp_1_hls] = 1;
    end

    if (ap_arb_start[innerloop_ff_hevc_extract_rbsp_1_hls] &~ ap_arb_start_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        ap_arb_start_running[innerloop_ff_hevc_extract_rbsp_1_hls] = 1;
    end

    if (ap_arb_start_running[innerloop_ff_hevc_extract_rbsp_1_hls] & ~scalar_writing_640) begin
        ap_arb_start_running[innerloop_ff_hevc_extract_rbsp_1_hls] = 0;
        ap_arb_reload[innerloop_ff_hevc_extract_rbsp_1_hls] = 1;
    end

    scalar_argdone_all[innerloop_ff_hevc_extract_rbsp_1_hls] = scalar_argdone[0][0][30] &
                                                                scalar_argdone[24][0][23] &
                                                                scalar_argdone[26][0][28] &
                                                                scalar_argdone[25][1][19];

    if (scalar_argdone_all_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        scalar_argdone[0][0][30] = 0;
        scalar_argdone[24][0][23] = 0;
        scalar_argdone[26][0][28] = 0;
        scalar_argdone[25][1][19] = 0;

        if (ap_arb_start_r[innerloop_ff_hevc_extract_rbsp_1_hls] & ~ap_running_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
            ap_start[innerloop_ff_hevc_extract_rbsp_1_hls] = 1;
            ap_running[innerloop_ff_hevc_extract_rbsp_1_hls] = 1;
        end
        else if (ap_arb_ret_running_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
            ap_arb_ret_running[innerloop_ff_hevc_extract_rbsp_1_hls] = 0;
            ap_arb_reload_running[innerloop_ff_hevc_extract_rbsp_1_hls] = 0;
        end
    end

    if (ap_start_r[innerloop_ff_hevc_extract_rbsp_1_hls] & ap_ready_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        ap_start[innerloop_ff_hevc_extract_rbsp_1_hls] = 0;
    end

    if (ap_done_r[innerloop_ff_hevc_extract_rbsp_1_hls]) begin
        ap_running[innerloop_ff_hevc_extract_rbsp_1_hls] = 0;
    end
`endif
    //============================================================
    //innerloop_ff_hevc_extract_rbsp_2_hls       (f = 2)
    //============================================================
`ifdef enable_connect_innerloop_ff_hevc_extract_rbsp_2_hls
    //------READ (scalar, global adr = 632) comb block-----//
    //s = 30; r = 1; a = 16;
    if (scalar_rdat_vld_r[30][1][16]) begin
        scalar_argdone [30][1][16] = 1;
    end
    scalar_adr[30][1][16] = {ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][16]) begin
        scalar_argVld[30][1][16] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        scalar_argVld[30][1][16] = 1;
    end

    //------WRITE (scalar, global adr = 632) comb block-----//
    //s = 30; r = 1; a = 3;
    if (scalar_argAck [30][1][3]) begin
        scalar_argVld [30][1][3] = 0;
        scalar_argAckdone [30][1][3] = 1;
    end
    if (innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_ap_vld_r) begin
        scalar_argVld [30][1][3] = 1;
        scalar_argAckdone [30][1][3] = 0;
        ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION] = ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [30][1][3] = innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_r;
    scalar_adr    [30][1][3] = {ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 636) comb block-----//
    //s = 31; r = 1; a = 33;
    if (scalar_rdat_vld_r[31][1][33]) begin
        scalar_argdone [31][1][33] = 1;
    end
    scalar_adr[31][1][33] = {ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][33]) begin
        scalar_argVld[31][1][33] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        scalar_argVld[31][1][33] = 1;
    end

    //------WRITE (scalar, global adr = 636) comb block-----//
    //s = 31; r = 0; a = 6;
    if (scalar_argAck [31][0][6]) begin
        scalar_argVld [31][0][6] = 0;
        scalar_argAckdone [31][0][6] = 1;
    end
    if (innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_ap_vld_r) begin
        scalar_argVld [31][0][6] = 1;
        scalar_argAckdone [31][0][6] = 0;
        ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION] = ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][6] = innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_r;
    scalar_adr    [31][0][6] = {ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 640) comb block-----//
    //s = 0; r = 1; a = 30;
    if (scalar_rdat_vld_r[0][1][30]) begin
        scalar_argdone [0][1][30] = 1;
    end
    scalar_adr[0][1][30] = {ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][30]) begin
        scalar_argVld[0][1][30] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        scalar_argVld[0][1][30] = 1;
    end

    //------WRITE (scalar, global adr = 640) comb block-----//
    //s = 0; r = 1; a = 10;
    if (scalar_argAck [0][1][10]) begin
        scalar_argVld [0][1][10] = 0;
        scalar_argAckdone [0][1][10] = 1;
    end
    if (innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_ap_vld_r) begin
        scalar_argVld [0][1][10] = 1;
        scalar_argAckdone [0][1][10] = 0;
        ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION] = ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][10] = innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_r;
    scalar_adr    [0][1][10] = {ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 628) comb block-----//
    //s = 29; r = 1; a = 31;
    if (scalar_rdat_vld_r[29][1][31]) begin
        scalar_argdone [29][1][31] = 1;
    end
    scalar_adr[29][1][31] = {ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][31]) begin
        scalar_argVld[29][1][31] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        scalar_argVld[29][1][31] = 1;
    end

    //------WRITE (scalar, global adr = 628) comb block-----//
    //s = 29; r = 1; a = 11;
    if (scalar_argAck [29][1][11]) begin
        scalar_argVld [29][1][11] = 0;
        scalar_argAckdone [29][1][11] = 1;
    end
    if (innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_ap_vld_r) begin
        scalar_argVld [29][1][11] = 1;
        scalar_argAckdone [29][1][11] = 0;
        ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION] = ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][11] = innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_r;
    scalar_adr    [29][1][11] = {ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (array range, global adr = 8192, width=32, addr_width=32) -----//
    //s = 0; a = 93;
    array_argVld [0][93] = innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_pos_EN_A & (innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_pos_WEN_A != 0);
    array_adr    [0][93] = innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_pos_Addr_A;
    array_wdat   [0][93] = innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_pos_Din_A;

    //------READ (scalar, global adr = 1120) comb block-----//
    //s = 24; r = 1; a = 22;
    if (scalar_rdat_vld_r[24][1][22]) begin
        scalar_argdone [24][1][22] = 1;
    end
    scalar_adr[24][1][22] = {ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][22]) begin
        scalar_argVld[24][1][22] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        scalar_argVld[24][1][22] = 1;
    end

    //------READ (scalar, global adr = 1128) comb block-----//
    //s = 26; r = 1; a = 27;
    if (scalar_rdat_vld_r[26][1][27]) begin
        scalar_argdone [26][1][27] = 1;
    end
    scalar_adr[26][1][27] = {ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][27]) begin
        scalar_argVld[26][1][27] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        scalar_argVld[26][1][27] = 1;
    end

    //------READ (scalar, global adr = 1124) comb block-----//
    //s = 25; r = 0; a = 21;
    if (scalar_rdat_vld_r[25][0][21]) begin
        scalar_argdone [25][0][21] = 1;
    end
    scalar_adr[25][0][21] = {ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][21]) begin
        scalar_argVld[25][0][21] = 0;
    end
    if (ap_arb_reload_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        scalar_argVld[25][0][21] = 1;
    end

    //------WRITE (scalar, global adr = 1132) comb block-----//
    //s = 27; r = 0; a = 10;
    if (scalar_argAck [27][0][10]) begin
        scalar_argVld [27][0][10] = 0;
        scalar_argAckdone [27][0][10] = 1;
    end
    if (innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_ap_vld_r) begin
        scalar_argVld [27][0][10] = 1;
        scalar_argAckdone [27][0][10] = 0;
        ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION] = ap_part[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][10] = innerloop_ff_hevc_extract_rbsp_2_hls_loop_cnt_r;
    scalar_adr    [27][0][10] = {ap_part_w[innerloop_ff_hevc_extract_rbsp_2_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    innerloop_ff_hevc_extract_rbsp_2_hls_ready = array_argRdy[0][93] & ~ap_arb_reload_running_r[innerloop_ff_hevc_extract_rbsp_2_hls];
    array_ap_ce[0][93] = ap_ce[innerloop_ff_hevc_extract_rbsp_2_hls];

    if (ap_arb_ret[innerloop_ff_hevc_extract_rbsp_2_hls] & ~ap_arb_ret_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        ap_arb_ret_running[innerloop_ff_hevc_extract_rbsp_2_hls] = 1;
        innerloop_ff_hevc_extract_rbsp_2_hls_ready = 0;
    end

    scalar_argAckdone_all[innerloop_ff_hevc_extract_rbsp_2_hls] = scalar_argAckdone[30][1][3] &
                                                scalar_argAckdone[31][0][6] &
                                                scalar_argAckdone[0][1][10] &
                                                scalar_argAckdone[29][1][11] &
                                                scalar_argAckdone[27][0][10];
    if (ap_arb_ret_running[innerloop_ff_hevc_extract_rbsp_2_hls] & scalar_argAckdone_all[innerloop_ff_hevc_extract_rbsp_2_hls] &~ ap_arb_reload_running_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        ap_arb_reload[innerloop_ff_hevc_extract_rbsp_2_hls] = 1;
        ap_arb_reload_running[innerloop_ff_hevc_extract_rbsp_2_hls] = 1;
    end

    if (ap_arb_start[innerloop_ff_hevc_extract_rbsp_2_hls] &~ ap_arb_start_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        ap_arb_start_running[innerloop_ff_hevc_extract_rbsp_2_hls] = 1;
    end

    if (ap_arb_start_running[innerloop_ff_hevc_extract_rbsp_2_hls] & ~scalar_writing_632& ~scalar_writing_636& ~scalar_writing_640& ~scalar_writing_628) begin
        ap_arb_start_running[innerloop_ff_hevc_extract_rbsp_2_hls] = 0;
        ap_arb_reload[innerloop_ff_hevc_extract_rbsp_2_hls] = 1;
    end

    scalar_argdone_all[innerloop_ff_hevc_extract_rbsp_2_hls] = scalar_argdone[30][1][16] &
                                                                scalar_argdone[31][1][33] &
                                                                scalar_argdone[0][1][30] &
                                                                scalar_argdone[29][1][31] &
                                                                scalar_argdone[24][1][22] &
                                                                scalar_argdone[26][1][27] &
                                                                scalar_argdone[25][0][21];

    if (scalar_argdone_all_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        scalar_argdone[30][1][16] = 0;
        scalar_argdone[31][1][33] = 0;
        scalar_argdone[0][1][30] = 0;
        scalar_argdone[29][1][31] = 0;
        scalar_argdone[24][1][22] = 0;
        scalar_argdone[26][1][27] = 0;
        scalar_argdone[25][0][21] = 0;

        if (ap_arb_start_r[innerloop_ff_hevc_extract_rbsp_2_hls] & ~ap_running_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
            ap_start[innerloop_ff_hevc_extract_rbsp_2_hls] = 1;
            ap_running[innerloop_ff_hevc_extract_rbsp_2_hls] = 1;
        end
        else if (ap_arb_ret_running_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
            ap_arb_ret_running[innerloop_ff_hevc_extract_rbsp_2_hls] = 0;
            ap_arb_reload_running[innerloop_ff_hevc_extract_rbsp_2_hls] = 0;
        end
    end

    if (ap_start_r[innerloop_ff_hevc_extract_rbsp_2_hls] & ap_ready_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        ap_start[innerloop_ff_hevc_extract_rbsp_2_hls] = 0;
    end

    if (ap_done_r[innerloop_ff_hevc_extract_rbsp_2_hls]) begin
        ap_running[innerloop_ff_hevc_extract_rbsp_2_hls] = 0;
    end
`endif
    //============================================================
    //fill_ref_samples_mtdma_top_wrp       (f = 3)
    //============================================================
`ifdef enable_connect_fill_ref_samples_mtdma_top_wrp
    //------READ (scalar, global adr = 644) comb block-----//
    //s = 1; r = 1; a = 12;
    if (scalar_rdat_vld_r[1][1][12]) begin
        scalar_argdone [1][1][12] = 1;
    end
    scalar_adr[1][1][12] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][12]) begin
        scalar_argVld[1][1][12] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[1][1][12] = 1;
    end

    //------READ (scalar, global adr = 648) comb block-----//
    //s = 2; r = 0; a = 10;
    if (scalar_rdat_vld_r[2][0][10]) begin
        scalar_argdone [2][0][10] = 1;
    end
    scalar_adr[2][0][10] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][10]) begin
        scalar_argVld[2][0][10] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[2][0][10] = 1;
    end

    //------READ (scalar, global adr = 652) comb block-----//
    //s = 3; r = 0; a = 11;
    if (scalar_rdat_vld_r[3][0][11]) begin
        scalar_argdone [3][0][11] = 1;
    end
    scalar_adr[3][0][11] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][11]) begin
        scalar_argVld[3][0][11] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[3][0][11] = 1;
    end

    //------READ (scalar, global adr = 656) comb block-----//
    //s = 4; r = 1; a = 11;
    if (scalar_rdat_vld_r[4][1][11]) begin
        scalar_argdone [4][1][11] = 1;
    end
    scalar_adr[4][1][11] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][1][11]) begin
        scalar_argVld[4][1][11] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[4][1][11] = 1;
    end

    //------READ (scalar, global adr = 660) comb block-----//
    //s = 5; r = 1; a = 18;
    if (scalar_rdat_vld_r[5][1][18]) begin
        scalar_argdone [5][1][18] = 1;
    end
    scalar_adr[5][1][18] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][18]) begin
        scalar_argVld[5][1][18] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[5][1][18] = 1;
    end

    //------READ (scalar, global adr = 664) comb block-----//
    //s = 6; r = 1; a = 18;
    if (scalar_rdat_vld_r[6][1][18]) begin
        scalar_argdone [6][1][18] = 1;
    end
    scalar_adr[6][1][18] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][18]) begin
        scalar_argVld[6][1][18] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[6][1][18] = 1;
    end

    //------READ (scalar, global adr = 668) comb block-----//
    //s = 7; r = 1; a = 14;
    if (scalar_rdat_vld_r[7][1][14]) begin
        scalar_argdone [7][1][14] = 1;
    end
    scalar_adr[7][1][14] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][14]) begin
        scalar_argVld[7][1][14] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[7][1][14] = 1;
    end

    //------READ (scalar, global adr = 672) comb block-----//
    //s = 8; r = 0; a = 20;
    if (scalar_rdat_vld_r[8][0][20]) begin
        scalar_argdone [8][0][20] = 1;
    end
    scalar_adr[8][0][20] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][20]) begin
        scalar_argVld[8][0][20] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[8][0][20] = 1;
    end

    //------READ (scalar, global adr = 672) comb block-----//
    //s = 9; r = 0; a = 22;
    if (scalar_rdat_vld_r[9][0][22]) begin
        scalar_argdone [9][0][22] = 1;
    end
    scalar_adr[9][0][22] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][22]) begin
        scalar_argVld[9][0][22] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[9][0][22] = 1;
    end

    //------READ (scalar, global adr = 672) comb block-----//
    //s = 10; r = 1; a = 16;
    if (scalar_rdat_vld_r[10][1][16]) begin
        scalar_argdone [10][1][16] = 1;
    end
    scalar_adr[10][1][16] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][16]) begin
        scalar_argVld[10][1][16] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[10][1][16] = 1;
    end

    //------READ (scalar, global adr = 684) comb block-----//
    //s = 11; r = 0; a = 17;
    if (scalar_rdat_vld_r[11][0][17]) begin
        scalar_argdone [11][0][17] = 1;
    end
    scalar_adr[11][0][17] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][17]) begin
        scalar_argVld[11][0][17] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[11][0][17] = 1;
    end

    //------READ (scalar, global adr = 688) comb block-----//
    //s = 12; r = 0; a = 16;
    if (scalar_rdat_vld_r[12][0][16]) begin
        scalar_argdone [12][0][16] = 1;
    end
    scalar_adr[12][0][16] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][16]) begin
        scalar_argVld[12][0][16] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[12][0][16] = 1;
    end

    //------READ (scalar, global adr = 692) comb block-----//
    //s = 13; r = 0; a = 13;
    if (scalar_rdat_vld_r[13][0][13]) begin
        scalar_argdone [13][0][13] = 1;
    end
    scalar_adr[13][0][13] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][13]) begin
        scalar_argVld[13][0][13] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[13][0][13] = 1;
    end

    //------READ (scalar, global adr = 696) comb block-----//
    //s = 14; r = 0; a = 16;
    if (scalar_rdat_vld_r[14][0][16]) begin
        scalar_argdone [14][0][16] = 1;
    end
    scalar_adr[14][0][16] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][16]) begin
        scalar_argVld[14][0][16] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[14][0][16] = 1;
    end

    //------READ (scalar, global adr = 700) comb block-----//
    //s = 15; r = 1; a = 14;
    if (scalar_rdat_vld_r[15][1][14]) begin
        scalar_argdone [15][1][14] = 1;
    end
    scalar_adr[15][1][14] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][14]) begin
        scalar_argVld[15][1][14] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[15][1][14] = 1;
    end

    //------READ (scalar, global adr = 704) comb block-----//
    //s = 16; r = 1; a = 8;
    if (scalar_rdat_vld_r[16][1][8]) begin
        scalar_argdone [16][1][8] = 1;
    end
    scalar_adr[16][1][8] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][8]) begin
        scalar_argVld[16][1][8] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[16][1][8] = 1;
    end

    //------READ (scalar, global adr = 708) comb block-----//
    //s = 17; r = 0; a = 12;
    if (scalar_rdat_vld_r[17][0][12]) begin
        scalar_argdone [17][0][12] = 1;
    end
    scalar_adr[17][0][12] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][12]) begin
        scalar_argVld[17][0][12] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[17][0][12] = 1;
    end

    //------READ (scalar, global adr = 712) comb block-----//
    //s = 18; r = 1; a = 10;
    if (scalar_rdat_vld_r[18][1][10]) begin
        scalar_argdone [18][1][10] = 1;
    end
    scalar_adr[18][1][10] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][10]) begin
        scalar_argVld[18][1][10] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[18][1][10] = 1;
    end

    //------READ (scalar, global adr = 712) comb block-----//
    //s = 19; r = 1; a = 11;
    if (scalar_rdat_vld_r[19][1][11]) begin
        scalar_argdone [19][1][11] = 1;
    end
    scalar_adr[19][1][11] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][11]) begin
        scalar_argVld[19][1][11] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[19][1][11] = 1;
    end

    //------READ (scalar, global adr = 712) comb block-----//
    //s = 20; r = 0; a = 12;
    if (scalar_rdat_vld_r[20][0][12]) begin
        scalar_argdone [20][0][12] = 1;
    end
    scalar_adr[20][0][12] = {ap_part[fill_ref_samples_mtdma_top_wrp][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][12]) begin
        scalar_argVld[20][0][12] = 0;
    end
    if (ap_arb_reload_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argVld[20][0][12] = 1;
    end

    if (ap_arb_ret[fill_ref_samples_mtdma_top_wrp] & ~ap_arb_ret_r[fill_ref_samples_mtdma_top_wrp]) begin
        ap_arb_ret_running[fill_ref_samples_mtdma_top_wrp] = 1;
        fill_ref_samples_mtdma_top_wrp_ready = 0;
    end

    scalar_argAckdone_all[fill_ref_samples_mtdma_top_wrp] = 1;
    if (ap_arb_ret_running[fill_ref_samples_mtdma_top_wrp] & scalar_argAckdone_all[fill_ref_samples_mtdma_top_wrp] &~ ap_arb_reload_running_r[fill_ref_samples_mtdma_top_wrp]) begin
        ap_arb_reload[fill_ref_samples_mtdma_top_wrp] = 1;
        ap_arb_reload_running[fill_ref_samples_mtdma_top_wrp] = 1;
    end

    if (ap_arb_start[fill_ref_samples_mtdma_top_wrp] &~ ap_arb_start_r[fill_ref_samples_mtdma_top_wrp]) begin
        ap_arb_start_running[fill_ref_samples_mtdma_top_wrp] = 1;
    end

    if (ap_arb_start_running[fill_ref_samples_mtdma_top_wrp] & ~scalar_writing_644& ~scalar_writing_648& ~scalar_writing_652& ~scalar_writing_656& ~scalar_writing_660& ~scalar_writing_664& ~scalar_writing_668& ~scalar_writing_672& ~scalar_writing_684& ~scalar_writing_688& ~scalar_writing_692& ~scalar_writing_696& ~scalar_writing_700& ~scalar_writing_704& ~scalar_writing_708& ~scalar_writing_712) begin
        ap_arb_start_running[fill_ref_samples_mtdma_top_wrp] = 0;
        ap_arb_reload[fill_ref_samples_mtdma_top_wrp] = 1;
    end

    scalar_argdone_all[fill_ref_samples_mtdma_top_wrp] = scalar_argdone[1][1][12] &
                                                                scalar_argdone[2][0][10] &
                                                                scalar_argdone[3][0][11] &
                                                                scalar_argdone[4][1][11] &
                                                                scalar_argdone[5][1][18] &
                                                                scalar_argdone[6][1][18] &
                                                                scalar_argdone[7][1][14] &
                                                                scalar_argdone[8][0][20] &
                                                                scalar_argdone[9][0][22] &
                                                                scalar_argdone[10][1][16] &
                                                                scalar_argdone[11][0][17] &
                                                                scalar_argdone[12][0][16] &
                                                                scalar_argdone[13][0][13] &
                                                                scalar_argdone[14][0][16] &
                                                                scalar_argdone[15][1][14] &
                                                                scalar_argdone[16][1][8] &
                                                                scalar_argdone[17][0][12] &
                                                                scalar_argdone[18][1][10] &
                                                                scalar_argdone[19][1][11] &
                                                                scalar_argdone[20][0][12];

    if (scalar_argdone_all_r[fill_ref_samples_mtdma_top_wrp]) begin
        scalar_argdone[1][1][12] = 0;
        scalar_argdone[2][0][10] = 0;
        scalar_argdone[3][0][11] = 0;
        scalar_argdone[4][1][11] = 0;
        scalar_argdone[5][1][18] = 0;
        scalar_argdone[6][1][18] = 0;
        scalar_argdone[7][1][14] = 0;
        scalar_argdone[8][0][20] = 0;
        scalar_argdone[9][0][22] = 0;
        scalar_argdone[10][1][16] = 0;
        scalar_argdone[11][0][17] = 0;
        scalar_argdone[12][0][16] = 0;
        scalar_argdone[13][0][13] = 0;
        scalar_argdone[14][0][16] = 0;
        scalar_argdone[15][1][14] = 0;
        scalar_argdone[16][1][8] = 0;
        scalar_argdone[17][0][12] = 0;
        scalar_argdone[18][1][10] = 0;
        scalar_argdone[19][1][11] = 0;
        scalar_argdone[20][0][12] = 0;

        if (ap_arb_start_r[fill_ref_samples_mtdma_top_wrp] & ~ap_running_r[fill_ref_samples_mtdma_top_wrp]) begin
            ap_start[fill_ref_samples_mtdma_top_wrp] = 1;
            ap_running[fill_ref_samples_mtdma_top_wrp] = 1;
        end
        else if (ap_arb_ret_running_r[fill_ref_samples_mtdma_top_wrp]) begin
            ap_arb_ret_running[fill_ref_samples_mtdma_top_wrp] = 0;
            ap_arb_reload_running[fill_ref_samples_mtdma_top_wrp] = 0;
        end
    end

    if (ap_start_r[fill_ref_samples_mtdma_top_wrp] & ap_ready_r[fill_ref_samples_mtdma_top_wrp]) begin
        ap_start[fill_ref_samples_mtdma_top_wrp] = 0;
    end

    if (ap_done_r[fill_ref_samples_mtdma_top_wrp]) begin
        ap_running[fill_ref_samples_mtdma_top_wrp] = 0;
    end
`endif
    //============================================================
    //hevc_find_frame_end_hls       (f = 4)
    //============================================================
`ifdef enable_connect_hevc_find_frame_end_hls
    //------READ (scalar, global adr = 0) comb block-----//
    //s = 0; r = 0; a = 17;
    if (scalar_rdat_vld_r[0][0][17]) begin
        scalar_argdone [0][0][17] = 1;
    end
    scalar_adr[0][0][17] = {ap_part[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][17]) begin
        scalar_argVld[0][0][17] = 0;
    end
    if (ap_arb_reload_r[hevc_find_frame_end_hls]) begin
        scalar_argVld[0][0][17] = 1;
    end

    //------READ (scalar, global adr = 0) comb block-----//
    //s = 1; r = 1; a = 13;
    if (scalar_rdat_vld_r[1][1][13]) begin
        scalar_argdone [1][1][13] = 1;
    end
    scalar_adr[1][1][13] = {ap_part[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][13]) begin
        scalar_argVld[1][1][13] = 0;
    end
    if (ap_arb_reload_r[hevc_find_frame_end_hls]) begin
        scalar_argVld[1][1][13] = 1;
    end

    //------WRITE (scalar, global adr = 0) comb block-----//
    //s = 0; r = 1; a = 1;
    if (scalar_argAck [0][1][1]) begin
        scalar_argVld [0][1][1] = 0;
        scalar_argAckdone [0][1][1] = 1;
    end
    if (hevc_find_frame_end_hls_state64_0_o_ap_vld_r) begin
        scalar_argVld [0][1][1] = 1;
        scalar_argAckdone [0][1][1] = 0;
        ap_part_w[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION] = ap_part[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][1] = hevc_find_frame_end_hls_state64_0_o_r;
    scalar_adr    [0][1][1] = {ap_part_w[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 0) comb block-----//
    //s = 1; r = 1; a = 1;
    if (scalar_argAck [1][1][1]) begin
        scalar_argVld [1][1][1] = 0;
        scalar_argAckdone [1][1][1] = 1;
    end
    if (hevc_find_frame_end_hls_state64_1_o_ap_vld_r) begin
        scalar_argVld [1][1][1] = 1;
        scalar_argAckdone [1][1][1] = 0;
        ap_part_w[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION] = ap_part[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][1][1] = hevc_find_frame_end_hls_state64_1_o_r;
    scalar_adr    [1][1][1] = {ap_part_w[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 8) comb block-----//
    //s = 2; r = 1; a = 9;
    if (scalar_rdat_vld_r[2][1][9]) begin
        scalar_argdone [2][1][9] = 1;
    end
    scalar_adr[2][1][9] = {ap_part[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][9]) begin
        scalar_argVld[2][1][9] = 0;
    end
    if (ap_arb_reload_r[hevc_find_frame_end_hls]) begin
        scalar_argVld[2][1][9] = 1;
    end

    //------WRITE (scalar, global adr = 8) comb block-----//
    //s = 2; r = 0; a = 0;
    if (scalar_argAck [2][0][0]) begin
        scalar_argVld [2][0][0] = 0;
        scalar_argAckdone [2][0][0] = 1;
    end
    if (hevc_find_frame_end_hls_frame_start_found_o_ap_vld_r) begin
        scalar_argVld [2][0][0] = 1;
        scalar_argAckdone [2][0][0] = 0;
        ap_part_w[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION] = ap_part[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][0][0] = hevc_find_frame_end_hls_frame_start_found_o_r;
    scalar_adr    [2][0][0] = {ap_part_w[hevc_find_frame_end_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (ap_arb_ret[hevc_find_frame_end_hls] & ~ap_arb_ret_r[hevc_find_frame_end_hls]) begin
        ap_arb_ret_running[hevc_find_frame_end_hls] = 1;
        hevc_find_frame_end_hls_ready = 0;
    end

    scalar_argAckdone_all[hevc_find_frame_end_hls] = scalar_argAckdone[0][1][1] &
                                                scalar_argAckdone[1][1][1] &
                                                scalar_argAckdone[2][0][0];
    if (ap_arb_ret_running[hevc_find_frame_end_hls] & scalar_argAckdone_all[hevc_find_frame_end_hls] &~ ap_arb_reload_running_r[hevc_find_frame_end_hls]) begin
        ap_arb_reload[hevc_find_frame_end_hls] = 1;
        ap_arb_reload_running[hevc_find_frame_end_hls] = 1;
    end

    if (ap_arb_start[hevc_find_frame_end_hls] &~ ap_arb_start_r[hevc_find_frame_end_hls]) begin
        ap_arb_start_running[hevc_find_frame_end_hls] = 1;
    end

    if (ap_arb_start_running[hevc_find_frame_end_hls] & ~scalar_writing_0& ~scalar_writing_8) begin
        ap_arb_start_running[hevc_find_frame_end_hls] = 0;
        ap_arb_reload[hevc_find_frame_end_hls] = 1;
    end

    scalar_argdone_all[hevc_find_frame_end_hls] = scalar_argdone[0][0][17] &
                                                                scalar_argdone[1][1][13] &
                                                                scalar_argdone[2][1][9];

    if (scalar_argdone_all_r[hevc_find_frame_end_hls]) begin
        scalar_argdone[0][0][17] = 0;
        scalar_argdone[1][1][13] = 0;
        scalar_argdone[2][1][9] = 0;

        if (ap_arb_start_r[hevc_find_frame_end_hls] & ~ap_running_r[hevc_find_frame_end_hls]) begin
            ap_start[hevc_find_frame_end_hls] = 1;
            ap_running[hevc_find_frame_end_hls] = 1;
        end
        else if (ap_arb_ret_running_r[hevc_find_frame_end_hls]) begin
            ap_arb_ret_running[hevc_find_frame_end_hls] = 0;
            ap_arb_reload_running[hevc_find_frame_end_hls] = 0;
        end
    end

    if (ap_start_r[hevc_find_frame_end_hls] & ap_ready_r[hevc_find_frame_end_hls]) begin
        ap_start[hevc_find_frame_end_hls] = 0;
    end

    if (ap_done_r[hevc_find_frame_end_hls]) begin
        ap_running[hevc_find_frame_end_hls] = 0;
    end
`endif
    //============================================================
    //intra_prediction_unit_ex_hls       (f = 5)
    //============================================================
`ifdef enable_connect_intra_prediction_unit_ex_hls
    //------READ (scalar, complete partition, global adr = 520) comb block-----//
    //s = 2; r = 1; a = 19;
    if (scalar_rdat_vld_r[2][1][19]) begin
        scalar_argdone [2][1][19] = 1;
    end
    scalar_adr    [2][1][19] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][19]) begin
        scalar_argVld [2][1][19] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld [2][1][19] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 520) comb block-----//
    //s = 2; r = 1; a = 3;
    if (scalar_argAck [2][1][3]) begin
        scalar_argVld [2][1][3] = 0;
        scalar_argAckdone [2][1][3] = 1;
    end
    if (intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_ap_vld_r) begin
        scalar_argVld [2][1][3] = 1;
        scalar_argAckdone [2][1][3] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][1][3] = intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_r;
    scalar_adr    [2][1][3] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 521) comb block-----//
    //s = 2; r = 0; a = 21;
    if (scalar_rdat_vld_r[2][0][21]) begin
        scalar_argdone [2][0][21] = 1;
    end
    scalar_adr    [2][0][21] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][21]) begin
        scalar_argVld [2][0][21] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld [2][0][21] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 521) comb block-----//
    //s = 2; r = 0; a = 4;
    if (scalar_argAck [2][0][4]) begin
        scalar_argVld [2][0][4] = 0;
        scalar_argAckdone [2][0][4] = 1;
    end
    if (intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_ap_vld_r) begin
        scalar_argVld [2][0][4] = 1;
        scalar_argAckdone [2][0][4] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][0][4] = intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_r;
    scalar_adr    [2][0][4] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 522) comb block-----//
    //s = 2; r = 1; a = 20;
    if (scalar_rdat_vld_r[2][1][20]) begin
        scalar_argdone [2][1][20] = 1;
    end
    scalar_adr    [2][1][20] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][20]) begin
        scalar_argVld [2][1][20] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld [2][1][20] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 522) comb block-----//
    //s = 2; r = 1; a = 4;
    if (scalar_argAck [2][1][4]) begin
        scalar_argVld [2][1][4] = 0;
        scalar_argAckdone [2][1][4] = 1;
    end
    if (intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_ap_vld_r) begin
        scalar_argVld [2][1][4] = 1;
        scalar_argAckdone [2][1][4] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][1][4] = intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_r;
    scalar_adr    [2][1][4] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 523) comb block-----//
    //s = 2; r = 0; a = 22;
    if (scalar_rdat_vld_r[2][0][22]) begin
        scalar_argdone [2][0][22] = 1;
    end
    scalar_adr    [2][0][22] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][22]) begin
        scalar_argVld [2][0][22] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld [2][0][22] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 523) comb block-----//
    //s = 2; r = 0; a = 5;
    if (scalar_argAck [2][0][5]) begin
        scalar_argVld [2][0][5] = 0;
        scalar_argAckdone [2][0][5] = 1;
    end
    if (intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_ap_vld_r) begin
        scalar_argVld [2][0][5] = 1;
        scalar_argAckdone [2][0][5] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][0][5] = intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_r;
    scalar_adr    [2][0][5] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 0; a = 28;
    if (scalar_rdat_vld_r[13][0][28]) begin
        scalar_argdone [13][0][28] = 1;
    end
    scalar_adr[13][0][28] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][28]) begin
        scalar_argVld[13][0][28] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[13][0][28] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 1; a = 19;
    if (scalar_rdat_vld_r[3][1][19]) begin
        scalar_argdone [3][1][19] = 1;
    end
    scalar_adr[3][1][19] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][19]) begin
        scalar_argVld[3][1][19] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[3][1][19] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 0; a = 33;
    if (scalar_rdat_vld_r[29][0][33]) begin
        scalar_argdone [29][0][33] = 1;
    end
    scalar_adr[29][0][33] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][33]) begin
        scalar_argVld[29][0][33] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[29][0][33] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 30;
    if (scalar_rdat_vld_r[26][0][30]) begin
        scalar_argdone [26][0][30] = 1;
    end
    scalar_adr[26][0][30] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][30]) begin
        scalar_argVld[26][0][30] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[26][0][30] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 28;
    if (scalar_rdat_vld_r[23][1][28]) begin
        scalar_argdone [23][1][28] = 1;
    end
    scalar_adr[23][1][28] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][28]) begin
        scalar_argVld[23][1][28] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[23][1][28] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 23;
    if (scalar_rdat_vld_r[24][1][23]) begin
        scalar_argdone [24][1][23] = 1;
    end
    scalar_adr[24][1][23] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][23]) begin
        scalar_argVld[24][1][23] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[24][1][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 0; a = 31;
    if (scalar_rdat_vld_r[0][0][31]) begin
        scalar_argdone [0][0][31] = 1;
    end
    scalar_adr    [0][0][31] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][31]) begin
        scalar_argVld [0][0][31] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld [0][0][31] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 0; a = 11;
    if (scalar_argAck [0][0][11]) begin
        scalar_argVld [0][0][11] = 0;
        scalar_argAckdone [0][0][11] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_ap_vld_r) begin
        scalar_argVld [0][0][11] = 1;
        scalar_argAckdone [0][0][11] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][11] = intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_r;
    scalar_adr    [0][0][11] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 1; a = 31;
    if (scalar_rdat_vld_r[0][1][31]) begin
        scalar_argdone [0][1][31] = 1;
    end
    scalar_adr    [0][1][31] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][31]) begin
        scalar_argVld [0][1][31] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld [0][1][31] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 1; a = 11;
    if (scalar_argAck [0][1][11]) begin
        scalar_argVld [0][1][11] = 0;
        scalar_argAckdone [0][1][11] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_ap_vld_r) begin
        scalar_argVld [0][1][11] = 1;
        scalar_argAckdone [0][1][11] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][11] = intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_r;
    scalar_adr    [0][1][11] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 0; a = 32;
    if (scalar_rdat_vld_r[0][0][32]) begin
        scalar_argdone [0][0][32] = 1;
    end
    scalar_adr    [0][0][32] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][32]) begin
        scalar_argVld [0][0][32] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld [0][0][32] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 0; a = 12;
    if (scalar_argAck [0][0][12]) begin
        scalar_argVld [0][0][12] = 0;
        scalar_argAckdone [0][0][12] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_ap_vld_r) begin
        scalar_argVld [0][0][12] = 1;
        scalar_argAckdone [0][0][12] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][12] = intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_r;
    scalar_adr    [0][0][12] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 1; a = 32;
    if (scalar_rdat_vld_r[0][1][32]) begin
        scalar_argdone [0][1][32] = 1;
    end
    scalar_adr    [0][1][32] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][32]) begin
        scalar_argVld [0][1][32] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld [0][1][32] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 1; a = 12;
    if (scalar_argAck [0][1][12]) begin
        scalar_argVld [0][1][12] = 0;
        scalar_argAckdone [0][1][12] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_ap_vld_r) begin
        scalar_argVld [0][1][12] = 1;
        scalar_argAckdone [0][1][12] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][12] = intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_r;
    scalar_adr    [0][1][12] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 508) comb block-----//
    //s = 31; r = 1; a = 6;
    if (scalar_argAck [31][1][6]) begin
        scalar_argVld [31][1][6] = 0;
        scalar_argAckdone [31][1][6] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_ap_vld_r) begin
        scalar_argVld [31][1][6] = 1;
        scalar_argAckdone [31][1][6] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][1][6] = intra_prediction_unit_ex_hls_pu_chroma_mode_c_0_r;
    scalar_adr    [31][1][6] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 509) comb block-----//
    //s = 31; r = 0; a = 7;
    if (scalar_argAck [31][0][7]) begin
        scalar_argVld [31][0][7] = 0;
        scalar_argAckdone [31][0][7] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_ap_vld_r) begin
        scalar_argVld [31][0][7] = 1;
        scalar_argAckdone [31][0][7] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][7] = intra_prediction_unit_ex_hls_pu_chroma_mode_c_1_r;
    scalar_adr    [31][0][7] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 510) comb block-----//
    //s = 31; r = 1; a = 7;
    if (scalar_argAck [31][1][7]) begin
        scalar_argVld [31][1][7] = 0;
        scalar_argAckdone [31][1][7] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_ap_vld_r) begin
        scalar_argVld [31][1][7] = 1;
        scalar_argAckdone [31][1][7] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][1][7] = intra_prediction_unit_ex_hls_pu_chroma_mode_c_2_r;
    scalar_adr    [31][1][7] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 511) comb block-----//
    //s = 31; r = 0; a = 8;
    if (scalar_argAck [31][0][8]) begin
        scalar_argVld [31][0][8] = 0;
        scalar_argAckdone [31][0][8] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_ap_vld_r) begin
        scalar_argVld [31][0][8] = 1;
        scalar_argAckdone [31][0][8] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][8] = intra_prediction_unit_ex_hls_pu_chroma_mode_c_3_r;
    scalar_adr    [31][0][8] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 516) comb block-----//
    //s = 1; r = 0; a = 5;
    if (scalar_argAck [1][0][5]) begin
        scalar_argVld [1][0][5] = 0;
        scalar_argAckdone [1][0][5] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_ap_vld_r) begin
        scalar_argVld [1][0][5] = 1;
        scalar_argAckdone [1][0][5] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][0][5] = intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_0_r;
    scalar_adr    [1][0][5] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 517) comb block-----//
    //s = 1; r = 1; a = 5;
    if (scalar_argAck [1][1][5]) begin
        scalar_argVld [1][1][5] = 0;
        scalar_argAckdone [1][1][5] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_ap_vld_r) begin
        scalar_argVld [1][1][5] = 1;
        scalar_argAckdone [1][1][5] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][1][5] = intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_1_r;
    scalar_adr    [1][1][5] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 518) comb block-----//
    //s = 1; r = 0; a = 6;
    if (scalar_argAck [1][0][6]) begin
        scalar_argVld [1][0][6] = 0;
        scalar_argAckdone [1][0][6] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_ap_vld_r) begin
        scalar_argVld [1][0][6] = 1;
        scalar_argAckdone [1][0][6] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][0][6] = intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_2_r;
    scalar_adr    [1][0][6] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 519) comb block-----//
    //s = 1; r = 1; a = 6;
    if (scalar_argAck [1][1][6]) begin
        scalar_argVld [1][1][6] = 0;
        scalar_argAckdone [1][1][6] = 1;
    end
    if (intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_ap_vld_r) begin
        scalar_argVld [1][1][6] = 1;
        scalar_argAckdone [1][1][6] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][1][6] = intra_prediction_unit_ex_hls_pu_intra_pred_mode_c_3_r;
    scalar_adr    [1][1][6] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 324) comb block-----//
    //s = 17; r = 0; a = 21;
    if (scalar_rdat_vld_r[17][0][21]) begin
        scalar_argdone [17][0][21] = 1;
    end
    scalar_adr[17][0][21] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][21]) begin
        scalar_argVld[17][0][21] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[17][0][21] = 1;
    end

    //------WRITE (scalar, global adr = 576) comb block-----//
    //s = 16; r = 1; a = 5;
    if (scalar_argAck [16][1][5]) begin
        scalar_argVld [16][1][5] = 0;
        scalar_argAckdone [16][1][5] = 1;
    end
    if (intra_prediction_unit_ex_hls_max_trafo_depth_ap_vld_r) begin
        scalar_argVld [16][1][5] = 1;
        scalar_argAckdone [16][1][5] = 0;
        ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][1][5] = intra_prediction_unit_ex_hls_max_trafo_depth_r;
    scalar_adr    [16][1][5] = {ap_part_w[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 384) comb block-----//
    //s = 0; r = 0; a = 33;
    if (scalar_rdat_vld_r[0][0][33]) begin
        scalar_argdone [0][0][33] = 1;
    end
    scalar_adr[0][0][33] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][33]) begin
        scalar_argVld[0][0][33] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[0][0][33] = 1;
    end

    //------READ (scalar, global adr = 568) comb block-----//
    //s = 14; r = 0; a = 29;
    if (scalar_rdat_vld_r[14][0][29]) begin
        scalar_argdone [14][0][29] = 1;
    end
    scalar_adr[14][0][29] = {ap_part[intra_prediction_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][29]) begin
        scalar_argVld[14][0][29] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_ex_hls]) begin
        scalar_argVld[14][0][29] = 1;
    end

    //------WRITE (array range, global adr = 286180, width=8, addr_width=32) -----//
    //s = 0; a = 96;
    array_argVld [0][96] = intra_prediction_unit_ex_hls_tab_ipm_EN_A & (intra_prediction_unit_ex_hls_tab_ipm_WEN_A != 0);
    array_adr    [0][96] = intra_prediction_unit_ex_hls_tab_ipm_Addr_A;
    array_wdat   [0][96] = intra_prediction_unit_ex_hls_tab_ipm_Din_A;

    //------READ (array range, global adr = 286180, width=8, addr_width=32) -----//
    //s = 0; a = 255;
    intra_prediction_unit_ex_hls_tab_ipm_Dout_A = array_rdat  [0][255];
    //found a write signal pair
    array_argVld [0][255] = intra_prediction_unit_ex_hls_tab_ipm_EN_A & (intra_prediction_unit_ex_hls_tab_ipm_WEN_A == 0);
    array_adr    [0][255] = intra_prediction_unit_ex_hls_tab_ipm_Addr_A;

    intra_prediction_unit_ex_hls_ready = array_argRdy[0][96]& array_argRdy[0][255] & ~ap_arb_reload_running_r[intra_prediction_unit_ex_hls];
    array_ap_ce[0][96] = ap_ce[intra_prediction_unit_ex_hls];
    array_ap_ce[0][255] = ap_ce[intra_prediction_unit_ex_hls];

    if (ap_arb_ret[intra_prediction_unit_ex_hls] & ~ap_arb_ret_r[intra_prediction_unit_ex_hls]) begin
        ap_arb_ret_running[intra_prediction_unit_ex_hls] = 1;
        intra_prediction_unit_ex_hls_ready = 0;
    end

    scalar_argAckdone_all[intra_prediction_unit_ex_hls] = scalar_argAckdone[2][1][3] &
                                                scalar_argAckdone[2][0][4] &
                                                scalar_argAckdone[2][1][4] &
                                                scalar_argAckdone[2][0][5] &
                                                scalar_argAckdone[0][0][11] &
                                                scalar_argAckdone[0][1][11] &
                                                scalar_argAckdone[0][0][12] &
                                                scalar_argAckdone[0][1][12] &
                                                scalar_argAckdone[31][1][6] &
                                                scalar_argAckdone[31][0][7] &
                                                scalar_argAckdone[31][1][7] &
                                                scalar_argAckdone[31][0][8] &
                                                scalar_argAckdone[1][0][5] &
                                                scalar_argAckdone[1][1][5] &
                                                scalar_argAckdone[1][0][6] &
                                                scalar_argAckdone[1][1][6] &
                                                scalar_argAckdone[16][1][5];
    if (ap_arb_ret_running[intra_prediction_unit_ex_hls] & scalar_argAckdone_all[intra_prediction_unit_ex_hls] &~ ap_arb_reload_running_r[intra_prediction_unit_ex_hls]) begin
        ap_arb_reload[intra_prediction_unit_ex_hls] = 1;
        ap_arb_reload_running[intra_prediction_unit_ex_hls] = 1;
    end

    if (ap_arb_start[intra_prediction_unit_ex_hls] &~ ap_arb_start_r[intra_prediction_unit_ex_hls]) begin
        ap_arb_start_running[intra_prediction_unit_ex_hls] = 1;
    end

    if (ap_arb_start_running[intra_prediction_unit_ex_hls] & ~scalar_writing_520& ~scalar_writing_521& ~scalar_writing_522& ~scalar_writing_523& ~scalar_writing_564& ~scalar_writing_604& ~scalar_writing_608& ~scalar_writing_512& ~scalar_writing_513& ~scalar_writing_514& ~scalar_writing_515& ~scalar_writing_568) begin
        ap_arb_start_running[intra_prediction_unit_ex_hls] = 0;
        ap_arb_reload[intra_prediction_unit_ex_hls] = 1;
    end

    scalar_argdone_all[intra_prediction_unit_ex_hls] = scalar_argdone[2][1][19] &
                                                                scalar_argdone[2][0][21] &
                                                                scalar_argdone[2][1][20] &
                                                                scalar_argdone[2][0][22] &
                                                                scalar_argdone[13][0][28] &
                                                                scalar_argdone[3][1][19] &
                                                                scalar_argdone[29][0][33] &
                                                                scalar_argdone[26][0][30] &
                                                                scalar_argdone[23][1][28] &
                                                                scalar_argdone[24][1][23] &
                                                                scalar_argdone[0][0][31] &
                                                                scalar_argdone[0][1][31] &
                                                                scalar_argdone[0][0][32] &
                                                                scalar_argdone[0][1][32] &
                                                                scalar_argdone[17][0][21] &
                                                                scalar_argdone[0][0][33] &
                                                                scalar_argdone[14][0][29];

    if (scalar_argdone_all_r[intra_prediction_unit_ex_hls]) begin
        scalar_argdone[2][1][19] = 0;
        scalar_argdone[2][0][21] = 0;
        scalar_argdone[2][1][20] = 0;
        scalar_argdone[2][0][22] = 0;
        scalar_argdone[13][0][28] = 0;
        scalar_argdone[3][1][19] = 0;
        scalar_argdone[29][0][33] = 0;
        scalar_argdone[26][0][30] = 0;
        scalar_argdone[23][1][28] = 0;
        scalar_argdone[24][1][23] = 0;
        scalar_argdone[0][0][31] = 0;
        scalar_argdone[0][1][31] = 0;
        scalar_argdone[0][0][32] = 0;
        scalar_argdone[0][1][32] = 0;
        scalar_argdone[17][0][21] = 0;
        scalar_argdone[0][0][33] = 0;
        scalar_argdone[14][0][29] = 0;

        if (ap_arb_start_r[intra_prediction_unit_ex_hls] & ~ap_running_r[intra_prediction_unit_ex_hls]) begin
            ap_start[intra_prediction_unit_ex_hls] = 1;
            ap_running[intra_prediction_unit_ex_hls] = 1;
        end
        else if (ap_arb_ret_running_r[intra_prediction_unit_ex_hls]) begin
            ap_arb_ret_running[intra_prediction_unit_ex_hls] = 0;
            ap_arb_reload_running[intra_prediction_unit_ex_hls] = 0;
        end
    end

    if (ap_start_r[intra_prediction_unit_ex_hls] & ap_ready_r[intra_prediction_unit_ex_hls]) begin
        ap_start[intra_prediction_unit_ex_hls] = 0;
    end

    if (ap_done_r[intra_prediction_unit_ex_hls]) begin
        ap_running[intra_prediction_unit_ex_hls] = 0;
    end
`endif
    //============================================================
    //hls_transform_unit_ex_hls       (f = 6)
    //============================================================
`ifdef enable_connect_hls_transform_unit_ex_hls
    //------READ (scalar, global adr = 20) comb block-----//
    //s = 5; r = 0; a = 23;
    if (scalar_rdat_vld_r[5][0][23]) begin
        scalar_argdone [5][0][23] = 1;
    end
    scalar_adr[5][0][23] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][23]) begin
        scalar_argVld[5][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[5][0][23] = 1;
    end

    //------READ (scalar, global adr = 16) comb block-----//
    //s = 4; r = 0; a = 16;
    if (scalar_rdat_vld_r[4][0][16]) begin
        scalar_argdone [4][0][16] = 1;
    end
    scalar_adr[4][0][16] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][16]) begin
        scalar_argVld[4][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[4][0][16] = 1;
    end

    //------READ (scalar, global adr = 1160) comb block-----//
    //s = 2; r = 0; a = 16;
    if (scalar_rdat_vld_r[2][0][16]) begin
        scalar_argdone [2][0][16] = 1;
    end
    scalar_adr[2][0][16] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][16]) begin
        scalar_argVld[2][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[2][0][16] = 1;
    end

    //------WRITE (array range, global adr = 12288, width=8, addr_width=32) -----//
    //s = 0; a = 77;
    array_argVld [0][77] = hls_transform_unit_ex_hls_cb_qp_offset_list_EN_A & (hls_transform_unit_ex_hls_cb_qp_offset_list_WEN_A != 0);
    array_adr    [0][77] = hls_transform_unit_ex_hls_cb_qp_offset_list_Addr_A;
    array_wdat   [0][77] = hls_transform_unit_ex_hls_cb_qp_offset_list_Din_A;

    //------READ (array range, global adr = 12288, width=8, addr_width=32) -----//
    //s = 0; a = 237;
    hls_transform_unit_ex_hls_cb_qp_offset_list_Dout_A = array_rdat  [0][237];
    //found a write signal pair
    array_argVld [0][237] = hls_transform_unit_ex_hls_cb_qp_offset_list_EN_A & (hls_transform_unit_ex_hls_cb_qp_offset_list_WEN_A == 0);
    array_adr    [0][237] = hls_transform_unit_ex_hls_cb_qp_offset_list_Addr_A;

    //------WRITE (array range, global adr = 12296, width=8, addr_width=32) -----//
    //s = 0; a = 78;
    array_argVld [0][78] = hls_transform_unit_ex_hls_cr_qp_offset_list_EN_A & (hls_transform_unit_ex_hls_cr_qp_offset_list_WEN_A != 0);
    array_adr    [0][78] = hls_transform_unit_ex_hls_cr_qp_offset_list_Addr_A;
    array_wdat   [0][78] = hls_transform_unit_ex_hls_cr_qp_offset_list_Din_A;

    //------READ (array range, global adr = 12296, width=8, addr_width=32) -----//
    //s = 0; a = 238;
    hls_transform_unit_ex_hls_cr_qp_offset_list_Dout_A = array_rdat  [0][238];
    //found a write signal pair
    array_argVld [0][238] = hls_transform_unit_ex_hls_cr_qp_offset_list_EN_A & (hls_transform_unit_ex_hls_cr_qp_offset_list_WEN_A == 0);
    array_adr    [0][238] = hls_transform_unit_ex_hls_cr_qp_offset_list_Addr_A;

    //------READ (scalar, global adr = 1136) comb block-----//
    //s = 28; r = 0; a = 18;
    if (scalar_rdat_vld_r[28][0][18]) begin
        scalar_argdone [28][0][18] = 1;
    end
    scalar_adr[28][0][18] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][18]) begin
        scalar_argVld[28][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[28][0][18] = 1;
    end

    //------WRITE (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 79;
    array_argVld [0][79] = hls_transform_unit_ex_hls_qp_y_tab_EN_A & (hls_transform_unit_ex_hls_qp_y_tab_WEN_A != 0);
    array_adr    [0][79] = hls_transform_unit_ex_hls_qp_y_tab_Addr_A;
    array_wdat   [0][79] = hls_transform_unit_ex_hls_qp_y_tab_Din_A;

    //------READ (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 239;
    hls_transform_unit_ex_hls_qp_y_tab_Dout_A = array_rdat  [0][239];
    //found a write signal pair
    array_argVld [0][239] = hls_transform_unit_ex_hls_qp_y_tab_EN_A & (hls_transform_unit_ex_hls_qp_y_tab_WEN_A == 0);
    array_adr    [0][239] = hls_transform_unit_ex_hls_qp_y_tab_Addr_A;

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 1; a = 24;
    if (scalar_rdat_vld_r[12][1][24]) begin
        scalar_argdone [12][1][24] = 1;
    end
    scalar_adr[12][1][24] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][24]) begin
        scalar_argVld[12][1][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[12][1][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 0; a = 16;
    if (scalar_rdat_vld_r[20][0][16]) begin
        scalar_argdone [20][0][16] = 1;
    end
    scalar_adr    [20][0][16] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][16]) begin
        scalar_argVld [20][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [20][0][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 0; a = 15;
    if (scalar_rdat_vld_r[21][0][15]) begin
        scalar_argdone [21][0][15] = 1;
    end
    scalar_adr    [21][0][15] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][15]) begin
        scalar_argVld [21][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [21][0][15] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 0; a = 21;
    if (scalar_rdat_vld_r[22][0][21]) begin
        scalar_argdone [22][0][21] = 1;
    end
    scalar_adr    [22][0][21] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][21]) begin
        scalar_argVld [22][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [22][0][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 348) comb block-----//
    //s = 23; r = 0; a = 19;
    if (scalar_rdat_vld_r[23][0][19]) begin
        scalar_argdone [23][0][19] = 1;
    end
    scalar_adr    [23][0][19] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][19]) begin
        scalar_argVld [23][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [23][0][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 352) comb block-----//
    //s = 24; r = 0; a = 15;
    if (scalar_rdat_vld_r[24][0][15]) begin
        scalar_argdone [24][0][15] = 1;
    end
    scalar_adr    [24][0][15] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][15]) begin
        scalar_argVld [24][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [24][0][15] = 1;
    end

    //------READ (scalar, complete partition, global adr = 356) comb block-----//
    //s = 25; r = 1; a = 9;
    if (scalar_rdat_vld_r[25][1][9]) begin
        scalar_argdone [25][1][9] = 1;
    end
    scalar_adr    [25][1][9] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][9]) begin
        scalar_argVld [25][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [25][1][9] = 1;
    end

    //------READ (scalar, global adr = 484) comb block-----//
    //s = 25; r = 0; a = 11;
    if (scalar_rdat_vld_r[25][0][11]) begin
        scalar_argdone [25][0][11] = 1;
    end
    scalar_adr[25][0][11] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][11]) begin
        scalar_argVld[25][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[25][0][11] = 1;
    end

    //------READ (scalar, global adr = 488) comb block-----//
    //s = 26; r = 0; a = 20;
    if (scalar_rdat_vld_r[26][0][20]) begin
        scalar_argdone [26][0][20] = 1;
    end
    scalar_adr[26][0][20] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][20]) begin
        scalar_argVld[26][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[26][0][20] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 22;
    if (scalar_rdat_vld_r[15][1][22]) begin
        scalar_argdone [15][1][22] = 1;
    end
    scalar_adr[15][1][22] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][22]) begin
        scalar_argVld[15][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[15][1][22] = 1;
    end

    //------WRITE (scalar, global adr = 492) comb block-----//
    //s = 27; r = 1; a = 7;
    if (scalar_argAck [27][1][7]) begin
        scalar_argVld [27][1][7] = 0;
        scalar_argAckdone [27][1][7] = 1;
    end
    if (hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_ap_vld_r) begin
        scalar_argVld [27][1][7] = 1;
        scalar_argAckdone [27][1][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][1][7] = hls_transform_unit_ex_hls_tu_cu_qp_offset_cb_r;
    scalar_adr    [27][1][7] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 496) comb block-----//
    //s = 28; r = 1; a = 3;
    if (scalar_argAck [28][1][3]) begin
        scalar_argVld [28][1][3] = 0;
        scalar_argAckdone [28][1][3] = 1;
    end
    if (hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_ap_vld_r) begin
        scalar_argVld [28][1][3] = 1;
        scalar_argAckdone [28][1][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][1][3] = hls_transform_unit_ex_hls_tu_cu_qp_offset_cr_r;
    scalar_adr    [28][1][3] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 28;
    if (scalar_rdat_vld_r[6][1][28]) begin
        scalar_argdone [6][1][28] = 1;
    end
    scalar_adr[6][1][28] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][28]) begin
        scalar_argVld[6][1][28] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[6][1][28] = 1;
    end

    //------WRITE (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 8;
    if (scalar_argAck [6][1][8]) begin
        scalar_argVld [6][1][8] = 0;
        scalar_argAckdone [6][1][8] = 1;
    end
    if (hls_transform_unit_ex_hls_qp_y_o_ap_vld_r) begin
        scalar_argVld [6][1][8] = 1;
        scalar_argAckdone [6][1][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][8] = hls_transform_unit_ex_hls_qp_y_o_r;
    scalar_adr    [6][1][8] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 168) comb block-----//
    //s = 10; r = 1; a = 8;
    if (scalar_argAck [10][1][8]) begin
        scalar_argVld [10][1][8] = 0;
        scalar_argAckdone [10][1][8] = 1;
    end
    if (hls_transform_unit_ex_hls_log2_trafo_size_ap_vld_r) begin
        scalar_argVld [10][1][8] = 1;
        scalar_argAckdone [10][1][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][8] = hls_transform_unit_ex_hls_log2_trafo_size_r;
    scalar_adr    [10][1][8] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 56) comb block-----//
    //s = 14; r = 1; a = 25;
    if (scalar_rdat_vld_r[14][1][25]) begin
        scalar_argdone [14][1][25] = 1;
    end
    scalar_adr[14][1][25] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][25]) begin
        scalar_argVld[14][1][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[14][1][25] = 1;
    end

    //------WRITE (scalar, global adr = 56) comb block-----//
    //s = 14; r = 0; a = 8;
    if (scalar_argAck [14][0][8]) begin
        scalar_argVld [14][0][8] = 0;
        scalar_argAckdone [14][0][8] = 1;
    end
    if (hls_transform_unit_ex_hls_log2_trafo_size_c_o_ap_vld_r) begin
        scalar_argVld [14][0][8] = 1;
        scalar_argAckdone [14][0][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][8] = hls_transform_unit_ex_hls_log2_trafo_size_c_o_r;
    scalar_adr    [14][0][8] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 48) comb block-----//
    //s = 12; r = 0; a = 26;
    if (scalar_rdat_vld_r[12][0][26]) begin
        scalar_argdone [12][0][26] = 1;
    end
    scalar_adr[12][0][26] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][26]) begin
        scalar_argVld[12][0][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[12][0][26] = 1;
    end

    //------WRITE (scalar, global adr = 48) comb block-----//
    //s = 12; r = 1; a = 7;
    if (scalar_argAck [12][1][7]) begin
        scalar_argVld [12][1][7] = 0;
        scalar_argAckdone [12][1][7] = 1;
    end
    if (hls_transform_unit_ex_hls_scan_idx_o_ap_vld_r) begin
        scalar_argVld [12][1][7] = 1;
        scalar_argAckdone [12][1][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][7] = hls_transform_unit_ex_hls_scan_idx_o_r;
    scalar_adr    [12][1][7] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 52) comb block-----//
    //s = 13; r = 1; a = 6;
    if (scalar_argAck [13][1][6]) begin
        scalar_argVld [13][1][6] = 0;
        scalar_argAckdone [13][1][6] = 1;
    end
    if (hls_transform_unit_ex_hls_scan_idx_c_ap_vld_r) begin
        scalar_argVld [13][1][6] = 1;
        scalar_argAckdone [13][1][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][6] = hls_transform_unit_ex_hls_scan_idx_c_r;
    scalar_adr    [13][1][6] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1140) comb block-----//
    //s = 29; r = 1; a = 27;
    if (scalar_rdat_vld_r[29][1][27]) begin
        scalar_argdone [29][1][27] = 1;
    end
    scalar_adr[29][1][27] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][27]) begin
        scalar_argVld[29][1][27] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[29][1][27] = 1;
    end

    //------WRITE (scalar, global adr = 1140) comb block-----//
    //s = 29; r = 1; a = 7;
    if (scalar_argAck [29][1][7]) begin
        scalar_argVld [29][1][7] = 0;
        scalar_argAckdone [29][1][7] = 1;
    end
    if (hls_transform_unit_ex_hls_cmdr_run_o_ap_vld_r) begin
        scalar_argVld [29][1][7] = 1;
        scalar_argAckdone [29][1][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][7] = hls_transform_unit_ex_hls_cmdr_run_o_r;
    scalar_adr    [29][1][7] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1244) comb block-----//
    //s = 23; r = 1; a = 18;
    if (scalar_rdat_vld_r[23][1][18]) begin
        scalar_argdone [23][1][18] = 1;
    end
    scalar_adr    [23][1][18] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][18]) begin
        scalar_argVld [23][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [23][1][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1248) comb block-----//
    //s = 24; r = 1; a = 14;
    if (scalar_rdat_vld_r[24][1][14]) begin
        scalar_argdone [24][1][14] = 1;
    end
    scalar_adr    [24][1][14] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][14]) begin
        scalar_argVld [24][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [24][1][14] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1252) comb block-----//
    //s = 25; r = 1; a = 10;
    if (scalar_rdat_vld_r[25][1][10]) begin
        scalar_argdone [25][1][10] = 1;
    end
    scalar_adr    [25][1][10] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][10]) begin
        scalar_argVld [25][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [25][1][10] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1148) comb block-----//
    //s = 31; r = 1; a = 31;
    if (scalar_rdat_vld_r[31][1][31]) begin
        scalar_argdone [31][1][31] = 1;
    end
    scalar_adr    [31][1][31] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][31]) begin
        scalar_argVld [31][1][31] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [31][1][31] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1152) comb block-----//
    //s = 0; r = 0; a = 28;
    if (scalar_rdat_vld_r[0][0][28]) begin
        scalar_argdone [0][0][28] = 1;
    end
    scalar_adr    [0][0][28] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][28]) begin
        scalar_argVld [0][0][28] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [0][0][28] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1156) comb block-----//
    //s = 1; r = 0; a = 26;
    if (scalar_rdat_vld_r[1][0][26]) begin
        scalar_argdone [1][0][26] = 1;
    end
    scalar_adr    [1][0][26] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][26]) begin
        scalar_argVld [1][0][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld [1][0][26] = 1;
    end

    //------READ (scalar, global adr = 1144) comb block-----//
    //s = 30; r = 1; a = 13;
    if (scalar_rdat_vld_r[30][1][13]) begin
        scalar_argdone [30][1][13] = 1;
    end
    scalar_adr[30][1][13] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][13]) begin
        scalar_argVld[30][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[30][1][13] = 1;
    end

    //------WRITE (scalar, global adr = 160) comb block-----//
    //s = 8; r = 0; a = 11;
    if (scalar_argAck [8][0][11]) begin
        scalar_argVld [8][0][11] = 0;
        scalar_argAckdone [8][0][11] = 1;
    end
    if (hls_transform_unit_ex_hls_nPbW_ap_vld_r) begin
        scalar_argVld [8][0][11] = 1;
        scalar_argAckdone [8][0][11] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][11] = hls_transform_unit_ex_hls_nPbW_r;
    scalar_adr    [8][0][11] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 164) comb block-----//
    //s = 9; r = 0; a = 11;
    if (scalar_argAck [9][0][11]) begin
        scalar_argVld [9][0][11] = 0;
        scalar_argAckdone [9][0][11] = 1;
    end
    if (hls_transform_unit_ex_hls_nPbH_ap_vld_r) begin
        scalar_argVld [9][0][11] = 1;
        scalar_argAckdone [9][0][11] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][11] = hls_transform_unit_ex_hls_nPbH_r;
    scalar_adr    [9][0][11] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 580) comb block-----//
    //s = 17; r = 0; a = 3;
    if (scalar_argAck [17][0][3]) begin
        scalar_argVld [17][0][3] = 0;
        scalar_argAckdone [17][0][3] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_up_ap_vld_r) begin
        scalar_argVld [17][0][3] = 1;
        scalar_argAckdone [17][0][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][0][3] = hls_transform_unit_ex_hls_cand_up_r;
    scalar_adr    [17][0][3] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 584) comb block-----//
    //s = 18; r = 0; a = 3;
    if (scalar_argAck [18][0][3]) begin
        scalar_argVld [18][0][3] = 0;
        scalar_argAckdone [18][0][3] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_left_ap_vld_r) begin
        scalar_argVld [18][0][3] = 1;
        scalar_argAckdone [18][0][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][0][3] = hls_transform_unit_ex_hls_cand_left_r;
    scalar_adr    [18][0][3] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 588) comb block-----//
    //s = 19; r = 0; a = 4;
    if (scalar_argAck [19][0][4]) begin
        scalar_argVld [19][0][4] = 0;
        scalar_argAckdone [19][0][4] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_up_left_ap_vld_r) begin
        scalar_argVld [19][0][4] = 1;
        scalar_argAckdone [19][0][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][0][4] = hls_transform_unit_ex_hls_cand_up_left_r;
    scalar_adr    [19][0][4] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 592) comb block-----//
    //s = 20; r = 0; a = 6;
    if (scalar_argAck [20][0][6]) begin
        scalar_argVld [20][0][6] = 0;
        scalar_argAckdone [20][0][6] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_up_right_sap_ap_vld_r) begin
        scalar_argVld [20][0][6] = 1;
        scalar_argAckdone [20][0][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][6] = hls_transform_unit_ex_hls_cand_up_right_sap_r;
    scalar_adr    [20][0][6] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 596) comb block-----//
    //s = 21; r = 0; a = 5;
    if (scalar_argAck [21][0][5]) begin
        scalar_argVld [21][0][5] = 0;
        scalar_argAckdone [21][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_up_right_ap_vld_r) begin
        scalar_argVld [21][0][5] = 1;
        scalar_argAckdone [21][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][5] = hls_transform_unit_ex_hls_cand_up_right_r;
    scalar_adr    [21][0][5] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 600) comb block-----//
    //s = 22; r = 1; a = 20;
    if (scalar_rdat_vld_r[22][1][20]) begin
        scalar_argdone [22][1][20] = 1;
    end
    scalar_adr[22][1][20] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][20]) begin
        scalar_argVld[22][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[22][1][20] = 1;
    end

    //------WRITE (scalar, global adr = 600) comb block-----//
    //s = 22; r = 0; a = 5;
    if (scalar_argAck [22][0][5]) begin
        scalar_argVld [22][0][5] = 0;
        scalar_argAckdone [22][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_bottom_left_o_ap_vld_r) begin
        scalar_argVld [22][0][5] = 1;
        scalar_argAckdone [22][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][5] = hls_transform_unit_ex_hls_cand_bottom_left_o_r;
    scalar_adr    [22][0][5] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1412) comb block-----//
    //s = 1; r = 1; a = 2;
    if (scalar_argAck [1][1][2]) begin
        scalar_argVld [1][1][2] = 0;
        scalar_argAckdone [1][1][2] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_up_c_ap_vld_r) begin
        scalar_argVld [1][1][2] = 1;
        scalar_argAckdone [1][1][2] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][1][2] = hls_transform_unit_ex_hls_cand_up_c_r;
    scalar_adr    [1][1][2] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1416) comb block-----//
    //s = 2; r = 0; a = 1;
    if (scalar_argAck [2][0][1]) begin
        scalar_argVld [2][0][1] = 0;
        scalar_argAckdone [2][0][1] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_left_c_ap_vld_r) begin
        scalar_argVld [2][0][1] = 1;
        scalar_argAckdone [2][0][1] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][0][1] = hls_transform_unit_ex_hls_cand_left_c_r;
    scalar_adr    [2][0][1] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1420) comb block-----//
    //s = 3; r = 0; a = 2;
    if (scalar_argAck [3][0][2]) begin
        scalar_argVld [3][0][2] = 0;
        scalar_argAckdone [3][0][2] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_up_left_c_ap_vld_r) begin
        scalar_argVld [3][0][2] = 1;
        scalar_argAckdone [3][0][2] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][0][2] = hls_transform_unit_ex_hls_cand_up_left_c_r;
    scalar_adr    [3][0][2] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1424) comb block-----//
    //s = 4; r = 0; a = 5;
    if (scalar_argAck [4][0][5]) begin
        scalar_argVld [4][0][5] = 0;
        scalar_argAckdone [4][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_up_right_sap_c_ap_vld_r) begin
        scalar_argVld [4][0][5] = 1;
        scalar_argAckdone [4][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][0][5] = hls_transform_unit_ex_hls_cand_up_right_sap_c_r;
    scalar_adr    [4][0][5] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1428) comb block-----//
    //s = 5; r = 0; a = 9;
    if (scalar_argAck [5][0][9]) begin
        scalar_argVld [5][0][9] = 0;
        scalar_argAckdone [5][0][9] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_up_right_c_ap_vld_r) begin
        scalar_argVld [5][0][9] = 1;
        scalar_argAckdone [5][0][9] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][9] = hls_transform_unit_ex_hls_cand_up_right_c_r;
    scalar_adr    [5][0][9] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1432) comb block-----//
    //s = 6; r = 0; a = 30;
    if (scalar_rdat_vld_r[6][0][30]) begin
        scalar_argdone [6][0][30] = 1;
    end
    scalar_adr[6][0][30] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][30]) begin
        scalar_argVld[6][0][30] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[6][0][30] = 1;
    end

    //------WRITE (scalar, global adr = 1432) comb block-----//
    //s = 6; r = 0; a = 9;
    if (scalar_argAck [6][0][9]) begin
        scalar_argVld [6][0][9] = 0;
        scalar_argAckdone [6][0][9] = 1;
    end
    if (hls_transform_unit_ex_hls_cand_bottom_left_c_o_ap_vld_r) begin
        scalar_argVld [6][0][9] = 1;
        scalar_argAckdone [6][0][9] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][9] = hls_transform_unit_ex_hls_cand_bottom_left_c_o_r;
    scalar_adr    [6][0][9] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 19;
    if (scalar_rdat_vld_r[26][1][19]) begin
        scalar_argdone [26][1][19] = 1;
    end
    scalar_adr[26][1][19] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][19]) begin
        scalar_argVld[26][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[26][1][19] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 0; a = 20;
    if (scalar_rdat_vld_r[23][0][20]) begin
        scalar_argdone [23][0][20] = 1;
    end
    scalar_adr[23][0][20] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][20]) begin
        scalar_argVld[23][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[23][0][20] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 0; a = 16;
    if (scalar_rdat_vld_r[24][0][16]) begin
        scalar_argdone [24][0][16] = 1;
    end
    scalar_adr[24][0][16] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][16]) begin
        scalar_argVld[24][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[24][0][16] = 1;
    end

    //------READ (scalar, global adr = 612) comb block-----//
    //s = 25; r = 0; a = 12;
    if (scalar_rdat_vld_r[25][0][12]) begin
        scalar_argdone [25][0][12] = 1;
    end
    scalar_adr[25][0][12] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][12]) begin
        scalar_argVld[25][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[25][0][12] = 1;
    end

    //------READ (scalar, global adr = 616) comb block-----//
    //s = 26; r = 0; a = 21;
    if (scalar_rdat_vld_r[26][0][21]) begin
        scalar_argdone [26][0][21] = 1;
    end
    scalar_adr[26][0][21] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][21]) begin
        scalar_argVld[26][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[26][0][21] = 1;
    end

    //------READ (scalar, global adr = 620) comb block-----//
    //s = 27; r = 0; a = 21;
    if (scalar_rdat_vld_r[27][0][21]) begin
        scalar_argdone [27][0][21] = 1;
    end
    scalar_adr[27][0][21] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][21]) begin
        scalar_argVld[27][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[27][0][21] = 1;
    end

    //------READ (scalar, global adr = 624) comb block-----//
    //s = 28; r = 1; a = 18;
    if (scalar_rdat_vld_r[28][1][18]) begin
        scalar_argdone [28][1][18] = 1;
    end
    scalar_adr[28][1][18] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][18]) begin
        scalar_argVld[28][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[28][1][18] = 1;
    end

    //------READ (scalar, global adr = 472) comb block-----//
    //s = 22; r = 0; a = 22;
    if (scalar_rdat_vld_r[22][0][22]) begin
        scalar_argdone [22][0][22] = 1;
    end
    scalar_adr[22][0][22] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][22]) begin
        scalar_argVld[22][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[22][0][22] = 1;
    end

    //------WRITE (scalar, global adr = 472) comb block-----//
    //s = 22; r = 1; a = 5;
    if (scalar_argAck [22][1][5]) begin
        scalar_argVld [22][1][5] = 0;
        scalar_argAckdone [22][1][5] = 1;
    end
    if (hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r) begin
        scalar_argVld [22][1][5] = 1;
        scalar_argAckdone [22][1][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][5] = hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_r;
    scalar_adr    [22][1][5] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 19;
    if (scalar_rdat_vld_r[23][1][19]) begin
        scalar_argdone [23][1][19] = 1;
    end
    scalar_adr[23][1][19] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][19]) begin
        scalar_argVld[23][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[23][1][19] = 1;
    end

    //------WRITE (scalar, global adr = 476) comb block-----//
    //s = 23; r = 0; a = 5;
    if (scalar_argAck [23][0][5]) begin
        scalar_argVld [23][0][5] = 0;
        scalar_argAckdone [23][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_ap_vld_r) begin
        scalar_argVld [23][0][5] = 1;
        scalar_argAckdone [23][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][5] = hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_r;
    scalar_adr    [23][0][5] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 468) comb block-----//
    //s = 21; r = 1; a = 5;
    if (scalar_argAck [21][1][5]) begin
        scalar_argVld [21][1][5] = 0;
        scalar_argAckdone [21][1][5] = 1;
    end
    if (hls_transform_unit_ex_hls_tu_cu_qp_delta_ap_vld_r) begin
        scalar_argVld [21][1][5] = 1;
        scalar_argAckdone [21][1][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][5] = hls_transform_unit_ex_hls_tu_cu_qp_delta_r;
    scalar_adr    [21][1][5] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 500) comb block-----//
    //s = 29; r = 0; a = 8;
    if (scalar_argAck [29][0][8]) begin
        scalar_argVld [29][0][8] = 0;
        scalar_argAckdone [29][0][8] = 1;
    end
    if (hls_transform_unit_ex_hls_tu_cross_pf_ap_vld_r) begin
        scalar_argVld [29][0][8] = 1;
        scalar_argAckdone [29][0][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][8] = hls_transform_unit_ex_hls_tu_cross_pf_r;
    scalar_adr    [29][0][8] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 532) comb block-----//
    //s = 5; r = 1; a = 22;
    if (scalar_rdat_vld_r[5][1][22]) begin
        scalar_argdone [5][1][22] = 1;
    end
    scalar_adr[5][1][22] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][22]) begin
        scalar_argVld[5][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[5][1][22] = 1;
    end

    //------WRITE (scalar, global adr = 532) comb block-----//
    //s = 5; r = 1; a = 9;
    if (scalar_argAck [5][1][9]) begin
        scalar_argVld [5][1][9] = 0;
        scalar_argAckdone [5][1][9] = 1;
    end
    if (hls_transform_unit_ex_hls_first_qp_group_o_ap_vld_r) begin
        scalar_argVld [5][1][9] = 1;
        scalar_argAckdone [5][1][9] = 0;
        ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][9] = hls_transform_unit_ex_hls_first_qp_group_o_r;
    scalar_adr    [5][1][9] = {ap_part_w[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 328) comb block-----//
    //s = 18; r = 0; a = 15;
    if (scalar_rdat_vld_r[18][0][15]) begin
        scalar_argdone [18][0][15] = 1;
    end
    scalar_adr[18][0][15] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][15]) begin
        scalar_argVld[18][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[18][0][15] = 1;
    end

    //------READ (scalar, global adr = 448) comb block-----//
    //s = 16; r = 0; a = 17;
    if (scalar_rdat_vld_r[16][0][17]) begin
        scalar_argdone [16][0][17] = 1;
    end
    scalar_adr[16][0][17] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][17]) begin
        scalar_argVld[16][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[16][0][17] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 0; a = 28;
    if (scalar_rdat_vld_r[11][0][28]) begin
        scalar_argdone [11][0][28] = 1;
    end
    scalar_adr[11][0][28] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][28]) begin
        scalar_argVld[11][0][28] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[11][0][28] = 1;
    end

    //------READ (scalar, global adr = 540) comb block-----//
    //s = 7; r = 0; a = 21;
    if (scalar_rdat_vld_r[7][0][21]) begin
        scalar_argdone [7][0][21] = 1;
    end
    scalar_adr[7][0][21] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][21]) begin
        scalar_argVld[7][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[7][0][21] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 1; a = 24;
    if (scalar_rdat_vld_r[13][1][24]) begin
        scalar_argdone [13][1][24] = 1;
    end
    scalar_adr[13][1][24] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][24]) begin
        scalar_argVld[13][1][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[13][1][24] = 1;
    end

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 0; a = 19;
    if (scalar_rdat_vld_r[28][0][19]) begin
        scalar_argdone [28][0][19] = 1;
    end
    scalar_adr[28][0][19] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][19]) begin
        scalar_argVld[28][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[28][0][19] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 1; a = 15;
    if (scalar_rdat_vld_r[2][1][15]) begin
        scalar_argdone [2][1][15] = 1;
    end
    scalar_adr[2][1][15] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][15]) begin
        scalar_argVld[2][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[2][1][15] = 1;
    end

    //------READ (scalar, global adr = 460) comb block-----//
    //s = 19; r = 1; a = 17;
    if (scalar_rdat_vld_r[19][1][17]) begin
        scalar_argdone [19][1][17] = 1;
    end
    scalar_adr[19][1][17] = {ap_part[hls_transform_unit_ex_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][17]) begin
        scalar_argVld[19][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls]) begin
        scalar_argVld[19][1][17] = 1;
    end

    hls_transform_unit_ex_hls_ready = array_argRdy[0][77]& array_argRdy[0][237]& array_argRdy[0][78]& array_argRdy[0][238]& array_argRdy[0][79]& array_argRdy[0][239] & ~ap_arb_reload_running_r[hls_transform_unit_ex_hls];
    array_ap_ce[0][77] = ap_ce[hls_transform_unit_ex_hls];
    array_ap_ce[0][237] = ap_ce[hls_transform_unit_ex_hls];
    array_ap_ce[0][78] = ap_ce[hls_transform_unit_ex_hls];
    array_ap_ce[0][238] = ap_ce[hls_transform_unit_ex_hls];
    array_ap_ce[0][79] = ap_ce[hls_transform_unit_ex_hls];
    array_ap_ce[0][239] = ap_ce[hls_transform_unit_ex_hls];

    if (ap_arb_ret[hls_transform_unit_ex_hls] & ~ap_arb_ret_r[hls_transform_unit_ex_hls]) begin
        ap_arb_ret_running[hls_transform_unit_ex_hls] = 1;
        hls_transform_unit_ex_hls_ready = 0;
    end

    scalar_argAckdone_all[hls_transform_unit_ex_hls] = scalar_argAckdone[27][1][7] &
                                                scalar_argAckdone[28][1][3] &
                                                scalar_argAckdone[6][1][8] &
                                                scalar_argAckdone[10][1][8] &
                                                scalar_argAckdone[14][0][8] &
                                                scalar_argAckdone[12][1][7] &
                                                scalar_argAckdone[13][1][6] &
                                                scalar_argAckdone[29][1][7] &
                                                scalar_argAckdone[8][0][11] &
                                                scalar_argAckdone[9][0][11] &
                                                scalar_argAckdone[17][0][3] &
                                                scalar_argAckdone[18][0][3] &
                                                scalar_argAckdone[19][0][4] &
                                                scalar_argAckdone[20][0][6] &
                                                scalar_argAckdone[21][0][5] &
                                                scalar_argAckdone[22][0][5] &
                                                scalar_argAckdone[1][1][2] &
                                                scalar_argAckdone[2][0][1] &
                                                scalar_argAckdone[3][0][2] &
                                                scalar_argAckdone[4][0][5] &
                                                scalar_argAckdone[5][0][9] &
                                                scalar_argAckdone[6][0][9] &
                                                scalar_argAckdone[22][1][5] &
                                                scalar_argAckdone[23][0][5] &
                                                scalar_argAckdone[21][1][5] &
                                                scalar_argAckdone[29][0][8] &
                                                scalar_argAckdone[5][1][9];
    if (ap_arb_ret_running[hls_transform_unit_ex_hls] & scalar_argAckdone_all[hls_transform_unit_ex_hls] &~ ap_arb_reload_running_r[hls_transform_unit_ex_hls]) begin
        ap_arb_reload[hls_transform_unit_ex_hls] = 1;
        ap_arb_reload_running[hls_transform_unit_ex_hls] = 1;
    end

    if (ap_arb_start[hls_transform_unit_ex_hls] &~ ap_arb_start_r[hls_transform_unit_ex_hls]) begin
        ap_arb_start_running[hls_transform_unit_ex_hls] = 1;
    end

    if (ap_arb_start_running[hls_transform_unit_ex_hls] & ~scalar_writing_20& ~scalar_writing_16& ~scalar_writing_560& ~scalar_writing_484& ~scalar_writing_488& ~scalar_writing_572& ~scalar_writing_536& ~scalar_writing_56& ~scalar_writing_48& ~scalar_writing_1140& ~scalar_writing_600& ~scalar_writing_1432& ~scalar_writing_604& ~scalar_writing_608& ~scalar_writing_612& ~scalar_writing_616& ~scalar_writing_620& ~scalar_writing_624& ~scalar_writing_472& ~scalar_writing_476& ~scalar_writing_532& ~scalar_writing_540) begin
        ap_arb_start_running[hls_transform_unit_ex_hls] = 0;
        ap_arb_reload[hls_transform_unit_ex_hls] = 1;
    end

    scalar_argdone_all[hls_transform_unit_ex_hls] = scalar_argdone[5][0][23] &
                                                                scalar_argdone[4][0][16] &
                                                                scalar_argdone[2][0][16] &
                                                                scalar_argdone[28][0][18] &
                                                                scalar_argdone[12][1][24] &
                                                                scalar_argdone[20][0][16] &
                                                                scalar_argdone[21][0][15] &
                                                                scalar_argdone[22][0][21] &
                                                                scalar_argdone[23][0][19] &
                                                                scalar_argdone[24][0][15] &
                                                                scalar_argdone[25][1][9] &
                                                                scalar_argdone[25][0][11] &
                                                                scalar_argdone[26][0][20] &
                                                                scalar_argdone[15][1][22] &
                                                                scalar_argdone[6][1][28] &
                                                                scalar_argdone[14][1][25] &
                                                                scalar_argdone[12][0][26] &
                                                                scalar_argdone[29][1][27] &
                                                                scalar_argdone[23][1][18] &
                                                                scalar_argdone[24][1][14] &
                                                                scalar_argdone[25][1][10] &
                                                                scalar_argdone[31][1][31] &
                                                                scalar_argdone[0][0][28] &
                                                                scalar_argdone[1][0][26] &
                                                                scalar_argdone[30][1][13] &
                                                                scalar_argdone[22][1][20] &
                                                                scalar_argdone[6][0][30] &
                                                                scalar_argdone[26][1][19] &
                                                                scalar_argdone[23][0][20] &
                                                                scalar_argdone[24][0][16] &
                                                                scalar_argdone[25][0][12] &
                                                                scalar_argdone[26][0][21] &
                                                                scalar_argdone[27][0][21] &
                                                                scalar_argdone[28][1][18] &
                                                                scalar_argdone[22][0][22] &
                                                                scalar_argdone[23][1][19] &
                                                                scalar_argdone[5][1][22] &
                                                                scalar_argdone[18][0][15] &
                                                                scalar_argdone[16][0][17] &
                                                                scalar_argdone[11][0][28] &
                                                                scalar_argdone[7][0][21] &
                                                                scalar_argdone[13][1][24] &
                                                                scalar_argdone[28][0][19] &
                                                                scalar_argdone[2][1][15] &
                                                                scalar_argdone[19][1][17];

    if (scalar_argdone_all_r[hls_transform_unit_ex_hls]) begin
        scalar_argdone[5][0][23] = 0;
        scalar_argdone[4][0][16] = 0;
        scalar_argdone[2][0][16] = 0;
        scalar_argdone[28][0][18] = 0;
        scalar_argdone[12][1][24] = 0;
        scalar_argdone[20][0][16] = 0;
        scalar_argdone[21][0][15] = 0;
        scalar_argdone[22][0][21] = 0;
        scalar_argdone[23][0][19] = 0;
        scalar_argdone[24][0][15] = 0;
        scalar_argdone[25][1][9] = 0;
        scalar_argdone[25][0][11] = 0;
        scalar_argdone[26][0][20] = 0;
        scalar_argdone[15][1][22] = 0;
        scalar_argdone[6][1][28] = 0;
        scalar_argdone[14][1][25] = 0;
        scalar_argdone[12][0][26] = 0;
        scalar_argdone[29][1][27] = 0;
        scalar_argdone[23][1][18] = 0;
        scalar_argdone[24][1][14] = 0;
        scalar_argdone[25][1][10] = 0;
        scalar_argdone[31][1][31] = 0;
        scalar_argdone[0][0][28] = 0;
        scalar_argdone[1][0][26] = 0;
        scalar_argdone[30][1][13] = 0;
        scalar_argdone[22][1][20] = 0;
        scalar_argdone[6][0][30] = 0;
        scalar_argdone[26][1][19] = 0;
        scalar_argdone[23][0][20] = 0;
        scalar_argdone[24][0][16] = 0;
        scalar_argdone[25][0][12] = 0;
        scalar_argdone[26][0][21] = 0;
        scalar_argdone[27][0][21] = 0;
        scalar_argdone[28][1][18] = 0;
        scalar_argdone[22][0][22] = 0;
        scalar_argdone[23][1][19] = 0;
        scalar_argdone[5][1][22] = 0;
        scalar_argdone[18][0][15] = 0;
        scalar_argdone[16][0][17] = 0;
        scalar_argdone[11][0][28] = 0;
        scalar_argdone[7][0][21] = 0;
        scalar_argdone[13][1][24] = 0;
        scalar_argdone[28][0][19] = 0;
        scalar_argdone[2][1][15] = 0;
        scalar_argdone[19][1][17] = 0;

        if (ap_arb_start_r[hls_transform_unit_ex_hls] & ~ap_running_r[hls_transform_unit_ex_hls]) begin
            ap_start[hls_transform_unit_ex_hls] = 1;
            ap_running[hls_transform_unit_ex_hls] = 1;
        end
        else if (ap_arb_ret_running_r[hls_transform_unit_ex_hls]) begin
            ap_arb_ret_running[hls_transform_unit_ex_hls] = 0;
            ap_arb_reload_running[hls_transform_unit_ex_hls] = 0;
        end
    end

    if (ap_start_r[hls_transform_unit_ex_hls] & ap_ready_r[hls_transform_unit_ex_hls]) begin
        ap_start[hls_transform_unit_ex_hls] = 0;
    end

    if (ap_done_r[hls_transform_unit_ex_hls]) begin
        ap_running[hls_transform_unit_ex_hls] = 0;
    end
`endif
    //============================================================
    //hls_transform_unit_ex_hls_dup1       (f = 7)
    //============================================================
`ifdef enable_connect_hls_transform_unit_ex_hls_dup1
    //------READ (scalar, global adr = 20) comb block-----//
    //s = 5; r = 0; a = 24;
    if (scalar_rdat_vld_r[5][0][24]) begin
        scalar_argdone [5][0][24] = 1;
    end
    scalar_adr[5][0][24] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][24]) begin
        scalar_argVld[5][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[5][0][24] = 1;
    end

    //------READ (scalar, global adr = 16) comb block-----//
    //s = 4; r = 1; a = 16;
    if (scalar_rdat_vld_r[4][1][16]) begin
        scalar_argdone [4][1][16] = 1;
    end
    scalar_adr[4][1][16] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][1][16]) begin
        scalar_argVld[4][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[4][1][16] = 1;
    end

    //------READ (scalar, global adr = 1160) comb block-----//
    //s = 2; r = 0; a = 17;
    if (scalar_rdat_vld_r[2][0][17]) begin
        scalar_argdone [2][0][17] = 1;
    end
    scalar_adr[2][0][17] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][17]) begin
        scalar_argVld[2][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[2][0][17] = 1;
    end

    //------WRITE (array range, global adr = 12288, width=8, addr_width=32) -----//
    //s = 0; a = 80;
    array_argVld [0][80] = hls_transform_unit_ex_hls_dup1_cb_qp_offset_list_EN_A & (hls_transform_unit_ex_hls_dup1_cb_qp_offset_list_WEN_A != 0);
    array_adr    [0][80] = hls_transform_unit_ex_hls_dup1_cb_qp_offset_list_Addr_A;
    array_wdat   [0][80] = hls_transform_unit_ex_hls_dup1_cb_qp_offset_list_Din_A;

    //------READ (array range, global adr = 12288, width=8, addr_width=32) -----//
    //s = 0; a = 240;
    hls_transform_unit_ex_hls_dup1_cb_qp_offset_list_Dout_A = array_rdat  [0][240];
    //found a write signal pair
    array_argVld [0][240] = hls_transform_unit_ex_hls_dup1_cb_qp_offset_list_EN_A & (hls_transform_unit_ex_hls_dup1_cb_qp_offset_list_WEN_A == 0);
    array_adr    [0][240] = hls_transform_unit_ex_hls_dup1_cb_qp_offset_list_Addr_A;

    //------WRITE (array range, global adr = 12296, width=8, addr_width=32) -----//
    //s = 0; a = 81;
    array_argVld [0][81] = hls_transform_unit_ex_hls_dup1_cr_qp_offset_list_EN_A & (hls_transform_unit_ex_hls_dup1_cr_qp_offset_list_WEN_A != 0);
    array_adr    [0][81] = hls_transform_unit_ex_hls_dup1_cr_qp_offset_list_Addr_A;
    array_wdat   [0][81] = hls_transform_unit_ex_hls_dup1_cr_qp_offset_list_Din_A;

    //------READ (array range, global adr = 12296, width=8, addr_width=32) -----//
    //s = 0; a = 241;
    hls_transform_unit_ex_hls_dup1_cr_qp_offset_list_Dout_A = array_rdat  [0][241];
    //found a write signal pair
    array_argVld [0][241] = hls_transform_unit_ex_hls_dup1_cr_qp_offset_list_EN_A & (hls_transform_unit_ex_hls_dup1_cr_qp_offset_list_WEN_A == 0);
    array_adr    [0][241] = hls_transform_unit_ex_hls_dup1_cr_qp_offset_list_Addr_A;

    //------READ (scalar, global adr = 1136) comb block-----//
    //s = 28; r = 1; a = 19;
    if (scalar_rdat_vld_r[28][1][19]) begin
        scalar_argdone [28][1][19] = 1;
    end
    scalar_adr[28][1][19] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][19]) begin
        scalar_argVld[28][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[28][1][19] = 1;
    end

    //------WRITE (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 82;
    array_argVld [0][82] = hls_transform_unit_ex_hls_dup1_qp_y_tab_EN_A & (hls_transform_unit_ex_hls_dup1_qp_y_tab_WEN_A != 0);
    array_adr    [0][82] = hls_transform_unit_ex_hls_dup1_qp_y_tab_Addr_A;
    array_wdat   [0][82] = hls_transform_unit_ex_hls_dup1_qp_y_tab_Din_A;

    //------READ (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 242;
    hls_transform_unit_ex_hls_dup1_qp_y_tab_Dout_A = array_rdat  [0][242];
    //found a write signal pair
    array_argVld [0][242] = hls_transform_unit_ex_hls_dup1_qp_y_tab_EN_A & (hls_transform_unit_ex_hls_dup1_qp_y_tab_WEN_A == 0);
    array_adr    [0][242] = hls_transform_unit_ex_hls_dup1_qp_y_tab_Addr_A;

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 1; a = 25;
    if (scalar_rdat_vld_r[12][1][25]) begin
        scalar_argdone [12][1][25] = 1;
    end
    scalar_adr[12][1][25] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][25]) begin
        scalar_argVld[12][1][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[12][1][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 1; a = 16;
    if (scalar_rdat_vld_r[20][1][16]) begin
        scalar_argdone [20][1][16] = 1;
    end
    scalar_adr    [20][1][16] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][16]) begin
        scalar_argVld [20][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [20][1][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 1; a = 14;
    if (scalar_rdat_vld_r[21][1][14]) begin
        scalar_argdone [21][1][14] = 1;
    end
    scalar_adr    [21][1][14] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][14]) begin
        scalar_argVld [21][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [21][1][14] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 1; a = 21;
    if (scalar_rdat_vld_r[22][1][21]) begin
        scalar_argdone [22][1][21] = 1;
    end
    scalar_adr    [22][1][21] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][21]) begin
        scalar_argVld [22][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [22][1][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 348) comb block-----//
    //s = 23; r = 0; a = 21;
    if (scalar_rdat_vld_r[23][0][21]) begin
        scalar_argdone [23][0][21] = 1;
    end
    scalar_adr    [23][0][21] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][21]) begin
        scalar_argVld [23][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [23][0][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 352) comb block-----//
    //s = 24; r = 1; a = 15;
    if (scalar_rdat_vld_r[24][1][15]) begin
        scalar_argdone [24][1][15] = 1;
    end
    scalar_adr    [24][1][15] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][15]) begin
        scalar_argVld [24][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [24][1][15] = 1;
    end

    //------READ (scalar, complete partition, global adr = 356) comb block-----//
    //s = 25; r = 1; a = 11;
    if (scalar_rdat_vld_r[25][1][11]) begin
        scalar_argdone [25][1][11] = 1;
    end
    scalar_adr    [25][1][11] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][11]) begin
        scalar_argVld [25][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [25][1][11] = 1;
    end

    //------READ (scalar, global adr = 484) comb block-----//
    //s = 25; r = 0; a = 13;
    if (scalar_rdat_vld_r[25][0][13]) begin
        scalar_argdone [25][0][13] = 1;
    end
    scalar_adr[25][0][13] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][13]) begin
        scalar_argVld[25][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[25][0][13] = 1;
    end

    //------READ (scalar, global adr = 488) comb block-----//
    //s = 26; r = 1; a = 20;
    if (scalar_rdat_vld_r[26][1][20]) begin
        scalar_argdone [26][1][20] = 1;
    end
    scalar_adr[26][1][20] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][20]) begin
        scalar_argVld[26][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[26][1][20] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 0; a = 23;
    if (scalar_rdat_vld_r[15][0][23]) begin
        scalar_argdone [15][0][23] = 1;
    end
    scalar_adr[15][0][23] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][23]) begin
        scalar_argVld[15][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[15][0][23] = 1;
    end

    //------WRITE (scalar, global adr = 492) comb block-----//
    //s = 27; r = 0; a = 8;
    if (scalar_argAck [27][0][8]) begin
        scalar_argVld [27][0][8] = 0;
        scalar_argAckdone [27][0][8] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_ap_vld_r) begin
        scalar_argVld [27][0][8] = 1;
        scalar_argAckdone [27][0][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][8] = hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cb_r;
    scalar_adr    [27][0][8] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 496) comb block-----//
    //s = 28; r = 0; a = 4;
    if (scalar_argAck [28][0][4]) begin
        scalar_argVld [28][0][4] = 0;
        scalar_argAckdone [28][0][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_ap_vld_r) begin
        scalar_argVld [28][0][4] = 1;
        scalar_argAckdone [28][0][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][0][4] = hls_transform_unit_ex_hls_dup1_tu_cu_qp_offset_cr_r;
    scalar_adr    [28][0][4] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 29;
    if (scalar_rdat_vld_r[6][1][29]) begin
        scalar_argdone [6][1][29] = 1;
    end
    scalar_adr[6][1][29] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][29]) begin
        scalar_argVld[6][1][29] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[6][1][29] = 1;
    end

    //------WRITE (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 9;
    if (scalar_argAck [6][1][9]) begin
        scalar_argVld [6][1][9] = 0;
        scalar_argAckdone [6][1][9] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_qp_y_o_ap_vld_r) begin
        scalar_argVld [6][1][9] = 1;
        scalar_argAckdone [6][1][9] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][9] = hls_transform_unit_ex_hls_dup1_qp_y_o_r;
    scalar_adr    [6][1][9] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 168) comb block-----//
    //s = 10; r = 0; a = 9;
    if (scalar_argAck [10][0][9]) begin
        scalar_argVld [10][0][9] = 0;
        scalar_argAckdone [10][0][9] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_log2_trafo_size_ap_vld_r) begin
        scalar_argVld [10][0][9] = 1;
        scalar_argAckdone [10][0][9] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][9] = hls_transform_unit_ex_hls_dup1_log2_trafo_size_r;
    scalar_adr    [10][0][9] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 56) comb block-----//
    //s = 14; r = 0; a = 26;
    if (scalar_rdat_vld_r[14][0][26]) begin
        scalar_argdone [14][0][26] = 1;
    end
    scalar_adr[14][0][26] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][26]) begin
        scalar_argVld[14][0][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[14][0][26] = 1;
    end

    //------WRITE (scalar, global adr = 56) comb block-----//
    //s = 14; r = 1; a = 8;
    if (scalar_argAck [14][1][8]) begin
        scalar_argVld [14][1][8] = 0;
        scalar_argAckdone [14][1][8] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_ap_vld_r) begin
        scalar_argVld [14][1][8] = 1;
        scalar_argAckdone [14][1][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][8] = hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_r;
    scalar_adr    [14][1][8] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 48) comb block-----//
    //s = 12; r = 0; a = 27;
    if (scalar_rdat_vld_r[12][0][27]) begin
        scalar_argdone [12][0][27] = 1;
    end
    scalar_adr[12][0][27] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][27]) begin
        scalar_argVld[12][0][27] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[12][0][27] = 1;
    end

    //------WRITE (scalar, global adr = 48) comb block-----//
    //s = 12; r = 0; a = 8;
    if (scalar_argAck [12][0][8]) begin
        scalar_argVld [12][0][8] = 0;
        scalar_argAckdone [12][0][8] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_scan_idx_o_ap_vld_r) begin
        scalar_argVld [12][0][8] = 1;
        scalar_argAckdone [12][0][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][8] = hls_transform_unit_ex_hls_dup1_scan_idx_o_r;
    scalar_adr    [12][0][8] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 52) comb block-----//
    //s = 13; r = 0; a = 7;
    if (scalar_argAck [13][0][7]) begin
        scalar_argVld [13][0][7] = 0;
        scalar_argAckdone [13][0][7] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_scan_idx_c_ap_vld_r) begin
        scalar_argVld [13][0][7] = 1;
        scalar_argAckdone [13][0][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][7] = hls_transform_unit_ex_hls_dup1_scan_idx_c_r;
    scalar_adr    [13][0][7] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1140) comb block-----//
    //s = 29; r = 0; a = 28;
    if (scalar_rdat_vld_r[29][0][28]) begin
        scalar_argdone [29][0][28] = 1;
    end
    scalar_adr[29][0][28] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][28]) begin
        scalar_argVld[29][0][28] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[29][0][28] = 1;
    end

    //------WRITE (scalar, global adr = 1140) comb block-----//
    //s = 29; r = 1; a = 8;
    if (scalar_argAck [29][1][8]) begin
        scalar_argVld [29][1][8] = 0;
        scalar_argAckdone [29][1][8] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cmdr_run_o_ap_vld_r) begin
        scalar_argVld [29][1][8] = 1;
        scalar_argAckdone [29][1][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][8] = hls_transform_unit_ex_hls_dup1_cmdr_run_o_r;
    scalar_adr    [29][1][8] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1244) comb block-----//
    //s = 23; r = 1; a = 20;
    if (scalar_rdat_vld_r[23][1][20]) begin
        scalar_argdone [23][1][20] = 1;
    end
    scalar_adr    [23][1][20] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][20]) begin
        scalar_argVld [23][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [23][1][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1248) comb block-----//
    //s = 24; r = 0; a = 17;
    if (scalar_rdat_vld_r[24][0][17]) begin
        scalar_argdone [24][0][17] = 1;
    end
    scalar_adr    [24][0][17] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][17]) begin
        scalar_argVld [24][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [24][0][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1252) comb block-----//
    //s = 25; r = 1; a = 12;
    if (scalar_rdat_vld_r[25][1][12]) begin
        scalar_argdone [25][1][12] = 1;
    end
    scalar_adr    [25][1][12] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][12]) begin
        scalar_argVld [25][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [25][1][12] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1148) comb block-----//
    //s = 31; r = 0; a = 33;
    if (scalar_rdat_vld_r[31][0][33]) begin
        scalar_argdone [31][0][33] = 1;
    end
    scalar_adr    [31][0][33] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][33]) begin
        scalar_argVld [31][0][33] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [31][0][33] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1152) comb block-----//
    //s = 0; r = 1; a = 28;
    if (scalar_rdat_vld_r[0][1][28]) begin
        scalar_argdone [0][1][28] = 1;
    end
    scalar_adr    [0][1][28] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][28]) begin
        scalar_argVld [0][1][28] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [0][1][28] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1156) comb block-----//
    //s = 1; r = 1; a = 26;
    if (scalar_rdat_vld_r[1][1][26]) begin
        scalar_argdone [1][1][26] = 1;
    end
    scalar_adr    [1][1][26] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][26]) begin
        scalar_argVld [1][1][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld [1][1][26] = 1;
    end

    //------READ (scalar, global adr = 1144) comb block-----//
    //s = 30; r = 0; a = 14;
    if (scalar_rdat_vld_r[30][0][14]) begin
        scalar_argdone [30][0][14] = 1;
    end
    scalar_adr[30][0][14] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][14]) begin
        scalar_argVld[30][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[30][0][14] = 1;
    end

    //------WRITE (scalar, global adr = 160) comb block-----//
    //s = 8; r = 1; a = 11;
    if (scalar_argAck [8][1][11]) begin
        scalar_argVld [8][1][11] = 0;
        scalar_argAckdone [8][1][11] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_nPbW_ap_vld_r) begin
        scalar_argVld [8][1][11] = 1;
        scalar_argAckdone [8][1][11] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][11] = hls_transform_unit_ex_hls_dup1_nPbW_r;
    scalar_adr    [8][1][11] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 164) comb block-----//
    //s = 9; r = 1; a = 11;
    if (scalar_argAck [9][1][11]) begin
        scalar_argVld [9][1][11] = 0;
        scalar_argAckdone [9][1][11] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_nPbH_ap_vld_r) begin
        scalar_argVld [9][1][11] = 1;
        scalar_argAckdone [9][1][11] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][11] = hls_transform_unit_ex_hls_dup1_nPbH_r;
    scalar_adr    [9][1][11] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 580) comb block-----//
    //s = 17; r = 1; a = 3;
    if (scalar_argAck [17][1][3]) begin
        scalar_argVld [17][1][3] = 0;
        scalar_argAckdone [17][1][3] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_up_ap_vld_r) begin
        scalar_argVld [17][1][3] = 1;
        scalar_argAckdone [17][1][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][1][3] = hls_transform_unit_ex_hls_dup1_cand_up_r;
    scalar_adr    [17][1][3] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 584) comb block-----//
    //s = 18; r = 1; a = 3;
    if (scalar_argAck [18][1][3]) begin
        scalar_argVld [18][1][3] = 0;
        scalar_argAckdone [18][1][3] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_left_ap_vld_r) begin
        scalar_argVld [18][1][3] = 1;
        scalar_argAckdone [18][1][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][1][3] = hls_transform_unit_ex_hls_dup1_cand_left_r;
    scalar_adr    [18][1][3] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 588) comb block-----//
    //s = 19; r = 1; a = 4;
    if (scalar_argAck [19][1][4]) begin
        scalar_argVld [19][1][4] = 0;
        scalar_argAckdone [19][1][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_up_left_ap_vld_r) begin
        scalar_argVld [19][1][4] = 1;
        scalar_argAckdone [19][1][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][1][4] = hls_transform_unit_ex_hls_dup1_cand_up_left_r;
    scalar_adr    [19][1][4] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 592) comb block-----//
    //s = 20; r = 1; a = 6;
    if (scalar_argAck [20][1][6]) begin
        scalar_argVld [20][1][6] = 0;
        scalar_argAckdone [20][1][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_up_right_sap_ap_vld_r) begin
        scalar_argVld [20][1][6] = 1;
        scalar_argAckdone [20][1][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][6] = hls_transform_unit_ex_hls_dup1_cand_up_right_sap_r;
    scalar_adr    [20][1][6] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 596) comb block-----//
    //s = 21; r = 0; a = 6;
    if (scalar_argAck [21][0][6]) begin
        scalar_argVld [21][0][6] = 0;
        scalar_argAckdone [21][0][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_up_right_ap_vld_r) begin
        scalar_argVld [21][0][6] = 1;
        scalar_argAckdone [21][0][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][6] = hls_transform_unit_ex_hls_dup1_cand_up_right_r;
    scalar_adr    [21][0][6] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 600) comb block-----//
    //s = 22; r = 0; a = 23;
    if (scalar_rdat_vld_r[22][0][23]) begin
        scalar_argdone [22][0][23] = 1;
    end
    scalar_adr[22][0][23] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][23]) begin
        scalar_argVld[22][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[22][0][23] = 1;
    end

    //------WRITE (scalar, global adr = 600) comb block-----//
    //s = 22; r = 0; a = 6;
    if (scalar_argAck [22][0][6]) begin
        scalar_argVld [22][0][6] = 0;
        scalar_argAckdone [22][0][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_ap_vld_r) begin
        scalar_argVld [22][0][6] = 1;
        scalar_argAckdone [22][0][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][6] = hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_r;
    scalar_adr    [22][0][6] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1412) comb block-----//
    //s = 1; r = 0; a = 3;
    if (scalar_argAck [1][0][3]) begin
        scalar_argVld [1][0][3] = 0;
        scalar_argAckdone [1][0][3] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_up_c_ap_vld_r) begin
        scalar_argVld [1][0][3] = 1;
        scalar_argAckdone [1][0][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][0][3] = hls_transform_unit_ex_hls_dup1_cand_up_c_r;
    scalar_adr    [1][0][3] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1416) comb block-----//
    //s = 2; r = 1; a = 1;
    if (scalar_argAck [2][1][1]) begin
        scalar_argVld [2][1][1] = 0;
        scalar_argAckdone [2][1][1] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_left_c_ap_vld_r) begin
        scalar_argVld [2][1][1] = 1;
        scalar_argAckdone [2][1][1] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][1][1] = hls_transform_unit_ex_hls_dup1_cand_left_c_r;
    scalar_adr    [2][1][1] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1420) comb block-----//
    //s = 3; r = 1; a = 2;
    if (scalar_argAck [3][1][2]) begin
        scalar_argVld [3][1][2] = 0;
        scalar_argAckdone [3][1][2] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_up_left_c_ap_vld_r) begin
        scalar_argVld [3][1][2] = 1;
        scalar_argAckdone [3][1][2] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][1][2] = hls_transform_unit_ex_hls_dup1_cand_up_left_c_r;
    scalar_adr    [3][1][2] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1424) comb block-----//
    //s = 4; r = 1; a = 5;
    if (scalar_argAck [4][1][5]) begin
        scalar_argVld [4][1][5] = 0;
        scalar_argAckdone [4][1][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_ap_vld_r) begin
        scalar_argVld [4][1][5] = 1;
        scalar_argAckdone [4][1][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][1][5] = hls_transform_unit_ex_hls_dup1_cand_up_right_sap_c_r;
    scalar_adr    [4][1][5] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1428) comb block-----//
    //s = 5; r = 0; a = 10;
    if (scalar_argAck [5][0][10]) begin
        scalar_argVld [5][0][10] = 0;
        scalar_argAckdone [5][0][10] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_up_right_c_ap_vld_r) begin
        scalar_argVld [5][0][10] = 1;
        scalar_argAckdone [5][0][10] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][10] = hls_transform_unit_ex_hls_dup1_cand_up_right_c_r;
    scalar_adr    [5][0][10] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1432) comb block-----//
    //s = 6; r = 0; a = 31;
    if (scalar_rdat_vld_r[6][0][31]) begin
        scalar_argdone [6][0][31] = 1;
    end
    scalar_adr[6][0][31] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][31]) begin
        scalar_argVld[6][0][31] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[6][0][31] = 1;
    end

    //------WRITE (scalar, global adr = 1432) comb block-----//
    //s = 6; r = 0; a = 10;
    if (scalar_argAck [6][0][10]) begin
        scalar_argVld [6][0][10] = 0;
        scalar_argAckdone [6][0][10] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_ap_vld_r) begin
        scalar_argVld [6][0][10] = 1;
        scalar_argAckdone [6][0][10] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][10] = hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_r;
    scalar_adr    [6][0][10] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 22;
    if (scalar_rdat_vld_r[26][0][22]) begin
        scalar_argdone [26][0][22] = 1;
    end
    scalar_adr[26][0][22] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][22]) begin
        scalar_argVld[26][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[26][0][22] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 0; a = 22;
    if (scalar_rdat_vld_r[23][0][22]) begin
        scalar_argdone [23][0][22] = 1;
    end
    scalar_adr[23][0][22] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][22]) begin
        scalar_argVld[23][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[23][0][22] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 16;
    if (scalar_rdat_vld_r[24][1][16]) begin
        scalar_argdone [24][1][16] = 1;
    end
    scalar_adr[24][1][16] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][16]) begin
        scalar_argVld[24][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[24][1][16] = 1;
    end

    //------READ (scalar, global adr = 612) comb block-----//
    //s = 25; r = 0; a = 14;
    if (scalar_rdat_vld_r[25][0][14]) begin
        scalar_argdone [25][0][14] = 1;
    end
    scalar_adr[25][0][14] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][14]) begin
        scalar_argVld[25][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[25][0][14] = 1;
    end

    //------READ (scalar, global adr = 616) comb block-----//
    //s = 26; r = 1; a = 21;
    if (scalar_rdat_vld_r[26][1][21]) begin
        scalar_argdone [26][1][21] = 1;
    end
    scalar_adr[26][1][21] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][21]) begin
        scalar_argVld[26][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[26][1][21] = 1;
    end

    //------READ (scalar, global adr = 620) comb block-----//
    //s = 27; r = 1; a = 20;
    if (scalar_rdat_vld_r[27][1][20]) begin
        scalar_argdone [27][1][20] = 1;
    end
    scalar_adr[27][1][20] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][20]) begin
        scalar_argVld[27][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[27][1][20] = 1;
    end

    //------READ (scalar, global adr = 624) comb block-----//
    //s = 28; r = 0; a = 20;
    if (scalar_rdat_vld_r[28][0][20]) begin
        scalar_argdone [28][0][20] = 1;
    end
    scalar_adr[28][0][20] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][20]) begin
        scalar_argVld[28][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[28][0][20] = 1;
    end

    //------READ (scalar, global adr = 472) comb block-----//
    //s = 22; r = 1; a = 22;
    if (scalar_rdat_vld_r[22][1][22]) begin
        scalar_argdone [22][1][22] = 1;
    end
    scalar_adr[22][1][22] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][22]) begin
        scalar_argVld[22][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[22][1][22] = 1;
    end

    //------WRITE (scalar, global adr = 472) comb block-----//
    //s = 22; r = 1; a = 6;
    if (scalar_argAck [22][1][6]) begin
        scalar_argVld [22][1][6] = 0;
        scalar_argAckdone [22][1][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r) begin
        scalar_argVld [22][1][6] = 1;
        scalar_argAckdone [22][1][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][6] = hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_r;
    scalar_adr    [22][1][6] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 21;
    if (scalar_rdat_vld_r[23][1][21]) begin
        scalar_argdone [23][1][21] = 1;
    end
    scalar_adr[23][1][21] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][21]) begin
        scalar_argVld[23][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[23][1][21] = 1;
    end

    //------WRITE (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 5;
    if (scalar_argAck [23][1][5]) begin
        scalar_argVld [23][1][5] = 0;
        scalar_argAckdone [23][1][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_ap_vld_r) begin
        scalar_argVld [23][1][5] = 1;
        scalar_argAckdone [23][1][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][1][5] = hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_r;
    scalar_adr    [23][1][5] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 468) comb block-----//
    //s = 21; r = 1; a = 6;
    if (scalar_argAck [21][1][6]) begin
        scalar_argVld [21][1][6] = 0;
        scalar_argAckdone [21][1][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_ap_vld_r) begin
        scalar_argVld [21][1][6] = 1;
        scalar_argAckdone [21][1][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][6] = hls_transform_unit_ex_hls_dup1_tu_cu_qp_delta_r;
    scalar_adr    [21][1][6] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 500) comb block-----//
    //s = 29; r = 0; a = 9;
    if (scalar_argAck [29][0][9]) begin
        scalar_argVld [29][0][9] = 0;
        scalar_argAckdone [29][0][9] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_tu_cross_pf_ap_vld_r) begin
        scalar_argVld [29][0][9] = 1;
        scalar_argAckdone [29][0][9] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][9] = hls_transform_unit_ex_hls_dup1_tu_cross_pf_r;
    scalar_adr    [29][0][9] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 532) comb block-----//
    //s = 5; r = 1; a = 23;
    if (scalar_rdat_vld_r[5][1][23]) begin
        scalar_argdone [5][1][23] = 1;
    end
    scalar_adr[5][1][23] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][23]) begin
        scalar_argVld[5][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[5][1][23] = 1;
    end

    //------WRITE (scalar, global adr = 532) comb block-----//
    //s = 5; r = 1; a = 10;
    if (scalar_argAck [5][1][10]) begin
        scalar_argVld [5][1][10] = 0;
        scalar_argAckdone [5][1][10] = 1;
    end
    if (hls_transform_unit_ex_hls_dup1_first_qp_group_o_ap_vld_r) begin
        scalar_argVld [5][1][10] = 1;
        scalar_argAckdone [5][1][10] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][10] = hls_transform_unit_ex_hls_dup1_first_qp_group_o_r;
    scalar_adr    [5][1][10] = {ap_part_w[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 328) comb block-----//
    //s = 18; r = 1; a = 14;
    if (scalar_rdat_vld_r[18][1][14]) begin
        scalar_argdone [18][1][14] = 1;
    end
    scalar_adr[18][1][14] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][14]) begin
        scalar_argVld[18][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[18][1][14] = 1;
    end

    //------READ (scalar, global adr = 448) comb block-----//
    //s = 16; r = 1; a = 16;
    if (scalar_rdat_vld_r[16][1][16]) begin
        scalar_argdone [16][1][16] = 1;
    end
    scalar_adr[16][1][16] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][16]) begin
        scalar_argVld[16][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[16][1][16] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 1; a = 28;
    if (scalar_rdat_vld_r[11][1][28]) begin
        scalar_argdone [11][1][28] = 1;
    end
    scalar_adr[11][1][28] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][28]) begin
        scalar_argVld[11][1][28] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[11][1][28] = 1;
    end

    //------READ (scalar, global adr = 540) comb block-----//
    //s = 7; r = 1; a = 20;
    if (scalar_rdat_vld_r[7][1][20]) begin
        scalar_argdone [7][1][20] = 1;
    end
    scalar_adr[7][1][20] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][20]) begin
        scalar_argVld[7][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[7][1][20] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 0; a = 25;
    if (scalar_rdat_vld_r[13][0][25]) begin
        scalar_argdone [13][0][25] = 1;
    end
    scalar_adr[13][0][25] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][25]) begin
        scalar_argVld[13][0][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[13][0][25] = 1;
    end

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 1; a = 20;
    if (scalar_rdat_vld_r[28][1][20]) begin
        scalar_argdone [28][1][20] = 1;
    end
    scalar_adr[28][1][20] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][20]) begin
        scalar_argVld[28][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[28][1][20] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 1; a = 16;
    if (scalar_rdat_vld_r[2][1][16]) begin
        scalar_argdone [2][1][16] = 1;
    end
    scalar_adr[2][1][16] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][16]) begin
        scalar_argVld[2][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[2][1][16] = 1;
    end

    //------READ (scalar, global adr = 460) comb block-----//
    //s = 19; r = 0; a = 18;
    if (scalar_rdat_vld_r[19][0][18]) begin
        scalar_argdone [19][0][18] = 1;
    end
    scalar_adr[19][0][18] = {ap_part[hls_transform_unit_ex_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][18]) begin
        scalar_argVld[19][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argVld[19][0][18] = 1;
    end

    hls_transform_unit_ex_hls_dup1_ready = array_argRdy[0][80]& array_argRdy[0][240]& array_argRdy[0][81]& array_argRdy[0][241]& array_argRdy[0][82]& array_argRdy[0][242] & ~ap_arb_reload_running_r[hls_transform_unit_ex_hls_dup1];
    array_ap_ce[0][80] = ap_ce[hls_transform_unit_ex_hls_dup1];
    array_ap_ce[0][240] = ap_ce[hls_transform_unit_ex_hls_dup1];
    array_ap_ce[0][81] = ap_ce[hls_transform_unit_ex_hls_dup1];
    array_ap_ce[0][241] = ap_ce[hls_transform_unit_ex_hls_dup1];
    array_ap_ce[0][82] = ap_ce[hls_transform_unit_ex_hls_dup1];
    array_ap_ce[0][242] = ap_ce[hls_transform_unit_ex_hls_dup1];

    if (ap_arb_ret[hls_transform_unit_ex_hls_dup1] & ~ap_arb_ret_r[hls_transform_unit_ex_hls_dup1]) begin
        ap_arb_ret_running[hls_transform_unit_ex_hls_dup1] = 1;
        hls_transform_unit_ex_hls_dup1_ready = 0;
    end

    scalar_argAckdone_all[hls_transform_unit_ex_hls_dup1] = scalar_argAckdone[27][0][8] &
                                                scalar_argAckdone[28][0][4] &
                                                scalar_argAckdone[6][1][9] &
                                                scalar_argAckdone[10][0][9] &
                                                scalar_argAckdone[14][1][8] &
                                                scalar_argAckdone[12][0][8] &
                                                scalar_argAckdone[13][0][7] &
                                                scalar_argAckdone[29][1][8] &
                                                scalar_argAckdone[8][1][11] &
                                                scalar_argAckdone[9][1][11] &
                                                scalar_argAckdone[17][1][3] &
                                                scalar_argAckdone[18][1][3] &
                                                scalar_argAckdone[19][1][4] &
                                                scalar_argAckdone[20][1][6] &
                                                scalar_argAckdone[21][0][6] &
                                                scalar_argAckdone[22][0][6] &
                                                scalar_argAckdone[1][0][3] &
                                                scalar_argAckdone[2][1][1] &
                                                scalar_argAckdone[3][1][2] &
                                                scalar_argAckdone[4][1][5] &
                                                scalar_argAckdone[5][0][10] &
                                                scalar_argAckdone[6][0][10] &
                                                scalar_argAckdone[22][1][6] &
                                                scalar_argAckdone[23][1][5] &
                                                scalar_argAckdone[21][1][6] &
                                                scalar_argAckdone[29][0][9] &
                                                scalar_argAckdone[5][1][10];
    if (ap_arb_ret_running[hls_transform_unit_ex_hls_dup1] & scalar_argAckdone_all[hls_transform_unit_ex_hls_dup1] &~ ap_arb_reload_running_r[hls_transform_unit_ex_hls_dup1]) begin
        ap_arb_reload[hls_transform_unit_ex_hls_dup1] = 1;
        ap_arb_reload_running[hls_transform_unit_ex_hls_dup1] = 1;
    end

    if (ap_arb_start[hls_transform_unit_ex_hls_dup1] &~ ap_arb_start_r[hls_transform_unit_ex_hls_dup1]) begin
        ap_arb_start_running[hls_transform_unit_ex_hls_dup1] = 1;
    end

    if (ap_arb_start_running[hls_transform_unit_ex_hls_dup1] & ~scalar_writing_20& ~scalar_writing_16& ~scalar_writing_560& ~scalar_writing_484& ~scalar_writing_488& ~scalar_writing_572& ~scalar_writing_536& ~scalar_writing_56& ~scalar_writing_48& ~scalar_writing_1140& ~scalar_writing_600& ~scalar_writing_1432& ~scalar_writing_604& ~scalar_writing_608& ~scalar_writing_612& ~scalar_writing_616& ~scalar_writing_620& ~scalar_writing_624& ~scalar_writing_472& ~scalar_writing_476& ~scalar_writing_532& ~scalar_writing_540) begin
        ap_arb_start_running[hls_transform_unit_ex_hls_dup1] = 0;
        ap_arb_reload[hls_transform_unit_ex_hls_dup1] = 1;
    end

    scalar_argdone_all[hls_transform_unit_ex_hls_dup1] = scalar_argdone[5][0][24] &
                                                                scalar_argdone[4][1][16] &
                                                                scalar_argdone[2][0][17] &
                                                                scalar_argdone[28][1][19] &
                                                                scalar_argdone[12][1][25] &
                                                                scalar_argdone[20][1][16] &
                                                                scalar_argdone[21][1][14] &
                                                                scalar_argdone[22][1][21] &
                                                                scalar_argdone[23][0][21] &
                                                                scalar_argdone[24][1][15] &
                                                                scalar_argdone[25][1][11] &
                                                                scalar_argdone[25][0][13] &
                                                                scalar_argdone[26][1][20] &
                                                                scalar_argdone[15][0][23] &
                                                                scalar_argdone[6][1][29] &
                                                                scalar_argdone[14][0][26] &
                                                                scalar_argdone[12][0][27] &
                                                                scalar_argdone[29][0][28] &
                                                                scalar_argdone[23][1][20] &
                                                                scalar_argdone[24][0][17] &
                                                                scalar_argdone[25][1][12] &
                                                                scalar_argdone[31][0][33] &
                                                                scalar_argdone[0][1][28] &
                                                                scalar_argdone[1][1][26] &
                                                                scalar_argdone[30][0][14] &
                                                                scalar_argdone[22][0][23] &
                                                                scalar_argdone[6][0][31] &
                                                                scalar_argdone[26][0][22] &
                                                                scalar_argdone[23][0][22] &
                                                                scalar_argdone[24][1][16] &
                                                                scalar_argdone[25][0][14] &
                                                                scalar_argdone[26][1][21] &
                                                                scalar_argdone[27][1][20] &
                                                                scalar_argdone[28][0][20] &
                                                                scalar_argdone[22][1][22] &
                                                                scalar_argdone[23][1][21] &
                                                                scalar_argdone[5][1][23] &
                                                                scalar_argdone[18][1][14] &
                                                                scalar_argdone[16][1][16] &
                                                                scalar_argdone[11][1][28] &
                                                                scalar_argdone[7][1][20] &
                                                                scalar_argdone[13][0][25] &
                                                                scalar_argdone[28][1][20] &
                                                                scalar_argdone[2][1][16] &
                                                                scalar_argdone[19][0][18];

    if (scalar_argdone_all_r[hls_transform_unit_ex_hls_dup1]) begin
        scalar_argdone[5][0][24] = 0;
        scalar_argdone[4][1][16] = 0;
        scalar_argdone[2][0][17] = 0;
        scalar_argdone[28][1][19] = 0;
        scalar_argdone[12][1][25] = 0;
        scalar_argdone[20][1][16] = 0;
        scalar_argdone[21][1][14] = 0;
        scalar_argdone[22][1][21] = 0;
        scalar_argdone[23][0][21] = 0;
        scalar_argdone[24][1][15] = 0;
        scalar_argdone[25][1][11] = 0;
        scalar_argdone[25][0][13] = 0;
        scalar_argdone[26][1][20] = 0;
        scalar_argdone[15][0][23] = 0;
        scalar_argdone[6][1][29] = 0;
        scalar_argdone[14][0][26] = 0;
        scalar_argdone[12][0][27] = 0;
        scalar_argdone[29][0][28] = 0;
        scalar_argdone[23][1][20] = 0;
        scalar_argdone[24][0][17] = 0;
        scalar_argdone[25][1][12] = 0;
        scalar_argdone[31][0][33] = 0;
        scalar_argdone[0][1][28] = 0;
        scalar_argdone[1][1][26] = 0;
        scalar_argdone[30][0][14] = 0;
        scalar_argdone[22][0][23] = 0;
        scalar_argdone[6][0][31] = 0;
        scalar_argdone[26][0][22] = 0;
        scalar_argdone[23][0][22] = 0;
        scalar_argdone[24][1][16] = 0;
        scalar_argdone[25][0][14] = 0;
        scalar_argdone[26][1][21] = 0;
        scalar_argdone[27][1][20] = 0;
        scalar_argdone[28][0][20] = 0;
        scalar_argdone[22][1][22] = 0;
        scalar_argdone[23][1][21] = 0;
        scalar_argdone[5][1][23] = 0;
        scalar_argdone[18][1][14] = 0;
        scalar_argdone[16][1][16] = 0;
        scalar_argdone[11][1][28] = 0;
        scalar_argdone[7][1][20] = 0;
        scalar_argdone[13][0][25] = 0;
        scalar_argdone[28][1][20] = 0;
        scalar_argdone[2][1][16] = 0;
        scalar_argdone[19][0][18] = 0;

        if (ap_arb_start_r[hls_transform_unit_ex_hls_dup1] & ~ap_running_r[hls_transform_unit_ex_hls_dup1]) begin
            ap_start[hls_transform_unit_ex_hls_dup1] = 1;
            ap_running[hls_transform_unit_ex_hls_dup1] = 1;
        end
        else if (ap_arb_ret_running_r[hls_transform_unit_ex_hls_dup1]) begin
            ap_arb_ret_running[hls_transform_unit_ex_hls_dup1] = 0;
            ap_arb_reload_running[hls_transform_unit_ex_hls_dup1] = 0;
        end
    end

    if (ap_start_r[hls_transform_unit_ex_hls_dup1] & ap_ready_r[hls_transform_unit_ex_hls_dup1]) begin
        ap_start[hls_transform_unit_ex_hls_dup1] = 0;
    end

    if (ap_done_r[hls_transform_unit_ex_hls_dup1]) begin
        ap_running[hls_transform_unit_ex_hls_dup1] = 0;
    end
`endif
    //============================================================
    //hls_transform_unit_ex_hls_dup2       (f = 8)
    //============================================================
`ifdef enable_connect_hls_transform_unit_ex_hls_dup2
    //------READ (scalar, global adr = 20) comb block-----//
    //s = 5; r = 0; a = 25;
    if (scalar_rdat_vld_r[5][0][25]) begin
        scalar_argdone [5][0][25] = 1;
    end
    scalar_adr[5][0][25] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][25]) begin
        scalar_argVld[5][0][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[5][0][25] = 1;
    end

    //------READ (scalar, global adr = 16) comb block-----//
    //s = 4; r = 0; a = 17;
    if (scalar_rdat_vld_r[4][0][17]) begin
        scalar_argdone [4][0][17] = 1;
    end
    scalar_adr[4][0][17] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][17]) begin
        scalar_argVld[4][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[4][0][17] = 1;
    end

    //------READ (scalar, global adr = 1160) comb block-----//
    //s = 2; r = 0; a = 18;
    if (scalar_rdat_vld_r[2][0][18]) begin
        scalar_argdone [2][0][18] = 1;
    end
    scalar_adr[2][0][18] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][18]) begin
        scalar_argVld[2][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[2][0][18] = 1;
    end

    //------WRITE (array range, global adr = 12288, width=8, addr_width=32) -----//
    //s = 0; a = 83;
    array_argVld [0][83] = hls_transform_unit_ex_hls_dup2_cb_qp_offset_list_EN_A & (hls_transform_unit_ex_hls_dup2_cb_qp_offset_list_WEN_A != 0);
    array_adr    [0][83] = hls_transform_unit_ex_hls_dup2_cb_qp_offset_list_Addr_A;
    array_wdat   [0][83] = hls_transform_unit_ex_hls_dup2_cb_qp_offset_list_Din_A;

    //------READ (array range, global adr = 12288, width=8, addr_width=32) -----//
    //s = 0; a = 243;
    hls_transform_unit_ex_hls_dup2_cb_qp_offset_list_Dout_A = array_rdat  [0][243];
    //found a write signal pair
    array_argVld [0][243] = hls_transform_unit_ex_hls_dup2_cb_qp_offset_list_EN_A & (hls_transform_unit_ex_hls_dup2_cb_qp_offset_list_WEN_A == 0);
    array_adr    [0][243] = hls_transform_unit_ex_hls_dup2_cb_qp_offset_list_Addr_A;

    //------WRITE (array range, global adr = 12296, width=8, addr_width=32) -----//
    //s = 0; a = 84;
    array_argVld [0][84] = hls_transform_unit_ex_hls_dup2_cr_qp_offset_list_EN_A & (hls_transform_unit_ex_hls_dup2_cr_qp_offset_list_WEN_A != 0);
    array_adr    [0][84] = hls_transform_unit_ex_hls_dup2_cr_qp_offset_list_Addr_A;
    array_wdat   [0][84] = hls_transform_unit_ex_hls_dup2_cr_qp_offset_list_Din_A;

    //------READ (array range, global adr = 12296, width=8, addr_width=32) -----//
    //s = 0; a = 244;
    hls_transform_unit_ex_hls_dup2_cr_qp_offset_list_Dout_A = array_rdat  [0][244];
    //found a write signal pair
    array_argVld [0][244] = hls_transform_unit_ex_hls_dup2_cr_qp_offset_list_EN_A & (hls_transform_unit_ex_hls_dup2_cr_qp_offset_list_WEN_A == 0);
    array_adr    [0][244] = hls_transform_unit_ex_hls_dup2_cr_qp_offset_list_Addr_A;

    //------READ (scalar, global adr = 1136) comb block-----//
    //s = 28; r = 0; a = 21;
    if (scalar_rdat_vld_r[28][0][21]) begin
        scalar_argdone [28][0][21] = 1;
    end
    scalar_adr[28][0][21] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][21]) begin
        scalar_argVld[28][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[28][0][21] = 1;
    end

    //------WRITE (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 85;
    array_argVld [0][85] = hls_transform_unit_ex_hls_dup2_qp_y_tab_EN_A & (hls_transform_unit_ex_hls_dup2_qp_y_tab_WEN_A != 0);
    array_adr    [0][85] = hls_transform_unit_ex_hls_dup2_qp_y_tab_Addr_A;
    array_wdat   [0][85] = hls_transform_unit_ex_hls_dup2_qp_y_tab_Din_A;

    //------READ (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 245;
    hls_transform_unit_ex_hls_dup2_qp_y_tab_Dout_A = array_rdat  [0][245];
    //found a write signal pair
    array_argVld [0][245] = hls_transform_unit_ex_hls_dup2_qp_y_tab_EN_A & (hls_transform_unit_ex_hls_dup2_qp_y_tab_WEN_A == 0);
    array_adr    [0][245] = hls_transform_unit_ex_hls_dup2_qp_y_tab_Addr_A;

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 1; a = 26;
    if (scalar_rdat_vld_r[12][1][26]) begin
        scalar_argdone [12][1][26] = 1;
    end
    scalar_adr[12][1][26] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][26]) begin
        scalar_argVld[12][1][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[12][1][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 0; a = 17;
    if (scalar_rdat_vld_r[20][0][17]) begin
        scalar_argdone [20][0][17] = 1;
    end
    scalar_adr    [20][0][17] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][17]) begin
        scalar_argVld [20][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [20][0][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 0; a = 16;
    if (scalar_rdat_vld_r[21][0][16]) begin
        scalar_argdone [21][0][16] = 1;
    end
    scalar_adr    [21][0][16] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][16]) begin
        scalar_argVld [21][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [21][0][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 0; a = 24;
    if (scalar_rdat_vld_r[22][0][24]) begin
        scalar_argdone [22][0][24] = 1;
    end
    scalar_adr    [22][0][24] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][24]) begin
        scalar_argVld [22][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [22][0][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 348) comb block-----//
    //s = 23; r = 0; a = 23;
    if (scalar_rdat_vld_r[23][0][23]) begin
        scalar_argdone [23][0][23] = 1;
    end
    scalar_adr    [23][0][23] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][23]) begin
        scalar_argVld [23][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [23][0][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 352) comb block-----//
    //s = 24; r = 0; a = 18;
    if (scalar_rdat_vld_r[24][0][18]) begin
        scalar_argdone [24][0][18] = 1;
    end
    scalar_adr    [24][0][18] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][18]) begin
        scalar_argVld [24][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [24][0][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 356) comb block-----//
    //s = 25; r = 1; a = 13;
    if (scalar_rdat_vld_r[25][1][13]) begin
        scalar_argdone [25][1][13] = 1;
    end
    scalar_adr    [25][1][13] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][13]) begin
        scalar_argVld [25][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [25][1][13] = 1;
    end

    //------READ (scalar, global adr = 484) comb block-----//
    //s = 25; r = 0; a = 15;
    if (scalar_rdat_vld_r[25][0][15]) begin
        scalar_argdone [25][0][15] = 1;
    end
    scalar_adr[25][0][15] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][15]) begin
        scalar_argVld[25][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[25][0][15] = 1;
    end

    //------READ (scalar, global adr = 488) comb block-----//
    //s = 26; r = 0; a = 23;
    if (scalar_rdat_vld_r[26][0][23]) begin
        scalar_argdone [26][0][23] = 1;
    end
    scalar_adr[26][0][23] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][23]) begin
        scalar_argVld[26][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[26][0][23] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 23;
    if (scalar_rdat_vld_r[15][1][23]) begin
        scalar_argdone [15][1][23] = 1;
    end
    scalar_adr[15][1][23] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][23]) begin
        scalar_argVld[15][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[15][1][23] = 1;
    end

    //------WRITE (scalar, global adr = 492) comb block-----//
    //s = 27; r = 1; a = 8;
    if (scalar_argAck [27][1][8]) begin
        scalar_argVld [27][1][8] = 0;
        scalar_argAckdone [27][1][8] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_ap_vld_r) begin
        scalar_argVld [27][1][8] = 1;
        scalar_argAckdone [27][1][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][1][8] = hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cb_r;
    scalar_adr    [27][1][8] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 496) comb block-----//
    //s = 28; r = 1; a = 4;
    if (scalar_argAck [28][1][4]) begin
        scalar_argVld [28][1][4] = 0;
        scalar_argAckdone [28][1][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_ap_vld_r) begin
        scalar_argVld [28][1][4] = 1;
        scalar_argAckdone [28][1][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][1][4] = hls_transform_unit_ex_hls_dup2_tu_cu_qp_offset_cr_r;
    scalar_adr    [28][1][4] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 30;
    if (scalar_rdat_vld_r[6][1][30]) begin
        scalar_argdone [6][1][30] = 1;
    end
    scalar_adr[6][1][30] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][30]) begin
        scalar_argVld[6][1][30] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[6][1][30] = 1;
    end

    //------WRITE (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 10;
    if (scalar_argAck [6][1][10]) begin
        scalar_argVld [6][1][10] = 0;
        scalar_argAckdone [6][1][10] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_qp_y_o_ap_vld_r) begin
        scalar_argVld [6][1][10] = 1;
        scalar_argAckdone [6][1][10] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][10] = hls_transform_unit_ex_hls_dup2_qp_y_o_r;
    scalar_adr    [6][1][10] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 168) comb block-----//
    //s = 10; r = 1; a = 9;
    if (scalar_argAck [10][1][9]) begin
        scalar_argVld [10][1][9] = 0;
        scalar_argAckdone [10][1][9] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_log2_trafo_size_ap_vld_r) begin
        scalar_argVld [10][1][9] = 1;
        scalar_argAckdone [10][1][9] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][9] = hls_transform_unit_ex_hls_dup2_log2_trafo_size_r;
    scalar_adr    [10][1][9] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 56) comb block-----//
    //s = 14; r = 1; a = 26;
    if (scalar_rdat_vld_r[14][1][26]) begin
        scalar_argdone [14][1][26] = 1;
    end
    scalar_adr[14][1][26] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][26]) begin
        scalar_argVld[14][1][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[14][1][26] = 1;
    end

    //------WRITE (scalar, global adr = 56) comb block-----//
    //s = 14; r = 0; a = 9;
    if (scalar_argAck [14][0][9]) begin
        scalar_argVld [14][0][9] = 0;
        scalar_argAckdone [14][0][9] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_ap_vld_r) begin
        scalar_argVld [14][0][9] = 1;
        scalar_argAckdone [14][0][9] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][9] = hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_r;
    scalar_adr    [14][0][9] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 48) comb block-----//
    //s = 12; r = 0; a = 28;
    if (scalar_rdat_vld_r[12][0][28]) begin
        scalar_argdone [12][0][28] = 1;
    end
    scalar_adr[12][0][28] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][28]) begin
        scalar_argVld[12][0][28] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[12][0][28] = 1;
    end

    //------WRITE (scalar, global adr = 48) comb block-----//
    //s = 12; r = 1; a = 8;
    if (scalar_argAck [12][1][8]) begin
        scalar_argVld [12][1][8] = 0;
        scalar_argAckdone [12][1][8] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_scan_idx_o_ap_vld_r) begin
        scalar_argVld [12][1][8] = 1;
        scalar_argAckdone [12][1][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][8] = hls_transform_unit_ex_hls_dup2_scan_idx_o_r;
    scalar_adr    [12][1][8] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 52) comb block-----//
    //s = 13; r = 1; a = 7;
    if (scalar_argAck [13][1][7]) begin
        scalar_argVld [13][1][7] = 0;
        scalar_argAckdone [13][1][7] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_scan_idx_c_ap_vld_r) begin
        scalar_argVld [13][1][7] = 1;
        scalar_argAckdone [13][1][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][7] = hls_transform_unit_ex_hls_dup2_scan_idx_c_r;
    scalar_adr    [13][1][7] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1140) comb block-----//
    //s = 29; r = 1; a = 28;
    if (scalar_rdat_vld_r[29][1][28]) begin
        scalar_argdone [29][1][28] = 1;
    end
    scalar_adr[29][1][28] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][28]) begin
        scalar_argVld[29][1][28] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[29][1][28] = 1;
    end

    //------WRITE (scalar, global adr = 1140) comb block-----//
    //s = 29; r = 1; a = 9;
    if (scalar_argAck [29][1][9]) begin
        scalar_argVld [29][1][9] = 0;
        scalar_argAckdone [29][1][9] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cmdr_run_o_ap_vld_r) begin
        scalar_argVld [29][1][9] = 1;
        scalar_argAckdone [29][1][9] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][9] = hls_transform_unit_ex_hls_dup2_cmdr_run_o_r;
    scalar_adr    [29][1][9] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1244) comb block-----//
    //s = 23; r = 1; a = 22;
    if (scalar_rdat_vld_r[23][1][22]) begin
        scalar_argdone [23][1][22] = 1;
    end
    scalar_adr    [23][1][22] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][22]) begin
        scalar_argVld [23][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [23][1][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1248) comb block-----//
    //s = 24; r = 1; a = 17;
    if (scalar_rdat_vld_r[24][1][17]) begin
        scalar_argdone [24][1][17] = 1;
    end
    scalar_adr    [24][1][17] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][17]) begin
        scalar_argVld [24][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [24][1][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1252) comb block-----//
    //s = 25; r = 1; a = 14;
    if (scalar_rdat_vld_r[25][1][14]) begin
        scalar_argdone [25][1][14] = 1;
    end
    scalar_adr    [25][1][14] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][14]) begin
        scalar_argVld [25][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [25][1][14] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1148) comb block-----//
    //s = 31; r = 1; a = 32;
    if (scalar_rdat_vld_r[31][1][32]) begin
        scalar_argdone [31][1][32] = 1;
    end
    scalar_adr    [31][1][32] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][32]) begin
        scalar_argVld [31][1][32] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [31][1][32] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1152) comb block-----//
    //s = 0; r = 0; a = 29;
    if (scalar_rdat_vld_r[0][0][29]) begin
        scalar_argdone [0][0][29] = 1;
    end
    scalar_adr    [0][0][29] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][29]) begin
        scalar_argVld [0][0][29] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [0][0][29] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1156) comb block-----//
    //s = 1; r = 0; a = 27;
    if (scalar_rdat_vld_r[1][0][27]) begin
        scalar_argdone [1][0][27] = 1;
    end
    scalar_adr    [1][0][27] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][27]) begin
        scalar_argVld [1][0][27] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld [1][0][27] = 1;
    end

    //------READ (scalar, global adr = 1144) comb block-----//
    //s = 30; r = 1; a = 14;
    if (scalar_rdat_vld_r[30][1][14]) begin
        scalar_argdone [30][1][14] = 1;
    end
    scalar_adr[30][1][14] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][14]) begin
        scalar_argVld[30][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[30][1][14] = 1;
    end

    //------WRITE (scalar, global adr = 160) comb block-----//
    //s = 8; r = 0; a = 12;
    if (scalar_argAck [8][0][12]) begin
        scalar_argVld [8][0][12] = 0;
        scalar_argAckdone [8][0][12] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_nPbW_ap_vld_r) begin
        scalar_argVld [8][0][12] = 1;
        scalar_argAckdone [8][0][12] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][12] = hls_transform_unit_ex_hls_dup2_nPbW_r;
    scalar_adr    [8][0][12] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 164) comb block-----//
    //s = 9; r = 0; a = 12;
    if (scalar_argAck [9][0][12]) begin
        scalar_argVld [9][0][12] = 0;
        scalar_argAckdone [9][0][12] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_nPbH_ap_vld_r) begin
        scalar_argVld [9][0][12] = 1;
        scalar_argAckdone [9][0][12] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][12] = hls_transform_unit_ex_hls_dup2_nPbH_r;
    scalar_adr    [9][0][12] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 580) comb block-----//
    //s = 17; r = 0; a = 4;
    if (scalar_argAck [17][0][4]) begin
        scalar_argVld [17][0][4] = 0;
        scalar_argAckdone [17][0][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_up_ap_vld_r) begin
        scalar_argVld [17][0][4] = 1;
        scalar_argAckdone [17][0][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][0][4] = hls_transform_unit_ex_hls_dup2_cand_up_r;
    scalar_adr    [17][0][4] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 584) comb block-----//
    //s = 18; r = 0; a = 4;
    if (scalar_argAck [18][0][4]) begin
        scalar_argVld [18][0][4] = 0;
        scalar_argAckdone [18][0][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_left_ap_vld_r) begin
        scalar_argVld [18][0][4] = 1;
        scalar_argAckdone [18][0][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][0][4] = hls_transform_unit_ex_hls_dup2_cand_left_r;
    scalar_adr    [18][0][4] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 588) comb block-----//
    //s = 19; r = 0; a = 5;
    if (scalar_argAck [19][0][5]) begin
        scalar_argVld [19][0][5] = 0;
        scalar_argAckdone [19][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_up_left_ap_vld_r) begin
        scalar_argVld [19][0][5] = 1;
        scalar_argAckdone [19][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][0][5] = hls_transform_unit_ex_hls_dup2_cand_up_left_r;
    scalar_adr    [19][0][5] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 592) comb block-----//
    //s = 20; r = 0; a = 7;
    if (scalar_argAck [20][0][7]) begin
        scalar_argVld [20][0][7] = 0;
        scalar_argAckdone [20][0][7] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_up_right_sap_ap_vld_r) begin
        scalar_argVld [20][0][7] = 1;
        scalar_argAckdone [20][0][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][7] = hls_transform_unit_ex_hls_dup2_cand_up_right_sap_r;
    scalar_adr    [20][0][7] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 596) comb block-----//
    //s = 21; r = 0; a = 7;
    if (scalar_argAck [21][0][7]) begin
        scalar_argVld [21][0][7] = 0;
        scalar_argAckdone [21][0][7] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_up_right_ap_vld_r) begin
        scalar_argVld [21][0][7] = 1;
        scalar_argAckdone [21][0][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][7] = hls_transform_unit_ex_hls_dup2_cand_up_right_r;
    scalar_adr    [21][0][7] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 600) comb block-----//
    //s = 22; r = 1; a = 23;
    if (scalar_rdat_vld_r[22][1][23]) begin
        scalar_argdone [22][1][23] = 1;
    end
    scalar_adr[22][1][23] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][23]) begin
        scalar_argVld[22][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[22][1][23] = 1;
    end

    //------WRITE (scalar, global adr = 600) comb block-----//
    //s = 22; r = 0; a = 7;
    if (scalar_argAck [22][0][7]) begin
        scalar_argVld [22][0][7] = 0;
        scalar_argAckdone [22][0][7] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_ap_vld_r) begin
        scalar_argVld [22][0][7] = 1;
        scalar_argAckdone [22][0][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][7] = hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_r;
    scalar_adr    [22][0][7] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1412) comb block-----//
    //s = 1; r = 1; a = 3;
    if (scalar_argAck [1][1][3]) begin
        scalar_argVld [1][1][3] = 0;
        scalar_argAckdone [1][1][3] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_up_c_ap_vld_r) begin
        scalar_argVld [1][1][3] = 1;
        scalar_argAckdone [1][1][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][1][3] = hls_transform_unit_ex_hls_dup2_cand_up_c_r;
    scalar_adr    [1][1][3] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1416) comb block-----//
    //s = 2; r = 0; a = 2;
    if (scalar_argAck [2][0][2]) begin
        scalar_argVld [2][0][2] = 0;
        scalar_argAckdone [2][0][2] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_left_c_ap_vld_r) begin
        scalar_argVld [2][0][2] = 1;
        scalar_argAckdone [2][0][2] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][0][2] = hls_transform_unit_ex_hls_dup2_cand_left_c_r;
    scalar_adr    [2][0][2] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1420) comb block-----//
    //s = 3; r = 0; a = 3;
    if (scalar_argAck [3][0][3]) begin
        scalar_argVld [3][0][3] = 0;
        scalar_argAckdone [3][0][3] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_up_left_c_ap_vld_r) begin
        scalar_argVld [3][0][3] = 1;
        scalar_argAckdone [3][0][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][0][3] = hls_transform_unit_ex_hls_dup2_cand_up_left_c_r;
    scalar_adr    [3][0][3] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1424) comb block-----//
    //s = 4; r = 0; a = 6;
    if (scalar_argAck [4][0][6]) begin
        scalar_argVld [4][0][6] = 0;
        scalar_argAckdone [4][0][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_ap_vld_r) begin
        scalar_argVld [4][0][6] = 1;
        scalar_argAckdone [4][0][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][0][6] = hls_transform_unit_ex_hls_dup2_cand_up_right_sap_c_r;
    scalar_adr    [4][0][6] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1428) comb block-----//
    //s = 5; r = 0; a = 11;
    if (scalar_argAck [5][0][11]) begin
        scalar_argVld [5][0][11] = 0;
        scalar_argAckdone [5][0][11] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_up_right_c_ap_vld_r) begin
        scalar_argVld [5][0][11] = 1;
        scalar_argAckdone [5][0][11] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][11] = hls_transform_unit_ex_hls_dup2_cand_up_right_c_r;
    scalar_adr    [5][0][11] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1432) comb block-----//
    //s = 6; r = 0; a = 32;
    if (scalar_rdat_vld_r[6][0][32]) begin
        scalar_argdone [6][0][32] = 1;
    end
    scalar_adr[6][0][32] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][32]) begin
        scalar_argVld[6][0][32] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[6][0][32] = 1;
    end

    //------WRITE (scalar, global adr = 1432) comb block-----//
    //s = 6; r = 0; a = 11;
    if (scalar_argAck [6][0][11]) begin
        scalar_argVld [6][0][11] = 0;
        scalar_argAckdone [6][0][11] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_ap_vld_r) begin
        scalar_argVld [6][0][11] = 1;
        scalar_argAckdone [6][0][11] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][11] = hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_r;
    scalar_adr    [6][0][11] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 22;
    if (scalar_rdat_vld_r[26][1][22]) begin
        scalar_argdone [26][1][22] = 1;
    end
    scalar_adr[26][1][22] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][22]) begin
        scalar_argVld[26][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[26][1][22] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 0; a = 24;
    if (scalar_rdat_vld_r[23][0][24]) begin
        scalar_argdone [23][0][24] = 1;
    end
    scalar_adr[23][0][24] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][24]) begin
        scalar_argVld[23][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[23][0][24] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 0; a = 19;
    if (scalar_rdat_vld_r[24][0][19]) begin
        scalar_argdone [24][0][19] = 1;
    end
    scalar_adr[24][0][19] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][19]) begin
        scalar_argVld[24][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[24][0][19] = 1;
    end

    //------READ (scalar, global adr = 612) comb block-----//
    //s = 25; r = 0; a = 16;
    if (scalar_rdat_vld_r[25][0][16]) begin
        scalar_argdone [25][0][16] = 1;
    end
    scalar_adr[25][0][16] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][16]) begin
        scalar_argVld[25][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[25][0][16] = 1;
    end

    //------READ (scalar, global adr = 616) comb block-----//
    //s = 26; r = 0; a = 24;
    if (scalar_rdat_vld_r[26][0][24]) begin
        scalar_argdone [26][0][24] = 1;
    end
    scalar_adr[26][0][24] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][24]) begin
        scalar_argVld[26][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[26][0][24] = 1;
    end

    //------READ (scalar, global adr = 620) comb block-----//
    //s = 27; r = 0; a = 22;
    if (scalar_rdat_vld_r[27][0][22]) begin
        scalar_argdone [27][0][22] = 1;
    end
    scalar_adr[27][0][22] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][22]) begin
        scalar_argVld[27][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[27][0][22] = 1;
    end

    //------READ (scalar, global adr = 624) comb block-----//
    //s = 28; r = 1; a = 21;
    if (scalar_rdat_vld_r[28][1][21]) begin
        scalar_argdone [28][1][21] = 1;
    end
    scalar_adr[28][1][21] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][21]) begin
        scalar_argVld[28][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[28][1][21] = 1;
    end

    //------READ (scalar, global adr = 472) comb block-----//
    //s = 22; r = 0; a = 25;
    if (scalar_rdat_vld_r[22][0][25]) begin
        scalar_argdone [22][0][25] = 1;
    end
    scalar_adr[22][0][25] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][25]) begin
        scalar_argVld[22][0][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[22][0][25] = 1;
    end

    //------WRITE (scalar, global adr = 472) comb block-----//
    //s = 22; r = 1; a = 7;
    if (scalar_argAck [22][1][7]) begin
        scalar_argVld [22][1][7] = 0;
        scalar_argAckdone [22][1][7] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r) begin
        scalar_argVld [22][1][7] = 1;
        scalar_argAckdone [22][1][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][7] = hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_r;
    scalar_adr    [22][1][7] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 23;
    if (scalar_rdat_vld_r[23][1][23]) begin
        scalar_argdone [23][1][23] = 1;
    end
    scalar_adr[23][1][23] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][23]) begin
        scalar_argVld[23][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[23][1][23] = 1;
    end

    //------WRITE (scalar, global adr = 476) comb block-----//
    //s = 23; r = 0; a = 6;
    if (scalar_argAck [23][0][6]) begin
        scalar_argVld [23][0][6] = 0;
        scalar_argAckdone [23][0][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_ap_vld_r) begin
        scalar_argVld [23][0][6] = 1;
        scalar_argAckdone [23][0][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][6] = hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_r;
    scalar_adr    [23][0][6] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 468) comb block-----//
    //s = 21; r = 1; a = 7;
    if (scalar_argAck [21][1][7]) begin
        scalar_argVld [21][1][7] = 0;
        scalar_argAckdone [21][1][7] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_ap_vld_r) begin
        scalar_argVld [21][1][7] = 1;
        scalar_argAckdone [21][1][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][7] = hls_transform_unit_ex_hls_dup2_tu_cu_qp_delta_r;
    scalar_adr    [21][1][7] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 500) comb block-----//
    //s = 29; r = 0; a = 10;
    if (scalar_argAck [29][0][10]) begin
        scalar_argVld [29][0][10] = 0;
        scalar_argAckdone [29][0][10] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_tu_cross_pf_ap_vld_r) begin
        scalar_argVld [29][0][10] = 1;
        scalar_argAckdone [29][0][10] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][10] = hls_transform_unit_ex_hls_dup2_tu_cross_pf_r;
    scalar_adr    [29][0][10] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 532) comb block-----//
    //s = 5; r = 1; a = 24;
    if (scalar_rdat_vld_r[5][1][24]) begin
        scalar_argdone [5][1][24] = 1;
    end
    scalar_adr[5][1][24] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][24]) begin
        scalar_argVld[5][1][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[5][1][24] = 1;
    end

    //------WRITE (scalar, global adr = 532) comb block-----//
    //s = 5; r = 1; a = 11;
    if (scalar_argAck [5][1][11]) begin
        scalar_argVld [5][1][11] = 0;
        scalar_argAckdone [5][1][11] = 1;
    end
    if (hls_transform_unit_ex_hls_dup2_first_qp_group_o_ap_vld_r) begin
        scalar_argVld [5][1][11] = 1;
        scalar_argAckdone [5][1][11] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][11] = hls_transform_unit_ex_hls_dup2_first_qp_group_o_r;
    scalar_adr    [5][1][11] = {ap_part_w[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 328) comb block-----//
    //s = 18; r = 0; a = 16;
    if (scalar_rdat_vld_r[18][0][16]) begin
        scalar_argdone [18][0][16] = 1;
    end
    scalar_adr[18][0][16] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][16]) begin
        scalar_argVld[18][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[18][0][16] = 1;
    end

    //------READ (scalar, global adr = 448) comb block-----//
    //s = 16; r = 0; a = 18;
    if (scalar_rdat_vld_r[16][0][18]) begin
        scalar_argdone [16][0][18] = 1;
    end
    scalar_adr[16][0][18] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][18]) begin
        scalar_argVld[16][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[16][0][18] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 0; a = 29;
    if (scalar_rdat_vld_r[11][0][29]) begin
        scalar_argdone [11][0][29] = 1;
    end
    scalar_adr[11][0][29] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][29]) begin
        scalar_argVld[11][0][29] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[11][0][29] = 1;
    end

    //------READ (scalar, global adr = 540) comb block-----//
    //s = 7; r = 0; a = 22;
    if (scalar_rdat_vld_r[7][0][22]) begin
        scalar_argdone [7][0][22] = 1;
    end
    scalar_adr[7][0][22] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][22]) begin
        scalar_argVld[7][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[7][0][22] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 1; a = 25;
    if (scalar_rdat_vld_r[13][1][25]) begin
        scalar_argdone [13][1][25] = 1;
    end
    scalar_adr[13][1][25] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][25]) begin
        scalar_argVld[13][1][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[13][1][25] = 1;
    end

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 0; a = 22;
    if (scalar_rdat_vld_r[28][0][22]) begin
        scalar_argdone [28][0][22] = 1;
    end
    scalar_adr[28][0][22] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][22]) begin
        scalar_argVld[28][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[28][0][22] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 1; a = 17;
    if (scalar_rdat_vld_r[2][1][17]) begin
        scalar_argdone [2][1][17] = 1;
    end
    scalar_adr[2][1][17] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][17]) begin
        scalar_argVld[2][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[2][1][17] = 1;
    end

    //------READ (scalar, global adr = 460) comb block-----//
    //s = 19; r = 1; a = 18;
    if (scalar_rdat_vld_r[19][1][18]) begin
        scalar_argdone [19][1][18] = 1;
    end
    scalar_adr[19][1][18] = {ap_part[hls_transform_unit_ex_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][18]) begin
        scalar_argVld[19][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argVld[19][1][18] = 1;
    end

    hls_transform_unit_ex_hls_dup2_ready = array_argRdy[0][83]& array_argRdy[0][243]& array_argRdy[0][84]& array_argRdy[0][244]& array_argRdy[0][85]& array_argRdy[0][245] & ~ap_arb_reload_running_r[hls_transform_unit_ex_hls_dup2];
    array_ap_ce[0][83] = ap_ce[hls_transform_unit_ex_hls_dup2];
    array_ap_ce[0][243] = ap_ce[hls_transform_unit_ex_hls_dup2];
    array_ap_ce[0][84] = ap_ce[hls_transform_unit_ex_hls_dup2];
    array_ap_ce[0][244] = ap_ce[hls_transform_unit_ex_hls_dup2];
    array_ap_ce[0][85] = ap_ce[hls_transform_unit_ex_hls_dup2];
    array_ap_ce[0][245] = ap_ce[hls_transform_unit_ex_hls_dup2];

    if (ap_arb_ret[hls_transform_unit_ex_hls_dup2] & ~ap_arb_ret_r[hls_transform_unit_ex_hls_dup2]) begin
        ap_arb_ret_running[hls_transform_unit_ex_hls_dup2] = 1;
        hls_transform_unit_ex_hls_dup2_ready = 0;
    end

    scalar_argAckdone_all[hls_transform_unit_ex_hls_dup2] = scalar_argAckdone[27][1][8] &
                                                scalar_argAckdone[28][1][4] &
                                                scalar_argAckdone[6][1][10] &
                                                scalar_argAckdone[10][1][9] &
                                                scalar_argAckdone[14][0][9] &
                                                scalar_argAckdone[12][1][8] &
                                                scalar_argAckdone[13][1][7] &
                                                scalar_argAckdone[29][1][9] &
                                                scalar_argAckdone[8][0][12] &
                                                scalar_argAckdone[9][0][12] &
                                                scalar_argAckdone[17][0][4] &
                                                scalar_argAckdone[18][0][4] &
                                                scalar_argAckdone[19][0][5] &
                                                scalar_argAckdone[20][0][7] &
                                                scalar_argAckdone[21][0][7] &
                                                scalar_argAckdone[22][0][7] &
                                                scalar_argAckdone[1][1][3] &
                                                scalar_argAckdone[2][0][2] &
                                                scalar_argAckdone[3][0][3] &
                                                scalar_argAckdone[4][0][6] &
                                                scalar_argAckdone[5][0][11] &
                                                scalar_argAckdone[6][0][11] &
                                                scalar_argAckdone[22][1][7] &
                                                scalar_argAckdone[23][0][6] &
                                                scalar_argAckdone[21][1][7] &
                                                scalar_argAckdone[29][0][10] &
                                                scalar_argAckdone[5][1][11];
    if (ap_arb_ret_running[hls_transform_unit_ex_hls_dup2] & scalar_argAckdone_all[hls_transform_unit_ex_hls_dup2] &~ ap_arb_reload_running_r[hls_transform_unit_ex_hls_dup2]) begin
        ap_arb_reload[hls_transform_unit_ex_hls_dup2] = 1;
        ap_arb_reload_running[hls_transform_unit_ex_hls_dup2] = 1;
    end

    if (ap_arb_start[hls_transform_unit_ex_hls_dup2] &~ ap_arb_start_r[hls_transform_unit_ex_hls_dup2]) begin
        ap_arb_start_running[hls_transform_unit_ex_hls_dup2] = 1;
    end

    if (ap_arb_start_running[hls_transform_unit_ex_hls_dup2] & ~scalar_writing_20& ~scalar_writing_16& ~scalar_writing_560& ~scalar_writing_484& ~scalar_writing_488& ~scalar_writing_572& ~scalar_writing_536& ~scalar_writing_56& ~scalar_writing_48& ~scalar_writing_1140& ~scalar_writing_600& ~scalar_writing_1432& ~scalar_writing_604& ~scalar_writing_608& ~scalar_writing_612& ~scalar_writing_616& ~scalar_writing_620& ~scalar_writing_624& ~scalar_writing_472& ~scalar_writing_476& ~scalar_writing_532& ~scalar_writing_540) begin
        ap_arb_start_running[hls_transform_unit_ex_hls_dup2] = 0;
        ap_arb_reload[hls_transform_unit_ex_hls_dup2] = 1;
    end

    scalar_argdone_all[hls_transform_unit_ex_hls_dup2] = scalar_argdone[5][0][25] &
                                                                scalar_argdone[4][0][17] &
                                                                scalar_argdone[2][0][18] &
                                                                scalar_argdone[28][0][21] &
                                                                scalar_argdone[12][1][26] &
                                                                scalar_argdone[20][0][17] &
                                                                scalar_argdone[21][0][16] &
                                                                scalar_argdone[22][0][24] &
                                                                scalar_argdone[23][0][23] &
                                                                scalar_argdone[24][0][18] &
                                                                scalar_argdone[25][1][13] &
                                                                scalar_argdone[25][0][15] &
                                                                scalar_argdone[26][0][23] &
                                                                scalar_argdone[15][1][23] &
                                                                scalar_argdone[6][1][30] &
                                                                scalar_argdone[14][1][26] &
                                                                scalar_argdone[12][0][28] &
                                                                scalar_argdone[29][1][28] &
                                                                scalar_argdone[23][1][22] &
                                                                scalar_argdone[24][1][17] &
                                                                scalar_argdone[25][1][14] &
                                                                scalar_argdone[31][1][32] &
                                                                scalar_argdone[0][0][29] &
                                                                scalar_argdone[1][0][27] &
                                                                scalar_argdone[30][1][14] &
                                                                scalar_argdone[22][1][23] &
                                                                scalar_argdone[6][0][32] &
                                                                scalar_argdone[26][1][22] &
                                                                scalar_argdone[23][0][24] &
                                                                scalar_argdone[24][0][19] &
                                                                scalar_argdone[25][0][16] &
                                                                scalar_argdone[26][0][24] &
                                                                scalar_argdone[27][0][22] &
                                                                scalar_argdone[28][1][21] &
                                                                scalar_argdone[22][0][25] &
                                                                scalar_argdone[23][1][23] &
                                                                scalar_argdone[5][1][24] &
                                                                scalar_argdone[18][0][16] &
                                                                scalar_argdone[16][0][18] &
                                                                scalar_argdone[11][0][29] &
                                                                scalar_argdone[7][0][22] &
                                                                scalar_argdone[13][1][25] &
                                                                scalar_argdone[28][0][22] &
                                                                scalar_argdone[2][1][17] &
                                                                scalar_argdone[19][1][18];

    if (scalar_argdone_all_r[hls_transform_unit_ex_hls_dup2]) begin
        scalar_argdone[5][0][25] = 0;
        scalar_argdone[4][0][17] = 0;
        scalar_argdone[2][0][18] = 0;
        scalar_argdone[28][0][21] = 0;
        scalar_argdone[12][1][26] = 0;
        scalar_argdone[20][0][17] = 0;
        scalar_argdone[21][0][16] = 0;
        scalar_argdone[22][0][24] = 0;
        scalar_argdone[23][0][23] = 0;
        scalar_argdone[24][0][18] = 0;
        scalar_argdone[25][1][13] = 0;
        scalar_argdone[25][0][15] = 0;
        scalar_argdone[26][0][23] = 0;
        scalar_argdone[15][1][23] = 0;
        scalar_argdone[6][1][30] = 0;
        scalar_argdone[14][1][26] = 0;
        scalar_argdone[12][0][28] = 0;
        scalar_argdone[29][1][28] = 0;
        scalar_argdone[23][1][22] = 0;
        scalar_argdone[24][1][17] = 0;
        scalar_argdone[25][1][14] = 0;
        scalar_argdone[31][1][32] = 0;
        scalar_argdone[0][0][29] = 0;
        scalar_argdone[1][0][27] = 0;
        scalar_argdone[30][1][14] = 0;
        scalar_argdone[22][1][23] = 0;
        scalar_argdone[6][0][32] = 0;
        scalar_argdone[26][1][22] = 0;
        scalar_argdone[23][0][24] = 0;
        scalar_argdone[24][0][19] = 0;
        scalar_argdone[25][0][16] = 0;
        scalar_argdone[26][0][24] = 0;
        scalar_argdone[27][0][22] = 0;
        scalar_argdone[28][1][21] = 0;
        scalar_argdone[22][0][25] = 0;
        scalar_argdone[23][1][23] = 0;
        scalar_argdone[5][1][24] = 0;
        scalar_argdone[18][0][16] = 0;
        scalar_argdone[16][0][18] = 0;
        scalar_argdone[11][0][29] = 0;
        scalar_argdone[7][0][22] = 0;
        scalar_argdone[13][1][25] = 0;
        scalar_argdone[28][0][22] = 0;
        scalar_argdone[2][1][17] = 0;
        scalar_argdone[19][1][18] = 0;

        if (ap_arb_start_r[hls_transform_unit_ex_hls_dup2] & ~ap_running_r[hls_transform_unit_ex_hls_dup2]) begin
            ap_start[hls_transform_unit_ex_hls_dup2] = 1;
            ap_running[hls_transform_unit_ex_hls_dup2] = 1;
        end
        else if (ap_arb_ret_running_r[hls_transform_unit_ex_hls_dup2]) begin
            ap_arb_ret_running[hls_transform_unit_ex_hls_dup2] = 0;
            ap_arb_reload_running[hls_transform_unit_ex_hls_dup2] = 0;
        end
    end

    if (ap_start_r[hls_transform_unit_ex_hls_dup2] & ap_ready_r[hls_transform_unit_ex_hls_dup2]) begin
        ap_start[hls_transform_unit_ex_hls_dup2] = 0;
    end

    if (ap_done_r[hls_transform_unit_ex_hls_dup2]) begin
        ap_running[hls_transform_unit_ex_hls_dup2] = 0;
    end
`endif
    //============================================================
    //hls_transform_unit_ex_hls_dup3       (f = 9)
    //============================================================
`ifdef enable_connect_hls_transform_unit_ex_hls_dup3
    //------READ (scalar, global adr = 20) comb block-----//
    //s = 5; r = 0; a = 26;
    if (scalar_rdat_vld_r[5][0][26]) begin
        scalar_argdone [5][0][26] = 1;
    end
    scalar_adr[5][0][26] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][26]) begin
        scalar_argVld[5][0][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[5][0][26] = 1;
    end

    //------READ (scalar, global adr = 16) comb block-----//
    //s = 4; r = 1; a = 17;
    if (scalar_rdat_vld_r[4][1][17]) begin
        scalar_argdone [4][1][17] = 1;
    end
    scalar_adr[4][1][17] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][1][17]) begin
        scalar_argVld[4][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[4][1][17] = 1;
    end

    //------READ (scalar, global adr = 1160) comb block-----//
    //s = 2; r = 0; a = 19;
    if (scalar_rdat_vld_r[2][0][19]) begin
        scalar_argdone [2][0][19] = 1;
    end
    scalar_adr[2][0][19] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][19]) begin
        scalar_argVld[2][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[2][0][19] = 1;
    end

    //------WRITE (array range, global adr = 12288, width=8, addr_width=32) -----//
    //s = 0; a = 86;
    array_argVld [0][86] = hls_transform_unit_ex_hls_dup3_cb_qp_offset_list_EN_A & (hls_transform_unit_ex_hls_dup3_cb_qp_offset_list_WEN_A != 0);
    array_adr    [0][86] = hls_transform_unit_ex_hls_dup3_cb_qp_offset_list_Addr_A;
    array_wdat   [0][86] = hls_transform_unit_ex_hls_dup3_cb_qp_offset_list_Din_A;

    //------READ (array range, global adr = 12288, width=8, addr_width=32) -----//
    //s = 0; a = 246;
    hls_transform_unit_ex_hls_dup3_cb_qp_offset_list_Dout_A = array_rdat  [0][246];
    //found a write signal pair
    array_argVld [0][246] = hls_transform_unit_ex_hls_dup3_cb_qp_offset_list_EN_A & (hls_transform_unit_ex_hls_dup3_cb_qp_offset_list_WEN_A == 0);
    array_adr    [0][246] = hls_transform_unit_ex_hls_dup3_cb_qp_offset_list_Addr_A;

    //------WRITE (array range, global adr = 12296, width=8, addr_width=32) -----//
    //s = 0; a = 87;
    array_argVld [0][87] = hls_transform_unit_ex_hls_dup3_cr_qp_offset_list_EN_A & (hls_transform_unit_ex_hls_dup3_cr_qp_offset_list_WEN_A != 0);
    array_adr    [0][87] = hls_transform_unit_ex_hls_dup3_cr_qp_offset_list_Addr_A;
    array_wdat   [0][87] = hls_transform_unit_ex_hls_dup3_cr_qp_offset_list_Din_A;

    //------READ (array range, global adr = 12296, width=8, addr_width=32) -----//
    //s = 0; a = 247;
    hls_transform_unit_ex_hls_dup3_cr_qp_offset_list_Dout_A = array_rdat  [0][247];
    //found a write signal pair
    array_argVld [0][247] = hls_transform_unit_ex_hls_dup3_cr_qp_offset_list_EN_A & (hls_transform_unit_ex_hls_dup3_cr_qp_offset_list_WEN_A == 0);
    array_adr    [0][247] = hls_transform_unit_ex_hls_dup3_cr_qp_offset_list_Addr_A;

    //------READ (scalar, global adr = 1136) comb block-----//
    //s = 28; r = 1; a = 22;
    if (scalar_rdat_vld_r[28][1][22]) begin
        scalar_argdone [28][1][22] = 1;
    end
    scalar_adr[28][1][22] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][22]) begin
        scalar_argVld[28][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[28][1][22] = 1;
    end

    //------WRITE (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 88;
    array_argVld [0][88] = hls_transform_unit_ex_hls_dup3_qp_y_tab_EN_A & (hls_transform_unit_ex_hls_dup3_qp_y_tab_WEN_A != 0);
    array_adr    [0][88] = hls_transform_unit_ex_hls_dup3_qp_y_tab_Addr_A;
    array_wdat   [0][88] = hls_transform_unit_ex_hls_dup3_qp_y_tab_Din_A;

    //------READ (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 248;
    hls_transform_unit_ex_hls_dup3_qp_y_tab_Dout_A = array_rdat  [0][248];
    //found a write signal pair
    array_argVld [0][248] = hls_transform_unit_ex_hls_dup3_qp_y_tab_EN_A & (hls_transform_unit_ex_hls_dup3_qp_y_tab_WEN_A == 0);
    array_adr    [0][248] = hls_transform_unit_ex_hls_dup3_qp_y_tab_Addr_A;

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 1; a = 27;
    if (scalar_rdat_vld_r[12][1][27]) begin
        scalar_argdone [12][1][27] = 1;
    end
    scalar_adr[12][1][27] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][27]) begin
        scalar_argVld[12][1][27] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[12][1][27] = 1;
    end

    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 1; a = 17;
    if (scalar_rdat_vld_r[20][1][17]) begin
        scalar_argdone [20][1][17] = 1;
    end
    scalar_adr    [20][1][17] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][17]) begin
        scalar_argVld [20][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [20][1][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 1; a = 15;
    if (scalar_rdat_vld_r[21][1][15]) begin
        scalar_argdone [21][1][15] = 1;
    end
    scalar_adr    [21][1][15] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][15]) begin
        scalar_argVld [21][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [21][1][15] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 1; a = 24;
    if (scalar_rdat_vld_r[22][1][24]) begin
        scalar_argdone [22][1][24] = 1;
    end
    scalar_adr    [22][1][24] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][24]) begin
        scalar_argVld [22][1][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [22][1][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 348) comb block-----//
    //s = 23; r = 0; a = 25;
    if (scalar_rdat_vld_r[23][0][25]) begin
        scalar_argdone [23][0][25] = 1;
    end
    scalar_adr    [23][0][25] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][25]) begin
        scalar_argVld [23][0][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [23][0][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 352) comb block-----//
    //s = 24; r = 1; a = 18;
    if (scalar_rdat_vld_r[24][1][18]) begin
        scalar_argdone [24][1][18] = 1;
    end
    scalar_adr    [24][1][18] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][18]) begin
        scalar_argVld [24][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [24][1][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 356) comb block-----//
    //s = 25; r = 1; a = 15;
    if (scalar_rdat_vld_r[25][1][15]) begin
        scalar_argdone [25][1][15] = 1;
    end
    scalar_adr    [25][1][15] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][15]) begin
        scalar_argVld [25][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [25][1][15] = 1;
    end

    //------READ (scalar, global adr = 484) comb block-----//
    //s = 25; r = 0; a = 17;
    if (scalar_rdat_vld_r[25][0][17]) begin
        scalar_argdone [25][0][17] = 1;
    end
    scalar_adr[25][0][17] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][17]) begin
        scalar_argVld[25][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[25][0][17] = 1;
    end

    //------READ (scalar, global adr = 488) comb block-----//
    //s = 26; r = 1; a = 23;
    if (scalar_rdat_vld_r[26][1][23]) begin
        scalar_argdone [26][1][23] = 1;
    end
    scalar_adr[26][1][23] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][23]) begin
        scalar_argVld[26][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[26][1][23] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 0; a = 24;
    if (scalar_rdat_vld_r[15][0][24]) begin
        scalar_argdone [15][0][24] = 1;
    end
    scalar_adr[15][0][24] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][24]) begin
        scalar_argVld[15][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[15][0][24] = 1;
    end

    //------WRITE (scalar, global adr = 492) comb block-----//
    //s = 27; r = 0; a = 9;
    if (scalar_argAck [27][0][9]) begin
        scalar_argVld [27][0][9] = 0;
        scalar_argAckdone [27][0][9] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_ap_vld_r) begin
        scalar_argVld [27][0][9] = 1;
        scalar_argAckdone [27][0][9] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][9] = hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cb_r;
    scalar_adr    [27][0][9] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 496) comb block-----//
    //s = 28; r = 0; a = 5;
    if (scalar_argAck [28][0][5]) begin
        scalar_argVld [28][0][5] = 0;
        scalar_argAckdone [28][0][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_ap_vld_r) begin
        scalar_argVld [28][0][5] = 1;
        scalar_argAckdone [28][0][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][0][5] = hls_transform_unit_ex_hls_dup3_tu_cu_qp_offset_cr_r;
    scalar_adr    [28][0][5] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 31;
    if (scalar_rdat_vld_r[6][1][31]) begin
        scalar_argdone [6][1][31] = 1;
    end
    scalar_adr[6][1][31] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][31]) begin
        scalar_argVld[6][1][31] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[6][1][31] = 1;
    end

    //------WRITE (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 11;
    if (scalar_argAck [6][1][11]) begin
        scalar_argVld [6][1][11] = 0;
        scalar_argAckdone [6][1][11] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_qp_y_o_ap_vld_r) begin
        scalar_argVld [6][1][11] = 1;
        scalar_argAckdone [6][1][11] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][11] = hls_transform_unit_ex_hls_dup3_qp_y_o_r;
    scalar_adr    [6][1][11] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 168) comb block-----//
    //s = 10; r = 0; a = 10;
    if (scalar_argAck [10][0][10]) begin
        scalar_argVld [10][0][10] = 0;
        scalar_argAckdone [10][0][10] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_log2_trafo_size_ap_vld_r) begin
        scalar_argVld [10][0][10] = 1;
        scalar_argAckdone [10][0][10] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][10] = hls_transform_unit_ex_hls_dup3_log2_trafo_size_r;
    scalar_adr    [10][0][10] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 56) comb block-----//
    //s = 14; r = 0; a = 27;
    if (scalar_rdat_vld_r[14][0][27]) begin
        scalar_argdone [14][0][27] = 1;
    end
    scalar_adr[14][0][27] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][27]) begin
        scalar_argVld[14][0][27] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[14][0][27] = 1;
    end

    //------WRITE (scalar, global adr = 56) comb block-----//
    //s = 14; r = 1; a = 9;
    if (scalar_argAck [14][1][9]) begin
        scalar_argVld [14][1][9] = 0;
        scalar_argAckdone [14][1][9] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_ap_vld_r) begin
        scalar_argVld [14][1][9] = 1;
        scalar_argAckdone [14][1][9] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][9] = hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_r;
    scalar_adr    [14][1][9] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 48) comb block-----//
    //s = 12; r = 0; a = 29;
    if (scalar_rdat_vld_r[12][0][29]) begin
        scalar_argdone [12][0][29] = 1;
    end
    scalar_adr[12][0][29] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][29]) begin
        scalar_argVld[12][0][29] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[12][0][29] = 1;
    end

    //------WRITE (scalar, global adr = 48) comb block-----//
    //s = 12; r = 0; a = 9;
    if (scalar_argAck [12][0][9]) begin
        scalar_argVld [12][0][9] = 0;
        scalar_argAckdone [12][0][9] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_scan_idx_o_ap_vld_r) begin
        scalar_argVld [12][0][9] = 1;
        scalar_argAckdone [12][0][9] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][9] = hls_transform_unit_ex_hls_dup3_scan_idx_o_r;
    scalar_adr    [12][0][9] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 52) comb block-----//
    //s = 13; r = 0; a = 8;
    if (scalar_argAck [13][0][8]) begin
        scalar_argVld [13][0][8] = 0;
        scalar_argAckdone [13][0][8] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_scan_idx_c_ap_vld_r) begin
        scalar_argVld [13][0][8] = 1;
        scalar_argAckdone [13][0][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][8] = hls_transform_unit_ex_hls_dup3_scan_idx_c_r;
    scalar_adr    [13][0][8] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1140) comb block-----//
    //s = 29; r = 0; a = 29;
    if (scalar_rdat_vld_r[29][0][29]) begin
        scalar_argdone [29][0][29] = 1;
    end
    scalar_adr[29][0][29] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][29]) begin
        scalar_argVld[29][0][29] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[29][0][29] = 1;
    end

    //------WRITE (scalar, global adr = 1140) comb block-----//
    //s = 29; r = 1; a = 10;
    if (scalar_argAck [29][1][10]) begin
        scalar_argVld [29][1][10] = 0;
        scalar_argAckdone [29][1][10] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cmdr_run_o_ap_vld_r) begin
        scalar_argVld [29][1][10] = 1;
        scalar_argAckdone [29][1][10] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][10] = hls_transform_unit_ex_hls_dup3_cmdr_run_o_r;
    scalar_adr    [29][1][10] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1244) comb block-----//
    //s = 23; r = 1; a = 24;
    if (scalar_rdat_vld_r[23][1][24]) begin
        scalar_argdone [23][1][24] = 1;
    end
    scalar_adr    [23][1][24] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][24]) begin
        scalar_argVld [23][1][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [23][1][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1248) comb block-----//
    //s = 24; r = 0; a = 20;
    if (scalar_rdat_vld_r[24][0][20]) begin
        scalar_argdone [24][0][20] = 1;
    end
    scalar_adr    [24][0][20] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][20]) begin
        scalar_argVld [24][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [24][0][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1252) comb block-----//
    //s = 25; r = 1; a = 16;
    if (scalar_rdat_vld_r[25][1][16]) begin
        scalar_argdone [25][1][16] = 1;
    end
    scalar_adr    [25][1][16] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][16]) begin
        scalar_argVld [25][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [25][1][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1148) comb block-----//
    //s = 31; r = 0; a = 34;
    if (scalar_rdat_vld_r[31][0][34]) begin
        scalar_argdone [31][0][34] = 1;
    end
    scalar_adr    [31][0][34] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][34]) begin
        scalar_argVld [31][0][34] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [31][0][34] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1152) comb block-----//
    //s = 0; r = 1; a = 29;
    if (scalar_rdat_vld_r[0][1][29]) begin
        scalar_argdone [0][1][29] = 1;
    end
    scalar_adr    [0][1][29] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][29]) begin
        scalar_argVld [0][1][29] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [0][1][29] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1156) comb block-----//
    //s = 1; r = 1; a = 27;
    if (scalar_rdat_vld_r[1][1][27]) begin
        scalar_argdone [1][1][27] = 1;
    end
    scalar_adr    [1][1][27] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][27]) begin
        scalar_argVld [1][1][27] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld [1][1][27] = 1;
    end

    //------READ (scalar, global adr = 1144) comb block-----//
    //s = 30; r = 0; a = 15;
    if (scalar_rdat_vld_r[30][0][15]) begin
        scalar_argdone [30][0][15] = 1;
    end
    scalar_adr[30][0][15] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][15]) begin
        scalar_argVld[30][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[30][0][15] = 1;
    end

    //------WRITE (scalar, global adr = 160) comb block-----//
    //s = 8; r = 1; a = 12;
    if (scalar_argAck [8][1][12]) begin
        scalar_argVld [8][1][12] = 0;
        scalar_argAckdone [8][1][12] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_nPbW_ap_vld_r) begin
        scalar_argVld [8][1][12] = 1;
        scalar_argAckdone [8][1][12] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][12] = hls_transform_unit_ex_hls_dup3_nPbW_r;
    scalar_adr    [8][1][12] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 164) comb block-----//
    //s = 9; r = 1; a = 12;
    if (scalar_argAck [9][1][12]) begin
        scalar_argVld [9][1][12] = 0;
        scalar_argAckdone [9][1][12] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_nPbH_ap_vld_r) begin
        scalar_argVld [9][1][12] = 1;
        scalar_argAckdone [9][1][12] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][12] = hls_transform_unit_ex_hls_dup3_nPbH_r;
    scalar_adr    [9][1][12] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 580) comb block-----//
    //s = 17; r = 1; a = 4;
    if (scalar_argAck [17][1][4]) begin
        scalar_argVld [17][1][4] = 0;
        scalar_argAckdone [17][1][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_up_ap_vld_r) begin
        scalar_argVld [17][1][4] = 1;
        scalar_argAckdone [17][1][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][1][4] = hls_transform_unit_ex_hls_dup3_cand_up_r;
    scalar_adr    [17][1][4] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 584) comb block-----//
    //s = 18; r = 1; a = 4;
    if (scalar_argAck [18][1][4]) begin
        scalar_argVld [18][1][4] = 0;
        scalar_argAckdone [18][1][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_left_ap_vld_r) begin
        scalar_argVld [18][1][4] = 1;
        scalar_argAckdone [18][1][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][1][4] = hls_transform_unit_ex_hls_dup3_cand_left_r;
    scalar_adr    [18][1][4] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 588) comb block-----//
    //s = 19; r = 1; a = 5;
    if (scalar_argAck [19][1][5]) begin
        scalar_argVld [19][1][5] = 0;
        scalar_argAckdone [19][1][5] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_up_left_ap_vld_r) begin
        scalar_argVld [19][1][5] = 1;
        scalar_argAckdone [19][1][5] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][1][5] = hls_transform_unit_ex_hls_dup3_cand_up_left_r;
    scalar_adr    [19][1][5] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 592) comb block-----//
    //s = 20; r = 1; a = 7;
    if (scalar_argAck [20][1][7]) begin
        scalar_argVld [20][1][7] = 0;
        scalar_argAckdone [20][1][7] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_up_right_sap_ap_vld_r) begin
        scalar_argVld [20][1][7] = 1;
        scalar_argAckdone [20][1][7] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][7] = hls_transform_unit_ex_hls_dup3_cand_up_right_sap_r;
    scalar_adr    [20][1][7] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 596) comb block-----//
    //s = 21; r = 0; a = 8;
    if (scalar_argAck [21][0][8]) begin
        scalar_argVld [21][0][8] = 0;
        scalar_argAckdone [21][0][8] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_up_right_ap_vld_r) begin
        scalar_argVld [21][0][8] = 1;
        scalar_argAckdone [21][0][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][8] = hls_transform_unit_ex_hls_dup3_cand_up_right_r;
    scalar_adr    [21][0][8] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 600) comb block-----//
    //s = 22; r = 0; a = 26;
    if (scalar_rdat_vld_r[22][0][26]) begin
        scalar_argdone [22][0][26] = 1;
    end
    scalar_adr[22][0][26] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][26]) begin
        scalar_argVld[22][0][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[22][0][26] = 1;
    end

    //------WRITE (scalar, global adr = 600) comb block-----//
    //s = 22; r = 0; a = 8;
    if (scalar_argAck [22][0][8]) begin
        scalar_argVld [22][0][8] = 0;
        scalar_argAckdone [22][0][8] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_ap_vld_r) begin
        scalar_argVld [22][0][8] = 1;
        scalar_argAckdone [22][0][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][8] = hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_r;
    scalar_adr    [22][0][8] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1412) comb block-----//
    //s = 1; r = 0; a = 4;
    if (scalar_argAck [1][0][4]) begin
        scalar_argVld [1][0][4] = 0;
        scalar_argAckdone [1][0][4] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_up_c_ap_vld_r) begin
        scalar_argVld [1][0][4] = 1;
        scalar_argAckdone [1][0][4] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][0][4] = hls_transform_unit_ex_hls_dup3_cand_up_c_r;
    scalar_adr    [1][0][4] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1416) comb block-----//
    //s = 2; r = 1; a = 2;
    if (scalar_argAck [2][1][2]) begin
        scalar_argVld [2][1][2] = 0;
        scalar_argAckdone [2][1][2] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_left_c_ap_vld_r) begin
        scalar_argVld [2][1][2] = 1;
        scalar_argAckdone [2][1][2] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][1][2] = hls_transform_unit_ex_hls_dup3_cand_left_c_r;
    scalar_adr    [2][1][2] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1420) comb block-----//
    //s = 3; r = 1; a = 3;
    if (scalar_argAck [3][1][3]) begin
        scalar_argVld [3][1][3] = 0;
        scalar_argAckdone [3][1][3] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_up_left_c_ap_vld_r) begin
        scalar_argVld [3][1][3] = 1;
        scalar_argAckdone [3][1][3] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][1][3] = hls_transform_unit_ex_hls_dup3_cand_up_left_c_r;
    scalar_adr    [3][1][3] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1424) comb block-----//
    //s = 4; r = 1; a = 6;
    if (scalar_argAck [4][1][6]) begin
        scalar_argVld [4][1][6] = 0;
        scalar_argAckdone [4][1][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_ap_vld_r) begin
        scalar_argVld [4][1][6] = 1;
        scalar_argAckdone [4][1][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][1][6] = hls_transform_unit_ex_hls_dup3_cand_up_right_sap_c_r;
    scalar_adr    [4][1][6] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1428) comb block-----//
    //s = 5; r = 0; a = 12;
    if (scalar_argAck [5][0][12]) begin
        scalar_argVld [5][0][12] = 0;
        scalar_argAckdone [5][0][12] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_up_right_c_ap_vld_r) begin
        scalar_argVld [5][0][12] = 1;
        scalar_argAckdone [5][0][12] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][12] = hls_transform_unit_ex_hls_dup3_cand_up_right_c_r;
    scalar_adr    [5][0][12] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1432) comb block-----//
    //s = 6; r = 0; a = 33;
    if (scalar_rdat_vld_r[6][0][33]) begin
        scalar_argdone [6][0][33] = 1;
    end
    scalar_adr[6][0][33] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][33]) begin
        scalar_argVld[6][0][33] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[6][0][33] = 1;
    end

    //------WRITE (scalar, global adr = 1432) comb block-----//
    //s = 6; r = 0; a = 12;
    if (scalar_argAck [6][0][12]) begin
        scalar_argVld [6][0][12] = 0;
        scalar_argAckdone [6][0][12] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_ap_vld_r) begin
        scalar_argVld [6][0][12] = 1;
        scalar_argAckdone [6][0][12] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][12] = hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_r;
    scalar_adr    [6][0][12] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 25;
    if (scalar_rdat_vld_r[26][0][25]) begin
        scalar_argdone [26][0][25] = 1;
    end
    scalar_adr[26][0][25] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][25]) begin
        scalar_argVld[26][0][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[26][0][25] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 0; a = 26;
    if (scalar_rdat_vld_r[23][0][26]) begin
        scalar_argdone [23][0][26] = 1;
    end
    scalar_adr[23][0][26] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][26]) begin
        scalar_argVld[23][0][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[23][0][26] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 19;
    if (scalar_rdat_vld_r[24][1][19]) begin
        scalar_argdone [24][1][19] = 1;
    end
    scalar_adr[24][1][19] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][19]) begin
        scalar_argVld[24][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[24][1][19] = 1;
    end

    //------READ (scalar, global adr = 612) comb block-----//
    //s = 25; r = 0; a = 18;
    if (scalar_rdat_vld_r[25][0][18]) begin
        scalar_argdone [25][0][18] = 1;
    end
    scalar_adr[25][0][18] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][18]) begin
        scalar_argVld[25][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[25][0][18] = 1;
    end

    //------READ (scalar, global adr = 616) comb block-----//
    //s = 26; r = 1; a = 24;
    if (scalar_rdat_vld_r[26][1][24]) begin
        scalar_argdone [26][1][24] = 1;
    end
    scalar_adr[26][1][24] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][24]) begin
        scalar_argVld[26][1][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[26][1][24] = 1;
    end

    //------READ (scalar, global adr = 620) comb block-----//
    //s = 27; r = 1; a = 21;
    if (scalar_rdat_vld_r[27][1][21]) begin
        scalar_argdone [27][1][21] = 1;
    end
    scalar_adr[27][1][21] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][21]) begin
        scalar_argVld[27][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[27][1][21] = 1;
    end

    //------READ (scalar, global adr = 624) comb block-----//
    //s = 28; r = 0; a = 23;
    if (scalar_rdat_vld_r[28][0][23]) begin
        scalar_argdone [28][0][23] = 1;
    end
    scalar_adr[28][0][23] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][23]) begin
        scalar_argVld[28][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[28][0][23] = 1;
    end

    //------READ (scalar, global adr = 472) comb block-----//
    //s = 22; r = 1; a = 25;
    if (scalar_rdat_vld_r[22][1][25]) begin
        scalar_argdone [22][1][25] = 1;
    end
    scalar_adr[22][1][25] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][25]) begin
        scalar_argVld[22][1][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[22][1][25] = 1;
    end

    //------WRITE (scalar, global adr = 472) comb block-----//
    //s = 22; r = 1; a = 8;
    if (scalar_argAck [22][1][8]) begin
        scalar_argVld [22][1][8] = 0;
        scalar_argAckdone [22][1][8] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_ap_vld_r) begin
        scalar_argVld [22][1][8] = 1;
        scalar_argAckdone [22][1][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][8] = hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_r;
    scalar_adr    [22][1][8] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 25;
    if (scalar_rdat_vld_r[23][1][25]) begin
        scalar_argdone [23][1][25] = 1;
    end
    scalar_adr[23][1][25] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][25]) begin
        scalar_argVld[23][1][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[23][1][25] = 1;
    end

    //------WRITE (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 6;
    if (scalar_argAck [23][1][6]) begin
        scalar_argVld [23][1][6] = 0;
        scalar_argAckdone [23][1][6] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_ap_vld_r) begin
        scalar_argVld [23][1][6] = 1;
        scalar_argAckdone [23][1][6] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][1][6] = hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_r;
    scalar_adr    [23][1][6] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 468) comb block-----//
    //s = 21; r = 1; a = 8;
    if (scalar_argAck [21][1][8]) begin
        scalar_argVld [21][1][8] = 0;
        scalar_argAckdone [21][1][8] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_ap_vld_r) begin
        scalar_argVld [21][1][8] = 1;
        scalar_argAckdone [21][1][8] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][8] = hls_transform_unit_ex_hls_dup3_tu_cu_qp_delta_r;
    scalar_adr    [21][1][8] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 500) comb block-----//
    //s = 29; r = 0; a = 11;
    if (scalar_argAck [29][0][11]) begin
        scalar_argVld [29][0][11] = 0;
        scalar_argAckdone [29][0][11] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_tu_cross_pf_ap_vld_r) begin
        scalar_argVld [29][0][11] = 1;
        scalar_argAckdone [29][0][11] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][11] = hls_transform_unit_ex_hls_dup3_tu_cross_pf_r;
    scalar_adr    [29][0][11] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 532) comb block-----//
    //s = 5; r = 1; a = 25;
    if (scalar_rdat_vld_r[5][1][25]) begin
        scalar_argdone [5][1][25] = 1;
    end
    scalar_adr[5][1][25] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][25]) begin
        scalar_argVld[5][1][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[5][1][25] = 1;
    end

    //------WRITE (scalar, global adr = 532) comb block-----//
    //s = 5; r = 1; a = 12;
    if (scalar_argAck [5][1][12]) begin
        scalar_argVld [5][1][12] = 0;
        scalar_argAckdone [5][1][12] = 1;
    end
    if (hls_transform_unit_ex_hls_dup3_first_qp_group_o_ap_vld_r) begin
        scalar_argVld [5][1][12] = 1;
        scalar_argAckdone [5][1][12] = 0;
        ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][12] = hls_transform_unit_ex_hls_dup3_first_qp_group_o_r;
    scalar_adr    [5][1][12] = {ap_part_w[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 328) comb block-----//
    //s = 18; r = 1; a = 15;
    if (scalar_rdat_vld_r[18][1][15]) begin
        scalar_argdone [18][1][15] = 1;
    end
    scalar_adr[18][1][15] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][15]) begin
        scalar_argVld[18][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[18][1][15] = 1;
    end

    //------READ (scalar, global adr = 448) comb block-----//
    //s = 16; r = 1; a = 17;
    if (scalar_rdat_vld_r[16][1][17]) begin
        scalar_argdone [16][1][17] = 1;
    end
    scalar_adr[16][1][17] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][17]) begin
        scalar_argVld[16][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[16][1][17] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 1; a = 29;
    if (scalar_rdat_vld_r[11][1][29]) begin
        scalar_argdone [11][1][29] = 1;
    end
    scalar_adr[11][1][29] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][29]) begin
        scalar_argVld[11][1][29] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[11][1][29] = 1;
    end

    //------READ (scalar, global adr = 540) comb block-----//
    //s = 7; r = 1; a = 21;
    if (scalar_rdat_vld_r[7][1][21]) begin
        scalar_argdone [7][1][21] = 1;
    end
    scalar_adr[7][1][21] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][21]) begin
        scalar_argVld[7][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[7][1][21] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 0; a = 26;
    if (scalar_rdat_vld_r[13][0][26]) begin
        scalar_argdone [13][0][26] = 1;
    end
    scalar_adr[13][0][26] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][26]) begin
        scalar_argVld[13][0][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[13][0][26] = 1;
    end

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 1; a = 23;
    if (scalar_rdat_vld_r[28][1][23]) begin
        scalar_argdone [28][1][23] = 1;
    end
    scalar_adr[28][1][23] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][23]) begin
        scalar_argVld[28][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[28][1][23] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 1; a = 18;
    if (scalar_rdat_vld_r[2][1][18]) begin
        scalar_argdone [2][1][18] = 1;
    end
    scalar_adr[2][1][18] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][18]) begin
        scalar_argVld[2][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[2][1][18] = 1;
    end

    //------READ (scalar, global adr = 460) comb block-----//
    //s = 19; r = 0; a = 19;
    if (scalar_rdat_vld_r[19][0][19]) begin
        scalar_argdone [19][0][19] = 1;
    end
    scalar_adr[19][0][19] = {ap_part[hls_transform_unit_ex_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][19]) begin
        scalar_argVld[19][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argVld[19][0][19] = 1;
    end

    hls_transform_unit_ex_hls_dup3_ready = array_argRdy[0][86]& array_argRdy[0][246]& array_argRdy[0][87]& array_argRdy[0][247]& array_argRdy[0][88]& array_argRdy[0][248] & ~ap_arb_reload_running_r[hls_transform_unit_ex_hls_dup3];
    array_ap_ce[0][86] = ap_ce[hls_transform_unit_ex_hls_dup3];
    array_ap_ce[0][246] = ap_ce[hls_transform_unit_ex_hls_dup3];
    array_ap_ce[0][87] = ap_ce[hls_transform_unit_ex_hls_dup3];
    array_ap_ce[0][247] = ap_ce[hls_transform_unit_ex_hls_dup3];
    array_ap_ce[0][88] = ap_ce[hls_transform_unit_ex_hls_dup3];
    array_ap_ce[0][248] = ap_ce[hls_transform_unit_ex_hls_dup3];

    if (ap_arb_ret[hls_transform_unit_ex_hls_dup3] & ~ap_arb_ret_r[hls_transform_unit_ex_hls_dup3]) begin
        ap_arb_ret_running[hls_transform_unit_ex_hls_dup3] = 1;
        hls_transform_unit_ex_hls_dup3_ready = 0;
    end

    scalar_argAckdone_all[hls_transform_unit_ex_hls_dup3] = scalar_argAckdone[27][0][9] &
                                                scalar_argAckdone[28][0][5] &
                                                scalar_argAckdone[6][1][11] &
                                                scalar_argAckdone[10][0][10] &
                                                scalar_argAckdone[14][1][9] &
                                                scalar_argAckdone[12][0][9] &
                                                scalar_argAckdone[13][0][8] &
                                                scalar_argAckdone[29][1][10] &
                                                scalar_argAckdone[8][1][12] &
                                                scalar_argAckdone[9][1][12] &
                                                scalar_argAckdone[17][1][4] &
                                                scalar_argAckdone[18][1][4] &
                                                scalar_argAckdone[19][1][5] &
                                                scalar_argAckdone[20][1][7] &
                                                scalar_argAckdone[21][0][8] &
                                                scalar_argAckdone[22][0][8] &
                                                scalar_argAckdone[1][0][4] &
                                                scalar_argAckdone[2][1][2] &
                                                scalar_argAckdone[3][1][3] &
                                                scalar_argAckdone[4][1][6] &
                                                scalar_argAckdone[5][0][12] &
                                                scalar_argAckdone[6][0][12] &
                                                scalar_argAckdone[22][1][8] &
                                                scalar_argAckdone[23][1][6] &
                                                scalar_argAckdone[21][1][8] &
                                                scalar_argAckdone[29][0][11] &
                                                scalar_argAckdone[5][1][12];
    if (ap_arb_ret_running[hls_transform_unit_ex_hls_dup3] & scalar_argAckdone_all[hls_transform_unit_ex_hls_dup3] &~ ap_arb_reload_running_r[hls_transform_unit_ex_hls_dup3]) begin
        ap_arb_reload[hls_transform_unit_ex_hls_dup3] = 1;
        ap_arb_reload_running[hls_transform_unit_ex_hls_dup3] = 1;
    end

    if (ap_arb_start[hls_transform_unit_ex_hls_dup3] &~ ap_arb_start_r[hls_transform_unit_ex_hls_dup3]) begin
        ap_arb_start_running[hls_transform_unit_ex_hls_dup3] = 1;
    end

    if (ap_arb_start_running[hls_transform_unit_ex_hls_dup3] & ~scalar_writing_20& ~scalar_writing_16& ~scalar_writing_560& ~scalar_writing_484& ~scalar_writing_488& ~scalar_writing_572& ~scalar_writing_536& ~scalar_writing_56& ~scalar_writing_48& ~scalar_writing_1140& ~scalar_writing_600& ~scalar_writing_1432& ~scalar_writing_604& ~scalar_writing_608& ~scalar_writing_612& ~scalar_writing_616& ~scalar_writing_620& ~scalar_writing_624& ~scalar_writing_472& ~scalar_writing_476& ~scalar_writing_532& ~scalar_writing_540) begin
        ap_arb_start_running[hls_transform_unit_ex_hls_dup3] = 0;
        ap_arb_reload[hls_transform_unit_ex_hls_dup3] = 1;
    end

    scalar_argdone_all[hls_transform_unit_ex_hls_dup3] = scalar_argdone[5][0][26] &
                                                                scalar_argdone[4][1][17] &
                                                                scalar_argdone[2][0][19] &
                                                                scalar_argdone[28][1][22] &
                                                                scalar_argdone[12][1][27] &
                                                                scalar_argdone[20][1][17] &
                                                                scalar_argdone[21][1][15] &
                                                                scalar_argdone[22][1][24] &
                                                                scalar_argdone[23][0][25] &
                                                                scalar_argdone[24][1][18] &
                                                                scalar_argdone[25][1][15] &
                                                                scalar_argdone[25][0][17] &
                                                                scalar_argdone[26][1][23] &
                                                                scalar_argdone[15][0][24] &
                                                                scalar_argdone[6][1][31] &
                                                                scalar_argdone[14][0][27] &
                                                                scalar_argdone[12][0][29] &
                                                                scalar_argdone[29][0][29] &
                                                                scalar_argdone[23][1][24] &
                                                                scalar_argdone[24][0][20] &
                                                                scalar_argdone[25][1][16] &
                                                                scalar_argdone[31][0][34] &
                                                                scalar_argdone[0][1][29] &
                                                                scalar_argdone[1][1][27] &
                                                                scalar_argdone[30][0][15] &
                                                                scalar_argdone[22][0][26] &
                                                                scalar_argdone[6][0][33] &
                                                                scalar_argdone[26][0][25] &
                                                                scalar_argdone[23][0][26] &
                                                                scalar_argdone[24][1][19] &
                                                                scalar_argdone[25][0][18] &
                                                                scalar_argdone[26][1][24] &
                                                                scalar_argdone[27][1][21] &
                                                                scalar_argdone[28][0][23] &
                                                                scalar_argdone[22][1][25] &
                                                                scalar_argdone[23][1][25] &
                                                                scalar_argdone[5][1][25] &
                                                                scalar_argdone[18][1][15] &
                                                                scalar_argdone[16][1][17] &
                                                                scalar_argdone[11][1][29] &
                                                                scalar_argdone[7][1][21] &
                                                                scalar_argdone[13][0][26] &
                                                                scalar_argdone[28][1][23] &
                                                                scalar_argdone[2][1][18] &
                                                                scalar_argdone[19][0][19];

    if (scalar_argdone_all_r[hls_transform_unit_ex_hls_dup3]) begin
        scalar_argdone[5][0][26] = 0;
        scalar_argdone[4][1][17] = 0;
        scalar_argdone[2][0][19] = 0;
        scalar_argdone[28][1][22] = 0;
        scalar_argdone[12][1][27] = 0;
        scalar_argdone[20][1][17] = 0;
        scalar_argdone[21][1][15] = 0;
        scalar_argdone[22][1][24] = 0;
        scalar_argdone[23][0][25] = 0;
        scalar_argdone[24][1][18] = 0;
        scalar_argdone[25][1][15] = 0;
        scalar_argdone[25][0][17] = 0;
        scalar_argdone[26][1][23] = 0;
        scalar_argdone[15][0][24] = 0;
        scalar_argdone[6][1][31] = 0;
        scalar_argdone[14][0][27] = 0;
        scalar_argdone[12][0][29] = 0;
        scalar_argdone[29][0][29] = 0;
        scalar_argdone[23][1][24] = 0;
        scalar_argdone[24][0][20] = 0;
        scalar_argdone[25][1][16] = 0;
        scalar_argdone[31][0][34] = 0;
        scalar_argdone[0][1][29] = 0;
        scalar_argdone[1][1][27] = 0;
        scalar_argdone[30][0][15] = 0;
        scalar_argdone[22][0][26] = 0;
        scalar_argdone[6][0][33] = 0;
        scalar_argdone[26][0][25] = 0;
        scalar_argdone[23][0][26] = 0;
        scalar_argdone[24][1][19] = 0;
        scalar_argdone[25][0][18] = 0;
        scalar_argdone[26][1][24] = 0;
        scalar_argdone[27][1][21] = 0;
        scalar_argdone[28][0][23] = 0;
        scalar_argdone[22][1][25] = 0;
        scalar_argdone[23][1][25] = 0;
        scalar_argdone[5][1][25] = 0;
        scalar_argdone[18][1][15] = 0;
        scalar_argdone[16][1][17] = 0;
        scalar_argdone[11][1][29] = 0;
        scalar_argdone[7][1][21] = 0;
        scalar_argdone[13][0][26] = 0;
        scalar_argdone[28][1][23] = 0;
        scalar_argdone[2][1][18] = 0;
        scalar_argdone[19][0][19] = 0;

        if (ap_arb_start_r[hls_transform_unit_ex_hls_dup3] & ~ap_running_r[hls_transform_unit_ex_hls_dup3]) begin
            ap_start[hls_transform_unit_ex_hls_dup3] = 1;
            ap_running[hls_transform_unit_ex_hls_dup3] = 1;
        end
        else if (ap_arb_ret_running_r[hls_transform_unit_ex_hls_dup3]) begin
            ap_arb_ret_running[hls_transform_unit_ex_hls_dup3] = 0;
            ap_arb_reload_running[hls_transform_unit_ex_hls_dup3] = 0;
        end
    end

    if (ap_start_r[hls_transform_unit_ex_hls_dup3] & ap_ready_r[hls_transform_unit_ex_hls_dup3]) begin
        ap_start[hls_transform_unit_ex_hls_dup3] = 0;
    end

    if (ap_done_r[hls_transform_unit_ex_hls_dup3]) begin
        ap_running[hls_transform_unit_ex_hls_dup3] = 0;
    end
`endif
    //============================================================
    //hls_transform_tree_hls       (f = 10)
    //============================================================
`ifdef enable_connect_hls_transform_tree_hls
    //------WRITE (scalar, global adr = 168) comb block-----//
    //s = 10; r = 1; a = 6;
    if (scalar_argAck [10][1][6]) begin
        scalar_argVld [10][1][6] = 0;
        scalar_argAckdone [10][1][6] = 1;
    end
    if (hls_transform_tree_hls_log2_trafo_size_ap_vld_r) begin
        scalar_argVld [10][1][6] = 1;
        scalar_argAckdone [10][1][6] = 0;
        ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][6] = hls_transform_tree_hls_log2_trafo_size_r;
    scalar_adr    [10][1][6] = {ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 12) comb block-----//
    //s = 3; r = 0; a = 0;
    if (scalar_argAck [3][0][0]) begin
        scalar_argVld [3][0][0] = 0;
        scalar_argAckdone [3][0][0] = 1;
    end
    if (hls_transform_tree_hls_split_transform_flag_ap_vld_r) begin
        scalar_argVld [3][0][0] = 1;
        scalar_argAckdone [3][0][0] = 0;
        ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][0][0] = hls_transform_tree_hls_split_transform_flag_r;
    scalar_adr    [3][0][0] = {ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 16) comb block-----//
    //s = 4; r = 0; a = 3;
    if (scalar_argAck [4][0][3]) begin
        scalar_argVld [4][0][3] = 0;
        scalar_argAckdone [4][0][3] = 1;
    end
    if (hls_transform_tree_hls_cbf_data_ap_vld_r) begin
        scalar_argVld [4][0][3] = 1;
        scalar_argAckdone [4][0][3] = 0;
        ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][0][3] = hls_transform_tree_hls_cbf_data_r;
    scalar_adr    [4][0][3] = {ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1164) comb block-----//
    //s = 3; r = 1; a = 13;
    if (scalar_rdat_vld_r[3][1][13]) begin
        scalar_argdone [3][1][13] = 1;
    end
    scalar_adr[3][1][13] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][13]) begin
        scalar_argVld[3][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[3][1][13] = 1;
    end

    //------READ (scalar, global adr = 440) comb block-----//
    //s = 14; r = 1; a = 21;
    if (scalar_rdat_vld_r[14][1][21]) begin
        scalar_argdone [14][1][21] = 1;
    end
    scalar_adr[14][1][21] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][21]) begin
        scalar_argVld[14][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[14][1][21] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 20;
    if (scalar_rdat_vld_r[15][1][20]) begin
        scalar_argdone [15][1][20] = 1;
    end
    scalar_adr[15][1][20] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][20]) begin
        scalar_argVld[15][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[15][1][20] = 1;
    end

    //------WRITE (scalar, global adr = 480) comb block-----//
    //s = 24; r = 0; a = 3;
    if (scalar_argAck [24][0][3]) begin
        scalar_argVld [24][0][3] = 0;
        scalar_argAckdone [24][0][3] = 1;
    end
    if (hls_transform_tree_hls_tu_chroma_mode_c_ap_vld_r) begin
        scalar_argVld [24][0][3] = 1;
        scalar_argAckdone [24][0][3] = 0;
        ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][0][3] = hls_transform_tree_hls_tu_chroma_mode_c_r;
    scalar_adr    [24][0][3] = {ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 484) comb block-----//
    //s = 25; r = 0; a = 3;
    if (scalar_argAck [25][0][3]) begin
        scalar_argVld [25][0][3] = 0;
        scalar_argAckdone [25][0][3] = 1;
    end
    if (hls_transform_tree_hls_tu_intra_pred_mode_ap_vld_r) begin
        scalar_argVld [25][0][3] = 1;
        scalar_argAckdone [25][0][3] = 0;
        ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][0][3] = hls_transform_tree_hls_tu_intra_pred_mode_r;
    scalar_adr    [25][0][3] = {ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 488) comb block-----//
    //s = 26; r = 0; a = 3;
    if (scalar_argAck [26][0][3]) begin
        scalar_argVld [26][0][3] = 0;
        scalar_argAckdone [26][0][3] = 1;
    end
    if (hls_transform_tree_hls_tu_intra_pred_mode_c_ap_vld_r) begin
        scalar_argVld [26][0][3] = 1;
        scalar_argAckdone [26][0][3] = 0;
        ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][0][3] = hls_transform_tree_hls_tu_intra_pred_mode_c_r;
    scalar_adr    [26][0][3] = {ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 508) comb block-----//
    //s = 31; r = 1; a = 21;
    if (scalar_rdat_vld_r[31][1][21]) begin
        scalar_argdone [31][1][21] = 1;
    end
    scalar_adr    [31][1][21] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][21]) begin
        scalar_argVld [31][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [31][1][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 509) comb block-----//
    //s = 31; r = 0; a = 23;
    if (scalar_rdat_vld_r[31][0][23]) begin
        scalar_argdone [31][0][23] = 1;
    end
    scalar_adr    [31][0][23] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][23]) begin
        scalar_argVld [31][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [31][0][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 510) comb block-----//
    //s = 31; r = 1; a = 22;
    if (scalar_rdat_vld_r[31][1][22]) begin
        scalar_argdone [31][1][22] = 1;
    end
    scalar_adr    [31][1][22] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][22]) begin
        scalar_argVld [31][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [31][1][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 511) comb block-----//
    //s = 31; r = 0; a = 24;
    if (scalar_rdat_vld_r[31][0][24]) begin
        scalar_argdone [31][0][24] = 1;
    end
    scalar_adr    [31][0][24] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][24]) begin
        scalar_argVld [31][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [31][0][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 0; a = 20;
    if (scalar_rdat_vld_r[0][0][20]) begin
        scalar_argdone [0][0][20] = 1;
    end
    scalar_adr    [0][0][20] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][20]) begin
        scalar_argVld [0][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [0][0][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 1; a = 20;
    if (scalar_rdat_vld_r[0][1][20]) begin
        scalar_argdone [0][1][20] = 1;
    end
    scalar_adr    [0][1][20] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][20]) begin
        scalar_argVld [0][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [0][1][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 0; a = 21;
    if (scalar_rdat_vld_r[0][0][21]) begin
        scalar_argdone [0][0][21] = 1;
    end
    scalar_adr    [0][0][21] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][21]) begin
        scalar_argVld [0][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [0][0][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 1; a = 21;
    if (scalar_rdat_vld_r[0][1][21]) begin
        scalar_argdone [0][1][21] = 1;
    end
    scalar_adr    [0][1][21] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][21]) begin
        scalar_argVld [0][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [0][1][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 516) comb block-----//
    //s = 1; r = 0; a = 16;
    if (scalar_rdat_vld_r[1][0][16]) begin
        scalar_argdone [1][0][16] = 1;
    end
    scalar_adr    [1][0][16] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][16]) begin
        scalar_argVld [1][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [1][0][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 517) comb block-----//
    //s = 1; r = 1; a = 16;
    if (scalar_rdat_vld_r[1][1][16]) begin
        scalar_argdone [1][1][16] = 1;
    end
    scalar_adr    [1][1][16] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][16]) begin
        scalar_argVld [1][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [1][1][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 518) comb block-----//
    //s = 1; r = 0; a = 17;
    if (scalar_rdat_vld_r[1][0][17]) begin
        scalar_argdone [1][0][17] = 1;
    end
    scalar_adr    [1][0][17] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][17]) begin
        scalar_argVld [1][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [1][0][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 519) comb block-----//
    //s = 1; r = 1; a = 17;
    if (scalar_rdat_vld_r[1][1][17]) begin
        scalar_argdone [1][1][17] = 1;
    end
    scalar_adr    [1][1][17] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][17]) begin
        scalar_argVld [1][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld [1][1][17] = 1;
    end

    //------READ (scalar, global adr = 568) comb block-----//
    //s = 14; r = 0; a = 22;
    if (scalar_rdat_vld_r[14][0][22]) begin
        scalar_argdone [14][0][22] = 1;
    end
    scalar_adr[14][0][22] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][22]) begin
        scalar_argVld[14][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[14][0][22] = 1;
    end

    //------READ (scalar, global adr = 364) comb block-----//
    //s = 27; r = 0; a = 17;
    if (scalar_rdat_vld_r[27][0][17]) begin
        scalar_argdone [27][0][17] = 1;
    end
    scalar_adr[27][0][17] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][17]) begin
        scalar_argVld[27][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[27][0][17] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 1; a = 11;
    if (scalar_rdat_vld_r[30][1][11]) begin
        scalar_argdone [30][1][11] = 1;
    end
    scalar_adr[30][1][11] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][11]) begin
        scalar_argVld[30][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[30][1][11] = 1;
    end

    //------READ (scalar, global adr = 576) comb block-----//
    //s = 16; r = 0; a = 15;
    if (scalar_rdat_vld_r[16][0][15]) begin
        scalar_argdone [16][0][15] = 1;
    end
    scalar_adr[16][0][15] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][15]) begin
        scalar_argVld[16][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[16][0][15] = 1;
    end

    //------READ (scalar, global adr = 380) comb block-----//
    //s = 31; r = 1; a = 23;
    if (scalar_rdat_vld_r[31][1][23]) begin
        scalar_argdone [31][1][23] = 1;
    end
    scalar_adr[31][1][23] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][23]) begin
        scalar_argVld[31][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[31][1][23] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 1; a = 22;
    if (scalar_rdat_vld_r[12][1][22]) begin
        scalar_argdone [12][1][22] = 1;
    end
    scalar_adr[12][1][22] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][22]) begin
        scalar_argVld[12][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[12][1][22] = 1;
    end

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 1; a = 22;
    if (scalar_rdat_vld_r[13][1][22]) begin
        scalar_argdone [13][1][22] = 1;
    end
    scalar_adr[13][1][22] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][22]) begin
        scalar_argVld[13][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[13][1][22] = 1;
    end

    //------READ (scalar, global adr = 324) comb block-----//
    //s = 17; r = 0; a = 16;
    if (scalar_rdat_vld_r[17][0][16]) begin
        scalar_argdone [17][0][16] = 1;
    end
    scalar_adr[17][0][16] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][16]) begin
        scalar_argVld[17][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[17][0][16] = 1;
    end

    //------READ (scalar, global adr = 328) comb block-----//
    //s = 18; r = 0; a = 13;
    if (scalar_rdat_vld_r[18][0][13]) begin
        scalar_argdone [18][0][13] = 1;
    end
    scalar_adr[18][0][13] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][13]) begin
        scalar_argVld[18][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[18][0][13] = 1;
    end

    //------READ (scalar, global adr = 20) comb block-----//
    //s = 5; r = 0; a = 21;
    if (scalar_rdat_vld_r[5][0][21]) begin
        scalar_argdone [5][0][21] = 1;
    end
    scalar_adr[5][0][21] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][21]) begin
        scalar_argVld[5][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[5][0][21] = 1;
    end

    //------WRITE (scalar, global adr = 20) comb block-----//
    //s = 5; r = 0; a = 7;
    if (scalar_argAck [5][0][7]) begin
        scalar_argVld [5][0][7] = 0;
        scalar_argAckdone [5][0][7] = 1;
    end
    if (hls_transform_tree_hls_cbf_luma_o_ap_vld_r) begin
        scalar_argVld [5][0][7] = 1;
        scalar_argAckdone [5][0][7] = 0;
        ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][7] = hls_transform_tree_hls_cbf_luma_o_r;
    scalar_adr    [5][0][7] = {ap_part_w[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1260) comb block-----//
    //s = 27; r = 1; a = 16;
    if (scalar_rdat_vld_r[27][1][16]) begin
        scalar_argdone [27][1][16] = 1;
    end
    scalar_adr[27][1][16] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][16]) begin
        scalar_argVld[27][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[27][1][16] = 1;
    end

    //------READ (scalar, global adr = 1264) comb block-----//
    //s = 28; r = 0; a = 16;
    if (scalar_rdat_vld_r[28][0][16]) begin
        scalar_argdone [28][0][16] = 1;
    end
    scalar_adr[28][0][16] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][16]) begin
        scalar_argVld[28][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[28][0][16] = 1;
    end

    //------READ (scalar, global adr = 1268) comb block-----//
    //s = 29; r = 1; a = 23;
    if (scalar_rdat_vld_r[29][1][23]) begin
        scalar_argdone [29][1][23] = 1;
    end
    scalar_adr[29][1][23] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][23]) begin
        scalar_argVld[29][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[29][1][23] = 1;
    end

    //------READ (scalar, global adr = 1240) comb block-----//
    //s = 22; r = 0; a = 19;
    if (scalar_rdat_vld_r[22][0][19]) begin
        scalar_argdone [22][0][19] = 1;
    end
    scalar_adr[22][0][19] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][19]) begin
        scalar_argVld[22][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[22][0][19] = 1;
    end

    //------READ (scalar, global adr = 388) comb block-----//
    //s = 1; r = 0; a = 18;
    if (scalar_rdat_vld_r[1][0][18]) begin
        scalar_argdone [1][0][18] = 1;
    end
    scalar_adr[1][0][18] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][18]) begin
        scalar_argVld[1][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[1][0][18] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 18;
    if (scalar_rdat_vld_r[26][0][18]) begin
        scalar_argdone [26][0][18] = 1;
    end
    scalar_adr[26][0][18] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][18]) begin
        scalar_argVld[26][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[26][0][18] = 1;
    end

    //------WRITE (array range, global adr = 286200, width=32, addr_width=32) -----//
    //s = 0; a = 69;
    array_argVld [0][69] = hls_transform_tree_hls_cbf_luma_base_EN_A & (hls_transform_tree_hls_cbf_luma_base_WEN_A != 0);
    array_adr    [0][69] = hls_transform_tree_hls_cbf_luma_base_Addr_A;
    array_wdat   [0][69] = hls_transform_tree_hls_cbf_luma_base_Din_A;

    //------READ (array range, global adr = 286200, width=32, addr_width=32) -----//
    //s = 0; a = 229;
    hls_transform_tree_hls_cbf_luma_base_Dout_A = array_rdat  [0][229];
    //found a write signal pair
    array_argVld [0][229] = hls_transform_tree_hls_cbf_luma_base_EN_A & (hls_transform_tree_hls_cbf_luma_base_WEN_A == 0);
    array_adr    [0][229] = hls_transform_tree_hls_cbf_luma_base_Addr_A;

    //------WRITE (array range, global adr = 286212, width=8, addr_width=32) -----//
    //s = 0; a = 70;
    array_argVld [0][70] = hls_transform_tree_hls_is_pcm_EN_A & (hls_transform_tree_hls_is_pcm_WEN_A != 0);
    array_adr    [0][70] = hls_transform_tree_hls_is_pcm_Addr_A;
    array_wdat   [0][70] = hls_transform_tree_hls_is_pcm_Din_A;

    //------READ (array range, global adr = 286212, width=8, addr_width=32) -----//
    //s = 0; a = 230;
    hls_transform_tree_hls_is_pcm_Dout_A = array_rdat  [0][230];
    //found a write signal pair
    array_argVld [0][230] = hls_transform_tree_hls_is_pcm_EN_A & (hls_transform_tree_hls_is_pcm_WEN_A == 0);
    array_adr    [0][230] = hls_transform_tree_hls_is_pcm_Addr_A;

    //------READ (scalar, global adr = 32) comb block-----//
    //s = 8; r = 1; a = 25;
    if (scalar_rdat_vld_r[8][1][25]) begin
        scalar_argdone [8][1][25] = 1;
    end
    scalar_adr[8][1][25] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][25]) begin
        scalar_argVld[8][1][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[8][1][25] = 1;
    end

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 1; a = 26;
    if (scalar_rdat_vld_r[6][1][26]) begin
        scalar_argdone [6][1][26] = 1;
    end
    scalar_adr[6][1][26] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][26]) begin
        scalar_argVld[6][1][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[6][1][26] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 1; a = 15;
    if (scalar_rdat_vld_r[19][1][15]) begin
        scalar_argdone [19][1][15] = 1;
    end
    scalar_adr[19][1][15] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][15]) begin
        scalar_argVld[19][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[19][1][15] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 0; a = 24;
    if (scalar_rdat_vld_r[29][0][24]) begin
        scalar_argdone [29][0][24] = 1;
    end
    scalar_adr[29][0][24] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][24]) begin
        scalar_argVld[29][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[29][0][24] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 0; a = 15;
    if (scalar_rdat_vld_r[3][0][15]) begin
        scalar_argdone [3][0][15] = 1;
    end
    scalar_adr[3][0][15] = {ap_part[hls_transform_tree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][15]) begin
        scalar_argVld[3][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls]) begin
        scalar_argVld[3][0][15] = 1;
    end

    hls_transform_tree_hls_ready = array_argRdy[0][69]& array_argRdy[0][229]& array_argRdy[0][70]& array_argRdy[0][230] & ~ap_arb_reload_running_r[hls_transform_tree_hls];
    array_ap_ce[0][69] = ap_ce[hls_transform_tree_hls];
    array_ap_ce[0][229] = ap_ce[hls_transform_tree_hls];
    array_ap_ce[0][70] = ap_ce[hls_transform_tree_hls];
    array_ap_ce[0][230] = ap_ce[hls_transform_tree_hls];

    if (ap_arb_ret[hls_transform_tree_hls] & ~ap_arb_ret_r[hls_transform_tree_hls]) begin
        ap_arb_ret_running[hls_transform_tree_hls] = 1;
        hls_transform_tree_hls_ready = 0;
    end

    scalar_argAckdone_all[hls_transform_tree_hls] = scalar_argAckdone[10][1][6] &
                                                scalar_argAckdone[3][0][0] &
                                                scalar_argAckdone[4][0][3] &
                                                scalar_argAckdone[24][0][3] &
                                                scalar_argAckdone[25][0][3] &
                                                scalar_argAckdone[26][0][3] &
                                                scalar_argAckdone[5][0][7];
    if (ap_arb_ret_running[hls_transform_tree_hls] & scalar_argAckdone_all[hls_transform_tree_hls] &~ ap_arb_reload_running_r[hls_transform_tree_hls]) begin
        ap_arb_reload[hls_transform_tree_hls] = 1;
        ap_arb_reload_running[hls_transform_tree_hls] = 1;
    end

    if (ap_arb_start[hls_transform_tree_hls] &~ ap_arb_start_r[hls_transform_tree_hls]) begin
        ap_arb_start_running[hls_transform_tree_hls] = 1;
    end

    if (ap_arb_start_running[hls_transform_tree_hls] & ~scalar_writing_572& ~scalar_writing_508& ~scalar_writing_509& ~scalar_writing_510& ~scalar_writing_511& ~scalar_writing_512& ~scalar_writing_513& ~scalar_writing_514& ~scalar_writing_515& ~scalar_writing_516& ~scalar_writing_517& ~scalar_writing_518& ~scalar_writing_519& ~scalar_writing_568& ~scalar_writing_576& ~scalar_writing_560& ~scalar_writing_564& ~scalar_writing_20& ~scalar_writing_32) begin
        ap_arb_start_running[hls_transform_tree_hls] = 0;
        ap_arb_reload[hls_transform_tree_hls] = 1;
    end

    scalar_argdone_all[hls_transform_tree_hls] = scalar_argdone[3][1][13] &
                                                                scalar_argdone[14][1][21] &
                                                                scalar_argdone[15][1][20] &
                                                                scalar_argdone[31][1][21] &
                                                                scalar_argdone[31][0][23] &
                                                                scalar_argdone[31][1][22] &
                                                                scalar_argdone[31][0][24] &
                                                                scalar_argdone[0][0][20] &
                                                                scalar_argdone[0][1][20] &
                                                                scalar_argdone[0][0][21] &
                                                                scalar_argdone[0][1][21] &
                                                                scalar_argdone[1][0][16] &
                                                                scalar_argdone[1][1][16] &
                                                                scalar_argdone[1][0][17] &
                                                                scalar_argdone[1][1][17] &
                                                                scalar_argdone[14][0][22] &
                                                                scalar_argdone[27][0][17] &
                                                                scalar_argdone[30][1][11] &
                                                                scalar_argdone[16][0][15] &
                                                                scalar_argdone[31][1][23] &
                                                                scalar_argdone[12][1][22] &
                                                                scalar_argdone[13][1][22] &
                                                                scalar_argdone[17][0][16] &
                                                                scalar_argdone[18][0][13] &
                                                                scalar_argdone[5][0][21] &
                                                                scalar_argdone[27][1][16] &
                                                                scalar_argdone[28][0][16] &
                                                                scalar_argdone[29][1][23] &
                                                                scalar_argdone[22][0][19] &
                                                                scalar_argdone[1][0][18] &
                                                                scalar_argdone[26][0][18] &
                                                                scalar_argdone[8][1][25] &
                                                                scalar_argdone[6][1][26] &
                                                                scalar_argdone[19][1][15] &
                                                                scalar_argdone[29][0][24] &
                                                                scalar_argdone[3][0][15];

    if (scalar_argdone_all_r[hls_transform_tree_hls]) begin
        scalar_argdone[3][1][13] = 0;
        scalar_argdone[14][1][21] = 0;
        scalar_argdone[15][1][20] = 0;
        scalar_argdone[31][1][21] = 0;
        scalar_argdone[31][0][23] = 0;
        scalar_argdone[31][1][22] = 0;
        scalar_argdone[31][0][24] = 0;
        scalar_argdone[0][0][20] = 0;
        scalar_argdone[0][1][20] = 0;
        scalar_argdone[0][0][21] = 0;
        scalar_argdone[0][1][21] = 0;
        scalar_argdone[1][0][16] = 0;
        scalar_argdone[1][1][16] = 0;
        scalar_argdone[1][0][17] = 0;
        scalar_argdone[1][1][17] = 0;
        scalar_argdone[14][0][22] = 0;
        scalar_argdone[27][0][17] = 0;
        scalar_argdone[30][1][11] = 0;
        scalar_argdone[16][0][15] = 0;
        scalar_argdone[31][1][23] = 0;
        scalar_argdone[12][1][22] = 0;
        scalar_argdone[13][1][22] = 0;
        scalar_argdone[17][0][16] = 0;
        scalar_argdone[18][0][13] = 0;
        scalar_argdone[5][0][21] = 0;
        scalar_argdone[27][1][16] = 0;
        scalar_argdone[28][0][16] = 0;
        scalar_argdone[29][1][23] = 0;
        scalar_argdone[22][0][19] = 0;
        scalar_argdone[1][0][18] = 0;
        scalar_argdone[26][0][18] = 0;
        scalar_argdone[8][1][25] = 0;
        scalar_argdone[6][1][26] = 0;
        scalar_argdone[19][1][15] = 0;
        scalar_argdone[29][0][24] = 0;
        scalar_argdone[3][0][15] = 0;

        if (ap_arb_start_r[hls_transform_tree_hls] & ~ap_running_r[hls_transform_tree_hls]) begin
            ap_start[hls_transform_tree_hls] = 1;
            ap_running[hls_transform_tree_hls] = 1;
        end
        else if (ap_arb_ret_running_r[hls_transform_tree_hls]) begin
            ap_arb_ret_running[hls_transform_tree_hls] = 0;
            ap_arb_reload_running[hls_transform_tree_hls] = 0;
        end
    end

    if (ap_start_r[hls_transform_tree_hls] & ap_ready_r[hls_transform_tree_hls]) begin
        ap_start[hls_transform_tree_hls] = 0;
    end

    if (ap_done_r[hls_transform_tree_hls]) begin
        ap_running[hls_transform_tree_hls] = 0;
    end
`endif
    //============================================================
    //hls_transform_tree_hls_dup1       (f = 11)
    //============================================================
`ifdef enable_connect_hls_transform_tree_hls_dup1
    //------WRITE (scalar, global adr = 168) comb block-----//
    //s = 10; r = 0; a = 7;
    if (scalar_argAck [10][0][7]) begin
        scalar_argVld [10][0][7] = 0;
        scalar_argAckdone [10][0][7] = 1;
    end
    if (hls_transform_tree_hls_dup1_log2_trafo_size_ap_vld_r) begin
        scalar_argVld [10][0][7] = 1;
        scalar_argAckdone [10][0][7] = 0;
        ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][7] = hls_transform_tree_hls_dup1_log2_trafo_size_r;
    scalar_adr    [10][0][7] = {ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 12) comb block-----//
    //s = 3; r = 1; a = 0;
    if (scalar_argAck [3][1][0]) begin
        scalar_argVld [3][1][0] = 0;
        scalar_argAckdone [3][1][0] = 1;
    end
    if (hls_transform_tree_hls_dup1_split_transform_flag_ap_vld_r) begin
        scalar_argVld [3][1][0] = 1;
        scalar_argAckdone [3][1][0] = 0;
        ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][1][0] = hls_transform_tree_hls_dup1_split_transform_flag_r;
    scalar_adr    [3][1][0] = {ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 16) comb block-----//
    //s = 4; r = 1; a = 3;
    if (scalar_argAck [4][1][3]) begin
        scalar_argVld [4][1][3] = 0;
        scalar_argAckdone [4][1][3] = 1;
    end
    if (hls_transform_tree_hls_dup1_cbf_data_ap_vld_r) begin
        scalar_argVld [4][1][3] = 1;
        scalar_argAckdone [4][1][3] = 0;
        ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][1][3] = hls_transform_tree_hls_dup1_cbf_data_r;
    scalar_adr    [4][1][3] = {ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1164) comb block-----//
    //s = 3; r = 1; a = 14;
    if (scalar_rdat_vld_r[3][1][14]) begin
        scalar_argdone [3][1][14] = 1;
    end
    scalar_adr[3][1][14] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][14]) begin
        scalar_argVld[3][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[3][1][14] = 1;
    end

    //------READ (scalar, global adr = 440) comb block-----//
    //s = 14; r = 1; a = 22;
    if (scalar_rdat_vld_r[14][1][22]) begin
        scalar_argdone [14][1][22] = 1;
    end
    scalar_adr[14][1][22] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][22]) begin
        scalar_argVld[14][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[14][1][22] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 0; a = 21;
    if (scalar_rdat_vld_r[15][0][21]) begin
        scalar_argdone [15][0][21] = 1;
    end
    scalar_adr[15][0][21] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][21]) begin
        scalar_argVld[15][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[15][0][21] = 1;
    end

    //------WRITE (scalar, global adr = 480) comb block-----//
    //s = 24; r = 1; a = 3;
    if (scalar_argAck [24][1][3]) begin
        scalar_argVld [24][1][3] = 0;
        scalar_argAckdone [24][1][3] = 1;
    end
    if (hls_transform_tree_hls_dup1_tu_chroma_mode_c_ap_vld_r) begin
        scalar_argVld [24][1][3] = 1;
        scalar_argAckdone [24][1][3] = 0;
        ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][1][3] = hls_transform_tree_hls_dup1_tu_chroma_mode_c_r;
    scalar_adr    [24][1][3] = {ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 484) comb block-----//
    //s = 25; r = 1; a = 3;
    if (scalar_argAck [25][1][3]) begin
        scalar_argVld [25][1][3] = 0;
        scalar_argAckdone [25][1][3] = 1;
    end
    if (hls_transform_tree_hls_dup1_tu_intra_pred_mode_ap_vld_r) begin
        scalar_argVld [25][1][3] = 1;
        scalar_argAckdone [25][1][3] = 0;
        ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][1][3] = hls_transform_tree_hls_dup1_tu_intra_pred_mode_r;
    scalar_adr    [25][1][3] = {ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 488) comb block-----//
    //s = 26; r = 1; a = 3;
    if (scalar_argAck [26][1][3]) begin
        scalar_argVld [26][1][3] = 0;
        scalar_argAckdone [26][1][3] = 1;
    end
    if (hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_ap_vld_r) begin
        scalar_argVld [26][1][3] = 1;
        scalar_argAckdone [26][1][3] = 0;
        ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][1][3] = hls_transform_tree_hls_dup1_tu_intra_pred_mode_c_r;
    scalar_adr    [26][1][3] = {ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 508) comb block-----//
    //s = 31; r = 0; a = 25;
    if (scalar_rdat_vld_r[31][0][25]) begin
        scalar_argdone [31][0][25] = 1;
    end
    scalar_adr    [31][0][25] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][25]) begin
        scalar_argVld [31][0][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [31][0][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 509) comb block-----//
    //s = 31; r = 1; a = 24;
    if (scalar_rdat_vld_r[31][1][24]) begin
        scalar_argdone [31][1][24] = 1;
    end
    scalar_adr    [31][1][24] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][24]) begin
        scalar_argVld [31][1][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [31][1][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 510) comb block-----//
    //s = 31; r = 0; a = 26;
    if (scalar_rdat_vld_r[31][0][26]) begin
        scalar_argdone [31][0][26] = 1;
    end
    scalar_adr    [31][0][26] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][26]) begin
        scalar_argVld [31][0][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [31][0][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 511) comb block-----//
    //s = 31; r = 1; a = 25;
    if (scalar_rdat_vld_r[31][1][25]) begin
        scalar_argdone [31][1][25] = 1;
    end
    scalar_adr    [31][1][25] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][25]) begin
        scalar_argVld [31][1][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [31][1][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 0; a = 22;
    if (scalar_rdat_vld_r[0][0][22]) begin
        scalar_argdone [0][0][22] = 1;
    end
    scalar_adr    [0][0][22] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][22]) begin
        scalar_argVld [0][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [0][0][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 1; a = 22;
    if (scalar_rdat_vld_r[0][1][22]) begin
        scalar_argdone [0][1][22] = 1;
    end
    scalar_adr    [0][1][22] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][22]) begin
        scalar_argVld [0][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [0][1][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 0; a = 23;
    if (scalar_rdat_vld_r[0][0][23]) begin
        scalar_argdone [0][0][23] = 1;
    end
    scalar_adr    [0][0][23] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][23]) begin
        scalar_argVld [0][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [0][0][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 1; a = 23;
    if (scalar_rdat_vld_r[0][1][23]) begin
        scalar_argdone [0][1][23] = 1;
    end
    scalar_adr    [0][1][23] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][23]) begin
        scalar_argVld [0][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [0][1][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 516) comb block-----//
    //s = 1; r = 1; a = 18;
    if (scalar_rdat_vld_r[1][1][18]) begin
        scalar_argdone [1][1][18] = 1;
    end
    scalar_adr    [1][1][18] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][18]) begin
        scalar_argVld [1][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [1][1][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 517) comb block-----//
    //s = 1; r = 0; a = 19;
    if (scalar_rdat_vld_r[1][0][19]) begin
        scalar_argdone [1][0][19] = 1;
    end
    scalar_adr    [1][0][19] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][19]) begin
        scalar_argVld [1][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [1][0][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 518) comb block-----//
    //s = 1; r = 1; a = 19;
    if (scalar_rdat_vld_r[1][1][19]) begin
        scalar_argdone [1][1][19] = 1;
    end
    scalar_adr    [1][1][19] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][19]) begin
        scalar_argVld [1][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [1][1][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 519) comb block-----//
    //s = 1; r = 0; a = 20;
    if (scalar_rdat_vld_r[1][0][20]) begin
        scalar_argdone [1][0][20] = 1;
    end
    scalar_adr    [1][0][20] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][20]) begin
        scalar_argVld [1][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld [1][0][20] = 1;
    end

    //------READ (scalar, global adr = 568) comb block-----//
    //s = 14; r = 0; a = 23;
    if (scalar_rdat_vld_r[14][0][23]) begin
        scalar_argdone [14][0][23] = 1;
    end
    scalar_adr[14][0][23] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][23]) begin
        scalar_argVld[14][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[14][0][23] = 1;
    end

    //------READ (scalar, global adr = 364) comb block-----//
    //s = 27; r = 0; a = 18;
    if (scalar_rdat_vld_r[27][0][18]) begin
        scalar_argdone [27][0][18] = 1;
    end
    scalar_adr[27][0][18] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][18]) begin
        scalar_argVld[27][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[27][0][18] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 0; a = 12;
    if (scalar_rdat_vld_r[30][0][12]) begin
        scalar_argdone [30][0][12] = 1;
    end
    scalar_adr[30][0][12] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][12]) begin
        scalar_argVld[30][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[30][0][12] = 1;
    end

    //------READ (scalar, global adr = 576) comb block-----//
    //s = 16; r = 1; a = 14;
    if (scalar_rdat_vld_r[16][1][14]) begin
        scalar_argdone [16][1][14] = 1;
    end
    scalar_adr[16][1][14] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][14]) begin
        scalar_argVld[16][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[16][1][14] = 1;
    end

    //------READ (scalar, global adr = 380) comb block-----//
    //s = 31; r = 0; a = 27;
    if (scalar_rdat_vld_r[31][0][27]) begin
        scalar_argdone [31][0][27] = 1;
    end
    scalar_adr[31][0][27] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][27]) begin
        scalar_argVld[31][0][27] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[31][0][27] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 24;
    if (scalar_rdat_vld_r[12][0][24]) begin
        scalar_argdone [12][0][24] = 1;
    end
    scalar_adr[12][0][24] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][24]) begin
        scalar_argVld[12][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[12][0][24] = 1;
    end

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 0; a = 23;
    if (scalar_rdat_vld_r[13][0][23]) begin
        scalar_argdone [13][0][23] = 1;
    end
    scalar_adr[13][0][23] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][23]) begin
        scalar_argVld[13][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[13][0][23] = 1;
    end

    //------READ (scalar, global adr = 324) comb block-----//
    //s = 17; r = 1; a = 16;
    if (scalar_rdat_vld_r[17][1][16]) begin
        scalar_argdone [17][1][16] = 1;
    end
    scalar_adr[17][1][16] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][16]) begin
        scalar_argVld[17][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[17][1][16] = 1;
    end

    //------READ (scalar, global adr = 328) comb block-----//
    //s = 18; r = 1; a = 12;
    if (scalar_rdat_vld_r[18][1][12]) begin
        scalar_argdone [18][1][12] = 1;
    end
    scalar_adr[18][1][12] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][12]) begin
        scalar_argVld[18][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[18][1][12] = 1;
    end

    //------READ (scalar, global adr = 20) comb block-----//
    //s = 5; r = 1; a = 20;
    if (scalar_rdat_vld_r[5][1][20]) begin
        scalar_argdone [5][1][20] = 1;
    end
    scalar_adr[5][1][20] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][20]) begin
        scalar_argVld[5][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[5][1][20] = 1;
    end

    //------WRITE (scalar, global adr = 20) comb block-----//
    //s = 5; r = 1; a = 7;
    if (scalar_argAck [5][1][7]) begin
        scalar_argVld [5][1][7] = 0;
        scalar_argAckdone [5][1][7] = 1;
    end
    if (hls_transform_tree_hls_dup1_cbf_luma_o_ap_vld_r) begin
        scalar_argVld [5][1][7] = 1;
        scalar_argAckdone [5][1][7] = 0;
        ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][7] = hls_transform_tree_hls_dup1_cbf_luma_o_r;
    scalar_adr    [5][1][7] = {ap_part_w[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1260) comb block-----//
    //s = 27; r = 1; a = 17;
    if (scalar_rdat_vld_r[27][1][17]) begin
        scalar_argdone [27][1][17] = 1;
    end
    scalar_adr[27][1][17] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][17]) begin
        scalar_argVld[27][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[27][1][17] = 1;
    end

    //------READ (scalar, global adr = 1264) comb block-----//
    //s = 28; r = 1; a = 16;
    if (scalar_rdat_vld_r[28][1][16]) begin
        scalar_argdone [28][1][16] = 1;
    end
    scalar_adr[28][1][16] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][16]) begin
        scalar_argVld[28][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[28][1][16] = 1;
    end

    //------READ (scalar, global adr = 1268) comb block-----//
    //s = 29; r = 1; a = 24;
    if (scalar_rdat_vld_r[29][1][24]) begin
        scalar_argdone [29][1][24] = 1;
    end
    scalar_adr[29][1][24] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][24]) begin
        scalar_argVld[29][1][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[29][1][24] = 1;
    end

    //------READ (scalar, global adr = 1240) comb block-----//
    //s = 22; r = 1; a = 18;
    if (scalar_rdat_vld_r[22][1][18]) begin
        scalar_argdone [22][1][18] = 1;
    end
    scalar_adr[22][1][18] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][18]) begin
        scalar_argVld[22][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[22][1][18] = 1;
    end

    //------READ (scalar, global adr = 388) comb block-----//
    //s = 1; r = 1; a = 20;
    if (scalar_rdat_vld_r[1][1][20]) begin
        scalar_argdone [1][1][20] = 1;
    end
    scalar_adr[1][1][20] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][20]) begin
        scalar_argVld[1][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[1][1][20] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 17;
    if (scalar_rdat_vld_r[26][1][17]) begin
        scalar_argdone [26][1][17] = 1;
    end
    scalar_adr[26][1][17] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][17]) begin
        scalar_argVld[26][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[26][1][17] = 1;
    end

    //------WRITE (array range, global adr = 286200, width=32, addr_width=32) -----//
    //s = 0; a = 71;
    array_argVld [0][71] = hls_transform_tree_hls_dup1_cbf_luma_base_EN_A & (hls_transform_tree_hls_dup1_cbf_luma_base_WEN_A != 0);
    array_adr    [0][71] = hls_transform_tree_hls_dup1_cbf_luma_base_Addr_A;
    array_wdat   [0][71] = hls_transform_tree_hls_dup1_cbf_luma_base_Din_A;

    //------READ (array range, global adr = 286200, width=32, addr_width=32) -----//
    //s = 0; a = 231;
    hls_transform_tree_hls_dup1_cbf_luma_base_Dout_A = array_rdat  [0][231];
    //found a write signal pair
    array_argVld [0][231] = hls_transform_tree_hls_dup1_cbf_luma_base_EN_A & (hls_transform_tree_hls_dup1_cbf_luma_base_WEN_A == 0);
    array_adr    [0][231] = hls_transform_tree_hls_dup1_cbf_luma_base_Addr_A;

    //------WRITE (array range, global adr = 286212, width=8, addr_width=32) -----//
    //s = 0; a = 72;
    array_argVld [0][72] = hls_transform_tree_hls_dup1_is_pcm_EN_A & (hls_transform_tree_hls_dup1_is_pcm_WEN_A != 0);
    array_adr    [0][72] = hls_transform_tree_hls_dup1_is_pcm_Addr_A;
    array_wdat   [0][72] = hls_transform_tree_hls_dup1_is_pcm_Din_A;

    //------READ (array range, global adr = 286212, width=8, addr_width=32) -----//
    //s = 0; a = 232;
    hls_transform_tree_hls_dup1_is_pcm_Dout_A = array_rdat  [0][232];
    //found a write signal pair
    array_argVld [0][232] = hls_transform_tree_hls_dup1_is_pcm_EN_A & (hls_transform_tree_hls_dup1_is_pcm_WEN_A == 0);
    array_adr    [0][232] = hls_transform_tree_hls_dup1_is_pcm_Addr_A;

    //------READ (scalar, global adr = 32) comb block-----//
    //s = 8; r = 0; a = 26;
    if (scalar_rdat_vld_r[8][0][26]) begin
        scalar_argdone [8][0][26] = 1;
    end
    scalar_adr[8][0][26] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][26]) begin
        scalar_argVld[8][0][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[8][0][26] = 1;
    end

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 0; a = 28;
    if (scalar_rdat_vld_r[6][0][28]) begin
        scalar_argdone [6][0][28] = 1;
    end
    scalar_adr[6][0][28] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][28]) begin
        scalar_argVld[6][0][28] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[6][0][28] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 0; a = 16;
    if (scalar_rdat_vld_r[19][0][16]) begin
        scalar_argdone [19][0][16] = 1;
    end
    scalar_adr[19][0][16] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][16]) begin
        scalar_argVld[19][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[19][0][16] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 0; a = 25;
    if (scalar_rdat_vld_r[29][0][25]) begin
        scalar_argdone [29][0][25] = 1;
    end
    scalar_adr[29][0][25] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][25]) begin
        scalar_argVld[29][0][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[29][0][25] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 0; a = 16;
    if (scalar_rdat_vld_r[3][0][16]) begin
        scalar_argdone [3][0][16] = 1;
    end
    scalar_adr[3][0][16] = {ap_part[hls_transform_tree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][16]) begin
        scalar_argVld[3][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup1]) begin
        scalar_argVld[3][0][16] = 1;
    end

    hls_transform_tree_hls_dup1_ready = array_argRdy[0][71]& array_argRdy[0][231]& array_argRdy[0][72]& array_argRdy[0][232] & ~ap_arb_reload_running_r[hls_transform_tree_hls_dup1];
    array_ap_ce[0][71] = ap_ce[hls_transform_tree_hls_dup1];
    array_ap_ce[0][231] = ap_ce[hls_transform_tree_hls_dup1];
    array_ap_ce[0][72] = ap_ce[hls_transform_tree_hls_dup1];
    array_ap_ce[0][232] = ap_ce[hls_transform_tree_hls_dup1];

    if (ap_arb_ret[hls_transform_tree_hls_dup1] & ~ap_arb_ret_r[hls_transform_tree_hls_dup1]) begin
        ap_arb_ret_running[hls_transform_tree_hls_dup1] = 1;
        hls_transform_tree_hls_dup1_ready = 0;
    end

    scalar_argAckdone_all[hls_transform_tree_hls_dup1] = scalar_argAckdone[10][0][7] &
                                                scalar_argAckdone[3][1][0] &
                                                scalar_argAckdone[4][1][3] &
                                                scalar_argAckdone[24][1][3] &
                                                scalar_argAckdone[25][1][3] &
                                                scalar_argAckdone[26][1][3] &
                                                scalar_argAckdone[5][1][7];
    if (ap_arb_ret_running[hls_transform_tree_hls_dup1] & scalar_argAckdone_all[hls_transform_tree_hls_dup1] &~ ap_arb_reload_running_r[hls_transform_tree_hls_dup1]) begin
        ap_arb_reload[hls_transform_tree_hls_dup1] = 1;
        ap_arb_reload_running[hls_transform_tree_hls_dup1] = 1;
    end

    if (ap_arb_start[hls_transform_tree_hls_dup1] &~ ap_arb_start_r[hls_transform_tree_hls_dup1]) begin
        ap_arb_start_running[hls_transform_tree_hls_dup1] = 1;
    end

    if (ap_arb_start_running[hls_transform_tree_hls_dup1] & ~scalar_writing_572& ~scalar_writing_508& ~scalar_writing_509& ~scalar_writing_510& ~scalar_writing_511& ~scalar_writing_512& ~scalar_writing_513& ~scalar_writing_514& ~scalar_writing_515& ~scalar_writing_516& ~scalar_writing_517& ~scalar_writing_518& ~scalar_writing_519& ~scalar_writing_568& ~scalar_writing_576& ~scalar_writing_560& ~scalar_writing_564& ~scalar_writing_20& ~scalar_writing_32) begin
        ap_arb_start_running[hls_transform_tree_hls_dup1] = 0;
        ap_arb_reload[hls_transform_tree_hls_dup1] = 1;
    end

    scalar_argdone_all[hls_transform_tree_hls_dup1] = scalar_argdone[3][1][14] &
                                                                scalar_argdone[14][1][22] &
                                                                scalar_argdone[15][0][21] &
                                                                scalar_argdone[31][0][25] &
                                                                scalar_argdone[31][1][24] &
                                                                scalar_argdone[31][0][26] &
                                                                scalar_argdone[31][1][25] &
                                                                scalar_argdone[0][0][22] &
                                                                scalar_argdone[0][1][22] &
                                                                scalar_argdone[0][0][23] &
                                                                scalar_argdone[0][1][23] &
                                                                scalar_argdone[1][1][18] &
                                                                scalar_argdone[1][0][19] &
                                                                scalar_argdone[1][1][19] &
                                                                scalar_argdone[1][0][20] &
                                                                scalar_argdone[14][0][23] &
                                                                scalar_argdone[27][0][18] &
                                                                scalar_argdone[30][0][12] &
                                                                scalar_argdone[16][1][14] &
                                                                scalar_argdone[31][0][27] &
                                                                scalar_argdone[12][0][24] &
                                                                scalar_argdone[13][0][23] &
                                                                scalar_argdone[17][1][16] &
                                                                scalar_argdone[18][1][12] &
                                                                scalar_argdone[5][1][20] &
                                                                scalar_argdone[27][1][17] &
                                                                scalar_argdone[28][1][16] &
                                                                scalar_argdone[29][1][24] &
                                                                scalar_argdone[22][1][18] &
                                                                scalar_argdone[1][1][20] &
                                                                scalar_argdone[26][1][17] &
                                                                scalar_argdone[8][0][26] &
                                                                scalar_argdone[6][0][28] &
                                                                scalar_argdone[19][0][16] &
                                                                scalar_argdone[29][0][25] &
                                                                scalar_argdone[3][0][16];

    if (scalar_argdone_all_r[hls_transform_tree_hls_dup1]) begin
        scalar_argdone[3][1][14] = 0;
        scalar_argdone[14][1][22] = 0;
        scalar_argdone[15][0][21] = 0;
        scalar_argdone[31][0][25] = 0;
        scalar_argdone[31][1][24] = 0;
        scalar_argdone[31][0][26] = 0;
        scalar_argdone[31][1][25] = 0;
        scalar_argdone[0][0][22] = 0;
        scalar_argdone[0][1][22] = 0;
        scalar_argdone[0][0][23] = 0;
        scalar_argdone[0][1][23] = 0;
        scalar_argdone[1][1][18] = 0;
        scalar_argdone[1][0][19] = 0;
        scalar_argdone[1][1][19] = 0;
        scalar_argdone[1][0][20] = 0;
        scalar_argdone[14][0][23] = 0;
        scalar_argdone[27][0][18] = 0;
        scalar_argdone[30][0][12] = 0;
        scalar_argdone[16][1][14] = 0;
        scalar_argdone[31][0][27] = 0;
        scalar_argdone[12][0][24] = 0;
        scalar_argdone[13][0][23] = 0;
        scalar_argdone[17][1][16] = 0;
        scalar_argdone[18][1][12] = 0;
        scalar_argdone[5][1][20] = 0;
        scalar_argdone[27][1][17] = 0;
        scalar_argdone[28][1][16] = 0;
        scalar_argdone[29][1][24] = 0;
        scalar_argdone[22][1][18] = 0;
        scalar_argdone[1][1][20] = 0;
        scalar_argdone[26][1][17] = 0;
        scalar_argdone[8][0][26] = 0;
        scalar_argdone[6][0][28] = 0;
        scalar_argdone[19][0][16] = 0;
        scalar_argdone[29][0][25] = 0;
        scalar_argdone[3][0][16] = 0;

        if (ap_arb_start_r[hls_transform_tree_hls_dup1] & ~ap_running_r[hls_transform_tree_hls_dup1]) begin
            ap_start[hls_transform_tree_hls_dup1] = 1;
            ap_running[hls_transform_tree_hls_dup1] = 1;
        end
        else if (ap_arb_ret_running_r[hls_transform_tree_hls_dup1]) begin
            ap_arb_ret_running[hls_transform_tree_hls_dup1] = 0;
            ap_arb_reload_running[hls_transform_tree_hls_dup1] = 0;
        end
    end

    if (ap_start_r[hls_transform_tree_hls_dup1] & ap_ready_r[hls_transform_tree_hls_dup1]) begin
        ap_start[hls_transform_tree_hls_dup1] = 0;
    end

    if (ap_done_r[hls_transform_tree_hls_dup1]) begin
        ap_running[hls_transform_tree_hls_dup1] = 0;
    end
`endif
    //============================================================
    //hls_transform_tree_hls_dup2       (f = 12)
    //============================================================
`ifdef enable_connect_hls_transform_tree_hls_dup2
    //------WRITE (scalar, global adr = 168) comb block-----//
    //s = 10; r = 1; a = 7;
    if (scalar_argAck [10][1][7]) begin
        scalar_argVld [10][1][7] = 0;
        scalar_argAckdone [10][1][7] = 1;
    end
    if (hls_transform_tree_hls_dup2_log2_trafo_size_ap_vld_r) begin
        scalar_argVld [10][1][7] = 1;
        scalar_argAckdone [10][1][7] = 0;
        ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][7] = hls_transform_tree_hls_dup2_log2_trafo_size_r;
    scalar_adr    [10][1][7] = {ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 12) comb block-----//
    //s = 3; r = 0; a = 1;
    if (scalar_argAck [3][0][1]) begin
        scalar_argVld [3][0][1] = 0;
        scalar_argAckdone [3][0][1] = 1;
    end
    if (hls_transform_tree_hls_dup2_split_transform_flag_ap_vld_r) begin
        scalar_argVld [3][0][1] = 1;
        scalar_argAckdone [3][0][1] = 0;
        ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][0][1] = hls_transform_tree_hls_dup2_split_transform_flag_r;
    scalar_adr    [3][0][1] = {ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 16) comb block-----//
    //s = 4; r = 0; a = 4;
    if (scalar_argAck [4][0][4]) begin
        scalar_argVld [4][0][4] = 0;
        scalar_argAckdone [4][0][4] = 1;
    end
    if (hls_transform_tree_hls_dup2_cbf_data_ap_vld_r) begin
        scalar_argVld [4][0][4] = 1;
        scalar_argAckdone [4][0][4] = 0;
        ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][0][4] = hls_transform_tree_hls_dup2_cbf_data_r;
    scalar_adr    [4][0][4] = {ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1164) comb block-----//
    //s = 3; r = 1; a = 15;
    if (scalar_rdat_vld_r[3][1][15]) begin
        scalar_argdone [3][1][15] = 1;
    end
    scalar_adr[3][1][15] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][15]) begin
        scalar_argVld[3][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[3][1][15] = 1;
    end

    //------READ (scalar, global adr = 440) comb block-----//
    //s = 14; r = 1; a = 23;
    if (scalar_rdat_vld_r[14][1][23]) begin
        scalar_argdone [14][1][23] = 1;
    end
    scalar_adr[14][1][23] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][23]) begin
        scalar_argVld[14][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[14][1][23] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 21;
    if (scalar_rdat_vld_r[15][1][21]) begin
        scalar_argdone [15][1][21] = 1;
    end
    scalar_adr[15][1][21] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][21]) begin
        scalar_argVld[15][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[15][1][21] = 1;
    end

    //------WRITE (scalar, global adr = 480) comb block-----//
    //s = 24; r = 0; a = 4;
    if (scalar_argAck [24][0][4]) begin
        scalar_argVld [24][0][4] = 0;
        scalar_argAckdone [24][0][4] = 1;
    end
    if (hls_transform_tree_hls_dup2_tu_chroma_mode_c_ap_vld_r) begin
        scalar_argVld [24][0][4] = 1;
        scalar_argAckdone [24][0][4] = 0;
        ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][0][4] = hls_transform_tree_hls_dup2_tu_chroma_mode_c_r;
    scalar_adr    [24][0][4] = {ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 484) comb block-----//
    //s = 25; r = 0; a = 4;
    if (scalar_argAck [25][0][4]) begin
        scalar_argVld [25][0][4] = 0;
        scalar_argAckdone [25][0][4] = 1;
    end
    if (hls_transform_tree_hls_dup2_tu_intra_pred_mode_ap_vld_r) begin
        scalar_argVld [25][0][4] = 1;
        scalar_argAckdone [25][0][4] = 0;
        ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][0][4] = hls_transform_tree_hls_dup2_tu_intra_pred_mode_r;
    scalar_adr    [25][0][4] = {ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 488) comb block-----//
    //s = 26; r = 0; a = 4;
    if (scalar_argAck [26][0][4]) begin
        scalar_argVld [26][0][4] = 0;
        scalar_argAckdone [26][0][4] = 1;
    end
    if (hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_ap_vld_r) begin
        scalar_argVld [26][0][4] = 1;
        scalar_argAckdone [26][0][4] = 0;
        ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][0][4] = hls_transform_tree_hls_dup2_tu_intra_pred_mode_c_r;
    scalar_adr    [26][0][4] = {ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 508) comb block-----//
    //s = 31; r = 1; a = 26;
    if (scalar_rdat_vld_r[31][1][26]) begin
        scalar_argdone [31][1][26] = 1;
    end
    scalar_adr    [31][1][26] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][26]) begin
        scalar_argVld [31][1][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [31][1][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 509) comb block-----//
    //s = 31; r = 0; a = 28;
    if (scalar_rdat_vld_r[31][0][28]) begin
        scalar_argdone [31][0][28] = 1;
    end
    scalar_adr    [31][0][28] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][28]) begin
        scalar_argVld [31][0][28] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [31][0][28] = 1;
    end

    //------READ (scalar, complete partition, global adr = 510) comb block-----//
    //s = 31; r = 1; a = 27;
    if (scalar_rdat_vld_r[31][1][27]) begin
        scalar_argdone [31][1][27] = 1;
    end
    scalar_adr    [31][1][27] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][27]) begin
        scalar_argVld [31][1][27] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [31][1][27] = 1;
    end

    //------READ (scalar, complete partition, global adr = 511) comb block-----//
    //s = 31; r = 0; a = 29;
    if (scalar_rdat_vld_r[31][0][29]) begin
        scalar_argdone [31][0][29] = 1;
    end
    scalar_adr    [31][0][29] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][29]) begin
        scalar_argVld [31][0][29] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [31][0][29] = 1;
    end

    //------READ (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 0; a = 24;
    if (scalar_rdat_vld_r[0][0][24]) begin
        scalar_argdone [0][0][24] = 1;
    end
    scalar_adr    [0][0][24] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][24]) begin
        scalar_argVld [0][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [0][0][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 1; a = 24;
    if (scalar_rdat_vld_r[0][1][24]) begin
        scalar_argdone [0][1][24] = 1;
    end
    scalar_adr    [0][1][24] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][24]) begin
        scalar_argVld [0][1][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [0][1][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 0; a = 25;
    if (scalar_rdat_vld_r[0][0][25]) begin
        scalar_argdone [0][0][25] = 1;
    end
    scalar_adr    [0][0][25] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][25]) begin
        scalar_argVld [0][0][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [0][0][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 1; a = 25;
    if (scalar_rdat_vld_r[0][1][25]) begin
        scalar_argdone [0][1][25] = 1;
    end
    scalar_adr    [0][1][25] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][25]) begin
        scalar_argVld [0][1][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [0][1][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 516) comb block-----//
    //s = 1; r = 0; a = 21;
    if (scalar_rdat_vld_r[1][0][21]) begin
        scalar_argdone [1][0][21] = 1;
    end
    scalar_adr    [1][0][21] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][21]) begin
        scalar_argVld [1][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [1][0][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 517) comb block-----//
    //s = 1; r = 1; a = 21;
    if (scalar_rdat_vld_r[1][1][21]) begin
        scalar_argdone [1][1][21] = 1;
    end
    scalar_adr    [1][1][21] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][21]) begin
        scalar_argVld [1][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [1][1][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 518) comb block-----//
    //s = 1; r = 0; a = 22;
    if (scalar_rdat_vld_r[1][0][22]) begin
        scalar_argdone [1][0][22] = 1;
    end
    scalar_adr    [1][0][22] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][22]) begin
        scalar_argVld [1][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [1][0][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 519) comb block-----//
    //s = 1; r = 1; a = 22;
    if (scalar_rdat_vld_r[1][1][22]) begin
        scalar_argdone [1][1][22] = 1;
    end
    scalar_adr    [1][1][22] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][22]) begin
        scalar_argVld [1][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld [1][1][22] = 1;
    end

    //------READ (scalar, global adr = 568) comb block-----//
    //s = 14; r = 0; a = 24;
    if (scalar_rdat_vld_r[14][0][24]) begin
        scalar_argdone [14][0][24] = 1;
    end
    scalar_adr[14][0][24] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][24]) begin
        scalar_argVld[14][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[14][0][24] = 1;
    end

    //------READ (scalar, global adr = 364) comb block-----//
    //s = 27; r = 0; a = 19;
    if (scalar_rdat_vld_r[27][0][19]) begin
        scalar_argdone [27][0][19] = 1;
    end
    scalar_adr[27][0][19] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][19]) begin
        scalar_argVld[27][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[27][0][19] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 1; a = 12;
    if (scalar_rdat_vld_r[30][1][12]) begin
        scalar_argdone [30][1][12] = 1;
    end
    scalar_adr[30][1][12] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][12]) begin
        scalar_argVld[30][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[30][1][12] = 1;
    end

    //------READ (scalar, global adr = 576) comb block-----//
    //s = 16; r = 0; a = 16;
    if (scalar_rdat_vld_r[16][0][16]) begin
        scalar_argdone [16][0][16] = 1;
    end
    scalar_adr[16][0][16] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][16]) begin
        scalar_argVld[16][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[16][0][16] = 1;
    end

    //------READ (scalar, global adr = 380) comb block-----//
    //s = 31; r = 1; a = 28;
    if (scalar_rdat_vld_r[31][1][28]) begin
        scalar_argdone [31][1][28] = 1;
    end
    scalar_adr[31][1][28] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][28]) begin
        scalar_argVld[31][1][28] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[31][1][28] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 1; a = 23;
    if (scalar_rdat_vld_r[12][1][23]) begin
        scalar_argdone [12][1][23] = 1;
    end
    scalar_adr[12][1][23] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][23]) begin
        scalar_argVld[12][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[12][1][23] = 1;
    end

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 1; a = 23;
    if (scalar_rdat_vld_r[13][1][23]) begin
        scalar_argdone [13][1][23] = 1;
    end
    scalar_adr[13][1][23] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][23]) begin
        scalar_argVld[13][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[13][1][23] = 1;
    end

    //------READ (scalar, global adr = 324) comb block-----//
    //s = 17; r = 0; a = 17;
    if (scalar_rdat_vld_r[17][0][17]) begin
        scalar_argdone [17][0][17] = 1;
    end
    scalar_adr[17][0][17] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][17]) begin
        scalar_argVld[17][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[17][0][17] = 1;
    end

    //------READ (scalar, global adr = 328) comb block-----//
    //s = 18; r = 0; a = 14;
    if (scalar_rdat_vld_r[18][0][14]) begin
        scalar_argdone [18][0][14] = 1;
    end
    scalar_adr[18][0][14] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][14]) begin
        scalar_argVld[18][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[18][0][14] = 1;
    end

    //------READ (scalar, global adr = 20) comb block-----//
    //s = 5; r = 0; a = 22;
    if (scalar_rdat_vld_r[5][0][22]) begin
        scalar_argdone [5][0][22] = 1;
    end
    scalar_adr[5][0][22] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][22]) begin
        scalar_argVld[5][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[5][0][22] = 1;
    end

    //------WRITE (scalar, global adr = 20) comb block-----//
    //s = 5; r = 0; a = 8;
    if (scalar_argAck [5][0][8]) begin
        scalar_argVld [5][0][8] = 0;
        scalar_argAckdone [5][0][8] = 1;
    end
    if (hls_transform_tree_hls_dup2_cbf_luma_o_ap_vld_r) begin
        scalar_argVld [5][0][8] = 1;
        scalar_argAckdone [5][0][8] = 0;
        ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][8] = hls_transform_tree_hls_dup2_cbf_luma_o_r;
    scalar_adr    [5][0][8] = {ap_part_w[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1260) comb block-----//
    //s = 27; r = 1; a = 18;
    if (scalar_rdat_vld_r[27][1][18]) begin
        scalar_argdone [27][1][18] = 1;
    end
    scalar_adr[27][1][18] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][18]) begin
        scalar_argVld[27][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[27][1][18] = 1;
    end

    //------READ (scalar, global adr = 1264) comb block-----//
    //s = 28; r = 0; a = 17;
    if (scalar_rdat_vld_r[28][0][17]) begin
        scalar_argdone [28][0][17] = 1;
    end
    scalar_adr[28][0][17] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][17]) begin
        scalar_argVld[28][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[28][0][17] = 1;
    end

    //------READ (scalar, global adr = 1268) comb block-----//
    //s = 29; r = 1; a = 25;
    if (scalar_rdat_vld_r[29][1][25]) begin
        scalar_argdone [29][1][25] = 1;
    end
    scalar_adr[29][1][25] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][25]) begin
        scalar_argVld[29][1][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[29][1][25] = 1;
    end

    //------READ (scalar, global adr = 1240) comb block-----//
    //s = 22; r = 0; a = 20;
    if (scalar_rdat_vld_r[22][0][20]) begin
        scalar_argdone [22][0][20] = 1;
    end
    scalar_adr[22][0][20] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][20]) begin
        scalar_argVld[22][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[22][0][20] = 1;
    end

    //------READ (scalar, global adr = 388) comb block-----//
    //s = 1; r = 0; a = 23;
    if (scalar_rdat_vld_r[1][0][23]) begin
        scalar_argdone [1][0][23] = 1;
    end
    scalar_adr[1][0][23] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][23]) begin
        scalar_argVld[1][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[1][0][23] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 19;
    if (scalar_rdat_vld_r[26][0][19]) begin
        scalar_argdone [26][0][19] = 1;
    end
    scalar_adr[26][0][19] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][19]) begin
        scalar_argVld[26][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[26][0][19] = 1;
    end

    //------WRITE (array range, global adr = 286200, width=32, addr_width=32) -----//
    //s = 0; a = 73;
    array_argVld [0][73] = hls_transform_tree_hls_dup2_cbf_luma_base_EN_A & (hls_transform_tree_hls_dup2_cbf_luma_base_WEN_A != 0);
    array_adr    [0][73] = hls_transform_tree_hls_dup2_cbf_luma_base_Addr_A;
    array_wdat   [0][73] = hls_transform_tree_hls_dup2_cbf_luma_base_Din_A;

    //------READ (array range, global adr = 286200, width=32, addr_width=32) -----//
    //s = 0; a = 233;
    hls_transform_tree_hls_dup2_cbf_luma_base_Dout_A = array_rdat  [0][233];
    //found a write signal pair
    array_argVld [0][233] = hls_transform_tree_hls_dup2_cbf_luma_base_EN_A & (hls_transform_tree_hls_dup2_cbf_luma_base_WEN_A == 0);
    array_adr    [0][233] = hls_transform_tree_hls_dup2_cbf_luma_base_Addr_A;

    //------WRITE (array range, global adr = 286212, width=8, addr_width=32) -----//
    //s = 0; a = 74;
    array_argVld [0][74] = hls_transform_tree_hls_dup2_is_pcm_EN_A & (hls_transform_tree_hls_dup2_is_pcm_WEN_A != 0);
    array_adr    [0][74] = hls_transform_tree_hls_dup2_is_pcm_Addr_A;
    array_wdat   [0][74] = hls_transform_tree_hls_dup2_is_pcm_Din_A;

    //------READ (array range, global adr = 286212, width=8, addr_width=32) -----//
    //s = 0; a = 234;
    hls_transform_tree_hls_dup2_is_pcm_Dout_A = array_rdat  [0][234];
    //found a write signal pair
    array_argVld [0][234] = hls_transform_tree_hls_dup2_is_pcm_EN_A & (hls_transform_tree_hls_dup2_is_pcm_WEN_A == 0);
    array_adr    [0][234] = hls_transform_tree_hls_dup2_is_pcm_Addr_A;

    //------READ (scalar, global adr = 32) comb block-----//
    //s = 8; r = 1; a = 26;
    if (scalar_rdat_vld_r[8][1][26]) begin
        scalar_argdone [8][1][26] = 1;
    end
    scalar_adr[8][1][26] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][26]) begin
        scalar_argVld[8][1][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[8][1][26] = 1;
    end

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 1; a = 27;
    if (scalar_rdat_vld_r[6][1][27]) begin
        scalar_argdone [6][1][27] = 1;
    end
    scalar_adr[6][1][27] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][27]) begin
        scalar_argVld[6][1][27] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[6][1][27] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 1; a = 16;
    if (scalar_rdat_vld_r[19][1][16]) begin
        scalar_argdone [19][1][16] = 1;
    end
    scalar_adr[19][1][16] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][16]) begin
        scalar_argVld[19][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[19][1][16] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 0; a = 26;
    if (scalar_rdat_vld_r[29][0][26]) begin
        scalar_argdone [29][0][26] = 1;
    end
    scalar_adr[29][0][26] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][26]) begin
        scalar_argVld[29][0][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[29][0][26] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 0; a = 17;
    if (scalar_rdat_vld_r[3][0][17]) begin
        scalar_argdone [3][0][17] = 1;
    end
    scalar_adr[3][0][17] = {ap_part[hls_transform_tree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][17]) begin
        scalar_argVld[3][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup2]) begin
        scalar_argVld[3][0][17] = 1;
    end

    hls_transform_tree_hls_dup2_ready = array_argRdy[0][73]& array_argRdy[0][233]& array_argRdy[0][74]& array_argRdy[0][234] & ~ap_arb_reload_running_r[hls_transform_tree_hls_dup2];
    array_ap_ce[0][73] = ap_ce[hls_transform_tree_hls_dup2];
    array_ap_ce[0][233] = ap_ce[hls_transform_tree_hls_dup2];
    array_ap_ce[0][74] = ap_ce[hls_transform_tree_hls_dup2];
    array_ap_ce[0][234] = ap_ce[hls_transform_tree_hls_dup2];

    if (ap_arb_ret[hls_transform_tree_hls_dup2] & ~ap_arb_ret_r[hls_transform_tree_hls_dup2]) begin
        ap_arb_ret_running[hls_transform_tree_hls_dup2] = 1;
        hls_transform_tree_hls_dup2_ready = 0;
    end

    scalar_argAckdone_all[hls_transform_tree_hls_dup2] = scalar_argAckdone[10][1][7] &
                                                scalar_argAckdone[3][0][1] &
                                                scalar_argAckdone[4][0][4] &
                                                scalar_argAckdone[24][0][4] &
                                                scalar_argAckdone[25][0][4] &
                                                scalar_argAckdone[26][0][4] &
                                                scalar_argAckdone[5][0][8];
    if (ap_arb_ret_running[hls_transform_tree_hls_dup2] & scalar_argAckdone_all[hls_transform_tree_hls_dup2] &~ ap_arb_reload_running_r[hls_transform_tree_hls_dup2]) begin
        ap_arb_reload[hls_transform_tree_hls_dup2] = 1;
        ap_arb_reload_running[hls_transform_tree_hls_dup2] = 1;
    end

    if (ap_arb_start[hls_transform_tree_hls_dup2] &~ ap_arb_start_r[hls_transform_tree_hls_dup2]) begin
        ap_arb_start_running[hls_transform_tree_hls_dup2] = 1;
    end

    if (ap_arb_start_running[hls_transform_tree_hls_dup2] & ~scalar_writing_572& ~scalar_writing_508& ~scalar_writing_509& ~scalar_writing_510& ~scalar_writing_511& ~scalar_writing_512& ~scalar_writing_513& ~scalar_writing_514& ~scalar_writing_515& ~scalar_writing_516& ~scalar_writing_517& ~scalar_writing_518& ~scalar_writing_519& ~scalar_writing_568& ~scalar_writing_576& ~scalar_writing_560& ~scalar_writing_564& ~scalar_writing_20& ~scalar_writing_32) begin
        ap_arb_start_running[hls_transform_tree_hls_dup2] = 0;
        ap_arb_reload[hls_transform_tree_hls_dup2] = 1;
    end

    scalar_argdone_all[hls_transform_tree_hls_dup2] = scalar_argdone[3][1][15] &
                                                                scalar_argdone[14][1][23] &
                                                                scalar_argdone[15][1][21] &
                                                                scalar_argdone[31][1][26] &
                                                                scalar_argdone[31][0][28] &
                                                                scalar_argdone[31][1][27] &
                                                                scalar_argdone[31][0][29] &
                                                                scalar_argdone[0][0][24] &
                                                                scalar_argdone[0][1][24] &
                                                                scalar_argdone[0][0][25] &
                                                                scalar_argdone[0][1][25] &
                                                                scalar_argdone[1][0][21] &
                                                                scalar_argdone[1][1][21] &
                                                                scalar_argdone[1][0][22] &
                                                                scalar_argdone[1][1][22] &
                                                                scalar_argdone[14][0][24] &
                                                                scalar_argdone[27][0][19] &
                                                                scalar_argdone[30][1][12] &
                                                                scalar_argdone[16][0][16] &
                                                                scalar_argdone[31][1][28] &
                                                                scalar_argdone[12][1][23] &
                                                                scalar_argdone[13][1][23] &
                                                                scalar_argdone[17][0][17] &
                                                                scalar_argdone[18][0][14] &
                                                                scalar_argdone[5][0][22] &
                                                                scalar_argdone[27][1][18] &
                                                                scalar_argdone[28][0][17] &
                                                                scalar_argdone[29][1][25] &
                                                                scalar_argdone[22][0][20] &
                                                                scalar_argdone[1][0][23] &
                                                                scalar_argdone[26][0][19] &
                                                                scalar_argdone[8][1][26] &
                                                                scalar_argdone[6][1][27] &
                                                                scalar_argdone[19][1][16] &
                                                                scalar_argdone[29][0][26] &
                                                                scalar_argdone[3][0][17];

    if (scalar_argdone_all_r[hls_transform_tree_hls_dup2]) begin
        scalar_argdone[3][1][15] = 0;
        scalar_argdone[14][1][23] = 0;
        scalar_argdone[15][1][21] = 0;
        scalar_argdone[31][1][26] = 0;
        scalar_argdone[31][0][28] = 0;
        scalar_argdone[31][1][27] = 0;
        scalar_argdone[31][0][29] = 0;
        scalar_argdone[0][0][24] = 0;
        scalar_argdone[0][1][24] = 0;
        scalar_argdone[0][0][25] = 0;
        scalar_argdone[0][1][25] = 0;
        scalar_argdone[1][0][21] = 0;
        scalar_argdone[1][1][21] = 0;
        scalar_argdone[1][0][22] = 0;
        scalar_argdone[1][1][22] = 0;
        scalar_argdone[14][0][24] = 0;
        scalar_argdone[27][0][19] = 0;
        scalar_argdone[30][1][12] = 0;
        scalar_argdone[16][0][16] = 0;
        scalar_argdone[31][1][28] = 0;
        scalar_argdone[12][1][23] = 0;
        scalar_argdone[13][1][23] = 0;
        scalar_argdone[17][0][17] = 0;
        scalar_argdone[18][0][14] = 0;
        scalar_argdone[5][0][22] = 0;
        scalar_argdone[27][1][18] = 0;
        scalar_argdone[28][0][17] = 0;
        scalar_argdone[29][1][25] = 0;
        scalar_argdone[22][0][20] = 0;
        scalar_argdone[1][0][23] = 0;
        scalar_argdone[26][0][19] = 0;
        scalar_argdone[8][1][26] = 0;
        scalar_argdone[6][1][27] = 0;
        scalar_argdone[19][1][16] = 0;
        scalar_argdone[29][0][26] = 0;
        scalar_argdone[3][0][17] = 0;

        if (ap_arb_start_r[hls_transform_tree_hls_dup2] & ~ap_running_r[hls_transform_tree_hls_dup2]) begin
            ap_start[hls_transform_tree_hls_dup2] = 1;
            ap_running[hls_transform_tree_hls_dup2] = 1;
        end
        else if (ap_arb_ret_running_r[hls_transform_tree_hls_dup2]) begin
            ap_arb_ret_running[hls_transform_tree_hls_dup2] = 0;
            ap_arb_reload_running[hls_transform_tree_hls_dup2] = 0;
        end
    end

    if (ap_start_r[hls_transform_tree_hls_dup2] & ap_ready_r[hls_transform_tree_hls_dup2]) begin
        ap_start[hls_transform_tree_hls_dup2] = 0;
    end

    if (ap_done_r[hls_transform_tree_hls_dup2]) begin
        ap_running[hls_transform_tree_hls_dup2] = 0;
    end
`endif
    //============================================================
    //hls_transform_tree_hls_dup3       (f = 13)
    //============================================================
`ifdef enable_connect_hls_transform_tree_hls_dup3
    //------WRITE (scalar, global adr = 168) comb block-----//
    //s = 10; r = 0; a = 8;
    if (scalar_argAck [10][0][8]) begin
        scalar_argVld [10][0][8] = 0;
        scalar_argAckdone [10][0][8] = 1;
    end
    if (hls_transform_tree_hls_dup3_log2_trafo_size_ap_vld_r) begin
        scalar_argVld [10][0][8] = 1;
        scalar_argAckdone [10][0][8] = 0;
        ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][8] = hls_transform_tree_hls_dup3_log2_trafo_size_r;
    scalar_adr    [10][0][8] = {ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 12) comb block-----//
    //s = 3; r = 1; a = 1;
    if (scalar_argAck [3][1][1]) begin
        scalar_argVld [3][1][1] = 0;
        scalar_argAckdone [3][1][1] = 1;
    end
    if (hls_transform_tree_hls_dup3_split_transform_flag_ap_vld_r) begin
        scalar_argVld [3][1][1] = 1;
        scalar_argAckdone [3][1][1] = 0;
        ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][1][1] = hls_transform_tree_hls_dup3_split_transform_flag_r;
    scalar_adr    [3][1][1] = {ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 16) comb block-----//
    //s = 4; r = 1; a = 4;
    if (scalar_argAck [4][1][4]) begin
        scalar_argVld [4][1][4] = 0;
        scalar_argAckdone [4][1][4] = 1;
    end
    if (hls_transform_tree_hls_dup3_cbf_data_ap_vld_r) begin
        scalar_argVld [4][1][4] = 1;
        scalar_argAckdone [4][1][4] = 0;
        ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][1][4] = hls_transform_tree_hls_dup3_cbf_data_r;
    scalar_adr    [4][1][4] = {ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1164) comb block-----//
    //s = 3; r = 1; a = 16;
    if (scalar_rdat_vld_r[3][1][16]) begin
        scalar_argdone [3][1][16] = 1;
    end
    scalar_adr[3][1][16] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][16]) begin
        scalar_argVld[3][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[3][1][16] = 1;
    end

    //------READ (scalar, global adr = 440) comb block-----//
    //s = 14; r = 1; a = 24;
    if (scalar_rdat_vld_r[14][1][24]) begin
        scalar_argdone [14][1][24] = 1;
    end
    scalar_adr[14][1][24] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][24]) begin
        scalar_argVld[14][1][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[14][1][24] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 0; a = 22;
    if (scalar_rdat_vld_r[15][0][22]) begin
        scalar_argdone [15][0][22] = 1;
    end
    scalar_adr[15][0][22] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][22]) begin
        scalar_argVld[15][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[15][0][22] = 1;
    end

    //------WRITE (scalar, global adr = 480) comb block-----//
    //s = 24; r = 1; a = 4;
    if (scalar_argAck [24][1][4]) begin
        scalar_argVld [24][1][4] = 0;
        scalar_argAckdone [24][1][4] = 1;
    end
    if (hls_transform_tree_hls_dup3_tu_chroma_mode_c_ap_vld_r) begin
        scalar_argVld [24][1][4] = 1;
        scalar_argAckdone [24][1][4] = 0;
        ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][1][4] = hls_transform_tree_hls_dup3_tu_chroma_mode_c_r;
    scalar_adr    [24][1][4] = {ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 484) comb block-----//
    //s = 25; r = 1; a = 4;
    if (scalar_argAck [25][1][4]) begin
        scalar_argVld [25][1][4] = 0;
        scalar_argAckdone [25][1][4] = 1;
    end
    if (hls_transform_tree_hls_dup3_tu_intra_pred_mode_ap_vld_r) begin
        scalar_argVld [25][1][4] = 1;
        scalar_argAckdone [25][1][4] = 0;
        ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][1][4] = hls_transform_tree_hls_dup3_tu_intra_pred_mode_r;
    scalar_adr    [25][1][4] = {ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 488) comb block-----//
    //s = 26; r = 1; a = 4;
    if (scalar_argAck [26][1][4]) begin
        scalar_argVld [26][1][4] = 0;
        scalar_argAckdone [26][1][4] = 1;
    end
    if (hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_ap_vld_r) begin
        scalar_argVld [26][1][4] = 1;
        scalar_argAckdone [26][1][4] = 0;
        ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][1][4] = hls_transform_tree_hls_dup3_tu_intra_pred_mode_c_r;
    scalar_adr    [26][1][4] = {ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 508) comb block-----//
    //s = 31; r = 0; a = 30;
    if (scalar_rdat_vld_r[31][0][30]) begin
        scalar_argdone [31][0][30] = 1;
    end
    scalar_adr    [31][0][30] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][30]) begin
        scalar_argVld [31][0][30] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [31][0][30] = 1;
    end

    //------READ (scalar, complete partition, global adr = 509) comb block-----//
    //s = 31; r = 1; a = 29;
    if (scalar_rdat_vld_r[31][1][29]) begin
        scalar_argdone [31][1][29] = 1;
    end
    scalar_adr    [31][1][29] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][29]) begin
        scalar_argVld [31][1][29] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [31][1][29] = 1;
    end

    //------READ (scalar, complete partition, global adr = 510) comb block-----//
    //s = 31; r = 0; a = 31;
    if (scalar_rdat_vld_r[31][0][31]) begin
        scalar_argdone [31][0][31] = 1;
    end
    scalar_adr    [31][0][31] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][31]) begin
        scalar_argVld [31][0][31] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [31][0][31] = 1;
    end

    //------READ (scalar, complete partition, global adr = 511) comb block-----//
    //s = 31; r = 1; a = 30;
    if (scalar_rdat_vld_r[31][1][30]) begin
        scalar_argdone [31][1][30] = 1;
    end
    scalar_adr    [31][1][30] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][30]) begin
        scalar_argVld [31][1][30] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [31][1][30] = 1;
    end

    //------READ (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 0; a = 26;
    if (scalar_rdat_vld_r[0][0][26]) begin
        scalar_argdone [0][0][26] = 1;
    end
    scalar_adr    [0][0][26] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][26]) begin
        scalar_argVld [0][0][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [0][0][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 1; a = 26;
    if (scalar_rdat_vld_r[0][1][26]) begin
        scalar_argdone [0][1][26] = 1;
    end
    scalar_adr    [0][1][26] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][26]) begin
        scalar_argVld [0][1][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [0][1][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 0; a = 27;
    if (scalar_rdat_vld_r[0][0][27]) begin
        scalar_argdone [0][0][27] = 1;
    end
    scalar_adr    [0][0][27] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][27]) begin
        scalar_argVld [0][0][27] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [0][0][27] = 1;
    end

    //------READ (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 1; a = 27;
    if (scalar_rdat_vld_r[0][1][27]) begin
        scalar_argdone [0][1][27] = 1;
    end
    scalar_adr    [0][1][27] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][27]) begin
        scalar_argVld [0][1][27] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [0][1][27] = 1;
    end

    //------READ (scalar, complete partition, global adr = 516) comb block-----//
    //s = 1; r = 1; a = 23;
    if (scalar_rdat_vld_r[1][1][23]) begin
        scalar_argdone [1][1][23] = 1;
    end
    scalar_adr    [1][1][23] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][23]) begin
        scalar_argVld [1][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [1][1][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 517) comb block-----//
    //s = 1; r = 0; a = 24;
    if (scalar_rdat_vld_r[1][0][24]) begin
        scalar_argdone [1][0][24] = 1;
    end
    scalar_adr    [1][0][24] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][24]) begin
        scalar_argVld [1][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [1][0][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 518) comb block-----//
    //s = 1; r = 1; a = 24;
    if (scalar_rdat_vld_r[1][1][24]) begin
        scalar_argdone [1][1][24] = 1;
    end
    scalar_adr    [1][1][24] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][24]) begin
        scalar_argVld [1][1][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [1][1][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 519) comb block-----//
    //s = 1; r = 0; a = 25;
    if (scalar_rdat_vld_r[1][0][25]) begin
        scalar_argdone [1][0][25] = 1;
    end
    scalar_adr    [1][0][25] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][25]) begin
        scalar_argVld [1][0][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld [1][0][25] = 1;
    end

    //------READ (scalar, global adr = 568) comb block-----//
    //s = 14; r = 0; a = 25;
    if (scalar_rdat_vld_r[14][0][25]) begin
        scalar_argdone [14][0][25] = 1;
    end
    scalar_adr[14][0][25] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][25]) begin
        scalar_argVld[14][0][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[14][0][25] = 1;
    end

    //------READ (scalar, global adr = 364) comb block-----//
    //s = 27; r = 0; a = 20;
    if (scalar_rdat_vld_r[27][0][20]) begin
        scalar_argdone [27][0][20] = 1;
    end
    scalar_adr[27][0][20] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][20]) begin
        scalar_argVld[27][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[27][0][20] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 0; a = 13;
    if (scalar_rdat_vld_r[30][0][13]) begin
        scalar_argdone [30][0][13] = 1;
    end
    scalar_adr[30][0][13] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][13]) begin
        scalar_argVld[30][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[30][0][13] = 1;
    end

    //------READ (scalar, global adr = 576) comb block-----//
    //s = 16; r = 1; a = 15;
    if (scalar_rdat_vld_r[16][1][15]) begin
        scalar_argdone [16][1][15] = 1;
    end
    scalar_adr[16][1][15] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][15]) begin
        scalar_argVld[16][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[16][1][15] = 1;
    end

    //------READ (scalar, global adr = 380) comb block-----//
    //s = 31; r = 0; a = 32;
    if (scalar_rdat_vld_r[31][0][32]) begin
        scalar_argdone [31][0][32] = 1;
    end
    scalar_adr[31][0][32] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][32]) begin
        scalar_argVld[31][0][32] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[31][0][32] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 25;
    if (scalar_rdat_vld_r[12][0][25]) begin
        scalar_argdone [12][0][25] = 1;
    end
    scalar_adr[12][0][25] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][25]) begin
        scalar_argVld[12][0][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[12][0][25] = 1;
    end

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 0; a = 24;
    if (scalar_rdat_vld_r[13][0][24]) begin
        scalar_argdone [13][0][24] = 1;
    end
    scalar_adr[13][0][24] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][24]) begin
        scalar_argVld[13][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[13][0][24] = 1;
    end

    //------READ (scalar, global adr = 324) comb block-----//
    //s = 17; r = 1; a = 17;
    if (scalar_rdat_vld_r[17][1][17]) begin
        scalar_argdone [17][1][17] = 1;
    end
    scalar_adr[17][1][17] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][17]) begin
        scalar_argVld[17][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[17][1][17] = 1;
    end

    //------READ (scalar, global adr = 328) comb block-----//
    //s = 18; r = 1; a = 13;
    if (scalar_rdat_vld_r[18][1][13]) begin
        scalar_argdone [18][1][13] = 1;
    end
    scalar_adr[18][1][13] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][13]) begin
        scalar_argVld[18][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[18][1][13] = 1;
    end

    //------READ (scalar, global adr = 20) comb block-----//
    //s = 5; r = 1; a = 21;
    if (scalar_rdat_vld_r[5][1][21]) begin
        scalar_argdone [5][1][21] = 1;
    end
    scalar_adr[5][1][21] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][21]) begin
        scalar_argVld[5][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[5][1][21] = 1;
    end

    //------WRITE (scalar, global adr = 20) comb block-----//
    //s = 5; r = 1; a = 8;
    if (scalar_argAck [5][1][8]) begin
        scalar_argVld [5][1][8] = 0;
        scalar_argAckdone [5][1][8] = 1;
    end
    if (hls_transform_tree_hls_dup3_cbf_luma_o_ap_vld_r) begin
        scalar_argVld [5][1][8] = 1;
        scalar_argAckdone [5][1][8] = 0;
        ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][8] = hls_transform_tree_hls_dup3_cbf_luma_o_r;
    scalar_adr    [5][1][8] = {ap_part_w[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1260) comb block-----//
    //s = 27; r = 1; a = 19;
    if (scalar_rdat_vld_r[27][1][19]) begin
        scalar_argdone [27][1][19] = 1;
    end
    scalar_adr[27][1][19] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][19]) begin
        scalar_argVld[27][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[27][1][19] = 1;
    end

    //------READ (scalar, global adr = 1264) comb block-----//
    //s = 28; r = 1; a = 17;
    if (scalar_rdat_vld_r[28][1][17]) begin
        scalar_argdone [28][1][17] = 1;
    end
    scalar_adr[28][1][17] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][17]) begin
        scalar_argVld[28][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[28][1][17] = 1;
    end

    //------READ (scalar, global adr = 1268) comb block-----//
    //s = 29; r = 1; a = 26;
    if (scalar_rdat_vld_r[29][1][26]) begin
        scalar_argdone [29][1][26] = 1;
    end
    scalar_adr[29][1][26] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][26]) begin
        scalar_argVld[29][1][26] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[29][1][26] = 1;
    end

    //------READ (scalar, global adr = 1240) comb block-----//
    //s = 22; r = 1; a = 19;
    if (scalar_rdat_vld_r[22][1][19]) begin
        scalar_argdone [22][1][19] = 1;
    end
    scalar_adr[22][1][19] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][19]) begin
        scalar_argVld[22][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[22][1][19] = 1;
    end

    //------READ (scalar, global adr = 388) comb block-----//
    //s = 1; r = 1; a = 25;
    if (scalar_rdat_vld_r[1][1][25]) begin
        scalar_argdone [1][1][25] = 1;
    end
    scalar_adr[1][1][25] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][25]) begin
        scalar_argVld[1][1][25] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[1][1][25] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 18;
    if (scalar_rdat_vld_r[26][1][18]) begin
        scalar_argdone [26][1][18] = 1;
    end
    scalar_adr[26][1][18] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][18]) begin
        scalar_argVld[26][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[26][1][18] = 1;
    end

    //------WRITE (array range, global adr = 286200, width=32, addr_width=32) -----//
    //s = 0; a = 75;
    array_argVld [0][75] = hls_transform_tree_hls_dup3_cbf_luma_base_EN_A & (hls_transform_tree_hls_dup3_cbf_luma_base_WEN_A != 0);
    array_adr    [0][75] = hls_transform_tree_hls_dup3_cbf_luma_base_Addr_A;
    array_wdat   [0][75] = hls_transform_tree_hls_dup3_cbf_luma_base_Din_A;

    //------READ (array range, global adr = 286200, width=32, addr_width=32) -----//
    //s = 0; a = 235;
    hls_transform_tree_hls_dup3_cbf_luma_base_Dout_A = array_rdat  [0][235];
    //found a write signal pair
    array_argVld [0][235] = hls_transform_tree_hls_dup3_cbf_luma_base_EN_A & (hls_transform_tree_hls_dup3_cbf_luma_base_WEN_A == 0);
    array_adr    [0][235] = hls_transform_tree_hls_dup3_cbf_luma_base_Addr_A;

    //------WRITE (array range, global adr = 286212, width=8, addr_width=32) -----//
    //s = 0; a = 76;
    array_argVld [0][76] = hls_transform_tree_hls_dup3_is_pcm_EN_A & (hls_transform_tree_hls_dup3_is_pcm_WEN_A != 0);
    array_adr    [0][76] = hls_transform_tree_hls_dup3_is_pcm_Addr_A;
    array_wdat   [0][76] = hls_transform_tree_hls_dup3_is_pcm_Din_A;

    //------READ (array range, global adr = 286212, width=8, addr_width=32) -----//
    //s = 0; a = 236;
    hls_transform_tree_hls_dup3_is_pcm_Dout_A = array_rdat  [0][236];
    //found a write signal pair
    array_argVld [0][236] = hls_transform_tree_hls_dup3_is_pcm_EN_A & (hls_transform_tree_hls_dup3_is_pcm_WEN_A == 0);
    array_adr    [0][236] = hls_transform_tree_hls_dup3_is_pcm_Addr_A;

    //------READ (scalar, global adr = 32) comb block-----//
    //s = 8; r = 0; a = 27;
    if (scalar_rdat_vld_r[8][0][27]) begin
        scalar_argdone [8][0][27] = 1;
    end
    scalar_adr[8][0][27] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][27]) begin
        scalar_argVld[8][0][27] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[8][0][27] = 1;
    end

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 0; a = 29;
    if (scalar_rdat_vld_r[6][0][29]) begin
        scalar_argdone [6][0][29] = 1;
    end
    scalar_adr[6][0][29] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][29]) begin
        scalar_argVld[6][0][29] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[6][0][29] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 0; a = 17;
    if (scalar_rdat_vld_r[19][0][17]) begin
        scalar_argdone [19][0][17] = 1;
    end
    scalar_adr[19][0][17] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][17]) begin
        scalar_argVld[19][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[19][0][17] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 0; a = 27;
    if (scalar_rdat_vld_r[29][0][27]) begin
        scalar_argdone [29][0][27] = 1;
    end
    scalar_adr[29][0][27] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][27]) begin
        scalar_argVld[29][0][27] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[29][0][27] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 0; a = 18;
    if (scalar_rdat_vld_r[3][0][18]) begin
        scalar_argdone [3][0][18] = 1;
    end
    scalar_adr[3][0][18] = {ap_part[hls_transform_tree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][18]) begin
        scalar_argVld[3][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_transform_tree_hls_dup3]) begin
        scalar_argVld[3][0][18] = 1;
    end

    hls_transform_tree_hls_dup3_ready = array_argRdy[0][75]& array_argRdy[0][235]& array_argRdy[0][76]& array_argRdy[0][236] & ~ap_arb_reload_running_r[hls_transform_tree_hls_dup3];
    array_ap_ce[0][75] = ap_ce[hls_transform_tree_hls_dup3];
    array_ap_ce[0][235] = ap_ce[hls_transform_tree_hls_dup3];
    array_ap_ce[0][76] = ap_ce[hls_transform_tree_hls_dup3];
    array_ap_ce[0][236] = ap_ce[hls_transform_tree_hls_dup3];

    if (ap_arb_ret[hls_transform_tree_hls_dup3] & ~ap_arb_ret_r[hls_transform_tree_hls_dup3]) begin
        ap_arb_ret_running[hls_transform_tree_hls_dup3] = 1;
        hls_transform_tree_hls_dup3_ready = 0;
    end

    scalar_argAckdone_all[hls_transform_tree_hls_dup3] = scalar_argAckdone[10][0][8] &
                                                scalar_argAckdone[3][1][1] &
                                                scalar_argAckdone[4][1][4] &
                                                scalar_argAckdone[24][1][4] &
                                                scalar_argAckdone[25][1][4] &
                                                scalar_argAckdone[26][1][4] &
                                                scalar_argAckdone[5][1][8];
    if (ap_arb_ret_running[hls_transform_tree_hls_dup3] & scalar_argAckdone_all[hls_transform_tree_hls_dup3] &~ ap_arb_reload_running_r[hls_transform_tree_hls_dup3]) begin
        ap_arb_reload[hls_transform_tree_hls_dup3] = 1;
        ap_arb_reload_running[hls_transform_tree_hls_dup3] = 1;
    end

    if (ap_arb_start[hls_transform_tree_hls_dup3] &~ ap_arb_start_r[hls_transform_tree_hls_dup3]) begin
        ap_arb_start_running[hls_transform_tree_hls_dup3] = 1;
    end

    if (ap_arb_start_running[hls_transform_tree_hls_dup3] & ~scalar_writing_572& ~scalar_writing_508& ~scalar_writing_509& ~scalar_writing_510& ~scalar_writing_511& ~scalar_writing_512& ~scalar_writing_513& ~scalar_writing_514& ~scalar_writing_515& ~scalar_writing_516& ~scalar_writing_517& ~scalar_writing_518& ~scalar_writing_519& ~scalar_writing_568& ~scalar_writing_576& ~scalar_writing_560& ~scalar_writing_564& ~scalar_writing_20& ~scalar_writing_32) begin
        ap_arb_start_running[hls_transform_tree_hls_dup3] = 0;
        ap_arb_reload[hls_transform_tree_hls_dup3] = 1;
    end

    scalar_argdone_all[hls_transform_tree_hls_dup3] = scalar_argdone[3][1][16] &
                                                                scalar_argdone[14][1][24] &
                                                                scalar_argdone[15][0][22] &
                                                                scalar_argdone[31][0][30] &
                                                                scalar_argdone[31][1][29] &
                                                                scalar_argdone[31][0][31] &
                                                                scalar_argdone[31][1][30] &
                                                                scalar_argdone[0][0][26] &
                                                                scalar_argdone[0][1][26] &
                                                                scalar_argdone[0][0][27] &
                                                                scalar_argdone[0][1][27] &
                                                                scalar_argdone[1][1][23] &
                                                                scalar_argdone[1][0][24] &
                                                                scalar_argdone[1][1][24] &
                                                                scalar_argdone[1][0][25] &
                                                                scalar_argdone[14][0][25] &
                                                                scalar_argdone[27][0][20] &
                                                                scalar_argdone[30][0][13] &
                                                                scalar_argdone[16][1][15] &
                                                                scalar_argdone[31][0][32] &
                                                                scalar_argdone[12][0][25] &
                                                                scalar_argdone[13][0][24] &
                                                                scalar_argdone[17][1][17] &
                                                                scalar_argdone[18][1][13] &
                                                                scalar_argdone[5][1][21] &
                                                                scalar_argdone[27][1][19] &
                                                                scalar_argdone[28][1][17] &
                                                                scalar_argdone[29][1][26] &
                                                                scalar_argdone[22][1][19] &
                                                                scalar_argdone[1][1][25] &
                                                                scalar_argdone[26][1][18] &
                                                                scalar_argdone[8][0][27] &
                                                                scalar_argdone[6][0][29] &
                                                                scalar_argdone[19][0][17] &
                                                                scalar_argdone[29][0][27] &
                                                                scalar_argdone[3][0][18];

    if (scalar_argdone_all_r[hls_transform_tree_hls_dup3]) begin
        scalar_argdone[3][1][16] = 0;
        scalar_argdone[14][1][24] = 0;
        scalar_argdone[15][0][22] = 0;
        scalar_argdone[31][0][30] = 0;
        scalar_argdone[31][1][29] = 0;
        scalar_argdone[31][0][31] = 0;
        scalar_argdone[31][1][30] = 0;
        scalar_argdone[0][0][26] = 0;
        scalar_argdone[0][1][26] = 0;
        scalar_argdone[0][0][27] = 0;
        scalar_argdone[0][1][27] = 0;
        scalar_argdone[1][1][23] = 0;
        scalar_argdone[1][0][24] = 0;
        scalar_argdone[1][1][24] = 0;
        scalar_argdone[1][0][25] = 0;
        scalar_argdone[14][0][25] = 0;
        scalar_argdone[27][0][20] = 0;
        scalar_argdone[30][0][13] = 0;
        scalar_argdone[16][1][15] = 0;
        scalar_argdone[31][0][32] = 0;
        scalar_argdone[12][0][25] = 0;
        scalar_argdone[13][0][24] = 0;
        scalar_argdone[17][1][17] = 0;
        scalar_argdone[18][1][13] = 0;
        scalar_argdone[5][1][21] = 0;
        scalar_argdone[27][1][19] = 0;
        scalar_argdone[28][1][17] = 0;
        scalar_argdone[29][1][26] = 0;
        scalar_argdone[22][1][19] = 0;
        scalar_argdone[1][1][25] = 0;
        scalar_argdone[26][1][18] = 0;
        scalar_argdone[8][0][27] = 0;
        scalar_argdone[6][0][29] = 0;
        scalar_argdone[19][0][17] = 0;
        scalar_argdone[29][0][27] = 0;
        scalar_argdone[3][0][18] = 0;

        if (ap_arb_start_r[hls_transform_tree_hls_dup3] & ~ap_running_r[hls_transform_tree_hls_dup3]) begin
            ap_start[hls_transform_tree_hls_dup3] = 1;
            ap_running[hls_transform_tree_hls_dup3] = 1;
        end
        else if (ap_arb_ret_running_r[hls_transform_tree_hls_dup3]) begin
            ap_arb_ret_running[hls_transform_tree_hls_dup3] = 0;
            ap_arb_reload_running[hls_transform_tree_hls_dup3] = 0;
        end
    end

    if (ap_start_r[hls_transform_tree_hls_dup3] & ap_ready_r[hls_transform_tree_hls_dup3]) begin
        ap_start[hls_transform_tree_hls_dup3] = 0;
    end

    if (ap_done_r[hls_transform_tree_hls_dup3]) begin
        ap_running[hls_transform_tree_hls_dup3] = 0;
    end
`endif
    //============================================================
    //hls_coding_quadtree_hls       (f = 14)
    //============================================================
`ifdef enable_connect_hls_coding_quadtree_hls
    //------READ (scalar, global adr = 300) comb block-----//
    //s = 11; r = 0; a = 18;
    if (scalar_rdat_vld_r[11][0][18]) begin
        scalar_argdone [11][0][18] = 1;
    end
    scalar_adr[11][0][18] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][18]) begin
        scalar_argVld[11][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[11][0][18] = 1;
    end

    //------WRITE (scalar, global adr = 300) comb block-----//
    //s = 11; r = 1; a = 3;
    if (scalar_argAck [11][1][3]) begin
        scalar_argVld [11][1][3] = 0;
        scalar_argAckdone [11][1][3] = 1;
    end
    if (hls_coding_quadtree_hls_x1_o_ap_vld_r) begin
        scalar_argVld [11][1][3] = 1;
        scalar_argAckdone [11][1][3] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][1][3] = hls_coding_quadtree_hls_x1_o_r;
    scalar_adr    [11][1][3] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 304) comb block-----//
    //s = 12; r = 1; a = 15;
    if (scalar_rdat_vld_r[12][1][15]) begin
        scalar_argdone [12][1][15] = 1;
    end
    scalar_adr[12][1][15] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][15]) begin
        scalar_argVld[12][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[12][1][15] = 1;
    end

    //------WRITE (scalar, global adr = 304) comb block-----//
    //s = 12; r = 0; a = 3;
    if (scalar_argAck [12][0][3]) begin
        scalar_argVld [12][0][3] = 0;
        scalar_argAckdone [12][0][3] = 1;
    end
    if (hls_coding_quadtree_hls_y1_o_ap_vld_r) begin
        scalar_argVld [12][0][3] = 1;
        scalar_argAckdone [12][0][3] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][3] = hls_coding_quadtree_hls_y1_o_r;
    scalar_adr    [12][0][3] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 312) comb block-----//
    //s = 14; r = 1; a = 16;
    if (scalar_rdat_vld_r[14][1][16]) begin
        scalar_argdone [14][1][16] = 1;
    end
    scalar_adr[14][1][16] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][16]) begin
        scalar_argVld[14][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[14][1][16] = 1;
    end

    //------WRITE (scalar, global adr = 312) comb block-----//
    //s = 14; r = 1; a = 3;
    if (scalar_argAck [14][1][3]) begin
        scalar_argVld [14][1][3] = 0;
        scalar_argAckdone [14][1][3] = 1;
    end
    if (hls_coding_quadtree_hls_log2_cb_size_minus_one_o_ap_vld_r) begin
        scalar_argVld [14][1][3] = 1;
        scalar_argAckdone [14][1][3] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][3] = hls_coding_quadtree_hls_log2_cb_size_minus_one_o_r;
    scalar_adr    [14][1][3] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 316) comb block-----//
    //s = 15; r = 0; a = 15;
    if (scalar_rdat_vld_r[15][0][15]) begin
        scalar_argdone [15][0][15] = 1;
    end
    scalar_adr[15][0][15] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][15]) begin
        scalar_argVld[15][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[15][0][15] = 1;
    end

    //------WRITE (scalar, global adr = 316) comb block-----//
    //s = 15; r = 1; a = 3;
    if (scalar_argAck [15][1][3]) begin
        scalar_argVld [15][1][3] = 0;
        scalar_argAckdone [15][1][3] = 1;
    end
    if (hls_coding_quadtree_hls_cb_depth_plus_one_o_ap_vld_r) begin
        scalar_argVld [15][1][3] = 1;
        scalar_argAckdone [15][1][3] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][3] = hls_coding_quadtree_hls_cb_depth_plus_one_o_r;
    scalar_adr    [15][1][3] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 0; a = 20;
    if (scalar_rdat_vld_r[6][0][20]) begin
        scalar_argdone [6][0][20] = 1;
    end
    scalar_adr[6][0][20] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][20]) begin
        scalar_argVld[6][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[6][0][20] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 0; a = 12;
    if (scalar_rdat_vld_r[19][0][12]) begin
        scalar_argdone [19][0][12] = 1;
    end
    scalar_adr[19][0][12] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][12]) begin
        scalar_argVld[19][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[19][0][12] = 1;
    end

    //------READ (scalar, global adr = 292) comb block-----//
    //s = 9; r = 1; a = 22;
    if (scalar_rdat_vld_r[9][1][22]) begin
        scalar_argdone [9][1][22] = 1;
    end
    scalar_adr[9][1][22] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][22]) begin
        scalar_argVld[9][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[9][1][22] = 1;
    end

    //------WRITE (scalar, global adr = 292) comb block-----//
    //s = 9; r = 0; a = 4;
    if (scalar_argAck [9][0][4]) begin
        scalar_argVld [9][0][4] = 0;
        scalar_argAckdone [9][0][4] = 1;
    end
    if (hls_coding_quadtree_hls_split_cu_flag_o_ap_vld_r) begin
        scalar_argVld [9][0][4] = 1;
        scalar_argAckdone [9][0][4] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][4] = hls_coding_quadtree_hls_split_cu_flag_o_r;
    scalar_adr    [9][0][4] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 296) comb block-----//
    //s = 10; r = 0; a = 17;
    if (scalar_rdat_vld_r[10][0][17]) begin
        scalar_argdone [10][0][17] = 1;
    end
    scalar_adr[10][0][17] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][17]) begin
        scalar_argVld[10][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[10][0][17] = 1;
    end

    //------WRITE (scalar, global adr = 296) comb block-----//
    //s = 10; r = 0; a = 2;
    if (scalar_argAck [10][0][2]) begin
        scalar_argVld [10][0][2] = 0;
        scalar_argAckdone [10][0][2] = 1;
    end
    if (hls_coding_quadtree_hls_more_data_o_ap_vld_r) begin
        scalar_argVld [10][0][2] = 1;
        scalar_argAckdone [10][0][2] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][2] = hls_coding_quadtree_hls_more_data_o_r;
    scalar_adr    [10][0][2] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1256) comb block-----//
    //s = 26; r = 0; a = 11;
    if (scalar_rdat_vld_r[26][0][11]) begin
        scalar_argdone [26][0][11] = 1;
    end
    scalar_adr[26][0][11] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][11]) begin
        scalar_argVld[26][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[26][0][11] = 1;
    end

    //------READ (scalar, global adr = 1240) comb block-----//
    //s = 22; r = 0; a = 14;
    if (scalar_rdat_vld_r[22][0][14]) begin
        scalar_argdone [22][0][14] = 1;
    end
    scalar_adr[22][0][14] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][14]) begin
        scalar_argVld[22][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[22][0][14] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 10;
    if (scalar_rdat_vld_r[26][1][10]) begin
        scalar_argdone [26][1][10] = 1;
    end
    scalar_adr[26][1][10] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][10]) begin
        scalar_argVld[26][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[26][1][10] = 1;
    end

    //------WRITE (scalar, global adr = 540) comb block-----//
    //s = 7; r = 0; a = 2;
    if (scalar_argAck [7][0][2]) begin
        scalar_argVld [7][0][2] = 0;
        scalar_argAckdone [7][0][2] = 1;
    end
    if (hls_coding_quadtree_hls_qPy_pred_ap_vld_r) begin
        scalar_argVld [7][0][2] = 1;
        scalar_argAckdone [7][0][2] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][2] = hls_coding_quadtree_hls_qPy_pred_r;
    scalar_adr    [7][0][2] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 19;
    if (scalar_rdat_vld_r[6][1][19]) begin
        scalar_argdone [6][1][19] = 1;
    end
    scalar_adr[6][1][19] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][19]) begin
        scalar_argVld[6][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[6][1][19] = 1;
    end

    //------READ (scalar, global adr = 40) comb block-----//
    //s = 10; r = 1; a = 17;
    if (scalar_rdat_vld_r[10][1][17]) begin
        scalar_argdone [10][1][17] = 1;
    end
    scalar_adr[10][1][17] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][17]) begin
        scalar_argVld[10][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[10][1][17] = 1;
    end

    //------WRITE (scalar, global adr = 40) comb block-----//
    //s = 10; r = 1; a = 2;
    if (scalar_argAck [10][1][2]) begin
        scalar_argVld [10][1][2] = 0;
        scalar_argAckdone [10][1][2] = 1;
    end
    if (hls_coding_quadtree_hls_qp_block_mask_o_ap_vld_r) begin
        scalar_argVld [10][1][2] = 1;
        scalar_argAckdone [10][1][2] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][2] = hls_coding_quadtree_hls_qp_block_mask_o_r;
    scalar_adr    [10][1][2] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 308) comb block-----//
    //s = 13; r = 1; a = 13;
    if (scalar_rdat_vld_r[13][1][13]) begin
        scalar_argdone [13][1][13] = 1;
    end
    scalar_adr[13][1][13] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][13]) begin
        scalar_argVld[13][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[13][1][13] = 1;
    end

    //------WRITE (scalar, global adr = 308) comb block-----//
    //s = 13; r = 0; a = 2;
    if (scalar_argAck [13][0][2]) begin
        scalar_argVld [13][0][2] = 0;
        scalar_argAckdone [13][0][2] = 1;
    end
    if (hls_coding_quadtree_hls_cb_size_split_o_ap_vld_r) begin
        scalar_argVld [13][0][2] = 1;
        scalar_argAckdone [13][0][2] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][2] = hls_coding_quadtree_hls_cb_size_split_o_r;
    scalar_adr    [13][0][2] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 0; a = 9;
    if (scalar_rdat_vld_r[28][0][9]) begin
        scalar_argdone [28][0][9] = 1;
    end
    scalar_adr[28][0][9] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][9]) begin
        scalar_argVld[28][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[28][0][9] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 0; a = 11;
    if (scalar_rdat_vld_r[2][0][11]) begin
        scalar_argdone [2][0][11] = 1;
    end
    scalar_adr[2][0][11] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][11]) begin
        scalar_argVld[2][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[2][0][11] = 1;
    end

    //------WRITE (scalar, global adr = 476) comb block-----//
    //s = 23; r = 0; a = 2;
    if (scalar_argAck [23][0][2]) begin
        scalar_argVld [23][0][2] = 0;
        scalar_argAckdone [23][0][2] = 1;
    end
    if (hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_ap_vld_r) begin
        scalar_argVld [23][0][2] = 1;
        scalar_argAckdone [23][0][2] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][2] = hls_coding_quadtree_hls_tu_is_cu_qp_delta_coded_r;
    scalar_adr    [23][0][2] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 468) comb block-----//
    //s = 21; r = 1; a = 2;
    if (scalar_argAck [21][1][2]) begin
        scalar_argVld [21][1][2] = 0;
        scalar_argAckdone [21][1][2] = 1;
    end
    if (hls_coding_quadtree_hls_tu_cu_qp_delta_ap_vld_r) begin
        scalar_argVld [21][1][2] = 1;
        scalar_argAckdone [21][1][2] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][2] = hls_coding_quadtree_hls_tu_cu_qp_delta_r;
    scalar_adr    [21][1][2] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 472) comb block-----//
    //s = 22; r = 1; a = 2;
    if (scalar_argAck [22][1][2]) begin
        scalar_argVld [22][1][2] = 0;
        scalar_argAckdone [22][1][2] = 1;
    end
    if (hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_ap_vld_r) begin
        scalar_argVld [22][1][2] = 1;
        scalar_argAckdone [22][1][2] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][2] = hls_coding_quadtree_hls_tu_is_cu_chroma_qp_offset_coded_r;
    scalar_adr    [22][1][2] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 464) comb block-----//
    //s = 20; r = 1; a = 3;
    if (scalar_argAck [20][1][3]) begin
        scalar_argVld [20][1][3] = 0;
        scalar_argAckdone [20][1][3] = 1;
    end
    if (hls_coding_quadtree_hls_depth_ap_vld_r) begin
        scalar_argVld [20][1][3] = 1;
        scalar_argAckdone [20][1][3] = 0;
        ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][3] = hls_coding_quadtree_hls_depth_r;
    scalar_adr    [20][1][3] = {ap_part_w[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 0; a = 10;
    if (scalar_rdat_vld_r[24][0][10]) begin
        scalar_argdone [24][0][10] = 1;
    end
    scalar_adr[24][0][10] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][10]) begin
        scalar_argVld[24][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[24][0][10] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 0; a = 12;
    if (scalar_rdat_vld_r[23][0][12]) begin
        scalar_argdone [23][0][12] = 1;
    end
    scalar_adr[23][0][12] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][12]) begin
        scalar_argVld[23][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[23][0][12] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 1; a = 18;
    if (scalar_rdat_vld_r[11][1][18]) begin
        scalar_argdone [11][1][18] = 1;
    end
    scalar_adr[11][1][18] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][18]) begin
        scalar_argVld[11][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[11][1][18] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 0; a = 14;
    if (scalar_rdat_vld_r[13][0][14]) begin
        scalar_argdone [13][0][14] = 1;
    end
    scalar_adr[13][0][14] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][14]) begin
        scalar_argVld[13][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[13][0][14] = 1;
    end

    //------READ (scalar, global adr = 448) comb block-----//
    //s = 16; r = 0; a = 10;
    if (scalar_rdat_vld_r[16][0][10]) begin
        scalar_argdone [16][0][10] = 1;
    end
    scalar_adr[16][0][10] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][10]) begin
        scalar_argVld[16][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[16][0][10] = 1;
    end

    //------READ (scalar, global adr = 432) comb block-----//
    //s = 12; r = 0; a = 17;
    if (scalar_rdat_vld_r[12][0][17]) begin
        scalar_argdone [12][0][17] = 1;
    end
    scalar_adr[12][0][17] = {ap_part[hls_coding_quadtree_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][17]) begin
        scalar_argVld[12][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls]) begin
        scalar_argVld[12][0][17] = 1;
    end

    //------WRITE (array range, global adr = 286208, width=8, addr_width=32) -----//
    //s = 0; a = 44;
    array_argVld [0][44] = hls_coding_quadtree_hls_tab_ct_depth_EN_A & (hls_coding_quadtree_hls_tab_ct_depth_WEN_A != 0);
    array_adr    [0][44] = hls_coding_quadtree_hls_tab_ct_depth_Addr_A;
    array_wdat   [0][44] = hls_coding_quadtree_hls_tab_ct_depth_Din_A;

    //------READ (array range, global adr = 286208, width=8, addr_width=32) -----//
    //s = 0; a = 204;
    hls_coding_quadtree_hls_tab_ct_depth_Dout_A = array_rdat  [0][204];
    //found a write signal pair
    array_argVld [0][204] = hls_coding_quadtree_hls_tab_ct_depth_EN_A & (hls_coding_quadtree_hls_tab_ct_depth_WEN_A == 0);
    array_adr    [0][204] = hls_coding_quadtree_hls_tab_ct_depth_Addr_A;

    hls_coding_quadtree_hls_ready = array_argRdy[0][44]& array_argRdy[0][204] & ~ap_arb_reload_running_r[hls_coding_quadtree_hls];
    array_ap_ce[0][44] = ap_ce[hls_coding_quadtree_hls];
    array_ap_ce[0][204] = ap_ce[hls_coding_quadtree_hls];

    if (ap_arb_ret[hls_coding_quadtree_hls] & ~ap_arb_ret_r[hls_coding_quadtree_hls]) begin
        ap_arb_ret_running[hls_coding_quadtree_hls] = 1;
        hls_coding_quadtree_hls_ready = 0;
    end

    scalar_argAckdone_all[hls_coding_quadtree_hls] = scalar_argAckdone[11][1][3] &
                                                scalar_argAckdone[12][0][3] &
                                                scalar_argAckdone[14][1][3] &
                                                scalar_argAckdone[15][1][3] &
                                                scalar_argAckdone[9][0][4] &
                                                scalar_argAckdone[10][0][2] &
                                                scalar_argAckdone[7][0][2] &
                                                scalar_argAckdone[10][1][2] &
                                                scalar_argAckdone[13][0][2] &
                                                scalar_argAckdone[23][0][2] &
                                                scalar_argAckdone[21][1][2] &
                                                scalar_argAckdone[22][1][2] &
                                                scalar_argAckdone[20][1][3];
    if (ap_arb_ret_running[hls_coding_quadtree_hls] & scalar_argAckdone_all[hls_coding_quadtree_hls] &~ ap_arb_reload_running_r[hls_coding_quadtree_hls]) begin
        ap_arb_reload[hls_coding_quadtree_hls] = 1;
        ap_arb_reload_running[hls_coding_quadtree_hls] = 1;
    end

    if (ap_arb_start[hls_coding_quadtree_hls] &~ ap_arb_start_r[hls_coding_quadtree_hls]) begin
        ap_arb_start_running[hls_coding_quadtree_hls] = 1;
    end

    if (ap_arb_start_running[hls_coding_quadtree_hls] & ~scalar_writing_300& ~scalar_writing_304& ~scalar_writing_312& ~scalar_writing_316& ~scalar_writing_292& ~scalar_writing_296& ~scalar_writing_536& ~scalar_writing_40& ~scalar_writing_308& ~scalar_writing_608& ~scalar_writing_604) begin
        ap_arb_start_running[hls_coding_quadtree_hls] = 0;
        ap_arb_reload[hls_coding_quadtree_hls] = 1;
    end

    scalar_argdone_all[hls_coding_quadtree_hls] = scalar_argdone[11][0][18] &
                                                                scalar_argdone[12][1][15] &
                                                                scalar_argdone[14][1][16] &
                                                                scalar_argdone[15][0][15] &
                                                                scalar_argdone[6][0][20] &
                                                                scalar_argdone[19][0][12] &
                                                                scalar_argdone[9][1][22] &
                                                                scalar_argdone[10][0][17] &
                                                                scalar_argdone[26][0][11] &
                                                                scalar_argdone[22][0][14] &
                                                                scalar_argdone[26][1][10] &
                                                                scalar_argdone[6][1][19] &
                                                                scalar_argdone[10][1][17] &
                                                                scalar_argdone[13][1][13] &
                                                                scalar_argdone[28][0][9] &
                                                                scalar_argdone[2][0][11] &
                                                                scalar_argdone[24][0][10] &
                                                                scalar_argdone[23][0][12] &
                                                                scalar_argdone[11][1][18] &
                                                                scalar_argdone[13][0][14] &
                                                                scalar_argdone[16][0][10] &
                                                                scalar_argdone[12][0][17];

    if (scalar_argdone_all_r[hls_coding_quadtree_hls]) begin
        scalar_argdone[11][0][18] = 0;
        scalar_argdone[12][1][15] = 0;
        scalar_argdone[14][1][16] = 0;
        scalar_argdone[15][0][15] = 0;
        scalar_argdone[6][0][20] = 0;
        scalar_argdone[19][0][12] = 0;
        scalar_argdone[9][1][22] = 0;
        scalar_argdone[10][0][17] = 0;
        scalar_argdone[26][0][11] = 0;
        scalar_argdone[22][0][14] = 0;
        scalar_argdone[26][1][10] = 0;
        scalar_argdone[6][1][19] = 0;
        scalar_argdone[10][1][17] = 0;
        scalar_argdone[13][1][13] = 0;
        scalar_argdone[28][0][9] = 0;
        scalar_argdone[2][0][11] = 0;
        scalar_argdone[24][0][10] = 0;
        scalar_argdone[23][0][12] = 0;
        scalar_argdone[11][1][18] = 0;
        scalar_argdone[13][0][14] = 0;
        scalar_argdone[16][0][10] = 0;
        scalar_argdone[12][0][17] = 0;

        if (ap_arb_start_r[hls_coding_quadtree_hls] & ~ap_running_r[hls_coding_quadtree_hls]) begin
            ap_start[hls_coding_quadtree_hls] = 1;
            ap_running[hls_coding_quadtree_hls] = 1;
        end
        else if (ap_arb_ret_running_r[hls_coding_quadtree_hls]) begin
            ap_arb_ret_running[hls_coding_quadtree_hls] = 0;
            ap_arb_reload_running[hls_coding_quadtree_hls] = 0;
        end
    end

    if (ap_start_r[hls_coding_quadtree_hls] & ap_ready_r[hls_coding_quadtree_hls]) begin
        ap_start[hls_coding_quadtree_hls] = 0;
    end

    if (ap_done_r[hls_coding_quadtree_hls]) begin
        ap_running[hls_coding_quadtree_hls] = 0;
    end
`endif
    //============================================================
    //hls_coding_quadtree_hls_dup1       (f = 15)
    //============================================================
`ifdef enable_connect_hls_coding_quadtree_hls_dup1
    //------READ (scalar, global adr = 300) comb block-----//
    //s = 11; r = 0; a = 19;
    if (scalar_rdat_vld_r[11][0][19]) begin
        scalar_argdone [11][0][19] = 1;
    end
    scalar_adr[11][0][19] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][19]) begin
        scalar_argVld[11][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[11][0][19] = 1;
    end

    //------WRITE (scalar, global adr = 300) comb block-----//
    //s = 11; r = 0; a = 4;
    if (scalar_argAck [11][0][4]) begin
        scalar_argVld [11][0][4] = 0;
        scalar_argAckdone [11][0][4] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_x1_o_ap_vld_r) begin
        scalar_argVld [11][0][4] = 1;
        scalar_argAckdone [11][0][4] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][0][4] = hls_coding_quadtree_hls_dup1_x1_o_r;
    scalar_adr    [11][0][4] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 304) comb block-----//
    //s = 12; r = 1; a = 16;
    if (scalar_rdat_vld_r[12][1][16]) begin
        scalar_argdone [12][1][16] = 1;
    end
    scalar_adr[12][1][16] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][16]) begin
        scalar_argVld[12][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[12][1][16] = 1;
    end

    //------WRITE (scalar, global adr = 304) comb block-----//
    //s = 12; r = 1; a = 3;
    if (scalar_argAck [12][1][3]) begin
        scalar_argVld [12][1][3] = 0;
        scalar_argAckdone [12][1][3] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_y1_o_ap_vld_r) begin
        scalar_argVld [12][1][3] = 1;
        scalar_argAckdone [12][1][3] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][3] = hls_coding_quadtree_hls_dup1_y1_o_r;
    scalar_adr    [12][1][3] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 312) comb block-----//
    //s = 14; r = 0; a = 17;
    if (scalar_rdat_vld_r[14][0][17]) begin
        scalar_argdone [14][0][17] = 1;
    end
    scalar_adr[14][0][17] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][17]) begin
        scalar_argVld[14][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[14][0][17] = 1;
    end

    //------WRITE (scalar, global adr = 312) comb block-----//
    //s = 14; r = 0; a = 4;
    if (scalar_argAck [14][0][4]) begin
        scalar_argVld [14][0][4] = 0;
        scalar_argAckdone [14][0][4] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_ap_vld_r) begin
        scalar_argVld [14][0][4] = 1;
        scalar_argAckdone [14][0][4] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][4] = hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_r;
    scalar_adr    [14][0][4] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 316) comb block-----//
    //s = 15; r = 1; a = 15;
    if (scalar_rdat_vld_r[15][1][15]) begin
        scalar_argdone [15][1][15] = 1;
    end
    scalar_adr[15][1][15] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][15]) begin
        scalar_argVld[15][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[15][1][15] = 1;
    end

    //------WRITE (scalar, global adr = 316) comb block-----//
    //s = 15; r = 0; a = 4;
    if (scalar_argAck [15][0][4]) begin
        scalar_argVld [15][0][4] = 0;
        scalar_argAckdone [15][0][4] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_ap_vld_r) begin
        scalar_argVld [15][0][4] = 1;
        scalar_argAckdone [15][0][4] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][4] = hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_r;
    scalar_adr    [15][0][4] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 0; a = 21;
    if (scalar_rdat_vld_r[6][0][21]) begin
        scalar_argdone [6][0][21] = 1;
    end
    scalar_adr[6][0][21] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][21]) begin
        scalar_argVld[6][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[6][0][21] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 1; a = 12;
    if (scalar_rdat_vld_r[19][1][12]) begin
        scalar_argdone [19][1][12] = 1;
    end
    scalar_adr[19][1][12] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][12]) begin
        scalar_argVld[19][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[19][1][12] = 1;
    end

    //------READ (scalar, global adr = 292) comb block-----//
    //s = 9; r = 0; a = 23;
    if (scalar_rdat_vld_r[9][0][23]) begin
        scalar_argdone [9][0][23] = 1;
    end
    scalar_adr[9][0][23] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][23]) begin
        scalar_argVld[9][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[9][0][23] = 1;
    end

    //------WRITE (scalar, global adr = 292) comb block-----//
    //s = 9; r = 1; a = 4;
    if (scalar_argAck [9][1][4]) begin
        scalar_argVld [9][1][4] = 0;
        scalar_argAckdone [9][1][4] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_split_cu_flag_o_ap_vld_r) begin
        scalar_argVld [9][1][4] = 1;
        scalar_argAckdone [9][1][4] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][4] = hls_coding_quadtree_hls_dup1_split_cu_flag_o_r;
    scalar_adr    [9][1][4] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 296) comb block-----//
    //s = 10; r = 0; a = 18;
    if (scalar_rdat_vld_r[10][0][18]) begin
        scalar_argdone [10][0][18] = 1;
    end
    scalar_adr[10][0][18] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][18]) begin
        scalar_argVld[10][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[10][0][18] = 1;
    end

    //------WRITE (scalar, global adr = 296) comb block-----//
    //s = 10; r = 0; a = 3;
    if (scalar_argAck [10][0][3]) begin
        scalar_argVld [10][0][3] = 0;
        scalar_argAckdone [10][0][3] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_more_data_o_ap_vld_r) begin
        scalar_argVld [10][0][3] = 1;
        scalar_argAckdone [10][0][3] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][3] = hls_coding_quadtree_hls_dup1_more_data_o_r;
    scalar_adr    [10][0][3] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1256) comb block-----//
    //s = 26; r = 0; a = 12;
    if (scalar_rdat_vld_r[26][0][12]) begin
        scalar_argdone [26][0][12] = 1;
    end
    scalar_adr[26][0][12] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][12]) begin
        scalar_argVld[26][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[26][0][12] = 1;
    end

    //------READ (scalar, global adr = 1240) comb block-----//
    //s = 22; r = 1; a = 13;
    if (scalar_rdat_vld_r[22][1][13]) begin
        scalar_argdone [22][1][13] = 1;
    end
    scalar_adr[22][1][13] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][13]) begin
        scalar_argVld[22][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[22][1][13] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 11;
    if (scalar_rdat_vld_r[26][1][11]) begin
        scalar_argdone [26][1][11] = 1;
    end
    scalar_adr[26][1][11] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][11]) begin
        scalar_argVld[26][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[26][1][11] = 1;
    end

    //------WRITE (scalar, global adr = 540) comb block-----//
    //s = 7; r = 1; a = 2;
    if (scalar_argAck [7][1][2]) begin
        scalar_argVld [7][1][2] = 0;
        scalar_argAckdone [7][1][2] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_qPy_pred_ap_vld_r) begin
        scalar_argVld [7][1][2] = 1;
        scalar_argAckdone [7][1][2] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][2] = hls_coding_quadtree_hls_dup1_qPy_pred_r;
    scalar_adr    [7][1][2] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 20;
    if (scalar_rdat_vld_r[6][1][20]) begin
        scalar_argdone [6][1][20] = 1;
    end
    scalar_adr[6][1][20] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][20]) begin
        scalar_argVld[6][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[6][1][20] = 1;
    end

    //------READ (scalar, global adr = 40) comb block-----//
    //s = 10; r = 1; a = 18;
    if (scalar_rdat_vld_r[10][1][18]) begin
        scalar_argdone [10][1][18] = 1;
    end
    scalar_adr[10][1][18] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][18]) begin
        scalar_argVld[10][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[10][1][18] = 1;
    end

    //------WRITE (scalar, global adr = 40) comb block-----//
    //s = 10; r = 1; a = 3;
    if (scalar_argAck [10][1][3]) begin
        scalar_argVld [10][1][3] = 0;
        scalar_argAckdone [10][1][3] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_qp_block_mask_o_ap_vld_r) begin
        scalar_argVld [10][1][3] = 1;
        scalar_argAckdone [10][1][3] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][3] = hls_coding_quadtree_hls_dup1_qp_block_mask_o_r;
    scalar_adr    [10][1][3] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 308) comb block-----//
    //s = 13; r = 1; a = 14;
    if (scalar_rdat_vld_r[13][1][14]) begin
        scalar_argdone [13][1][14] = 1;
    end
    scalar_adr[13][1][14] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][14]) begin
        scalar_argVld[13][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[13][1][14] = 1;
    end

    //------WRITE (scalar, global adr = 308) comb block-----//
    //s = 13; r = 1; a = 2;
    if (scalar_argAck [13][1][2]) begin
        scalar_argVld [13][1][2] = 0;
        scalar_argAckdone [13][1][2] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_cb_size_split_o_ap_vld_r) begin
        scalar_argVld [13][1][2] = 1;
        scalar_argAckdone [13][1][2] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][2] = hls_coding_quadtree_hls_dup1_cb_size_split_o_r;
    scalar_adr    [13][1][2] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 1; a = 9;
    if (scalar_rdat_vld_r[28][1][9]) begin
        scalar_argdone [28][1][9] = 1;
    end
    scalar_adr[28][1][9] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][9]) begin
        scalar_argVld[28][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[28][1][9] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 1; a = 10;
    if (scalar_rdat_vld_r[2][1][10]) begin
        scalar_argdone [2][1][10] = 1;
    end
    scalar_adr[2][1][10] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][10]) begin
        scalar_argVld[2][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[2][1][10] = 1;
    end

    //------WRITE (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 2;
    if (scalar_argAck [23][1][2]) begin
        scalar_argVld [23][1][2] = 0;
        scalar_argAckdone [23][1][2] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_ap_vld_r) begin
        scalar_argVld [23][1][2] = 1;
        scalar_argAckdone [23][1][2] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][1][2] = hls_coding_quadtree_hls_dup1_tu_is_cu_qp_delta_coded_r;
    scalar_adr    [23][1][2] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 468) comb block-----//
    //s = 21; r = 0; a = 3;
    if (scalar_argAck [21][0][3]) begin
        scalar_argVld [21][0][3] = 0;
        scalar_argAckdone [21][0][3] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_ap_vld_r) begin
        scalar_argVld [21][0][3] = 1;
        scalar_argAckdone [21][0][3] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][3] = hls_coding_quadtree_hls_dup1_tu_cu_qp_delta_r;
    scalar_adr    [21][0][3] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 472) comb block-----//
    //s = 22; r = 0; a = 3;
    if (scalar_argAck [22][0][3]) begin
        scalar_argVld [22][0][3] = 0;
        scalar_argAckdone [22][0][3] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_ap_vld_r) begin
        scalar_argVld [22][0][3] = 1;
        scalar_argAckdone [22][0][3] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][3] = hls_coding_quadtree_hls_dup1_tu_is_cu_chroma_qp_offset_coded_r;
    scalar_adr    [22][0][3] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 464) comb block-----//
    //s = 20; r = 0; a = 4;
    if (scalar_argAck [20][0][4]) begin
        scalar_argVld [20][0][4] = 0;
        scalar_argAckdone [20][0][4] = 1;
    end
    if (hls_coding_quadtree_hls_dup1_depth_ap_vld_r) begin
        scalar_argVld [20][0][4] = 1;
        scalar_argAckdone [20][0][4] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][4] = hls_coding_quadtree_hls_dup1_depth_r;
    scalar_adr    [20][0][4] = {ap_part_w[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 9;
    if (scalar_rdat_vld_r[24][1][9]) begin
        scalar_argdone [24][1][9] = 1;
    end
    scalar_adr[24][1][9] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][9]) begin
        scalar_argVld[24][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[24][1][9] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 11;
    if (scalar_rdat_vld_r[23][1][11]) begin
        scalar_argdone [23][1][11] = 1;
    end
    scalar_adr[23][1][11] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][11]) begin
        scalar_argVld[23][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[23][1][11] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 1; a = 19;
    if (scalar_rdat_vld_r[11][1][19]) begin
        scalar_argdone [11][1][19] = 1;
    end
    scalar_adr[11][1][19] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][19]) begin
        scalar_argVld[11][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[11][1][19] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 0; a = 15;
    if (scalar_rdat_vld_r[13][0][15]) begin
        scalar_argdone [13][0][15] = 1;
    end
    scalar_adr[13][0][15] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][15]) begin
        scalar_argVld[13][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[13][0][15] = 1;
    end

    //------READ (scalar, global adr = 448) comb block-----//
    //s = 16; r = 1; a = 9;
    if (scalar_rdat_vld_r[16][1][9]) begin
        scalar_argdone [16][1][9] = 1;
    end
    scalar_adr[16][1][9] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][9]) begin
        scalar_argVld[16][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[16][1][9] = 1;
    end

    //------READ (scalar, global adr = 432) comb block-----//
    //s = 12; r = 0; a = 18;
    if (scalar_rdat_vld_r[12][0][18]) begin
        scalar_argdone [12][0][18] = 1;
    end
    scalar_adr[12][0][18] = {ap_part[hls_coding_quadtree_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][18]) begin
        scalar_argVld[12][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argVld[12][0][18] = 1;
    end

    //------WRITE (array range, global adr = 286208, width=8, addr_width=32) -----//
    //s = 0; a = 45;
    array_argVld [0][45] = hls_coding_quadtree_hls_dup1_tab_ct_depth_EN_A & (hls_coding_quadtree_hls_dup1_tab_ct_depth_WEN_A != 0);
    array_adr    [0][45] = hls_coding_quadtree_hls_dup1_tab_ct_depth_Addr_A;
    array_wdat   [0][45] = hls_coding_quadtree_hls_dup1_tab_ct_depth_Din_A;

    //------READ (array range, global adr = 286208, width=8, addr_width=32) -----//
    //s = 0; a = 205;
    hls_coding_quadtree_hls_dup1_tab_ct_depth_Dout_A = array_rdat  [0][205];
    //found a write signal pair
    array_argVld [0][205] = hls_coding_quadtree_hls_dup1_tab_ct_depth_EN_A & (hls_coding_quadtree_hls_dup1_tab_ct_depth_WEN_A == 0);
    array_adr    [0][205] = hls_coding_quadtree_hls_dup1_tab_ct_depth_Addr_A;

    hls_coding_quadtree_hls_dup1_ready = array_argRdy[0][45]& array_argRdy[0][205] & ~ap_arb_reload_running_r[hls_coding_quadtree_hls_dup1];
    array_ap_ce[0][45] = ap_ce[hls_coding_quadtree_hls_dup1];
    array_ap_ce[0][205] = ap_ce[hls_coding_quadtree_hls_dup1];

    if (ap_arb_ret[hls_coding_quadtree_hls_dup1] & ~ap_arb_ret_r[hls_coding_quadtree_hls_dup1]) begin
        ap_arb_ret_running[hls_coding_quadtree_hls_dup1] = 1;
        hls_coding_quadtree_hls_dup1_ready = 0;
    end

    scalar_argAckdone_all[hls_coding_quadtree_hls_dup1] = scalar_argAckdone[11][0][4] &
                                                scalar_argAckdone[12][1][3] &
                                                scalar_argAckdone[14][0][4] &
                                                scalar_argAckdone[15][0][4] &
                                                scalar_argAckdone[9][1][4] &
                                                scalar_argAckdone[10][0][3] &
                                                scalar_argAckdone[7][1][2] &
                                                scalar_argAckdone[10][1][3] &
                                                scalar_argAckdone[13][1][2] &
                                                scalar_argAckdone[23][1][2] &
                                                scalar_argAckdone[21][0][3] &
                                                scalar_argAckdone[22][0][3] &
                                                scalar_argAckdone[20][0][4];
    if (ap_arb_ret_running[hls_coding_quadtree_hls_dup1] & scalar_argAckdone_all[hls_coding_quadtree_hls_dup1] &~ ap_arb_reload_running_r[hls_coding_quadtree_hls_dup1]) begin
        ap_arb_reload[hls_coding_quadtree_hls_dup1] = 1;
        ap_arb_reload_running[hls_coding_quadtree_hls_dup1] = 1;
    end

    if (ap_arb_start[hls_coding_quadtree_hls_dup1] &~ ap_arb_start_r[hls_coding_quadtree_hls_dup1]) begin
        ap_arb_start_running[hls_coding_quadtree_hls_dup1] = 1;
    end

    if (ap_arb_start_running[hls_coding_quadtree_hls_dup1] & ~scalar_writing_300& ~scalar_writing_304& ~scalar_writing_312& ~scalar_writing_316& ~scalar_writing_292& ~scalar_writing_296& ~scalar_writing_536& ~scalar_writing_40& ~scalar_writing_308& ~scalar_writing_608& ~scalar_writing_604) begin
        ap_arb_start_running[hls_coding_quadtree_hls_dup1] = 0;
        ap_arb_reload[hls_coding_quadtree_hls_dup1] = 1;
    end

    scalar_argdone_all[hls_coding_quadtree_hls_dup1] = scalar_argdone[11][0][19] &
                                                                scalar_argdone[12][1][16] &
                                                                scalar_argdone[14][0][17] &
                                                                scalar_argdone[15][1][15] &
                                                                scalar_argdone[6][0][21] &
                                                                scalar_argdone[19][1][12] &
                                                                scalar_argdone[9][0][23] &
                                                                scalar_argdone[10][0][18] &
                                                                scalar_argdone[26][0][12] &
                                                                scalar_argdone[22][1][13] &
                                                                scalar_argdone[26][1][11] &
                                                                scalar_argdone[6][1][20] &
                                                                scalar_argdone[10][1][18] &
                                                                scalar_argdone[13][1][14] &
                                                                scalar_argdone[28][1][9] &
                                                                scalar_argdone[2][1][10] &
                                                                scalar_argdone[24][1][9] &
                                                                scalar_argdone[23][1][11] &
                                                                scalar_argdone[11][1][19] &
                                                                scalar_argdone[13][0][15] &
                                                                scalar_argdone[16][1][9] &
                                                                scalar_argdone[12][0][18];

    if (scalar_argdone_all_r[hls_coding_quadtree_hls_dup1]) begin
        scalar_argdone[11][0][19] = 0;
        scalar_argdone[12][1][16] = 0;
        scalar_argdone[14][0][17] = 0;
        scalar_argdone[15][1][15] = 0;
        scalar_argdone[6][0][21] = 0;
        scalar_argdone[19][1][12] = 0;
        scalar_argdone[9][0][23] = 0;
        scalar_argdone[10][0][18] = 0;
        scalar_argdone[26][0][12] = 0;
        scalar_argdone[22][1][13] = 0;
        scalar_argdone[26][1][11] = 0;
        scalar_argdone[6][1][20] = 0;
        scalar_argdone[10][1][18] = 0;
        scalar_argdone[13][1][14] = 0;
        scalar_argdone[28][1][9] = 0;
        scalar_argdone[2][1][10] = 0;
        scalar_argdone[24][1][9] = 0;
        scalar_argdone[23][1][11] = 0;
        scalar_argdone[11][1][19] = 0;
        scalar_argdone[13][0][15] = 0;
        scalar_argdone[16][1][9] = 0;
        scalar_argdone[12][0][18] = 0;

        if (ap_arb_start_r[hls_coding_quadtree_hls_dup1] & ~ap_running_r[hls_coding_quadtree_hls_dup1]) begin
            ap_start[hls_coding_quadtree_hls_dup1] = 1;
            ap_running[hls_coding_quadtree_hls_dup1] = 1;
        end
        else if (ap_arb_ret_running_r[hls_coding_quadtree_hls_dup1]) begin
            ap_arb_ret_running[hls_coding_quadtree_hls_dup1] = 0;
            ap_arb_reload_running[hls_coding_quadtree_hls_dup1] = 0;
        end
    end

    if (ap_start_r[hls_coding_quadtree_hls_dup1] & ap_ready_r[hls_coding_quadtree_hls_dup1]) begin
        ap_start[hls_coding_quadtree_hls_dup1] = 0;
    end

    if (ap_done_r[hls_coding_quadtree_hls_dup1]) begin
        ap_running[hls_coding_quadtree_hls_dup1] = 0;
    end
`endif
    //============================================================
    //hls_coding_quadtree_hls_dup2       (f = 16)
    //============================================================
`ifdef enable_connect_hls_coding_quadtree_hls_dup2
    //------READ (scalar, global adr = 300) comb block-----//
    //s = 11; r = 0; a = 20;
    if (scalar_rdat_vld_r[11][0][20]) begin
        scalar_argdone [11][0][20] = 1;
    end
    scalar_adr[11][0][20] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][20]) begin
        scalar_argVld[11][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[11][0][20] = 1;
    end

    //------WRITE (scalar, global adr = 300) comb block-----//
    //s = 11; r = 1; a = 4;
    if (scalar_argAck [11][1][4]) begin
        scalar_argVld [11][1][4] = 0;
        scalar_argAckdone [11][1][4] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_x1_o_ap_vld_r) begin
        scalar_argVld [11][1][4] = 1;
        scalar_argAckdone [11][1][4] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][1][4] = hls_coding_quadtree_hls_dup2_x1_o_r;
    scalar_adr    [11][1][4] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 304) comb block-----//
    //s = 12; r = 1; a = 17;
    if (scalar_rdat_vld_r[12][1][17]) begin
        scalar_argdone [12][1][17] = 1;
    end
    scalar_adr[12][1][17] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][17]) begin
        scalar_argVld[12][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[12][1][17] = 1;
    end

    //------WRITE (scalar, global adr = 304) comb block-----//
    //s = 12; r = 0; a = 4;
    if (scalar_argAck [12][0][4]) begin
        scalar_argVld [12][0][4] = 0;
        scalar_argAckdone [12][0][4] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_y1_o_ap_vld_r) begin
        scalar_argVld [12][0][4] = 1;
        scalar_argAckdone [12][0][4] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][4] = hls_coding_quadtree_hls_dup2_y1_o_r;
    scalar_adr    [12][0][4] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 312) comb block-----//
    //s = 14; r = 1; a = 17;
    if (scalar_rdat_vld_r[14][1][17]) begin
        scalar_argdone [14][1][17] = 1;
    end
    scalar_adr[14][1][17] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][17]) begin
        scalar_argVld[14][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[14][1][17] = 1;
    end

    //------WRITE (scalar, global adr = 312) comb block-----//
    //s = 14; r = 1; a = 4;
    if (scalar_argAck [14][1][4]) begin
        scalar_argVld [14][1][4] = 0;
        scalar_argAckdone [14][1][4] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_ap_vld_r) begin
        scalar_argVld [14][1][4] = 1;
        scalar_argAckdone [14][1][4] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][4] = hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_r;
    scalar_adr    [14][1][4] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 316) comb block-----//
    //s = 15; r = 0; a = 16;
    if (scalar_rdat_vld_r[15][0][16]) begin
        scalar_argdone [15][0][16] = 1;
    end
    scalar_adr[15][0][16] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][16]) begin
        scalar_argVld[15][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[15][0][16] = 1;
    end

    //------WRITE (scalar, global adr = 316) comb block-----//
    //s = 15; r = 1; a = 4;
    if (scalar_argAck [15][1][4]) begin
        scalar_argVld [15][1][4] = 0;
        scalar_argAckdone [15][1][4] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_ap_vld_r) begin
        scalar_argVld [15][1][4] = 1;
        scalar_argAckdone [15][1][4] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][4] = hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_r;
    scalar_adr    [15][1][4] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 0; a = 22;
    if (scalar_rdat_vld_r[6][0][22]) begin
        scalar_argdone [6][0][22] = 1;
    end
    scalar_adr[6][0][22] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][22]) begin
        scalar_argVld[6][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[6][0][22] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 0; a = 13;
    if (scalar_rdat_vld_r[19][0][13]) begin
        scalar_argdone [19][0][13] = 1;
    end
    scalar_adr[19][0][13] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][13]) begin
        scalar_argVld[19][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[19][0][13] = 1;
    end

    //------READ (scalar, global adr = 292) comb block-----//
    //s = 9; r = 1; a = 23;
    if (scalar_rdat_vld_r[9][1][23]) begin
        scalar_argdone [9][1][23] = 1;
    end
    scalar_adr[9][1][23] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][23]) begin
        scalar_argVld[9][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[9][1][23] = 1;
    end

    //------WRITE (scalar, global adr = 292) comb block-----//
    //s = 9; r = 0; a = 5;
    if (scalar_argAck [9][0][5]) begin
        scalar_argVld [9][0][5] = 0;
        scalar_argAckdone [9][0][5] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_split_cu_flag_o_ap_vld_r) begin
        scalar_argVld [9][0][5] = 1;
        scalar_argAckdone [9][0][5] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][5] = hls_coding_quadtree_hls_dup2_split_cu_flag_o_r;
    scalar_adr    [9][0][5] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 296) comb block-----//
    //s = 10; r = 0; a = 19;
    if (scalar_rdat_vld_r[10][0][19]) begin
        scalar_argdone [10][0][19] = 1;
    end
    scalar_adr[10][0][19] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][19]) begin
        scalar_argVld[10][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[10][0][19] = 1;
    end

    //------WRITE (scalar, global adr = 296) comb block-----//
    //s = 10; r = 0; a = 4;
    if (scalar_argAck [10][0][4]) begin
        scalar_argVld [10][0][4] = 0;
        scalar_argAckdone [10][0][4] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_more_data_o_ap_vld_r) begin
        scalar_argVld [10][0][4] = 1;
        scalar_argAckdone [10][0][4] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][4] = hls_coding_quadtree_hls_dup2_more_data_o_r;
    scalar_adr    [10][0][4] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1256) comb block-----//
    //s = 26; r = 0; a = 13;
    if (scalar_rdat_vld_r[26][0][13]) begin
        scalar_argdone [26][0][13] = 1;
    end
    scalar_adr[26][0][13] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][13]) begin
        scalar_argVld[26][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[26][0][13] = 1;
    end

    //------READ (scalar, global adr = 1240) comb block-----//
    //s = 22; r = 0; a = 15;
    if (scalar_rdat_vld_r[22][0][15]) begin
        scalar_argdone [22][0][15] = 1;
    end
    scalar_adr[22][0][15] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][15]) begin
        scalar_argVld[22][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[22][0][15] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 12;
    if (scalar_rdat_vld_r[26][1][12]) begin
        scalar_argdone [26][1][12] = 1;
    end
    scalar_adr[26][1][12] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][12]) begin
        scalar_argVld[26][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[26][1][12] = 1;
    end

    //------WRITE (scalar, global adr = 540) comb block-----//
    //s = 7; r = 0; a = 3;
    if (scalar_argAck [7][0][3]) begin
        scalar_argVld [7][0][3] = 0;
        scalar_argAckdone [7][0][3] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_qPy_pred_ap_vld_r) begin
        scalar_argVld [7][0][3] = 1;
        scalar_argAckdone [7][0][3] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][3] = hls_coding_quadtree_hls_dup2_qPy_pred_r;
    scalar_adr    [7][0][3] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 21;
    if (scalar_rdat_vld_r[6][1][21]) begin
        scalar_argdone [6][1][21] = 1;
    end
    scalar_adr[6][1][21] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][21]) begin
        scalar_argVld[6][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[6][1][21] = 1;
    end

    //------READ (scalar, global adr = 40) comb block-----//
    //s = 10; r = 1; a = 19;
    if (scalar_rdat_vld_r[10][1][19]) begin
        scalar_argdone [10][1][19] = 1;
    end
    scalar_adr[10][1][19] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][19]) begin
        scalar_argVld[10][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[10][1][19] = 1;
    end

    //------WRITE (scalar, global adr = 40) comb block-----//
    //s = 10; r = 1; a = 4;
    if (scalar_argAck [10][1][4]) begin
        scalar_argVld [10][1][4] = 0;
        scalar_argAckdone [10][1][4] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_qp_block_mask_o_ap_vld_r) begin
        scalar_argVld [10][1][4] = 1;
        scalar_argAckdone [10][1][4] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][4] = hls_coding_quadtree_hls_dup2_qp_block_mask_o_r;
    scalar_adr    [10][1][4] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 308) comb block-----//
    //s = 13; r = 1; a = 15;
    if (scalar_rdat_vld_r[13][1][15]) begin
        scalar_argdone [13][1][15] = 1;
    end
    scalar_adr[13][1][15] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][15]) begin
        scalar_argVld[13][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[13][1][15] = 1;
    end

    //------WRITE (scalar, global adr = 308) comb block-----//
    //s = 13; r = 0; a = 3;
    if (scalar_argAck [13][0][3]) begin
        scalar_argVld [13][0][3] = 0;
        scalar_argAckdone [13][0][3] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_cb_size_split_o_ap_vld_r) begin
        scalar_argVld [13][0][3] = 1;
        scalar_argAckdone [13][0][3] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][3] = hls_coding_quadtree_hls_dup2_cb_size_split_o_r;
    scalar_adr    [13][0][3] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 0; a = 10;
    if (scalar_rdat_vld_r[28][0][10]) begin
        scalar_argdone [28][0][10] = 1;
    end
    scalar_adr[28][0][10] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][10]) begin
        scalar_argVld[28][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[28][0][10] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 0; a = 12;
    if (scalar_rdat_vld_r[2][0][12]) begin
        scalar_argdone [2][0][12] = 1;
    end
    scalar_adr[2][0][12] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][12]) begin
        scalar_argVld[2][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[2][0][12] = 1;
    end

    //------WRITE (scalar, global adr = 476) comb block-----//
    //s = 23; r = 0; a = 3;
    if (scalar_argAck [23][0][3]) begin
        scalar_argVld [23][0][3] = 0;
        scalar_argAckdone [23][0][3] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_ap_vld_r) begin
        scalar_argVld [23][0][3] = 1;
        scalar_argAckdone [23][0][3] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][3] = hls_coding_quadtree_hls_dup2_tu_is_cu_qp_delta_coded_r;
    scalar_adr    [23][0][3] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 468) comb block-----//
    //s = 21; r = 1; a = 3;
    if (scalar_argAck [21][1][3]) begin
        scalar_argVld [21][1][3] = 0;
        scalar_argAckdone [21][1][3] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_ap_vld_r) begin
        scalar_argVld [21][1][3] = 1;
        scalar_argAckdone [21][1][3] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][3] = hls_coding_quadtree_hls_dup2_tu_cu_qp_delta_r;
    scalar_adr    [21][1][3] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 472) comb block-----//
    //s = 22; r = 1; a = 3;
    if (scalar_argAck [22][1][3]) begin
        scalar_argVld [22][1][3] = 0;
        scalar_argAckdone [22][1][3] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_ap_vld_r) begin
        scalar_argVld [22][1][3] = 1;
        scalar_argAckdone [22][1][3] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][3] = hls_coding_quadtree_hls_dup2_tu_is_cu_chroma_qp_offset_coded_r;
    scalar_adr    [22][1][3] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 464) comb block-----//
    //s = 20; r = 1; a = 4;
    if (scalar_argAck [20][1][4]) begin
        scalar_argVld [20][1][4] = 0;
        scalar_argAckdone [20][1][4] = 1;
    end
    if (hls_coding_quadtree_hls_dup2_depth_ap_vld_r) begin
        scalar_argVld [20][1][4] = 1;
        scalar_argAckdone [20][1][4] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][4] = hls_coding_quadtree_hls_dup2_depth_r;
    scalar_adr    [20][1][4] = {ap_part_w[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 0; a = 11;
    if (scalar_rdat_vld_r[24][0][11]) begin
        scalar_argdone [24][0][11] = 1;
    end
    scalar_adr[24][0][11] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][11]) begin
        scalar_argVld[24][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[24][0][11] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 0; a = 13;
    if (scalar_rdat_vld_r[23][0][13]) begin
        scalar_argdone [23][0][13] = 1;
    end
    scalar_adr[23][0][13] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][13]) begin
        scalar_argVld[23][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[23][0][13] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 1; a = 20;
    if (scalar_rdat_vld_r[11][1][20]) begin
        scalar_argdone [11][1][20] = 1;
    end
    scalar_adr[11][1][20] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][20]) begin
        scalar_argVld[11][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[11][1][20] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 0; a = 16;
    if (scalar_rdat_vld_r[13][0][16]) begin
        scalar_argdone [13][0][16] = 1;
    end
    scalar_adr[13][0][16] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][16]) begin
        scalar_argVld[13][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[13][0][16] = 1;
    end

    //------READ (scalar, global adr = 448) comb block-----//
    //s = 16; r = 0; a = 11;
    if (scalar_rdat_vld_r[16][0][11]) begin
        scalar_argdone [16][0][11] = 1;
    end
    scalar_adr[16][0][11] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][11]) begin
        scalar_argVld[16][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[16][0][11] = 1;
    end

    //------READ (scalar, global adr = 432) comb block-----//
    //s = 12; r = 0; a = 19;
    if (scalar_rdat_vld_r[12][0][19]) begin
        scalar_argdone [12][0][19] = 1;
    end
    scalar_adr[12][0][19] = {ap_part[hls_coding_quadtree_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][19]) begin
        scalar_argVld[12][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argVld[12][0][19] = 1;
    end

    //------WRITE (array range, global adr = 286208, width=8, addr_width=32) -----//
    //s = 0; a = 46;
    array_argVld [0][46] = hls_coding_quadtree_hls_dup2_tab_ct_depth_EN_A & (hls_coding_quadtree_hls_dup2_tab_ct_depth_WEN_A != 0);
    array_adr    [0][46] = hls_coding_quadtree_hls_dup2_tab_ct_depth_Addr_A;
    array_wdat   [0][46] = hls_coding_quadtree_hls_dup2_tab_ct_depth_Din_A;

    //------READ (array range, global adr = 286208, width=8, addr_width=32) -----//
    //s = 0; a = 206;
    hls_coding_quadtree_hls_dup2_tab_ct_depth_Dout_A = array_rdat  [0][206];
    //found a write signal pair
    array_argVld [0][206] = hls_coding_quadtree_hls_dup2_tab_ct_depth_EN_A & (hls_coding_quadtree_hls_dup2_tab_ct_depth_WEN_A == 0);
    array_adr    [0][206] = hls_coding_quadtree_hls_dup2_tab_ct_depth_Addr_A;

    hls_coding_quadtree_hls_dup2_ready = array_argRdy[0][46]& array_argRdy[0][206] & ~ap_arb_reload_running_r[hls_coding_quadtree_hls_dup2];
    array_ap_ce[0][46] = ap_ce[hls_coding_quadtree_hls_dup2];
    array_ap_ce[0][206] = ap_ce[hls_coding_quadtree_hls_dup2];

    if (ap_arb_ret[hls_coding_quadtree_hls_dup2] & ~ap_arb_ret_r[hls_coding_quadtree_hls_dup2]) begin
        ap_arb_ret_running[hls_coding_quadtree_hls_dup2] = 1;
        hls_coding_quadtree_hls_dup2_ready = 0;
    end

    scalar_argAckdone_all[hls_coding_quadtree_hls_dup2] = scalar_argAckdone[11][1][4] &
                                                scalar_argAckdone[12][0][4] &
                                                scalar_argAckdone[14][1][4] &
                                                scalar_argAckdone[15][1][4] &
                                                scalar_argAckdone[9][0][5] &
                                                scalar_argAckdone[10][0][4] &
                                                scalar_argAckdone[7][0][3] &
                                                scalar_argAckdone[10][1][4] &
                                                scalar_argAckdone[13][0][3] &
                                                scalar_argAckdone[23][0][3] &
                                                scalar_argAckdone[21][1][3] &
                                                scalar_argAckdone[22][1][3] &
                                                scalar_argAckdone[20][1][4];
    if (ap_arb_ret_running[hls_coding_quadtree_hls_dup2] & scalar_argAckdone_all[hls_coding_quadtree_hls_dup2] &~ ap_arb_reload_running_r[hls_coding_quadtree_hls_dup2]) begin
        ap_arb_reload[hls_coding_quadtree_hls_dup2] = 1;
        ap_arb_reload_running[hls_coding_quadtree_hls_dup2] = 1;
    end

    if (ap_arb_start[hls_coding_quadtree_hls_dup2] &~ ap_arb_start_r[hls_coding_quadtree_hls_dup2]) begin
        ap_arb_start_running[hls_coding_quadtree_hls_dup2] = 1;
    end

    if (ap_arb_start_running[hls_coding_quadtree_hls_dup2] & ~scalar_writing_300& ~scalar_writing_304& ~scalar_writing_312& ~scalar_writing_316& ~scalar_writing_292& ~scalar_writing_296& ~scalar_writing_536& ~scalar_writing_40& ~scalar_writing_308& ~scalar_writing_608& ~scalar_writing_604) begin
        ap_arb_start_running[hls_coding_quadtree_hls_dup2] = 0;
        ap_arb_reload[hls_coding_quadtree_hls_dup2] = 1;
    end

    scalar_argdone_all[hls_coding_quadtree_hls_dup2] = scalar_argdone[11][0][20] &
                                                                scalar_argdone[12][1][17] &
                                                                scalar_argdone[14][1][17] &
                                                                scalar_argdone[15][0][16] &
                                                                scalar_argdone[6][0][22] &
                                                                scalar_argdone[19][0][13] &
                                                                scalar_argdone[9][1][23] &
                                                                scalar_argdone[10][0][19] &
                                                                scalar_argdone[26][0][13] &
                                                                scalar_argdone[22][0][15] &
                                                                scalar_argdone[26][1][12] &
                                                                scalar_argdone[6][1][21] &
                                                                scalar_argdone[10][1][19] &
                                                                scalar_argdone[13][1][15] &
                                                                scalar_argdone[28][0][10] &
                                                                scalar_argdone[2][0][12] &
                                                                scalar_argdone[24][0][11] &
                                                                scalar_argdone[23][0][13] &
                                                                scalar_argdone[11][1][20] &
                                                                scalar_argdone[13][0][16] &
                                                                scalar_argdone[16][0][11] &
                                                                scalar_argdone[12][0][19];

    if (scalar_argdone_all_r[hls_coding_quadtree_hls_dup2]) begin
        scalar_argdone[11][0][20] = 0;
        scalar_argdone[12][1][17] = 0;
        scalar_argdone[14][1][17] = 0;
        scalar_argdone[15][0][16] = 0;
        scalar_argdone[6][0][22] = 0;
        scalar_argdone[19][0][13] = 0;
        scalar_argdone[9][1][23] = 0;
        scalar_argdone[10][0][19] = 0;
        scalar_argdone[26][0][13] = 0;
        scalar_argdone[22][0][15] = 0;
        scalar_argdone[26][1][12] = 0;
        scalar_argdone[6][1][21] = 0;
        scalar_argdone[10][1][19] = 0;
        scalar_argdone[13][1][15] = 0;
        scalar_argdone[28][0][10] = 0;
        scalar_argdone[2][0][12] = 0;
        scalar_argdone[24][0][11] = 0;
        scalar_argdone[23][0][13] = 0;
        scalar_argdone[11][1][20] = 0;
        scalar_argdone[13][0][16] = 0;
        scalar_argdone[16][0][11] = 0;
        scalar_argdone[12][0][19] = 0;

        if (ap_arb_start_r[hls_coding_quadtree_hls_dup2] & ~ap_running_r[hls_coding_quadtree_hls_dup2]) begin
            ap_start[hls_coding_quadtree_hls_dup2] = 1;
            ap_running[hls_coding_quadtree_hls_dup2] = 1;
        end
        else if (ap_arb_ret_running_r[hls_coding_quadtree_hls_dup2]) begin
            ap_arb_ret_running[hls_coding_quadtree_hls_dup2] = 0;
            ap_arb_reload_running[hls_coding_quadtree_hls_dup2] = 0;
        end
    end

    if (ap_start_r[hls_coding_quadtree_hls_dup2] & ap_ready_r[hls_coding_quadtree_hls_dup2]) begin
        ap_start[hls_coding_quadtree_hls_dup2] = 0;
    end

    if (ap_done_r[hls_coding_quadtree_hls_dup2]) begin
        ap_running[hls_coding_quadtree_hls_dup2] = 0;
    end
`endif
    //============================================================
    //hls_coding_quadtree_hls_dup3       (f = 17)
    //============================================================
`ifdef enable_connect_hls_coding_quadtree_hls_dup3
    //------READ (scalar, global adr = 300) comb block-----//
    //s = 11; r = 0; a = 21;
    if (scalar_rdat_vld_r[11][0][21]) begin
        scalar_argdone [11][0][21] = 1;
    end
    scalar_adr[11][0][21] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][21]) begin
        scalar_argVld[11][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[11][0][21] = 1;
    end

    //------WRITE (scalar, global adr = 300) comb block-----//
    //s = 11; r = 0; a = 5;
    if (scalar_argAck [11][0][5]) begin
        scalar_argVld [11][0][5] = 0;
        scalar_argAckdone [11][0][5] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_x1_o_ap_vld_r) begin
        scalar_argVld [11][0][5] = 1;
        scalar_argAckdone [11][0][5] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][0][5] = hls_coding_quadtree_hls_dup3_x1_o_r;
    scalar_adr    [11][0][5] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 304) comb block-----//
    //s = 12; r = 1; a = 18;
    if (scalar_rdat_vld_r[12][1][18]) begin
        scalar_argdone [12][1][18] = 1;
    end
    scalar_adr[12][1][18] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][18]) begin
        scalar_argVld[12][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[12][1][18] = 1;
    end

    //------WRITE (scalar, global adr = 304) comb block-----//
    //s = 12; r = 1; a = 4;
    if (scalar_argAck [12][1][4]) begin
        scalar_argVld [12][1][4] = 0;
        scalar_argAckdone [12][1][4] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_y1_o_ap_vld_r) begin
        scalar_argVld [12][1][4] = 1;
        scalar_argAckdone [12][1][4] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][4] = hls_coding_quadtree_hls_dup3_y1_o_r;
    scalar_adr    [12][1][4] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 312) comb block-----//
    //s = 14; r = 0; a = 18;
    if (scalar_rdat_vld_r[14][0][18]) begin
        scalar_argdone [14][0][18] = 1;
    end
    scalar_adr[14][0][18] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][18]) begin
        scalar_argVld[14][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[14][0][18] = 1;
    end

    //------WRITE (scalar, global adr = 312) comb block-----//
    //s = 14; r = 0; a = 5;
    if (scalar_argAck [14][0][5]) begin
        scalar_argVld [14][0][5] = 0;
        scalar_argAckdone [14][0][5] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_ap_vld_r) begin
        scalar_argVld [14][0][5] = 1;
        scalar_argAckdone [14][0][5] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][5] = hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_r;
    scalar_adr    [14][0][5] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 316) comb block-----//
    //s = 15; r = 1; a = 16;
    if (scalar_rdat_vld_r[15][1][16]) begin
        scalar_argdone [15][1][16] = 1;
    end
    scalar_adr[15][1][16] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][16]) begin
        scalar_argVld[15][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[15][1][16] = 1;
    end

    //------WRITE (scalar, global adr = 316) comb block-----//
    //s = 15; r = 0; a = 5;
    if (scalar_argAck [15][0][5]) begin
        scalar_argVld [15][0][5] = 0;
        scalar_argAckdone [15][0][5] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_ap_vld_r) begin
        scalar_argVld [15][0][5] = 1;
        scalar_argAckdone [15][0][5] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][5] = hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_r;
    scalar_adr    [15][0][5] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 0; a = 23;
    if (scalar_rdat_vld_r[6][0][23]) begin
        scalar_argdone [6][0][23] = 1;
    end
    scalar_adr[6][0][23] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][23]) begin
        scalar_argVld[6][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[6][0][23] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 1; a = 13;
    if (scalar_rdat_vld_r[19][1][13]) begin
        scalar_argdone [19][1][13] = 1;
    end
    scalar_adr[19][1][13] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][13]) begin
        scalar_argVld[19][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[19][1][13] = 1;
    end

    //------READ (scalar, global adr = 292) comb block-----//
    //s = 9; r = 0; a = 24;
    if (scalar_rdat_vld_r[9][0][24]) begin
        scalar_argdone [9][0][24] = 1;
    end
    scalar_adr[9][0][24] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][24]) begin
        scalar_argVld[9][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[9][0][24] = 1;
    end

    //------WRITE (scalar, global adr = 292) comb block-----//
    //s = 9; r = 1; a = 5;
    if (scalar_argAck [9][1][5]) begin
        scalar_argVld [9][1][5] = 0;
        scalar_argAckdone [9][1][5] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_split_cu_flag_o_ap_vld_r) begin
        scalar_argVld [9][1][5] = 1;
        scalar_argAckdone [9][1][5] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][5] = hls_coding_quadtree_hls_dup3_split_cu_flag_o_r;
    scalar_adr    [9][1][5] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 296) comb block-----//
    //s = 10; r = 0; a = 20;
    if (scalar_rdat_vld_r[10][0][20]) begin
        scalar_argdone [10][0][20] = 1;
    end
    scalar_adr[10][0][20] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][20]) begin
        scalar_argVld[10][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[10][0][20] = 1;
    end

    //------WRITE (scalar, global adr = 296) comb block-----//
    //s = 10; r = 0; a = 5;
    if (scalar_argAck [10][0][5]) begin
        scalar_argVld [10][0][5] = 0;
        scalar_argAckdone [10][0][5] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_more_data_o_ap_vld_r) begin
        scalar_argVld [10][0][5] = 1;
        scalar_argAckdone [10][0][5] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][5] = hls_coding_quadtree_hls_dup3_more_data_o_r;
    scalar_adr    [10][0][5] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1256) comb block-----//
    //s = 26; r = 0; a = 14;
    if (scalar_rdat_vld_r[26][0][14]) begin
        scalar_argdone [26][0][14] = 1;
    end
    scalar_adr[26][0][14] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][14]) begin
        scalar_argVld[26][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[26][0][14] = 1;
    end

    //------READ (scalar, global adr = 1240) comb block-----//
    //s = 22; r = 1; a = 14;
    if (scalar_rdat_vld_r[22][1][14]) begin
        scalar_argdone [22][1][14] = 1;
    end
    scalar_adr[22][1][14] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][14]) begin
        scalar_argVld[22][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[22][1][14] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 13;
    if (scalar_rdat_vld_r[26][1][13]) begin
        scalar_argdone [26][1][13] = 1;
    end
    scalar_adr[26][1][13] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][13]) begin
        scalar_argVld[26][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[26][1][13] = 1;
    end

    //------WRITE (scalar, global adr = 540) comb block-----//
    //s = 7; r = 1; a = 3;
    if (scalar_argAck [7][1][3]) begin
        scalar_argVld [7][1][3] = 0;
        scalar_argAckdone [7][1][3] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_qPy_pred_ap_vld_r) begin
        scalar_argVld [7][1][3] = 1;
        scalar_argAckdone [7][1][3] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][3] = hls_coding_quadtree_hls_dup3_qPy_pred_r;
    scalar_adr    [7][1][3] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 22;
    if (scalar_rdat_vld_r[6][1][22]) begin
        scalar_argdone [6][1][22] = 1;
    end
    scalar_adr[6][1][22] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][22]) begin
        scalar_argVld[6][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[6][1][22] = 1;
    end

    //------READ (scalar, global adr = 40) comb block-----//
    //s = 10; r = 1; a = 20;
    if (scalar_rdat_vld_r[10][1][20]) begin
        scalar_argdone [10][1][20] = 1;
    end
    scalar_adr[10][1][20] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][20]) begin
        scalar_argVld[10][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[10][1][20] = 1;
    end

    //------WRITE (scalar, global adr = 40) comb block-----//
    //s = 10; r = 1; a = 5;
    if (scalar_argAck [10][1][5]) begin
        scalar_argVld [10][1][5] = 0;
        scalar_argAckdone [10][1][5] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_qp_block_mask_o_ap_vld_r) begin
        scalar_argVld [10][1][5] = 1;
        scalar_argAckdone [10][1][5] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][5] = hls_coding_quadtree_hls_dup3_qp_block_mask_o_r;
    scalar_adr    [10][1][5] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 308) comb block-----//
    //s = 13; r = 1; a = 16;
    if (scalar_rdat_vld_r[13][1][16]) begin
        scalar_argdone [13][1][16] = 1;
    end
    scalar_adr[13][1][16] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][16]) begin
        scalar_argVld[13][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[13][1][16] = 1;
    end

    //------WRITE (scalar, global adr = 308) comb block-----//
    //s = 13; r = 1; a = 3;
    if (scalar_argAck [13][1][3]) begin
        scalar_argVld [13][1][3] = 0;
        scalar_argAckdone [13][1][3] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_cb_size_split_o_ap_vld_r) begin
        scalar_argVld [13][1][3] = 1;
        scalar_argAckdone [13][1][3] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][3] = hls_coding_quadtree_hls_dup3_cb_size_split_o_r;
    scalar_adr    [13][1][3] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 1; a = 10;
    if (scalar_rdat_vld_r[28][1][10]) begin
        scalar_argdone [28][1][10] = 1;
    end
    scalar_adr[28][1][10] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][10]) begin
        scalar_argVld[28][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[28][1][10] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 1; a = 11;
    if (scalar_rdat_vld_r[2][1][11]) begin
        scalar_argdone [2][1][11] = 1;
    end
    scalar_adr[2][1][11] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][11]) begin
        scalar_argVld[2][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[2][1][11] = 1;
    end

    //------WRITE (scalar, global adr = 476) comb block-----//
    //s = 23; r = 1; a = 3;
    if (scalar_argAck [23][1][3]) begin
        scalar_argVld [23][1][3] = 0;
        scalar_argAckdone [23][1][3] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_ap_vld_r) begin
        scalar_argVld [23][1][3] = 1;
        scalar_argAckdone [23][1][3] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][1][3] = hls_coding_quadtree_hls_dup3_tu_is_cu_qp_delta_coded_r;
    scalar_adr    [23][1][3] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 468) comb block-----//
    //s = 21; r = 0; a = 4;
    if (scalar_argAck [21][0][4]) begin
        scalar_argVld [21][0][4] = 0;
        scalar_argAckdone [21][0][4] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_ap_vld_r) begin
        scalar_argVld [21][0][4] = 1;
        scalar_argAckdone [21][0][4] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][4] = hls_coding_quadtree_hls_dup3_tu_cu_qp_delta_r;
    scalar_adr    [21][0][4] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 472) comb block-----//
    //s = 22; r = 0; a = 4;
    if (scalar_argAck [22][0][4]) begin
        scalar_argVld [22][0][4] = 0;
        scalar_argAckdone [22][0][4] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_ap_vld_r) begin
        scalar_argVld [22][0][4] = 1;
        scalar_argAckdone [22][0][4] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][4] = hls_coding_quadtree_hls_dup3_tu_is_cu_chroma_qp_offset_coded_r;
    scalar_adr    [22][0][4] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 464) comb block-----//
    //s = 20; r = 0; a = 5;
    if (scalar_argAck [20][0][5]) begin
        scalar_argVld [20][0][5] = 0;
        scalar_argAckdone [20][0][5] = 1;
    end
    if (hls_coding_quadtree_hls_dup3_depth_ap_vld_r) begin
        scalar_argVld [20][0][5] = 1;
        scalar_argAckdone [20][0][5] = 0;
        ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][5] = hls_coding_quadtree_hls_dup3_depth_r;
    scalar_adr    [20][0][5] = {ap_part_w[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 10;
    if (scalar_rdat_vld_r[24][1][10]) begin
        scalar_argdone [24][1][10] = 1;
    end
    scalar_adr[24][1][10] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][10]) begin
        scalar_argVld[24][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[24][1][10] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 12;
    if (scalar_rdat_vld_r[23][1][12]) begin
        scalar_argdone [23][1][12] = 1;
    end
    scalar_adr[23][1][12] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][12]) begin
        scalar_argVld[23][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[23][1][12] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 1; a = 21;
    if (scalar_rdat_vld_r[11][1][21]) begin
        scalar_argdone [11][1][21] = 1;
    end
    scalar_adr[11][1][21] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][21]) begin
        scalar_argVld[11][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[11][1][21] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 0; a = 17;
    if (scalar_rdat_vld_r[13][0][17]) begin
        scalar_argdone [13][0][17] = 1;
    end
    scalar_adr[13][0][17] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][17]) begin
        scalar_argVld[13][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[13][0][17] = 1;
    end

    //------READ (scalar, global adr = 448) comb block-----//
    //s = 16; r = 1; a = 10;
    if (scalar_rdat_vld_r[16][1][10]) begin
        scalar_argdone [16][1][10] = 1;
    end
    scalar_adr[16][1][10] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][10]) begin
        scalar_argVld[16][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[16][1][10] = 1;
    end

    //------READ (scalar, global adr = 432) comb block-----//
    //s = 12; r = 0; a = 20;
    if (scalar_rdat_vld_r[12][0][20]) begin
        scalar_argdone [12][0][20] = 1;
    end
    scalar_adr[12][0][20] = {ap_part[hls_coding_quadtree_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][20]) begin
        scalar_argVld[12][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argVld[12][0][20] = 1;
    end

    //------WRITE (array range, global adr = 286208, width=8, addr_width=32) -----//
    //s = 0; a = 47;
    array_argVld [0][47] = hls_coding_quadtree_hls_dup3_tab_ct_depth_EN_A & (hls_coding_quadtree_hls_dup3_tab_ct_depth_WEN_A != 0);
    array_adr    [0][47] = hls_coding_quadtree_hls_dup3_tab_ct_depth_Addr_A;
    array_wdat   [0][47] = hls_coding_quadtree_hls_dup3_tab_ct_depth_Din_A;

    //------READ (array range, global adr = 286208, width=8, addr_width=32) -----//
    //s = 0; a = 207;
    hls_coding_quadtree_hls_dup3_tab_ct_depth_Dout_A = array_rdat  [0][207];
    //found a write signal pair
    array_argVld [0][207] = hls_coding_quadtree_hls_dup3_tab_ct_depth_EN_A & (hls_coding_quadtree_hls_dup3_tab_ct_depth_WEN_A == 0);
    array_adr    [0][207] = hls_coding_quadtree_hls_dup3_tab_ct_depth_Addr_A;

    hls_coding_quadtree_hls_dup3_ready = array_argRdy[0][47]& array_argRdy[0][207] & ~ap_arb_reload_running_r[hls_coding_quadtree_hls_dup3];
    array_ap_ce[0][47] = ap_ce[hls_coding_quadtree_hls_dup3];
    array_ap_ce[0][207] = ap_ce[hls_coding_quadtree_hls_dup3];

    if (ap_arb_ret[hls_coding_quadtree_hls_dup3] & ~ap_arb_ret_r[hls_coding_quadtree_hls_dup3]) begin
        ap_arb_ret_running[hls_coding_quadtree_hls_dup3] = 1;
        hls_coding_quadtree_hls_dup3_ready = 0;
    end

    scalar_argAckdone_all[hls_coding_quadtree_hls_dup3] = scalar_argAckdone[11][0][5] &
                                                scalar_argAckdone[12][1][4] &
                                                scalar_argAckdone[14][0][5] &
                                                scalar_argAckdone[15][0][5] &
                                                scalar_argAckdone[9][1][5] &
                                                scalar_argAckdone[10][0][5] &
                                                scalar_argAckdone[7][1][3] &
                                                scalar_argAckdone[10][1][5] &
                                                scalar_argAckdone[13][1][3] &
                                                scalar_argAckdone[23][1][3] &
                                                scalar_argAckdone[21][0][4] &
                                                scalar_argAckdone[22][0][4] &
                                                scalar_argAckdone[20][0][5];
    if (ap_arb_ret_running[hls_coding_quadtree_hls_dup3] & scalar_argAckdone_all[hls_coding_quadtree_hls_dup3] &~ ap_arb_reload_running_r[hls_coding_quadtree_hls_dup3]) begin
        ap_arb_reload[hls_coding_quadtree_hls_dup3] = 1;
        ap_arb_reload_running[hls_coding_quadtree_hls_dup3] = 1;
    end

    if (ap_arb_start[hls_coding_quadtree_hls_dup3] &~ ap_arb_start_r[hls_coding_quadtree_hls_dup3]) begin
        ap_arb_start_running[hls_coding_quadtree_hls_dup3] = 1;
    end

    if (ap_arb_start_running[hls_coding_quadtree_hls_dup3] & ~scalar_writing_300& ~scalar_writing_304& ~scalar_writing_312& ~scalar_writing_316& ~scalar_writing_292& ~scalar_writing_296& ~scalar_writing_536& ~scalar_writing_40& ~scalar_writing_308& ~scalar_writing_608& ~scalar_writing_604) begin
        ap_arb_start_running[hls_coding_quadtree_hls_dup3] = 0;
        ap_arb_reload[hls_coding_quadtree_hls_dup3] = 1;
    end

    scalar_argdone_all[hls_coding_quadtree_hls_dup3] = scalar_argdone[11][0][21] &
                                                                scalar_argdone[12][1][18] &
                                                                scalar_argdone[14][0][18] &
                                                                scalar_argdone[15][1][16] &
                                                                scalar_argdone[6][0][23] &
                                                                scalar_argdone[19][1][13] &
                                                                scalar_argdone[9][0][24] &
                                                                scalar_argdone[10][0][20] &
                                                                scalar_argdone[26][0][14] &
                                                                scalar_argdone[22][1][14] &
                                                                scalar_argdone[26][1][13] &
                                                                scalar_argdone[6][1][22] &
                                                                scalar_argdone[10][1][20] &
                                                                scalar_argdone[13][1][16] &
                                                                scalar_argdone[28][1][10] &
                                                                scalar_argdone[2][1][11] &
                                                                scalar_argdone[24][1][10] &
                                                                scalar_argdone[23][1][12] &
                                                                scalar_argdone[11][1][21] &
                                                                scalar_argdone[13][0][17] &
                                                                scalar_argdone[16][1][10] &
                                                                scalar_argdone[12][0][20];

    if (scalar_argdone_all_r[hls_coding_quadtree_hls_dup3]) begin
        scalar_argdone[11][0][21] = 0;
        scalar_argdone[12][1][18] = 0;
        scalar_argdone[14][0][18] = 0;
        scalar_argdone[15][1][16] = 0;
        scalar_argdone[6][0][23] = 0;
        scalar_argdone[19][1][13] = 0;
        scalar_argdone[9][0][24] = 0;
        scalar_argdone[10][0][20] = 0;
        scalar_argdone[26][0][14] = 0;
        scalar_argdone[22][1][14] = 0;
        scalar_argdone[26][1][13] = 0;
        scalar_argdone[6][1][22] = 0;
        scalar_argdone[10][1][20] = 0;
        scalar_argdone[13][1][16] = 0;
        scalar_argdone[28][1][10] = 0;
        scalar_argdone[2][1][11] = 0;
        scalar_argdone[24][1][10] = 0;
        scalar_argdone[23][1][12] = 0;
        scalar_argdone[11][1][21] = 0;
        scalar_argdone[13][0][17] = 0;
        scalar_argdone[16][1][10] = 0;
        scalar_argdone[12][0][20] = 0;

        if (ap_arb_start_r[hls_coding_quadtree_hls_dup3] & ~ap_running_r[hls_coding_quadtree_hls_dup3]) begin
            ap_start[hls_coding_quadtree_hls_dup3] = 1;
            ap_running[hls_coding_quadtree_hls_dup3] = 1;
        end
        else if (ap_arb_ret_running_r[hls_coding_quadtree_hls_dup3]) begin
            ap_arb_ret_running[hls_coding_quadtree_hls_dup3] = 0;
            ap_arb_reload_running[hls_coding_quadtree_hls_dup3] = 0;
        end
    end

    if (ap_start_r[hls_coding_quadtree_hls_dup3] & ap_ready_r[hls_coding_quadtree_hls_dup3]) begin
        ap_start[hls_coding_quadtree_hls_dup3] = 0;
    end

    if (ap_done_r[hls_coding_quadtree_hls_dup3]) begin
        ap_running[hls_coding_quadtree_hls_dup3] = 0;
    end
`endif
    //============================================================
    //hls_coding_unit_hls       (f = 18)
    //============================================================
`ifdef enable_connect_hls_coding_unit_hls
    //------READ (scalar, global adr = 420) comb block-----//
    //s = 9; r = 1; a = 24;
    if (scalar_rdat_vld_r[9][1][24]) begin
        scalar_argdone [9][1][24] = 1;
    end
    scalar_adr[9][1][24] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][24]) begin
        scalar_argVld[9][1][24] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[9][1][24] = 1;
    end

    //------READ (scalar, global adr = 380) comb block-----//
    //s = 31; r = 0; a = 18;
    if (scalar_rdat_vld_r[31][0][18]) begin
        scalar_argdone [31][0][18] = 1;
    end
    scalar_adr[31][0][18] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][18]) begin
        scalar_argVld[31][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[31][0][18] = 1;
    end

    //------READ (scalar, global adr = 1164) comb block-----//
    //s = 3; r = 1; a = 10;
    if (scalar_rdat_vld_r[3][1][10]) begin
        scalar_argdone [3][1][10] = 1;
    end
    scalar_adr[3][1][10] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][10]) begin
        scalar_argVld[3][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[3][1][10] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 0; a = 22;
    if (scalar_rdat_vld_r[11][0][22]) begin
        scalar_argdone [11][0][22] = 1;
    end
    scalar_adr[11][0][22] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][22]) begin
        scalar_argVld[11][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[11][0][22] = 1;
    end

    //------READ (scalar, global adr = 476) comb block-----//
    //s = 23; r = 0; a = 14;
    if (scalar_rdat_vld_r[23][0][14]) begin
        scalar_argdone [23][0][14] = 1;
    end
    scalar_adr[23][0][14] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][14]) begin
        scalar_argVld[23][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[23][0][14] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 0; a = 17;
    if (scalar_rdat_vld_r[15][0][17]) begin
        scalar_argdone [15][0][17] = 1;
    end
    scalar_adr[15][0][17] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][17]) begin
        scalar_argVld[15][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[15][0][17] = 1;
    end

    //------WRITE (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 5;
    if (scalar_argAck [15][1][5]) begin
        scalar_argVld [15][1][5] = 0;
        scalar_argAckdone [15][1][5] = 1;
    end
    if (hls_coding_unit_hls_cu_transquant_bypass_flag_o_ap_vld_r) begin
        scalar_argVld [15][1][5] = 1;
        scalar_argAckdone [15][1][5] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][5] = hls_coding_unit_hls_cu_transquant_bypass_flag_o_r;
    scalar_adr    [15][1][5] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 28) comb block-----//
    //s = 7; r = 0; a = 16;
    if (scalar_rdat_vld_r[7][0][16]) begin
        scalar_argdone [7][0][16] = 1;
    end
    scalar_adr[7][0][16] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][16]) begin
        scalar_argVld[7][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[7][0][16] = 1;
    end

    //------WRITE (scalar, global adr = 28) comb block-----//
    //s = 7; r = 0; a = 4;
    if (scalar_argAck [7][0][4]) begin
        scalar_argVld [7][0][4] = 0;
        scalar_argAckdone [7][0][4] = 1;
    end
    if (hls_coding_unit_hls_pcm_flag_o_ap_vld_r) begin
        scalar_argVld [7][0][4] = 1;
        scalar_argAckdone [7][0][4] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][4] = hls_coding_unit_hls_pcm_flag_o_r;
    scalar_adr    [7][0][4] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 504) comb block-----//
    //s = 30; r = 1; a = 7;
    if (scalar_rdat_vld_r[30][1][7]) begin
        scalar_argdone [30][1][7] = 1;
    end
    scalar_adr[30][1][7] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][7]) begin
        scalar_argVld[30][1][7] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[30][1][7] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 1; a = 19;
    if (scalar_rdat_vld_r[12][1][19]) begin
        scalar_argdone [12][1][19] = 1;
    end
    scalar_adr[12][1][19] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][19]) begin
        scalar_argVld[12][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[12][1][19] = 1;
    end

    //------WRITE (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 5;
    if (scalar_argAck [12][0][5]) begin
        scalar_argVld [12][0][5] = 0;
        scalar_argAckdone [12][0][5] = 1;
    end
    if (hls_coding_unit_hls_pred_mode_o_ap_vld_r) begin
        scalar_argVld [12][0][5] = 1;
        scalar_argAckdone [12][0][5] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][5] = hls_coding_unit_hls_pred_mode_o_r;
    scalar_adr    [12][0][5] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 1; a = 17;
    if (scalar_rdat_vld_r[13][1][17]) begin
        scalar_argdone [13][1][17] = 1;
    end
    scalar_adr[13][1][17] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][17]) begin
        scalar_argVld[13][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[13][1][17] = 1;
    end

    //------WRITE (scalar, global adr = 564) comb block-----//
    //s = 13; r = 0; a = 4;
    if (scalar_argAck [13][0][4]) begin
        scalar_argVld [13][0][4] = 0;
        scalar_argAckdone [13][0][4] = 1;
    end
    if (hls_coding_unit_hls_part_mode_o_ap_vld_r) begin
        scalar_argVld [13][0][4] = 1;
        scalar_argAckdone [13][0][4] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][4] = hls_coding_unit_hls_part_mode_o_r;
    scalar_adr    [13][0][4] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 576) comb block-----//
    //s = 16; r = 0; a = 2;
    if (scalar_argAck [16][0][2]) begin
        scalar_argVld [16][0][2] = 0;
        scalar_argAckdone [16][0][2] = 1;
    end
    if (hls_coding_unit_hls_max_trafo_depth_ap_vld_r) begin
        scalar_argVld [16][0][2] = 1;
        scalar_argAckdone [16][0][2] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][0][2] = hls_coding_unit_hls_max_trafo_depth_r;
    scalar_adr    [16][0][2] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 32) comb block-----//
    //s = 8; r = 1; a = 20;
    if (scalar_rdat_vld_r[8][1][20]) begin
        scalar_argdone [8][1][20] = 1;
    end
    scalar_adr[8][1][20] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][20]) begin
        scalar_argVld[8][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[8][1][20] = 1;
    end

    //------WRITE (scalar, global adr = 32) comb block-----//
    //s = 8; r = 0; a = 4;
    if (scalar_argAck [8][0][4]) begin
        scalar_argVld [8][0][4] = 0;
        scalar_argAckdone [8][0][4] = 1;
    end
    if (hls_coding_unit_hls_cb_size_o_ap_vld_r) begin
        scalar_argVld [8][0][4] = 1;
        scalar_argAckdone [8][0][4] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][4] = hls_coding_unit_hls_cb_size_o_r;
    scalar_adr    [8][0][4] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 44) comb block-----//
    //s = 11; r = 1; a = 22;
    if (scalar_rdat_vld_r[11][1][22]) begin
        scalar_argdone [11][1][22] = 1;
    end
    scalar_adr[11][1][22] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][22]) begin
        scalar_argVld[11][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[11][1][22] = 1;
    end

    //------WRITE (scalar, global adr = 44) comb block-----//
    //s = 11; r = 1; a = 5;
    if (scalar_argAck [11][1][5]) begin
        scalar_argVld [11][1][5] = 0;
        scalar_argAckdone [11][1][5] = 1;
    end
    if (hls_coding_unit_hls_idx_o_ap_vld_r) begin
        scalar_argVld [11][1][5] = 1;
        scalar_argAckdone [11][1][5] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][1][5] = hls_coding_unit_hls_idx_o_r;
    scalar_adr    [11][1][5] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1168) comb block-----//
    //s = 4; r = 1; a = 0;
    if (scalar_argAck [4][1][0]) begin
        scalar_argVld [4][1][0] = 0;
        scalar_argAckdone [4][1][0] = 1;
    end
    if (hls_coding_unit_hls_xm_xBase_ap_vld_r) begin
        scalar_argVld [4][1][0] = 1;
        scalar_argAckdone [4][1][0] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][1][0] = hls_coding_unit_hls_xm_xBase_r;
    scalar_adr    [4][1][0] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1172) comb block-----//
    //s = 5; r = 0; a = 4;
    if (scalar_argAck [5][0][4]) begin
        scalar_argVld [5][0][4] = 0;
        scalar_argAckdone [5][0][4] = 1;
    end
    if (hls_coding_unit_hls_xm_yBase_ap_vld_r) begin
        scalar_argVld [5][0][4] = 1;
        scalar_argAckdone [5][0][4] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][4] = hls_coding_unit_hls_xm_yBase_r;
    scalar_adr    [5][0][4] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1176) comb block-----//
    //s = 6; r = 0; a = 4;
    if (scalar_argAck [6][0][4]) begin
        scalar_argVld [6][0][4] = 0;
        scalar_argAckdone [6][0][4] = 1;
    end
    if (hls_coding_unit_hls_xm_cb_xBase_ap_vld_r) begin
        scalar_argVld [6][0][4] = 1;
        scalar_argAckdone [6][0][4] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][4] = hls_coding_unit_hls_xm_cb_xBase_r;
    scalar_adr    [6][0][4] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1180) comb block-----//
    //s = 7; r = 1; a = 4;
    if (scalar_argAck [7][1][4]) begin
        scalar_argVld [7][1][4] = 0;
        scalar_argAckdone [7][1][4] = 1;
    end
    if (hls_coding_unit_hls_xm_cb_yBase_ap_vld_r) begin
        scalar_argVld [7][1][4] = 1;
        scalar_argAckdone [7][1][4] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][4] = hls_coding_unit_hls_xm_cb_yBase_r;
    scalar_adr    [7][1][4] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1184) comb block-----//
    //s = 8; r = 1; a = 4;
    if (scalar_argAck [8][1][4]) begin
        scalar_argVld [8][1][4] = 0;
        scalar_argAckdone [8][1][4] = 1;
    end
    if (hls_coding_unit_hls_xm_log2_cb_size_ap_vld_r) begin
        scalar_argVld [8][1][4] = 1;
        scalar_argAckdone [8][1][4] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][4] = hls_coding_unit_hls_xm_log2_cb_size_r;
    scalar_adr    [8][1][4] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1268) comb block-----//
    //s = 29; r = 1; a = 20;
    if (scalar_rdat_vld_r[29][1][20]) begin
        scalar_argdone [29][1][20] = 1;
    end
    scalar_adr[29][1][20] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][20]) begin
        scalar_argVld[29][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[29][1][20] = 1;
    end

    //------READ (scalar, global adr = 1264) comb block-----//
    //s = 28; r = 0; a = 11;
    if (scalar_rdat_vld_r[28][0][11]) begin
        scalar_argdone [28][0][11] = 1;
    end
    scalar_adr[28][0][11] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][11]) begin
        scalar_argVld[28][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[28][0][11] = 1;
    end

    //------READ (scalar, global adr = 1272) comb block-----//
    //s = 30; r = 0; a = 8;
    if (scalar_rdat_vld_r[30][0][8]) begin
        scalar_argdone [30][0][8] = 1;
    end
    scalar_adr[30][0][8] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][8]) begin
        scalar_argVld[30][0][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[30][0][8] = 1;
    end

    //------READ (scalar, global adr = 1276) comb block-----//
    //s = 31; r = 1; a = 17;
    if (scalar_rdat_vld_r[31][1][17]) begin
        scalar_argdone [31][1][17] = 1;
    end
    scalar_adr[31][1][17] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][17]) begin
        scalar_argVld[31][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[31][1][17] = 1;
    end

    //------READ (scalar, global adr = 1280) comb block-----//
    //s = 0; r = 1; a = 17;
    if (scalar_rdat_vld_r[0][1][17]) begin
        scalar_argdone [0][1][17] = 1;
    end
    scalar_adr[0][1][17] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][17]) begin
        scalar_argVld[0][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[0][1][17] = 1;
    end

    //------READ (scalar, global adr = 1284) comb block-----//
    //s = 1; r = 0; a = 14;
    if (scalar_rdat_vld_r[1][0][14]) begin
        scalar_argdone [1][0][14] = 1;
    end
    scalar_adr[1][0][14] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][14]) begin
        scalar_argVld[1][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[1][0][14] = 1;
    end

    //------READ (scalar, global adr = 1240) comb block-----//
    //s = 22; r = 0; a = 16;
    if (scalar_rdat_vld_r[22][0][16]) begin
        scalar_argdone [22][0][16] = 1;
    end
    scalar_adr[22][0][16] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][16]) begin
        scalar_argVld[22][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[22][0][16] = 1;
    end

    //------WRITE (scalar, global adr = 36) comb block-----//
    //s = 9; r = 0; a = 6;
    if (scalar_argAck [9][0][6]) begin
        scalar_argVld [9][0][6] = 0;
        scalar_argAckdone [9][0][6] = 1;
    end
    if (hls_coding_unit_hls_length_r_ap_vld_r) begin
        scalar_argVld [9][0][6] = 1;
        scalar_argAckdone [9][0][6] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][6] = hls_coding_unit_hls_length_r_r;
    scalar_adr    [9][0][6] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 544) comb block-----//
    //s = 8; r = 0; a = 5;
    if (scalar_argAck [8][0][5]) begin
        scalar_argVld [8][0][5] = 0;
        scalar_argAckdone [8][0][5] = 1;
    end
    if (hls_coding_unit_hls_xm_x_ap_vld_r) begin
        scalar_argVld [8][0][5] = 1;
        scalar_argAckdone [8][0][5] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][5] = hls_coding_unit_hls_xm_x_r;
    scalar_adr    [8][0][5] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 548) comb block-----//
    //s = 9; r = 1; a = 6;
    if (scalar_argAck [9][1][6]) begin
        scalar_argVld [9][1][6] = 0;
        scalar_argAckdone [9][1][6] = 1;
    end
    if (hls_coding_unit_hls_xm_y_ap_vld_r) begin
        scalar_argVld [9][1][6] = 1;
        scalar_argAckdone [9][1][6] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][6] = hls_coding_unit_hls_xm_y_r;
    scalar_adr    [9][1][6] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 0; a = 2;
    if (scalar_argAck [0][0][2]) begin
        scalar_argVld [0][0][2] = 0;
        scalar_argAckdone [0][0][2] = 1;
    end
    if (hls_coding_unit_hls_pu_intra_pred_mode_0_ap_vld_r) begin
        scalar_argVld [0][0][2] = 1;
        scalar_argAckdone [0][0][2] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][2] = hls_coding_unit_hls_pu_intra_pred_mode_0_r;
    scalar_adr    [0][0][2] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 1; a = 2;
    if (scalar_argAck [0][1][2]) begin
        scalar_argVld [0][1][2] = 0;
        scalar_argAckdone [0][1][2] = 1;
    end
    if (hls_coding_unit_hls_pu_intra_pred_mode_1_ap_vld_r) begin
        scalar_argVld [0][1][2] = 1;
        scalar_argAckdone [0][1][2] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][2] = hls_coding_unit_hls_pu_intra_pred_mode_1_r;
    scalar_adr    [0][1][2] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 0; a = 3;
    if (scalar_argAck [0][0][3]) begin
        scalar_argVld [0][0][3] = 0;
        scalar_argAckdone [0][0][3] = 1;
    end
    if (hls_coding_unit_hls_pu_intra_pred_mode_2_ap_vld_r) begin
        scalar_argVld [0][0][3] = 1;
        scalar_argAckdone [0][0][3] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][3] = hls_coding_unit_hls_pu_intra_pred_mode_2_r;
    scalar_adr    [0][0][3] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 1; a = 3;
    if (scalar_argAck [0][1][3]) begin
        scalar_argVld [0][1][3] = 0;
        scalar_argAckdone [0][1][3] = 1;
    end
    if (hls_coding_unit_hls_pu_intra_pred_mode_3_ap_vld_r) begin
        scalar_argVld [0][1][3] = 1;
        scalar_argAckdone [0][1][3] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][3] = hls_coding_unit_hls_pu_intra_pred_mode_3_r;
    scalar_adr    [0][1][3] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 540) comb block-----//
    //s = 7; r = 0; a = 5;
    if (scalar_argAck [7][0][5]) begin
        scalar_argVld [7][0][5] = 0;
        scalar_argAckdone [7][0][5] = 1;
    end
    if (hls_coding_unit_hls_qPy_pred_ap_vld_r) begin
        scalar_argVld [7][0][5] = 1;
        scalar_argAckdone [7][0][5] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][5] = hls_coding_unit_hls_qPy_pred_r;
    scalar_adr    [7][0][5] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 24) comb block-----//
    //s = 6; r = 1; a = 4;
    if (scalar_argAck [6][1][4]) begin
        scalar_argVld [6][1][4] = 0;
        scalar_argAckdone [6][1][4] = 1;
    end
    if (hls_coding_unit_hls_skip_flag_start_ap_vld_r) begin
        scalar_argVld [6][1][4] = 1;
        scalar_argAckdone [6][1][4] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][4] = hls_coding_unit_hls_skip_flag_start_r;
    scalar_adr    [6][1][4] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 1; a = 11;
    if (scalar_rdat_vld_r[28][1][11]) begin
        scalar_argdone [28][1][11] = 1;
    end
    scalar_adr[28][1][11] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][11]) begin
        scalar_argVld[28][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[28][1][11] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 15;
    if (scalar_rdat_vld_r[26][0][15]) begin
        scalar_argdone [26][0][15] = 1;
    end
    scalar_adr[26][0][15] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][15]) begin
        scalar_argVld[26][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[26][0][15] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 0; a = 18;
    if (scalar_rdat_vld_r[13][0][18]) begin
        scalar_argdone [13][0][18] = 1;
    end
    scalar_adr[13][0][18] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][18]) begin
        scalar_argVld[13][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[13][0][18] = 1;
    end

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 0; a = 24;
    if (scalar_rdat_vld_r[6][0][24]) begin
        scalar_argdone [6][0][24] = 1;
    end
    scalar_adr[6][0][24] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][24]) begin
        scalar_argVld[6][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[6][0][24] = 1;
    end

    //------READ (scalar, global adr = 440) comb block-----//
    //s = 14; r = 1; a = 18;
    if (scalar_rdat_vld_r[14][1][18]) begin
        scalar_argdone [14][1][18] = 1;
    end
    scalar_adr[14][1][18] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][18]) begin
        scalar_argVld[14][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[14][1][18] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 0; a = 13;
    if (scalar_rdat_vld_r[2][0][13]) begin
        scalar_argdone [2][0][13] = 1;
    end
    scalar_adr[2][0][13] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][13]) begin
        scalar_argVld[2][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[2][0][13] = 1;
    end

    //------WRITE (scalar, global adr = 568) comb block-----//
    //s = 14; r = 1; a = 5;
    if (scalar_argAck [14][1][5]) begin
        scalar_argVld [14][1][5] = 0;
        scalar_argAckdone [14][1][5] = 1;
    end
    if (hls_coding_unit_hls_intra_split_flag_ap_vld_r) begin
        scalar_argVld [14][1][5] = 1;
        scalar_argAckdone [14][1][5] = 0;
        ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][5] = hls_coding_unit_hls_intra_split_flag_r;
    scalar_adr    [14][1][5] = {ap_part_w[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 1; a = 12;
    if (scalar_rdat_vld_r[17][1][12]) begin
        scalar_argdone [17][1][12] = 1;
    end
    scalar_adr[17][1][12] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][12]) begin
        scalar_argVld[17][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[17][1][12] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 0; a = 12;
    if (scalar_rdat_vld_r[24][0][12]) begin
        scalar_argdone [24][0][12] = 1;
    end
    scalar_adr[24][0][12] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][12]) begin
        scalar_argVld[24][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[24][0][12] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 13;
    if (scalar_rdat_vld_r[23][1][13]) begin
        scalar_argdone [23][1][13] = 1;
    end
    scalar_adr[23][1][13] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][13]) begin
        scalar_argVld[23][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[23][1][13] = 1;
    end

    //------READ (scalar, global adr = 320) comb block-----//
    //s = 16; r = 0; a = 12;
    if (scalar_rdat_vld_r[16][0][12]) begin
        scalar_argdone [16][0][12] = 1;
    end
    scalar_adr[16][0][12] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][12]) begin
        scalar_argVld[16][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[16][0][12] = 1;
    end

    //------READ (scalar, global adr = 400) comb block-----//
    //s = 4; r = 0; a = 12;
    if (scalar_rdat_vld_r[4][0][12]) begin
        scalar_argdone [4][0][12] = 1;
    end
    scalar_adr[4][0][12] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][12]) begin
        scalar_argVld[4][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[4][0][12] = 1;
    end

    //------READ (scalar, global adr = 412) comb block-----//
    //s = 7; r = 1; a = 15;
    if (scalar_rdat_vld_r[7][1][15]) begin
        scalar_argdone [7][1][15] = 1;
    end
    scalar_adr[7][1][15] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][15]) begin
        scalar_argVld[7][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[7][1][15] = 1;
    end

    //------READ (scalar, global adr = 416) comb block-----//
    //s = 8; r = 0; a = 21;
    if (scalar_rdat_vld_r[8][0][21]) begin
        scalar_argdone [8][0][21] = 1;
    end
    scalar_adr[8][0][21] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][21]) begin
        scalar_argVld[8][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[8][0][21] = 1;
    end

    //------READ (scalar, global adr = 464) comb block-----//
    //s = 20; r = 1; a = 12;
    if (scalar_rdat_vld_r[20][1][12]) begin
        scalar_argdone [20][1][12] = 1;
    end
    scalar_adr[20][1][12] = {ap_part[hls_coding_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][12]) begin
        scalar_argVld[20][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls]) begin
        scalar_argVld[20][1][12] = 1;
    end

    //------WRITE (array range, global adr = 286176, width=8, addr_width=32) -----//
    //s = 0; a = 48;
    array_argVld [0][48] = hls_coding_unit_hls_skip_flag_EN_A & (hls_coding_unit_hls_skip_flag_WEN_A != 0);
    array_adr    [0][48] = hls_coding_unit_hls_skip_flag_Addr_A;
    array_wdat   [0][48] = hls_coding_unit_hls_skip_flag_Din_A;

    //------READ (array range, global adr = 286176, width=8, addr_width=32) -----//
    //s = 0; a = 208;
    hls_coding_unit_hls_skip_flag_Dout_A = array_rdat  [0][208];
    //found a write signal pair
    array_argVld [0][208] = hls_coding_unit_hls_skip_flag_EN_A & (hls_coding_unit_hls_skip_flag_WEN_A == 0);
    array_adr    [0][208] = hls_coding_unit_hls_skip_flag_Addr_A;

    //------WRITE (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 49;
    array_argVld [0][49] = hls_coding_unit_hls_qp_y_tab_EN_A & (hls_coding_unit_hls_qp_y_tab_WEN_A != 0);
    array_adr    [0][49] = hls_coding_unit_hls_qp_y_tab_Addr_A;
    array_wdat   [0][49] = hls_coding_unit_hls_qp_y_tab_Din_A;

    //------READ (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 209;
    hls_coding_unit_hls_qp_y_tab_Dout_A = array_rdat  [0][209];
    //found a write signal pair
    array_argVld [0][209] = hls_coding_unit_hls_qp_y_tab_EN_A & (hls_coding_unit_hls_qp_y_tab_WEN_A == 0);
    array_adr    [0][209] = hls_coding_unit_hls_qp_y_tab_Addr_A;

    //------WRITE (array range, global adr = 286208, width=8, addr_width=32) -----//
    //s = 0; a = 50;
    array_argVld [0][50] = hls_coding_unit_hls_tab_ct_depth_EN_A & (hls_coding_unit_hls_tab_ct_depth_WEN_A != 0);
    array_adr    [0][50] = hls_coding_unit_hls_tab_ct_depth_Addr_A;
    array_wdat   [0][50] = hls_coding_unit_hls_tab_ct_depth_Din_A;

    //------READ (array range, global adr = 286208, width=8, addr_width=32) -----//
    //s = 0; a = 210;
    hls_coding_unit_hls_tab_ct_depth_Dout_A = array_rdat  [0][210];
    //found a write signal pair
    array_argVld [0][210] = hls_coding_unit_hls_tab_ct_depth_EN_A & (hls_coding_unit_hls_tab_ct_depth_WEN_A == 0);
    array_adr    [0][210] = hls_coding_unit_hls_tab_ct_depth_Addr_A;

    hls_coding_unit_hls_ready = array_argRdy[0][48]& array_argRdy[0][208]& array_argRdy[0][49]& array_argRdy[0][209]& array_argRdy[0][50]& array_argRdy[0][210] & ~ap_arb_reload_running_r[hls_coding_unit_hls];
    array_ap_ce[0][48] = ap_ce[hls_coding_unit_hls];
    array_ap_ce[0][208] = ap_ce[hls_coding_unit_hls];
    array_ap_ce[0][49] = ap_ce[hls_coding_unit_hls];
    array_ap_ce[0][209] = ap_ce[hls_coding_unit_hls];
    array_ap_ce[0][50] = ap_ce[hls_coding_unit_hls];
    array_ap_ce[0][210] = ap_ce[hls_coding_unit_hls];

    if (ap_arb_ret[hls_coding_unit_hls] & ~ap_arb_ret_r[hls_coding_unit_hls]) begin
        ap_arb_ret_running[hls_coding_unit_hls] = 1;
        hls_coding_unit_hls_ready = 0;
    end

    scalar_argAckdone_all[hls_coding_unit_hls] = scalar_argAckdone[15][1][5] &
                                                scalar_argAckdone[7][0][4] &
                                                scalar_argAckdone[12][0][5] &
                                                scalar_argAckdone[13][0][4] &
                                                scalar_argAckdone[16][0][2] &
                                                scalar_argAckdone[8][0][4] &
                                                scalar_argAckdone[11][1][5] &
                                                scalar_argAckdone[4][1][0] &
                                                scalar_argAckdone[5][0][4] &
                                                scalar_argAckdone[6][0][4] &
                                                scalar_argAckdone[7][1][4] &
                                                scalar_argAckdone[8][1][4] &
                                                scalar_argAckdone[9][0][6] &
                                                scalar_argAckdone[8][0][5] &
                                                scalar_argAckdone[9][1][6] &
                                                scalar_argAckdone[0][0][2] &
                                                scalar_argAckdone[0][1][2] &
                                                scalar_argAckdone[0][0][3] &
                                                scalar_argAckdone[0][1][3] &
                                                scalar_argAckdone[7][0][5] &
                                                scalar_argAckdone[6][1][4] &
                                                scalar_argAckdone[14][1][5];
    if (ap_arb_ret_running[hls_coding_unit_hls] & scalar_argAckdone_all[hls_coding_unit_hls] &~ ap_arb_reload_running_r[hls_coding_unit_hls]) begin
        ap_arb_reload[hls_coding_unit_hls] = 1;
        ap_arb_reload_running[hls_coding_unit_hls] = 1;
    end

    if (ap_arb_start[hls_coding_unit_hls] &~ ap_arb_start_r[hls_coding_unit_hls]) begin
        ap_arb_start_running[hls_coding_unit_hls] = 1;
    end

    if (ap_arb_start_running[hls_coding_unit_hls] & ~scalar_writing_476& ~scalar_writing_572& ~scalar_writing_28& ~scalar_writing_504& ~scalar_writing_560& ~scalar_writing_564& ~scalar_writing_32& ~scalar_writing_44& ~scalar_writing_536& ~scalar_writing_608& ~scalar_writing_604& ~scalar_writing_464) begin
        ap_arb_start_running[hls_coding_unit_hls] = 0;
        ap_arb_reload[hls_coding_unit_hls] = 1;
    end

    scalar_argdone_all[hls_coding_unit_hls] = scalar_argdone[9][1][24] &
                                                                scalar_argdone[31][0][18] &
                                                                scalar_argdone[3][1][10] &
                                                                scalar_argdone[11][0][22] &
                                                                scalar_argdone[23][0][14] &
                                                                scalar_argdone[15][0][17] &
                                                                scalar_argdone[7][0][16] &
                                                                scalar_argdone[30][1][7] &
                                                                scalar_argdone[12][1][19] &
                                                                scalar_argdone[13][1][17] &
                                                                scalar_argdone[8][1][20] &
                                                                scalar_argdone[11][1][22] &
                                                                scalar_argdone[29][1][20] &
                                                                scalar_argdone[28][0][11] &
                                                                scalar_argdone[30][0][8] &
                                                                scalar_argdone[31][1][17] &
                                                                scalar_argdone[0][1][17] &
                                                                scalar_argdone[1][0][14] &
                                                                scalar_argdone[22][0][16] &
                                                                scalar_argdone[28][1][11] &
                                                                scalar_argdone[26][0][15] &
                                                                scalar_argdone[13][0][18] &
                                                                scalar_argdone[6][0][24] &
                                                                scalar_argdone[14][1][18] &
                                                                scalar_argdone[2][0][13] &
                                                                scalar_argdone[17][1][12] &
                                                                scalar_argdone[24][0][12] &
                                                                scalar_argdone[23][1][13] &
                                                                scalar_argdone[16][0][12] &
                                                                scalar_argdone[4][0][12] &
                                                                scalar_argdone[7][1][15] &
                                                                scalar_argdone[8][0][21] &
                                                                scalar_argdone[20][1][12];

    if (scalar_argdone_all_r[hls_coding_unit_hls]) begin
        scalar_argdone[9][1][24] = 0;
        scalar_argdone[31][0][18] = 0;
        scalar_argdone[3][1][10] = 0;
        scalar_argdone[11][0][22] = 0;
        scalar_argdone[23][0][14] = 0;
        scalar_argdone[15][0][17] = 0;
        scalar_argdone[7][0][16] = 0;
        scalar_argdone[30][1][7] = 0;
        scalar_argdone[12][1][19] = 0;
        scalar_argdone[13][1][17] = 0;
        scalar_argdone[8][1][20] = 0;
        scalar_argdone[11][1][22] = 0;
        scalar_argdone[29][1][20] = 0;
        scalar_argdone[28][0][11] = 0;
        scalar_argdone[30][0][8] = 0;
        scalar_argdone[31][1][17] = 0;
        scalar_argdone[0][1][17] = 0;
        scalar_argdone[1][0][14] = 0;
        scalar_argdone[22][0][16] = 0;
        scalar_argdone[28][1][11] = 0;
        scalar_argdone[26][0][15] = 0;
        scalar_argdone[13][0][18] = 0;
        scalar_argdone[6][0][24] = 0;
        scalar_argdone[14][1][18] = 0;
        scalar_argdone[2][0][13] = 0;
        scalar_argdone[17][1][12] = 0;
        scalar_argdone[24][0][12] = 0;
        scalar_argdone[23][1][13] = 0;
        scalar_argdone[16][0][12] = 0;
        scalar_argdone[4][0][12] = 0;
        scalar_argdone[7][1][15] = 0;
        scalar_argdone[8][0][21] = 0;
        scalar_argdone[20][1][12] = 0;

        if (ap_arb_start_r[hls_coding_unit_hls] & ~ap_running_r[hls_coding_unit_hls]) begin
            ap_start[hls_coding_unit_hls] = 1;
            ap_running[hls_coding_unit_hls] = 1;
        end
        else if (ap_arb_ret_running_r[hls_coding_unit_hls]) begin
            ap_arb_ret_running[hls_coding_unit_hls] = 0;
            ap_arb_reload_running[hls_coding_unit_hls] = 0;
        end
    end

    if (ap_start_r[hls_coding_unit_hls] & ap_ready_r[hls_coding_unit_hls]) begin
        ap_start[hls_coding_unit_hls] = 0;
    end

    if (ap_done_r[hls_coding_unit_hls]) begin
        ap_running[hls_coding_unit_hls] = 0;
    end
`endif
    //============================================================
    //hls_coding_unit_hls_dup1       (f = 19)
    //============================================================
`ifdef enable_connect_hls_coding_unit_hls_dup1
    //------READ (scalar, global adr = 420) comb block-----//
    //s = 9; r = 0; a = 25;
    if (scalar_rdat_vld_r[9][0][25]) begin
        scalar_argdone [9][0][25] = 1;
    end
    scalar_adr[9][0][25] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][25]) begin
        scalar_argVld[9][0][25] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[9][0][25] = 1;
    end

    //------READ (scalar, global adr = 380) comb block-----//
    //s = 31; r = 0; a = 19;
    if (scalar_rdat_vld_r[31][0][19]) begin
        scalar_argdone [31][0][19] = 1;
    end
    scalar_adr[31][0][19] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][19]) begin
        scalar_argVld[31][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[31][0][19] = 1;
    end

    //------READ (scalar, global adr = 1164) comb block-----//
    //s = 3; r = 0; a = 12;
    if (scalar_rdat_vld_r[3][0][12]) begin
        scalar_argdone [3][0][12] = 1;
    end
    scalar_adr[3][0][12] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][12]) begin
        scalar_argVld[3][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[3][0][12] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 0; a = 23;
    if (scalar_rdat_vld_r[11][0][23]) begin
        scalar_argdone [11][0][23] = 1;
    end
    scalar_adr[11][0][23] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][23]) begin
        scalar_argVld[11][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[11][0][23] = 1;
    end

    //------READ (scalar, global adr = 476) comb block-----//
    //s = 23; r = 0; a = 15;
    if (scalar_rdat_vld_r[23][0][15]) begin
        scalar_argdone [23][0][15] = 1;
    end
    scalar_adr[23][0][15] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][15]) begin
        scalar_argVld[23][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[23][0][15] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 17;
    if (scalar_rdat_vld_r[15][1][17]) begin
        scalar_argdone [15][1][17] = 1;
    end
    scalar_adr[15][1][17] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][17]) begin
        scalar_argVld[15][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[15][1][17] = 1;
    end

    //------WRITE (scalar, global adr = 572) comb block-----//
    //s = 15; r = 0; a = 6;
    if (scalar_argAck [15][0][6]) begin
        scalar_argVld [15][0][6] = 0;
        scalar_argAckdone [15][0][6] = 1;
    end
    if (hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_ap_vld_r) begin
        scalar_argVld [15][0][6] = 1;
        scalar_argAckdone [15][0][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][6] = hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_r;
    scalar_adr    [15][0][6] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 28) comb block-----//
    //s = 7; r = 0; a = 17;
    if (scalar_rdat_vld_r[7][0][17]) begin
        scalar_argdone [7][0][17] = 1;
    end
    scalar_adr[7][0][17] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][17]) begin
        scalar_argVld[7][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[7][0][17] = 1;
    end

    //------WRITE (scalar, global adr = 28) comb block-----//
    //s = 7; r = 1; a = 5;
    if (scalar_argAck [7][1][5]) begin
        scalar_argVld [7][1][5] = 0;
        scalar_argAckdone [7][1][5] = 1;
    end
    if (hls_coding_unit_hls_dup1_pcm_flag_o_ap_vld_r) begin
        scalar_argVld [7][1][5] = 1;
        scalar_argAckdone [7][1][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][5] = hls_coding_unit_hls_dup1_pcm_flag_o_r;
    scalar_adr    [7][1][5] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 504) comb block-----//
    //s = 30; r = 1; a = 8;
    if (scalar_rdat_vld_r[30][1][8]) begin
        scalar_argdone [30][1][8] = 1;
    end
    scalar_adr[30][1][8] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][8]) begin
        scalar_argVld[30][1][8] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[30][1][8] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 21;
    if (scalar_rdat_vld_r[12][0][21]) begin
        scalar_argdone [12][0][21] = 1;
    end
    scalar_adr[12][0][21] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][21]) begin
        scalar_argVld[12][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[12][0][21] = 1;
    end

    //------WRITE (scalar, global adr = 560) comb block-----//
    //s = 12; r = 1; a = 5;
    if (scalar_argAck [12][1][5]) begin
        scalar_argVld [12][1][5] = 0;
        scalar_argAckdone [12][1][5] = 1;
    end
    if (hls_coding_unit_hls_dup1_pred_mode_o_ap_vld_r) begin
        scalar_argVld [12][1][5] = 1;
        scalar_argAckdone [12][1][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][5] = hls_coding_unit_hls_dup1_pred_mode_o_r;
    scalar_adr    [12][1][5] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 1; a = 18;
    if (scalar_rdat_vld_r[13][1][18]) begin
        scalar_argdone [13][1][18] = 1;
    end
    scalar_adr[13][1][18] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][18]) begin
        scalar_argVld[13][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[13][1][18] = 1;
    end

    //------WRITE (scalar, global adr = 564) comb block-----//
    //s = 13; r = 1; a = 4;
    if (scalar_argAck [13][1][4]) begin
        scalar_argVld [13][1][4] = 0;
        scalar_argAckdone [13][1][4] = 1;
    end
    if (hls_coding_unit_hls_dup1_part_mode_o_ap_vld_r) begin
        scalar_argVld [13][1][4] = 1;
        scalar_argAckdone [13][1][4] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][4] = hls_coding_unit_hls_dup1_part_mode_o_r;
    scalar_adr    [13][1][4] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 576) comb block-----//
    //s = 16; r = 1; a = 2;
    if (scalar_argAck [16][1][2]) begin
        scalar_argVld [16][1][2] = 0;
        scalar_argAckdone [16][1][2] = 1;
    end
    if (hls_coding_unit_hls_dup1_max_trafo_depth_ap_vld_r) begin
        scalar_argVld [16][1][2] = 1;
        scalar_argAckdone [16][1][2] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][1][2] = hls_coding_unit_hls_dup1_max_trafo_depth_r;
    scalar_adr    [16][1][2] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 32) comb block-----//
    //s = 8; r = 1; a = 21;
    if (scalar_rdat_vld_r[8][1][21]) begin
        scalar_argdone [8][1][21] = 1;
    end
    scalar_adr[8][1][21] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][21]) begin
        scalar_argVld[8][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[8][1][21] = 1;
    end

    //------WRITE (scalar, global adr = 32) comb block-----//
    //s = 8; r = 1; a = 5;
    if (scalar_argAck [8][1][5]) begin
        scalar_argVld [8][1][5] = 0;
        scalar_argAckdone [8][1][5] = 1;
    end
    if (hls_coding_unit_hls_dup1_cb_size_o_ap_vld_r) begin
        scalar_argVld [8][1][5] = 1;
        scalar_argAckdone [8][1][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][5] = hls_coding_unit_hls_dup1_cb_size_o_r;
    scalar_adr    [8][1][5] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 44) comb block-----//
    //s = 11; r = 1; a = 23;
    if (scalar_rdat_vld_r[11][1][23]) begin
        scalar_argdone [11][1][23] = 1;
    end
    scalar_adr[11][1][23] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][23]) begin
        scalar_argVld[11][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[11][1][23] = 1;
    end

    //------WRITE (scalar, global adr = 44) comb block-----//
    //s = 11; r = 0; a = 6;
    if (scalar_argAck [11][0][6]) begin
        scalar_argVld [11][0][6] = 0;
        scalar_argAckdone [11][0][6] = 1;
    end
    if (hls_coding_unit_hls_dup1_idx_o_ap_vld_r) begin
        scalar_argVld [11][0][6] = 1;
        scalar_argAckdone [11][0][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][0][6] = hls_coding_unit_hls_dup1_idx_o_r;
    scalar_adr    [11][0][6] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1168) comb block-----//
    //s = 4; r = 0; a = 1;
    if (scalar_argAck [4][0][1]) begin
        scalar_argVld [4][0][1] = 0;
        scalar_argAckdone [4][0][1] = 1;
    end
    if (hls_coding_unit_hls_dup1_xm_xBase_ap_vld_r) begin
        scalar_argVld [4][0][1] = 1;
        scalar_argAckdone [4][0][1] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][0][1] = hls_coding_unit_hls_dup1_xm_xBase_r;
    scalar_adr    [4][0][1] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1172) comb block-----//
    //s = 5; r = 1; a = 4;
    if (scalar_argAck [5][1][4]) begin
        scalar_argVld [5][1][4] = 0;
        scalar_argAckdone [5][1][4] = 1;
    end
    if (hls_coding_unit_hls_dup1_xm_yBase_ap_vld_r) begin
        scalar_argVld [5][1][4] = 1;
        scalar_argAckdone [5][1][4] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][4] = hls_coding_unit_hls_dup1_xm_yBase_r;
    scalar_adr    [5][1][4] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1176) comb block-----//
    //s = 6; r = 0; a = 5;
    if (scalar_argAck [6][0][5]) begin
        scalar_argVld [6][0][5] = 0;
        scalar_argAckdone [6][0][5] = 1;
    end
    if (hls_coding_unit_hls_dup1_xm_cb_xBase_ap_vld_r) begin
        scalar_argVld [6][0][5] = 1;
        scalar_argAckdone [6][0][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][5] = hls_coding_unit_hls_dup1_xm_cb_xBase_r;
    scalar_adr    [6][0][5] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1180) comb block-----//
    //s = 7; r = 0; a = 6;
    if (scalar_argAck [7][0][6]) begin
        scalar_argVld [7][0][6] = 0;
        scalar_argAckdone [7][0][6] = 1;
    end
    if (hls_coding_unit_hls_dup1_xm_cb_yBase_ap_vld_r) begin
        scalar_argVld [7][0][6] = 1;
        scalar_argAckdone [7][0][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][6] = hls_coding_unit_hls_dup1_xm_cb_yBase_r;
    scalar_adr    [7][0][6] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1184) comb block-----//
    //s = 8; r = 0; a = 6;
    if (scalar_argAck [8][0][6]) begin
        scalar_argVld [8][0][6] = 0;
        scalar_argAckdone [8][0][6] = 1;
    end
    if (hls_coding_unit_hls_dup1_xm_log2_cb_size_ap_vld_r) begin
        scalar_argVld [8][0][6] = 1;
        scalar_argAckdone [8][0][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][6] = hls_coding_unit_hls_dup1_xm_log2_cb_size_r;
    scalar_adr    [8][0][6] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1268) comb block-----//
    //s = 29; r = 0; a = 21;
    if (scalar_rdat_vld_r[29][0][21]) begin
        scalar_argdone [29][0][21] = 1;
    end
    scalar_adr[29][0][21] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][21]) begin
        scalar_argVld[29][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[29][0][21] = 1;
    end

    //------READ (scalar, global adr = 1264) comb block-----//
    //s = 28; r = 0; a = 12;
    if (scalar_rdat_vld_r[28][0][12]) begin
        scalar_argdone [28][0][12] = 1;
    end
    scalar_adr[28][0][12] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][12]) begin
        scalar_argVld[28][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[28][0][12] = 1;
    end

    //------READ (scalar, global adr = 1272) comb block-----//
    //s = 30; r = 0; a = 9;
    if (scalar_rdat_vld_r[30][0][9]) begin
        scalar_argdone [30][0][9] = 1;
    end
    scalar_adr[30][0][9] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][9]) begin
        scalar_argVld[30][0][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[30][0][9] = 1;
    end

    //------READ (scalar, global adr = 1276) comb block-----//
    //s = 31; r = 1; a = 18;
    if (scalar_rdat_vld_r[31][1][18]) begin
        scalar_argdone [31][1][18] = 1;
    end
    scalar_adr[31][1][18] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][18]) begin
        scalar_argVld[31][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[31][1][18] = 1;
    end

    //------READ (scalar, global adr = 1280) comb block-----//
    //s = 0; r = 0; a = 18;
    if (scalar_rdat_vld_r[0][0][18]) begin
        scalar_argdone [0][0][18] = 1;
    end
    scalar_adr[0][0][18] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][18]) begin
        scalar_argVld[0][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[0][0][18] = 1;
    end

    //------READ (scalar, global adr = 1284) comb block-----//
    //s = 1; r = 1; a = 14;
    if (scalar_rdat_vld_r[1][1][14]) begin
        scalar_argdone [1][1][14] = 1;
    end
    scalar_adr[1][1][14] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][14]) begin
        scalar_argVld[1][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[1][1][14] = 1;
    end

    //------READ (scalar, global adr = 1240) comb block-----//
    //s = 22; r = 1; a = 15;
    if (scalar_rdat_vld_r[22][1][15]) begin
        scalar_argdone [22][1][15] = 1;
    end
    scalar_adr[22][1][15] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][15]) begin
        scalar_argVld[22][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[22][1][15] = 1;
    end

    //------WRITE (scalar, global adr = 36) comb block-----//
    //s = 9; r = 0; a = 7;
    if (scalar_argAck [9][0][7]) begin
        scalar_argVld [9][0][7] = 0;
        scalar_argAckdone [9][0][7] = 1;
    end
    if (hls_coding_unit_hls_dup1_length_r_ap_vld_r) begin
        scalar_argVld [9][0][7] = 1;
        scalar_argAckdone [9][0][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][7] = hls_coding_unit_hls_dup1_length_r_r;
    scalar_adr    [9][0][7] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 544) comb block-----//
    //s = 8; r = 1; a = 6;
    if (scalar_argAck [8][1][6]) begin
        scalar_argVld [8][1][6] = 0;
        scalar_argAckdone [8][1][6] = 1;
    end
    if (hls_coding_unit_hls_dup1_xm_x_ap_vld_r) begin
        scalar_argVld [8][1][6] = 1;
        scalar_argAckdone [8][1][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][6] = hls_coding_unit_hls_dup1_xm_x_r;
    scalar_adr    [8][1][6] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 548) comb block-----//
    //s = 9; r = 1; a = 7;
    if (scalar_argAck [9][1][7]) begin
        scalar_argVld [9][1][7] = 0;
        scalar_argAckdone [9][1][7] = 1;
    end
    if (hls_coding_unit_hls_dup1_xm_y_ap_vld_r) begin
        scalar_argVld [9][1][7] = 1;
        scalar_argAckdone [9][1][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][7] = hls_coding_unit_hls_dup1_xm_y_r;
    scalar_adr    [9][1][7] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 0; a = 4;
    if (scalar_argAck [0][0][4]) begin
        scalar_argVld [0][0][4] = 0;
        scalar_argAckdone [0][0][4] = 1;
    end
    if (hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_ap_vld_r) begin
        scalar_argVld [0][0][4] = 1;
        scalar_argAckdone [0][0][4] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][4] = hls_coding_unit_hls_dup1_pu_intra_pred_mode_0_r;
    scalar_adr    [0][0][4] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 1; a = 4;
    if (scalar_argAck [0][1][4]) begin
        scalar_argVld [0][1][4] = 0;
        scalar_argAckdone [0][1][4] = 1;
    end
    if (hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_ap_vld_r) begin
        scalar_argVld [0][1][4] = 1;
        scalar_argAckdone [0][1][4] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][4] = hls_coding_unit_hls_dup1_pu_intra_pred_mode_1_r;
    scalar_adr    [0][1][4] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 0; a = 5;
    if (scalar_argAck [0][0][5]) begin
        scalar_argVld [0][0][5] = 0;
        scalar_argAckdone [0][0][5] = 1;
    end
    if (hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_ap_vld_r) begin
        scalar_argVld [0][0][5] = 1;
        scalar_argAckdone [0][0][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][5] = hls_coding_unit_hls_dup1_pu_intra_pred_mode_2_r;
    scalar_adr    [0][0][5] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 1; a = 5;
    if (scalar_argAck [0][1][5]) begin
        scalar_argVld [0][1][5] = 0;
        scalar_argAckdone [0][1][5] = 1;
    end
    if (hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_ap_vld_r) begin
        scalar_argVld [0][1][5] = 1;
        scalar_argAckdone [0][1][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][5] = hls_coding_unit_hls_dup1_pu_intra_pred_mode_3_r;
    scalar_adr    [0][1][5] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 540) comb block-----//
    //s = 7; r = 1; a = 6;
    if (scalar_argAck [7][1][6]) begin
        scalar_argVld [7][1][6] = 0;
        scalar_argAckdone [7][1][6] = 1;
    end
    if (hls_coding_unit_hls_dup1_qPy_pred_ap_vld_r) begin
        scalar_argVld [7][1][6] = 1;
        scalar_argAckdone [7][1][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][6] = hls_coding_unit_hls_dup1_qPy_pred_r;
    scalar_adr    [7][1][6] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 24) comb block-----//
    //s = 6; r = 1; a = 5;
    if (scalar_argAck [6][1][5]) begin
        scalar_argVld [6][1][5] = 0;
        scalar_argAckdone [6][1][5] = 1;
    end
    if (hls_coding_unit_hls_dup1_skip_flag_start_ap_vld_r) begin
        scalar_argVld [6][1][5] = 1;
        scalar_argAckdone [6][1][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][5] = hls_coding_unit_hls_dup1_skip_flag_start_r;
    scalar_adr    [6][1][5] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 1; a = 12;
    if (scalar_rdat_vld_r[28][1][12]) begin
        scalar_argdone [28][1][12] = 1;
    end
    scalar_adr[28][1][12] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][12]) begin
        scalar_argVld[28][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[28][1][12] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 14;
    if (scalar_rdat_vld_r[26][1][14]) begin
        scalar_argdone [26][1][14] = 1;
    end
    scalar_adr[26][1][14] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][14]) begin
        scalar_argVld[26][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[26][1][14] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 0; a = 19;
    if (scalar_rdat_vld_r[13][0][19]) begin
        scalar_argdone [13][0][19] = 1;
    end
    scalar_adr[13][0][19] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][19]) begin
        scalar_argVld[13][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[13][0][19] = 1;
    end

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 23;
    if (scalar_rdat_vld_r[6][1][23]) begin
        scalar_argdone [6][1][23] = 1;
    end
    scalar_adr[6][1][23] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][23]) begin
        scalar_argVld[6][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[6][1][23] = 1;
    end

    //------READ (scalar, global adr = 440) comb block-----//
    //s = 14; r = 0; a = 19;
    if (scalar_rdat_vld_r[14][0][19]) begin
        scalar_argdone [14][0][19] = 1;
    end
    scalar_adr[14][0][19] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][19]) begin
        scalar_argVld[14][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[14][0][19] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 1; a = 12;
    if (scalar_rdat_vld_r[2][1][12]) begin
        scalar_argdone [2][1][12] = 1;
    end
    scalar_adr[2][1][12] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][12]) begin
        scalar_argVld[2][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[2][1][12] = 1;
    end

    //------WRITE (scalar, global adr = 568) comb block-----//
    //s = 14; r = 0; a = 6;
    if (scalar_argAck [14][0][6]) begin
        scalar_argVld [14][0][6] = 0;
        scalar_argAckdone [14][0][6] = 1;
    end
    if (hls_coding_unit_hls_dup1_intra_split_flag_ap_vld_r) begin
        scalar_argVld [14][0][6] = 1;
        scalar_argAckdone [14][0][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][6] = hls_coding_unit_hls_dup1_intra_split_flag_r;
    scalar_adr    [14][0][6] = {ap_part_w[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 0; a = 13;
    if (scalar_rdat_vld_r[17][0][13]) begin
        scalar_argdone [17][0][13] = 1;
    end
    scalar_adr[17][0][13] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][13]) begin
        scalar_argVld[17][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[17][0][13] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 11;
    if (scalar_rdat_vld_r[24][1][11]) begin
        scalar_argdone [24][1][11] = 1;
    end
    scalar_adr[24][1][11] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][11]) begin
        scalar_argVld[24][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[24][1][11] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 14;
    if (scalar_rdat_vld_r[23][1][14]) begin
        scalar_argdone [23][1][14] = 1;
    end
    scalar_adr[23][1][14] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][14]) begin
        scalar_argVld[23][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[23][1][14] = 1;
    end

    //------READ (scalar, global adr = 320) comb block-----//
    //s = 16; r = 1; a = 11;
    if (scalar_rdat_vld_r[16][1][11]) begin
        scalar_argdone [16][1][11] = 1;
    end
    scalar_adr[16][1][11] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][11]) begin
        scalar_argVld[16][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[16][1][11] = 1;
    end

    //------READ (scalar, global adr = 400) comb block-----//
    //s = 4; r = 1; a = 12;
    if (scalar_rdat_vld_r[4][1][12]) begin
        scalar_argdone [4][1][12] = 1;
    end
    scalar_adr[4][1][12] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][1][12]) begin
        scalar_argVld[4][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[4][1][12] = 1;
    end

    //------READ (scalar, global adr = 412) comb block-----//
    //s = 7; r = 1; a = 16;
    if (scalar_rdat_vld_r[7][1][16]) begin
        scalar_argdone [7][1][16] = 1;
    end
    scalar_adr[7][1][16] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][16]) begin
        scalar_argVld[7][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[7][1][16] = 1;
    end

    //------READ (scalar, global adr = 416) comb block-----//
    //s = 8; r = 0; a = 22;
    if (scalar_rdat_vld_r[8][0][22]) begin
        scalar_argdone [8][0][22] = 1;
    end
    scalar_adr[8][0][22] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][22]) begin
        scalar_argVld[8][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[8][0][22] = 1;
    end

    //------READ (scalar, global adr = 464) comb block-----//
    //s = 20; r = 0; a = 13;
    if (scalar_rdat_vld_r[20][0][13]) begin
        scalar_argdone [20][0][13] = 1;
    end
    scalar_adr[20][0][13] = {ap_part[hls_coding_unit_hls_dup1][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][13]) begin
        scalar_argVld[20][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup1]) begin
        scalar_argVld[20][0][13] = 1;
    end

    //------WRITE (array range, global adr = 286176, width=8, addr_width=32) -----//
    //s = 0; a = 51;
    array_argVld [0][51] = hls_coding_unit_hls_dup1_skip_flag_EN_A & (hls_coding_unit_hls_dup1_skip_flag_WEN_A != 0);
    array_adr    [0][51] = hls_coding_unit_hls_dup1_skip_flag_Addr_A;
    array_wdat   [0][51] = hls_coding_unit_hls_dup1_skip_flag_Din_A;

    //------READ (array range, global adr = 286176, width=8, addr_width=32) -----//
    //s = 0; a = 211;
    hls_coding_unit_hls_dup1_skip_flag_Dout_A = array_rdat  [0][211];
    //found a write signal pair
    array_argVld [0][211] = hls_coding_unit_hls_dup1_skip_flag_EN_A & (hls_coding_unit_hls_dup1_skip_flag_WEN_A == 0);
    array_adr    [0][211] = hls_coding_unit_hls_dup1_skip_flag_Addr_A;

    //------WRITE (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 52;
    array_argVld [0][52] = hls_coding_unit_hls_dup1_qp_y_tab_EN_A & (hls_coding_unit_hls_dup1_qp_y_tab_WEN_A != 0);
    array_adr    [0][52] = hls_coding_unit_hls_dup1_qp_y_tab_Addr_A;
    array_wdat   [0][52] = hls_coding_unit_hls_dup1_qp_y_tab_Din_A;

    //------READ (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 212;
    hls_coding_unit_hls_dup1_qp_y_tab_Dout_A = array_rdat  [0][212];
    //found a write signal pair
    array_argVld [0][212] = hls_coding_unit_hls_dup1_qp_y_tab_EN_A & (hls_coding_unit_hls_dup1_qp_y_tab_WEN_A == 0);
    array_adr    [0][212] = hls_coding_unit_hls_dup1_qp_y_tab_Addr_A;

    //------WRITE (array range, global adr = 286208, width=8, addr_width=32) -----//
    //s = 0; a = 53;
    array_argVld [0][53] = hls_coding_unit_hls_dup1_tab_ct_depth_EN_A & (hls_coding_unit_hls_dup1_tab_ct_depth_WEN_A != 0);
    array_adr    [0][53] = hls_coding_unit_hls_dup1_tab_ct_depth_Addr_A;
    array_wdat   [0][53] = hls_coding_unit_hls_dup1_tab_ct_depth_Din_A;

    //------READ (array range, global adr = 286208, width=8, addr_width=32) -----//
    //s = 0; a = 213;
    hls_coding_unit_hls_dup1_tab_ct_depth_Dout_A = array_rdat  [0][213];
    //found a write signal pair
    array_argVld [0][213] = hls_coding_unit_hls_dup1_tab_ct_depth_EN_A & (hls_coding_unit_hls_dup1_tab_ct_depth_WEN_A == 0);
    array_adr    [0][213] = hls_coding_unit_hls_dup1_tab_ct_depth_Addr_A;

    hls_coding_unit_hls_dup1_ready = array_argRdy[0][51]& array_argRdy[0][211]& array_argRdy[0][52]& array_argRdy[0][212]& array_argRdy[0][53]& array_argRdy[0][213] & ~ap_arb_reload_running_r[hls_coding_unit_hls_dup1];
    array_ap_ce[0][51] = ap_ce[hls_coding_unit_hls_dup1];
    array_ap_ce[0][211] = ap_ce[hls_coding_unit_hls_dup1];
    array_ap_ce[0][52] = ap_ce[hls_coding_unit_hls_dup1];
    array_ap_ce[0][212] = ap_ce[hls_coding_unit_hls_dup1];
    array_ap_ce[0][53] = ap_ce[hls_coding_unit_hls_dup1];
    array_ap_ce[0][213] = ap_ce[hls_coding_unit_hls_dup1];

    if (ap_arb_ret[hls_coding_unit_hls_dup1] & ~ap_arb_ret_r[hls_coding_unit_hls_dup1]) begin
        ap_arb_ret_running[hls_coding_unit_hls_dup1] = 1;
        hls_coding_unit_hls_dup1_ready = 0;
    end

    scalar_argAckdone_all[hls_coding_unit_hls_dup1] = scalar_argAckdone[15][0][6] &
                                                scalar_argAckdone[7][1][5] &
                                                scalar_argAckdone[12][1][5] &
                                                scalar_argAckdone[13][1][4] &
                                                scalar_argAckdone[16][1][2] &
                                                scalar_argAckdone[8][1][5] &
                                                scalar_argAckdone[11][0][6] &
                                                scalar_argAckdone[4][0][1] &
                                                scalar_argAckdone[5][1][4] &
                                                scalar_argAckdone[6][0][5] &
                                                scalar_argAckdone[7][0][6] &
                                                scalar_argAckdone[8][0][6] &
                                                scalar_argAckdone[9][0][7] &
                                                scalar_argAckdone[8][1][6] &
                                                scalar_argAckdone[9][1][7] &
                                                scalar_argAckdone[0][0][4] &
                                                scalar_argAckdone[0][1][4] &
                                                scalar_argAckdone[0][0][5] &
                                                scalar_argAckdone[0][1][5] &
                                                scalar_argAckdone[7][1][6] &
                                                scalar_argAckdone[6][1][5] &
                                                scalar_argAckdone[14][0][6];
    if (ap_arb_ret_running[hls_coding_unit_hls_dup1] & scalar_argAckdone_all[hls_coding_unit_hls_dup1] &~ ap_arb_reload_running_r[hls_coding_unit_hls_dup1]) begin
        ap_arb_reload[hls_coding_unit_hls_dup1] = 1;
        ap_arb_reload_running[hls_coding_unit_hls_dup1] = 1;
    end

    if (ap_arb_start[hls_coding_unit_hls_dup1] &~ ap_arb_start_r[hls_coding_unit_hls_dup1]) begin
        ap_arb_start_running[hls_coding_unit_hls_dup1] = 1;
    end

    if (ap_arb_start_running[hls_coding_unit_hls_dup1] & ~scalar_writing_476& ~scalar_writing_572& ~scalar_writing_28& ~scalar_writing_504& ~scalar_writing_560& ~scalar_writing_564& ~scalar_writing_32& ~scalar_writing_44& ~scalar_writing_536& ~scalar_writing_608& ~scalar_writing_604& ~scalar_writing_464) begin
        ap_arb_start_running[hls_coding_unit_hls_dup1] = 0;
        ap_arb_reload[hls_coding_unit_hls_dup1] = 1;
    end

    scalar_argdone_all[hls_coding_unit_hls_dup1] = scalar_argdone[9][0][25] &
                                                                scalar_argdone[31][0][19] &
                                                                scalar_argdone[3][0][12] &
                                                                scalar_argdone[11][0][23] &
                                                                scalar_argdone[23][0][15] &
                                                                scalar_argdone[15][1][17] &
                                                                scalar_argdone[7][0][17] &
                                                                scalar_argdone[30][1][8] &
                                                                scalar_argdone[12][0][21] &
                                                                scalar_argdone[13][1][18] &
                                                                scalar_argdone[8][1][21] &
                                                                scalar_argdone[11][1][23] &
                                                                scalar_argdone[29][0][21] &
                                                                scalar_argdone[28][0][12] &
                                                                scalar_argdone[30][0][9] &
                                                                scalar_argdone[31][1][18] &
                                                                scalar_argdone[0][0][18] &
                                                                scalar_argdone[1][1][14] &
                                                                scalar_argdone[22][1][15] &
                                                                scalar_argdone[28][1][12] &
                                                                scalar_argdone[26][1][14] &
                                                                scalar_argdone[13][0][19] &
                                                                scalar_argdone[6][1][23] &
                                                                scalar_argdone[14][0][19] &
                                                                scalar_argdone[2][1][12] &
                                                                scalar_argdone[17][0][13] &
                                                                scalar_argdone[24][1][11] &
                                                                scalar_argdone[23][1][14] &
                                                                scalar_argdone[16][1][11] &
                                                                scalar_argdone[4][1][12] &
                                                                scalar_argdone[7][1][16] &
                                                                scalar_argdone[8][0][22] &
                                                                scalar_argdone[20][0][13];

    if (scalar_argdone_all_r[hls_coding_unit_hls_dup1]) begin
        scalar_argdone[9][0][25] = 0;
        scalar_argdone[31][0][19] = 0;
        scalar_argdone[3][0][12] = 0;
        scalar_argdone[11][0][23] = 0;
        scalar_argdone[23][0][15] = 0;
        scalar_argdone[15][1][17] = 0;
        scalar_argdone[7][0][17] = 0;
        scalar_argdone[30][1][8] = 0;
        scalar_argdone[12][0][21] = 0;
        scalar_argdone[13][1][18] = 0;
        scalar_argdone[8][1][21] = 0;
        scalar_argdone[11][1][23] = 0;
        scalar_argdone[29][0][21] = 0;
        scalar_argdone[28][0][12] = 0;
        scalar_argdone[30][0][9] = 0;
        scalar_argdone[31][1][18] = 0;
        scalar_argdone[0][0][18] = 0;
        scalar_argdone[1][1][14] = 0;
        scalar_argdone[22][1][15] = 0;
        scalar_argdone[28][1][12] = 0;
        scalar_argdone[26][1][14] = 0;
        scalar_argdone[13][0][19] = 0;
        scalar_argdone[6][1][23] = 0;
        scalar_argdone[14][0][19] = 0;
        scalar_argdone[2][1][12] = 0;
        scalar_argdone[17][0][13] = 0;
        scalar_argdone[24][1][11] = 0;
        scalar_argdone[23][1][14] = 0;
        scalar_argdone[16][1][11] = 0;
        scalar_argdone[4][1][12] = 0;
        scalar_argdone[7][1][16] = 0;
        scalar_argdone[8][0][22] = 0;
        scalar_argdone[20][0][13] = 0;

        if (ap_arb_start_r[hls_coding_unit_hls_dup1] & ~ap_running_r[hls_coding_unit_hls_dup1]) begin
            ap_start[hls_coding_unit_hls_dup1] = 1;
            ap_running[hls_coding_unit_hls_dup1] = 1;
        end
        else if (ap_arb_ret_running_r[hls_coding_unit_hls_dup1]) begin
            ap_arb_ret_running[hls_coding_unit_hls_dup1] = 0;
            ap_arb_reload_running[hls_coding_unit_hls_dup1] = 0;
        end
    end

    if (ap_start_r[hls_coding_unit_hls_dup1] & ap_ready_r[hls_coding_unit_hls_dup1]) begin
        ap_start[hls_coding_unit_hls_dup1] = 0;
    end

    if (ap_done_r[hls_coding_unit_hls_dup1]) begin
        ap_running[hls_coding_unit_hls_dup1] = 0;
    end
`endif
    //============================================================
    //hls_coding_unit_hls_dup2       (f = 20)
    //============================================================
`ifdef enable_connect_hls_coding_unit_hls_dup2
    //------READ (scalar, global adr = 420) comb block-----//
    //s = 9; r = 1; a = 25;
    if (scalar_rdat_vld_r[9][1][25]) begin
        scalar_argdone [9][1][25] = 1;
    end
    scalar_adr[9][1][25] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][25]) begin
        scalar_argVld[9][1][25] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[9][1][25] = 1;
    end

    //------READ (scalar, global adr = 380) comb block-----//
    //s = 31; r = 0; a = 20;
    if (scalar_rdat_vld_r[31][0][20]) begin
        scalar_argdone [31][0][20] = 1;
    end
    scalar_adr[31][0][20] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][20]) begin
        scalar_argVld[31][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[31][0][20] = 1;
    end

    //------READ (scalar, global adr = 1164) comb block-----//
    //s = 3; r = 1; a = 11;
    if (scalar_rdat_vld_r[3][1][11]) begin
        scalar_argdone [3][1][11] = 1;
    end
    scalar_adr[3][1][11] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][11]) begin
        scalar_argVld[3][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[3][1][11] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 0; a = 24;
    if (scalar_rdat_vld_r[11][0][24]) begin
        scalar_argdone [11][0][24] = 1;
    end
    scalar_adr[11][0][24] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][24]) begin
        scalar_argVld[11][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[11][0][24] = 1;
    end

    //------READ (scalar, global adr = 476) comb block-----//
    //s = 23; r = 0; a = 16;
    if (scalar_rdat_vld_r[23][0][16]) begin
        scalar_argdone [23][0][16] = 1;
    end
    scalar_adr[23][0][16] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][16]) begin
        scalar_argVld[23][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[23][0][16] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 0; a = 18;
    if (scalar_rdat_vld_r[15][0][18]) begin
        scalar_argdone [15][0][18] = 1;
    end
    scalar_adr[15][0][18] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][18]) begin
        scalar_argVld[15][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[15][0][18] = 1;
    end

    //------WRITE (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 6;
    if (scalar_argAck [15][1][6]) begin
        scalar_argVld [15][1][6] = 0;
        scalar_argAckdone [15][1][6] = 1;
    end
    if (hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_ap_vld_r) begin
        scalar_argVld [15][1][6] = 1;
        scalar_argAckdone [15][1][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][6] = hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_r;
    scalar_adr    [15][1][6] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 28) comb block-----//
    //s = 7; r = 0; a = 18;
    if (scalar_rdat_vld_r[7][0][18]) begin
        scalar_argdone [7][0][18] = 1;
    end
    scalar_adr[7][0][18] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][18]) begin
        scalar_argVld[7][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[7][0][18] = 1;
    end

    //------WRITE (scalar, global adr = 28) comb block-----//
    //s = 7; r = 0; a = 7;
    if (scalar_argAck [7][0][7]) begin
        scalar_argVld [7][0][7] = 0;
        scalar_argAckdone [7][0][7] = 1;
    end
    if (hls_coding_unit_hls_dup2_pcm_flag_o_ap_vld_r) begin
        scalar_argVld [7][0][7] = 1;
        scalar_argAckdone [7][0][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][7] = hls_coding_unit_hls_dup2_pcm_flag_o_r;
    scalar_adr    [7][0][7] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 504) comb block-----//
    //s = 30; r = 1; a = 9;
    if (scalar_rdat_vld_r[30][1][9]) begin
        scalar_argdone [30][1][9] = 1;
    end
    scalar_adr[30][1][9] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][9]) begin
        scalar_argVld[30][1][9] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[30][1][9] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 1; a = 20;
    if (scalar_rdat_vld_r[12][1][20]) begin
        scalar_argdone [12][1][20] = 1;
    end
    scalar_adr[12][1][20] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][20]) begin
        scalar_argVld[12][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[12][1][20] = 1;
    end

    //------WRITE (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 6;
    if (scalar_argAck [12][0][6]) begin
        scalar_argVld [12][0][6] = 0;
        scalar_argAckdone [12][0][6] = 1;
    end
    if (hls_coding_unit_hls_dup2_pred_mode_o_ap_vld_r) begin
        scalar_argVld [12][0][6] = 1;
        scalar_argAckdone [12][0][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][6] = hls_coding_unit_hls_dup2_pred_mode_o_r;
    scalar_adr    [12][0][6] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 1; a = 19;
    if (scalar_rdat_vld_r[13][1][19]) begin
        scalar_argdone [13][1][19] = 1;
    end
    scalar_adr[13][1][19] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][19]) begin
        scalar_argVld[13][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[13][1][19] = 1;
    end

    //------WRITE (scalar, global adr = 564) comb block-----//
    //s = 13; r = 0; a = 5;
    if (scalar_argAck [13][0][5]) begin
        scalar_argVld [13][0][5] = 0;
        scalar_argAckdone [13][0][5] = 1;
    end
    if (hls_coding_unit_hls_dup2_part_mode_o_ap_vld_r) begin
        scalar_argVld [13][0][5] = 1;
        scalar_argAckdone [13][0][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][5] = hls_coding_unit_hls_dup2_part_mode_o_r;
    scalar_adr    [13][0][5] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 576) comb block-----//
    //s = 16; r = 0; a = 3;
    if (scalar_argAck [16][0][3]) begin
        scalar_argVld [16][0][3] = 0;
        scalar_argAckdone [16][0][3] = 1;
    end
    if (hls_coding_unit_hls_dup2_max_trafo_depth_ap_vld_r) begin
        scalar_argVld [16][0][3] = 1;
        scalar_argAckdone [16][0][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][0][3] = hls_coding_unit_hls_dup2_max_trafo_depth_r;
    scalar_adr    [16][0][3] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 32) comb block-----//
    //s = 8; r = 1; a = 22;
    if (scalar_rdat_vld_r[8][1][22]) begin
        scalar_argdone [8][1][22] = 1;
    end
    scalar_adr[8][1][22] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][22]) begin
        scalar_argVld[8][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[8][1][22] = 1;
    end

    //------WRITE (scalar, global adr = 32) comb block-----//
    //s = 8; r = 0; a = 7;
    if (scalar_argAck [8][0][7]) begin
        scalar_argVld [8][0][7] = 0;
        scalar_argAckdone [8][0][7] = 1;
    end
    if (hls_coding_unit_hls_dup2_cb_size_o_ap_vld_r) begin
        scalar_argVld [8][0][7] = 1;
        scalar_argAckdone [8][0][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][7] = hls_coding_unit_hls_dup2_cb_size_o_r;
    scalar_adr    [8][0][7] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 44) comb block-----//
    //s = 11; r = 1; a = 24;
    if (scalar_rdat_vld_r[11][1][24]) begin
        scalar_argdone [11][1][24] = 1;
    end
    scalar_adr[11][1][24] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][24]) begin
        scalar_argVld[11][1][24] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[11][1][24] = 1;
    end

    //------WRITE (scalar, global adr = 44) comb block-----//
    //s = 11; r = 1; a = 6;
    if (scalar_argAck [11][1][6]) begin
        scalar_argVld [11][1][6] = 0;
        scalar_argAckdone [11][1][6] = 1;
    end
    if (hls_coding_unit_hls_dup2_idx_o_ap_vld_r) begin
        scalar_argVld [11][1][6] = 1;
        scalar_argAckdone [11][1][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][1][6] = hls_coding_unit_hls_dup2_idx_o_r;
    scalar_adr    [11][1][6] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1168) comb block-----//
    //s = 4; r = 1; a = 1;
    if (scalar_argAck [4][1][1]) begin
        scalar_argVld [4][1][1] = 0;
        scalar_argAckdone [4][1][1] = 1;
    end
    if (hls_coding_unit_hls_dup2_xm_xBase_ap_vld_r) begin
        scalar_argVld [4][1][1] = 1;
        scalar_argAckdone [4][1][1] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][1][1] = hls_coding_unit_hls_dup2_xm_xBase_r;
    scalar_adr    [4][1][1] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1172) comb block-----//
    //s = 5; r = 0; a = 5;
    if (scalar_argAck [5][0][5]) begin
        scalar_argVld [5][0][5] = 0;
        scalar_argAckdone [5][0][5] = 1;
    end
    if (hls_coding_unit_hls_dup2_xm_yBase_ap_vld_r) begin
        scalar_argVld [5][0][5] = 1;
        scalar_argAckdone [5][0][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][5] = hls_coding_unit_hls_dup2_xm_yBase_r;
    scalar_adr    [5][0][5] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1176) comb block-----//
    //s = 6; r = 0; a = 6;
    if (scalar_argAck [6][0][6]) begin
        scalar_argVld [6][0][6] = 0;
        scalar_argAckdone [6][0][6] = 1;
    end
    if (hls_coding_unit_hls_dup2_xm_cb_xBase_ap_vld_r) begin
        scalar_argVld [6][0][6] = 1;
        scalar_argAckdone [6][0][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][6] = hls_coding_unit_hls_dup2_xm_cb_xBase_r;
    scalar_adr    [6][0][6] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1180) comb block-----//
    //s = 7; r = 1; a = 7;
    if (scalar_argAck [7][1][7]) begin
        scalar_argVld [7][1][7] = 0;
        scalar_argAckdone [7][1][7] = 1;
    end
    if (hls_coding_unit_hls_dup2_xm_cb_yBase_ap_vld_r) begin
        scalar_argVld [7][1][7] = 1;
        scalar_argAckdone [7][1][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][7] = hls_coding_unit_hls_dup2_xm_cb_yBase_r;
    scalar_adr    [7][1][7] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1184) comb block-----//
    //s = 8; r = 1; a = 7;
    if (scalar_argAck [8][1][7]) begin
        scalar_argVld [8][1][7] = 0;
        scalar_argAckdone [8][1][7] = 1;
    end
    if (hls_coding_unit_hls_dup2_xm_log2_cb_size_ap_vld_r) begin
        scalar_argVld [8][1][7] = 1;
        scalar_argAckdone [8][1][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][7] = hls_coding_unit_hls_dup2_xm_log2_cb_size_r;
    scalar_adr    [8][1][7] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1268) comb block-----//
    //s = 29; r = 1; a = 21;
    if (scalar_rdat_vld_r[29][1][21]) begin
        scalar_argdone [29][1][21] = 1;
    end
    scalar_adr[29][1][21] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][21]) begin
        scalar_argVld[29][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[29][1][21] = 1;
    end

    //------READ (scalar, global adr = 1264) comb block-----//
    //s = 28; r = 0; a = 13;
    if (scalar_rdat_vld_r[28][0][13]) begin
        scalar_argdone [28][0][13] = 1;
    end
    scalar_adr[28][0][13] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][13]) begin
        scalar_argVld[28][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[28][0][13] = 1;
    end

    //------READ (scalar, global adr = 1272) comb block-----//
    //s = 30; r = 0; a = 10;
    if (scalar_rdat_vld_r[30][0][10]) begin
        scalar_argdone [30][0][10] = 1;
    end
    scalar_adr[30][0][10] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][10]) begin
        scalar_argVld[30][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[30][0][10] = 1;
    end

    //------READ (scalar, global adr = 1276) comb block-----//
    //s = 31; r = 1; a = 19;
    if (scalar_rdat_vld_r[31][1][19]) begin
        scalar_argdone [31][1][19] = 1;
    end
    scalar_adr[31][1][19] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][19]) begin
        scalar_argVld[31][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[31][1][19] = 1;
    end

    //------READ (scalar, global adr = 1280) comb block-----//
    //s = 0; r = 1; a = 18;
    if (scalar_rdat_vld_r[0][1][18]) begin
        scalar_argdone [0][1][18] = 1;
    end
    scalar_adr[0][1][18] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][18]) begin
        scalar_argVld[0][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[0][1][18] = 1;
    end

    //------READ (scalar, global adr = 1284) comb block-----//
    //s = 1; r = 0; a = 15;
    if (scalar_rdat_vld_r[1][0][15]) begin
        scalar_argdone [1][0][15] = 1;
    end
    scalar_adr[1][0][15] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][15]) begin
        scalar_argVld[1][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[1][0][15] = 1;
    end

    //------READ (scalar, global adr = 1240) comb block-----//
    //s = 22; r = 0; a = 17;
    if (scalar_rdat_vld_r[22][0][17]) begin
        scalar_argdone [22][0][17] = 1;
    end
    scalar_adr[22][0][17] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][17]) begin
        scalar_argVld[22][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[22][0][17] = 1;
    end

    //------WRITE (scalar, global adr = 36) comb block-----//
    //s = 9; r = 0; a = 8;
    if (scalar_argAck [9][0][8]) begin
        scalar_argVld [9][0][8] = 0;
        scalar_argAckdone [9][0][8] = 1;
    end
    if (hls_coding_unit_hls_dup2_length_r_ap_vld_r) begin
        scalar_argVld [9][0][8] = 1;
        scalar_argAckdone [9][0][8] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][8] = hls_coding_unit_hls_dup2_length_r_r;
    scalar_adr    [9][0][8] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 544) comb block-----//
    //s = 8; r = 0; a = 8;
    if (scalar_argAck [8][0][8]) begin
        scalar_argVld [8][0][8] = 0;
        scalar_argAckdone [8][0][8] = 1;
    end
    if (hls_coding_unit_hls_dup2_xm_x_ap_vld_r) begin
        scalar_argVld [8][0][8] = 1;
        scalar_argAckdone [8][0][8] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][8] = hls_coding_unit_hls_dup2_xm_x_r;
    scalar_adr    [8][0][8] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 548) comb block-----//
    //s = 9; r = 1; a = 8;
    if (scalar_argAck [9][1][8]) begin
        scalar_argVld [9][1][8] = 0;
        scalar_argAckdone [9][1][8] = 1;
    end
    if (hls_coding_unit_hls_dup2_xm_y_ap_vld_r) begin
        scalar_argVld [9][1][8] = 1;
        scalar_argAckdone [9][1][8] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][8] = hls_coding_unit_hls_dup2_xm_y_r;
    scalar_adr    [9][1][8] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 0; a = 6;
    if (scalar_argAck [0][0][6]) begin
        scalar_argVld [0][0][6] = 0;
        scalar_argAckdone [0][0][6] = 1;
    end
    if (hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_ap_vld_r) begin
        scalar_argVld [0][0][6] = 1;
        scalar_argAckdone [0][0][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][6] = hls_coding_unit_hls_dup2_pu_intra_pred_mode_0_r;
    scalar_adr    [0][0][6] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 1; a = 6;
    if (scalar_argAck [0][1][6]) begin
        scalar_argVld [0][1][6] = 0;
        scalar_argAckdone [0][1][6] = 1;
    end
    if (hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_ap_vld_r) begin
        scalar_argVld [0][1][6] = 1;
        scalar_argAckdone [0][1][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][6] = hls_coding_unit_hls_dup2_pu_intra_pred_mode_1_r;
    scalar_adr    [0][1][6] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 0; a = 7;
    if (scalar_argAck [0][0][7]) begin
        scalar_argVld [0][0][7] = 0;
        scalar_argAckdone [0][0][7] = 1;
    end
    if (hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_ap_vld_r) begin
        scalar_argVld [0][0][7] = 1;
        scalar_argAckdone [0][0][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][7] = hls_coding_unit_hls_dup2_pu_intra_pred_mode_2_r;
    scalar_adr    [0][0][7] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 1; a = 7;
    if (scalar_argAck [0][1][7]) begin
        scalar_argVld [0][1][7] = 0;
        scalar_argAckdone [0][1][7] = 1;
    end
    if (hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_ap_vld_r) begin
        scalar_argVld [0][1][7] = 1;
        scalar_argAckdone [0][1][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][7] = hls_coding_unit_hls_dup2_pu_intra_pred_mode_3_r;
    scalar_adr    [0][1][7] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 540) comb block-----//
    //s = 7; r = 0; a = 8;
    if (scalar_argAck [7][0][8]) begin
        scalar_argVld [7][0][8] = 0;
        scalar_argAckdone [7][0][8] = 1;
    end
    if (hls_coding_unit_hls_dup2_qPy_pred_ap_vld_r) begin
        scalar_argVld [7][0][8] = 1;
        scalar_argAckdone [7][0][8] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][8] = hls_coding_unit_hls_dup2_qPy_pred_r;
    scalar_adr    [7][0][8] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 24) comb block-----//
    //s = 6; r = 1; a = 6;
    if (scalar_argAck [6][1][6]) begin
        scalar_argVld [6][1][6] = 0;
        scalar_argAckdone [6][1][6] = 1;
    end
    if (hls_coding_unit_hls_dup2_skip_flag_start_ap_vld_r) begin
        scalar_argVld [6][1][6] = 1;
        scalar_argAckdone [6][1][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][6] = hls_coding_unit_hls_dup2_skip_flag_start_r;
    scalar_adr    [6][1][6] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 1; a = 13;
    if (scalar_rdat_vld_r[28][1][13]) begin
        scalar_argdone [28][1][13] = 1;
    end
    scalar_adr[28][1][13] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][13]) begin
        scalar_argVld[28][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[28][1][13] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 16;
    if (scalar_rdat_vld_r[26][0][16]) begin
        scalar_argdone [26][0][16] = 1;
    end
    scalar_adr[26][0][16] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][16]) begin
        scalar_argVld[26][0][16] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[26][0][16] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 0; a = 20;
    if (scalar_rdat_vld_r[13][0][20]) begin
        scalar_argdone [13][0][20] = 1;
    end
    scalar_adr[13][0][20] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][20]) begin
        scalar_argVld[13][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[13][0][20] = 1;
    end

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 0; a = 25;
    if (scalar_rdat_vld_r[6][0][25]) begin
        scalar_argdone [6][0][25] = 1;
    end
    scalar_adr[6][0][25] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][25]) begin
        scalar_argVld[6][0][25] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[6][0][25] = 1;
    end

    //------READ (scalar, global adr = 440) comb block-----//
    //s = 14; r = 1; a = 19;
    if (scalar_rdat_vld_r[14][1][19]) begin
        scalar_argdone [14][1][19] = 1;
    end
    scalar_adr[14][1][19] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][19]) begin
        scalar_argVld[14][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[14][1][19] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 0; a = 14;
    if (scalar_rdat_vld_r[2][0][14]) begin
        scalar_argdone [2][0][14] = 1;
    end
    scalar_adr[2][0][14] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][14]) begin
        scalar_argVld[2][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[2][0][14] = 1;
    end

    //------WRITE (scalar, global adr = 568) comb block-----//
    //s = 14; r = 1; a = 6;
    if (scalar_argAck [14][1][6]) begin
        scalar_argVld [14][1][6] = 0;
        scalar_argAckdone [14][1][6] = 1;
    end
    if (hls_coding_unit_hls_dup2_intra_split_flag_ap_vld_r) begin
        scalar_argVld [14][1][6] = 1;
        scalar_argAckdone [14][1][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][6] = hls_coding_unit_hls_dup2_intra_split_flag_r;
    scalar_adr    [14][1][6] = {ap_part_w[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 1; a = 13;
    if (scalar_rdat_vld_r[17][1][13]) begin
        scalar_argdone [17][1][13] = 1;
    end
    scalar_adr[17][1][13] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][13]) begin
        scalar_argVld[17][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[17][1][13] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 0; a = 13;
    if (scalar_rdat_vld_r[24][0][13]) begin
        scalar_argdone [24][0][13] = 1;
    end
    scalar_adr[24][0][13] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][13]) begin
        scalar_argVld[24][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[24][0][13] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 15;
    if (scalar_rdat_vld_r[23][1][15]) begin
        scalar_argdone [23][1][15] = 1;
    end
    scalar_adr[23][1][15] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][15]) begin
        scalar_argVld[23][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[23][1][15] = 1;
    end

    //------READ (scalar, global adr = 320) comb block-----//
    //s = 16; r = 0; a = 13;
    if (scalar_rdat_vld_r[16][0][13]) begin
        scalar_argdone [16][0][13] = 1;
    end
    scalar_adr[16][0][13] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][13]) begin
        scalar_argVld[16][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[16][0][13] = 1;
    end

    //------READ (scalar, global adr = 400) comb block-----//
    //s = 4; r = 0; a = 13;
    if (scalar_rdat_vld_r[4][0][13]) begin
        scalar_argdone [4][0][13] = 1;
    end
    scalar_adr[4][0][13] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][13]) begin
        scalar_argVld[4][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[4][0][13] = 1;
    end

    //------READ (scalar, global adr = 412) comb block-----//
    //s = 7; r = 1; a = 17;
    if (scalar_rdat_vld_r[7][1][17]) begin
        scalar_argdone [7][1][17] = 1;
    end
    scalar_adr[7][1][17] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][17]) begin
        scalar_argVld[7][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[7][1][17] = 1;
    end

    //------READ (scalar, global adr = 416) comb block-----//
    //s = 8; r = 0; a = 23;
    if (scalar_rdat_vld_r[8][0][23]) begin
        scalar_argdone [8][0][23] = 1;
    end
    scalar_adr[8][0][23] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][23]) begin
        scalar_argVld[8][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[8][0][23] = 1;
    end

    //------READ (scalar, global adr = 464) comb block-----//
    //s = 20; r = 1; a = 13;
    if (scalar_rdat_vld_r[20][1][13]) begin
        scalar_argdone [20][1][13] = 1;
    end
    scalar_adr[20][1][13] = {ap_part[hls_coding_unit_hls_dup2][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][13]) begin
        scalar_argVld[20][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup2]) begin
        scalar_argVld[20][1][13] = 1;
    end

    //------WRITE (array range, global adr = 286176, width=8, addr_width=32) -----//
    //s = 0; a = 54;
    array_argVld [0][54] = hls_coding_unit_hls_dup2_skip_flag_EN_A & (hls_coding_unit_hls_dup2_skip_flag_WEN_A != 0);
    array_adr    [0][54] = hls_coding_unit_hls_dup2_skip_flag_Addr_A;
    array_wdat   [0][54] = hls_coding_unit_hls_dup2_skip_flag_Din_A;

    //------READ (array range, global adr = 286176, width=8, addr_width=32) -----//
    //s = 0; a = 214;
    hls_coding_unit_hls_dup2_skip_flag_Dout_A = array_rdat  [0][214];
    //found a write signal pair
    array_argVld [0][214] = hls_coding_unit_hls_dup2_skip_flag_EN_A & (hls_coding_unit_hls_dup2_skip_flag_WEN_A == 0);
    array_adr    [0][214] = hls_coding_unit_hls_dup2_skip_flag_Addr_A;

    //------WRITE (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 55;
    array_argVld [0][55] = hls_coding_unit_hls_dup2_qp_y_tab_EN_A & (hls_coding_unit_hls_dup2_qp_y_tab_WEN_A != 0);
    array_adr    [0][55] = hls_coding_unit_hls_dup2_qp_y_tab_Addr_A;
    array_wdat   [0][55] = hls_coding_unit_hls_dup2_qp_y_tab_Din_A;

    //------READ (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 215;
    hls_coding_unit_hls_dup2_qp_y_tab_Dout_A = array_rdat  [0][215];
    //found a write signal pair
    array_argVld [0][215] = hls_coding_unit_hls_dup2_qp_y_tab_EN_A & (hls_coding_unit_hls_dup2_qp_y_tab_WEN_A == 0);
    array_adr    [0][215] = hls_coding_unit_hls_dup2_qp_y_tab_Addr_A;

    //------WRITE (array range, global adr = 286208, width=8, addr_width=32) -----//
    //s = 0; a = 56;
    array_argVld [0][56] = hls_coding_unit_hls_dup2_tab_ct_depth_EN_A & (hls_coding_unit_hls_dup2_tab_ct_depth_WEN_A != 0);
    array_adr    [0][56] = hls_coding_unit_hls_dup2_tab_ct_depth_Addr_A;
    array_wdat   [0][56] = hls_coding_unit_hls_dup2_tab_ct_depth_Din_A;

    //------READ (array range, global adr = 286208, width=8, addr_width=32) -----//
    //s = 0; a = 216;
    hls_coding_unit_hls_dup2_tab_ct_depth_Dout_A = array_rdat  [0][216];
    //found a write signal pair
    array_argVld [0][216] = hls_coding_unit_hls_dup2_tab_ct_depth_EN_A & (hls_coding_unit_hls_dup2_tab_ct_depth_WEN_A == 0);
    array_adr    [0][216] = hls_coding_unit_hls_dup2_tab_ct_depth_Addr_A;

    hls_coding_unit_hls_dup2_ready = array_argRdy[0][54]& array_argRdy[0][214]& array_argRdy[0][55]& array_argRdy[0][215]& array_argRdy[0][56]& array_argRdy[0][216] & ~ap_arb_reload_running_r[hls_coding_unit_hls_dup2];
    array_ap_ce[0][54] = ap_ce[hls_coding_unit_hls_dup2];
    array_ap_ce[0][214] = ap_ce[hls_coding_unit_hls_dup2];
    array_ap_ce[0][55] = ap_ce[hls_coding_unit_hls_dup2];
    array_ap_ce[0][215] = ap_ce[hls_coding_unit_hls_dup2];
    array_ap_ce[0][56] = ap_ce[hls_coding_unit_hls_dup2];
    array_ap_ce[0][216] = ap_ce[hls_coding_unit_hls_dup2];

    if (ap_arb_ret[hls_coding_unit_hls_dup2] & ~ap_arb_ret_r[hls_coding_unit_hls_dup2]) begin
        ap_arb_ret_running[hls_coding_unit_hls_dup2] = 1;
        hls_coding_unit_hls_dup2_ready = 0;
    end

    scalar_argAckdone_all[hls_coding_unit_hls_dup2] = scalar_argAckdone[15][1][6] &
                                                scalar_argAckdone[7][0][7] &
                                                scalar_argAckdone[12][0][6] &
                                                scalar_argAckdone[13][0][5] &
                                                scalar_argAckdone[16][0][3] &
                                                scalar_argAckdone[8][0][7] &
                                                scalar_argAckdone[11][1][6] &
                                                scalar_argAckdone[4][1][1] &
                                                scalar_argAckdone[5][0][5] &
                                                scalar_argAckdone[6][0][6] &
                                                scalar_argAckdone[7][1][7] &
                                                scalar_argAckdone[8][1][7] &
                                                scalar_argAckdone[9][0][8] &
                                                scalar_argAckdone[8][0][8] &
                                                scalar_argAckdone[9][1][8] &
                                                scalar_argAckdone[0][0][6] &
                                                scalar_argAckdone[0][1][6] &
                                                scalar_argAckdone[0][0][7] &
                                                scalar_argAckdone[0][1][7] &
                                                scalar_argAckdone[7][0][8] &
                                                scalar_argAckdone[6][1][6] &
                                                scalar_argAckdone[14][1][6];
    if (ap_arb_ret_running[hls_coding_unit_hls_dup2] & scalar_argAckdone_all[hls_coding_unit_hls_dup2] &~ ap_arb_reload_running_r[hls_coding_unit_hls_dup2]) begin
        ap_arb_reload[hls_coding_unit_hls_dup2] = 1;
        ap_arb_reload_running[hls_coding_unit_hls_dup2] = 1;
    end

    if (ap_arb_start[hls_coding_unit_hls_dup2] &~ ap_arb_start_r[hls_coding_unit_hls_dup2]) begin
        ap_arb_start_running[hls_coding_unit_hls_dup2] = 1;
    end

    if (ap_arb_start_running[hls_coding_unit_hls_dup2] & ~scalar_writing_476& ~scalar_writing_572& ~scalar_writing_28& ~scalar_writing_504& ~scalar_writing_560& ~scalar_writing_564& ~scalar_writing_32& ~scalar_writing_44& ~scalar_writing_536& ~scalar_writing_608& ~scalar_writing_604& ~scalar_writing_464) begin
        ap_arb_start_running[hls_coding_unit_hls_dup2] = 0;
        ap_arb_reload[hls_coding_unit_hls_dup2] = 1;
    end

    scalar_argdone_all[hls_coding_unit_hls_dup2] = scalar_argdone[9][1][25] &
                                                                scalar_argdone[31][0][20] &
                                                                scalar_argdone[3][1][11] &
                                                                scalar_argdone[11][0][24] &
                                                                scalar_argdone[23][0][16] &
                                                                scalar_argdone[15][0][18] &
                                                                scalar_argdone[7][0][18] &
                                                                scalar_argdone[30][1][9] &
                                                                scalar_argdone[12][1][20] &
                                                                scalar_argdone[13][1][19] &
                                                                scalar_argdone[8][1][22] &
                                                                scalar_argdone[11][1][24] &
                                                                scalar_argdone[29][1][21] &
                                                                scalar_argdone[28][0][13] &
                                                                scalar_argdone[30][0][10] &
                                                                scalar_argdone[31][1][19] &
                                                                scalar_argdone[0][1][18] &
                                                                scalar_argdone[1][0][15] &
                                                                scalar_argdone[22][0][17] &
                                                                scalar_argdone[28][1][13] &
                                                                scalar_argdone[26][0][16] &
                                                                scalar_argdone[13][0][20] &
                                                                scalar_argdone[6][0][25] &
                                                                scalar_argdone[14][1][19] &
                                                                scalar_argdone[2][0][14] &
                                                                scalar_argdone[17][1][13] &
                                                                scalar_argdone[24][0][13] &
                                                                scalar_argdone[23][1][15] &
                                                                scalar_argdone[16][0][13] &
                                                                scalar_argdone[4][0][13] &
                                                                scalar_argdone[7][1][17] &
                                                                scalar_argdone[8][0][23] &
                                                                scalar_argdone[20][1][13];

    if (scalar_argdone_all_r[hls_coding_unit_hls_dup2]) begin
        scalar_argdone[9][1][25] = 0;
        scalar_argdone[31][0][20] = 0;
        scalar_argdone[3][1][11] = 0;
        scalar_argdone[11][0][24] = 0;
        scalar_argdone[23][0][16] = 0;
        scalar_argdone[15][0][18] = 0;
        scalar_argdone[7][0][18] = 0;
        scalar_argdone[30][1][9] = 0;
        scalar_argdone[12][1][20] = 0;
        scalar_argdone[13][1][19] = 0;
        scalar_argdone[8][1][22] = 0;
        scalar_argdone[11][1][24] = 0;
        scalar_argdone[29][1][21] = 0;
        scalar_argdone[28][0][13] = 0;
        scalar_argdone[30][0][10] = 0;
        scalar_argdone[31][1][19] = 0;
        scalar_argdone[0][1][18] = 0;
        scalar_argdone[1][0][15] = 0;
        scalar_argdone[22][0][17] = 0;
        scalar_argdone[28][1][13] = 0;
        scalar_argdone[26][0][16] = 0;
        scalar_argdone[13][0][20] = 0;
        scalar_argdone[6][0][25] = 0;
        scalar_argdone[14][1][19] = 0;
        scalar_argdone[2][0][14] = 0;
        scalar_argdone[17][1][13] = 0;
        scalar_argdone[24][0][13] = 0;
        scalar_argdone[23][1][15] = 0;
        scalar_argdone[16][0][13] = 0;
        scalar_argdone[4][0][13] = 0;
        scalar_argdone[7][1][17] = 0;
        scalar_argdone[8][0][23] = 0;
        scalar_argdone[20][1][13] = 0;

        if (ap_arb_start_r[hls_coding_unit_hls_dup2] & ~ap_running_r[hls_coding_unit_hls_dup2]) begin
            ap_start[hls_coding_unit_hls_dup2] = 1;
            ap_running[hls_coding_unit_hls_dup2] = 1;
        end
        else if (ap_arb_ret_running_r[hls_coding_unit_hls_dup2]) begin
            ap_arb_ret_running[hls_coding_unit_hls_dup2] = 0;
            ap_arb_reload_running[hls_coding_unit_hls_dup2] = 0;
        end
    end

    if (ap_start_r[hls_coding_unit_hls_dup2] & ap_ready_r[hls_coding_unit_hls_dup2]) begin
        ap_start[hls_coding_unit_hls_dup2] = 0;
    end

    if (ap_done_r[hls_coding_unit_hls_dup2]) begin
        ap_running[hls_coding_unit_hls_dup2] = 0;
    end
`endif
    //============================================================
    //hls_coding_unit_hls_dup3       (f = 21)
    //============================================================
`ifdef enable_connect_hls_coding_unit_hls_dup3
    //------READ (scalar, global adr = 420) comb block-----//
    //s = 9; r = 0; a = 26;
    if (scalar_rdat_vld_r[9][0][26]) begin
        scalar_argdone [9][0][26] = 1;
    end
    scalar_adr[9][0][26] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][26]) begin
        scalar_argVld[9][0][26] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[9][0][26] = 1;
    end

    //------READ (scalar, global adr = 380) comb block-----//
    //s = 31; r = 0; a = 21;
    if (scalar_rdat_vld_r[31][0][21]) begin
        scalar_argdone [31][0][21] = 1;
    end
    scalar_adr[31][0][21] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][21]) begin
        scalar_argVld[31][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[31][0][21] = 1;
    end

    //------READ (scalar, global adr = 1164) comb block-----//
    //s = 3; r = 0; a = 13;
    if (scalar_rdat_vld_r[3][0][13]) begin
        scalar_argdone [3][0][13] = 1;
    end
    scalar_adr[3][0][13] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][13]) begin
        scalar_argVld[3][0][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[3][0][13] = 1;
    end

    //------READ (scalar, global adr = 428) comb block-----//
    //s = 11; r = 0; a = 25;
    if (scalar_rdat_vld_r[11][0][25]) begin
        scalar_argdone [11][0][25] = 1;
    end
    scalar_adr[11][0][25] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][25]) begin
        scalar_argVld[11][0][25] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[11][0][25] = 1;
    end

    //------READ (scalar, global adr = 476) comb block-----//
    //s = 23; r = 0; a = 17;
    if (scalar_rdat_vld_r[23][0][17]) begin
        scalar_argdone [23][0][17] = 1;
    end
    scalar_adr[23][0][17] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][17]) begin
        scalar_argVld[23][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[23][0][17] = 1;
    end

    //------READ (scalar, global adr = 572) comb block-----//
    //s = 15; r = 1; a = 18;
    if (scalar_rdat_vld_r[15][1][18]) begin
        scalar_argdone [15][1][18] = 1;
    end
    scalar_adr[15][1][18] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][18]) begin
        scalar_argVld[15][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[15][1][18] = 1;
    end

    //------WRITE (scalar, global adr = 572) comb block-----//
    //s = 15; r = 0; a = 7;
    if (scalar_argAck [15][0][7]) begin
        scalar_argVld [15][0][7] = 0;
        scalar_argAckdone [15][0][7] = 1;
    end
    if (hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_ap_vld_r) begin
        scalar_argVld [15][0][7] = 1;
        scalar_argAckdone [15][0][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][7] = hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_r;
    scalar_adr    [15][0][7] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 28) comb block-----//
    //s = 7; r = 0; a = 19;
    if (scalar_rdat_vld_r[7][0][19]) begin
        scalar_argdone [7][0][19] = 1;
    end
    scalar_adr[7][0][19] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][19]) begin
        scalar_argVld[7][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[7][0][19] = 1;
    end

    //------WRITE (scalar, global adr = 28) comb block-----//
    //s = 7; r = 1; a = 8;
    if (scalar_argAck [7][1][8]) begin
        scalar_argVld [7][1][8] = 0;
        scalar_argAckdone [7][1][8] = 1;
    end
    if (hls_coding_unit_hls_dup3_pcm_flag_o_ap_vld_r) begin
        scalar_argVld [7][1][8] = 1;
        scalar_argAckdone [7][1][8] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][8] = hls_coding_unit_hls_dup3_pcm_flag_o_r;
    scalar_adr    [7][1][8] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 504) comb block-----//
    //s = 30; r = 1; a = 10;
    if (scalar_rdat_vld_r[30][1][10]) begin
        scalar_argdone [30][1][10] = 1;
    end
    scalar_adr[30][1][10] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][10]) begin
        scalar_argVld[30][1][10] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[30][1][10] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 0; a = 22;
    if (scalar_rdat_vld_r[12][0][22]) begin
        scalar_argdone [12][0][22] = 1;
    end
    scalar_adr[12][0][22] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][22]) begin
        scalar_argVld[12][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[12][0][22] = 1;
    end

    //------WRITE (scalar, global adr = 560) comb block-----//
    //s = 12; r = 1; a = 6;
    if (scalar_argAck [12][1][6]) begin
        scalar_argVld [12][1][6] = 0;
        scalar_argAckdone [12][1][6] = 1;
    end
    if (hls_coding_unit_hls_dup3_pred_mode_o_ap_vld_r) begin
        scalar_argVld [12][1][6] = 1;
        scalar_argAckdone [12][1][6] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][6] = hls_coding_unit_hls_dup3_pred_mode_o_r;
    scalar_adr    [12][1][6] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 1; a = 20;
    if (scalar_rdat_vld_r[13][1][20]) begin
        scalar_argdone [13][1][20] = 1;
    end
    scalar_adr[13][1][20] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][20]) begin
        scalar_argVld[13][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[13][1][20] = 1;
    end

    //------WRITE (scalar, global adr = 564) comb block-----//
    //s = 13; r = 1; a = 5;
    if (scalar_argAck [13][1][5]) begin
        scalar_argVld [13][1][5] = 0;
        scalar_argAckdone [13][1][5] = 1;
    end
    if (hls_coding_unit_hls_dup3_part_mode_o_ap_vld_r) begin
        scalar_argVld [13][1][5] = 1;
        scalar_argAckdone [13][1][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][5] = hls_coding_unit_hls_dup3_part_mode_o_r;
    scalar_adr    [13][1][5] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 576) comb block-----//
    //s = 16; r = 1; a = 3;
    if (scalar_argAck [16][1][3]) begin
        scalar_argVld [16][1][3] = 0;
        scalar_argAckdone [16][1][3] = 1;
    end
    if (hls_coding_unit_hls_dup3_max_trafo_depth_ap_vld_r) begin
        scalar_argVld [16][1][3] = 1;
        scalar_argAckdone [16][1][3] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][1][3] = hls_coding_unit_hls_dup3_max_trafo_depth_r;
    scalar_adr    [16][1][3] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 32) comb block-----//
    //s = 8; r = 1; a = 23;
    if (scalar_rdat_vld_r[8][1][23]) begin
        scalar_argdone [8][1][23] = 1;
    end
    scalar_adr[8][1][23] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][23]) begin
        scalar_argVld[8][1][23] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[8][1][23] = 1;
    end

    //------WRITE (scalar, global adr = 32) comb block-----//
    //s = 8; r = 1; a = 8;
    if (scalar_argAck [8][1][8]) begin
        scalar_argVld [8][1][8] = 0;
        scalar_argAckdone [8][1][8] = 1;
    end
    if (hls_coding_unit_hls_dup3_cb_size_o_ap_vld_r) begin
        scalar_argVld [8][1][8] = 1;
        scalar_argAckdone [8][1][8] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][8] = hls_coding_unit_hls_dup3_cb_size_o_r;
    scalar_adr    [8][1][8] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 44) comb block-----//
    //s = 11; r = 1; a = 25;
    if (scalar_rdat_vld_r[11][1][25]) begin
        scalar_argdone [11][1][25] = 1;
    end
    scalar_adr[11][1][25] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][25]) begin
        scalar_argVld[11][1][25] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[11][1][25] = 1;
    end

    //------WRITE (scalar, global adr = 44) comb block-----//
    //s = 11; r = 0; a = 7;
    if (scalar_argAck [11][0][7]) begin
        scalar_argVld [11][0][7] = 0;
        scalar_argAckdone [11][0][7] = 1;
    end
    if (hls_coding_unit_hls_dup3_idx_o_ap_vld_r) begin
        scalar_argVld [11][0][7] = 1;
        scalar_argAckdone [11][0][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][0][7] = hls_coding_unit_hls_dup3_idx_o_r;
    scalar_adr    [11][0][7] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1168) comb block-----//
    //s = 4; r = 0; a = 2;
    if (scalar_argAck [4][0][2]) begin
        scalar_argVld [4][0][2] = 0;
        scalar_argAckdone [4][0][2] = 1;
    end
    if (hls_coding_unit_hls_dup3_xm_xBase_ap_vld_r) begin
        scalar_argVld [4][0][2] = 1;
        scalar_argAckdone [4][0][2] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][0][2] = hls_coding_unit_hls_dup3_xm_xBase_r;
    scalar_adr    [4][0][2] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1172) comb block-----//
    //s = 5; r = 1; a = 5;
    if (scalar_argAck [5][1][5]) begin
        scalar_argVld [5][1][5] = 0;
        scalar_argAckdone [5][1][5] = 1;
    end
    if (hls_coding_unit_hls_dup3_xm_yBase_ap_vld_r) begin
        scalar_argVld [5][1][5] = 1;
        scalar_argAckdone [5][1][5] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][5] = hls_coding_unit_hls_dup3_xm_yBase_r;
    scalar_adr    [5][1][5] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1176) comb block-----//
    //s = 6; r = 0; a = 7;
    if (scalar_argAck [6][0][7]) begin
        scalar_argVld [6][0][7] = 0;
        scalar_argAckdone [6][0][7] = 1;
    end
    if (hls_coding_unit_hls_dup3_xm_cb_xBase_ap_vld_r) begin
        scalar_argVld [6][0][7] = 1;
        scalar_argAckdone [6][0][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][7] = hls_coding_unit_hls_dup3_xm_cb_xBase_r;
    scalar_adr    [6][0][7] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1180) comb block-----//
    //s = 7; r = 0; a = 9;
    if (scalar_argAck [7][0][9]) begin
        scalar_argVld [7][0][9] = 0;
        scalar_argAckdone [7][0][9] = 1;
    end
    if (hls_coding_unit_hls_dup3_xm_cb_yBase_ap_vld_r) begin
        scalar_argVld [7][0][9] = 1;
        scalar_argAckdone [7][0][9] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][9] = hls_coding_unit_hls_dup3_xm_cb_yBase_r;
    scalar_adr    [7][0][9] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1184) comb block-----//
    //s = 8; r = 0; a = 9;
    if (scalar_argAck [8][0][9]) begin
        scalar_argVld [8][0][9] = 0;
        scalar_argAckdone [8][0][9] = 1;
    end
    if (hls_coding_unit_hls_dup3_xm_log2_cb_size_ap_vld_r) begin
        scalar_argVld [8][0][9] = 1;
        scalar_argAckdone [8][0][9] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][9] = hls_coding_unit_hls_dup3_xm_log2_cb_size_r;
    scalar_adr    [8][0][9] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1268) comb block-----//
    //s = 29; r = 0; a = 22;
    if (scalar_rdat_vld_r[29][0][22]) begin
        scalar_argdone [29][0][22] = 1;
    end
    scalar_adr[29][0][22] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][22]) begin
        scalar_argVld[29][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[29][0][22] = 1;
    end

    //------READ (scalar, global adr = 1264) comb block-----//
    //s = 28; r = 0; a = 14;
    if (scalar_rdat_vld_r[28][0][14]) begin
        scalar_argdone [28][0][14] = 1;
    end
    scalar_adr[28][0][14] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][14]) begin
        scalar_argVld[28][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[28][0][14] = 1;
    end

    //------READ (scalar, global adr = 1272) comb block-----//
    //s = 30; r = 0; a = 11;
    if (scalar_rdat_vld_r[30][0][11]) begin
        scalar_argdone [30][0][11] = 1;
    end
    scalar_adr[30][0][11] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][11]) begin
        scalar_argVld[30][0][11] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[30][0][11] = 1;
    end

    //------READ (scalar, global adr = 1276) comb block-----//
    //s = 31; r = 1; a = 20;
    if (scalar_rdat_vld_r[31][1][20]) begin
        scalar_argdone [31][1][20] = 1;
    end
    scalar_adr[31][1][20] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][20]) begin
        scalar_argVld[31][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[31][1][20] = 1;
    end

    //------READ (scalar, global adr = 1280) comb block-----//
    //s = 0; r = 0; a = 19;
    if (scalar_rdat_vld_r[0][0][19]) begin
        scalar_argdone [0][0][19] = 1;
    end
    scalar_adr[0][0][19] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][19]) begin
        scalar_argVld[0][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[0][0][19] = 1;
    end

    //------READ (scalar, global adr = 1284) comb block-----//
    //s = 1; r = 1; a = 15;
    if (scalar_rdat_vld_r[1][1][15]) begin
        scalar_argdone [1][1][15] = 1;
    end
    scalar_adr[1][1][15] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][15]) begin
        scalar_argVld[1][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[1][1][15] = 1;
    end

    //------READ (scalar, global adr = 1240) comb block-----//
    //s = 22; r = 1; a = 16;
    if (scalar_rdat_vld_r[22][1][16]) begin
        scalar_argdone [22][1][16] = 1;
    end
    scalar_adr[22][1][16] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][16]) begin
        scalar_argVld[22][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[22][1][16] = 1;
    end

    //------WRITE (scalar, global adr = 36) comb block-----//
    //s = 9; r = 0; a = 9;
    if (scalar_argAck [9][0][9]) begin
        scalar_argVld [9][0][9] = 0;
        scalar_argAckdone [9][0][9] = 1;
    end
    if (hls_coding_unit_hls_dup3_length_r_ap_vld_r) begin
        scalar_argVld [9][0][9] = 1;
        scalar_argAckdone [9][0][9] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][9] = hls_coding_unit_hls_dup3_length_r_r;
    scalar_adr    [9][0][9] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 544) comb block-----//
    //s = 8; r = 1; a = 9;
    if (scalar_argAck [8][1][9]) begin
        scalar_argVld [8][1][9] = 0;
        scalar_argAckdone [8][1][9] = 1;
    end
    if (hls_coding_unit_hls_dup3_xm_x_ap_vld_r) begin
        scalar_argVld [8][1][9] = 1;
        scalar_argAckdone [8][1][9] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][9] = hls_coding_unit_hls_dup3_xm_x_r;
    scalar_adr    [8][1][9] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 548) comb block-----//
    //s = 9; r = 1; a = 9;
    if (scalar_argAck [9][1][9]) begin
        scalar_argVld [9][1][9] = 0;
        scalar_argAckdone [9][1][9] = 1;
    end
    if (hls_coding_unit_hls_dup3_xm_y_ap_vld_r) begin
        scalar_argVld [9][1][9] = 1;
        scalar_argAckdone [9][1][9] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][9] = hls_coding_unit_hls_dup3_xm_y_r;
    scalar_adr    [9][1][9] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 512) comb block-----//
    //s = 0; r = 0; a = 8;
    if (scalar_argAck [0][0][8]) begin
        scalar_argVld [0][0][8] = 0;
        scalar_argAckdone [0][0][8] = 1;
    end
    if (hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_ap_vld_r) begin
        scalar_argVld [0][0][8] = 1;
        scalar_argAckdone [0][0][8] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][8] = hls_coding_unit_hls_dup3_pu_intra_pred_mode_0_r;
    scalar_adr    [0][0][8] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 513) comb block-----//
    //s = 0; r = 1; a = 8;
    if (scalar_argAck [0][1][8]) begin
        scalar_argVld [0][1][8] = 0;
        scalar_argAckdone [0][1][8] = 1;
    end
    if (hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_ap_vld_r) begin
        scalar_argVld [0][1][8] = 1;
        scalar_argAckdone [0][1][8] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][8] = hls_coding_unit_hls_dup3_pu_intra_pred_mode_1_r;
    scalar_adr    [0][1][8] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 514) comb block-----//
    //s = 0; r = 0; a = 9;
    if (scalar_argAck [0][0][9]) begin
        scalar_argVld [0][0][9] = 0;
        scalar_argAckdone [0][0][9] = 1;
    end
    if (hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_ap_vld_r) begin
        scalar_argVld [0][0][9] = 1;
        scalar_argAckdone [0][0][9] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][9] = hls_coding_unit_hls_dup3_pu_intra_pred_mode_2_r;
    scalar_adr    [0][0][9] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 515) comb block-----//
    //s = 0; r = 1; a = 9;
    if (scalar_argAck [0][1][9]) begin
        scalar_argVld [0][1][9] = 0;
        scalar_argAckdone [0][1][9] = 1;
    end
    if (hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_ap_vld_r) begin
        scalar_argVld [0][1][9] = 1;
        scalar_argAckdone [0][1][9] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][9] = hls_coding_unit_hls_dup3_pu_intra_pred_mode_3_r;
    scalar_adr    [0][1][9] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 540) comb block-----//
    //s = 7; r = 1; a = 9;
    if (scalar_argAck [7][1][9]) begin
        scalar_argVld [7][1][9] = 0;
        scalar_argAckdone [7][1][9] = 1;
    end
    if (hls_coding_unit_hls_dup3_qPy_pred_ap_vld_r) begin
        scalar_argVld [7][1][9] = 1;
        scalar_argAckdone [7][1][9] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][9] = hls_coding_unit_hls_dup3_qPy_pred_r;
    scalar_adr    [7][1][9] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 24) comb block-----//
    //s = 6; r = 1; a = 7;
    if (scalar_argAck [6][1][7]) begin
        scalar_argVld [6][1][7] = 0;
        scalar_argAckdone [6][1][7] = 1;
    end
    if (hls_coding_unit_hls_dup3_skip_flag_start_ap_vld_r) begin
        scalar_argVld [6][1][7] = 1;
        scalar_argAckdone [6][1][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][7] = hls_coding_unit_hls_dup3_skip_flag_start_r;
    scalar_adr    [6][1][7] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 1; a = 14;
    if (scalar_rdat_vld_r[28][1][14]) begin
        scalar_argdone [28][1][14] = 1;
    end
    scalar_adr[28][1][14] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][14]) begin
        scalar_argVld[28][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[28][1][14] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 15;
    if (scalar_rdat_vld_r[26][1][15]) begin
        scalar_argdone [26][1][15] = 1;
    end
    scalar_adr[26][1][15] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][15]) begin
        scalar_argVld[26][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[26][1][15] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 0; a = 21;
    if (scalar_rdat_vld_r[13][0][21]) begin
        scalar_argdone [13][0][21] = 1;
    end
    scalar_adr[13][0][21] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][21]) begin
        scalar_argVld[13][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[13][0][21] = 1;
    end

    //------READ (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 24;
    if (scalar_rdat_vld_r[6][1][24]) begin
        scalar_argdone [6][1][24] = 1;
    end
    scalar_adr[6][1][24] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][24]) begin
        scalar_argVld[6][1][24] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[6][1][24] = 1;
    end

    //------READ (scalar, global adr = 440) comb block-----//
    //s = 14; r = 0; a = 20;
    if (scalar_rdat_vld_r[14][0][20]) begin
        scalar_argdone [14][0][20] = 1;
    end
    scalar_adr[14][0][20] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][20]) begin
        scalar_argVld[14][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[14][0][20] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 1; a = 13;
    if (scalar_rdat_vld_r[2][1][13]) begin
        scalar_argdone [2][1][13] = 1;
    end
    scalar_adr[2][1][13] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][13]) begin
        scalar_argVld[2][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[2][1][13] = 1;
    end

    //------WRITE (scalar, global adr = 568) comb block-----//
    //s = 14; r = 0; a = 7;
    if (scalar_argAck [14][0][7]) begin
        scalar_argVld [14][0][7] = 0;
        scalar_argAckdone [14][0][7] = 1;
    end
    if (hls_coding_unit_hls_dup3_intra_split_flag_ap_vld_r) begin
        scalar_argVld [14][0][7] = 1;
        scalar_argAckdone [14][0][7] = 0;
        ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION] = ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][7] = hls_coding_unit_hls_dup3_intra_split_flag_r;
    scalar_adr    [14][0][7] = {ap_part_w[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 0; a = 14;
    if (scalar_rdat_vld_r[17][0][14]) begin
        scalar_argdone [17][0][14] = 1;
    end
    scalar_adr[17][0][14] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][14]) begin
        scalar_argVld[17][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[17][0][14] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 12;
    if (scalar_rdat_vld_r[24][1][12]) begin
        scalar_argdone [24][1][12] = 1;
    end
    scalar_adr[24][1][12] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][12]) begin
        scalar_argVld[24][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[24][1][12] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 16;
    if (scalar_rdat_vld_r[23][1][16]) begin
        scalar_argdone [23][1][16] = 1;
    end
    scalar_adr[23][1][16] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][16]) begin
        scalar_argVld[23][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[23][1][16] = 1;
    end

    //------READ (scalar, global adr = 320) comb block-----//
    //s = 16; r = 1; a = 12;
    if (scalar_rdat_vld_r[16][1][12]) begin
        scalar_argdone [16][1][12] = 1;
    end
    scalar_adr[16][1][12] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][12]) begin
        scalar_argVld[16][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[16][1][12] = 1;
    end

    //------READ (scalar, global adr = 400) comb block-----//
    //s = 4; r = 1; a = 13;
    if (scalar_rdat_vld_r[4][1][13]) begin
        scalar_argdone [4][1][13] = 1;
    end
    scalar_adr[4][1][13] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][1][13]) begin
        scalar_argVld[4][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[4][1][13] = 1;
    end

    //------READ (scalar, global adr = 412) comb block-----//
    //s = 7; r = 1; a = 18;
    if (scalar_rdat_vld_r[7][1][18]) begin
        scalar_argdone [7][1][18] = 1;
    end
    scalar_adr[7][1][18] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][18]) begin
        scalar_argVld[7][1][18] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[7][1][18] = 1;
    end

    //------READ (scalar, global adr = 416) comb block-----//
    //s = 8; r = 0; a = 24;
    if (scalar_rdat_vld_r[8][0][24]) begin
        scalar_argdone [8][0][24] = 1;
    end
    scalar_adr[8][0][24] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][24]) begin
        scalar_argVld[8][0][24] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[8][0][24] = 1;
    end

    //------READ (scalar, global adr = 464) comb block-----//
    //s = 20; r = 0; a = 14;
    if (scalar_rdat_vld_r[20][0][14]) begin
        scalar_argdone [20][0][14] = 1;
    end
    scalar_adr[20][0][14] = {ap_part[hls_coding_unit_hls_dup3][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][14]) begin
        scalar_argVld[20][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_coding_unit_hls_dup3]) begin
        scalar_argVld[20][0][14] = 1;
    end

    //------WRITE (array range, global adr = 286176, width=8, addr_width=32) -----//
    //s = 0; a = 57;
    array_argVld [0][57] = hls_coding_unit_hls_dup3_skip_flag_EN_A & (hls_coding_unit_hls_dup3_skip_flag_WEN_A != 0);
    array_adr    [0][57] = hls_coding_unit_hls_dup3_skip_flag_Addr_A;
    array_wdat   [0][57] = hls_coding_unit_hls_dup3_skip_flag_Din_A;

    //------READ (array range, global adr = 286176, width=8, addr_width=32) -----//
    //s = 0; a = 217;
    hls_coding_unit_hls_dup3_skip_flag_Dout_A = array_rdat  [0][217];
    //found a write signal pair
    array_argVld [0][217] = hls_coding_unit_hls_dup3_skip_flag_EN_A & (hls_coding_unit_hls_dup3_skip_flag_WEN_A == 0);
    array_adr    [0][217] = hls_coding_unit_hls_dup3_skip_flag_Addr_A;

    //------WRITE (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 58;
    array_argVld [0][58] = hls_coding_unit_hls_dup3_qp_y_tab_EN_A & (hls_coding_unit_hls_dup3_qp_y_tab_WEN_A != 0);
    array_adr    [0][58] = hls_coding_unit_hls_dup3_qp_y_tab_Addr_A;
    array_wdat   [0][58] = hls_coding_unit_hls_dup3_qp_y_tab_Din_A;

    //------READ (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 218;
    hls_coding_unit_hls_dup3_qp_y_tab_Dout_A = array_rdat  [0][218];
    //found a write signal pair
    array_argVld [0][218] = hls_coding_unit_hls_dup3_qp_y_tab_EN_A & (hls_coding_unit_hls_dup3_qp_y_tab_WEN_A == 0);
    array_adr    [0][218] = hls_coding_unit_hls_dup3_qp_y_tab_Addr_A;

    //------WRITE (array range, global adr = 286208, width=8, addr_width=32) -----//
    //s = 0; a = 59;
    array_argVld [0][59] = hls_coding_unit_hls_dup3_tab_ct_depth_EN_A & (hls_coding_unit_hls_dup3_tab_ct_depth_WEN_A != 0);
    array_adr    [0][59] = hls_coding_unit_hls_dup3_tab_ct_depth_Addr_A;
    array_wdat   [0][59] = hls_coding_unit_hls_dup3_tab_ct_depth_Din_A;

    //------READ (array range, global adr = 286208, width=8, addr_width=32) -----//
    //s = 0; a = 219;
    hls_coding_unit_hls_dup3_tab_ct_depth_Dout_A = array_rdat  [0][219];
    //found a write signal pair
    array_argVld [0][219] = hls_coding_unit_hls_dup3_tab_ct_depth_EN_A & (hls_coding_unit_hls_dup3_tab_ct_depth_WEN_A == 0);
    array_adr    [0][219] = hls_coding_unit_hls_dup3_tab_ct_depth_Addr_A;

    hls_coding_unit_hls_dup3_ready = array_argRdy[0][57]& array_argRdy[0][217]& array_argRdy[0][58]& array_argRdy[0][218]& array_argRdy[0][59]& array_argRdy[0][219] & ~ap_arb_reload_running_r[hls_coding_unit_hls_dup3];
    array_ap_ce[0][57] = ap_ce[hls_coding_unit_hls_dup3];
    array_ap_ce[0][217] = ap_ce[hls_coding_unit_hls_dup3];
    array_ap_ce[0][58] = ap_ce[hls_coding_unit_hls_dup3];
    array_ap_ce[0][218] = ap_ce[hls_coding_unit_hls_dup3];
    array_ap_ce[0][59] = ap_ce[hls_coding_unit_hls_dup3];
    array_ap_ce[0][219] = ap_ce[hls_coding_unit_hls_dup3];

    if (ap_arb_ret[hls_coding_unit_hls_dup3] & ~ap_arb_ret_r[hls_coding_unit_hls_dup3]) begin
        ap_arb_ret_running[hls_coding_unit_hls_dup3] = 1;
        hls_coding_unit_hls_dup3_ready = 0;
    end

    scalar_argAckdone_all[hls_coding_unit_hls_dup3] = scalar_argAckdone[15][0][7] &
                                                scalar_argAckdone[7][1][8] &
                                                scalar_argAckdone[12][1][6] &
                                                scalar_argAckdone[13][1][5] &
                                                scalar_argAckdone[16][1][3] &
                                                scalar_argAckdone[8][1][8] &
                                                scalar_argAckdone[11][0][7] &
                                                scalar_argAckdone[4][0][2] &
                                                scalar_argAckdone[5][1][5] &
                                                scalar_argAckdone[6][0][7] &
                                                scalar_argAckdone[7][0][9] &
                                                scalar_argAckdone[8][0][9] &
                                                scalar_argAckdone[9][0][9] &
                                                scalar_argAckdone[8][1][9] &
                                                scalar_argAckdone[9][1][9] &
                                                scalar_argAckdone[0][0][8] &
                                                scalar_argAckdone[0][1][8] &
                                                scalar_argAckdone[0][0][9] &
                                                scalar_argAckdone[0][1][9] &
                                                scalar_argAckdone[7][1][9] &
                                                scalar_argAckdone[6][1][7] &
                                                scalar_argAckdone[14][0][7];
    if (ap_arb_ret_running[hls_coding_unit_hls_dup3] & scalar_argAckdone_all[hls_coding_unit_hls_dup3] &~ ap_arb_reload_running_r[hls_coding_unit_hls_dup3]) begin
        ap_arb_reload[hls_coding_unit_hls_dup3] = 1;
        ap_arb_reload_running[hls_coding_unit_hls_dup3] = 1;
    end

    if (ap_arb_start[hls_coding_unit_hls_dup3] &~ ap_arb_start_r[hls_coding_unit_hls_dup3]) begin
        ap_arb_start_running[hls_coding_unit_hls_dup3] = 1;
    end

    if (ap_arb_start_running[hls_coding_unit_hls_dup3] & ~scalar_writing_476& ~scalar_writing_572& ~scalar_writing_28& ~scalar_writing_504& ~scalar_writing_560& ~scalar_writing_564& ~scalar_writing_32& ~scalar_writing_44& ~scalar_writing_536& ~scalar_writing_608& ~scalar_writing_604& ~scalar_writing_464) begin
        ap_arb_start_running[hls_coding_unit_hls_dup3] = 0;
        ap_arb_reload[hls_coding_unit_hls_dup3] = 1;
    end

    scalar_argdone_all[hls_coding_unit_hls_dup3] = scalar_argdone[9][0][26] &
                                                                scalar_argdone[31][0][21] &
                                                                scalar_argdone[3][0][13] &
                                                                scalar_argdone[11][0][25] &
                                                                scalar_argdone[23][0][17] &
                                                                scalar_argdone[15][1][18] &
                                                                scalar_argdone[7][0][19] &
                                                                scalar_argdone[30][1][10] &
                                                                scalar_argdone[12][0][22] &
                                                                scalar_argdone[13][1][20] &
                                                                scalar_argdone[8][1][23] &
                                                                scalar_argdone[11][1][25] &
                                                                scalar_argdone[29][0][22] &
                                                                scalar_argdone[28][0][14] &
                                                                scalar_argdone[30][0][11] &
                                                                scalar_argdone[31][1][20] &
                                                                scalar_argdone[0][0][19] &
                                                                scalar_argdone[1][1][15] &
                                                                scalar_argdone[22][1][16] &
                                                                scalar_argdone[28][1][14] &
                                                                scalar_argdone[26][1][15] &
                                                                scalar_argdone[13][0][21] &
                                                                scalar_argdone[6][1][24] &
                                                                scalar_argdone[14][0][20] &
                                                                scalar_argdone[2][1][13] &
                                                                scalar_argdone[17][0][14] &
                                                                scalar_argdone[24][1][12] &
                                                                scalar_argdone[23][1][16] &
                                                                scalar_argdone[16][1][12] &
                                                                scalar_argdone[4][1][13] &
                                                                scalar_argdone[7][1][18] &
                                                                scalar_argdone[8][0][24] &
                                                                scalar_argdone[20][0][14];

    if (scalar_argdone_all_r[hls_coding_unit_hls_dup3]) begin
        scalar_argdone[9][0][26] = 0;
        scalar_argdone[31][0][21] = 0;
        scalar_argdone[3][0][13] = 0;
        scalar_argdone[11][0][25] = 0;
        scalar_argdone[23][0][17] = 0;
        scalar_argdone[15][1][18] = 0;
        scalar_argdone[7][0][19] = 0;
        scalar_argdone[30][1][10] = 0;
        scalar_argdone[12][0][22] = 0;
        scalar_argdone[13][1][20] = 0;
        scalar_argdone[8][1][23] = 0;
        scalar_argdone[11][1][25] = 0;
        scalar_argdone[29][0][22] = 0;
        scalar_argdone[28][0][14] = 0;
        scalar_argdone[30][0][11] = 0;
        scalar_argdone[31][1][20] = 0;
        scalar_argdone[0][0][19] = 0;
        scalar_argdone[1][1][15] = 0;
        scalar_argdone[22][1][16] = 0;
        scalar_argdone[28][1][14] = 0;
        scalar_argdone[26][1][15] = 0;
        scalar_argdone[13][0][21] = 0;
        scalar_argdone[6][1][24] = 0;
        scalar_argdone[14][0][20] = 0;
        scalar_argdone[2][1][13] = 0;
        scalar_argdone[17][0][14] = 0;
        scalar_argdone[24][1][12] = 0;
        scalar_argdone[23][1][16] = 0;
        scalar_argdone[16][1][12] = 0;
        scalar_argdone[4][1][13] = 0;
        scalar_argdone[7][1][18] = 0;
        scalar_argdone[8][0][24] = 0;
        scalar_argdone[20][0][14] = 0;

        if (ap_arb_start_r[hls_coding_unit_hls_dup3] & ~ap_running_r[hls_coding_unit_hls_dup3]) begin
            ap_start[hls_coding_unit_hls_dup3] = 1;
            ap_running[hls_coding_unit_hls_dup3] = 1;
        end
        else if (ap_arb_ret_running_r[hls_coding_unit_hls_dup3]) begin
            ap_arb_ret_running[hls_coding_unit_hls_dup3] = 0;
            ap_arb_reload_running[hls_coding_unit_hls_dup3] = 0;
        end
    end

    if (ap_start_r[hls_coding_unit_hls_dup3] & ap_ready_r[hls_coding_unit_hls_dup3]) begin
        ap_start[hls_coding_unit_hls_dup3] = 0;
    end

    if (ap_done_r[hls_coding_unit_hls_dup3]) begin
        ap_running[hls_coding_unit_hls_dup3] = 0;
    end
`endif
    //============================================================
    //copy_top_left_pixel_hls       (f = 22)
    //============================================================
`ifdef enable_connect_copy_top_left_pixel_hls
    //------READ (scalar, global adr = 168) comb block-----//
    //s = 10; r = 0; a = 14;
    if (scalar_rdat_vld_r[10][0][14]) begin
        scalar_argdone [10][0][14] = 1;
    end
    scalar_adr[10][0][14] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][14]) begin
        scalar_argVld[10][0][14] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld[10][0][14] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 7;
    if (scalar_rdat_vld_r[26][0][7]) begin
        scalar_argdone [26][0][7] = 1;
    end
    scalar_adr[26][0][7] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][7]) begin
        scalar_argVld[26][0][7] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld[26][0][7] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 1; a = 5;
    if (scalar_rdat_vld_r[30][1][5]) begin
        scalar_argdone [30][1][5] = 1;
    end
    scalar_adr[30][1][5] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][5]) begin
        scalar_argVld[30][1][5] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld[30][1][5] = 1;
    end

    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 1; a = 13;
    if (scalar_rdat_vld_r[12][1][13]) begin
        scalar_argdone [12][1][13] = 1;
    end
    scalar_adr[12][1][13] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][13]) begin
        scalar_argVld[12][1][13] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld[12][1][13] = 1;
    end

    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 1; a = 11;
    if (scalar_rdat_vld_r[20][1][11]) begin
        scalar_argdone [20][1][11] = 1;
    end
    scalar_adr    [20][1][11] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][11]) begin
        scalar_argVld [20][1][11] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [20][1][11] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 1; a = 10;
    if (scalar_rdat_vld_r[21][1][10]) begin
        scalar_argdone [21][1][10] = 1;
    end
    scalar_adr    [21][1][10] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][10]) begin
        scalar_argVld [21][1][10] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [21][1][10] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 1; a = 11;
    if (scalar_rdat_vld_r[22][1][11]) begin
        scalar_argdone [22][1][11] = 1;
    end
    scalar_adr    [22][1][11] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][11]) begin
        scalar_argVld [22][1][11] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [22][1][11] = 1;
    end

    //------READ (scalar, complete partition, global adr = 348) comb block-----//
    //s = 23; r = 0; a = 10;
    if (scalar_rdat_vld_r[23][0][10]) begin
        scalar_argdone [23][0][10] = 1;
    end
    scalar_adr    [23][0][10] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][10]) begin
        scalar_argVld [23][0][10] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [23][0][10] = 1;
    end

    //------READ (scalar, complete partition, global adr = 352) comb block-----//
    //s = 24; r = 0; a = 8;
    if (scalar_rdat_vld_r[24][0][8]) begin
        scalar_argdone [24][0][8] = 1;
    end
    scalar_adr    [24][0][8] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][8]) begin
        scalar_argVld [24][0][8] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [24][0][8] = 1;
    end

    //------READ (scalar, complete partition, global adr = 356) comb block-----//
    //s = 25; r = 0; a = 8;
    if (scalar_rdat_vld_r[25][0][8]) begin
        scalar_argdone [25][0][8] = 1;
    end
    scalar_adr    [25][0][8] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][8]) begin
        scalar_argVld [25][0][8] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [25][0][8] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1244) comb block-----//
    //s = 23; r = 1; a = 9;
    if (scalar_rdat_vld_r[23][1][9]) begin
        scalar_argdone [23][1][9] = 1;
    end
    scalar_adr    [23][1][9] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][9]) begin
        scalar_argVld [23][1][9] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [23][1][9] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1248) comb block-----//
    //s = 24; r = 1; a = 7;
    if (scalar_rdat_vld_r[24][1][7]) begin
        scalar_argdone [24][1][7] = 1;
    end
    scalar_adr    [24][1][7] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][7]) begin
        scalar_argVld [24][1][7] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [24][1][7] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1252) comb block-----//
    //s = 25; r = 1; a = 7;
    if (scalar_rdat_vld_r[25][1][7]) begin
        scalar_argdone [25][1][7] = 1;
    end
    scalar_adr    [25][1][7] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][7]) begin
        scalar_argVld [25][1][7] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [25][1][7] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1148) comb block-----//
    //s = 31; r = 1; a = 16;
    if (scalar_rdat_vld_r[31][1][16]) begin
        scalar_argdone [31][1][16] = 1;
    end
    scalar_adr    [31][1][16] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][16]) begin
        scalar_argVld [31][1][16] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [31][1][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1152) comb block-----//
    //s = 0; r = 1; a = 16;
    if (scalar_rdat_vld_r[0][1][16]) begin
        scalar_argdone [0][1][16] = 1;
    end
    scalar_adr    [0][1][16] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][16]) begin
        scalar_argVld [0][1][16] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [0][1][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1156) comb block-----//
    //s = 1; r = 0; a = 10;
    if (scalar_rdat_vld_r[1][0][10]) begin
        scalar_argdone [1][0][10] = 1;
    end
    scalar_adr    [1][0][10] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][10]) begin
        scalar_argVld [1][0][10] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld [1][0][10] = 1;
    end

    //------READ (scalar, global adr = 1140) comb block-----//
    //s = 29; r = 0; a = 18;
    if (scalar_rdat_vld_r[29][0][18]) begin
        scalar_argdone [29][0][18] = 1;
    end
    scalar_adr[29][0][18] = {ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][18]) begin
        scalar_argVld[29][0][18] = 0;
    end
    if (ap_arb_reload_r[copy_top_left_pixel_hls]) begin
        scalar_argVld[29][0][18] = 1;
    end

    //------WRITE (scalar, global adr = 1140) comb block-----//
    //s = 29; r = 0; a = 4;
    if (scalar_argAck [29][0][4]) begin
        scalar_argVld [29][0][4] = 0;
        scalar_argAckdone [29][0][4] = 1;
    end
    if (copy_top_left_pixel_hls_cmdr_run_o_ap_vld_r) begin
        scalar_argVld [29][0][4] = 1;
        scalar_argAckdone [29][0][4] = 0;
        ap_part_w[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION] = ap_part[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][4] = copy_top_left_pixel_hls_cmdr_run_o_r;
    scalar_adr    [29][0][4] = {ap_part_w[copy_top_left_pixel_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (ap_arb_ret[copy_top_left_pixel_hls] & ~ap_arb_ret_r[copy_top_left_pixel_hls]) begin
        ap_arb_ret_running[copy_top_left_pixel_hls] = 1;
        copy_top_left_pixel_hls_ready = 0;
    end

    scalar_argAckdone_all[copy_top_left_pixel_hls] = scalar_argAckdone[29][0][4];
    if (ap_arb_ret_running[copy_top_left_pixel_hls] & scalar_argAckdone_all[copy_top_left_pixel_hls] &~ ap_arb_reload_running_r[copy_top_left_pixel_hls]) begin
        ap_arb_reload[copy_top_left_pixel_hls] = 1;
        ap_arb_reload_running[copy_top_left_pixel_hls] = 1;
    end

    if (ap_arb_start[copy_top_left_pixel_hls] &~ ap_arb_start_r[copy_top_left_pixel_hls]) begin
        ap_arb_start_running[copy_top_left_pixel_hls] = 1;
    end

    if (ap_arb_start_running[copy_top_left_pixel_hls] & ~scalar_writing_168& ~scalar_writing_560& ~scalar_writing_1140) begin
        ap_arb_start_running[copy_top_left_pixel_hls] = 0;
        ap_arb_reload[copy_top_left_pixel_hls] = 1;
    end

    scalar_argdone_all[copy_top_left_pixel_hls] = scalar_argdone[10][0][14] &
                                                                scalar_argdone[26][0][7] &
                                                                scalar_argdone[30][1][5] &
                                                                scalar_argdone[12][1][13] &
                                                                scalar_argdone[20][1][11] &
                                                                scalar_argdone[21][1][10] &
                                                                scalar_argdone[22][1][11] &
                                                                scalar_argdone[23][0][10] &
                                                                scalar_argdone[24][0][8] &
                                                                scalar_argdone[25][0][8] &
                                                                scalar_argdone[23][1][9] &
                                                                scalar_argdone[24][1][7] &
                                                                scalar_argdone[25][1][7] &
                                                                scalar_argdone[31][1][16] &
                                                                scalar_argdone[0][1][16] &
                                                                scalar_argdone[1][0][10] &
                                                                scalar_argdone[29][0][18];

    if (scalar_argdone_all_r[copy_top_left_pixel_hls]) begin
        scalar_argdone[10][0][14] = 0;
        scalar_argdone[26][0][7] = 0;
        scalar_argdone[30][1][5] = 0;
        scalar_argdone[12][1][13] = 0;
        scalar_argdone[20][1][11] = 0;
        scalar_argdone[21][1][10] = 0;
        scalar_argdone[22][1][11] = 0;
        scalar_argdone[23][0][10] = 0;
        scalar_argdone[24][0][8] = 0;
        scalar_argdone[25][0][8] = 0;
        scalar_argdone[23][1][9] = 0;
        scalar_argdone[24][1][7] = 0;
        scalar_argdone[25][1][7] = 0;
        scalar_argdone[31][1][16] = 0;
        scalar_argdone[0][1][16] = 0;
        scalar_argdone[1][0][10] = 0;
        scalar_argdone[29][0][18] = 0;

        if (ap_arb_start_r[copy_top_left_pixel_hls] & ~ap_running_r[copy_top_left_pixel_hls]) begin
            ap_start[copy_top_left_pixel_hls] = 1;
            ap_running[copy_top_left_pixel_hls] = 1;
        end
        else if (ap_arb_ret_running_r[copy_top_left_pixel_hls]) begin
            ap_arb_ret_running[copy_top_left_pixel_hls] = 0;
            ap_arb_reload_running[copy_top_left_pixel_hls] = 0;
        end
    end

    if (ap_start_r[copy_top_left_pixel_hls] & ap_ready_r[copy_top_left_pixel_hls]) begin
        ap_start[copy_top_left_pixel_hls] = 0;
    end

    if (ap_done_r[copy_top_left_pixel_hls]) begin
        ap_running[copy_top_left_pixel_hls] = 0;
    end
`endif
    //============================================================
    //genPredCol_hls       (f = 23)
    //============================================================
`ifdef enable_connect_genPredCol_hls
    //------WRITE (scalar, complete partition, global adr = 180) comb block-----//
    //s = 13; r = 1; a = 1;
    if (scalar_argAck [13][1][1]) begin
        scalar_argVld [13][1][1] = 0;
        scalar_argAckdone [13][1][1] = 1;
    end
    if (genPredCol_hls_predColBuf_0_ap_vld_r) begin
        scalar_argVld [13][1][1] = 1;
        scalar_argAckdone [13][1][1] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][1] = genPredCol_hls_predColBuf_0_r;
    scalar_adr    [13][1][1] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 184) comb block-----//
    //s = 14; r = 0; a = 3;
    if (scalar_argAck [14][0][3]) begin
        scalar_argVld [14][0][3] = 0;
        scalar_argAckdone [14][0][3] = 1;
    end
    if (genPredCol_hls_predColBuf_1_ap_vld_r) begin
        scalar_argVld [14][0][3] = 1;
        scalar_argAckdone [14][0][3] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][3] = genPredCol_hls_predColBuf_1_r;
    scalar_adr    [14][0][3] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 188) comb block-----//
    //s = 15; r = 0; a = 3;
    if (scalar_argAck [15][0][3]) begin
        scalar_argVld [15][0][3] = 0;
        scalar_argAckdone [15][0][3] = 1;
    end
    if (genPredCol_hls_predColBuf_2_ap_vld_r) begin
        scalar_argVld [15][0][3] = 1;
        scalar_argAckdone [15][0][3] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][3] = genPredCol_hls_predColBuf_2_r;
    scalar_adr    [15][0][3] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 192) comb block-----//
    //s = 16; r = 1; a = 1;
    if (scalar_argAck [16][1][1]) begin
        scalar_argVld [16][1][1] = 0;
        scalar_argAckdone [16][1][1] = 1;
    end
    if (genPredCol_hls_predColBuf_3_ap_vld_r) begin
        scalar_argVld [16][1][1] = 1;
        scalar_argAckdone [16][1][1] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][1][1] = genPredCol_hls_predColBuf_3_r;
    scalar_adr    [16][1][1] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 196) comb block-----//
    //s = 17; r = 0; a = 2;
    if (scalar_argAck [17][0][2]) begin
        scalar_argVld [17][0][2] = 0;
        scalar_argAckdone [17][0][2] = 1;
    end
    if (genPredCol_hls_predColBuf_4_ap_vld_r) begin
        scalar_argVld [17][0][2] = 1;
        scalar_argAckdone [17][0][2] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][0][2] = genPredCol_hls_predColBuf_4_r;
    scalar_adr    [17][0][2] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 200) comb block-----//
    //s = 18; r = 0; a = 2;
    if (scalar_argAck [18][0][2]) begin
        scalar_argVld [18][0][2] = 0;
        scalar_argAckdone [18][0][2] = 1;
    end
    if (genPredCol_hls_predColBuf_5_ap_vld_r) begin
        scalar_argVld [18][0][2] = 1;
        scalar_argAckdone [18][0][2] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][0][2] = genPredCol_hls_predColBuf_5_r;
    scalar_adr    [18][0][2] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 204) comb block-----//
    //s = 19; r = 0; a = 3;
    if (scalar_argAck [19][0][3]) begin
        scalar_argVld [19][0][3] = 0;
        scalar_argAckdone [19][0][3] = 1;
    end
    if (genPredCol_hls_predColBuf_6_ap_vld_r) begin
        scalar_argVld [19][0][3] = 1;
        scalar_argAckdone [19][0][3] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][0][3] = genPredCol_hls_predColBuf_6_r;
    scalar_adr    [19][0][3] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 208) comb block-----//
    //s = 20; r = 0; a = 3;
    if (scalar_argAck [20][0][3]) begin
        scalar_argVld [20][0][3] = 0;
        scalar_argAckdone [20][0][3] = 1;
    end
    if (genPredCol_hls_predColBuf_7_ap_vld_r) begin
        scalar_argVld [20][0][3] = 1;
        scalar_argAckdone [20][0][3] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][3] = genPredCol_hls_predColBuf_7_r;
    scalar_adr    [20][0][3] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 212) comb block-----//
    //s = 21; r = 0; a = 2;
    if (scalar_argAck [21][0][2]) begin
        scalar_argVld [21][0][2] = 0;
        scalar_argAckdone [21][0][2] = 1;
    end
    if (genPredCol_hls_predColBuf_8_ap_vld_r) begin
        scalar_argVld [21][0][2] = 1;
        scalar_argAckdone [21][0][2] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][2] = genPredCol_hls_predColBuf_8_r;
    scalar_adr    [21][0][2] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 216) comb block-----//
    //s = 22; r = 0; a = 2;
    if (scalar_argAck [22][0][2]) begin
        scalar_argVld [22][0][2] = 0;
        scalar_argAckdone [22][0][2] = 1;
    end
    if (genPredCol_hls_predColBuf_9_ap_vld_r) begin
        scalar_argVld [22][0][2] = 1;
        scalar_argAckdone [22][0][2] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][2] = genPredCol_hls_predColBuf_9_r;
    scalar_adr    [22][0][2] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 220) comb block-----//
    //s = 23; r = 1; a = 1;
    if (scalar_argAck [23][1][1]) begin
        scalar_argVld [23][1][1] = 0;
        scalar_argAckdone [23][1][1] = 1;
    end
    if (genPredCol_hls_predColBuf_10_ap_vld_r) begin
        scalar_argVld [23][1][1] = 1;
        scalar_argAckdone [23][1][1] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][1][1] = genPredCol_hls_predColBuf_10_r;
    scalar_adr    [23][1][1] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 224) comb block-----//
    //s = 24; r = 1; a = 1;
    if (scalar_argAck [24][1][1]) begin
        scalar_argVld [24][1][1] = 0;
        scalar_argAckdone [24][1][1] = 1;
    end
    if (genPredCol_hls_predColBuf_11_ap_vld_r) begin
        scalar_argVld [24][1][1] = 1;
        scalar_argAckdone [24][1][1] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][1][1] = genPredCol_hls_predColBuf_11_r;
    scalar_adr    [24][1][1] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 228) comb block-----//
    //s = 25; r = 1; a = 1;
    if (scalar_argAck [25][1][1]) begin
        scalar_argVld [25][1][1] = 0;
        scalar_argAckdone [25][1][1] = 1;
    end
    if (genPredCol_hls_predColBuf_12_ap_vld_r) begin
        scalar_argVld [25][1][1] = 1;
        scalar_argAckdone [25][1][1] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][1][1] = genPredCol_hls_predColBuf_12_r;
    scalar_adr    [25][1][1] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 232) comb block-----//
    //s = 26; r = 1; a = 1;
    if (scalar_argAck [26][1][1]) begin
        scalar_argVld [26][1][1] = 0;
        scalar_argAckdone [26][1][1] = 1;
    end
    if (genPredCol_hls_predColBuf_13_ap_vld_r) begin
        scalar_argVld [26][1][1] = 1;
        scalar_argAckdone [26][1][1] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][1][1] = genPredCol_hls_predColBuf_13_r;
    scalar_adr    [26][1][1] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 236) comb block-----//
    //s = 27; r = 0; a = 6;
    if (scalar_argAck [27][0][6]) begin
        scalar_argVld [27][0][6] = 0;
        scalar_argAckdone [27][0][6] = 1;
    end
    if (genPredCol_hls_predColBuf_14_ap_vld_r) begin
        scalar_argVld [27][0][6] = 1;
        scalar_argAckdone [27][0][6] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][6] = genPredCol_hls_predColBuf_14_r;
    scalar_adr    [27][0][6] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 240) comb block-----//
    //s = 28; r = 0; a = 2;
    if (scalar_argAck [28][0][2]) begin
        scalar_argVld [28][0][2] = 0;
        scalar_argAckdone [28][0][2] = 1;
    end
    if (genPredCol_hls_predColBuf_15_ap_vld_r) begin
        scalar_argVld [28][0][2] = 1;
        scalar_argAckdone [28][0][2] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][0][2] = genPredCol_hls_predColBuf_15_r;
    scalar_adr    [28][0][2] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 244) comb block-----//
    //s = 29; r = 0; a = 20;
    if (scalar_rdat_vld_r[29][0][20]) begin
        scalar_argdone [29][0][20] = 1;
    end
    scalar_adr    [29][0][20] = {ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][20]) begin
        scalar_argVld [29][0][20] = 0;
    end
    if (ap_arb_reload_r[genPredCol_hls]) begin
        scalar_argVld [29][0][20] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 244) comb block-----//
    //s = 29; r = 1; a = 6;
    if (scalar_argAck [29][1][6]) begin
        scalar_argVld [29][1][6] = 0;
        scalar_argAckdone [29][1][6] = 1;
    end
    if (genPredCol_hls_predColBuf_16_o_ap_vld_r) begin
        scalar_argVld [29][1][6] = 1;
        scalar_argAckdone [29][1][6] = 0;
        ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION] = ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][6] = genPredCol_hls_predColBuf_16_o_r;
    scalar_adr    [29][1][6] = {ap_part_w[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 1; a = 17;
    if (scalar_rdat_vld_r[11][1][17]) begin
        scalar_argdone [11][1][17] = 1;
    end
    scalar_adr[11][1][17] = {ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][17]) begin
        scalar_argVld[11][1][17] = 0;
    end
    if (ap_arb_reload_r[genPredCol_hls]) begin
        scalar_argVld[11][1][17] = 1;
    end

    //------WRITE (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 42;
    array_argVld [0][42] = genPredCol_hls_tab_mvf_pred_flag_row_EN_A & (genPredCol_hls_tab_mvf_pred_flag_row_WEN_A != 0);
    array_adr    [0][42] = genPredCol_hls_tab_mvf_pred_flag_row_Addr_A;
    array_wdat   [0][42] = genPredCol_hls_tab_mvf_pred_flag_row_Din_A;

    //------READ (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 202;
    genPredCol_hls_tab_mvf_pred_flag_row_Dout_A = array_rdat  [0][202];
    //found a write signal pair
    array_argVld [0][202] = genPredCol_hls_tab_mvf_pred_flag_row_EN_A & (genPredCol_hls_tab_mvf_pred_flag_row_WEN_A == 0);
    array_adr    [0][202] = genPredCol_hls_tab_mvf_pred_flag_row_Addr_A;

    //------WRITE (array range, global adr = 286200, width=32, addr_width=32) -----//
    //s = 0; a = 43;
    array_argVld [0][43] = genPredCol_hls_cbf_luma_base_EN_A & (genPredCol_hls_cbf_luma_base_WEN_A != 0);
    array_adr    [0][43] = genPredCol_hls_cbf_luma_base_Addr_A;
    array_wdat   [0][43] = genPredCol_hls_cbf_luma_base_Din_A;

    //------READ (array range, global adr = 286200, width=32, addr_width=32) -----//
    //s = 0; a = 203;
    genPredCol_hls_cbf_luma_base_Dout_A = array_rdat  [0][203];
    //found a write signal pair
    array_argVld [0][203] = genPredCol_hls_cbf_luma_base_EN_A & (genPredCol_hls_cbf_luma_base_WEN_A == 0);
    array_adr    [0][203] = genPredCol_hls_cbf_luma_base_Addr_A;

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 0; a = 7;
    if (scalar_rdat_vld_r[30][0][7]) begin
        scalar_argdone [30][0][7] = 1;
    end
    scalar_adr[30][0][7] = {ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][7]) begin
        scalar_argVld[30][0][7] = 0;
    end
    if (ap_arb_reload_r[genPredCol_hls]) begin
        scalar_argVld[30][0][7] = 1;
    end

    //------READ (scalar, global adr = 388) comb block-----//
    //s = 1; r = 0; a = 13;
    if (scalar_rdat_vld_r[1][0][13]) begin
        scalar_argdone [1][0][13] = 1;
    end
    scalar_adr[1][0][13] = {ap_part[genPredCol_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][13]) begin
        scalar_argVld[1][0][13] = 0;
    end
    if (ap_arb_reload_r[genPredCol_hls]) begin
        scalar_argVld[1][0][13] = 1;
    end

    genPredCol_hls_ready = array_argRdy[0][42]& array_argRdy[0][202]& array_argRdy[0][43]& array_argRdy[0][203] & ~ap_arb_reload_running_r[genPredCol_hls];
    array_ap_ce[0][42] = ap_ce[genPredCol_hls];
    array_ap_ce[0][202] = ap_ce[genPredCol_hls];
    array_ap_ce[0][43] = ap_ce[genPredCol_hls];
    array_ap_ce[0][203] = ap_ce[genPredCol_hls];

    if (ap_arb_ret[genPredCol_hls] & ~ap_arb_ret_r[genPredCol_hls]) begin
        ap_arb_ret_running[genPredCol_hls] = 1;
        genPredCol_hls_ready = 0;
    end

    scalar_argAckdone_all[genPredCol_hls] = scalar_argAckdone[13][1][1] &
                                                scalar_argAckdone[14][0][3] &
                                                scalar_argAckdone[15][0][3] &
                                                scalar_argAckdone[16][1][1] &
                                                scalar_argAckdone[17][0][2] &
                                                scalar_argAckdone[18][0][2] &
                                                scalar_argAckdone[19][0][3] &
                                                scalar_argAckdone[20][0][3] &
                                                scalar_argAckdone[21][0][2] &
                                                scalar_argAckdone[22][0][2] &
                                                scalar_argAckdone[23][1][1] &
                                                scalar_argAckdone[24][1][1] &
                                                scalar_argAckdone[25][1][1] &
                                                scalar_argAckdone[26][1][1] &
                                                scalar_argAckdone[27][0][6] &
                                                scalar_argAckdone[28][0][2] &
                                                scalar_argAckdone[29][1][6];
    if (ap_arb_ret_running[genPredCol_hls] & scalar_argAckdone_all[genPredCol_hls] &~ ap_arb_reload_running_r[genPredCol_hls]) begin
        ap_arb_reload[genPredCol_hls] = 1;
        ap_arb_reload_running[genPredCol_hls] = 1;
    end

    if (ap_arb_start[genPredCol_hls] &~ ap_arb_start_r[genPredCol_hls]) begin
        ap_arb_start_running[genPredCol_hls] = 1;
    end

    if (ap_arb_start_running[genPredCol_hls] & ~scalar_writing_244) begin
        ap_arb_start_running[genPredCol_hls] = 0;
        ap_arb_reload[genPredCol_hls] = 1;
    end

    scalar_argdone_all[genPredCol_hls] = scalar_argdone[29][0][20] &
                                                                scalar_argdone[11][1][17] &
                                                                scalar_argdone[30][0][7] &
                                                                scalar_argdone[1][0][13];

    if (scalar_argdone_all_r[genPredCol_hls]) begin
        scalar_argdone[29][0][20] = 0;
        scalar_argdone[11][1][17] = 0;
        scalar_argdone[30][0][7] = 0;
        scalar_argdone[1][0][13] = 0;

        if (ap_arb_start_r[genPredCol_hls] & ~ap_running_r[genPredCol_hls]) begin
            ap_start[genPredCol_hls] = 1;
            ap_running[genPredCol_hls] = 1;
        end
        else if (ap_arb_ret_running_r[genPredCol_hls]) begin
            ap_arb_ret_running[genPredCol_hls] = 0;
            ap_arb_reload_running[genPredCol_hls] = 0;
        end
    end

    if (ap_start_r[genPredCol_hls] & ap_ready_r[genPredCol_hls]) begin
        ap_start[genPredCol_hls] = 0;
    end

    if (ap_done_r[genPredCol_hls]) begin
        ap_running[genPredCol_hls] = 0;
    end
`endif
    //============================================================
    //ff_hevc_get_sub_cu_zscan_id_hls       (f = 24)
    //============================================================
`ifdef enable_connect_ff_hevc_get_sub_cu_zscan_id_hls
    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 7;
    if (scalar_rdat_vld_r[26][1][7]) begin
        scalar_argdone [26][1][7] = 1;
    end
    scalar_adr[26][1][7] = {ap_part[ff_hevc_get_sub_cu_zscan_id_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][7]) begin
        scalar_argVld[26][1][7] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
        scalar_argVld[26][1][7] = 1;
    end

    //------WRITE (scalar, global adr = 248) comb block-----//
    //s = 30; r = 1; a = 1;
    if (scalar_argAck [30][1][1]) begin
        scalar_argVld [30][1][1] = 0;
        scalar_argAckdone [30][1][1] = 1;
    end
    if (ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_ap_vld_r) begin
        scalar_argVld [30][1][1] = 1;
        scalar_argAckdone [30][1][1] = 0;
        ap_part_w[ff_hevc_get_sub_cu_zscan_id_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_get_sub_cu_zscan_id_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [30][1][1] = ff_hevc_get_sub_cu_zscan_id_hls_zscan_id_r;
    scalar_adr    [30][1][1] = {ap_part_w[ff_hevc_get_sub_cu_zscan_id_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (ap_arb_ret[ff_hevc_get_sub_cu_zscan_id_hls] & ~ap_arb_ret_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
        ap_arb_ret_running[ff_hevc_get_sub_cu_zscan_id_hls] = 1;
        ff_hevc_get_sub_cu_zscan_id_hls_ready = 0;
    end

    scalar_argAckdone_all[ff_hevc_get_sub_cu_zscan_id_hls] = scalar_argAckdone[30][1][1];
    if (ap_arb_ret_running[ff_hevc_get_sub_cu_zscan_id_hls] & scalar_argAckdone_all[ff_hevc_get_sub_cu_zscan_id_hls] &~ ap_arb_reload_running_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
        ap_arb_reload[ff_hevc_get_sub_cu_zscan_id_hls] = 1;
        ap_arb_reload_running[ff_hevc_get_sub_cu_zscan_id_hls] = 1;
    end

    if (ap_arb_start[ff_hevc_get_sub_cu_zscan_id_hls] &~ ap_arb_start_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
        ap_arb_start_running[ff_hevc_get_sub_cu_zscan_id_hls] = 1;
    end

    if (ap_arb_start_running[ff_hevc_get_sub_cu_zscan_id_hls] ) begin
        ap_arb_start_running[ff_hevc_get_sub_cu_zscan_id_hls] = 0;
        ap_arb_reload[ff_hevc_get_sub_cu_zscan_id_hls] = 1;
    end

    scalar_argdone_all[ff_hevc_get_sub_cu_zscan_id_hls] = scalar_argdone[26][1][7];

    if (scalar_argdone_all_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
        scalar_argdone[26][1][7] = 0;

        if (ap_arb_start_r[ff_hevc_get_sub_cu_zscan_id_hls] & ~ap_running_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
            ap_start[ff_hevc_get_sub_cu_zscan_id_hls] = 1;
            ap_running[ff_hevc_get_sub_cu_zscan_id_hls] = 1;
        end
        else if (ap_arb_ret_running_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
            ap_arb_ret_running[ff_hevc_get_sub_cu_zscan_id_hls] = 0;
            ap_arb_reload_running[ff_hevc_get_sub_cu_zscan_id_hls] = 0;
        end
    end

    if (ap_start_r[ff_hevc_get_sub_cu_zscan_id_hls] & ap_ready_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
        ap_start[ff_hevc_get_sub_cu_zscan_id_hls] = 0;
    end

    if (ap_done_r[ff_hevc_get_sub_cu_zscan_id_hls]) begin
        ap_running[ff_hevc_get_sub_cu_zscan_id_hls] = 0;
    end
`endif
    //============================================================
    //ff_hevc_skip_flag_decode_hls       (f = 25)
    //============================================================
`ifdef enable_connect_ff_hevc_skip_flag_decode_hls
    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 9;
    if (scalar_rdat_vld_r[26][1][9]) begin
        scalar_argdone [26][1][9] = 1;
    end
    scalar_adr[26][1][9] = {ap_part[ff_hevc_skip_flag_decode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][9]) begin
        scalar_argVld[26][1][9] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_skip_flag_decode_hls]) begin
        scalar_argVld[26][1][9] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 8;
    if (scalar_rdat_vld_r[24][1][8]) begin
        scalar_argdone [24][1][8] = 1;
    end
    scalar_adr[24][1][8] = {ap_part[ff_hevc_skip_flag_decode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][8]) begin
        scalar_argVld[24][1][8] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_skip_flag_decode_hls]) begin
        scalar_argVld[24][1][8] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 10;
    if (scalar_rdat_vld_r[23][1][10]) begin
        scalar_argdone [23][1][10] = 1;
    end
    scalar_adr[23][1][10] = {ap_part[ff_hevc_skip_flag_decode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][10]) begin
        scalar_argVld[23][1][10] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_skip_flag_decode_hls]) begin
        scalar_argVld[23][1][10] = 1;
    end

    if (ap_arb_ret[ff_hevc_skip_flag_decode_hls] & ~ap_arb_ret_r[ff_hevc_skip_flag_decode_hls]) begin
        ap_arb_ret_running[ff_hevc_skip_flag_decode_hls] = 1;
        ff_hevc_skip_flag_decode_hls_ready = 0;
    end

    scalar_argAckdone_all[ff_hevc_skip_flag_decode_hls] = 1;
    if (ap_arb_ret_running[ff_hevc_skip_flag_decode_hls] & scalar_argAckdone_all[ff_hevc_skip_flag_decode_hls] &~ ap_arb_reload_running_r[ff_hevc_skip_flag_decode_hls]) begin
        ap_arb_reload[ff_hevc_skip_flag_decode_hls] = 1;
        ap_arb_reload_running[ff_hevc_skip_flag_decode_hls] = 1;
    end

    if (ap_arb_start[ff_hevc_skip_flag_decode_hls] &~ ap_arb_start_r[ff_hevc_skip_flag_decode_hls]) begin
        ap_arb_start_running[ff_hevc_skip_flag_decode_hls] = 1;
    end

    if (ap_arb_start_running[ff_hevc_skip_flag_decode_hls] & ~scalar_writing_608& ~scalar_writing_604) begin
        ap_arb_start_running[ff_hevc_skip_flag_decode_hls] = 0;
        ap_arb_reload[ff_hevc_skip_flag_decode_hls] = 1;
    end

    scalar_argdone_all[ff_hevc_skip_flag_decode_hls] = scalar_argdone[26][1][9] &
                                                                scalar_argdone[24][1][8] &
                                                                scalar_argdone[23][1][10];

    if (scalar_argdone_all_r[ff_hevc_skip_flag_decode_hls]) begin
        scalar_argdone[26][1][9] = 0;
        scalar_argdone[24][1][8] = 0;
        scalar_argdone[23][1][10] = 0;

        if (ap_arb_start_r[ff_hevc_skip_flag_decode_hls] & ~ap_running_r[ff_hevc_skip_flag_decode_hls]) begin
            ap_start[ff_hevc_skip_flag_decode_hls] = 1;
            ap_running[ff_hevc_skip_flag_decode_hls] = 1;
        end
        else if (ap_arb_ret_running_r[ff_hevc_skip_flag_decode_hls]) begin
            ap_arb_ret_running[ff_hevc_skip_flag_decode_hls] = 0;
            ap_arb_reload_running[ff_hevc_skip_flag_decode_hls] = 0;
        end
    end

    if (ap_start_r[ff_hevc_skip_flag_decode_hls] & ap_ready_r[ff_hevc_skip_flag_decode_hls]) begin
        ap_start[ff_hevc_skip_flag_decode_hls] = 0;
    end

    if (ap_done_r[ff_hevc_skip_flag_decode_hls]) begin
        ap_running[ff_hevc_skip_flag_decode_hls] = 0;
    end
`endif
    //============================================================
    //ff_hevc_set_qPy_hls       (f = 26)
    //============================================================
`ifdef enable_connect_ff_hevc_set_qPy_hls
    //------WRITE (scalar, global adr = 536) comb block-----//
    //s = 6; r = 1; a = 3;
    if (scalar_argAck [6][1][3]) begin
        scalar_argVld [6][1][3] = 0;
        scalar_argAckdone [6][1][3] = 1;
    end
    if (ff_hevc_set_qPy_hls_qp_y_ap_vld_r) begin
        scalar_argVld [6][1][3] = 1;
        scalar_argAckdone [6][1][3] = 0;
        ap_part_w[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][3] = ff_hevc_set_qPy_hls_qp_y_r;
    scalar_adr    [6][1][3] = {ap_part_w[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 532) comb block-----//
    //s = 5; r = 0; a = 19;
    if (scalar_rdat_vld_r[5][0][19]) begin
        scalar_argdone [5][0][19] = 1;
    end
    scalar_adr[5][0][19] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][19]) begin
        scalar_argVld[5][0][19] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[5][0][19] = 1;
    end

    //------WRITE (scalar, global adr = 532) comb block-----//
    //s = 5; r = 1; a = 3;
    if (scalar_argAck [5][1][3]) begin
        scalar_argVld [5][1][3] = 0;
        scalar_argAckdone [5][1][3] = 1;
    end
    if (ff_hevc_set_qPy_hls_first_qp_group_o_ap_vld_r) begin
        scalar_argVld [5][1][3] = 1;
        scalar_argAckdone [5][1][3] = 0;
        ap_part_w[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][3] = ff_hevc_set_qPy_hls_first_qp_group_o_r;
    scalar_adr    [5][1][3] = {ap_part_w[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 540) comb block-----//
    //s = 7; r = 0; a = 15;
    if (scalar_rdat_vld_r[7][0][15]) begin
        scalar_argdone [7][0][15] = 1;
    end
    scalar_adr[7][0][15] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][15]) begin
        scalar_argVld[7][0][15] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[7][0][15] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 10;
    if (scalar_rdat_vld_r[26][0][10]) begin
        scalar_argdone [26][0][10] = 1;
    end
    scalar_adr[26][0][10] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][10]) begin
        scalar_argVld[26][0][10] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[26][0][10] = 1;
    end

    //------READ (scalar, global adr = 436) comb block-----//
    //s = 13; r = 1; a = 12;
    if (scalar_rdat_vld_r[13][1][12]) begin
        scalar_argdone [13][1][12] = 1;
    end
    scalar_adr[13][1][12] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][12]) begin
        scalar_argVld[13][1][12] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[13][1][12] = 1;
    end

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 0; a = 8;
    if (scalar_rdat_vld_r[28][0][8]) begin
        scalar_argdone [28][0][8] = 1;
    end
    scalar_adr[28][0][8] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][8]) begin
        scalar_argVld[28][0][8] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[28][0][8] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 1; a = 8;
    if (scalar_rdat_vld_r[2][1][8]) begin
        scalar_argdone [2][1][8] = 1;
    end
    scalar_adr[2][1][8] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][8]) begin
        scalar_argVld[2][1][8] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[2][1][8] = 1;
    end

    //------READ (scalar, global adr = 460) comb block-----//
    //s = 19; r = 0; a = 11;
    if (scalar_rdat_vld_r[19][0][11]) begin
        scalar_argdone [19][0][11] = 1;
    end
    scalar_adr[19][0][11] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][11]) begin
        scalar_argVld[19][0][11] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[19][0][11] = 1;
    end

    //------WRITE (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 41;
    array_argVld [0][41] = ff_hevc_set_qPy_hls_qp_y_tab_EN_A & (ff_hevc_set_qPy_hls_qp_y_tab_WEN_A != 0);
    array_adr    [0][41] = ff_hevc_set_qPy_hls_qp_y_tab_Addr_A;
    array_wdat   [0][41] = ff_hevc_set_qPy_hls_qp_y_tab_Din_A;

    //------READ (array range, global adr = 286204, width=8, addr_width=32) -----//
    //s = 0; a = 201;
    ff_hevc_set_qPy_hls_qp_y_tab_Dout_A = array_rdat  [0][201];
    //found a write signal pair
    array_argVld [0][201] = ff_hevc_set_qPy_hls_qp_y_tab_EN_A & (ff_hevc_set_qPy_hls_qp_y_tab_WEN_A == 0);
    array_adr    [0][201] = ff_hevc_set_qPy_hls_qp_y_tab_Addr_A;

    //------READ (scalar, global adr = 468) comb block-----//
    //s = 21; r = 1; a = 12;
    if (scalar_rdat_vld_r[21][1][12]) begin
        scalar_argdone [21][1][12] = 1;
    end
    scalar_adr[21][1][12] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][12]) begin
        scalar_argVld[21][1][12] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[21][1][12] = 1;
    end

    //------READ (scalar, global adr = 1136) comb block-----//
    //s = 28; r = 1; a = 8;
    if (scalar_rdat_vld_r[28][1][8]) begin
        scalar_argdone [28][1][8] = 1;
    end
    scalar_adr[28][1][8] = {ap_part[ff_hevc_set_qPy_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][8]) begin
        scalar_argVld[28][1][8] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_qPy_hls]) begin
        scalar_argVld[28][1][8] = 1;
    end

    ff_hevc_set_qPy_hls_ready = array_argRdy[0][41]& array_argRdy[0][201] & ~ap_arb_reload_running_r[ff_hevc_set_qPy_hls];
    array_ap_ce[0][41] = ap_ce[ff_hevc_set_qPy_hls];
    array_ap_ce[0][201] = ap_ce[ff_hevc_set_qPy_hls];

    if (ap_arb_ret[ff_hevc_set_qPy_hls] & ~ap_arb_ret_r[ff_hevc_set_qPy_hls]) begin
        ap_arb_ret_running[ff_hevc_set_qPy_hls] = 1;
        ff_hevc_set_qPy_hls_ready = 0;
    end

    scalar_argAckdone_all[ff_hevc_set_qPy_hls] = scalar_argAckdone[6][1][3] &
                                                scalar_argAckdone[5][1][3];
    if (ap_arb_ret_running[ff_hevc_set_qPy_hls] & scalar_argAckdone_all[ff_hevc_set_qPy_hls] &~ ap_arb_reload_running_r[ff_hevc_set_qPy_hls]) begin
        ap_arb_reload[ff_hevc_set_qPy_hls] = 1;
        ap_arb_reload_running[ff_hevc_set_qPy_hls] = 1;
    end

    if (ap_arb_start[ff_hevc_set_qPy_hls] &~ ap_arb_start_r[ff_hevc_set_qPy_hls]) begin
        ap_arb_start_running[ff_hevc_set_qPy_hls] = 1;
    end

    if (ap_arb_start_running[ff_hevc_set_qPy_hls] & ~scalar_writing_532& ~scalar_writing_540& ~scalar_writing_468) begin
        ap_arb_start_running[ff_hevc_set_qPy_hls] = 0;
        ap_arb_reload[ff_hevc_set_qPy_hls] = 1;
    end

    scalar_argdone_all[ff_hevc_set_qPy_hls] = scalar_argdone[5][0][19] &
                                                                scalar_argdone[7][0][15] &
                                                                scalar_argdone[26][0][10] &
                                                                scalar_argdone[13][1][12] &
                                                                scalar_argdone[28][0][8] &
                                                                scalar_argdone[2][1][8] &
                                                                scalar_argdone[19][0][11] &
                                                                scalar_argdone[21][1][12] &
                                                                scalar_argdone[28][1][8];

    if (scalar_argdone_all_r[ff_hevc_set_qPy_hls]) begin
        scalar_argdone[5][0][19] = 0;
        scalar_argdone[7][0][15] = 0;
        scalar_argdone[26][0][10] = 0;
        scalar_argdone[13][1][12] = 0;
        scalar_argdone[28][0][8] = 0;
        scalar_argdone[2][1][8] = 0;
        scalar_argdone[19][0][11] = 0;
        scalar_argdone[21][1][12] = 0;
        scalar_argdone[28][1][8] = 0;

        if (ap_arb_start_r[ff_hevc_set_qPy_hls] & ~ap_running_r[ff_hevc_set_qPy_hls]) begin
            ap_start[ff_hevc_set_qPy_hls] = 1;
            ap_running[ff_hevc_set_qPy_hls] = 1;
        end
        else if (ap_arb_ret_running_r[ff_hevc_set_qPy_hls]) begin
            ap_arb_ret_running[ff_hevc_set_qPy_hls] = 0;
            ap_arb_reload_running[ff_hevc_set_qPy_hls] = 0;
        end
    end

    if (ap_start_r[ff_hevc_set_qPy_hls] & ap_ready_r[ff_hevc_set_qPy_hls]) begin
        ap_start[ff_hevc_set_qPy_hls] = 0;
    end

    if (ap_done_r[ff_hevc_set_qPy_hls]) begin
        ap_running[ff_hevc_set_qPy_hls] = 0;
    end
`endif
    //============================================================
    //ff_hevc_deblocking_boundary_strengths_hls       (f = 27)
    //============================================================
`ifdef enable_connect_ff_hevc_deblocking_boundary_strengths_hls
    //------READ (scalar, global adr = 168) comb block-----//
    //s = 10; r = 1; a = 14;
    if (scalar_rdat_vld_r[10][1][14]) begin
        scalar_argdone [10][1][14] = 1;
    end
    scalar_adr[10][1][14] = {ap_part[ff_hevc_deblocking_boundary_strengths_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][14]) begin
        scalar_argVld[10][1][14] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        scalar_argVld[10][1][14] = 1;
    end

    //------READ (scalar, global adr = 1512) comb block-----//
    //s = 26; r = 1; a = 6;
    if (scalar_rdat_vld_r[26][1][6]) begin
        scalar_argdone [26][1][6] = 1;
    end
    scalar_adr[26][1][6] = {ap_part[ff_hevc_deblocking_boundary_strengths_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][6]) begin
        scalar_argVld[26][1][6] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        scalar_argVld[26][1][6] = 1;
    end

    //------WRITE (array range, global adr = 286260, width=8, addr_width=32) -----//
    //s = 0; a = 21;
    array_argVld [0][21] = ff_hevc_deblocking_boundary_strengths_hls_horizontal_bs_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_horizontal_bs_WEN_A != 0);
    array_adr    [0][21] = ff_hevc_deblocking_boundary_strengths_hls_horizontal_bs_Addr_A;
    array_wdat   [0][21] = ff_hevc_deblocking_boundary_strengths_hls_horizontal_bs_Din_A;

    //------READ (array range, global adr = 286260, width=8, addr_width=32) -----//
    //s = 0; a = 181;
    ff_hevc_deblocking_boundary_strengths_hls_horizontal_bs_Dout_A = array_rdat  [0][181];
    //found a write signal pair
    array_argVld [0][181] = ff_hevc_deblocking_boundary_strengths_hls_horizontal_bs_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_horizontal_bs_WEN_A == 0);
    array_adr    [0][181] = ff_hevc_deblocking_boundary_strengths_hls_horizontal_bs_Addr_A;

    //------WRITE (array range, global adr = 286264, width=8, addr_width=32) -----//
    //s = 0; a = 22;
    array_argVld [0][22] = ff_hevc_deblocking_boundary_strengths_hls_vertical_bs_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_vertical_bs_WEN_A != 0);
    array_adr    [0][22] = ff_hevc_deblocking_boundary_strengths_hls_vertical_bs_Addr_A;
    array_wdat   [0][22] = ff_hevc_deblocking_boundary_strengths_hls_vertical_bs_Din_A;

    //------READ (array range, global adr = 286264, width=8, addr_width=32) -----//
    //s = 0; a = 182;
    ff_hevc_deblocking_boundary_strengths_hls_vertical_bs_Dout_A = array_rdat  [0][182];
    //found a write signal pair
    array_argVld [0][182] = ff_hevc_deblocking_boundary_strengths_hls_vertical_bs_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_vertical_bs_WEN_A == 0);
    array_adr    [0][182] = ff_hevc_deblocking_boundary_strengths_hls_vertical_bs_Addr_A;

    //------READ (scalar, global adr = 1508) comb block-----//
    //s = 25; r = 0; a = 9;
    if (scalar_rdat_vld_r[25][0][9]) begin
        scalar_argdone [25][0][9] = 1;
    end
    scalar_adr[25][0][9] = {ap_part[ff_hevc_deblocking_boundary_strengths_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][9]) begin
        scalar_argVld[25][0][9] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        scalar_argVld[25][0][9] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 1; a = 18;
    if (scalar_rdat_vld_r[29][1][18]) begin
        scalar_argdone [29][1][18] = 1;
    end
    scalar_adr[29][1][18] = {ap_part[ff_hevc_deblocking_boundary_strengths_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][18]) begin
        scalar_argVld[29][1][18] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        scalar_argVld[29][1][18] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 0; a = 6;
    if (scalar_rdat_vld_r[30][0][6]) begin
        scalar_argdone [30][0][6] = 1;
    end
    scalar_adr[30][0][6] = {ap_part[ff_hevc_deblocking_boundary_strengths_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][6]) begin
        scalar_argVld[30][0][6] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        scalar_argVld[30][0][6] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 8;
    if (scalar_rdat_vld_r[26][0][8]) begin
        scalar_argdone [26][0][8] = 1;
    end
    scalar_adr[26][0][8] = {ap_part[ff_hevc_deblocking_boundary_strengths_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][8]) begin
        scalar_argVld[26][0][8] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        scalar_argVld[26][0][8] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 1; a = 6;
    if (scalar_rdat_vld_r[3][1][6]) begin
        scalar_argdone [3][1][6] = 1;
    end
    scalar_adr[3][1][6] = {ap_part[ff_hevc_deblocking_boundary_strengths_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][6]) begin
        scalar_argVld[3][1][6] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        scalar_argVld[3][1][6] = 1;
    end

    //------READ (scalar, global adr = 388) comb block-----//
    //s = 1; r = 1; a = 10;
    if (scalar_rdat_vld_r[1][1][10]) begin
        scalar_argdone [1][1][10] = 1;
    end
    scalar_adr[1][1][10] = {ap_part[ff_hevc_deblocking_boundary_strengths_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][10]) begin
        scalar_argVld[1][1][10] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        scalar_argVld[1][1][10] = 1;
    end

    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 0; a = 13;
    if (scalar_rdat_vld_r[11][0][13]) begin
        scalar_argdone [11][0][13] = 1;
    end
    scalar_adr[11][0][13] = {ap_part[ff_hevc_deblocking_boundary_strengths_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][13]) begin
        scalar_argVld[11][0][13] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        scalar_argVld[11][0][13] = 1;
    end

    //------READ (scalar, global adr = 264) comb block-----//
    //s = 2; r = 0; a = 8;
    if (scalar_rdat_vld_r[2][0][8]) begin
        scalar_argdone [2][0][8] = 1;
    end
    scalar_adr[2][0][8] = {ap_part[ff_hevc_deblocking_boundary_strengths_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][8]) begin
        scalar_argVld[2][0][8] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        scalar_argVld[2][0][8] = 1;
    end

    //------READ (scalar, global adr = 260) comb block-----//
    //s = 1; r = 0; a = 11;
    if (scalar_rdat_vld_r[1][0][11]) begin
        scalar_argdone [1][0][11] = 1;
    end
    scalar_adr[1][0][11] = {ap_part[ff_hevc_deblocking_boundary_strengths_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][11]) begin
        scalar_argVld[1][0][11] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        scalar_argVld[1][0][11] = 1;
    end

    //------READ (scalar, global adr = 268) comb block-----//
    //s = 3; r = 0; a = 8;
    if (scalar_rdat_vld_r[3][0][8]) begin
        scalar_argdone [3][0][8] = 1;
    end
    scalar_adr[3][0][8] = {ap_part[ff_hevc_deblocking_boundary_strengths_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][8]) begin
        scalar_argVld[3][0][8] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        scalar_argVld[3][0][8] = 1;
    end

    //------WRITE (array range, global adr = 286200, width=32, addr_width=32) -----//
    //s = 0; a = 23;
    array_argVld [0][23] = ff_hevc_deblocking_boundary_strengths_hls_cbf_luma_base_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_cbf_luma_base_WEN_A != 0);
    array_adr    [0][23] = ff_hevc_deblocking_boundary_strengths_hls_cbf_luma_base_Addr_A;
    array_wdat   [0][23] = ff_hevc_deblocking_boundary_strengths_hls_cbf_luma_base_Din_A;

    //------READ (array range, global adr = 286200, width=32, addr_width=32) -----//
    //s = 0; a = 183;
    ff_hevc_deblocking_boundary_strengths_hls_cbf_luma_base_Dout_A = array_rdat  [0][183];
    //found a write signal pair
    array_argVld [0][183] = ff_hevc_deblocking_boundary_strengths_hls_cbf_luma_base_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_cbf_luma_base_WEN_A == 0);
    array_adr    [0][183] = ff_hevc_deblocking_boundary_strengths_hls_cbf_luma_base_Addr_A;

    //------WRITE (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 24;
    array_argVld [0][24] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_pred_flag_row_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_pred_flag_row_WEN_A != 0);
    array_adr    [0][24] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_pred_flag_row_Addr_A;
    array_wdat   [0][24] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_pred_flag_row_Din_A;

    //------READ (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 184;
    ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_pred_flag_row_Dout_A = array_rdat  [0][184];
    //found a write signal pair
    array_argVld [0][184] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_pred_flag_row_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_pred_flag_row_WEN_A == 0);
    array_adr    [0][184] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_pred_flag_row_Addr_A;

    //------WRITE (array range, global adr = 286240, width=16, addr_width=32) -----//
    //s = 0; a = 25;
    array_argVld [0][25] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_x_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_x_WEN_A != 0);
    array_adr    [0][25] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_x_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][25] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_x_Din_A;

    //------READ (array range, global adr = 286240, width=16, addr_width=32) -----//
    //s = 0; a = 185;
    ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_x_Dout_A = array_rdat  [0][185];
    //found a write signal pair
    array_argVld [0][185] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_x_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_x_WEN_A == 0);
    array_adr    [0][185] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_x_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286244, width=16, addr_width=32) -----//
    //s = 0; a = 26;
    array_argVld [0][26] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_y_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_y_WEN_A != 0);
    array_adr    [0][26] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_y_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][26] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_y_Din_A;

    //------READ (array range, global adr = 286244, width=16, addr_width=32) -----//
    //s = 0; a = 186;
    ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_y_Dout_A = array_rdat  [0][186];
    //found a write signal pair
    array_argVld [0][186] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_y_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_y_WEN_A == 0);
    array_adr    [0][186] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_0_y_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286248, width=16, addr_width=32) -----//
    //s = 0; a = 27;
    array_argVld [0][27] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_x_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_x_WEN_A != 0);
    array_adr    [0][27] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_x_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][27] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_x_Din_A;

    //------READ (array range, global adr = 286248, width=16, addr_width=32) -----//
    //s = 0; a = 187;
    ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_x_Dout_A = array_rdat  [0][187];
    //found a write signal pair
    array_argVld [0][187] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_x_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_x_WEN_A == 0);
    array_adr    [0][187] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_x_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286252, width=16, addr_width=32) -----//
    //s = 0; a = 28;
    array_argVld [0][28] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_y_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_y_WEN_A != 0);
    array_adr    [0][28] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_y_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][28] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_y_Din_A;

    //------READ (array range, global adr = 286252, width=16, addr_width=32) -----//
    //s = 0; a = 188;
    ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_y_Dout_A = array_rdat  [0][188];
    //found a write signal pair
    array_argVld [0][188] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_y_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_y_WEN_A == 0);
    array_adr    [0][188] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_mv_1_y_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286256, width=32, addr_width=32) -----//
    //s = 0; a = 29;
    array_argVld [0][29] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_0_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_0_WEN_A != 0);
    array_adr    [0][29] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_0_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][29] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_0_Din_A;

    //------READ (array range, global adr = 286256, width=32, addr_width=32) -----//
    //s = 0; a = 189;
    ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_0_Dout_A = array_rdat  [0][189];
    //found a write signal pair
    array_argVld [0][189] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_0_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_0_WEN_A == 0);
    array_adr    [0][189] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_0_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286260, width=32, addr_width=32) -----//
    //s = 0; a = 30;
    array_argVld [0][30] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_1_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_1_WEN_A != 0);
    array_adr    [0][30] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_1_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][30] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_1_Din_A;

    //------READ (array range, global adr = 286260, width=32, addr_width=32) -----//
    //s = 0; a = 190;
    ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_1_Dout_A = array_rdat  [0][190];
    //found a write signal pair
    array_argVld [0][190] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_1_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_1_WEN_A == 0);
    array_adr    [0][190] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_poc_1_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286264, width=8, addr_width=32) -----//
    //s = 0; a = 31;
    array_argVld [0][31] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_0_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_0_WEN_A != 0);
    array_adr    [0][31] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_0_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][31] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_0_Din_A;

    //------READ (array range, global adr = 286264, width=8, addr_width=32) -----//
    //s = 0; a = 191;
    ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_0_Dout_A = array_rdat  [0][191];
    //found a write signal pair
    array_argVld [0][191] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_0_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_0_WEN_A == 0);
    array_adr    [0][191] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_0_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286268, width=8, addr_width=32) -----//
    //s = 0; a = 32;
    array_argVld [0][32] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_1_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_1_WEN_A != 0);
    array_adr    [0][32] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_1_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][32] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_1_Din_A;

    //------READ (array range, global adr = 286268, width=8, addr_width=32) -----//
    //s = 0; a = 192;
    ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_1_Dout_A = array_rdat  [0][192];
    //found a write signal pair
    array_argVld [0][192] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_1_EN_A & (ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_1_WEN_A == 0);
    array_adr    [0][192] = ff_hevc_deblocking_boundary_strengths_hls_tab_mvf_ref_idx_1_Addr_A * 32;  //struct_size: 32

    ff_hevc_deblocking_boundary_strengths_hls_ready = array_argRdy[0][21]& array_argRdy[0][181]& array_argRdy[0][22]& array_argRdy[0][182]& array_argRdy[0][23]& array_argRdy[0][183]& array_argRdy[0][24]& array_argRdy[0][184]& array_argRdy[0][25]& array_argRdy[0][185]& array_argRdy[0][26]& array_argRdy[0][186]& array_argRdy[0][27]& array_argRdy[0][187]& array_argRdy[0][28]& array_argRdy[0][188]& array_argRdy[0][29]& array_argRdy[0][189]& array_argRdy[0][30]& array_argRdy[0][190]& array_argRdy[0][31]& array_argRdy[0][191]& array_argRdy[0][32]& array_argRdy[0][192] & ~ap_arb_reload_running_r[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][21] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][181] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][22] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][182] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][23] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][183] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][24] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][184] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][25] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][185] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][26] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][186] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][27] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][187] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][28] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][188] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][29] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][189] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][30] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][190] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][31] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][191] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][32] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];
    array_ap_ce[0][192] = ap_ce[ff_hevc_deblocking_boundary_strengths_hls];

    if (ap_arb_ret[ff_hevc_deblocking_boundary_strengths_hls] & ~ap_arb_ret_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        ap_arb_ret_running[ff_hevc_deblocking_boundary_strengths_hls] = 1;
        ff_hevc_deblocking_boundary_strengths_hls_ready = 0;
    end

    scalar_argAckdone_all[ff_hevc_deblocking_boundary_strengths_hls] = 1;
    if (ap_arb_ret_running[ff_hevc_deblocking_boundary_strengths_hls] & scalar_argAckdone_all[ff_hevc_deblocking_boundary_strengths_hls] &~ ap_arb_reload_running_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        ap_arb_reload[ff_hevc_deblocking_boundary_strengths_hls] = 1;
        ap_arb_reload_running[ff_hevc_deblocking_boundary_strengths_hls] = 1;
    end

    if (ap_arb_start[ff_hevc_deblocking_boundary_strengths_hls] &~ ap_arb_start_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        ap_arb_start_running[ff_hevc_deblocking_boundary_strengths_hls] = 1;
    end

    if (ap_arb_start_running[ff_hevc_deblocking_boundary_strengths_hls] & ~scalar_writing_168& ~scalar_writing_264& ~scalar_writing_260) begin
        ap_arb_start_running[ff_hevc_deblocking_boundary_strengths_hls] = 0;
        ap_arb_reload[ff_hevc_deblocking_boundary_strengths_hls] = 1;
    end

    scalar_argdone_all[ff_hevc_deblocking_boundary_strengths_hls] = scalar_argdone[10][1][14] &
                                                                scalar_argdone[26][1][6] &
                                                                scalar_argdone[25][0][9] &
                                                                scalar_argdone[29][1][18] &
                                                                scalar_argdone[30][0][6] &
                                                                scalar_argdone[26][0][8] &
                                                                scalar_argdone[3][1][6] &
                                                                scalar_argdone[1][1][10] &
                                                                scalar_argdone[11][0][13] &
                                                                scalar_argdone[2][0][8] &
                                                                scalar_argdone[1][0][11] &
                                                                scalar_argdone[3][0][8];

    if (scalar_argdone_all_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        scalar_argdone[10][1][14] = 0;
        scalar_argdone[26][1][6] = 0;
        scalar_argdone[25][0][9] = 0;
        scalar_argdone[29][1][18] = 0;
        scalar_argdone[30][0][6] = 0;
        scalar_argdone[26][0][8] = 0;
        scalar_argdone[3][1][6] = 0;
        scalar_argdone[1][1][10] = 0;
        scalar_argdone[11][0][13] = 0;
        scalar_argdone[2][0][8] = 0;
        scalar_argdone[1][0][11] = 0;
        scalar_argdone[3][0][8] = 0;

        if (ap_arb_start_r[ff_hevc_deblocking_boundary_strengths_hls] & ~ap_running_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
            ap_start[ff_hevc_deblocking_boundary_strengths_hls] = 1;
            ap_running[ff_hevc_deblocking_boundary_strengths_hls] = 1;
        end
        else if (ap_arb_ret_running_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
            ap_arb_ret_running[ff_hevc_deblocking_boundary_strengths_hls] = 0;
            ap_arb_reload_running[ff_hevc_deblocking_boundary_strengths_hls] = 0;
        end
    end

    if (ap_start_r[ff_hevc_deblocking_boundary_strengths_hls] & ap_ready_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        ap_start[ff_hevc_deblocking_boundary_strengths_hls] = 0;
    end

    if (ap_done_r[ff_hevc_deblocking_boundary_strengths_hls]) begin
        ap_running[ff_hevc_deblocking_boundary_strengths_hls] = 0;
    end
`endif
    //============================================================
    //hls_decode_neighbour_hls       (f = 28)
    //============================================================
`ifdef enable_connect_hls_decode_neighbour_hls
    //------WRITE (array range, global adr = 286192, width=16, addr_width=32) -----//
    //s = 0; a = 60;
    array_argVld [0][60] = hls_decode_neighbour_hls_ctb_addr_rs_to_ts_EN_A & (hls_decode_neighbour_hls_ctb_addr_rs_to_ts_WEN_A != 0);
    array_adr    [0][60] = hls_decode_neighbour_hls_ctb_addr_rs_to_ts_Addr_A;
    array_wdat   [0][60] = hls_decode_neighbour_hls_ctb_addr_rs_to_ts_Din_A;

    //------READ (array range, global adr = 286192, width=16, addr_width=32) -----//
    //s = 0; a = 220;
    hls_decode_neighbour_hls_ctb_addr_rs_to_ts_Dout_A = array_rdat  [0][220];
    //found a write signal pair
    array_argVld [0][220] = hls_decode_neighbour_hls_ctb_addr_rs_to_ts_EN_A & (hls_decode_neighbour_hls_ctb_addr_rs_to_ts_WEN_A == 0);
    array_adr    [0][220] = hls_decode_neighbour_hls_ctb_addr_rs_to_ts_Addr_A;

    //------WRITE (array range, global adr = 286196, width=16, addr_width=32) -----//
    //s = 0; a = 61;
    array_argVld [0][61] = hls_decode_neighbour_hls_tile_id_EN_A & (hls_decode_neighbour_hls_tile_id_WEN_A != 0);
    array_adr    [0][61] = hls_decode_neighbour_hls_tile_id_Addr_A;
    array_wdat   [0][61] = hls_decode_neighbour_hls_tile_id_Din_A;

    //------READ (array range, global adr = 286196, width=16, addr_width=32) -----//
    //s = 0; a = 221;
    hls_decode_neighbour_hls_tile_id_Dout_A = array_rdat  [0][221];
    //found a write signal pair
    array_argVld [0][221] = hls_decode_neighbour_hls_tile_id_EN_A & (hls_decode_neighbour_hls_tile_id_WEN_A == 0);
    array_adr    [0][221] = hls_decode_neighbour_hls_tile_id_Addr_A;

    //------WRITE (scalar, global adr = 532) comb block-----//
    //s = 5; r = 0; a = 6;
    if (scalar_argAck [5][0][6]) begin
        scalar_argVld [5][0][6] = 0;
        scalar_argAckdone [5][0][6] = 1;
    end
    if (hls_decode_neighbour_hls_first_qp_group_ap_vld_r) begin
        scalar_argVld [5][0][6] = 1;
        scalar_argAckdone [5][0][6] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][6] = hls_decode_neighbour_hls_first_qp_group_r;
    scalar_adr    [5][0][6] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 620) comb block-----//
    //s = 27; r = 1; a = 6;
    if (scalar_argAck [27][1][6]) begin
        scalar_argVld [27][1][6] = 0;
        scalar_argAckdone [27][1][6] = 1;
    end
    if (hls_decode_neighbour_hls_end_of_tiles_x_ap_vld_r) begin
        scalar_argVld [27][1][6] = 1;
        scalar_argAckdone [27][1][6] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][1][6] = hls_decode_neighbour_hls_end_of_tiles_x_r;
    scalar_adr    [27][1][6] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 624) comb block-----//
    //s = 28; r = 1; a = 2;
    if (scalar_argAck [28][1][2]) begin
        scalar_argVld [28][1][2] = 0;
        scalar_argAckdone [28][1][2] = 1;
    end
    if (hls_decode_neighbour_hls_end_of_tiles_y_ap_vld_r) begin
        scalar_argVld [28][1][2] = 1;
        scalar_argAckdone [28][1][2] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][1][2] = hls_decode_neighbour_hls_end_of_tiles_y_r;
    scalar_adr    [28][1][2] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 260) comb block-----//
    //s = 1; r = 0; a = 2;
    if (scalar_argAck [1][0][2]) begin
        scalar_argVld [1][0][2] = 0;
        scalar_argAckdone [1][0][2] = 1;
    end
    if (hls_decode_neighbour_hls_slice_or_tiles_left_boundary_ap_vld_r) begin
        scalar_argVld [1][0][2] = 1;
        scalar_argAckdone [1][0][2] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][0][2] = hls_decode_neighbour_hls_slice_or_tiles_left_boundary_r;
    scalar_adr    [1][0][2] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 264) comb block-----//
    //s = 2; r = 1; a = 0;
    if (scalar_argAck [2][1][0]) begin
        scalar_argVld [2][1][0] = 0;
        scalar_argAckdone [2][1][0] = 1;
    end
    if (hls_decode_neighbour_hls_slice_or_tiles_up_boundary_ap_vld_r) begin
        scalar_argVld [2][1][0] = 1;
        scalar_argAckdone [2][1][0] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][1][0] = hls_decode_neighbour_hls_slice_or_tiles_up_boundary_r;
    scalar_adr    [2][1][0] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 608) comb block-----//
    //s = 24; r = 0; a = 2;
    if (scalar_argAck [24][0][2]) begin
        scalar_argVld [24][0][2] = 0;
        scalar_argAckdone [24][0][2] = 1;
    end
    if (hls_decode_neighbour_hls_ctb_left_flag_ap_vld_r) begin
        scalar_argVld [24][0][2] = 1;
        scalar_argAckdone [24][0][2] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][0][2] = hls_decode_neighbour_hls_ctb_left_flag_r;
    scalar_adr    [24][0][2] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 604) comb block-----//
    //s = 23; r = 0; a = 4;
    if (scalar_argAck [23][0][4]) begin
        scalar_argVld [23][0][4] = 0;
        scalar_argAckdone [23][0][4] = 1;
    end
    if (hls_decode_neighbour_hls_ctb_up_flag_ap_vld_r) begin
        scalar_argVld [23][0][4] = 1;
        scalar_argAckdone [23][0][4] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][4] = hls_decode_neighbour_hls_ctb_up_flag_r;
    scalar_adr    [23][0][4] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 616) comb block-----//
    //s = 26; r = 0; a = 2;
    if (scalar_argAck [26][0][2]) begin
        scalar_argVld [26][0][2] = 0;
        scalar_argAckdone [26][0][2] = 1;
    end
    if (hls_decode_neighbour_hls_ctb_up_right_flag_ap_vld_r) begin
        scalar_argVld [26][0][2] = 1;
        scalar_argAckdone [26][0][2] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][0][2] = hls_decode_neighbour_hls_ctb_up_right_flag_r;
    scalar_adr    [26][0][2] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 612) comb block-----//
    //s = 25; r = 0; a = 2;
    if (scalar_argAck [25][0][2]) begin
        scalar_argVld [25][0][2] = 0;
        scalar_argAckdone [25][0][2] = 1;
    end
    if (hls_decode_neighbour_hls_ctb_up_left_flag_ap_vld_r) begin
        scalar_argVld [25][0][2] = 1;
        scalar_argAckdone [25][0][2] = 0;
        ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][0][2] = hls_decode_neighbour_hls_ctb_up_left_flag_r;
    scalar_adr    [25][0][2] = {ap_part_w[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 272) comb block-----//
    //s = 4; r = 0; a = 14;
    if (scalar_rdat_vld_r[4][0][14]) begin
        scalar_argdone [4][0][14] = 1;
    end
    scalar_adr[4][0][14] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][14]) begin
        scalar_argVld[4][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[4][0][14] = 1;
    end

    //------READ (scalar, global adr = 276) comb block-----//
    //s = 5; r = 0; a = 20;
    if (scalar_rdat_vld_r[5][0][20]) begin
        scalar_argdone [5][0][20] = 1;
    end
    scalar_adr[5][0][20] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][20]) begin
        scalar_argVld[5][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[5][0][20] = 1;
    end

    //------READ (scalar, global adr = 280) comb block-----//
    //s = 6; r = 0; a = 26;
    if (scalar_rdat_vld_r[6][0][26]) begin
        scalar_argdone [6][0][26] = 1;
    end
    scalar_adr[6][0][26] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][26]) begin
        scalar_argVld[6][0][26] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[6][0][26] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 17;
    if (scalar_rdat_vld_r[26][0][17]) begin
        scalar_argdone [26][0][17] = 1;
    end
    scalar_adr[26][0][17] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][17]) begin
        scalar_argVld[26][0][17] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[26][0][17] = 1;
    end

    //------READ (scalar, global adr = 284) comb block-----//
    //s = 7; r = 0; a = 20;
    if (scalar_rdat_vld_r[7][0][20]) begin
        scalar_argdone [7][0][20] = 1;
    end
    scalar_adr[7][0][20] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][20]) begin
        scalar_argVld[7][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[7][0][20] = 1;
    end

    //------READ (scalar, global adr = 288) comb block-----//
    //s = 8; r = 1; a = 24;
    if (scalar_rdat_vld_r[8][1][24]) begin
        scalar_argdone [8][1][24] = 1;
    end
    scalar_adr[8][1][24] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][24]) begin
        scalar_argVld[8][1][24] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[8][1][24] = 1;
    end

    //------READ (scalar, global adr = 252) comb block-----//
    //s = 31; r = 0; a = 22;
    if (scalar_rdat_vld_r[31][0][22]) begin
        scalar_argdone [31][0][22] = 1;
    end
    scalar_adr[31][0][22] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][22]) begin
        scalar_argVld[31][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[31][0][22] = 1;
    end

    //------READ (scalar, global adr = 256) comb block-----//
    //s = 0; r = 1; a = 19;
    if (scalar_rdat_vld_r[0][1][19]) begin
        scalar_argdone [0][1][19] = 1;
    end
    scalar_adr[0][1][19] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][19]) begin
        scalar_argVld[0][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[0][1][19] = 1;
    end

    //------READ (scalar, global adr = 444) comb block-----//
    //s = 15; r = 0; a = 19;
    if (scalar_rdat_vld_r[15][0][19]) begin
        scalar_argdone [15][0][19] = 1;
    end
    scalar_adr[15][0][19] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][19]) begin
        scalar_argVld[15][0][19] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[15][0][19] = 1;
    end

    //------WRITE (array range, global adr = 286164, width=16, addr_width=32) -----//
    //s = 0; a = 62;
    array_argVld [0][62] = hls_decode_neighbour_hls_column_width_EN_A & (hls_decode_neighbour_hls_column_width_WEN_A != 0);
    array_adr    [0][62] = hls_decode_neighbour_hls_column_width_Addr_A;
    array_wdat   [0][62] = hls_decode_neighbour_hls_column_width_Din_A;

    //------READ (array range, global adr = 286164, width=16, addr_width=32) -----//
    //s = 0; a = 222;
    hls_decode_neighbour_hls_column_width_Dout_A = array_rdat  [0][222];
    //found a write signal pair
    array_argVld [0][222] = hls_decode_neighbour_hls_column_width_EN_A & (hls_decode_neighbour_hls_column_width_WEN_A == 0);
    array_adr    [0][222] = hls_decode_neighbour_hls_column_width_Addr_A;

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 1; a = 25;
    if (scalar_rdat_vld_r[6][1][25]) begin
        scalar_argdone [6][1][25] = 1;
    end
    scalar_adr[6][1][25] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][25]) begin
        scalar_argVld[6][1][25] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[6][1][25] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 0; a = 14;
    if (scalar_rdat_vld_r[19][0][14]) begin
        scalar_argdone [19][0][14] = 1;
    end
    scalar_adr[19][0][14] = {ap_part[hls_decode_neighbour_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][14]) begin
        scalar_argVld[19][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_decode_neighbour_hls]) begin
        scalar_argVld[19][0][14] = 1;
    end

    hls_decode_neighbour_hls_ready = array_argRdy[0][60]& array_argRdy[0][220]& array_argRdy[0][61]& array_argRdy[0][221]& array_argRdy[0][62]& array_argRdy[0][222] & ~ap_arb_reload_running_r[hls_decode_neighbour_hls];
    array_ap_ce[0][60] = ap_ce[hls_decode_neighbour_hls];
    array_ap_ce[0][220] = ap_ce[hls_decode_neighbour_hls];
    array_ap_ce[0][61] = ap_ce[hls_decode_neighbour_hls];
    array_ap_ce[0][221] = ap_ce[hls_decode_neighbour_hls];
    array_ap_ce[0][62] = ap_ce[hls_decode_neighbour_hls];
    array_ap_ce[0][222] = ap_ce[hls_decode_neighbour_hls];

    if (ap_arb_ret[hls_decode_neighbour_hls] & ~ap_arb_ret_r[hls_decode_neighbour_hls]) begin
        ap_arb_ret_running[hls_decode_neighbour_hls] = 1;
        hls_decode_neighbour_hls_ready = 0;
    end

    scalar_argAckdone_all[hls_decode_neighbour_hls] = scalar_argAckdone[5][0][6] &
                                                scalar_argAckdone[27][1][6] &
                                                scalar_argAckdone[28][1][2] &
                                                scalar_argAckdone[1][0][2] &
                                                scalar_argAckdone[2][1][0] &
                                                scalar_argAckdone[24][0][2] &
                                                scalar_argAckdone[23][0][4] &
                                                scalar_argAckdone[26][0][2] &
                                                scalar_argAckdone[25][0][2];
    if (ap_arb_ret_running[hls_decode_neighbour_hls] & scalar_argAckdone_all[hls_decode_neighbour_hls] &~ ap_arb_reload_running_r[hls_decode_neighbour_hls]) begin
        ap_arb_reload[hls_decode_neighbour_hls] = 1;
        ap_arb_reload_running[hls_decode_neighbour_hls] = 1;
    end

    if (ap_arb_start[hls_decode_neighbour_hls] &~ ap_arb_start_r[hls_decode_neighbour_hls]) begin
        ap_arb_start_running[hls_decode_neighbour_hls] = 1;
    end

    if (ap_arb_start_running[hls_decode_neighbour_hls] ) begin
        ap_arb_start_running[hls_decode_neighbour_hls] = 0;
        ap_arb_reload[hls_decode_neighbour_hls] = 1;
    end

    scalar_argdone_all[hls_decode_neighbour_hls] = scalar_argdone[4][0][14] &
                                                                scalar_argdone[5][0][20] &
                                                                scalar_argdone[6][0][26] &
                                                                scalar_argdone[26][0][17] &
                                                                scalar_argdone[7][0][20] &
                                                                scalar_argdone[8][1][24] &
                                                                scalar_argdone[31][0][22] &
                                                                scalar_argdone[0][1][19] &
                                                                scalar_argdone[15][0][19] &
                                                                scalar_argdone[6][1][25] &
                                                                scalar_argdone[19][0][14];

    if (scalar_argdone_all_r[hls_decode_neighbour_hls]) begin
        scalar_argdone[4][0][14] = 0;
        scalar_argdone[5][0][20] = 0;
        scalar_argdone[6][0][26] = 0;
        scalar_argdone[26][0][17] = 0;
        scalar_argdone[7][0][20] = 0;
        scalar_argdone[8][1][24] = 0;
        scalar_argdone[31][0][22] = 0;
        scalar_argdone[0][1][19] = 0;
        scalar_argdone[15][0][19] = 0;
        scalar_argdone[6][1][25] = 0;
        scalar_argdone[19][0][14] = 0;

        if (ap_arb_start_r[hls_decode_neighbour_hls] & ~ap_running_r[hls_decode_neighbour_hls]) begin
            ap_start[hls_decode_neighbour_hls] = 1;
            ap_running[hls_decode_neighbour_hls] = 1;
        end
        else if (ap_arb_ret_running_r[hls_decode_neighbour_hls]) begin
            ap_arb_ret_running[hls_decode_neighbour_hls] = 0;
            ap_arb_reload_running[hls_decode_neighbour_hls] = 0;
        end
    end

    if (ap_start_r[hls_decode_neighbour_hls] & ap_ready_r[hls_decode_neighbour_hls]) begin
        ap_start[hls_decode_neighbour_hls] = 0;
    end

    if (ap_done_r[hls_decode_neighbour_hls]) begin
        ap_running[hls_decode_neighbour_hls] = 0;
    end
`endif
    //============================================================
    //set_tab_mvf_pred_flag_hls       (f = 29)
    //============================================================
`ifdef enable_connect_set_tab_mvf_pred_flag_hls
    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 1; a = 38;
    if (scalar_rdat_vld_r[29][1][38]) begin
        scalar_argdone [29][1][38] = 1;
    end
    scalar_adr[29][1][38] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][38]) begin
        scalar_argVld[29][1][38] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld[29][1][38] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 0; a = 25;
    if (scalar_rdat_vld_r[3][0][25]) begin
        scalar_argdone [3][0][25] = 1;
    end
    scalar_adr[3][0][25] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][25]) begin
        scalar_argVld[3][0][25] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld[3][0][25] = 1;
    end

    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 1; a = 36;
    if (scalar_rdat_vld_r[11][1][36]) begin
        scalar_argdone [11][1][36] = 1;
    end
    scalar_adr[11][1][36] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][36]) begin
        scalar_argVld[11][1][36] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld[11][1][36] = 1;
    end

    //------WRITE (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 127;
    array_argVld [0][127] = set_tab_mvf_pred_flag_hls_tab_mvf_pred_flag_row_EN_A & (set_tab_mvf_pred_flag_hls_tab_mvf_pred_flag_row_WEN_A != 0);
    array_adr    [0][127] = set_tab_mvf_pred_flag_hls_tab_mvf_pred_flag_row_Addr_A;
    array_wdat   [0][127] = set_tab_mvf_pred_flag_hls_tab_mvf_pred_flag_row_Din_A;

    //------READ (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 286;
    set_tab_mvf_pred_flag_hls_tab_mvf_pred_flag_row_Dout_A = array_rdat  [0][286];
    //found a write signal pair
    array_argVld [0][286] = set_tab_mvf_pred_flag_hls_tab_mvf_pred_flag_row_EN_A & (set_tab_mvf_pred_flag_hls_tab_mvf_pred_flag_row_WEN_A == 0);
    array_adr    [0][286] = set_tab_mvf_pred_flag_hls_tab_mvf_pred_flag_row_Addr_A;

    //------READ (scalar, complete partition, global adr = 180) comb block-----//
    //s = 13; r = 1; a = 30;
    if (scalar_rdat_vld_r[13][1][30]) begin
        scalar_argdone [13][1][30] = 1;
    end
    scalar_adr    [13][1][30] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][30]) begin
        scalar_argVld [13][1][30] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [13][1][30] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 180) comb block-----//
    //s = 13; r = 0; a = 10;
    if (scalar_argAck [13][0][10]) begin
        scalar_argVld [13][0][10] = 0;
        scalar_argAckdone [13][0][10] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_0_o_ap_vld_r) begin
        scalar_argVld [13][0][10] = 1;
        scalar_argAckdone [13][0][10] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][10] = set_tab_mvf_pred_flag_hls_predColBuf_0_o_r;
    scalar_adr    [13][0][10] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 184) comb block-----//
    //s = 14; r = 0; a = 32;
    if (scalar_rdat_vld_r[14][0][32]) begin
        scalar_argdone [14][0][32] = 1;
    end
    scalar_adr    [14][0][32] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][32]) begin
        scalar_argVld [14][0][32] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [14][0][32] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 184) comb block-----//
    //s = 14; r = 1; a = 12;
    if (scalar_argAck [14][1][12]) begin
        scalar_argVld [14][1][12] = 0;
        scalar_argAckdone [14][1][12] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_1_o_ap_vld_r) begin
        scalar_argVld [14][1][12] = 1;
        scalar_argAckdone [14][1][12] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][12] = set_tab_mvf_pred_flag_hls_predColBuf_1_o_r;
    scalar_adr    [14][1][12] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 188) comb block-----//
    //s = 15; r = 1; a = 29;
    if (scalar_rdat_vld_r[15][1][29]) begin
        scalar_argdone [15][1][29] = 1;
    end
    scalar_adr    [15][1][29] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][29]) begin
        scalar_argVld [15][1][29] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [15][1][29] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 188) comb block-----//
    //s = 15; r = 1; a = 11;
    if (scalar_argAck [15][1][11]) begin
        scalar_argVld [15][1][11] = 0;
        scalar_argAckdone [15][1][11] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_2_o_ap_vld_r) begin
        scalar_argVld [15][1][11] = 1;
        scalar_argAckdone [15][1][11] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][11] = set_tab_mvf_pred_flag_hls_predColBuf_2_o_r;
    scalar_adr    [15][1][11] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 192) comb block-----//
    //s = 16; r = 0; a = 22;
    if (scalar_rdat_vld_r[16][0][22]) begin
        scalar_argdone [16][0][22] = 1;
    end
    scalar_adr    [16][0][22] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][22]) begin
        scalar_argVld [16][0][22] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [16][0][22] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 192) comb block-----//
    //s = 16; r = 1; a = 7;
    if (scalar_argAck [16][1][7]) begin
        scalar_argVld [16][1][7] = 0;
        scalar_argAckdone [16][1][7] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_3_o_ap_vld_r) begin
        scalar_argVld [16][1][7] = 1;
        scalar_argAckdone [16][1][7] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][1][7] = set_tab_mvf_pred_flag_hls_predColBuf_3_o_r;
    scalar_adr    [16][1][7] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 196) comb block-----//
    //s = 17; r = 1; a = 23;
    if (scalar_rdat_vld_r[17][1][23]) begin
        scalar_argdone [17][1][23] = 1;
    end
    scalar_adr    [17][1][23] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][23]) begin
        scalar_argVld [17][1][23] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [17][1][23] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 196) comb block-----//
    //s = 17; r = 1; a = 6;
    if (scalar_argAck [17][1][6]) begin
        scalar_argVld [17][1][6] = 0;
        scalar_argAckdone [17][1][6] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_4_o_ap_vld_r) begin
        scalar_argVld [17][1][6] = 1;
        scalar_argAckdone [17][1][6] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][1][6] = set_tab_mvf_pred_flag_hls_predColBuf_4_o_r;
    scalar_adr    [17][1][6] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 200) comb block-----//
    //s = 18; r = 0; a = 23;
    if (scalar_rdat_vld_r[18][0][23]) begin
        scalar_argdone [18][0][23] = 1;
    end
    scalar_adr    [18][0][23] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][23]) begin
        scalar_argVld [18][0][23] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [18][0][23] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 200) comb block-----//
    //s = 18; r = 0; a = 6;
    if (scalar_argAck [18][0][6]) begin
        scalar_argVld [18][0][6] = 0;
        scalar_argAckdone [18][0][6] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_5_o_ap_vld_r) begin
        scalar_argVld [18][0][6] = 1;
        scalar_argAckdone [18][0][6] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][0][6] = set_tab_mvf_pred_flag_hls_predColBuf_5_o_r;
    scalar_adr    [18][0][6] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 204) comb block-----//
    //s = 19; r = 1; a = 26;
    if (scalar_rdat_vld_r[19][1][26]) begin
        scalar_argdone [19][1][26] = 1;
    end
    scalar_adr    [19][1][26] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][26]) begin
        scalar_argVld [19][1][26] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [19][1][26] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 204) comb block-----//
    //s = 19; r = 0; a = 7;
    if (scalar_argAck [19][0][7]) begin
        scalar_argVld [19][0][7] = 0;
        scalar_argAckdone [19][0][7] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_6_o_ap_vld_r) begin
        scalar_argVld [19][0][7] = 1;
        scalar_argAckdone [19][0][7] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][0][7] = set_tab_mvf_pred_flag_hls_predColBuf_6_o_r;
    scalar_adr    [19][0][7] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 208) comb block-----//
    //s = 20; r = 0; a = 26;
    if (scalar_rdat_vld_r[20][0][26]) begin
        scalar_argdone [20][0][26] = 1;
    end
    scalar_adr    [20][0][26] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][26]) begin
        scalar_argVld [20][0][26] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [20][0][26] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 208) comb block-----//
    //s = 20; r = 0; a = 9;
    if (scalar_argAck [20][0][9]) begin
        scalar_argVld [20][0][9] = 0;
        scalar_argAckdone [20][0][9] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_7_o_ap_vld_r) begin
        scalar_argVld [20][0][9] = 1;
        scalar_argAckdone [20][0][9] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][9] = set_tab_mvf_pred_flag_hls_predColBuf_7_o_r;
    scalar_adr    [20][0][9] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 212) comb block-----//
    //s = 21; r = 1; a = 24;
    if (scalar_rdat_vld_r[21][1][24]) begin
        scalar_argdone [21][1][24] = 1;
    end
    scalar_adr    [21][1][24] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][24]) begin
        scalar_argVld [21][1][24] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [21][1][24] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 212) comb block-----//
    //s = 21; r = 1; a = 9;
    if (scalar_argAck [21][1][9]) begin
        scalar_argVld [21][1][9] = 0;
        scalar_argAckdone [21][1][9] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_8_o_ap_vld_r) begin
        scalar_argVld [21][1][9] = 1;
        scalar_argAckdone [21][1][9] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][9] = set_tab_mvf_pred_flag_hls_predColBuf_8_o_r;
    scalar_adr    [21][1][9] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 216) comb block-----//
    //s = 22; r = 1; a = 33;
    if (scalar_rdat_vld_r[22][1][33]) begin
        scalar_argdone [22][1][33] = 1;
    end
    scalar_adr    [22][1][33] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][33]) begin
        scalar_argVld [22][1][33] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [22][1][33] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 216) comb block-----//
    //s = 22; r = 1; a = 9;
    if (scalar_argAck [22][1][9]) begin
        scalar_argVld [22][1][9] = 0;
        scalar_argAckdone [22][1][9] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_9_o_ap_vld_r) begin
        scalar_argVld [22][1][9] = 1;
        scalar_argAckdone [22][1][9] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][9] = set_tab_mvf_pred_flag_hls_predColBuf_9_o_r;
    scalar_adr    [22][1][9] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 220) comb block-----//
    //s = 23; r = 0; a = 34;
    if (scalar_rdat_vld_r[23][0][34]) begin
        scalar_argdone [23][0][34] = 1;
    end
    scalar_adr    [23][0][34] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][34]) begin
        scalar_argVld [23][0][34] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [23][0][34] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 220) comb block-----//
    //s = 23; r = 1; a = 7;
    if (scalar_argAck [23][1][7]) begin
        scalar_argVld [23][1][7] = 0;
        scalar_argAckdone [23][1][7] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_10_o_ap_vld_r) begin
        scalar_argVld [23][1][7] = 1;
        scalar_argAckdone [23][1][7] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][1][7] = set_tab_mvf_pred_flag_hls_predColBuf_10_o_r;
    scalar_adr    [23][1][7] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 224) comb block-----//
    //s = 24; r = 0; a = 28;
    if (scalar_rdat_vld_r[24][0][28]) begin
        scalar_argdone [24][0][28] = 1;
    end
    scalar_adr    [24][0][28] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][28]) begin
        scalar_argVld [24][0][28] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [24][0][28] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 224) comb block-----//
    //s = 24; r = 1; a = 5;
    if (scalar_argAck [24][1][5]) begin
        scalar_argVld [24][1][5] = 0;
        scalar_argAckdone [24][1][5] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_11_o_ap_vld_r) begin
        scalar_argVld [24][1][5] = 1;
        scalar_argAckdone [24][1][5] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][1][5] = set_tab_mvf_pred_flag_hls_predColBuf_11_o_r;
    scalar_adr    [24][1][5] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 228) comb block-----//
    //s = 25; r = 1; a = 23;
    if (scalar_rdat_vld_r[25][1][23]) begin
        scalar_argdone [25][1][23] = 1;
    end
    scalar_adr    [25][1][23] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][23]) begin
        scalar_argVld [25][1][23] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [25][1][23] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 228) comb block-----//
    //s = 25; r = 1; a = 5;
    if (scalar_argAck [25][1][5]) begin
        scalar_argVld [25][1][5] = 0;
        scalar_argAckdone [25][1][5] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_12_o_ap_vld_r) begin
        scalar_argVld [25][1][5] = 1;
        scalar_argAckdone [25][1][5] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][1][5] = set_tab_mvf_pred_flag_hls_predColBuf_12_o_r;
    scalar_adr    [25][1][5] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 232) comb block-----//
    //s = 26; r = 0; a = 32;
    if (scalar_rdat_vld_r[26][0][32]) begin
        scalar_argdone [26][0][32] = 1;
    end
    scalar_adr    [26][0][32] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][32]) begin
        scalar_argVld [26][0][32] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [26][0][32] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 232) comb block-----//
    //s = 26; r = 1; a = 5;
    if (scalar_argAck [26][1][5]) begin
        scalar_argVld [26][1][5] = 0;
        scalar_argAckdone [26][1][5] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_13_o_ap_vld_r) begin
        scalar_argVld [26][1][5] = 1;
        scalar_argAckdone [26][1][5] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][1][5] = set_tab_mvf_pred_flag_hls_predColBuf_13_o_r;
    scalar_adr    [26][1][5] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 236) comb block-----//
    //s = 27; r = 0; a = 28;
    if (scalar_rdat_vld_r[27][0][28]) begin
        scalar_argdone [27][0][28] = 1;
    end
    scalar_adr    [27][0][28] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][28]) begin
        scalar_argVld [27][0][28] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [27][0][28] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 236) comb block-----//
    //s = 27; r = 0; a = 11;
    if (scalar_argAck [27][0][11]) begin
        scalar_argVld [27][0][11] = 0;
        scalar_argAckdone [27][0][11] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_14_o_ap_vld_r) begin
        scalar_argVld [27][0][11] = 1;
        scalar_argAckdone [27][0][11] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][11] = set_tab_mvf_pred_flag_hls_predColBuf_14_o_r;
    scalar_adr    [27][0][11] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 240) comb block-----//
    //s = 28; r = 0; a = 27;
    if (scalar_rdat_vld_r[28][0][27]) begin
        scalar_argdone [28][0][27] = 1;
    end
    scalar_adr    [28][0][27] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][27]) begin
        scalar_argVld [28][0][27] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [28][0][27] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 240) comb block-----//
    //s = 28; r = 0; a = 6;
    if (scalar_argAck [28][0][6]) begin
        scalar_argVld [28][0][6] = 0;
        scalar_argAckdone [28][0][6] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_15_o_ap_vld_r) begin
        scalar_argVld [28][0][6] = 1;
        scalar_argAckdone [28][0][6] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][0][6] = set_tab_mvf_pred_flag_hls_predColBuf_15_o_r;
    scalar_adr    [28][0][6] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 244) comb block-----//
    //s = 29; r = 0; a = 39;
    if (scalar_rdat_vld_r[29][0][39]) begin
        scalar_argdone [29][0][39] = 1;
    end
    scalar_adr    [29][0][39] = {ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][39]) begin
        scalar_argVld [29][0][39] = 0;
    end
    if (ap_arb_reload_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argVld [29][0][39] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 244) comb block-----//
    //s = 29; r = 1; a = 12;
    if (scalar_argAck [29][1][12]) begin
        scalar_argVld [29][1][12] = 0;
        scalar_argAckdone [29][1][12] = 1;
    end
    if (set_tab_mvf_pred_flag_hls_predColBuf_16_o_ap_vld_r) begin
        scalar_argVld [29][1][12] = 1;
        scalar_argAckdone [29][1][12] = 0;
        ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][12] = set_tab_mvf_pred_flag_hls_predColBuf_16_o_r;
    scalar_adr    [29][1][12] = {ap_part_w[set_tab_mvf_pred_flag_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    set_tab_mvf_pred_flag_hls_ready = array_argRdy[0][127]& array_argRdy[0][286] & ~ap_arb_reload_running_r[set_tab_mvf_pred_flag_hls];
    array_ap_ce[0][127] = ap_ce[set_tab_mvf_pred_flag_hls];
    array_ap_ce[0][286] = ap_ce[set_tab_mvf_pred_flag_hls];

    if (ap_arb_ret[set_tab_mvf_pred_flag_hls] & ~ap_arb_ret_r[set_tab_mvf_pred_flag_hls]) begin
        ap_arb_ret_running[set_tab_mvf_pred_flag_hls] = 1;
        set_tab_mvf_pred_flag_hls_ready = 0;
    end

    scalar_argAckdone_all[set_tab_mvf_pred_flag_hls] = scalar_argAckdone[13][0][10] &
                                                scalar_argAckdone[14][1][12] &
                                                scalar_argAckdone[15][1][11] &
                                                scalar_argAckdone[16][1][7] &
                                                scalar_argAckdone[17][1][6] &
                                                scalar_argAckdone[18][0][6] &
                                                scalar_argAckdone[19][0][7] &
                                                scalar_argAckdone[20][0][9] &
                                                scalar_argAckdone[21][1][9] &
                                                scalar_argAckdone[22][1][9] &
                                                scalar_argAckdone[23][1][7] &
                                                scalar_argAckdone[24][1][5] &
                                                scalar_argAckdone[25][1][5] &
                                                scalar_argAckdone[26][1][5] &
                                                scalar_argAckdone[27][0][11] &
                                                scalar_argAckdone[28][0][6] &
                                                scalar_argAckdone[29][1][12];
    if (ap_arb_ret_running[set_tab_mvf_pred_flag_hls] & scalar_argAckdone_all[set_tab_mvf_pred_flag_hls] &~ ap_arb_reload_running_r[set_tab_mvf_pred_flag_hls]) begin
        ap_arb_reload[set_tab_mvf_pred_flag_hls] = 1;
        ap_arb_reload_running[set_tab_mvf_pred_flag_hls] = 1;
    end

    if (ap_arb_start[set_tab_mvf_pred_flag_hls] &~ ap_arb_start_r[set_tab_mvf_pred_flag_hls]) begin
        ap_arb_start_running[set_tab_mvf_pred_flag_hls] = 1;
    end

    if (ap_arb_start_running[set_tab_mvf_pred_flag_hls] & ~scalar_writing_180& ~scalar_writing_184& ~scalar_writing_188& ~scalar_writing_192& ~scalar_writing_196& ~scalar_writing_200& ~scalar_writing_204& ~scalar_writing_208& ~scalar_writing_212& ~scalar_writing_216& ~scalar_writing_220& ~scalar_writing_224& ~scalar_writing_228& ~scalar_writing_232& ~scalar_writing_236& ~scalar_writing_240& ~scalar_writing_244) begin
        ap_arb_start_running[set_tab_mvf_pred_flag_hls] = 0;
        ap_arb_reload[set_tab_mvf_pred_flag_hls] = 1;
    end

    scalar_argdone_all[set_tab_mvf_pred_flag_hls] = scalar_argdone[29][1][38] &
                                                                scalar_argdone[3][0][25] &
                                                                scalar_argdone[11][1][36] &
                                                                scalar_argdone[13][1][30] &
                                                                scalar_argdone[14][0][32] &
                                                                scalar_argdone[15][1][29] &
                                                                scalar_argdone[16][0][22] &
                                                                scalar_argdone[17][1][23] &
                                                                scalar_argdone[18][0][23] &
                                                                scalar_argdone[19][1][26] &
                                                                scalar_argdone[20][0][26] &
                                                                scalar_argdone[21][1][24] &
                                                                scalar_argdone[22][1][33] &
                                                                scalar_argdone[23][0][34] &
                                                                scalar_argdone[24][0][28] &
                                                                scalar_argdone[25][1][23] &
                                                                scalar_argdone[26][0][32] &
                                                                scalar_argdone[27][0][28] &
                                                                scalar_argdone[28][0][27] &
                                                                scalar_argdone[29][0][39];

    if (scalar_argdone_all_r[set_tab_mvf_pred_flag_hls]) begin
        scalar_argdone[29][1][38] = 0;
        scalar_argdone[3][0][25] = 0;
        scalar_argdone[11][1][36] = 0;
        scalar_argdone[13][1][30] = 0;
        scalar_argdone[14][0][32] = 0;
        scalar_argdone[15][1][29] = 0;
        scalar_argdone[16][0][22] = 0;
        scalar_argdone[17][1][23] = 0;
        scalar_argdone[18][0][23] = 0;
        scalar_argdone[19][1][26] = 0;
        scalar_argdone[20][0][26] = 0;
        scalar_argdone[21][1][24] = 0;
        scalar_argdone[22][1][33] = 0;
        scalar_argdone[23][0][34] = 0;
        scalar_argdone[24][0][28] = 0;
        scalar_argdone[25][1][23] = 0;
        scalar_argdone[26][0][32] = 0;
        scalar_argdone[27][0][28] = 0;
        scalar_argdone[28][0][27] = 0;
        scalar_argdone[29][0][39] = 0;

        if (ap_arb_start_r[set_tab_mvf_pred_flag_hls] & ~ap_running_r[set_tab_mvf_pred_flag_hls]) begin
            ap_start[set_tab_mvf_pred_flag_hls] = 1;
            ap_running[set_tab_mvf_pred_flag_hls] = 1;
        end
        else if (ap_arb_ret_running_r[set_tab_mvf_pred_flag_hls]) begin
            ap_arb_ret_running[set_tab_mvf_pred_flag_hls] = 0;
            ap_arb_reload_running[set_tab_mvf_pred_flag_hls] = 0;
        end
    end

    if (ap_start_r[set_tab_mvf_pred_flag_hls] & ap_ready_r[set_tab_mvf_pred_flag_hls]) begin
        ap_start[set_tab_mvf_pred_flag_hls] = 0;
    end

    if (ap_done_r[set_tab_mvf_pred_flag_hls]) begin
        ap_running[set_tab_mvf_pred_flag_hls] = 0;
    end
`endif
    //============================================================
    //init_intra_neighbors_hls       (f = 30)
    //============================================================
`ifdef enable_connect_init_intra_neighbors_hls
    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 1; a = 19;
    if (scalar_rdat_vld_r[20][1][19]) begin
        scalar_argdone [20][1][19] = 1;
    end
    scalar_adr    [20][1][19] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][19]) begin
        scalar_argVld [20][1][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [20][1][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 0; a = 18;
    if (scalar_rdat_vld_r[21][0][18]) begin
        scalar_argdone [21][0][18] = 1;
    end
    scalar_adr    [21][0][18] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][18]) begin
        scalar_argVld [21][0][18] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [21][0][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 0; a = 28;
    if (scalar_rdat_vld_r[22][0][28]) begin
        scalar_argdone [22][0][28] = 1;
    end
    scalar_adr    [22][0][28] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][28]) begin
        scalar_argVld [22][0][28] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [22][0][28] = 1;
    end

    //------READ (scalar, complete partition, global adr = 348) comb block-----//
    //s = 23; r = 0; a = 28;
    if (scalar_rdat_vld_r[23][0][28]) begin
        scalar_argdone [23][0][28] = 1;
    end
    scalar_adr    [23][0][28] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][28]) begin
        scalar_argVld [23][0][28] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [23][0][28] = 1;
    end

    //------READ (scalar, complete partition, global adr = 352) comb block-----//
    //s = 24; r = 0; a = 22;
    if (scalar_rdat_vld_r[24][0][22]) begin
        scalar_argdone [24][0][22] = 1;
    end
    scalar_adr    [24][0][22] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][22]) begin
        scalar_argVld [24][0][22] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [24][0][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 356) comb block-----//
    //s = 25; r = 1; a = 18;
    if (scalar_rdat_vld_r[25][1][18]) begin
        scalar_argdone [25][1][18] = 1;
    end
    scalar_adr    [25][1][18] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][18]) begin
        scalar_argVld [25][1][18] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [25][1][18] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 1; a = 30;
    if (scalar_rdat_vld_r[29][1][30]) begin
        scalar_argdone [29][1][30] = 1;
    end
    scalar_adr[29][1][30] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][30]) begin
        scalar_argVld[29][1][30] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[29][1][30] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 0; a = 16;
    if (scalar_rdat_vld_r[30][0][16]) begin
        scalar_argdone [30][0][16] = 1;
    end
    scalar_adr[30][0][16] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][16]) begin
        scalar_argVld[30][0][16] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[30][0][16] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 27;
    if (scalar_rdat_vld_r[26][0][27]) begin
        scalar_argdone [26][0][27] = 1;
    end
    scalar_adr[26][0][27] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][27]) begin
        scalar_argVld[26][0][27] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[26][0][27] = 1;
    end

    //------READ (scalar, global adr = 404) comb block-----//
    //s = 5; r = 0; a = 28;
    if (scalar_rdat_vld_r[5][0][28]) begin
        scalar_argdone [5][0][28] = 1;
    end
    scalar_adr[5][0][28] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][28]) begin
        scalar_argVld[5][0][28] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[5][0][28] = 1;
    end

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 1; a = 33;
    if (scalar_rdat_vld_r[6][1][33]) begin
        scalar_argdone [6][1][33] = 1;
    end
    scalar_adr[6][1][33] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][33]) begin
        scalar_argVld[6][1][33] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[6][1][33] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 0; a = 21;
    if (scalar_rdat_vld_r[19][0][21]) begin
        scalar_argdone [19][0][21] = 1;
    end
    scalar_adr[19][0][21] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][21]) begin
        scalar_argVld[19][0][21] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[19][0][21] = 1;
    end

    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 1; a = 30;
    if (scalar_rdat_vld_r[11][1][30]) begin
        scalar_argdone [11][1][30] = 1;
    end
    scalar_adr[11][1][30] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][30]) begin
        scalar_argVld[11][1][30] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[11][1][30] = 1;
    end

    //------READ (scalar, global adr = 176) comb block-----//
    //s = 12; r = 0; a = 30;
    if (scalar_rdat_vld_r[12][0][30]) begin
        scalar_argdone [12][0][30] = 1;
    end
    scalar_adr[12][0][30] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][30]) begin
        scalar_argVld[12][0][30] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[12][0][30] = 1;
    end

    //------READ (scalar, global adr = 424) comb block-----//
    //s = 10; r = 1; a = 22;
    if (scalar_rdat_vld_r[10][1][22]) begin
        scalar_argdone [10][1][22] = 1;
    end
    scalar_adr[10][1][22] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][22]) begin
        scalar_argVld[10][1][22] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[10][1][22] = 1;
    end

    //------WRITE (array range, global adr = 286188, width=32, addr_width=32) -----//
    //s = 0; a = 91;
    array_argVld [0][91] = init_intra_neighbors_hls_min_tb_addr_zs_EN_A & (init_intra_neighbors_hls_min_tb_addr_zs_WEN_A != 0);
    array_adr    [0][91] = init_intra_neighbors_hls_min_tb_addr_zs_Addr_A;
    array_wdat   [0][91] = init_intra_neighbors_hls_min_tb_addr_zs_Din_A;

    //------READ (array range, global adr = 286188, width=32, addr_width=32) -----//
    //s = 0; a = 251;
    init_intra_neighbors_hls_min_tb_addr_zs_Dout_A = array_rdat  [0][251];
    //found a write signal pair
    array_argVld [0][251] = init_intra_neighbors_hls_min_tb_addr_zs_EN_A & (init_intra_neighbors_hls_min_tb_addr_zs_WEN_A == 0);
    array_adr    [0][251] = init_intra_neighbors_hls_min_tb_addr_zs_Addr_A;

    //------READ (scalar, global adr = 600) comb block-----//
    //s = 22; r = 1; a = 27;
    if (scalar_rdat_vld_r[22][1][27]) begin
        scalar_argdone [22][1][27] = 1;
    end
    scalar_adr[22][1][27] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][27]) begin
        scalar_argVld[22][1][27] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[22][1][27] = 1;
    end

    //------READ (scalar, global adr = 584) comb block-----//
    //s = 18; r = 0; a = 18;
    if (scalar_rdat_vld_r[18][0][18]) begin
        scalar_argdone [18][0][18] = 1;
    end
    scalar_adr[18][0][18] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][18]) begin
        scalar_argVld[18][0][18] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[18][0][18] = 1;
    end

    //------READ (scalar, global adr = 588) comb block-----//
    //s = 19; r = 1; a = 21;
    if (scalar_rdat_vld_r[19][1][21]) begin
        scalar_argdone [19][1][21] = 1;
    end
    scalar_adr[19][1][21] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][21]) begin
        scalar_argVld[19][1][21] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[19][1][21] = 1;
    end

    //------READ (scalar, global adr = 580) comb block-----//
    //s = 17; r = 0; a = 19;
    if (scalar_rdat_vld_r[17][0][19]) begin
        scalar_argdone [17][0][19] = 1;
    end
    scalar_adr[17][0][19] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][19]) begin
        scalar_argVld[17][0][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[17][0][19] = 1;
    end

    //------READ (scalar, global adr = 596) comb block-----//
    //s = 21; r = 1; a = 17;
    if (scalar_rdat_vld_r[21][1][17]) begin
        scalar_argdone [21][1][17] = 1;
    end
    scalar_adr[21][1][17] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][17]) begin
        scalar_argVld[21][1][17] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[21][1][17] = 1;
    end

    //------WRITE (scalar, global adr = 644) comb block-----//
    //s = 1; r = 1; a = 4;
    if (scalar_argAck [1][1][4]) begin
        scalar_argVld [1][1][4] = 0;
        scalar_argAckdone [1][1][4] = 1;
    end
    if (init_intra_neighbors_hls_numIntraNeighbor_ap_vld_r) begin
        scalar_argVld [1][1][4] = 1;
        scalar_argAckdone [1][1][4] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][1][4] = init_intra_neighbors_hls_numIntraNeighbor_r;
    scalar_adr    [1][1][4] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 648) comb block-----//
    //s = 2; r = 0; a = 3;
    if (scalar_argAck [2][0][3]) begin
        scalar_argVld [2][0][3] = 0;
        scalar_argAckdone [2][0][3] = 1;
    end
    if (init_intra_neighbors_hls_totalUnits_ap_vld_r) begin
        scalar_argVld [2][0][3] = 1;
        scalar_argAckdone [2][0][3] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][0][3] = init_intra_neighbors_hls_totalUnits_r;
    scalar_adr    [2][0][3] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 652) comb block-----//
    //s = 3; r = 0; a = 4;
    if (scalar_argAck [3][0][4]) begin
        scalar_argVld [3][0][4] = 0;
        scalar_argAckdone [3][0][4] = 1;
    end
    if (init_intra_neighbors_hls_aboveUnits_ap_vld_r) begin
        scalar_argVld [3][0][4] = 1;
        scalar_argAckdone [3][0][4] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][0][4] = init_intra_neighbors_hls_aboveUnits_r;
    scalar_adr    [3][0][4] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 656) comb block-----//
    //s = 4; r = 0; a = 7;
    if (scalar_argAck [4][0][7]) begin
        scalar_argVld [4][0][7] = 0;
        scalar_argAckdone [4][0][7] = 1;
    end
    if (init_intra_neighbors_hls_leftUnits_ap_vld_r) begin
        scalar_argVld [4][0][7] = 1;
        scalar_argAckdone [4][0][7] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][0][7] = init_intra_neighbors_hls_leftUnits_r;
    scalar_adr    [4][0][7] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 660) comb block-----//
    //s = 5; r = 0; a = 13;
    if (scalar_argAck [5][0][13]) begin
        scalar_argVld [5][0][13] = 0;
        scalar_argAckdone [5][0][13] = 1;
    end
    if (init_intra_neighbors_hls_unitWidth_ap_vld_r) begin
        scalar_argVld [5][0][13] = 1;
        scalar_argAckdone [5][0][13] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][13] = init_intra_neighbors_hls_unitWidth_r;
    scalar_adr    [5][0][13] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 664) comb block-----//
    //s = 6; r = 1; a = 12;
    if (scalar_argAck [6][1][12]) begin
        scalar_argVld [6][1][12] = 0;
        scalar_argAckdone [6][1][12] = 1;
    end
    if (init_intra_neighbors_hls_unitHeight_ap_vld_r) begin
        scalar_argVld [6][1][12] = 1;
        scalar_argAckdone [6][1][12] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][12] = init_intra_neighbors_hls_unitHeight_r;
    scalar_adr    [6][1][12] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 668) comb block-----//
    //s = 7; r = 0; a = 11;
    if (scalar_argAck [7][0][11]) begin
        scalar_argVld [7][0][11] = 0;
        scalar_argAckdone [7][0][11] = 1;
    end
    if (init_intra_neighbors_hls_log2TrSize_ap_vld_r) begin
        scalar_argVld [7][0][11] = 1;
        scalar_argAckdone [7][0][11] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][11] = init_intra_neighbors_hls_log2TrSize_r;
    scalar_adr    [7][0][11] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 672) comb block-----//
    //s = 8; r = 1; a = 27;
    if (scalar_rdat_vld_r[8][1][27]) begin
        scalar_argdone [8][1][27] = 1;
    end
    scalar_adr[8][1][27] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][27]) begin
        scalar_argVld[8][1][27] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[8][1][27] = 1;
    end

    //------READ (scalar, global adr = 672) comb block-----//
    //s = 9; r = 0; a = 27;
    if (scalar_rdat_vld_r[9][0][27]) begin
        scalar_argdone [9][0][27] = 1;
    end
    scalar_adr[9][0][27] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][27]) begin
        scalar_argVld[9][0][27] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[9][0][27] = 1;
    end

    //------READ (scalar, global adr = 672) comb block-----//
    //s = 10; r = 0; a = 23;
    if (scalar_rdat_vld_r[10][0][23]) begin
        scalar_argdone [10][0][23] = 1;
    end
    scalar_adr[10][0][23] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][23]) begin
        scalar_argVld[10][0][23] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[10][0][23] = 1;
    end

    //------WRITE (scalar, global adr = 672) comb block-----//
    //s = 8; r = 0; a = 13;
    if (scalar_argAck [8][0][13]) begin
        scalar_argVld [8][0][13] = 0;
        scalar_argAckdone [8][0][13] = 1;
    end
    if (init_intra_neighbors_hls_bNeighborFlags_0_o_ap_vld_r) begin
        scalar_argVld [8][0][13] = 1;
        scalar_argAckdone [8][0][13] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][13] = init_intra_neighbors_hls_bNeighborFlags_0_o_r;
    scalar_adr    [8][0][13] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 672) comb block-----//
    //s = 9; r = 0; a = 13;
    if (scalar_argAck [9][0][13]) begin
        scalar_argVld [9][0][13] = 0;
        scalar_argAckdone [9][0][13] = 1;
    end
    if (init_intra_neighbors_hls_bNeighborFlags_1_o_ap_vld_r) begin
        scalar_argVld [9][0][13] = 1;
        scalar_argAckdone [9][0][13] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][13] = init_intra_neighbors_hls_bNeighborFlags_1_o_r;
    scalar_adr    [9][0][13] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 672) comb block-----//
    //s = 10; r = 1; a = 10;
    if (scalar_argAck [10][1][10]) begin
        scalar_argVld [10][1][10] = 0;
        scalar_argAckdone [10][1][10] = 1;
    end
    if (init_intra_neighbors_hls_bNeighborFlags_2_o_ap_vld_r) begin
        scalar_argVld [10][1][10] = 1;
        scalar_argAckdone [10][1][10] = 0;
        ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][10] = init_intra_neighbors_hls_bNeighborFlags_2_o_r;
    scalar_adr    [10][1][10] = {ap_part_w[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 1; a = 18;
    if (scalar_rdat_vld_r[3][1][18]) begin
        scalar_argdone [3][1][18] = 1;
    end
    scalar_adr[3][1][18] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][18]) begin
        scalar_argVld[3][1][18] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[3][1][18] = 1;
    end

    //------WRITE (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 92;
    array_argVld [0][92] = init_intra_neighbors_hls_tab_mvf_pred_flag_row_EN_A & (init_intra_neighbors_hls_tab_mvf_pred_flag_row_WEN_A != 0);
    array_adr    [0][92] = init_intra_neighbors_hls_tab_mvf_pred_flag_row_Addr_A;
    array_wdat   [0][92] = init_intra_neighbors_hls_tab_mvf_pred_flag_row_Din_A;

    //------READ (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 252;
    init_intra_neighbors_hls_tab_mvf_pred_flag_row_Dout_A = array_rdat  [0][252];
    //found a write signal pair
    array_argVld [0][252] = init_intra_neighbors_hls_tab_mvf_pred_flag_row_EN_A & (init_intra_neighbors_hls_tab_mvf_pred_flag_row_WEN_A == 0);
    array_adr    [0][252] = init_intra_neighbors_hls_tab_mvf_pred_flag_row_Addr_A;

    //------READ (scalar, complete partition, global adr = 180) comb block-----//
    //s = 13; r = 0; a = 27;
    if (scalar_rdat_vld_r[13][0][27]) begin
        scalar_argdone [13][0][27] = 1;
    end
    scalar_adr    [13][0][27] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][27]) begin
        scalar_argVld [13][0][27] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [13][0][27] = 1;
    end

    //------READ (scalar, complete partition, global adr = 184) comb block-----//
    //s = 14; r = 0; a = 28;
    if (scalar_rdat_vld_r[14][0][28]) begin
        scalar_argdone [14][0][28] = 1;
    end
    scalar_adr    [14][0][28] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][28]) begin
        scalar_argVld [14][0][28] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [14][0][28] = 1;
    end

    //------READ (scalar, complete partition, global adr = 188) comb block-----//
    //s = 15; r = 0; a = 25;
    if (scalar_rdat_vld_r[15][0][25]) begin
        scalar_argdone [15][0][25] = 1;
    end
    scalar_adr    [15][0][25] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][25]) begin
        scalar_argVld [15][0][25] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [15][0][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 192) comb block-----//
    //s = 16; r = 1; a = 18;
    if (scalar_rdat_vld_r[16][1][18]) begin
        scalar_argdone [16][1][18] = 1;
    end
    scalar_adr    [16][1][18] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][18]) begin
        scalar_argVld [16][1][18] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [16][1][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 196) comb block-----//
    //s = 17; r = 1; a = 19;
    if (scalar_rdat_vld_r[17][1][19]) begin
        scalar_argdone [17][1][19] = 1;
    end
    scalar_adr    [17][1][19] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][19]) begin
        scalar_argVld [17][1][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [17][1][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 200) comb block-----//
    //s = 18; r = 1; a = 17;
    if (scalar_rdat_vld_r[18][1][17]) begin
        scalar_argdone [18][1][17] = 1;
    end
    scalar_adr    [18][1][17] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][17]) begin
        scalar_argVld [18][1][17] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [18][1][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 204) comb block-----//
    //s = 19; r = 0; a = 22;
    if (scalar_rdat_vld_r[19][0][22]) begin
        scalar_argdone [19][0][22] = 1;
    end
    scalar_adr    [19][0][22] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][22]) begin
        scalar_argVld [19][0][22] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [19][0][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 208) comb block-----//
    //s = 20; r = 0; a = 20;
    if (scalar_rdat_vld_r[20][0][20]) begin
        scalar_argdone [20][0][20] = 1;
    end
    scalar_adr    [20][0][20] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][20]) begin
        scalar_argVld [20][0][20] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [20][0][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 212) comb block-----//
    //s = 21; r = 0; a = 19;
    if (scalar_rdat_vld_r[21][0][19]) begin
        scalar_argdone [21][0][19] = 1;
    end
    scalar_adr    [21][0][19] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][19]) begin
        scalar_argVld [21][0][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [21][0][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 216) comb block-----//
    //s = 22; r = 0; a = 29;
    if (scalar_rdat_vld_r[22][0][29]) begin
        scalar_argdone [22][0][29] = 1;
    end
    scalar_adr    [22][0][29] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][29]) begin
        scalar_argVld [22][0][29] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [22][0][29] = 1;
    end

    //------READ (scalar, complete partition, global adr = 220) comb block-----//
    //s = 23; r = 1; a = 27;
    if (scalar_rdat_vld_r[23][1][27]) begin
        scalar_argdone [23][1][27] = 1;
    end
    scalar_adr    [23][1][27] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][27]) begin
        scalar_argVld [23][1][27] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [23][1][27] = 1;
    end

    //------READ (scalar, complete partition, global adr = 224) comb block-----//
    //s = 24; r = 1; a = 21;
    if (scalar_rdat_vld_r[24][1][21]) begin
        scalar_argdone [24][1][21] = 1;
    end
    scalar_adr    [24][1][21] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][21]) begin
        scalar_argVld [24][1][21] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [24][1][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 228) comb block-----//
    //s = 25; r = 0; a = 20;
    if (scalar_rdat_vld_r[25][0][20]) begin
        scalar_argdone [25][0][20] = 1;
    end
    scalar_adr    [25][0][20] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][20]) begin
        scalar_argVld [25][0][20] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [25][0][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 232) comb block-----//
    //s = 26; r = 1; a = 26;
    if (scalar_rdat_vld_r[26][1][26]) begin
        scalar_argdone [26][1][26] = 1;
    end
    scalar_adr    [26][1][26] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][26]) begin
        scalar_argVld [26][1][26] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [26][1][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 236) comb block-----//
    //s = 27; r = 1; a = 22;
    if (scalar_rdat_vld_r[27][1][22]) begin
        scalar_argdone [27][1][22] = 1;
    end
    scalar_adr    [27][1][22] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][22]) begin
        scalar_argVld [27][1][22] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [27][1][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 240) comb block-----//
    //s = 28; r = 1; a = 24;
    if (scalar_rdat_vld_r[28][1][24]) begin
        scalar_argdone [28][1][24] = 1;
    end
    scalar_adr    [28][1][24] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][24]) begin
        scalar_argVld [28][1][24] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [28][1][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 244) comb block-----//
    //s = 29; r = 0; a = 31;
    if (scalar_rdat_vld_r[29][0][31]) begin
        scalar_argdone [29][0][31] = 1;
    end
    scalar_adr    [29][0][31] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][31]) begin
        scalar_argVld [29][0][31] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld [29][0][31] = 1;
    end

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 0; a = 20;
    if (scalar_rdat_vld_r[17][0][20]) begin
        scalar_argdone [17][0][20] = 1;
    end
    scalar_adr[17][0][20] = {ap_part[init_intra_neighbors_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][20]) begin
        scalar_argVld[17][0][20] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_hls]) begin
        scalar_argVld[17][0][20] = 1;
    end

    init_intra_neighbors_hls_ready = array_argRdy[0][91]& array_argRdy[0][251]& array_argRdy[0][92]& array_argRdy[0][252] & ~ap_arb_reload_running_r[init_intra_neighbors_hls];
    array_ap_ce[0][91] = ap_ce[init_intra_neighbors_hls];
    array_ap_ce[0][251] = ap_ce[init_intra_neighbors_hls];
    array_ap_ce[0][92] = ap_ce[init_intra_neighbors_hls];
    array_ap_ce[0][252] = ap_ce[init_intra_neighbors_hls];

    if (ap_arb_ret[init_intra_neighbors_hls] & ~ap_arb_ret_r[init_intra_neighbors_hls]) begin
        ap_arb_ret_running[init_intra_neighbors_hls] = 1;
        init_intra_neighbors_hls_ready = 0;
    end

    scalar_argAckdone_all[init_intra_neighbors_hls] = scalar_argAckdone[1][1][4] &
                                                scalar_argAckdone[2][0][3] &
                                                scalar_argAckdone[3][0][4] &
                                                scalar_argAckdone[4][0][7] &
                                                scalar_argAckdone[5][0][13] &
                                                scalar_argAckdone[6][1][12] &
                                                scalar_argAckdone[7][0][11] &
                                                scalar_argAckdone[8][0][13] &
                                                scalar_argAckdone[9][0][13] &
                                                scalar_argAckdone[10][1][10];
    if (ap_arb_ret_running[init_intra_neighbors_hls] & scalar_argAckdone_all[init_intra_neighbors_hls] &~ ap_arb_reload_running_r[init_intra_neighbors_hls]) begin
        ap_arb_reload[init_intra_neighbors_hls] = 1;
        ap_arb_reload_running[init_intra_neighbors_hls] = 1;
    end

    if (ap_arb_start[init_intra_neighbors_hls] &~ ap_arb_start_r[init_intra_neighbors_hls]) begin
        ap_arb_start_running[init_intra_neighbors_hls] = 1;
    end

    if (ap_arb_start_running[init_intra_neighbors_hls] & ~scalar_writing_600& ~scalar_writing_584& ~scalar_writing_588& ~scalar_writing_580& ~scalar_writing_596& ~scalar_writing_672& ~scalar_writing_180& ~scalar_writing_184& ~scalar_writing_188& ~scalar_writing_192& ~scalar_writing_196& ~scalar_writing_200& ~scalar_writing_204& ~scalar_writing_208& ~scalar_writing_212& ~scalar_writing_216& ~scalar_writing_220& ~scalar_writing_224& ~scalar_writing_228& ~scalar_writing_232& ~scalar_writing_236& ~scalar_writing_240& ~scalar_writing_244) begin
        ap_arb_start_running[init_intra_neighbors_hls] = 0;
        ap_arb_reload[init_intra_neighbors_hls] = 1;
    end

    scalar_argdone_all[init_intra_neighbors_hls] = scalar_argdone[20][1][19] &
                                                                scalar_argdone[21][0][18] &
                                                                scalar_argdone[22][0][28] &
                                                                scalar_argdone[23][0][28] &
                                                                scalar_argdone[24][0][22] &
                                                                scalar_argdone[25][1][18] &
                                                                scalar_argdone[29][1][30] &
                                                                scalar_argdone[30][0][16] &
                                                                scalar_argdone[26][0][27] &
                                                                scalar_argdone[5][0][28] &
                                                                scalar_argdone[6][1][33] &
                                                                scalar_argdone[19][0][21] &
                                                                scalar_argdone[11][1][30] &
                                                                scalar_argdone[12][0][30] &
                                                                scalar_argdone[10][1][22] &
                                                                scalar_argdone[22][1][27] &
                                                                scalar_argdone[18][0][18] &
                                                                scalar_argdone[19][1][21] &
                                                                scalar_argdone[17][0][19] &
                                                                scalar_argdone[21][1][17] &
                                                                scalar_argdone[8][1][27] &
                                                                scalar_argdone[9][0][27] &
                                                                scalar_argdone[10][0][23] &
                                                                scalar_argdone[3][1][18] &
                                                                scalar_argdone[13][0][27] &
                                                                scalar_argdone[14][0][28] &
                                                                scalar_argdone[15][0][25] &
                                                                scalar_argdone[16][1][18] &
                                                                scalar_argdone[17][1][19] &
                                                                scalar_argdone[18][1][17] &
                                                                scalar_argdone[19][0][22] &
                                                                scalar_argdone[20][0][20] &
                                                                scalar_argdone[21][0][19] &
                                                                scalar_argdone[22][0][29] &
                                                                scalar_argdone[23][1][27] &
                                                                scalar_argdone[24][1][21] &
                                                                scalar_argdone[25][0][20] &
                                                                scalar_argdone[26][1][26] &
                                                                scalar_argdone[27][1][22] &
                                                                scalar_argdone[28][1][24] &
                                                                scalar_argdone[29][0][31] &
                                                                scalar_argdone[17][0][20];

    if (scalar_argdone_all_r[init_intra_neighbors_hls]) begin
        scalar_argdone[20][1][19] = 0;
        scalar_argdone[21][0][18] = 0;
        scalar_argdone[22][0][28] = 0;
        scalar_argdone[23][0][28] = 0;
        scalar_argdone[24][0][22] = 0;
        scalar_argdone[25][1][18] = 0;
        scalar_argdone[29][1][30] = 0;
        scalar_argdone[30][0][16] = 0;
        scalar_argdone[26][0][27] = 0;
        scalar_argdone[5][0][28] = 0;
        scalar_argdone[6][1][33] = 0;
        scalar_argdone[19][0][21] = 0;
        scalar_argdone[11][1][30] = 0;
        scalar_argdone[12][0][30] = 0;
        scalar_argdone[10][1][22] = 0;
        scalar_argdone[22][1][27] = 0;
        scalar_argdone[18][0][18] = 0;
        scalar_argdone[19][1][21] = 0;
        scalar_argdone[17][0][19] = 0;
        scalar_argdone[21][1][17] = 0;
        scalar_argdone[8][1][27] = 0;
        scalar_argdone[9][0][27] = 0;
        scalar_argdone[10][0][23] = 0;
        scalar_argdone[3][1][18] = 0;
        scalar_argdone[13][0][27] = 0;
        scalar_argdone[14][0][28] = 0;
        scalar_argdone[15][0][25] = 0;
        scalar_argdone[16][1][18] = 0;
        scalar_argdone[17][1][19] = 0;
        scalar_argdone[18][1][17] = 0;
        scalar_argdone[19][0][22] = 0;
        scalar_argdone[20][0][20] = 0;
        scalar_argdone[21][0][19] = 0;
        scalar_argdone[22][0][29] = 0;
        scalar_argdone[23][1][27] = 0;
        scalar_argdone[24][1][21] = 0;
        scalar_argdone[25][0][20] = 0;
        scalar_argdone[26][1][26] = 0;
        scalar_argdone[27][1][22] = 0;
        scalar_argdone[28][1][24] = 0;
        scalar_argdone[29][0][31] = 0;
        scalar_argdone[17][0][20] = 0;

        if (ap_arb_start_r[init_intra_neighbors_hls] & ~ap_running_r[init_intra_neighbors_hls]) begin
            ap_start[init_intra_neighbors_hls] = 1;
            ap_running[init_intra_neighbors_hls] = 1;
        end
        else if (ap_arb_ret_running_r[init_intra_neighbors_hls]) begin
            ap_arb_ret_running[init_intra_neighbors_hls] = 0;
            ap_arb_reload_running[init_intra_neighbors_hls] = 0;
        end
    end

    if (ap_start_r[init_intra_neighbors_hls] & ap_ready_r[init_intra_neighbors_hls]) begin
        ap_start[init_intra_neighbors_hls] = 0;
    end

    if (ap_done_r[init_intra_neighbors_hls]) begin
        ap_running[init_intra_neighbors_hls] = 0;
    end
`endif
    //============================================================
    //init_intra_neighbors_chroma_hls       (f = 31)
    //============================================================
`ifdef enable_connect_init_intra_neighbors_chroma_hls
    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 0; a = 18;
    if (scalar_rdat_vld_r[20][0][18]) begin
        scalar_argdone [20][0][18] = 1;
    end
    scalar_adr    [20][0][18] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][18]) begin
        scalar_argVld [20][0][18] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [20][0][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 0; a = 17;
    if (scalar_rdat_vld_r[21][0][17]) begin
        scalar_argdone [21][0][17] = 1;
    end
    scalar_adr    [21][0][17] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][17]) begin
        scalar_argVld [21][0][17] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [21][0][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 0; a = 27;
    if (scalar_rdat_vld_r[22][0][27]) begin
        scalar_argdone [22][0][27] = 1;
    end
    scalar_adr    [22][0][27] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][27]) begin
        scalar_argVld [22][0][27] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [22][0][27] = 1;
    end

    //------READ (scalar, complete partition, global adr = 348) comb block-----//
    //s = 23; r = 0; a = 27;
    if (scalar_rdat_vld_r[23][0][27]) begin
        scalar_argdone [23][0][27] = 1;
    end
    scalar_adr    [23][0][27] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][27]) begin
        scalar_argVld [23][0][27] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [23][0][27] = 1;
    end

    //------READ (scalar, complete partition, global adr = 352) comb block-----//
    //s = 24; r = 0; a = 21;
    if (scalar_rdat_vld_r[24][0][21]) begin
        scalar_argdone [24][0][21] = 1;
    end
    scalar_adr    [24][0][21] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][21]) begin
        scalar_argVld [24][0][21] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [24][0][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 356) comb block-----//
    //s = 25; r = 1; a = 17;
    if (scalar_rdat_vld_r[25][1][17]) begin
        scalar_argdone [25][1][17] = 1;
    end
    scalar_adr    [25][1][17] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][17]) begin
        scalar_argVld [25][1][17] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [25][1][17] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 1; a = 29;
    if (scalar_rdat_vld_r[29][1][29]) begin
        scalar_argdone [29][1][29] = 1;
    end
    scalar_adr[29][1][29] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][29]) begin
        scalar_argVld[29][1][29] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[29][1][29] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 1; a = 15;
    if (scalar_rdat_vld_r[30][1][15]) begin
        scalar_argdone [30][1][15] = 1;
    end
    scalar_adr[30][1][15] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][15]) begin
        scalar_argVld[30][1][15] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[30][1][15] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 26;
    if (scalar_rdat_vld_r[26][0][26]) begin
        scalar_argdone [26][0][26] = 1;
    end
    scalar_adr[26][0][26] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][26]) begin
        scalar_argVld[26][0][26] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[26][0][26] = 1;
    end

    //------READ (scalar, global adr = 404) comb block-----//
    //s = 5; r = 0; a = 27;
    if (scalar_rdat_vld_r[5][0][27]) begin
        scalar_argdone [5][0][27] = 1;
    end
    scalar_adr[5][0][27] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][27]) begin
        scalar_argVld[5][0][27] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[5][0][27] = 1;
    end

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 1; a = 32;
    if (scalar_rdat_vld_r[6][1][32]) begin
        scalar_argdone [6][1][32] = 1;
    end
    scalar_adr[6][1][32] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][32]) begin
        scalar_argVld[6][1][32] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[6][1][32] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 1; a = 19;
    if (scalar_rdat_vld_r[19][1][19]) begin
        scalar_argdone [19][1][19] = 1;
    end
    scalar_adr[19][1][19] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][19]) begin
        scalar_argVld[19][1][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[19][1][19] = 1;
    end

    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 0; a = 30;
    if (scalar_rdat_vld_r[11][0][30]) begin
        scalar_argdone [11][0][30] = 1;
    end
    scalar_adr[11][0][30] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][30]) begin
        scalar_argVld[11][0][30] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[11][0][30] = 1;
    end

    //------READ (scalar, global adr = 176) comb block-----//
    //s = 12; r = 1; a = 28;
    if (scalar_rdat_vld_r[12][1][28]) begin
        scalar_argdone [12][1][28] = 1;
    end
    scalar_adr[12][1][28] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][28]) begin
        scalar_argVld[12][1][28] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[12][1][28] = 1;
    end

    //------READ (scalar, global adr = 424) comb block-----//
    //s = 10; r = 0; a = 22;
    if (scalar_rdat_vld_r[10][0][22]) begin
        scalar_argdone [10][0][22] = 1;
    end
    scalar_adr[10][0][22] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][22]) begin
        scalar_argVld[10][0][22] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[10][0][22] = 1;
    end

    //------WRITE (array range, global adr = 286188, width=32, addr_width=32) -----//
    //s = 0; a = 89;
    array_argVld [0][89] = init_intra_neighbors_chroma_hls_min_tb_addr_zs_EN_A & (init_intra_neighbors_chroma_hls_min_tb_addr_zs_WEN_A != 0);
    array_adr    [0][89] = init_intra_neighbors_chroma_hls_min_tb_addr_zs_Addr_A;
    array_wdat   [0][89] = init_intra_neighbors_chroma_hls_min_tb_addr_zs_Din_A;

    //------READ (array range, global adr = 286188, width=32, addr_width=32) -----//
    //s = 0; a = 249;
    init_intra_neighbors_chroma_hls_min_tb_addr_zs_Dout_A = array_rdat  [0][249];
    //found a write signal pair
    array_argVld [0][249] = init_intra_neighbors_chroma_hls_min_tb_addr_zs_EN_A & (init_intra_neighbors_chroma_hls_min_tb_addr_zs_WEN_A == 0);
    array_adr    [0][249] = init_intra_neighbors_chroma_hls_min_tb_addr_zs_Addr_A;

    //------READ (scalar, global adr = 1432) comb block-----//
    //s = 6; r = 0; a = 34;
    if (scalar_rdat_vld_r[6][0][34]) begin
        scalar_argdone [6][0][34] = 1;
    end
    scalar_adr[6][0][34] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][34]) begin
        scalar_argVld[6][0][34] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[6][0][34] = 1;
    end

    //------READ (scalar, global adr = 1416) comb block-----//
    //s = 2; r = 0; a = 20;
    if (scalar_rdat_vld_r[2][0][20]) begin
        scalar_argdone [2][0][20] = 1;
    end
    scalar_adr[2][0][20] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][20]) begin
        scalar_argVld[2][0][20] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[2][0][20] = 1;
    end

    //------READ (scalar, global adr = 1420) comb block-----//
    //s = 3; r = 1; a = 17;
    if (scalar_rdat_vld_r[3][1][17]) begin
        scalar_argdone [3][1][17] = 1;
    end
    scalar_adr[3][1][17] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][17]) begin
        scalar_argVld[3][1][17] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[3][1][17] = 1;
    end

    //------READ (scalar, global adr = 1412) comb block-----//
    //s = 1; r = 0; a = 28;
    if (scalar_rdat_vld_r[1][0][28]) begin
        scalar_argdone [1][0][28] = 1;
    end
    scalar_adr[1][0][28] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][28]) begin
        scalar_argVld[1][0][28] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[1][0][28] = 1;
    end

    //------READ (scalar, global adr = 1428) comb block-----//
    //s = 5; r = 1; a = 26;
    if (scalar_rdat_vld_r[5][1][26]) begin
        scalar_argdone [5][1][26] = 1;
    end
    scalar_adr[5][1][26] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][26]) begin
        scalar_argVld[5][1][26] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[5][1][26] = 1;
    end

    //------WRITE (scalar, global adr = 684) comb block-----//
    //s = 11; r = 0; a = 8;
    if (scalar_argAck [11][0][8]) begin
        scalar_argVld [11][0][8] = 0;
        scalar_argAckdone [11][0][8] = 1;
    end
    if (init_intra_neighbors_chroma_hls_numIntraNeighbor_c_ap_vld_r) begin
        scalar_argVld [11][0][8] = 1;
        scalar_argAckdone [11][0][8] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][0][8] = init_intra_neighbors_chroma_hls_numIntraNeighbor_c_r;
    scalar_adr    [11][0][8] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 688) comb block-----//
    //s = 12; r = 1; a = 9;
    if (scalar_argAck [12][1][9]) begin
        scalar_argVld [12][1][9] = 0;
        scalar_argAckdone [12][1][9] = 1;
    end
    if (init_intra_neighbors_chroma_hls_totalUnits_c_ap_vld_r) begin
        scalar_argVld [12][1][9] = 1;
        scalar_argAckdone [12][1][9] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][9] = init_intra_neighbors_chroma_hls_totalUnits_c_r;
    scalar_adr    [12][1][9] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 692) comb block-----//
    //s = 13; r = 1; a = 8;
    if (scalar_argAck [13][1][8]) begin
        scalar_argVld [13][1][8] = 0;
        scalar_argAckdone [13][1][8] = 1;
    end
    if (init_intra_neighbors_chroma_hls_aboveUnits_c_ap_vld_r) begin
        scalar_argVld [13][1][8] = 1;
        scalar_argAckdone [13][1][8] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][8] = init_intra_neighbors_chroma_hls_aboveUnits_c_r;
    scalar_adr    [13][1][8] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 696) comb block-----//
    //s = 14; r = 0; a = 10;
    if (scalar_argAck [14][0][10]) begin
        scalar_argVld [14][0][10] = 0;
        scalar_argAckdone [14][0][10] = 1;
    end
    if (init_intra_neighbors_chroma_hls_leftUnits_c_ap_vld_r) begin
        scalar_argVld [14][0][10] = 1;
        scalar_argAckdone [14][0][10] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][10] = init_intra_neighbors_chroma_hls_leftUnits_c_r;
    scalar_adr    [14][0][10] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 700) comb block-----//
    //s = 15; r = 0; a = 8;
    if (scalar_argAck [15][0][8]) begin
        scalar_argVld [15][0][8] = 0;
        scalar_argAckdone [15][0][8] = 1;
    end
    if (init_intra_neighbors_chroma_hls_unitWidth_c_ap_vld_r) begin
        scalar_argVld [15][0][8] = 1;
        scalar_argAckdone [15][0][8] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][8] = init_intra_neighbors_chroma_hls_unitWidth_c_r;
    scalar_adr    [15][0][8] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 704) comb block-----//
    //s = 16; r = 1; a = 4;
    if (scalar_argAck [16][1][4]) begin
        scalar_argVld [16][1][4] = 0;
        scalar_argAckdone [16][1][4] = 1;
    end
    if (init_intra_neighbors_chroma_hls_unitHeight_c_ap_vld_r) begin
        scalar_argVld [16][1][4] = 1;
        scalar_argAckdone [16][1][4] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][1][4] = init_intra_neighbors_chroma_hls_unitHeight_c_r;
    scalar_adr    [16][1][4] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 708) comb block-----//
    //s = 17; r = 0; a = 5;
    if (scalar_argAck [17][0][5]) begin
        scalar_argVld [17][0][5] = 0;
        scalar_argAckdone [17][0][5] = 1;
    end
    if (init_intra_neighbors_chroma_hls_log2TrSize_c_ap_vld_r) begin
        scalar_argVld [17][0][5] = 1;
        scalar_argAckdone [17][0][5] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][0][5] = init_intra_neighbors_chroma_hls_log2TrSize_c_r;
    scalar_adr    [17][0][5] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 712) comb block-----//
    //s = 18; r = 0; a = 17;
    if (scalar_rdat_vld_r[18][0][17]) begin
        scalar_argdone [18][0][17] = 1;
    end
    scalar_adr[18][0][17] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][17]) begin
        scalar_argVld[18][0][17] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[18][0][17] = 1;
    end

    //------READ (scalar, global adr = 712) comb block-----//
    //s = 19; r = 0; a = 20;
    if (scalar_rdat_vld_r[19][0][20]) begin
        scalar_argdone [19][0][20] = 1;
    end
    scalar_adr[19][0][20] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][20]) begin
        scalar_argVld[19][0][20] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[19][0][20] = 1;
    end

    //------READ (scalar, global adr = 712) comb block-----//
    //s = 20; r = 1; a = 18;
    if (scalar_rdat_vld_r[20][1][18]) begin
        scalar_argdone [20][1][18] = 1;
    end
    scalar_adr[20][1][18] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][18]) begin
        scalar_argVld[20][1][18] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[20][1][18] = 1;
    end

    //------WRITE (scalar, global adr = 712) comb block-----//
    //s = 18; r = 0; a = 5;
    if (scalar_argAck [18][0][5]) begin
        scalar_argVld [18][0][5] = 0;
        scalar_argAckdone [18][0][5] = 1;
    end
    if (init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_ap_vld_r) begin
        scalar_argVld [18][0][5] = 1;
        scalar_argAckdone [18][0][5] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][0][5] = init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_r;
    scalar_adr    [18][0][5] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 712) comb block-----//
    //s = 19; r = 0; a = 6;
    if (scalar_argAck [19][0][6]) begin
        scalar_argVld [19][0][6] = 0;
        scalar_argAckdone [19][0][6] = 1;
    end
    if (init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_ap_vld_r) begin
        scalar_argVld [19][0][6] = 1;
        scalar_argAckdone [19][0][6] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][0][6] = init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_r;
    scalar_adr    [19][0][6] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 712) comb block-----//
    //s = 20; r = 0; a = 8;
    if (scalar_argAck [20][0][8]) begin
        scalar_argVld [20][0][8] = 0;
        scalar_argAckdone [20][0][8] = 1;
    end
    if (init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_ap_vld_r) begin
        scalar_argVld [20][0][8] = 1;
        scalar_argAckdone [20][0][8] = 0;
        ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION] = ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][8] = init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_r;
    scalar_adr    [20][0][8] = {ap_part_w[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 0; a = 19;
    if (scalar_rdat_vld_r[3][0][19]) begin
        scalar_argdone [3][0][19] = 1;
    end
    scalar_adr[3][0][19] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][19]) begin
        scalar_argVld[3][0][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[3][0][19] = 1;
    end

    //------WRITE (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 90;
    array_argVld [0][90] = init_intra_neighbors_chroma_hls_tab_mvf_pred_flag_row_EN_A & (init_intra_neighbors_chroma_hls_tab_mvf_pred_flag_row_WEN_A != 0);
    array_adr    [0][90] = init_intra_neighbors_chroma_hls_tab_mvf_pred_flag_row_Addr_A;
    array_wdat   [0][90] = init_intra_neighbors_chroma_hls_tab_mvf_pred_flag_row_Din_A;

    //------READ (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 250;
    init_intra_neighbors_chroma_hls_tab_mvf_pred_flag_row_Dout_A = array_rdat  [0][250];
    //found a write signal pair
    array_argVld [0][250] = init_intra_neighbors_chroma_hls_tab_mvf_pred_flag_row_EN_A & (init_intra_neighbors_chroma_hls_tab_mvf_pred_flag_row_WEN_A == 0);
    array_adr    [0][250] = init_intra_neighbors_chroma_hls_tab_mvf_pred_flag_row_Addr_A;

    //------READ (scalar, complete partition, global adr = 180) comb block-----//
    //s = 13; r = 1; a = 26;
    if (scalar_rdat_vld_r[13][1][26]) begin
        scalar_argdone [13][1][26] = 1;
    end
    scalar_adr    [13][1][26] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][26]) begin
        scalar_argVld [13][1][26] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [13][1][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 184) comb block-----//
    //s = 14; r = 1; a = 27;
    if (scalar_rdat_vld_r[14][1][27]) begin
        scalar_argdone [14][1][27] = 1;
    end
    scalar_adr    [14][1][27] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][27]) begin
        scalar_argVld [14][1][27] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [14][1][27] = 1;
    end

    //------READ (scalar, complete partition, global adr = 188) comb block-----//
    //s = 15; r = 1; a = 24;
    if (scalar_rdat_vld_r[15][1][24]) begin
        scalar_argdone [15][1][24] = 1;
    end
    scalar_adr    [15][1][24] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][24]) begin
        scalar_argVld [15][1][24] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [15][1][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 192) comb block-----//
    //s = 16; r = 0; a = 19;
    if (scalar_rdat_vld_r[16][0][19]) begin
        scalar_argdone [16][0][19] = 1;
    end
    scalar_adr    [16][0][19] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][19]) begin
        scalar_argVld [16][0][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [16][0][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 196) comb block-----//
    //s = 17; r = 0; a = 18;
    if (scalar_rdat_vld_r[17][0][18]) begin
        scalar_argdone [17][0][18] = 1;
    end
    scalar_adr    [17][0][18] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][18]) begin
        scalar_argVld [17][0][18] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [17][0][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 200) comb block-----//
    //s = 18; r = 1; a = 16;
    if (scalar_rdat_vld_r[18][1][16]) begin
        scalar_argdone [18][1][16] = 1;
    end
    scalar_adr    [18][1][16] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][16]) begin
        scalar_argVld [18][1][16] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [18][1][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 204) comb block-----//
    //s = 19; r = 1; a = 20;
    if (scalar_rdat_vld_r[19][1][20]) begin
        scalar_argdone [19][1][20] = 1;
    end
    scalar_adr    [19][1][20] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][20]) begin
        scalar_argVld [19][1][20] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [19][1][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 208) comb block-----//
    //s = 20; r = 0; a = 19;
    if (scalar_rdat_vld_r[20][0][19]) begin
        scalar_argdone [20][0][19] = 1;
    end
    scalar_adr    [20][0][19] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][19]) begin
        scalar_argVld [20][0][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [20][0][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 212) comb block-----//
    //s = 21; r = 1; a = 16;
    if (scalar_rdat_vld_r[21][1][16]) begin
        scalar_argdone [21][1][16] = 1;
    end
    scalar_adr    [21][1][16] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][16]) begin
        scalar_argVld [21][1][16] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [21][1][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 216) comb block-----//
    //s = 22; r = 1; a = 26;
    if (scalar_rdat_vld_r[22][1][26]) begin
        scalar_argdone [22][1][26] = 1;
    end
    scalar_adr    [22][1][26] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][26]) begin
        scalar_argVld [22][1][26] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [22][1][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 220) comb block-----//
    //s = 23; r = 1; a = 26;
    if (scalar_rdat_vld_r[23][1][26]) begin
        scalar_argdone [23][1][26] = 1;
    end
    scalar_adr    [23][1][26] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][26]) begin
        scalar_argVld [23][1][26] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [23][1][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 224) comb block-----//
    //s = 24; r = 1; a = 20;
    if (scalar_rdat_vld_r[24][1][20]) begin
        scalar_argdone [24][1][20] = 1;
    end
    scalar_adr    [24][1][20] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][20]) begin
        scalar_argVld [24][1][20] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [24][1][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 228) comb block-----//
    //s = 25; r = 0; a = 19;
    if (scalar_rdat_vld_r[25][0][19]) begin
        scalar_argdone [25][0][19] = 1;
    end
    scalar_adr    [25][0][19] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][19]) begin
        scalar_argVld [25][0][19] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [25][0][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 232) comb block-----//
    //s = 26; r = 1; a = 25;
    if (scalar_rdat_vld_r[26][1][25]) begin
        scalar_argdone [26][1][25] = 1;
    end
    scalar_adr    [26][1][25] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][25]) begin
        scalar_argVld [26][1][25] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [26][1][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 236) comb block-----//
    //s = 27; r = 0; a = 23;
    if (scalar_rdat_vld_r[27][0][23]) begin
        scalar_argdone [27][0][23] = 1;
    end
    scalar_adr    [27][0][23] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][23]) begin
        scalar_argVld [27][0][23] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [27][0][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 240) comb block-----//
    //s = 28; r = 0; a = 24;
    if (scalar_rdat_vld_r[28][0][24]) begin
        scalar_argdone [28][0][24] = 1;
    end
    scalar_adr    [28][0][24] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][24]) begin
        scalar_argVld [28][0][24] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [28][0][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 244) comb block-----//
    //s = 29; r = 0; a = 30;
    if (scalar_rdat_vld_r[29][0][30]) begin
        scalar_argdone [29][0][30] = 1;
    end
    scalar_adr    [29][0][30] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][30]) begin
        scalar_argVld [29][0][30] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld [29][0][30] = 1;
    end

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 1; a = 18;
    if (scalar_rdat_vld_r[17][1][18]) begin
        scalar_argdone [17][1][18] = 1;
    end
    scalar_adr[17][1][18] = {ap_part[init_intra_neighbors_chroma_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][18]) begin
        scalar_argVld[17][1][18] = 0;
    end
    if (ap_arb_reload_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argVld[17][1][18] = 1;
    end

    init_intra_neighbors_chroma_hls_ready = array_argRdy[0][89]& array_argRdy[0][249]& array_argRdy[0][90]& array_argRdy[0][250] & ~ap_arb_reload_running_r[init_intra_neighbors_chroma_hls];
    array_ap_ce[0][89] = ap_ce[init_intra_neighbors_chroma_hls];
    array_ap_ce[0][249] = ap_ce[init_intra_neighbors_chroma_hls];
    array_ap_ce[0][90] = ap_ce[init_intra_neighbors_chroma_hls];
    array_ap_ce[0][250] = ap_ce[init_intra_neighbors_chroma_hls];

    if (ap_arb_ret[init_intra_neighbors_chroma_hls] & ~ap_arb_ret_r[init_intra_neighbors_chroma_hls]) begin
        ap_arb_ret_running[init_intra_neighbors_chroma_hls] = 1;
        init_intra_neighbors_chroma_hls_ready = 0;
    end

    scalar_argAckdone_all[init_intra_neighbors_chroma_hls] = scalar_argAckdone[11][0][8] &
                                                scalar_argAckdone[12][1][9] &
                                                scalar_argAckdone[13][1][8] &
                                                scalar_argAckdone[14][0][10] &
                                                scalar_argAckdone[15][0][8] &
                                                scalar_argAckdone[16][1][4] &
                                                scalar_argAckdone[17][0][5] &
                                                scalar_argAckdone[18][0][5] &
                                                scalar_argAckdone[19][0][6] &
                                                scalar_argAckdone[20][0][8];
    if (ap_arb_ret_running[init_intra_neighbors_chroma_hls] & scalar_argAckdone_all[init_intra_neighbors_chroma_hls] &~ ap_arb_reload_running_r[init_intra_neighbors_chroma_hls]) begin
        ap_arb_reload[init_intra_neighbors_chroma_hls] = 1;
        ap_arb_reload_running[init_intra_neighbors_chroma_hls] = 1;
    end

    if (ap_arb_start[init_intra_neighbors_chroma_hls] &~ ap_arb_start_r[init_intra_neighbors_chroma_hls]) begin
        ap_arb_start_running[init_intra_neighbors_chroma_hls] = 1;
    end

    if (ap_arb_start_running[init_intra_neighbors_chroma_hls] & ~scalar_writing_1432& ~scalar_writing_1416& ~scalar_writing_1420& ~scalar_writing_1412& ~scalar_writing_1428& ~scalar_writing_712& ~scalar_writing_180& ~scalar_writing_184& ~scalar_writing_188& ~scalar_writing_192& ~scalar_writing_196& ~scalar_writing_200& ~scalar_writing_204& ~scalar_writing_208& ~scalar_writing_212& ~scalar_writing_216& ~scalar_writing_220& ~scalar_writing_224& ~scalar_writing_228& ~scalar_writing_232& ~scalar_writing_236& ~scalar_writing_240& ~scalar_writing_244) begin
        ap_arb_start_running[init_intra_neighbors_chroma_hls] = 0;
        ap_arb_reload[init_intra_neighbors_chroma_hls] = 1;
    end

    scalar_argdone_all[init_intra_neighbors_chroma_hls] = scalar_argdone[20][0][18] &
                                                                scalar_argdone[21][0][17] &
                                                                scalar_argdone[22][0][27] &
                                                                scalar_argdone[23][0][27] &
                                                                scalar_argdone[24][0][21] &
                                                                scalar_argdone[25][1][17] &
                                                                scalar_argdone[29][1][29] &
                                                                scalar_argdone[30][1][15] &
                                                                scalar_argdone[26][0][26] &
                                                                scalar_argdone[5][0][27] &
                                                                scalar_argdone[6][1][32] &
                                                                scalar_argdone[19][1][19] &
                                                                scalar_argdone[11][0][30] &
                                                                scalar_argdone[12][1][28] &
                                                                scalar_argdone[10][0][22] &
                                                                scalar_argdone[6][0][34] &
                                                                scalar_argdone[2][0][20] &
                                                                scalar_argdone[3][1][17] &
                                                                scalar_argdone[1][0][28] &
                                                                scalar_argdone[5][1][26] &
                                                                scalar_argdone[18][0][17] &
                                                                scalar_argdone[19][0][20] &
                                                                scalar_argdone[20][1][18] &
                                                                scalar_argdone[3][0][19] &
                                                                scalar_argdone[13][1][26] &
                                                                scalar_argdone[14][1][27] &
                                                                scalar_argdone[15][1][24] &
                                                                scalar_argdone[16][0][19] &
                                                                scalar_argdone[17][0][18] &
                                                                scalar_argdone[18][1][16] &
                                                                scalar_argdone[19][1][20] &
                                                                scalar_argdone[20][0][19] &
                                                                scalar_argdone[21][1][16] &
                                                                scalar_argdone[22][1][26] &
                                                                scalar_argdone[23][1][26] &
                                                                scalar_argdone[24][1][20] &
                                                                scalar_argdone[25][0][19] &
                                                                scalar_argdone[26][1][25] &
                                                                scalar_argdone[27][0][23] &
                                                                scalar_argdone[28][0][24] &
                                                                scalar_argdone[29][0][30] &
                                                                scalar_argdone[17][1][18];

    if (scalar_argdone_all_r[init_intra_neighbors_chroma_hls]) begin
        scalar_argdone[20][0][18] = 0;
        scalar_argdone[21][0][17] = 0;
        scalar_argdone[22][0][27] = 0;
        scalar_argdone[23][0][27] = 0;
        scalar_argdone[24][0][21] = 0;
        scalar_argdone[25][1][17] = 0;
        scalar_argdone[29][1][29] = 0;
        scalar_argdone[30][1][15] = 0;
        scalar_argdone[26][0][26] = 0;
        scalar_argdone[5][0][27] = 0;
        scalar_argdone[6][1][32] = 0;
        scalar_argdone[19][1][19] = 0;
        scalar_argdone[11][0][30] = 0;
        scalar_argdone[12][1][28] = 0;
        scalar_argdone[10][0][22] = 0;
        scalar_argdone[6][0][34] = 0;
        scalar_argdone[2][0][20] = 0;
        scalar_argdone[3][1][17] = 0;
        scalar_argdone[1][0][28] = 0;
        scalar_argdone[5][1][26] = 0;
        scalar_argdone[18][0][17] = 0;
        scalar_argdone[19][0][20] = 0;
        scalar_argdone[20][1][18] = 0;
        scalar_argdone[3][0][19] = 0;
        scalar_argdone[13][1][26] = 0;
        scalar_argdone[14][1][27] = 0;
        scalar_argdone[15][1][24] = 0;
        scalar_argdone[16][0][19] = 0;
        scalar_argdone[17][0][18] = 0;
        scalar_argdone[18][1][16] = 0;
        scalar_argdone[19][1][20] = 0;
        scalar_argdone[20][0][19] = 0;
        scalar_argdone[21][1][16] = 0;
        scalar_argdone[22][1][26] = 0;
        scalar_argdone[23][1][26] = 0;
        scalar_argdone[24][1][20] = 0;
        scalar_argdone[25][0][19] = 0;
        scalar_argdone[26][1][25] = 0;
        scalar_argdone[27][0][23] = 0;
        scalar_argdone[28][0][24] = 0;
        scalar_argdone[29][0][30] = 0;
        scalar_argdone[17][1][18] = 0;

        if (ap_arb_start_r[init_intra_neighbors_chroma_hls] & ~ap_running_r[init_intra_neighbors_chroma_hls]) begin
            ap_start[init_intra_neighbors_chroma_hls] = 1;
            ap_running[init_intra_neighbors_chroma_hls] = 1;
        end
        else if (ap_arb_ret_running_r[init_intra_neighbors_chroma_hls]) begin
            ap_arb_ret_running[init_intra_neighbors_chroma_hls] = 0;
            ap_arb_reload_running[init_intra_neighbors_chroma_hls] = 0;
        end
    end

    if (ap_start_r[init_intra_neighbors_chroma_hls] & ap_ready_r[init_intra_neighbors_chroma_hls]) begin
        ap_start[init_intra_neighbors_chroma_hls] = 0;
    end

    if (ap_done_r[init_intra_neighbors_chroma_hls]) begin
        ap_running[init_intra_neighbors_chroma_hls] = 0;
    end
`endif
    //============================================================
    //ff_hevc_set_neighbour_available_hls       (f = 32)
    //============================================================
`ifdef enable_connect_ff_hevc_set_neighbour_available_hls
    //------WRITE (scalar, global adr = 580) comb block-----//
    //s = 17; r = 1; a = 1;
    if (scalar_argAck [17][1][1]) begin
        scalar_argVld [17][1][1] = 0;
        scalar_argAckdone [17][1][1] = 1;
    end
    if (ff_hevc_set_neighbour_available_hls_cand_up_ap_vld_r) begin
        scalar_argVld [17][1][1] = 1;
        scalar_argAckdone [17][1][1] = 0;
        ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][1][1] = ff_hevc_set_neighbour_available_hls_cand_up_r;
    scalar_adr    [17][1][1] = {ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 584) comb block-----//
    //s = 18; r = 1; a = 1;
    if (scalar_argAck [18][1][1]) begin
        scalar_argVld [18][1][1] = 0;
        scalar_argAckdone [18][1][1] = 1;
    end
    if (ff_hevc_set_neighbour_available_hls_cand_left_ap_vld_r) begin
        scalar_argVld [18][1][1] = 1;
        scalar_argAckdone [18][1][1] = 0;
        ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][1][1] = ff_hevc_set_neighbour_available_hls_cand_left_r;
    scalar_adr    [18][1][1] = {ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 588) comb block-----//
    //s = 19; r = 1; a = 2;
    if (scalar_argAck [19][1][2]) begin
        scalar_argVld [19][1][2] = 0;
        scalar_argAckdone [19][1][2] = 1;
    end
    if (ff_hevc_set_neighbour_available_hls_cand_up_left_ap_vld_r) begin
        scalar_argVld [19][1][2] = 1;
        scalar_argAckdone [19][1][2] = 0;
        ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][1][2] = ff_hevc_set_neighbour_available_hls_cand_up_left_r;
    scalar_adr    [19][1][2] = {ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 592) comb block-----//
    //s = 20; r = 1; a = 2;
    if (scalar_argAck [20][1][2]) begin
        scalar_argVld [20][1][2] = 0;
        scalar_argAckdone [20][1][2] = 1;
    end
    if (ff_hevc_set_neighbour_available_hls_cand_up_right_sap_ap_vld_r) begin
        scalar_argVld [20][1][2] = 1;
        scalar_argAckdone [20][1][2] = 0;
        ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][2] = ff_hevc_set_neighbour_available_hls_cand_up_right_sap_r;
    scalar_adr    [20][1][2] = {ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 596) comb block-----//
    //s = 21; r = 1; a = 1;
    if (scalar_argAck [21][1][1]) begin
        scalar_argVld [21][1][1] = 0;
        scalar_argAckdone [21][1][1] = 1;
    end
    if (ff_hevc_set_neighbour_available_hls_cand_up_right_ap_vld_r) begin
        scalar_argVld [21][1][1] = 1;
        scalar_argAckdone [21][1][1] = 0;
        ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][1] = ff_hevc_set_neighbour_available_hls_cand_up_right_r;
    scalar_adr    [21][1][1] = {ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 600) comb block-----//
    //s = 22; r = 1; a = 1;
    if (scalar_argAck [22][1][1]) begin
        scalar_argVld [22][1][1] = 0;
        scalar_argAckdone [22][1][1] = 1;
    end
    if (ff_hevc_set_neighbour_available_hls_cand_bottom_left_ap_vld_r) begin
        scalar_argVld [22][1][1] = 1;
        scalar_argAckdone [22][1][1] = 0;
        ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][1] = ff_hevc_set_neighbour_available_hls_cand_bottom_left_r;
    scalar_adr    [22][1][1] = {ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 9;
    if (scalar_rdat_vld_r[26][0][9]) begin
        scalar_argdone [26][0][9] = 1;
    end
    scalar_adr[26][0][9] = {ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][9]) begin
        scalar_argVld[26][0][9] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_neighbour_available_hls]) begin
        scalar_argVld[26][0][9] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 0; a = 11;
    if (scalar_rdat_vld_r[23][0][11]) begin
        scalar_argdone [23][0][11] = 1;
    end
    scalar_adr[23][0][11] = {ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][11]) begin
        scalar_argVld[23][0][11] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_neighbour_available_hls]) begin
        scalar_argVld[23][0][11] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 0; a = 9;
    if (scalar_rdat_vld_r[24][0][9]) begin
        scalar_argdone [24][0][9] = 1;
    end
    scalar_adr[24][0][9] = {ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][9]) begin
        scalar_argVld[24][0][9] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_neighbour_available_hls]) begin
        scalar_argVld[24][0][9] = 1;
    end

    //------READ (scalar, global adr = 612) comb block-----//
    //s = 25; r = 1; a = 8;
    if (scalar_rdat_vld_r[25][1][8]) begin
        scalar_argdone [25][1][8] = 1;
    end
    scalar_adr[25][1][8] = {ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][8]) begin
        scalar_argVld[25][1][8] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_neighbour_available_hls]) begin
        scalar_argVld[25][1][8] = 1;
    end

    //------READ (scalar, global adr = 616) comb block-----//
    //s = 26; r = 1; a = 8;
    if (scalar_rdat_vld_r[26][1][8]) begin
        scalar_argdone [26][1][8] = 1;
    end
    scalar_adr[26][1][8] = {ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][8]) begin
        scalar_argVld[26][1][8] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_neighbour_available_hls]) begin
        scalar_argVld[26][1][8] = 1;
    end

    //------READ (scalar, global adr = 620) comb block-----//
    //s = 27; r = 0; a = 16;
    if (scalar_rdat_vld_r[27][0][16]) begin
        scalar_argdone [27][0][16] = 1;
    end
    scalar_adr[27][0][16] = {ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][16]) begin
        scalar_argVld[27][0][16] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_neighbour_available_hls]) begin
        scalar_argVld[27][0][16] = 1;
    end

    //------READ (scalar, global adr = 624) comb block-----//
    //s = 28; r = 1; a = 7;
    if (scalar_rdat_vld_r[28][1][7]) begin
        scalar_argdone [28][1][7] = 1;
    end
    scalar_adr[28][1][7] = {ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][7]) begin
        scalar_argVld[28][1][7] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_set_neighbour_available_hls]) begin
        scalar_argVld[28][1][7] = 1;
    end

    //------WRITE (scalar, global adr = 160) comb block-----//
    //s = 8; r = 1; a = 3;
    if (scalar_argAck [8][1][3]) begin
        scalar_argVld [8][1][3] = 0;
        scalar_argAckdone [8][1][3] = 1;
    end
    if (ff_hevc_set_neighbour_available_hls_nPbW_ap_vld_r) begin
        scalar_argVld [8][1][3] = 1;
        scalar_argAckdone [8][1][3] = 0;
        ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][3] = ff_hevc_set_neighbour_available_hls_nPbW_r;
    scalar_adr    [8][1][3] = {ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 164) comb block-----//
    //s = 9; r = 1; a = 3;
    if (scalar_argAck [9][1][3]) begin
        scalar_argVld [9][1][3] = 0;
        scalar_argAckdone [9][1][3] = 1;
    end
    if (ff_hevc_set_neighbour_available_hls_nPbH_ap_vld_r) begin
        scalar_argVld [9][1][3] = 1;
        scalar_argAckdone [9][1][3] = 0;
        ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][3] = ff_hevc_set_neighbour_available_hls_nPbH_r;
    scalar_adr    [9][1][3] = {ap_part_w[ff_hevc_set_neighbour_available_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (ap_arb_ret[ff_hevc_set_neighbour_available_hls] & ~ap_arb_ret_r[ff_hevc_set_neighbour_available_hls]) begin
        ap_arb_ret_running[ff_hevc_set_neighbour_available_hls] = 1;
        ff_hevc_set_neighbour_available_hls_ready = 0;
    end

    scalar_argAckdone_all[ff_hevc_set_neighbour_available_hls] = scalar_argAckdone[17][1][1] &
                                                scalar_argAckdone[18][1][1] &
                                                scalar_argAckdone[19][1][2] &
                                                scalar_argAckdone[20][1][2] &
                                                scalar_argAckdone[21][1][1] &
                                                scalar_argAckdone[22][1][1] &
                                                scalar_argAckdone[8][1][3] &
                                                scalar_argAckdone[9][1][3];
    if (ap_arb_ret_running[ff_hevc_set_neighbour_available_hls] & scalar_argAckdone_all[ff_hevc_set_neighbour_available_hls] &~ ap_arb_reload_running_r[ff_hevc_set_neighbour_available_hls]) begin
        ap_arb_reload[ff_hevc_set_neighbour_available_hls] = 1;
        ap_arb_reload_running[ff_hevc_set_neighbour_available_hls] = 1;
    end

    if (ap_arb_start[ff_hevc_set_neighbour_available_hls] &~ ap_arb_start_r[ff_hevc_set_neighbour_available_hls]) begin
        ap_arb_start_running[ff_hevc_set_neighbour_available_hls] = 1;
    end

    if (ap_arb_start_running[ff_hevc_set_neighbour_available_hls] & ~scalar_writing_604& ~scalar_writing_608& ~scalar_writing_612& ~scalar_writing_616& ~scalar_writing_620& ~scalar_writing_624) begin
        ap_arb_start_running[ff_hevc_set_neighbour_available_hls] = 0;
        ap_arb_reload[ff_hevc_set_neighbour_available_hls] = 1;
    end

    scalar_argdone_all[ff_hevc_set_neighbour_available_hls] = scalar_argdone[26][0][9] &
                                                                scalar_argdone[23][0][11] &
                                                                scalar_argdone[24][0][9] &
                                                                scalar_argdone[25][1][8] &
                                                                scalar_argdone[26][1][8] &
                                                                scalar_argdone[27][0][16] &
                                                                scalar_argdone[28][1][7];

    if (scalar_argdone_all_r[ff_hevc_set_neighbour_available_hls]) begin
        scalar_argdone[26][0][9] = 0;
        scalar_argdone[23][0][11] = 0;
        scalar_argdone[24][0][9] = 0;
        scalar_argdone[25][1][8] = 0;
        scalar_argdone[26][1][8] = 0;
        scalar_argdone[27][0][16] = 0;
        scalar_argdone[28][1][7] = 0;

        if (ap_arb_start_r[ff_hevc_set_neighbour_available_hls] & ~ap_running_r[ff_hevc_set_neighbour_available_hls]) begin
            ap_start[ff_hevc_set_neighbour_available_hls] = 1;
            ap_running[ff_hevc_set_neighbour_available_hls] = 1;
        end
        else if (ap_arb_ret_running_r[ff_hevc_set_neighbour_available_hls]) begin
            ap_arb_ret_running[ff_hevc_set_neighbour_available_hls] = 0;
            ap_arb_reload_running[ff_hevc_set_neighbour_available_hls] = 0;
        end
    end

    if (ap_start_r[ff_hevc_set_neighbour_available_hls] & ap_ready_r[ff_hevc_set_neighbour_available_hls]) begin
        ap_start[ff_hevc_set_neighbour_available_hls] = 0;
    end

    if (ap_done_r[ff_hevc_set_neighbour_available_hls]) begin
        ap_running[ff_hevc_set_neighbour_available_hls] = 0;
    end
`endif
    //============================================================
    //intra_prediction_unit_default_value_hls       (f = 33)
    //============================================================
`ifdef enable_connect_intra_prediction_unit_default_value_hls
    //------READ (scalar, global adr = 560) comb block-----//
    //s = 12; r = 1; a = 29;
    if (scalar_rdat_vld_r[12][1][29]) begin
        scalar_argdone [12][1][29] = 1;
    end
    scalar_adr[12][1][29] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][29]) begin
        scalar_argVld[12][1][29] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld[12][1][29] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 0; a = 32;
    if (scalar_rdat_vld_r[29][0][32]) begin
        scalar_argdone [29][0][32] = 1;
    end
    scalar_adr[29][0][32] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][32]) begin
        scalar_argVld[29][0][32] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld[29][0][32] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 0; a = 20;
    if (scalar_rdat_vld_r[3][0][20]) begin
        scalar_argdone [3][0][20] = 1;
    end
    scalar_adr[3][0][20] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][20]) begin
        scalar_argVld[3][0][20] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld[3][0][20] = 1;
    end

    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 0; a = 31;
    if (scalar_rdat_vld_r[11][0][31]) begin
        scalar_argdone [11][0][31] = 1;
    end
    scalar_adr[11][0][31] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][31]) begin
        scalar_argVld[11][0][31] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld[11][0][31] = 1;
    end

    //------WRITE (array range, global adr = 286180, width=8, addr_width=32) -----//
    //s = 0; a = 94;
    array_argVld [0][94] = intra_prediction_unit_default_value_hls_tab_ipm_EN_A & (intra_prediction_unit_default_value_hls_tab_ipm_WEN_A != 0);
    array_adr    [0][94] = intra_prediction_unit_default_value_hls_tab_ipm_Addr_A;
    array_wdat   [0][94] = intra_prediction_unit_default_value_hls_tab_ipm_Din_A;

    //------READ (array range, global adr = 286180, width=8, addr_width=32) -----//
    //s = 0; a = 253;
    intra_prediction_unit_default_value_hls_tab_ipm_Dout_A = array_rdat  [0][253];
    //found a write signal pair
    array_argVld [0][253] = intra_prediction_unit_default_value_hls_tab_ipm_EN_A & (intra_prediction_unit_default_value_hls_tab_ipm_WEN_A == 0);
    array_adr    [0][253] = intra_prediction_unit_default_value_hls_tab_ipm_Addr_A;

    //------WRITE (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 95;
    array_argVld [0][95] = intra_prediction_unit_default_value_hls_tab_mvf_pred_flag_row_EN_A & (intra_prediction_unit_default_value_hls_tab_mvf_pred_flag_row_WEN_A != 0);
    array_adr    [0][95] = intra_prediction_unit_default_value_hls_tab_mvf_pred_flag_row_Addr_A;
    array_wdat   [0][95] = intra_prediction_unit_default_value_hls_tab_mvf_pred_flag_row_Din_A;

    //------READ (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 254;
    intra_prediction_unit_default_value_hls_tab_mvf_pred_flag_row_Dout_A = array_rdat  [0][254];
    //found a write signal pair
    array_argVld [0][254] = intra_prediction_unit_default_value_hls_tab_mvf_pred_flag_row_EN_A & (intra_prediction_unit_default_value_hls_tab_mvf_pred_flag_row_WEN_A == 0);
    array_adr    [0][254] = intra_prediction_unit_default_value_hls_tab_mvf_pred_flag_row_Addr_A;

    //------READ (scalar, complete partition, global adr = 180) comb block-----//
    //s = 13; r = 1; a = 27;
    if (scalar_rdat_vld_r[13][1][27]) begin
        scalar_argdone [13][1][27] = 1;
    end
    scalar_adr    [13][1][27] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][27]) begin
        scalar_argVld [13][1][27] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [13][1][27] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 180) comb block-----//
    //s = 13; r = 0; a = 9;
    if (scalar_argAck [13][0][9]) begin
        scalar_argVld [13][0][9] = 0;
        scalar_argAckdone [13][0][9] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_0_o_ap_vld_r) begin
        scalar_argVld [13][0][9] = 1;
        scalar_argAckdone [13][0][9] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][9] = intra_prediction_unit_default_value_hls_predColBuf_0_o_r;
    scalar_adr    [13][0][9] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 184) comb block-----//
    //s = 14; r = 1; a = 28;
    if (scalar_rdat_vld_r[14][1][28]) begin
        scalar_argdone [14][1][28] = 1;
    end
    scalar_adr    [14][1][28] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][28]) begin
        scalar_argVld [14][1][28] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [14][1][28] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 184) comb block-----//
    //s = 14; r = 1; a = 10;
    if (scalar_argAck [14][1][10]) begin
        scalar_argVld [14][1][10] = 0;
        scalar_argAckdone [14][1][10] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_1_o_ap_vld_r) begin
        scalar_argVld [14][1][10] = 1;
        scalar_argAckdone [14][1][10] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][10] = intra_prediction_unit_default_value_hls_predColBuf_1_o_r;
    scalar_adr    [14][1][10] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 188) comb block-----//
    //s = 15; r = 1; a = 25;
    if (scalar_rdat_vld_r[15][1][25]) begin
        scalar_argdone [15][1][25] = 1;
    end
    scalar_adr    [15][1][25] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][25]) begin
        scalar_argVld [15][1][25] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [15][1][25] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 188) comb block-----//
    //s = 15; r = 1; a = 8;
    if (scalar_argAck [15][1][8]) begin
        scalar_argVld [15][1][8] = 0;
        scalar_argAckdone [15][1][8] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_2_o_ap_vld_r) begin
        scalar_argVld [15][1][8] = 1;
        scalar_argAckdone [15][1][8] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][8] = intra_prediction_unit_default_value_hls_predColBuf_2_o_r;
    scalar_adr    [15][1][8] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 192) comb block-----//
    //s = 16; r = 0; a = 20;
    if (scalar_rdat_vld_r[16][0][20]) begin
        scalar_argdone [16][0][20] = 1;
    end
    scalar_adr    [16][0][20] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][20]) begin
        scalar_argVld [16][0][20] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [16][0][20] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 192) comb block-----//
    //s = 16; r = 0; a = 5;
    if (scalar_argAck [16][0][5]) begin
        scalar_argVld [16][0][5] = 0;
        scalar_argAckdone [16][0][5] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_3_o_ap_vld_r) begin
        scalar_argVld [16][0][5] = 1;
        scalar_argAckdone [16][0][5] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][0][5] = intra_prediction_unit_default_value_hls_predColBuf_3_o_r;
    scalar_adr    [16][0][5] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 196) comb block-----//
    //s = 17; r = 1; a = 20;
    if (scalar_rdat_vld_r[17][1][20]) begin
        scalar_argdone [17][1][20] = 1;
    end
    scalar_adr    [17][1][20] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][20]) begin
        scalar_argVld [17][1][20] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [17][1][20] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 196) comb block-----//
    //s = 17; r = 1; a = 5;
    if (scalar_argAck [17][1][5]) begin
        scalar_argVld [17][1][5] = 0;
        scalar_argAckdone [17][1][5] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_4_o_ap_vld_r) begin
        scalar_argVld [17][1][5] = 1;
        scalar_argAckdone [17][1][5] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][1][5] = intra_prediction_unit_default_value_hls_predColBuf_4_o_r;
    scalar_adr    [17][1][5] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 200) comb block-----//
    //s = 18; r = 0; a = 19;
    if (scalar_rdat_vld_r[18][0][19]) begin
        scalar_argdone [18][0][19] = 1;
    end
    scalar_adr    [18][0][19] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][19]) begin
        scalar_argVld [18][0][19] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [18][0][19] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 200) comb block-----//
    //s = 18; r = 1; a = 5;
    if (scalar_argAck [18][1][5]) begin
        scalar_argVld [18][1][5] = 0;
        scalar_argAckdone [18][1][5] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_5_o_ap_vld_r) begin
        scalar_argVld [18][1][5] = 1;
        scalar_argAckdone [18][1][5] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][1][5] = intra_prediction_unit_default_value_hls_predColBuf_5_o_r;
    scalar_adr    [18][1][5] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 204) comb block-----//
    //s = 19; r = 1; a = 22;
    if (scalar_rdat_vld_r[19][1][22]) begin
        scalar_argdone [19][1][22] = 1;
    end
    scalar_adr    [19][1][22] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][22]) begin
        scalar_argVld [19][1][22] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [19][1][22] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 204) comb block-----//
    //s = 19; r = 1; a = 6;
    if (scalar_argAck [19][1][6]) begin
        scalar_argVld [19][1][6] = 0;
        scalar_argAckdone [19][1][6] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_6_o_ap_vld_r) begin
        scalar_argVld [19][1][6] = 1;
        scalar_argAckdone [19][1][6] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][1][6] = intra_prediction_unit_default_value_hls_predColBuf_6_o_r;
    scalar_adr    [19][1][6] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 208) comb block-----//
    //s = 20; r = 0; a = 21;
    if (scalar_rdat_vld_r[20][0][21]) begin
        scalar_argdone [20][0][21] = 1;
    end
    scalar_adr    [20][0][21] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][21]) begin
        scalar_argVld [20][0][21] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [20][0][21] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 208) comb block-----//
    //s = 20; r = 1; a = 8;
    if (scalar_argAck [20][1][8]) begin
        scalar_argVld [20][1][8] = 0;
        scalar_argAckdone [20][1][8] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_7_o_ap_vld_r) begin
        scalar_argVld [20][1][8] = 1;
        scalar_argAckdone [20][1][8] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][8] = intra_prediction_unit_default_value_hls_predColBuf_7_o_r;
    scalar_adr    [20][1][8] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 212) comb block-----//
    //s = 21; r = 0; a = 20;
    if (scalar_rdat_vld_r[21][0][20]) begin
        scalar_argdone [21][0][20] = 1;
    end
    scalar_adr    [21][0][20] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][20]) begin
        scalar_argVld [21][0][20] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [21][0][20] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 212) comb block-----//
    //s = 21; r = 0; a = 9;
    if (scalar_argAck [21][0][9]) begin
        scalar_argVld [21][0][9] = 0;
        scalar_argAckdone [21][0][9] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_8_o_ap_vld_r) begin
        scalar_argVld [21][0][9] = 1;
        scalar_argAckdone [21][0][9] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][9] = intra_prediction_unit_default_value_hls_predColBuf_8_o_r;
    scalar_adr    [21][0][9] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 216) comb block-----//
    //s = 22; r = 0; a = 30;
    if (scalar_rdat_vld_r[22][0][30]) begin
        scalar_argdone [22][0][30] = 1;
    end
    scalar_adr    [22][0][30] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][30]) begin
        scalar_argVld [22][0][30] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [22][0][30] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 216) comb block-----//
    //s = 22; r = 0; a = 9;
    if (scalar_argAck [22][0][9]) begin
        scalar_argVld [22][0][9] = 0;
        scalar_argAckdone [22][0][9] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_9_o_ap_vld_r) begin
        scalar_argVld [22][0][9] = 1;
        scalar_argAckdone [22][0][9] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][9] = intra_prediction_unit_default_value_hls_predColBuf_9_o_r;
    scalar_adr    [22][0][9] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 220) comb block-----//
    //s = 23; r = 0; a = 29;
    if (scalar_rdat_vld_r[23][0][29]) begin
        scalar_argdone [23][0][29] = 1;
    end
    scalar_adr    [23][0][29] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][29]) begin
        scalar_argVld [23][0][29] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [23][0][29] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 220) comb block-----//
    //s = 23; r = 0; a = 7;
    if (scalar_argAck [23][0][7]) begin
        scalar_argVld [23][0][7] = 0;
        scalar_argAckdone [23][0][7] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_10_o_ap_vld_r) begin
        scalar_argVld [23][0][7] = 1;
        scalar_argAckdone [23][0][7] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][7] = intra_prediction_unit_default_value_hls_predColBuf_10_o_r;
    scalar_adr    [23][0][7] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 224) comb block-----//
    //s = 24; r = 0; a = 24;
    if (scalar_rdat_vld_r[24][0][24]) begin
        scalar_argdone [24][0][24] = 1;
    end
    scalar_adr    [24][0][24] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][24]) begin
        scalar_argVld [24][0][24] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [24][0][24] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 224) comb block-----//
    //s = 24; r = 0; a = 5;
    if (scalar_argAck [24][0][5]) begin
        scalar_argVld [24][0][5] = 0;
        scalar_argAckdone [24][0][5] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_11_o_ap_vld_r) begin
        scalar_argVld [24][0][5] = 1;
        scalar_argAckdone [24][0][5] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][0][5] = intra_prediction_unit_default_value_hls_predColBuf_11_o_r;
    scalar_adr    [24][0][5] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 228) comb block-----//
    //s = 25; r = 0; a = 22;
    if (scalar_rdat_vld_r[25][0][22]) begin
        scalar_argdone [25][0][22] = 1;
    end
    scalar_adr    [25][0][22] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][22]) begin
        scalar_argVld [25][0][22] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [25][0][22] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 228) comb block-----//
    //s = 25; r = 0; a = 5;
    if (scalar_argAck [25][0][5]) begin
        scalar_argVld [25][0][5] = 0;
        scalar_argAckdone [25][0][5] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_12_o_ap_vld_r) begin
        scalar_argVld [25][0][5] = 1;
        scalar_argAckdone [25][0][5] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][0][5] = intra_prediction_unit_default_value_hls_predColBuf_12_o_r;
    scalar_adr    [25][0][5] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 232) comb block-----//
    //s = 26; r = 1; a = 28;
    if (scalar_rdat_vld_r[26][1][28]) begin
        scalar_argdone [26][1][28] = 1;
    end
    scalar_adr    [26][1][28] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][28]) begin
        scalar_argVld [26][1][28] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [26][1][28] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 232) comb block-----//
    //s = 26; r = 0; a = 5;
    if (scalar_argAck [26][0][5]) begin
        scalar_argVld [26][0][5] = 0;
        scalar_argAckdone [26][0][5] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_13_o_ap_vld_r) begin
        scalar_argVld [26][0][5] = 1;
        scalar_argAckdone [26][0][5] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][0][5] = intra_prediction_unit_default_value_hls_predColBuf_13_o_r;
    scalar_adr    [26][0][5] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 236) comb block-----//
    //s = 27; r = 0; a = 24;
    if (scalar_rdat_vld_r[27][0][24]) begin
        scalar_argdone [27][0][24] = 1;
    end
    scalar_adr    [27][0][24] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][24]) begin
        scalar_argVld [27][0][24] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [27][0][24] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 236) comb block-----//
    //s = 27; r = 1; a = 10;
    if (scalar_argAck [27][1][10]) begin
        scalar_argVld [27][1][10] = 0;
        scalar_argAckdone [27][1][10] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_14_o_ap_vld_r) begin
        scalar_argVld [27][1][10] = 1;
        scalar_argAckdone [27][1][10] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][1][10] = intra_prediction_unit_default_value_hls_predColBuf_14_o_r;
    scalar_adr    [27][1][10] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 240) comb block-----//
    //s = 28; r = 0; a = 25;
    if (scalar_rdat_vld_r[28][0][25]) begin
        scalar_argdone [28][0][25] = 1;
    end
    scalar_adr    [28][0][25] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][25]) begin
        scalar_argVld [28][0][25] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [28][0][25] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 240) comb block-----//
    //s = 28; r = 1; a = 5;
    if (scalar_argAck [28][1][5]) begin
        scalar_argVld [28][1][5] = 0;
        scalar_argAckdone [28][1][5] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_15_o_ap_vld_r) begin
        scalar_argVld [28][1][5] = 1;
        scalar_argAckdone [28][1][5] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][1][5] = intra_prediction_unit_default_value_hls_predColBuf_15_o_r;
    scalar_adr    [28][1][5] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 244) comb block-----//
    //s = 29; r = 1; a = 32;
    if (scalar_rdat_vld_r[29][1][32]) begin
        scalar_argdone [29][1][32] = 1;
    end
    scalar_adr    [29][1][32] = {ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][32]) begin
        scalar_argVld [29][1][32] = 0;
    end
    if (ap_arb_reload_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argVld [29][1][32] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 244) comb block-----//
    //s = 29; r = 0; a = 12;
    if (scalar_argAck [29][0][12]) begin
        scalar_argVld [29][0][12] = 0;
        scalar_argAckdone [29][0][12] = 1;
    end
    if (intra_prediction_unit_default_value_hls_predColBuf_16_o_ap_vld_r) begin
        scalar_argVld [29][0][12] = 1;
        scalar_argAckdone [29][0][12] = 0;
        ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION] = ap_part[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][12] = intra_prediction_unit_default_value_hls_predColBuf_16_o_r;
    scalar_adr    [29][0][12] = {ap_part_w[intra_prediction_unit_default_value_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    intra_prediction_unit_default_value_hls_ready = array_argRdy[0][94]& array_argRdy[0][253]& array_argRdy[0][95]& array_argRdy[0][254] & ~ap_arb_reload_running_r[intra_prediction_unit_default_value_hls];
    array_ap_ce[0][94] = ap_ce[intra_prediction_unit_default_value_hls];
    array_ap_ce[0][253] = ap_ce[intra_prediction_unit_default_value_hls];
    array_ap_ce[0][95] = ap_ce[intra_prediction_unit_default_value_hls];
    array_ap_ce[0][254] = ap_ce[intra_prediction_unit_default_value_hls];

    if (ap_arb_ret[intra_prediction_unit_default_value_hls] & ~ap_arb_ret_r[intra_prediction_unit_default_value_hls]) begin
        ap_arb_ret_running[intra_prediction_unit_default_value_hls] = 1;
        intra_prediction_unit_default_value_hls_ready = 0;
    end

    scalar_argAckdone_all[intra_prediction_unit_default_value_hls] = scalar_argAckdone[13][0][9] &
                                                scalar_argAckdone[14][1][10] &
                                                scalar_argAckdone[15][1][8] &
                                                scalar_argAckdone[16][0][5] &
                                                scalar_argAckdone[17][1][5] &
                                                scalar_argAckdone[18][1][5] &
                                                scalar_argAckdone[19][1][6] &
                                                scalar_argAckdone[20][1][8] &
                                                scalar_argAckdone[21][0][9] &
                                                scalar_argAckdone[22][0][9] &
                                                scalar_argAckdone[23][0][7] &
                                                scalar_argAckdone[24][0][5] &
                                                scalar_argAckdone[25][0][5] &
                                                scalar_argAckdone[26][0][5] &
                                                scalar_argAckdone[27][1][10] &
                                                scalar_argAckdone[28][1][5] &
                                                scalar_argAckdone[29][0][12];
    if (ap_arb_ret_running[intra_prediction_unit_default_value_hls] & scalar_argAckdone_all[intra_prediction_unit_default_value_hls] &~ ap_arb_reload_running_r[intra_prediction_unit_default_value_hls]) begin
        ap_arb_reload[intra_prediction_unit_default_value_hls] = 1;
        ap_arb_reload_running[intra_prediction_unit_default_value_hls] = 1;
    end

    if (ap_arb_start[intra_prediction_unit_default_value_hls] &~ ap_arb_start_r[intra_prediction_unit_default_value_hls]) begin
        ap_arb_start_running[intra_prediction_unit_default_value_hls] = 1;
    end

    if (ap_arb_start_running[intra_prediction_unit_default_value_hls] & ~scalar_writing_560& ~scalar_writing_180& ~scalar_writing_184& ~scalar_writing_188& ~scalar_writing_192& ~scalar_writing_196& ~scalar_writing_200& ~scalar_writing_204& ~scalar_writing_208& ~scalar_writing_212& ~scalar_writing_216& ~scalar_writing_220& ~scalar_writing_224& ~scalar_writing_228& ~scalar_writing_232& ~scalar_writing_236& ~scalar_writing_240& ~scalar_writing_244) begin
        ap_arb_start_running[intra_prediction_unit_default_value_hls] = 0;
        ap_arb_reload[intra_prediction_unit_default_value_hls] = 1;
    end

    scalar_argdone_all[intra_prediction_unit_default_value_hls] = scalar_argdone[12][1][29] &
                                                                scalar_argdone[29][0][32] &
                                                                scalar_argdone[3][0][20] &
                                                                scalar_argdone[11][0][31] &
                                                                scalar_argdone[13][1][27] &
                                                                scalar_argdone[14][1][28] &
                                                                scalar_argdone[15][1][25] &
                                                                scalar_argdone[16][0][20] &
                                                                scalar_argdone[17][1][20] &
                                                                scalar_argdone[18][0][19] &
                                                                scalar_argdone[19][1][22] &
                                                                scalar_argdone[20][0][21] &
                                                                scalar_argdone[21][0][20] &
                                                                scalar_argdone[22][0][30] &
                                                                scalar_argdone[23][0][29] &
                                                                scalar_argdone[24][0][24] &
                                                                scalar_argdone[25][0][22] &
                                                                scalar_argdone[26][1][28] &
                                                                scalar_argdone[27][0][24] &
                                                                scalar_argdone[28][0][25] &
                                                                scalar_argdone[29][1][32];

    if (scalar_argdone_all_r[intra_prediction_unit_default_value_hls]) begin
        scalar_argdone[12][1][29] = 0;
        scalar_argdone[29][0][32] = 0;
        scalar_argdone[3][0][20] = 0;
        scalar_argdone[11][0][31] = 0;
        scalar_argdone[13][1][27] = 0;
        scalar_argdone[14][1][28] = 0;
        scalar_argdone[15][1][25] = 0;
        scalar_argdone[16][0][20] = 0;
        scalar_argdone[17][1][20] = 0;
        scalar_argdone[18][0][19] = 0;
        scalar_argdone[19][1][22] = 0;
        scalar_argdone[20][0][21] = 0;
        scalar_argdone[21][0][20] = 0;
        scalar_argdone[22][0][30] = 0;
        scalar_argdone[23][0][29] = 0;
        scalar_argdone[24][0][24] = 0;
        scalar_argdone[25][0][22] = 0;
        scalar_argdone[26][1][28] = 0;
        scalar_argdone[27][0][24] = 0;
        scalar_argdone[28][0][25] = 0;
        scalar_argdone[29][1][32] = 0;

        if (ap_arb_start_r[intra_prediction_unit_default_value_hls] & ~ap_running_r[intra_prediction_unit_default_value_hls]) begin
            ap_start[intra_prediction_unit_default_value_hls] = 1;
            ap_running[intra_prediction_unit_default_value_hls] = 1;
        end
        else if (ap_arb_ret_running_r[intra_prediction_unit_default_value_hls]) begin
            ap_arb_ret_running[intra_prediction_unit_default_value_hls] = 0;
            ap_arb_reload_running[intra_prediction_unit_default_value_hls] = 0;
        end
    end

    if (ap_start_r[intra_prediction_unit_default_value_hls] & ap_ready_r[intra_prediction_unit_default_value_hls]) begin
        ap_start[intra_prediction_unit_default_value_hls] = 0;
    end

    if (ap_done_r[intra_prediction_unit_default_value_hls]) begin
        ap_running[intra_prediction_unit_default_value_hls] = 0;
    end
`endif
    //============================================================
    //z_scan_block_avail_hls       (f = 34)
    //============================================================
`ifdef enable_connect_z_scan_block_avail_hls
    //------READ (scalar, global adr = 404) comb block-----//
    //s = 5; r = 0; a = 33;
    if (scalar_rdat_vld_r[5][0][33]) begin
        scalar_argdone [5][0][33] = 1;
    end
    scalar_adr[5][0][33] = {ap_part[z_scan_block_avail_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][33]) begin
        scalar_argVld[5][0][33] = 0;
    end
    if (ap_arb_reload_r[z_scan_block_avail_hls]) begin
        scalar_argVld[5][0][33] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 0; a = 33;
    if (scalar_rdat_vld_r[26][0][33]) begin
        scalar_argdone [26][0][33] = 1;
    end
    scalar_adr[26][0][33] = {ap_part[z_scan_block_avail_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][33]) begin
        scalar_argVld[26][0][33] = 0;
    end
    if (ap_arb_reload_r[z_scan_block_avail_hls]) begin
        scalar_argVld[26][0][33] = 1;
    end

    //------READ (scalar, global adr = 376) comb block-----//
    //s = 30; r = 0; a = 19;
    if (scalar_rdat_vld_r[30][0][19]) begin
        scalar_argdone [30][0][19] = 1;
    end
    scalar_adr[30][0][19] = {ap_part[z_scan_block_avail_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][19]) begin
        scalar_argVld[30][0][19] = 0;
    end
    if (ap_arb_reload_r[z_scan_block_avail_hls]) begin
        scalar_argVld[30][0][19] = 1;
    end

    //------READ (scalar, global adr = 552) comb block-----//
    //s = 10; r = 0; a = 30;
    if (scalar_rdat_vld_r[10][0][30]) begin
        scalar_argdone [10][0][30] = 1;
    end
    scalar_adr[10][0][30] = {ap_part[z_scan_block_avail_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][30]) begin
        scalar_argVld[10][0][30] = 0;
    end
    if (ap_arb_reload_r[z_scan_block_avail_hls]) begin
        scalar_argVld[10][0][30] = 1;
    end

    //------READ (scalar, global adr = 556) comb block-----//
    //s = 11; r = 1; a = 39;
    if (scalar_rdat_vld_r[11][1][39]) begin
        scalar_argdone [11][1][39] = 1;
    end
    scalar_adr[11][1][39] = {ap_part[z_scan_block_avail_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][39]) begin
        scalar_argVld[11][1][39] = 0;
    end
    if (ap_arb_reload_r[z_scan_block_avail_hls]) begin
        scalar_argVld[11][1][39] = 1;
    end

    //------WRITE (array range, global adr = 286188, width=32, addr_width=32) -----//
    //s = 0; a = 159;
    array_argVld [0][159] = z_scan_block_avail_hls_min_tb_addr_zs_EN_A & (z_scan_block_avail_hls_min_tb_addr_zs_WEN_A != 0);
    array_adr    [0][159] = z_scan_block_avail_hls_min_tb_addr_zs_Addr_A;
    array_wdat   [0][159] = z_scan_block_avail_hls_min_tb_addr_zs_Din_A;

    //------READ (array range, global adr = 286188, width=32, addr_width=32) -----//
    //s = 0; a = 318;
    z_scan_block_avail_hls_min_tb_addr_zs_Dout_A = array_rdat  [0][318];
    //found a write signal pair
    array_argVld [0][318] = z_scan_block_avail_hls_min_tb_addr_zs_EN_A & (z_scan_block_avail_hls_min_tb_addr_zs_WEN_A == 0);
    array_adr    [0][318] = z_scan_block_avail_hls_min_tb_addr_zs_Addr_A;

    z_scan_block_avail_hls_ready = array_argRdy[0][159]& array_argRdy[0][318] & ~ap_arb_reload_running_r[z_scan_block_avail_hls];
    array_ap_ce[0][159] = ap_ce[z_scan_block_avail_hls];
    array_ap_ce[0][318] = ap_ce[z_scan_block_avail_hls];

    if (ap_arb_ret[z_scan_block_avail_hls] & ~ap_arb_ret_r[z_scan_block_avail_hls]) begin
        ap_arb_ret_running[z_scan_block_avail_hls] = 1;
        z_scan_block_avail_hls_ready = 0;
    end

    scalar_argAckdone_all[z_scan_block_avail_hls] = 1;
    if (ap_arb_ret_running[z_scan_block_avail_hls] & scalar_argAckdone_all[z_scan_block_avail_hls] &~ ap_arb_reload_running_r[z_scan_block_avail_hls]) begin
        ap_arb_reload[z_scan_block_avail_hls] = 1;
        ap_arb_reload_running[z_scan_block_avail_hls] = 1;
    end

    if (ap_arb_start[z_scan_block_avail_hls] &~ ap_arb_start_r[z_scan_block_avail_hls]) begin
        ap_arb_start_running[z_scan_block_avail_hls] = 1;
    end

    if (ap_arb_start_running[z_scan_block_avail_hls] & ~scalar_writing_552& ~scalar_writing_556) begin
        ap_arb_start_running[z_scan_block_avail_hls] = 0;
        ap_arb_reload[z_scan_block_avail_hls] = 1;
    end

    scalar_argdone_all[z_scan_block_avail_hls] = scalar_argdone[5][0][33] &
                                                                scalar_argdone[26][0][33] &
                                                                scalar_argdone[30][0][19] &
                                                                scalar_argdone[10][0][30] &
                                                                scalar_argdone[11][1][39];

    if (scalar_argdone_all_r[z_scan_block_avail_hls]) begin
        scalar_argdone[5][0][33] = 0;
        scalar_argdone[26][0][33] = 0;
        scalar_argdone[30][0][19] = 0;
        scalar_argdone[10][0][30] = 0;
        scalar_argdone[11][1][39] = 0;

        if (ap_arb_start_r[z_scan_block_avail_hls] & ~ap_running_r[z_scan_block_avail_hls]) begin
            ap_start[z_scan_block_avail_hls] = 1;
            ap_running[z_scan_block_avail_hls] = 1;
        end
        else if (ap_arb_ret_running_r[z_scan_block_avail_hls]) begin
            ap_arb_ret_running[z_scan_block_avail_hls] = 0;
            ap_arb_reload_running[z_scan_block_avail_hls] = 0;
        end
    end

    if (ap_start_r[z_scan_block_avail_hls] & ap_ready_r[z_scan_block_avail_hls]) begin
        ap_start[z_scan_block_avail_hls] = 0;
    end

    if (ap_done_r[z_scan_block_avail_hls]) begin
        ap_running[z_scan_block_avail_hls] = 0;
    end
`endif
    //============================================================
    //luma_mc_uni_libx265_hls       (f = 35)
    //============================================================
`ifdef enable_connect_luma_mc_uni_libx265_hls
    //------WRITE (array range, global adr = 286160, width=8, addr_width=32) -----//
    //s = 0; a = 97;
    array_argVld [0][97] = luma_mc_uni_libx265_hls_xcache_null_base_EN_A & (luma_mc_uni_libx265_hls_xcache_null_base_WEN_A != 0);
    array_adr    [0][97] = luma_mc_uni_libx265_hls_xcache_null_base_Addr_A;
    array_wdat   [0][97] = luma_mc_uni_libx265_hls_xcache_null_base_Din_A;

    //------READ (array range, global adr = 286160, width=8, addr_width=32) -----//
    //s = 0; a = 256;
    luma_mc_uni_libx265_hls_xcache_null_base_Dout_A = array_rdat  [0][256];
    //found a write signal pair
    array_argVld [0][256] = luma_mc_uni_libx265_hls_xcache_null_base_EN_A & (luma_mc_uni_libx265_hls_xcache_null_base_WEN_A == 0);
    array_adr    [0][256] = luma_mc_uni_libx265_hls_xcache_null_base_Addr_A;

    //------READ (scalar, complete partition, global adr = 1556) comb block-----//
    //s = 5; r = 1; a = 27;
    if (scalar_rdat_vld_r[5][1][27]) begin
        scalar_argdone [5][1][27] = 1;
    end
    scalar_adr    [5][1][27] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][27]) begin
        scalar_argVld [5][1][27] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld [5][1][27] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1560) comb block-----//
    //s = 6; r = 0; a = 35;
    if (scalar_rdat_vld_r[6][0][35]) begin
        scalar_argdone [6][0][35] = 1;
    end
    scalar_adr    [6][0][35] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][35]) begin
        scalar_argVld [6][0][35] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld [6][0][35] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1564) comb block-----//
    //s = 7; r = 0; a = 23;
    if (scalar_rdat_vld_r[7][0][23]) begin
        scalar_argdone [7][0][23] = 1;
    end
    scalar_adr    [7][0][23] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][23]) begin
        scalar_argVld [7][0][23] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld [7][0][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1568) comb block-----//
    //s = 8; r = 0; a = 28;
    if (scalar_rdat_vld_r[8][0][28]) begin
        scalar_argdone [8][0][28] = 1;
    end
    scalar_adr    [8][0][28] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][28]) begin
        scalar_argVld [8][0][28] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld [8][0][28] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1572) comb block-----//
    //s = 9; r = 1; a = 27;
    if (scalar_rdat_vld_r[9][1][27]) begin
        scalar_argdone [9][1][27] = 1;
    end
    scalar_adr    [9][1][27] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][27]) begin
        scalar_argVld [9][1][27] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld [9][1][27] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1576) comb block-----//
    //s = 10; r = 0; a = 24;
    if (scalar_rdat_vld_r[10][0][24]) begin
        scalar_argdone [10][0][24] = 1;
    end
    scalar_adr    [10][0][24] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][24]) begin
        scalar_argVld [10][0][24] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld [10][0][24] = 1;
    end

    //------WRITE (array range, global adr = 284944, width=32, addr_width=32) -----//
    //s = 0; a = 98;
    array_argVld [0][98] = luma_mc_uni_libx265_hls_refPicList_frame_data_EN_A & (luma_mc_uni_libx265_hls_refPicList_frame_data_WEN_A != 0);
    array_adr    [0][98] = luma_mc_uni_libx265_hls_refPicList_frame_data_Addr_A;
    array_wdat   [0][98] = luma_mc_uni_libx265_hls_refPicList_frame_data_Din_A;

    //------READ (array range, global adr = 284944, width=32, addr_width=32) -----//
    //s = 0; a = 257;
    luma_mc_uni_libx265_hls_refPicList_frame_data_Dout_A = array_rdat  [0][257];
    //found a write signal pair
    array_argVld [0][257] = luma_mc_uni_libx265_hls_refPicList_frame_data_EN_A & (luma_mc_uni_libx265_hls_refPicList_frame_data_WEN_A == 0);
    array_adr    [0][257] = luma_mc_uni_libx265_hls_refPicList_frame_data_Addr_A;

    //------WRITE (array range, global adr = 285328, width=32, addr_width=32) -----//
    //s = 0; a = 99;
    array_argVld [0][99] = luma_mc_uni_libx265_hls_refPicList_frame_linesize_EN_A & (luma_mc_uni_libx265_hls_refPicList_frame_linesize_WEN_A != 0);
    array_adr    [0][99] = luma_mc_uni_libx265_hls_refPicList_frame_linesize_Addr_A;
    array_wdat   [0][99] = luma_mc_uni_libx265_hls_refPicList_frame_linesize_Din_A;

    //------READ (array range, global adr = 285328, width=32, addr_width=32) -----//
    //s = 0; a = 258;
    luma_mc_uni_libx265_hls_refPicList_frame_linesize_Dout_A = array_rdat  [0][258];
    //found a write signal pair
    array_argVld [0][258] = luma_mc_uni_libx265_hls_refPicList_frame_linesize_EN_A & (luma_mc_uni_libx265_hls_refPicList_frame_linesize_WEN_A == 0);
    array_adr    [0][258] = luma_mc_uni_libx265_hls_refPicList_frame_linesize_Addr_A;

    //------READ (scalar, global adr = 784) comb block-----//
    //s = 4; r = 0; a = 18;
    if (scalar_rdat_vld_r[4][0][18]) begin
        scalar_argdone [4][0][18] = 1;
    end
    scalar_adr[4][0][18] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][18]) begin
        scalar_argVld[4][0][18] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[4][0][18] = 1;
    end

    //------READ (scalar, global adr = 788) comb block-----//
    //s = 5; r = 0; a = 29;
    if (scalar_rdat_vld_r[5][0][29]) begin
        scalar_argdone [5][0][29] = 1;
    end
    scalar_adr[5][0][29] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][29]) begin
        scalar_argVld[5][0][29] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[5][0][29] = 1;
    end

    //------READ (scalar, global adr = 792) comb block-----//
    //s = 6; r = 1; a = 34;
    if (scalar_rdat_vld_r[6][1][34]) begin
        scalar_argdone [6][1][34] = 1;
    end
    scalar_adr[6][1][34] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][34]) begin
        scalar_argVld[6][1][34] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[6][1][34] = 1;
    end

    //------READ (scalar, global adr = 796) comb block-----//
    //s = 7; r = 1; a = 22;
    if (scalar_rdat_vld_r[7][1][22]) begin
        scalar_argdone [7][1][22] = 1;
    end
    scalar_adr[7][1][22] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][22]) begin
        scalar_argVld[7][1][22] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[7][1][22] = 1;
    end

    //------READ (scalar, global adr = 800) comb block-----//
    //s = 8; r = 1; a = 28;
    if (scalar_rdat_vld_r[8][1][28]) begin
        scalar_argdone [8][1][28] = 1;
    end
    scalar_adr[8][1][28] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][28]) begin
        scalar_argVld[8][1][28] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[8][1][28] = 1;
    end

    //------READ (scalar, global adr = 804) comb block-----//
    //s = 9; r = 0; a = 28;
    if (scalar_rdat_vld_r[9][0][28]) begin
        scalar_argdone [9][0][28] = 1;
    end
    scalar_adr[9][0][28] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][28]) begin
        scalar_argVld[9][0][28] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[9][0][28] = 1;
    end

    //------READ (scalar, global adr = 808) comb block-----//
    //s = 10; r = 1; a = 24;
    if (scalar_rdat_vld_r[10][1][24]) begin
        scalar_argdone [10][1][24] = 1;
    end
    scalar_adr[10][1][24] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][24]) begin
        scalar_argVld[10][1][24] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[10][1][24] = 1;
    end

    //------READ (scalar, global adr = 812) comb block-----//
    //s = 11; r = 0; a = 32;
    if (scalar_rdat_vld_r[11][0][32]) begin
        scalar_argdone [11][0][32] = 1;
    end
    scalar_adr[11][0][32] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][32]) begin
        scalar_argVld[11][0][32] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[11][0][32] = 1;
    end

    //------READ (scalar, global adr = 816) comb block-----//
    //s = 12; r = 0; a = 31;
    if (scalar_rdat_vld_r[12][0][31]) begin
        scalar_argdone [12][0][31] = 1;
    end
    scalar_adr[12][0][31] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][31]) begin
        scalar_argVld[12][0][31] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[12][0][31] = 1;
    end

    //------READ (scalar, global adr = 728) comb block-----//
    //s = 22; r = 1; a = 29;
    if (scalar_rdat_vld_r[22][1][29]) begin
        scalar_argdone [22][1][29] = 1;
    end
    scalar_adr[22][1][29] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][29]) begin
        scalar_argVld[22][1][29] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[22][1][29] = 1;
    end

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 1; a = 21;
    if (scalar_rdat_vld_r[17][1][21]) begin
        scalar_argdone [17][1][21] = 1;
    end
    scalar_adr[17][1][21] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][21]) begin
        scalar_argVld[17][1][21] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[17][1][21] = 1;
    end

    //------READ (scalar, global adr = 1532) comb block-----//
    //s = 31; r = 0; a = 35;
    if (scalar_rdat_vld_r[31][0][35]) begin
        scalar_argdone [31][0][35] = 1;
    end
    scalar_adr[31][0][35] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][35]) begin
        scalar_argVld[31][0][35] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[31][0][35] = 1;
    end

    //------READ (scalar, global adr = 1536) comb block-----//
    //s = 0; r = 1; a = 33;
    if (scalar_rdat_vld_r[0][1][33]) begin
        scalar_argdone [0][1][33] = 1;
    end
    scalar_adr[0][1][33] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][33]) begin
        scalar_argVld[0][1][33] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[0][1][33] = 1;
    end

    //------READ (scalar, global adr = 1144) comb block-----//
    //s = 30; r = 0; a = 17;
    if (scalar_rdat_vld_r[30][0][17]) begin
        scalar_argdone [30][0][17] = 1;
    end
    scalar_adr[30][0][17] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][17]) begin
        scalar_argVld[30][0][17] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[30][0][17] = 1;
    end

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 0; a = 36;
    if (scalar_rdat_vld_r[6][0][36]) begin
        scalar_argdone [6][0][36] = 1;
    end
    scalar_adr[6][0][36] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][36]) begin
        scalar_argVld[6][0][36] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[6][0][36] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 0; a = 23;
    if (scalar_rdat_vld_r[19][0][23]) begin
        scalar_argdone [19][0][23] = 1;
    end
    scalar_adr[19][0][23] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][23]) begin
        scalar_argVld[19][0][23] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[19][0][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 1; a = 21;
    if (scalar_rdat_vld_r[20][1][21]) begin
        scalar_argdone [20][1][21] = 1;
    end
    scalar_adr    [20][1][21] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][21]) begin
        scalar_argVld [20][1][21] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld [20][1][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 0; a = 21;
    if (scalar_rdat_vld_r[21][0][21]) begin
        scalar_argdone [21][0][21] = 1;
    end
    scalar_adr    [21][0][21] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][21]) begin
        scalar_argVld [21][0][21] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld [21][0][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 0; a = 31;
    if (scalar_rdat_vld_r[22][0][31]) begin
        scalar_argdone [22][0][31] = 1;
    end
    scalar_adr    [22][0][31] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][31]) begin
        scalar_argVld [22][0][31] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld [22][0][31] = 1;
    end

    //------READ (scalar, complete partition, global adr = 348) comb block-----//
    //s = 23; r = 0; a = 30;
    if (scalar_rdat_vld_r[23][0][30]) begin
        scalar_argdone [23][0][30] = 1;
    end
    scalar_adr    [23][0][30] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][30]) begin
        scalar_argVld [23][0][30] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld [23][0][30] = 1;
    end

    //------READ (scalar, complete partition, global adr = 352) comb block-----//
    //s = 24; r = 0; a = 25;
    if (scalar_rdat_vld_r[24][0][25]) begin
        scalar_argdone [24][0][25] = 1;
    end
    scalar_adr    [24][0][25] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][25]) begin
        scalar_argVld [24][0][25] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld [24][0][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 356) comb block-----//
    //s = 25; r = 1; a = 21;
    if (scalar_rdat_vld_r[25][1][21]) begin
        scalar_argdone [25][1][21] = 1;
    end
    scalar_adr    [25][1][21] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][21]) begin
        scalar_argVld [25][1][21] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld [25][1][21] = 1;
    end

    //------READ (scalar, global adr = 1524) comb block-----//
    //s = 29; r = 1; a = 33;
    if (scalar_rdat_vld_r[29][1][33]) begin
        scalar_argdone [29][1][33] = 1;
    end
    scalar_adr[29][1][33] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][33]) begin
        scalar_argVld[29][1][33] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[29][1][33] = 1;
    end

    //------READ (scalar, global adr = 1516) comb block-----//
    //s = 27; r = 1; a = 23;
    if (scalar_rdat_vld_r[27][1][23]) begin
        scalar_argdone [27][1][23] = 1;
    end
    scalar_adr[27][1][23] = {ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][23]) begin
        scalar_argVld[27][1][23] = 0;
    end
    if (ap_arb_reload_r[luma_mc_uni_libx265_hls]) begin
        scalar_argVld[27][1][23] = 1;
    end

    //------WRITE (array range, global adr = 285712, width=8, addr_width=32) -----//
    //s = 0; a = 100;
    array_argVld [0][100] = luma_mc_uni_libx265_hls_luma_weight_l0_flag_EN_A & (luma_mc_uni_libx265_hls_luma_weight_l0_flag_WEN_A != 0);
    array_adr    [0][100] = luma_mc_uni_libx265_hls_luma_weight_l0_flag_Addr_A;
    array_wdat   [0][100] = luma_mc_uni_libx265_hls_luma_weight_l0_flag_Din_A;

    //------READ (array range, global adr = 285712, width=8, addr_width=32) -----//
    //s = 0; a = 259;
    luma_mc_uni_libx265_hls_luma_weight_l0_flag_Dout_A = array_rdat  [0][259];
    //found a write signal pair
    array_argVld [0][259] = luma_mc_uni_libx265_hls_luma_weight_l0_flag_EN_A & (luma_mc_uni_libx265_hls_luma_weight_l0_flag_WEN_A == 0);
    array_adr    [0][259] = luma_mc_uni_libx265_hls_luma_weight_l0_flag_Addr_A;

    //------WRITE (array range, global adr = 285728, width=8, addr_width=32) -----//
    //s = 0; a = 101;
    array_argVld [0][101] = luma_mc_uni_libx265_hls_luma_weight_l1_flag_EN_A & (luma_mc_uni_libx265_hls_luma_weight_l1_flag_WEN_A != 0);
    array_adr    [0][101] = luma_mc_uni_libx265_hls_luma_weight_l1_flag_Addr_A;
    array_wdat   [0][101] = luma_mc_uni_libx265_hls_luma_weight_l1_flag_Din_A;

    //------READ (array range, global adr = 285728, width=8, addr_width=32) -----//
    //s = 0; a = 260;
    luma_mc_uni_libx265_hls_luma_weight_l1_flag_Dout_A = array_rdat  [0][260];
    //found a write signal pair
    array_argVld [0][260] = luma_mc_uni_libx265_hls_luma_weight_l1_flag_EN_A & (luma_mc_uni_libx265_hls_luma_weight_l1_flag_WEN_A == 0);
    array_adr    [0][260] = luma_mc_uni_libx265_hls_luma_weight_l1_flag_Addr_A;

    //------WRITE (array range, global adr = 285744, width=16, addr_width=32) -----//
    //s = 0; a = 102;
    array_argVld [0][102] = luma_mc_uni_libx265_hls_luma_weight_l0_EN_A & (luma_mc_uni_libx265_hls_luma_weight_l0_WEN_A != 0);
    array_adr    [0][102] = luma_mc_uni_libx265_hls_luma_weight_l0_Addr_A;
    array_wdat   [0][102] = luma_mc_uni_libx265_hls_luma_weight_l0_Din_A;

    //------READ (array range, global adr = 285744, width=16, addr_width=32) -----//
    //s = 0; a = 261;
    luma_mc_uni_libx265_hls_luma_weight_l0_Dout_A = array_rdat  [0][261];
    //found a write signal pair
    array_argVld [0][261] = luma_mc_uni_libx265_hls_luma_weight_l0_EN_A & (luma_mc_uni_libx265_hls_luma_weight_l0_WEN_A == 0);
    array_adr    [0][261] = luma_mc_uni_libx265_hls_luma_weight_l0_Addr_A;

    //------WRITE (array range, global adr = 285776, width=16, addr_width=32) -----//
    //s = 0; a = 103;
    array_argVld [0][103] = luma_mc_uni_libx265_hls_luma_weight_l1_EN_A & (luma_mc_uni_libx265_hls_luma_weight_l1_WEN_A != 0);
    array_adr    [0][103] = luma_mc_uni_libx265_hls_luma_weight_l1_Addr_A;
    array_wdat   [0][103] = luma_mc_uni_libx265_hls_luma_weight_l1_Din_A;

    //------READ (array range, global adr = 285776, width=16, addr_width=32) -----//
    //s = 0; a = 262;
    luma_mc_uni_libx265_hls_luma_weight_l1_Dout_A = array_rdat  [0][262];
    //found a write signal pair
    array_argVld [0][262] = luma_mc_uni_libx265_hls_luma_weight_l1_EN_A & (luma_mc_uni_libx265_hls_luma_weight_l1_WEN_A == 0);
    array_adr    [0][262] = luma_mc_uni_libx265_hls_luma_weight_l1_Addr_A;

    //------WRITE (array range, global adr = 285808, width=16, addr_width=32) -----//
    //s = 0; a = 104;
    array_argVld [0][104] = luma_mc_uni_libx265_hls_luma_offset_l0_EN_A & (luma_mc_uni_libx265_hls_luma_offset_l0_WEN_A != 0);
    array_adr    [0][104] = luma_mc_uni_libx265_hls_luma_offset_l0_Addr_A;
    array_wdat   [0][104] = luma_mc_uni_libx265_hls_luma_offset_l0_Din_A;

    //------READ (array range, global adr = 285808, width=16, addr_width=32) -----//
    //s = 0; a = 263;
    luma_mc_uni_libx265_hls_luma_offset_l0_Dout_A = array_rdat  [0][263];
    //found a write signal pair
    array_argVld [0][263] = luma_mc_uni_libx265_hls_luma_offset_l0_EN_A & (luma_mc_uni_libx265_hls_luma_offset_l0_WEN_A == 0);
    array_adr    [0][263] = luma_mc_uni_libx265_hls_luma_offset_l0_Addr_A;

    //------WRITE (array range, global adr = 285840, width=16, addr_width=32) -----//
    //s = 0; a = 105;
    array_argVld [0][105] = luma_mc_uni_libx265_hls_luma_offset_l1_EN_A & (luma_mc_uni_libx265_hls_luma_offset_l1_WEN_A != 0);
    array_adr    [0][105] = luma_mc_uni_libx265_hls_luma_offset_l1_Addr_A;
    array_wdat   [0][105] = luma_mc_uni_libx265_hls_luma_offset_l1_Din_A;

    //------READ (array range, global adr = 285840, width=16, addr_width=32) -----//
    //s = 0; a = 264;
    luma_mc_uni_libx265_hls_luma_offset_l1_Dout_A = array_rdat  [0][264];
    //found a write signal pair
    array_argVld [0][264] = luma_mc_uni_libx265_hls_luma_offset_l1_EN_A & (luma_mc_uni_libx265_hls_luma_offset_l1_WEN_A == 0);
    array_adr    [0][264] = luma_mc_uni_libx265_hls_luma_offset_l1_Addr_A;

    //------WRITE (array range, global adr = 12304, width=32, addr_width=32) -----//
    //s = 0; a = 106;
    array_argVld [0][106] = luma_mc_uni_libx265_hls_edge_buffer_EN_A & (luma_mc_uni_libx265_hls_edge_buffer_WEN_A != 0);
    array_adr    [0][106] = luma_mc_uni_libx265_hls_edge_buffer_Addr_A;
    array_wdat   [0][106] = luma_mc_uni_libx265_hls_edge_buffer_Din_A;

    //------READ (array range, global adr = 12304, width=32, addr_width=32) -----//
    //s = 0; a = 265;
    luma_mc_uni_libx265_hls_edge_buffer_Dout_A = array_rdat  [0][265];
    //found a write signal pair
    array_argVld [0][265] = luma_mc_uni_libx265_hls_edge_buffer_EN_A & (luma_mc_uni_libx265_hls_edge_buffer_WEN_A == 0);
    array_adr    [0][265] = luma_mc_uni_libx265_hls_edge_buffer_Addr_A;

    //------WRITE (scalar, global adr = 1528) comb block-----//
    //s = 30; r = 0; a = 4;
    if (scalar_argAck [30][0][4]) begin
        scalar_argVld [30][0][4] = 0;
        scalar_argAckdone [30][0][4] = 1;
    end
    if (luma_mc_uni_libx265_hls_dst_depth_ap_vld_r) begin
        scalar_argVld [30][0][4] = 1;
        scalar_argAckdone [30][0][4] = 0;
        ap_part_w[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION] = ap_part[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [30][0][4] = luma_mc_uni_libx265_hls_dst_depth_r;
    scalar_adr    [30][0][4] = {ap_part_w[luma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    luma_mc_uni_libx265_hls_ready = array_argRdy[0][97]& array_argRdy[0][256]& array_argRdy[0][98]& array_argRdy[0][257]& array_argRdy[0][99]& array_argRdy[0][258]& array_argRdy[0][100]& array_argRdy[0][259]& array_argRdy[0][101]& array_argRdy[0][260]& array_argRdy[0][102]& array_argRdy[0][261]& array_argRdy[0][103]& array_argRdy[0][262]& array_argRdy[0][104]& array_argRdy[0][263]& array_argRdy[0][105]& array_argRdy[0][264]& array_argRdy[0][106]& array_argRdy[0][265] & ~ap_arb_reload_running_r[luma_mc_uni_libx265_hls];
    array_ap_ce[0][97] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][256] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][98] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][257] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][99] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][258] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][100] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][259] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][101] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][260] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][102] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][261] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][103] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][262] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][104] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][263] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][105] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][264] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][106] = ap_ce[luma_mc_uni_libx265_hls];
    array_ap_ce[0][265] = ap_ce[luma_mc_uni_libx265_hls];

    if (ap_arb_ret[luma_mc_uni_libx265_hls] & ~ap_arb_ret_r[luma_mc_uni_libx265_hls]) begin
        ap_arb_ret_running[luma_mc_uni_libx265_hls] = 1;
        luma_mc_uni_libx265_hls_ready = 0;
    end

    scalar_argAckdone_all[luma_mc_uni_libx265_hls] = scalar_argAckdone[30][0][4];
    if (ap_arb_ret_running[luma_mc_uni_libx265_hls] & scalar_argAckdone_all[luma_mc_uni_libx265_hls] &~ ap_arb_reload_running_r[luma_mc_uni_libx265_hls]) begin
        ap_arb_reload[luma_mc_uni_libx265_hls] = 1;
        ap_arb_reload_running[luma_mc_uni_libx265_hls] = 1;
    end

    if (ap_arb_start[luma_mc_uni_libx265_hls] &~ ap_arb_start_r[luma_mc_uni_libx265_hls]) begin
        ap_arb_start_running[luma_mc_uni_libx265_hls] = 1;
    end

    if (ap_arb_start_running[luma_mc_uni_libx265_hls] & ~scalar_writing_784& ~scalar_writing_788& ~scalar_writing_792& ~scalar_writing_796& ~scalar_writing_800& ~scalar_writing_804& ~scalar_writing_808& ~scalar_writing_812& ~scalar_writing_816) begin
        ap_arb_start_running[luma_mc_uni_libx265_hls] = 0;
        ap_arb_reload[luma_mc_uni_libx265_hls] = 1;
    end

    scalar_argdone_all[luma_mc_uni_libx265_hls] = scalar_argdone[5][1][27] &
                                                                scalar_argdone[6][0][35] &
                                                                scalar_argdone[7][0][23] &
                                                                scalar_argdone[8][0][28] &
                                                                scalar_argdone[9][1][27] &
                                                                scalar_argdone[10][0][24] &
                                                                scalar_argdone[4][0][18] &
                                                                scalar_argdone[5][0][29] &
                                                                scalar_argdone[6][1][34] &
                                                                scalar_argdone[7][1][22] &
                                                                scalar_argdone[8][1][28] &
                                                                scalar_argdone[9][0][28] &
                                                                scalar_argdone[10][1][24] &
                                                                scalar_argdone[11][0][32] &
                                                                scalar_argdone[12][0][31] &
                                                                scalar_argdone[22][1][29] &
                                                                scalar_argdone[17][1][21] &
                                                                scalar_argdone[31][0][35] &
                                                                scalar_argdone[0][1][33] &
                                                                scalar_argdone[30][0][17] &
                                                                scalar_argdone[6][0][36] &
                                                                scalar_argdone[19][0][23] &
                                                                scalar_argdone[20][1][21] &
                                                                scalar_argdone[21][0][21] &
                                                                scalar_argdone[22][0][31] &
                                                                scalar_argdone[23][0][30] &
                                                                scalar_argdone[24][0][25] &
                                                                scalar_argdone[25][1][21] &
                                                                scalar_argdone[29][1][33] &
                                                                scalar_argdone[27][1][23];

    if (scalar_argdone_all_r[luma_mc_uni_libx265_hls]) begin
        scalar_argdone[5][1][27] = 0;
        scalar_argdone[6][0][35] = 0;
        scalar_argdone[7][0][23] = 0;
        scalar_argdone[8][0][28] = 0;
        scalar_argdone[9][1][27] = 0;
        scalar_argdone[10][0][24] = 0;
        scalar_argdone[4][0][18] = 0;
        scalar_argdone[5][0][29] = 0;
        scalar_argdone[6][1][34] = 0;
        scalar_argdone[7][1][22] = 0;
        scalar_argdone[8][1][28] = 0;
        scalar_argdone[9][0][28] = 0;
        scalar_argdone[10][1][24] = 0;
        scalar_argdone[11][0][32] = 0;
        scalar_argdone[12][0][31] = 0;
        scalar_argdone[22][1][29] = 0;
        scalar_argdone[17][1][21] = 0;
        scalar_argdone[31][0][35] = 0;
        scalar_argdone[0][1][33] = 0;
        scalar_argdone[30][0][17] = 0;
        scalar_argdone[6][0][36] = 0;
        scalar_argdone[19][0][23] = 0;
        scalar_argdone[20][1][21] = 0;
        scalar_argdone[21][0][21] = 0;
        scalar_argdone[22][0][31] = 0;
        scalar_argdone[23][0][30] = 0;
        scalar_argdone[24][0][25] = 0;
        scalar_argdone[25][1][21] = 0;
        scalar_argdone[29][1][33] = 0;
        scalar_argdone[27][1][23] = 0;

        if (ap_arb_start_r[luma_mc_uni_libx265_hls] & ~ap_running_r[luma_mc_uni_libx265_hls]) begin
            ap_start[luma_mc_uni_libx265_hls] = 1;
            ap_running[luma_mc_uni_libx265_hls] = 1;
        end
        else if (ap_arb_ret_running_r[luma_mc_uni_libx265_hls]) begin
            ap_arb_ret_running[luma_mc_uni_libx265_hls] = 0;
            ap_arb_reload_running[luma_mc_uni_libx265_hls] = 0;
        end
    end

    if (ap_start_r[luma_mc_uni_libx265_hls] & ap_ready_r[luma_mc_uni_libx265_hls]) begin
        ap_start[luma_mc_uni_libx265_hls] = 0;
    end

    if (ap_done_r[luma_mc_uni_libx265_hls]) begin
        ap_running[luma_mc_uni_libx265_hls] = 0;
    end
`endif
    //============================================================
    //chroma_mc_uni_libx265_hls       (f = 36)
    //============================================================
`ifdef enable_connect_chroma_mc_uni_libx265_hls
    //------WRITE (array range, global adr = 286160, width=8, addr_width=32) -----//
    //s = 0; a = 2;
    array_argVld [0][2] = chroma_mc_uni_libx265_hls_xcache_null_base_EN_A & (chroma_mc_uni_libx265_hls_xcache_null_base_WEN_A != 0);
    array_adr    [0][2] = chroma_mc_uni_libx265_hls_xcache_null_base_Addr_A;
    array_wdat   [0][2] = chroma_mc_uni_libx265_hls_xcache_null_base_Din_A;

    //------READ (array range, global adr = 286160, width=8, addr_width=32) -----//
    //s = 0; a = 162;
    chroma_mc_uni_libx265_hls_xcache_null_base_Dout_A = array_rdat  [0][162];
    //found a write signal pair
    array_argVld [0][162] = chroma_mc_uni_libx265_hls_xcache_null_base_EN_A & (chroma_mc_uni_libx265_hls_xcache_null_base_WEN_A == 0);
    array_adr    [0][162] = chroma_mc_uni_libx265_hls_xcache_null_base_Addr_A;

    //------READ (scalar, complete partition, global adr = 1556) comb block-----//
    //s = 5; r = 0; a = 17;
    if (scalar_rdat_vld_r[5][0][17]) begin
        scalar_argdone [5][0][17] = 1;
    end
    scalar_adr    [5][0][17] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][17]) begin
        scalar_argVld [5][0][17] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld [5][0][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1560) comb block-----//
    //s = 6; r = 0; a = 16;
    if (scalar_rdat_vld_r[6][0][16]) begin
        scalar_argdone [6][0][16] = 1;
    end
    scalar_adr    [6][0][16] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][16]) begin
        scalar_argVld [6][0][16] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld [6][0][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1564) comb block-----//
    //s = 7; r = 0; a = 14;
    if (scalar_rdat_vld_r[7][0][14]) begin
        scalar_argdone [7][0][14] = 1;
    end
    scalar_adr    [7][0][14] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][14]) begin
        scalar_argVld [7][0][14] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld [7][0][14] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1568) comb block-----//
    //s = 8; r = 0; a = 16;
    if (scalar_rdat_vld_r[8][0][16]) begin
        scalar_argdone [8][0][16] = 1;
    end
    scalar_adr    [8][0][16] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][16]) begin
        scalar_argVld [8][0][16] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld [8][0][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1572) comb block-----//
    //s = 9; r = 1; a = 16;
    if (scalar_rdat_vld_r[9][1][16]) begin
        scalar_argdone [9][1][16] = 1;
    end
    scalar_adr    [9][1][16] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][16]) begin
        scalar_argVld [9][1][16] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld [9][1][16] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1576) comb block-----//
    //s = 10; r = 0; a = 13;
    if (scalar_rdat_vld_r[10][0][13]) begin
        scalar_argdone [10][0][13] = 1;
    end
    scalar_adr    [10][0][13] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][13]) begin
        scalar_argVld [10][0][13] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld [10][0][13] = 1;
    end

    //------WRITE (array range, global adr = 284944, width=32, addr_width=32) -----//
    //s = 0; a = 3;
    array_argVld [0][3] = chroma_mc_uni_libx265_hls_refPicList_frame_data_EN_A & (chroma_mc_uni_libx265_hls_refPicList_frame_data_WEN_A != 0);
    array_adr    [0][3] = chroma_mc_uni_libx265_hls_refPicList_frame_data_Addr_A;
    array_wdat   [0][3] = chroma_mc_uni_libx265_hls_refPicList_frame_data_Din_A;

    //------READ (array range, global adr = 284944, width=32, addr_width=32) -----//
    //s = 0; a = 163;
    chroma_mc_uni_libx265_hls_refPicList_frame_data_Dout_A = array_rdat  [0][163];
    //found a write signal pair
    array_argVld [0][163] = chroma_mc_uni_libx265_hls_refPicList_frame_data_EN_A & (chroma_mc_uni_libx265_hls_refPicList_frame_data_WEN_A == 0);
    array_adr    [0][163] = chroma_mc_uni_libx265_hls_refPicList_frame_data_Addr_A;

    //------WRITE (array range, global adr = 285328, width=32, addr_width=32) -----//
    //s = 0; a = 4;
    array_argVld [0][4] = chroma_mc_uni_libx265_hls_refPicList_frame_linesize_EN_A & (chroma_mc_uni_libx265_hls_refPicList_frame_linesize_WEN_A != 0);
    array_adr    [0][4] = chroma_mc_uni_libx265_hls_refPicList_frame_linesize_Addr_A;
    array_wdat   [0][4] = chroma_mc_uni_libx265_hls_refPicList_frame_linesize_Din_A;

    //------READ (array range, global adr = 285328, width=32, addr_width=32) -----//
    //s = 0; a = 164;
    chroma_mc_uni_libx265_hls_refPicList_frame_linesize_Dout_A = array_rdat  [0][164];
    //found a write signal pair
    array_argVld [0][164] = chroma_mc_uni_libx265_hls_refPicList_frame_linesize_EN_A & (chroma_mc_uni_libx265_hls_refPicList_frame_linesize_WEN_A == 0);
    array_adr    [0][164] = chroma_mc_uni_libx265_hls_refPicList_frame_linesize_Addr_A;

    //------READ (scalar, global adr = 784) comb block-----//
    //s = 4; r = 0; a = 10;
    if (scalar_rdat_vld_r[4][0][10]) begin
        scalar_argdone [4][0][10] = 1;
    end
    scalar_adr[4][0][10] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][10]) begin
        scalar_argVld[4][0][10] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[4][0][10] = 1;
    end

    //------READ (scalar, global adr = 788) comb block-----//
    //s = 5; r = 1; a = 16;
    if (scalar_rdat_vld_r[5][1][16]) begin
        scalar_argdone [5][1][16] = 1;
    end
    scalar_adr[5][1][16] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][16]) begin
        scalar_argVld[5][1][16] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[5][1][16] = 1;
    end

    //------READ (scalar, global adr = 792) comb block-----//
    //s = 6; r = 1; a = 15;
    if (scalar_rdat_vld_r[6][1][15]) begin
        scalar_argdone [6][1][15] = 1;
    end
    scalar_adr[6][1][15] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][15]) begin
        scalar_argVld[6][1][15] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[6][1][15] = 1;
    end

    //------READ (scalar, global adr = 796) comb block-----//
    //s = 7; r = 1; a = 13;
    if (scalar_rdat_vld_r[7][1][13]) begin
        scalar_argdone [7][1][13] = 1;
    end
    scalar_adr[7][1][13] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][13]) begin
        scalar_argVld[7][1][13] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[7][1][13] = 1;
    end

    //------READ (scalar, global adr = 800) comb block-----//
    //s = 8; r = 1; a = 16;
    if (scalar_rdat_vld_r[8][1][16]) begin
        scalar_argdone [8][1][16] = 1;
    end
    scalar_adr[8][1][16] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][16]) begin
        scalar_argVld[8][1][16] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[8][1][16] = 1;
    end

    //------READ (scalar, global adr = 804) comb block-----//
    //s = 9; r = 0; a = 17;
    if (scalar_rdat_vld_r[9][0][17]) begin
        scalar_argdone [9][0][17] = 1;
    end
    scalar_adr[9][0][17] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][17]) begin
        scalar_argVld[9][0][17] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[9][0][17] = 1;
    end

    //------READ (scalar, global adr = 808) comb block-----//
    //s = 10; r = 1; a = 13;
    if (scalar_rdat_vld_r[10][1][13]) begin
        scalar_argdone [10][1][13] = 1;
    end
    scalar_adr[10][1][13] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][13]) begin
        scalar_argVld[10][1][13] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[10][1][13] = 1;
    end

    //------READ (scalar, global adr = 812) comb block-----//
    //s = 11; r = 0; a = 11;
    if (scalar_rdat_vld_r[11][0][11]) begin
        scalar_argdone [11][0][11] = 1;
    end
    scalar_adr[11][0][11] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][11]) begin
        scalar_argVld[11][0][11] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[11][0][11] = 1;
    end

    //------READ (scalar, global adr = 816) comb block-----//
    //s = 12; r = 0; a = 13;
    if (scalar_rdat_vld_r[12][0][13]) begin
        scalar_argdone [12][0][13] = 1;
    end
    scalar_adr[12][0][13] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][13]) begin
        scalar_argVld[12][0][13] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[12][0][13] = 1;
    end

    //------READ (scalar, global adr = 728) comb block-----//
    //s = 22; r = 0; a = 11;
    if (scalar_rdat_vld_r[22][0][11]) begin
        scalar_argdone [22][0][11] = 1;
    end
    scalar_adr[22][0][11] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][11]) begin
        scalar_argVld[22][0][11] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[22][0][11] = 1;
    end

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 1; a = 8;
    if (scalar_rdat_vld_r[17][1][8]) begin
        scalar_argdone [17][1][8] = 1;
    end
    scalar_adr[17][1][8] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][8]) begin
        scalar_argVld[17][1][8] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[17][1][8] = 1;
    end

    //------READ (scalar, global adr = 1532) comb block-----//
    //s = 31; r = 0; a = 15;
    if (scalar_rdat_vld_r[31][0][15]) begin
        scalar_argdone [31][0][15] = 1;
    end
    scalar_adr[31][0][15] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][15]) begin
        scalar_argVld[31][0][15] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[31][0][15] = 1;
    end

    //------READ (scalar, global adr = 1536) comb block-----//
    //s = 0; r = 0; a = 16;
    if (scalar_rdat_vld_r[0][0][16]) begin
        scalar_argdone [0][0][16] = 1;
    end
    scalar_adr[0][0][16] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][16]) begin
        scalar_argVld[0][0][16] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[0][0][16] = 1;
    end

    //------READ (scalar, global adr = 1144) comb block-----//
    //s = 30; r = 0; a = 5;
    if (scalar_rdat_vld_r[30][0][5]) begin
        scalar_argdone [30][0][5] = 1;
    end
    scalar_adr[30][0][5] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][5]) begin
        scalar_argVld[30][0][5] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[30][0][5] = 1;
    end

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 0; a = 17;
    if (scalar_rdat_vld_r[6][0][17]) begin
        scalar_argdone [6][0][17] = 1;
    end
    scalar_adr[6][0][17] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][17]) begin
        scalar_argVld[6][0][17] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[6][0][17] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 0; a = 8;
    if (scalar_rdat_vld_r[19][0][8]) begin
        scalar_argdone [19][0][8] = 1;
    end
    scalar_adr[19][0][8] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][8]) begin
        scalar_argVld[19][0][8] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[19][0][8] = 1;
    end

    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 1; a = 10;
    if (scalar_rdat_vld_r[20][1][10]) begin
        scalar_argdone [20][1][10] = 1;
    end
    scalar_adr    [20][1][10] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][10]) begin
        scalar_argVld [20][1][10] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld [20][1][10] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 0; a = 11;
    if (scalar_rdat_vld_r[21][0][11]) begin
        scalar_argdone [21][0][11] = 1;
    end
    scalar_adr    [21][0][11] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][11]) begin
        scalar_argVld [21][0][11] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld [21][0][11] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 1; a = 10;
    if (scalar_rdat_vld_r[22][1][10]) begin
        scalar_argdone [22][1][10] = 1;
    end
    scalar_adr    [22][1][10] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][10]) begin
        scalar_argVld [22][1][10] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld [22][1][10] = 1;
    end

    //------READ (scalar, complete partition, global adr = 348) comb block-----//
    //s = 23; r = 0; a = 9;
    if (scalar_rdat_vld_r[23][0][9]) begin
        scalar_argdone [23][0][9] = 1;
    end
    scalar_adr    [23][0][9] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][9]) begin
        scalar_argVld [23][0][9] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld [23][0][9] = 1;
    end

    //------READ (scalar, complete partition, global adr = 352) comb block-----//
    //s = 24; r = 0; a = 7;
    if (scalar_rdat_vld_r[24][0][7]) begin
        scalar_argdone [24][0][7] = 1;
    end
    scalar_adr    [24][0][7] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][7]) begin
        scalar_argVld [24][0][7] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld [24][0][7] = 1;
    end

    //------READ (scalar, complete partition, global adr = 356) comb block-----//
    //s = 25; r = 0; a = 7;
    if (scalar_rdat_vld_r[25][0][7]) begin
        scalar_argdone [25][0][7] = 1;
    end
    scalar_adr    [25][0][7] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][7]) begin
        scalar_argVld [25][0][7] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld [25][0][7] = 1;
    end

    //------READ (scalar, global adr = 1524) comb block-----//
    //s = 29; r = 0; a = 15;
    if (scalar_rdat_vld_r[29][0][15]) begin
        scalar_argdone [29][0][15] = 1;
    end
    scalar_adr[29][0][15] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][15]) begin
        scalar_argVld[29][0][15] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[29][0][15] = 1;
    end

    //------READ (scalar, global adr = 1520) comb block-----//
    //s = 28; r = 0; a = 7;
    if (scalar_rdat_vld_r[28][0][7]) begin
        scalar_argdone [28][0][7] = 1;
    end
    scalar_adr[28][0][7] = {ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][7]) begin
        scalar_argVld[28][0][7] = 0;
    end
    if (ap_arb_reload_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argVld[28][0][7] = 1;
    end

    //------WRITE (array range, global adr = 285872, width=8, addr_width=32) -----//
    //s = 0; a = 5;
    array_argVld [0][5] = chroma_mc_uni_libx265_hls_chroma_weight_l0_flag_EN_A & (chroma_mc_uni_libx265_hls_chroma_weight_l0_flag_WEN_A != 0);
    array_adr    [0][5] = chroma_mc_uni_libx265_hls_chroma_weight_l0_flag_Addr_A;
    array_wdat   [0][5] = chroma_mc_uni_libx265_hls_chroma_weight_l0_flag_Din_A;

    //------READ (array range, global adr = 285872, width=8, addr_width=32) -----//
    //s = 0; a = 165;
    chroma_mc_uni_libx265_hls_chroma_weight_l0_flag_Dout_A = array_rdat  [0][165];
    //found a write signal pair
    array_argVld [0][165] = chroma_mc_uni_libx265_hls_chroma_weight_l0_flag_EN_A & (chroma_mc_uni_libx265_hls_chroma_weight_l0_flag_WEN_A == 0);
    array_adr    [0][165] = chroma_mc_uni_libx265_hls_chroma_weight_l0_flag_Addr_A;

    //------WRITE (array range, global adr = 285888, width=8, addr_width=32) -----//
    //s = 0; a = 6;
    array_argVld [0][6] = chroma_mc_uni_libx265_hls_chroma_weight_l1_flag_EN_A & (chroma_mc_uni_libx265_hls_chroma_weight_l1_flag_WEN_A != 0);
    array_adr    [0][6] = chroma_mc_uni_libx265_hls_chroma_weight_l1_flag_Addr_A;
    array_wdat   [0][6] = chroma_mc_uni_libx265_hls_chroma_weight_l1_flag_Din_A;

    //------READ (array range, global adr = 285888, width=8, addr_width=32) -----//
    //s = 0; a = 166;
    chroma_mc_uni_libx265_hls_chroma_weight_l1_flag_Dout_A = array_rdat  [0][166];
    //found a write signal pair
    array_argVld [0][166] = chroma_mc_uni_libx265_hls_chroma_weight_l1_flag_EN_A & (chroma_mc_uni_libx265_hls_chroma_weight_l1_flag_WEN_A == 0);
    array_adr    [0][166] = chroma_mc_uni_libx265_hls_chroma_weight_l1_flag_Addr_A;

    //------WRITE (array range, global adr = 285904, width=16, addr_width=32) -----//
    //s = 0; a = 7;
    array_argVld [0][7] = chroma_mc_uni_libx265_hls_chroma_weight_l0_EN_A & (chroma_mc_uni_libx265_hls_chroma_weight_l0_WEN_A != 0);
    array_adr    [0][7] = chroma_mc_uni_libx265_hls_chroma_weight_l0_Addr_A;
    array_wdat   [0][7] = chroma_mc_uni_libx265_hls_chroma_weight_l0_Din_A;

    //------READ (array range, global adr = 285904, width=16, addr_width=32) -----//
    //s = 0; a = 167;
    chroma_mc_uni_libx265_hls_chroma_weight_l0_Dout_A = array_rdat  [0][167];
    //found a write signal pair
    array_argVld [0][167] = chroma_mc_uni_libx265_hls_chroma_weight_l0_EN_A & (chroma_mc_uni_libx265_hls_chroma_weight_l0_WEN_A == 0);
    array_adr    [0][167] = chroma_mc_uni_libx265_hls_chroma_weight_l0_Addr_A;

    //------WRITE (array range, global adr = 285968, width=16, addr_width=32) -----//
    //s = 0; a = 8;
    array_argVld [0][8] = chroma_mc_uni_libx265_hls_chroma_weight_l1_EN_A & (chroma_mc_uni_libx265_hls_chroma_weight_l1_WEN_A != 0);
    array_adr    [0][8] = chroma_mc_uni_libx265_hls_chroma_weight_l1_Addr_A;
    array_wdat   [0][8] = chroma_mc_uni_libx265_hls_chroma_weight_l1_Din_A;

    //------READ (array range, global adr = 285968, width=16, addr_width=32) -----//
    //s = 0; a = 168;
    chroma_mc_uni_libx265_hls_chroma_weight_l1_Dout_A = array_rdat  [0][168];
    //found a write signal pair
    array_argVld [0][168] = chroma_mc_uni_libx265_hls_chroma_weight_l1_EN_A & (chroma_mc_uni_libx265_hls_chroma_weight_l1_WEN_A == 0);
    array_adr    [0][168] = chroma_mc_uni_libx265_hls_chroma_weight_l1_Addr_A;

    //------WRITE (array range, global adr = 286032, width=16, addr_width=32) -----//
    //s = 0; a = 9;
    array_argVld [0][9] = chroma_mc_uni_libx265_hls_chroma_offset_l0_EN_A & (chroma_mc_uni_libx265_hls_chroma_offset_l0_WEN_A != 0);
    array_adr    [0][9] = chroma_mc_uni_libx265_hls_chroma_offset_l0_Addr_A;
    array_wdat   [0][9] = chroma_mc_uni_libx265_hls_chroma_offset_l0_Din_A;

    //------READ (array range, global adr = 286032, width=16, addr_width=32) -----//
    //s = 0; a = 169;
    chroma_mc_uni_libx265_hls_chroma_offset_l0_Dout_A = array_rdat  [0][169];
    //found a write signal pair
    array_argVld [0][169] = chroma_mc_uni_libx265_hls_chroma_offset_l0_EN_A & (chroma_mc_uni_libx265_hls_chroma_offset_l0_WEN_A == 0);
    array_adr    [0][169] = chroma_mc_uni_libx265_hls_chroma_offset_l0_Addr_A;

    //------WRITE (array range, global adr = 286096, width=16, addr_width=32) -----//
    //s = 0; a = 10;
    array_argVld [0][10] = chroma_mc_uni_libx265_hls_chroma_offset_l1_EN_A & (chroma_mc_uni_libx265_hls_chroma_offset_l1_WEN_A != 0);
    array_adr    [0][10] = chroma_mc_uni_libx265_hls_chroma_offset_l1_Addr_A;
    array_wdat   [0][10] = chroma_mc_uni_libx265_hls_chroma_offset_l1_Din_A;

    //------READ (array range, global adr = 286096, width=16, addr_width=32) -----//
    //s = 0; a = 170;
    chroma_mc_uni_libx265_hls_chroma_offset_l1_Dout_A = array_rdat  [0][170];
    //found a write signal pair
    array_argVld [0][170] = chroma_mc_uni_libx265_hls_chroma_offset_l1_EN_A & (chroma_mc_uni_libx265_hls_chroma_offset_l1_WEN_A == 0);
    array_adr    [0][170] = chroma_mc_uni_libx265_hls_chroma_offset_l1_Addr_A;

    //------WRITE (array range, global adr = 12304, width=32, addr_width=32) -----//
    //s = 0; a = 11;
    array_argVld [0][11] = chroma_mc_uni_libx265_hls_edge_buffer_EN_A & (chroma_mc_uni_libx265_hls_edge_buffer_WEN_A != 0);
    array_adr    [0][11] = chroma_mc_uni_libx265_hls_edge_buffer_Addr_A;
    array_wdat   [0][11] = chroma_mc_uni_libx265_hls_edge_buffer_Din_A;

    //------READ (array range, global adr = 12304, width=32, addr_width=32) -----//
    //s = 0; a = 171;
    chroma_mc_uni_libx265_hls_edge_buffer_Dout_A = array_rdat  [0][171];
    //found a write signal pair
    array_argVld [0][171] = chroma_mc_uni_libx265_hls_edge_buffer_EN_A & (chroma_mc_uni_libx265_hls_edge_buffer_WEN_A == 0);
    array_adr    [0][171] = chroma_mc_uni_libx265_hls_edge_buffer_Addr_A;

    //------WRITE (scalar, global adr = 752) comb block-----//
    //s = 28; r = 1; a = 0;
    if (scalar_argAck [28][1][0]) begin
        scalar_argVld [28][1][0] = 0;
        scalar_argAckdone [28][1][0] = 1;
    end
    if (chroma_mc_uni_libx265_hls_xm_buf_linesize_ap_vld_r) begin
        scalar_argVld [28][1][0] = 1;
        scalar_argAckdone [28][1][0] = 0;
        ap_part_w[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION] = ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][1][0] = chroma_mc_uni_libx265_hls_xm_buf_linesize_r;
    scalar_adr    [28][1][0] = {ap_part_w[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1528) comb block-----//
    //s = 30; r = 1; a = 0;
    if (scalar_argAck [30][1][0]) begin
        scalar_argVld [30][1][0] = 0;
        scalar_argAckdone [30][1][0] = 1;
    end
    if (chroma_mc_uni_libx265_hls_dst_depth_ap_vld_r) begin
        scalar_argVld [30][1][0] = 1;
        scalar_argAckdone [30][1][0] = 0;
        ap_part_w[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION] = ap_part[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [30][1][0] = chroma_mc_uni_libx265_hls_dst_depth_r;
    scalar_adr    [30][1][0] = {ap_part_w[chroma_mc_uni_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    chroma_mc_uni_libx265_hls_ready = array_argRdy[0][2]& array_argRdy[0][162]& array_argRdy[0][3]& array_argRdy[0][163]& array_argRdy[0][4]& array_argRdy[0][164]& array_argRdy[0][5]& array_argRdy[0][165]& array_argRdy[0][6]& array_argRdy[0][166]& array_argRdy[0][7]& array_argRdy[0][167]& array_argRdy[0][8]& array_argRdy[0][168]& array_argRdy[0][9]& array_argRdy[0][169]& array_argRdy[0][10]& array_argRdy[0][170]& array_argRdy[0][11]& array_argRdy[0][171] & ~ap_arb_reload_running_r[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][2] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][162] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][3] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][163] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][4] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][164] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][5] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][165] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][6] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][166] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][7] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][167] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][8] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][168] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][9] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][169] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][10] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][170] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][11] = ap_ce[chroma_mc_uni_libx265_hls];
    array_ap_ce[0][171] = ap_ce[chroma_mc_uni_libx265_hls];

    if (ap_arb_ret[chroma_mc_uni_libx265_hls] & ~ap_arb_ret_r[chroma_mc_uni_libx265_hls]) begin
        ap_arb_ret_running[chroma_mc_uni_libx265_hls] = 1;
        chroma_mc_uni_libx265_hls_ready = 0;
    end

    scalar_argAckdone_all[chroma_mc_uni_libx265_hls] = scalar_argAckdone[28][1][0] &
                                                scalar_argAckdone[30][1][0];
    if (ap_arb_ret_running[chroma_mc_uni_libx265_hls] & scalar_argAckdone_all[chroma_mc_uni_libx265_hls] &~ ap_arb_reload_running_r[chroma_mc_uni_libx265_hls]) begin
        ap_arb_reload[chroma_mc_uni_libx265_hls] = 1;
        ap_arb_reload_running[chroma_mc_uni_libx265_hls] = 1;
    end

    if (ap_arb_start[chroma_mc_uni_libx265_hls] &~ ap_arb_start_r[chroma_mc_uni_libx265_hls]) begin
        ap_arb_start_running[chroma_mc_uni_libx265_hls] = 1;
    end

    if (ap_arb_start_running[chroma_mc_uni_libx265_hls] & ~scalar_writing_784& ~scalar_writing_788& ~scalar_writing_792& ~scalar_writing_796& ~scalar_writing_800& ~scalar_writing_804& ~scalar_writing_808& ~scalar_writing_812& ~scalar_writing_816) begin
        ap_arb_start_running[chroma_mc_uni_libx265_hls] = 0;
        ap_arb_reload[chroma_mc_uni_libx265_hls] = 1;
    end

    scalar_argdone_all[chroma_mc_uni_libx265_hls] = scalar_argdone[5][0][17] &
                                                                scalar_argdone[6][0][16] &
                                                                scalar_argdone[7][0][14] &
                                                                scalar_argdone[8][0][16] &
                                                                scalar_argdone[9][1][16] &
                                                                scalar_argdone[10][0][13] &
                                                                scalar_argdone[4][0][10] &
                                                                scalar_argdone[5][1][16] &
                                                                scalar_argdone[6][1][15] &
                                                                scalar_argdone[7][1][13] &
                                                                scalar_argdone[8][1][16] &
                                                                scalar_argdone[9][0][17] &
                                                                scalar_argdone[10][1][13] &
                                                                scalar_argdone[11][0][11] &
                                                                scalar_argdone[12][0][13] &
                                                                scalar_argdone[22][0][11] &
                                                                scalar_argdone[17][1][8] &
                                                                scalar_argdone[31][0][15] &
                                                                scalar_argdone[0][0][16] &
                                                                scalar_argdone[30][0][5] &
                                                                scalar_argdone[6][0][17] &
                                                                scalar_argdone[19][0][8] &
                                                                scalar_argdone[20][1][10] &
                                                                scalar_argdone[21][0][11] &
                                                                scalar_argdone[22][1][10] &
                                                                scalar_argdone[23][0][9] &
                                                                scalar_argdone[24][0][7] &
                                                                scalar_argdone[25][0][7] &
                                                                scalar_argdone[29][0][15] &
                                                                scalar_argdone[28][0][7];

    if (scalar_argdone_all_r[chroma_mc_uni_libx265_hls]) begin
        scalar_argdone[5][0][17] = 0;
        scalar_argdone[6][0][16] = 0;
        scalar_argdone[7][0][14] = 0;
        scalar_argdone[8][0][16] = 0;
        scalar_argdone[9][1][16] = 0;
        scalar_argdone[10][0][13] = 0;
        scalar_argdone[4][0][10] = 0;
        scalar_argdone[5][1][16] = 0;
        scalar_argdone[6][1][15] = 0;
        scalar_argdone[7][1][13] = 0;
        scalar_argdone[8][1][16] = 0;
        scalar_argdone[9][0][17] = 0;
        scalar_argdone[10][1][13] = 0;
        scalar_argdone[11][0][11] = 0;
        scalar_argdone[12][0][13] = 0;
        scalar_argdone[22][0][11] = 0;
        scalar_argdone[17][1][8] = 0;
        scalar_argdone[31][0][15] = 0;
        scalar_argdone[0][0][16] = 0;
        scalar_argdone[30][0][5] = 0;
        scalar_argdone[6][0][17] = 0;
        scalar_argdone[19][0][8] = 0;
        scalar_argdone[20][1][10] = 0;
        scalar_argdone[21][0][11] = 0;
        scalar_argdone[22][1][10] = 0;
        scalar_argdone[23][0][9] = 0;
        scalar_argdone[24][0][7] = 0;
        scalar_argdone[25][0][7] = 0;
        scalar_argdone[29][0][15] = 0;
        scalar_argdone[28][0][7] = 0;

        if (ap_arb_start_r[chroma_mc_uni_libx265_hls] & ~ap_running_r[chroma_mc_uni_libx265_hls]) begin
            ap_start[chroma_mc_uni_libx265_hls] = 1;
            ap_running[chroma_mc_uni_libx265_hls] = 1;
        end
        else if (ap_arb_ret_running_r[chroma_mc_uni_libx265_hls]) begin
            ap_arb_ret_running[chroma_mc_uni_libx265_hls] = 0;
            ap_arb_reload_running[chroma_mc_uni_libx265_hls] = 0;
        end
    end

    if (ap_start_r[chroma_mc_uni_libx265_hls] & ap_ready_r[chroma_mc_uni_libx265_hls]) begin
        ap_start[chroma_mc_uni_libx265_hls] = 0;
    end

    if (ap_done_r[chroma_mc_uni_libx265_hls]) begin
        ap_running[chroma_mc_uni_libx265_hls] = 0;
    end
`endif
    //============================================================
    //sao_param_hls       (f = 37)
    //============================================================
`ifdef enable_connect_sao_param_hls
    //------READ (scalar, complete partition, global adr = 892) comb block-----//
    //s = 31; r = 1; a = 36;
    if (scalar_rdat_vld_r[31][1][36]) begin
        scalar_argdone [31][1][36] = 1;
    end
    scalar_adr    [31][1][36] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][36]) begin
        scalar_argVld [31][1][36] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [31][1][36] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 892) comb block-----//
    //s = 31; r = 1; a = 10;
    if (scalar_argAck [31][1][10]) begin
        scalar_argVld [31][1][10] = 0;
        scalar_argAckdone [31][1][10] = 1;
    end
    if (sao_param_hls_curr_sao_offset_abs_0_0_o_ap_vld_r) begin
        scalar_argVld [31][1][10] = 1;
        scalar_argAckdone [31][1][10] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][1][10] = sao_param_hls_curr_sao_offset_abs_0_0_o_r;
    scalar_adr    [31][1][10] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 893) comb block-----//
    //s = 31; r = 0; a = 38;
    if (scalar_rdat_vld_r[31][0][38]) begin
        scalar_argdone [31][0][38] = 1;
    end
    scalar_adr    [31][0][38] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][38]) begin
        scalar_argVld [31][0][38] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [31][0][38] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 893) comb block-----//
    //s = 31; r = 0; a = 11;
    if (scalar_argAck [31][0][11]) begin
        scalar_argVld [31][0][11] = 0;
        scalar_argAckdone [31][0][11] = 1;
    end
    if (sao_param_hls_curr_sao_offset_abs_0_1_o_ap_vld_r) begin
        scalar_argVld [31][0][11] = 1;
        scalar_argAckdone [31][0][11] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][11] = sao_param_hls_curr_sao_offset_abs_0_1_o_r;
    scalar_adr    [31][0][11] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 894) comb block-----//
    //s = 31; r = 1; a = 37;
    if (scalar_rdat_vld_r[31][1][37]) begin
        scalar_argdone [31][1][37] = 1;
    end
    scalar_adr    [31][1][37] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][37]) begin
        scalar_argVld [31][1][37] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [31][1][37] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 894) comb block-----//
    //s = 31; r = 1; a = 11;
    if (scalar_argAck [31][1][11]) begin
        scalar_argVld [31][1][11] = 0;
        scalar_argAckdone [31][1][11] = 1;
    end
    if (sao_param_hls_curr_sao_offset_abs_0_2_o_ap_vld_r) begin
        scalar_argVld [31][1][11] = 1;
        scalar_argAckdone [31][1][11] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][1][11] = sao_param_hls_curr_sao_offset_abs_0_2_o_r;
    scalar_adr    [31][1][11] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 895) comb block-----//
    //s = 31; r = 0; a = 39;
    if (scalar_rdat_vld_r[31][0][39]) begin
        scalar_argdone [31][0][39] = 1;
    end
    scalar_adr    [31][0][39] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][39]) begin
        scalar_argVld [31][0][39] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [31][0][39] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 895) comb block-----//
    //s = 31; r = 0; a = 12;
    if (scalar_argAck [31][0][12]) begin
        scalar_argVld [31][0][12] = 0;
        scalar_argAckdone [31][0][12] = 1;
    end
    if (sao_param_hls_curr_sao_offset_abs_0_3_o_ap_vld_r) begin
        scalar_argVld [31][0][12] = 1;
        scalar_argAckdone [31][0][12] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][12] = sao_param_hls_curr_sao_offset_abs_0_3_o_r;
    scalar_adr    [31][0][12] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 896) comb block-----//
    //s = 0; r = 1; a = 34;
    if (scalar_rdat_vld_r[0][1][34]) begin
        scalar_argdone [0][1][34] = 1;
    end
    scalar_adr    [0][1][34] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][34]) begin
        scalar_argVld [0][1][34] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [0][1][34] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 896) comb block-----//
    //s = 0; r = 1; a = 13;
    if (scalar_argAck [0][1][13]) begin
        scalar_argVld [0][1][13] = 0;
        scalar_argAckdone [0][1][13] = 1;
    end
    if (sao_param_hls_curr_sao_offset_abs_1_0_o_ap_vld_r) begin
        scalar_argVld [0][1][13] = 1;
        scalar_argAckdone [0][1][13] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][13] = sao_param_hls_curr_sao_offset_abs_1_0_o_r;
    scalar_adr    [0][1][13] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 897) comb block-----//
    //s = 0; r = 0; a = 35;
    if (scalar_rdat_vld_r[0][0][35]) begin
        scalar_argdone [0][0][35] = 1;
    end
    scalar_adr    [0][0][35] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][35]) begin
        scalar_argVld [0][0][35] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [0][0][35] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 897) comb block-----//
    //s = 0; r = 0; a = 14;
    if (scalar_argAck [0][0][14]) begin
        scalar_argVld [0][0][14] = 0;
        scalar_argAckdone [0][0][14] = 1;
    end
    if (sao_param_hls_curr_sao_offset_abs_1_1_o_ap_vld_r) begin
        scalar_argVld [0][0][14] = 1;
        scalar_argAckdone [0][0][14] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][14] = sao_param_hls_curr_sao_offset_abs_1_1_o_r;
    scalar_adr    [0][0][14] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 898) comb block-----//
    //s = 0; r = 1; a = 35;
    if (scalar_rdat_vld_r[0][1][35]) begin
        scalar_argdone [0][1][35] = 1;
    end
    scalar_adr    [0][1][35] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][35]) begin
        scalar_argVld [0][1][35] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [0][1][35] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 898) comb block-----//
    //s = 0; r = 1; a = 14;
    if (scalar_argAck [0][1][14]) begin
        scalar_argVld [0][1][14] = 0;
        scalar_argAckdone [0][1][14] = 1;
    end
    if (sao_param_hls_curr_sao_offset_abs_1_2_o_ap_vld_r) begin
        scalar_argVld [0][1][14] = 1;
        scalar_argAckdone [0][1][14] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][14] = sao_param_hls_curr_sao_offset_abs_1_2_o_r;
    scalar_adr    [0][1][14] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 899) comb block-----//
    //s = 0; r = 0; a = 36;
    if (scalar_rdat_vld_r[0][0][36]) begin
        scalar_argdone [0][0][36] = 1;
    end
    scalar_adr    [0][0][36] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][36]) begin
        scalar_argVld [0][0][36] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [0][0][36] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 899) comb block-----//
    //s = 0; r = 0; a = 15;
    if (scalar_argAck [0][0][15]) begin
        scalar_argVld [0][0][15] = 0;
        scalar_argAckdone [0][0][15] = 1;
    end
    if (sao_param_hls_curr_sao_offset_abs_1_3_o_ap_vld_r) begin
        scalar_argVld [0][0][15] = 1;
        scalar_argAckdone [0][0][15] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][15] = sao_param_hls_curr_sao_offset_abs_1_3_o_r;
    scalar_adr    [0][0][15] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 900) comb block-----//
    //s = 1; r = 1; a = 28;
    if (scalar_rdat_vld_r[1][1][28]) begin
        scalar_argdone [1][1][28] = 1;
    end
    scalar_adr    [1][1][28] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][28]) begin
        scalar_argVld [1][1][28] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [1][1][28] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 900) comb block-----//
    //s = 1; r = 0; a = 7;
    if (scalar_argAck [1][0][7]) begin
        scalar_argVld [1][0][7] = 0;
        scalar_argAckdone [1][0][7] = 1;
    end
    if (sao_param_hls_curr_sao_offset_abs_2_0_o_ap_vld_r) begin
        scalar_argVld [1][0][7] = 1;
        scalar_argAckdone [1][0][7] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][0][7] = sao_param_hls_curr_sao_offset_abs_2_0_o_r;
    scalar_adr    [1][0][7] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 901) comb block-----//
    //s = 1; r = 0; a = 29;
    if (scalar_rdat_vld_r[1][0][29]) begin
        scalar_argdone [1][0][29] = 1;
    end
    scalar_adr    [1][0][29] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][29]) begin
        scalar_argVld [1][0][29] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [1][0][29] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 901) comb block-----//
    //s = 1; r = 1; a = 7;
    if (scalar_argAck [1][1][7]) begin
        scalar_argVld [1][1][7] = 0;
        scalar_argAckdone [1][1][7] = 1;
    end
    if (sao_param_hls_curr_sao_offset_abs_2_1_o_ap_vld_r) begin
        scalar_argVld [1][1][7] = 1;
        scalar_argAckdone [1][1][7] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][1][7] = sao_param_hls_curr_sao_offset_abs_2_1_o_r;
    scalar_adr    [1][1][7] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 902) comb block-----//
    //s = 1; r = 1; a = 29;
    if (scalar_rdat_vld_r[1][1][29]) begin
        scalar_argdone [1][1][29] = 1;
    end
    scalar_adr    [1][1][29] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][29]) begin
        scalar_argVld [1][1][29] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [1][1][29] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 902) comb block-----//
    //s = 1; r = 0; a = 8;
    if (scalar_argAck [1][0][8]) begin
        scalar_argVld [1][0][8] = 0;
        scalar_argAckdone [1][0][8] = 1;
    end
    if (sao_param_hls_curr_sao_offset_abs_2_2_o_ap_vld_r) begin
        scalar_argVld [1][0][8] = 1;
        scalar_argAckdone [1][0][8] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][0][8] = sao_param_hls_curr_sao_offset_abs_2_2_o_r;
    scalar_adr    [1][0][8] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 903) comb block-----//
    //s = 1; r = 0; a = 30;
    if (scalar_rdat_vld_r[1][0][30]) begin
        scalar_argdone [1][0][30] = 1;
    end
    scalar_adr    [1][0][30] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][30]) begin
        scalar_argVld [1][0][30] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [1][0][30] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 903) comb block-----//
    //s = 1; r = 1; a = 8;
    if (scalar_argAck [1][1][8]) begin
        scalar_argVld [1][1][8] = 0;
        scalar_argAckdone [1][1][8] = 1;
    end
    if (sao_param_hls_curr_sao_offset_abs_2_3_o_ap_vld_r) begin
        scalar_argVld [1][1][8] = 1;
        scalar_argAckdone [1][1][8] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][1][8] = sao_param_hls_curr_sao_offset_abs_2_3_o_r;
    scalar_adr    [1][1][8] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 904) comb block-----//
    //s = 2; r = 1; a = 21;
    if (scalar_rdat_vld_r[2][1][21]) begin
        scalar_argdone [2][1][21] = 1;
    end
    scalar_adr    [2][1][21] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][21]) begin
        scalar_argVld [2][1][21] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [2][1][21] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 904) comb block-----//
    //s = 2; r = 1; a = 5;
    if (scalar_argAck [2][1][5]) begin
        scalar_argVld [2][1][5] = 0;
        scalar_argAckdone [2][1][5] = 1;
    end
    if (sao_param_hls_curr_sao_offset_sign_0_0_o_ap_vld_r) begin
        scalar_argVld [2][1][5] = 1;
        scalar_argAckdone [2][1][5] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][1][5] = sao_param_hls_curr_sao_offset_sign_0_0_o_r;
    scalar_adr    [2][1][5] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 905) comb block-----//
    //s = 2; r = 0; a = 23;
    if (scalar_rdat_vld_r[2][0][23]) begin
        scalar_argdone [2][0][23] = 1;
    end
    scalar_adr    [2][0][23] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][23]) begin
        scalar_argVld [2][0][23] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [2][0][23] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 905) comb block-----//
    //s = 2; r = 0; a = 6;
    if (scalar_argAck [2][0][6]) begin
        scalar_argVld [2][0][6] = 0;
        scalar_argAckdone [2][0][6] = 1;
    end
    if (sao_param_hls_curr_sao_offset_sign_0_1_o_ap_vld_r) begin
        scalar_argVld [2][0][6] = 1;
        scalar_argAckdone [2][0][6] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][0][6] = sao_param_hls_curr_sao_offset_sign_0_1_o_r;
    scalar_adr    [2][0][6] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 906) comb block-----//
    //s = 2; r = 1; a = 22;
    if (scalar_rdat_vld_r[2][1][22]) begin
        scalar_argdone [2][1][22] = 1;
    end
    scalar_adr    [2][1][22] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][22]) begin
        scalar_argVld [2][1][22] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [2][1][22] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 906) comb block-----//
    //s = 2; r = 1; a = 6;
    if (scalar_argAck [2][1][6]) begin
        scalar_argVld [2][1][6] = 0;
        scalar_argAckdone [2][1][6] = 1;
    end
    if (sao_param_hls_curr_sao_offset_sign_0_2_o_ap_vld_r) begin
        scalar_argVld [2][1][6] = 1;
        scalar_argAckdone [2][1][6] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][1][6] = sao_param_hls_curr_sao_offset_sign_0_2_o_r;
    scalar_adr    [2][1][6] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 907) comb block-----//
    //s = 2; r = 0; a = 24;
    if (scalar_rdat_vld_r[2][0][24]) begin
        scalar_argdone [2][0][24] = 1;
    end
    scalar_adr    [2][0][24] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][24]) begin
        scalar_argVld [2][0][24] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [2][0][24] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 907) comb block-----//
    //s = 2; r = 0; a = 7;
    if (scalar_argAck [2][0][7]) begin
        scalar_argVld [2][0][7] = 0;
        scalar_argAckdone [2][0][7] = 1;
    end
    if (sao_param_hls_curr_sao_offset_sign_0_3_o_ap_vld_r) begin
        scalar_argVld [2][0][7] = 1;
        scalar_argAckdone [2][0][7] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [2][0][7] = sao_param_hls_curr_sao_offset_sign_0_3_o_r;
    scalar_adr    [2][0][7] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 908) comb block-----//
    //s = 3; r = 1; a = 21;
    if (scalar_rdat_vld_r[3][1][21]) begin
        scalar_argdone [3][1][21] = 1;
    end
    scalar_adr    [3][1][21] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][21]) begin
        scalar_argVld [3][1][21] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [3][1][21] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 908) comb block-----//
    //s = 3; r = 1; a = 4;
    if (scalar_argAck [3][1][4]) begin
        scalar_argVld [3][1][4] = 0;
        scalar_argAckdone [3][1][4] = 1;
    end
    if (sao_param_hls_curr_sao_offset_sign_1_0_o_ap_vld_r) begin
        scalar_argVld [3][1][4] = 1;
        scalar_argAckdone [3][1][4] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][1][4] = sao_param_hls_curr_sao_offset_sign_1_0_o_r;
    scalar_adr    [3][1][4] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 909) comb block-----//
    //s = 3; r = 0; a = 23;
    if (scalar_rdat_vld_r[3][0][23]) begin
        scalar_argdone [3][0][23] = 1;
    end
    scalar_adr    [3][0][23] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][23]) begin
        scalar_argVld [3][0][23] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [3][0][23] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 909) comb block-----//
    //s = 3; r = 0; a = 5;
    if (scalar_argAck [3][0][5]) begin
        scalar_argVld [3][0][5] = 0;
        scalar_argAckdone [3][0][5] = 1;
    end
    if (sao_param_hls_curr_sao_offset_sign_1_1_o_ap_vld_r) begin
        scalar_argVld [3][0][5] = 1;
        scalar_argAckdone [3][0][5] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][0][5] = sao_param_hls_curr_sao_offset_sign_1_1_o_r;
    scalar_adr    [3][0][5] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 910) comb block-----//
    //s = 3; r = 1; a = 22;
    if (scalar_rdat_vld_r[3][1][22]) begin
        scalar_argdone [3][1][22] = 1;
    end
    scalar_adr    [3][1][22] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][22]) begin
        scalar_argVld [3][1][22] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [3][1][22] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 910) comb block-----//
    //s = 3; r = 1; a = 5;
    if (scalar_argAck [3][1][5]) begin
        scalar_argVld [3][1][5] = 0;
        scalar_argAckdone [3][1][5] = 1;
    end
    if (sao_param_hls_curr_sao_offset_sign_1_2_o_ap_vld_r) begin
        scalar_argVld [3][1][5] = 1;
        scalar_argAckdone [3][1][5] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][1][5] = sao_param_hls_curr_sao_offset_sign_1_2_o_r;
    scalar_adr    [3][1][5] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 911) comb block-----//
    //s = 3; r = 0; a = 24;
    if (scalar_rdat_vld_r[3][0][24]) begin
        scalar_argdone [3][0][24] = 1;
    end
    scalar_adr    [3][0][24] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][24]) begin
        scalar_argVld [3][0][24] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [3][0][24] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 911) comb block-----//
    //s = 3; r = 0; a = 6;
    if (scalar_argAck [3][0][6]) begin
        scalar_argVld [3][0][6] = 0;
        scalar_argAckdone [3][0][6] = 1;
    end
    if (sao_param_hls_curr_sao_offset_sign_1_3_o_ap_vld_r) begin
        scalar_argVld [3][0][6] = 1;
        scalar_argAckdone [3][0][6] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [3][0][6] = sao_param_hls_curr_sao_offset_sign_1_3_o_r;
    scalar_adr    [3][0][6] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 912) comb block-----//
    //s = 4; r = 1; a = 18;
    if (scalar_rdat_vld_r[4][1][18]) begin
        scalar_argdone [4][1][18] = 1;
    end
    scalar_adr    [4][1][18] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][1][18]) begin
        scalar_argVld [4][1][18] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [4][1][18] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 912) comb block-----//
    //s = 4; r = 0; a = 8;
    if (scalar_argAck [4][0][8]) begin
        scalar_argVld [4][0][8] = 0;
        scalar_argAckdone [4][0][8] = 1;
    end
    if (sao_param_hls_curr_sao_offset_sign_2_0_o_ap_vld_r) begin
        scalar_argVld [4][0][8] = 1;
        scalar_argAckdone [4][0][8] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][0][8] = sao_param_hls_curr_sao_offset_sign_2_0_o_r;
    scalar_adr    [4][0][8] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 913) comb block-----//
    //s = 4; r = 0; a = 19;
    if (scalar_rdat_vld_r[4][0][19]) begin
        scalar_argdone [4][0][19] = 1;
    end
    scalar_adr    [4][0][19] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][19]) begin
        scalar_argVld [4][0][19] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [4][0][19] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 913) comb block-----//
    //s = 4; r = 1; a = 8;
    if (scalar_argAck [4][1][8]) begin
        scalar_argVld [4][1][8] = 0;
        scalar_argAckdone [4][1][8] = 1;
    end
    if (sao_param_hls_curr_sao_offset_sign_2_1_o_ap_vld_r) begin
        scalar_argVld [4][1][8] = 1;
        scalar_argAckdone [4][1][8] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][1][8] = sao_param_hls_curr_sao_offset_sign_2_1_o_r;
    scalar_adr    [4][1][8] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 914) comb block-----//
    //s = 4; r = 1; a = 19;
    if (scalar_rdat_vld_r[4][1][19]) begin
        scalar_argdone [4][1][19] = 1;
    end
    scalar_adr    [4][1][19] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][1][19]) begin
        scalar_argVld [4][1][19] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [4][1][19] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 914) comb block-----//
    //s = 4; r = 0; a = 9;
    if (scalar_argAck [4][0][9]) begin
        scalar_argVld [4][0][9] = 0;
        scalar_argAckdone [4][0][9] = 1;
    end
    if (sao_param_hls_curr_sao_offset_sign_2_2_o_ap_vld_r) begin
        scalar_argVld [4][0][9] = 1;
        scalar_argAckdone [4][0][9] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][0][9] = sao_param_hls_curr_sao_offset_sign_2_2_o_r;
    scalar_adr    [4][0][9] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 915) comb block-----//
    //s = 4; r = 0; a = 20;
    if (scalar_rdat_vld_r[4][0][20]) begin
        scalar_argdone [4][0][20] = 1;
    end
    scalar_adr    [4][0][20] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][20]) begin
        scalar_argVld [4][0][20] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [4][0][20] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 915) comb block-----//
    //s = 4; r = 1; a = 9;
    if (scalar_argAck [4][1][9]) begin
        scalar_argVld [4][1][9] = 0;
        scalar_argAckdone [4][1][9] = 1;
    end
    if (sao_param_hls_curr_sao_offset_sign_2_3_o_ap_vld_r) begin
        scalar_argVld [4][1][9] = 1;
        scalar_argAckdone [4][1][9] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][1][9] = sao_param_hls_curr_sao_offset_sign_2_3_o_r;
    scalar_adr    [4][1][9] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 916) comb block-----//
    //s = 5; r = 0; a = 14;
    if (scalar_argAck [5][0][14]) begin
        scalar_argVld [5][0][14] = 0;
        scalar_argAckdone [5][0][14] = 1;
    end
    if (sao_param_hls_curr_sao_band_position_0_ap_vld_r) begin
        scalar_argVld [5][0][14] = 1;
        scalar_argAckdone [5][0][14] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][14] = sao_param_hls_curr_sao_band_position_0_r;
    scalar_adr    [5][0][14] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 917) comb block-----//
    //s = 5; r = 1; a = 14;
    if (scalar_argAck [5][1][14]) begin
        scalar_argVld [5][1][14] = 0;
        scalar_argAckdone [5][1][14] = 1;
    end
    if (sao_param_hls_curr_sao_band_position_1_ap_vld_r) begin
        scalar_argVld [5][1][14] = 1;
        scalar_argAckdone [5][1][14] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][14] = sao_param_hls_curr_sao_band_position_1_r;
    scalar_adr    [5][1][14] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 918) comb block-----//
    //s = 5; r = 0; a = 15;
    if (scalar_argAck [5][0][15]) begin
        scalar_argVld [5][0][15] = 0;
        scalar_argAckdone [5][0][15] = 1;
    end
    if (sao_param_hls_curr_sao_band_position_2_ap_vld_r) begin
        scalar_argVld [5][0][15] = 1;
        scalar_argAckdone [5][0][15] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][15] = sao_param_hls_curr_sao_band_position_2_r;
    scalar_adr    [5][0][15] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 920) comb block-----//
    //s = 6; r = 1; a = 13;
    if (scalar_argAck [6][1][13]) begin
        scalar_argVld [6][1][13] = 0;
        scalar_argAckdone [6][1][13] = 1;
    end
    if (sao_param_hls_curr_sao_offset_val_0_0_ap_vld_r) begin
        scalar_argVld [6][1][13] = 1;
        scalar_argAckdone [6][1][13] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][13] = sao_param_hls_curr_sao_offset_val_0_0_r;
    scalar_adr    [6][1][13] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 922) comb block-----//
    //s = 6; r = 1; a = 36;
    if (scalar_rdat_vld_r[6][1][36]) begin
        scalar_argdone [6][1][36] = 1;
    end
    scalar_adr    [6][1][36] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][36]) begin
        scalar_argVld [6][1][36] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [6][1][36] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 922) comb block-----//
    //s = 6; r = 0; a = 14;
    if (scalar_argAck [6][0][14]) begin
        scalar_argVld [6][0][14] = 0;
        scalar_argAckdone [6][0][14] = 1;
    end
    if (sao_param_hls_curr_sao_offset_val_0_1_o_ap_vld_r) begin
        scalar_argVld [6][0][14] = 1;
        scalar_argAckdone [6][0][14] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][14] = sao_param_hls_curr_sao_offset_val_0_1_o_r;
    scalar_adr    [6][0][14] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 924) comb block-----//
    //s = 7; r = 1; a = 23;
    if (scalar_rdat_vld_r[7][1][23]) begin
        scalar_argdone [7][1][23] = 1;
    end
    scalar_adr    [7][1][23] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][23]) begin
        scalar_argVld [7][1][23] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [7][1][23] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 924) comb block-----//
    //s = 7; r = 0; a = 12;
    if (scalar_argAck [7][0][12]) begin
        scalar_argVld [7][0][12] = 0;
        scalar_argAckdone [7][0][12] = 1;
    end
    if (sao_param_hls_curr_sao_offset_val_0_2_o_ap_vld_r) begin
        scalar_argVld [7][0][12] = 1;
        scalar_argAckdone [7][0][12] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][12] = sao_param_hls_curr_sao_offset_val_0_2_o_r;
    scalar_adr    [7][0][12] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 926) comb block-----//
    //s = 7; r = 0; a = 25;
    if (scalar_rdat_vld_r[7][0][25]) begin
        scalar_argdone [7][0][25] = 1;
    end
    scalar_adr    [7][0][25] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][25]) begin
        scalar_argVld [7][0][25] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [7][0][25] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 926) comb block-----//
    //s = 7; r = 1; a = 12;
    if (scalar_argAck [7][1][12]) begin
        scalar_argVld [7][1][12] = 0;
        scalar_argAckdone [7][1][12] = 1;
    end
    if (sao_param_hls_curr_sao_offset_val_0_3_o_ap_vld_r) begin
        scalar_argVld [7][1][12] = 1;
        scalar_argAckdone [7][1][12] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][12] = sao_param_hls_curr_sao_offset_val_0_3_o_r;
    scalar_adr    [7][1][12] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 928) comb block-----//
    //s = 8; r = 0; a = 30;
    if (scalar_rdat_vld_r[8][0][30]) begin
        scalar_argdone [8][0][30] = 1;
    end
    scalar_adr    [8][0][30] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][30]) begin
        scalar_argVld [8][0][30] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [8][0][30] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 928) comb block-----//
    //s = 8; r = 0; a = 14;
    if (scalar_argAck [8][0][14]) begin
        scalar_argVld [8][0][14] = 0;
        scalar_argAckdone [8][0][14] = 1;
    end
    if (sao_param_hls_curr_sao_offset_val_0_4_o_ap_vld_r) begin
        scalar_argVld [8][0][14] = 1;
        scalar_argAckdone [8][0][14] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][14] = sao_param_hls_curr_sao_offset_val_0_4_o_r;
    scalar_adr    [8][0][14] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 930) comb block-----//
    //s = 8; r = 1; a = 14;
    if (scalar_argAck [8][1][14]) begin
        scalar_argVld [8][1][14] = 0;
        scalar_argAckdone [8][1][14] = 1;
    end
    if (sao_param_hls_curr_sao_offset_val_1_0_ap_vld_r) begin
        scalar_argVld [8][1][14] = 1;
        scalar_argAckdone [8][1][14] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][14] = sao_param_hls_curr_sao_offset_val_1_0_r;
    scalar_adr    [8][1][14] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 932) comb block-----//
    //s = 9; r = 0; a = 30;
    if (scalar_rdat_vld_r[9][0][30]) begin
        scalar_argdone [9][0][30] = 1;
    end
    scalar_adr    [9][0][30] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][30]) begin
        scalar_argVld [9][0][30] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [9][0][30] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 932) comb block-----//
    //s = 9; r = 0; a = 14;
    if (scalar_argAck [9][0][14]) begin
        scalar_argVld [9][0][14] = 0;
        scalar_argAckdone [9][0][14] = 1;
    end
    if (sao_param_hls_curr_sao_offset_val_1_1_o_ap_vld_r) begin
        scalar_argVld [9][0][14] = 1;
        scalar_argAckdone [9][0][14] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][14] = sao_param_hls_curr_sao_offset_val_1_1_o_r;
    scalar_adr    [9][0][14] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 934) comb block-----//
    //s = 9; r = 1; a = 30;
    if (scalar_rdat_vld_r[9][1][30]) begin
        scalar_argdone [9][1][30] = 1;
    end
    scalar_adr    [9][1][30] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][30]) begin
        scalar_argVld [9][1][30] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [9][1][30] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 934) comb block-----//
    //s = 9; r = 1; a = 14;
    if (scalar_argAck [9][1][14]) begin
        scalar_argVld [9][1][14] = 0;
        scalar_argAckdone [9][1][14] = 1;
    end
    if (sao_param_hls_curr_sao_offset_val_1_2_o_ap_vld_r) begin
        scalar_argVld [9][1][14] = 1;
        scalar_argAckdone [9][1][14] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][14] = sao_param_hls_curr_sao_offset_val_1_2_o_r;
    scalar_adr    [9][1][14] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 936) comb block-----//
    //s = 10; r = 1; a = 25;
    if (scalar_rdat_vld_r[10][1][25]) begin
        scalar_argdone [10][1][25] = 1;
    end
    scalar_adr    [10][1][25] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][25]) begin
        scalar_argVld [10][1][25] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [10][1][25] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 936) comb block-----//
    //s = 10; r = 1; a = 11;
    if (scalar_argAck [10][1][11]) begin
        scalar_argVld [10][1][11] = 0;
        scalar_argAckdone [10][1][11] = 1;
    end
    if (sao_param_hls_curr_sao_offset_val_1_3_o_ap_vld_r) begin
        scalar_argVld [10][1][11] = 1;
        scalar_argAckdone [10][1][11] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][11] = sao_param_hls_curr_sao_offset_val_1_3_o_r;
    scalar_adr    [10][1][11] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 938) comb block-----//
    //s = 10; r = 0; a = 26;
    if (scalar_rdat_vld_r[10][0][26]) begin
        scalar_argdone [10][0][26] = 1;
    end
    scalar_adr    [10][0][26] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][26]) begin
        scalar_argVld [10][0][26] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [10][0][26] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 938) comb block-----//
    //s = 10; r = 0; a = 12;
    if (scalar_argAck [10][0][12]) begin
        scalar_argVld [10][0][12] = 0;
        scalar_argAckdone [10][0][12] = 1;
    end
    if (sao_param_hls_curr_sao_offset_val_1_4_o_ap_vld_r) begin
        scalar_argVld [10][0][12] = 1;
        scalar_argAckdone [10][0][12] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][12] = sao_param_hls_curr_sao_offset_val_1_4_o_r;
    scalar_adr    [10][0][12] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 940) comb block-----//
    //s = 11; r = 0; a = 9;
    if (scalar_argAck [11][0][9]) begin
        scalar_argVld [11][0][9] = 0;
        scalar_argAckdone [11][0][9] = 1;
    end
    if (sao_param_hls_curr_sao_offset_val_2_0_ap_vld_r) begin
        scalar_argVld [11][0][9] = 1;
        scalar_argAckdone [11][0][9] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][0][9] = sao_param_hls_curr_sao_offset_val_2_0_r;
    scalar_adr    [11][0][9] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 942) comb block-----//
    //s = 11; r = 1; a = 34;
    if (scalar_rdat_vld_r[11][1][34]) begin
        scalar_argdone [11][1][34] = 1;
    end
    scalar_adr    [11][1][34] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][34]) begin
        scalar_argVld [11][1][34] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [11][1][34] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 942) comb block-----//
    //s = 11; r = 1; a = 9;
    if (scalar_argAck [11][1][9]) begin
        scalar_argVld [11][1][9] = 0;
        scalar_argAckdone [11][1][9] = 1;
    end
    if (sao_param_hls_curr_sao_offset_val_2_1_o_ap_vld_r) begin
        scalar_argVld [11][1][9] = 1;
        scalar_argAckdone [11][1][9] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][1][9] = sao_param_hls_curr_sao_offset_val_2_1_o_r;
    scalar_adr    [11][1][9] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 944) comb block-----//
    //s = 12; r = 1; a = 31;
    if (scalar_rdat_vld_r[12][1][31]) begin
        scalar_argdone [12][1][31] = 1;
    end
    scalar_adr    [12][1][31] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][31]) begin
        scalar_argVld [12][1][31] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [12][1][31] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 944) comb block-----//
    //s = 12; r = 1; a = 10;
    if (scalar_argAck [12][1][10]) begin
        scalar_argVld [12][1][10] = 0;
        scalar_argAckdone [12][1][10] = 1;
    end
    if (sao_param_hls_curr_sao_offset_val_2_2_o_ap_vld_r) begin
        scalar_argVld [12][1][10] = 1;
        scalar_argAckdone [12][1][10] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][10] = sao_param_hls_curr_sao_offset_val_2_2_o_r;
    scalar_adr    [12][1][10] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 946) comb block-----//
    //s = 12; r = 0; a = 33;
    if (scalar_rdat_vld_r[12][0][33]) begin
        scalar_argdone [12][0][33] = 1;
    end
    scalar_adr    [12][0][33] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][33]) begin
        scalar_argVld [12][0][33] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [12][0][33] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 946) comb block-----//
    //s = 12; r = 0; a = 11;
    if (scalar_argAck [12][0][11]) begin
        scalar_argVld [12][0][11] = 0;
        scalar_argAckdone [12][0][11] = 1;
    end
    if (sao_param_hls_curr_sao_offset_val_2_3_o_ap_vld_r) begin
        scalar_argVld [12][0][11] = 1;
        scalar_argAckdone [12][0][11] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][11] = sao_param_hls_curr_sao_offset_val_2_3_o_r;
    scalar_adr    [12][0][11] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 948) comb block-----//
    //s = 13; r = 0; a = 29;
    if (scalar_rdat_vld_r[13][0][29]) begin
        scalar_argdone [13][0][29] = 1;
    end
    scalar_adr    [13][0][29] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][29]) begin
        scalar_argVld [13][0][29] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [13][0][29] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 948) comb block-----//
    //s = 13; r = 1; a = 9;
    if (scalar_argAck [13][1][9]) begin
        scalar_argVld [13][1][9] = 0;
        scalar_argAckdone [13][1][9] = 1;
    end
    if (sao_param_hls_curr_sao_offset_val_2_4_o_ap_vld_r) begin
        scalar_argVld [13][1][9] = 1;
        scalar_argAckdone [13][1][9] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][9] = sao_param_hls_curr_sao_offset_val_2_4_o_r;
    scalar_adr    [13][1][9] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 952) comb block-----//
    //s = 14; r = 0; a = 11;
    if (scalar_argAck [14][0][11]) begin
        scalar_argVld [14][0][11] = 0;
        scalar_argAckdone [14][0][11] = 1;
    end
    if (sao_param_hls_curr_sao_eo_class_0_ap_vld_r) begin
        scalar_argVld [14][0][11] = 1;
        scalar_argAckdone [14][0][11] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][11] = sao_param_hls_curr_sao_eo_class_0_r;
    scalar_adr    [14][0][11] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 953) comb block-----//
    //s = 14; r = 1; a = 30;
    if (scalar_rdat_vld_r[14][1][30]) begin
        scalar_argdone [14][1][30] = 1;
    end
    scalar_adr    [14][1][30] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][30]) begin
        scalar_argVld [14][1][30] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [14][1][30] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 953) comb block-----//
    //s = 14; r = 1; a = 11;
    if (scalar_argAck [14][1][11]) begin
        scalar_argVld [14][1][11] = 0;
        scalar_argAckdone [14][1][11] = 1;
    end
    if (sao_param_hls_curr_sao_eo_class_1_o_ap_vld_r) begin
        scalar_argVld [14][1][11] = 1;
        scalar_argAckdone [14][1][11] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][11] = sao_param_hls_curr_sao_eo_class_1_o_r;
    scalar_adr    [14][1][11] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 954) comb block-----//
    //s = 14; r = 0; a = 12;
    if (scalar_argAck [14][0][12]) begin
        scalar_argVld [14][0][12] = 0;
        scalar_argAckdone [14][0][12] = 1;
    end
    if (sao_param_hls_curr_sao_eo_class_2_ap_vld_r) begin
        scalar_argVld [14][0][12] = 1;
        scalar_argAckdone [14][0][12] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][12] = sao_param_hls_curr_sao_eo_class_2_r;
    scalar_adr    [14][0][12] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 956) comb block-----//
    //s = 15; r = 0; a = 27;
    if (scalar_rdat_vld_r[15][0][27]) begin
        scalar_argdone [15][0][27] = 1;
    end
    scalar_adr    [15][0][27] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][27]) begin
        scalar_argVld [15][0][27] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [15][0][27] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 956) comb block-----//
    //s = 15; r = 0; a = 10;
    if (scalar_argAck [15][0][10]) begin
        scalar_argVld [15][0][10] = 0;
        scalar_argAckdone [15][0][10] = 1;
    end
    if (sao_param_hls_curr_sao_type_idx_0_o_ap_vld_r) begin
        scalar_argVld [15][0][10] = 1;
        scalar_argAckdone [15][0][10] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][10] = sao_param_hls_curr_sao_type_idx_0_o_r;
    scalar_adr    [15][0][10] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 957) comb block-----//
    //s = 15; r = 1; a = 27;
    if (scalar_rdat_vld_r[15][1][27]) begin
        scalar_argdone [15][1][27] = 1;
    end
    scalar_adr    [15][1][27] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][27]) begin
        scalar_argVld [15][1][27] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [15][1][27] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 957) comb block-----//
    //s = 15; r = 1; a = 10;
    if (scalar_argAck [15][1][10]) begin
        scalar_argVld [15][1][10] = 0;
        scalar_argAckdone [15][1][10] = 1;
    end
    if (sao_param_hls_curr_sao_type_idx_1_o_ap_vld_r) begin
        scalar_argVld [15][1][10] = 1;
        scalar_argAckdone [15][1][10] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][10] = sao_param_hls_curr_sao_type_idx_1_o_r;
    scalar_adr    [15][1][10] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 958) comb block-----//
    //s = 15; r = 0; a = 28;
    if (scalar_rdat_vld_r[15][0][28]) begin
        scalar_argdone [15][0][28] = 1;
    end
    scalar_adr    [15][0][28] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][28]) begin
        scalar_argVld [15][0][28] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [15][0][28] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 958) comb block-----//
    //s = 15; r = 0; a = 11;
    if (scalar_argAck [15][0][11]) begin
        scalar_argVld [15][0][11] = 0;
        scalar_argAckdone [15][0][11] = 1;
    end
    if (sao_param_hls_curr_sao_type_idx_2_o_ap_vld_r) begin
        scalar_argVld [15][0][11] = 1;
        scalar_argAckdone [15][0][11] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][11] = sao_param_hls_curr_sao_type_idx_2_o_r;
    scalar_adr    [15][0][11] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 960) comb block-----//
    //s = 16; r = 0; a = 7;
    if (scalar_argAck [16][0][7]) begin
        scalar_argVld [16][0][7] = 0;
        scalar_argAckdone [16][0][7] = 1;
    end
    if (sao_param_hls_curr_sao_sao_merge_left_flag_ap_vld_r) begin
        scalar_argVld [16][0][7] = 1;
        scalar_argAckdone [16][0][7] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][0][7] = sao_param_hls_curr_sao_sao_merge_left_flag_r;
    scalar_adr    [16][0][7] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 964) comb block-----//
    //s = 17; r = 0; a = 6;
    if (scalar_argAck [17][0][6]) begin
        scalar_argVld [17][0][6] = 0;
        scalar_argAckdone [17][0][6] = 1;
    end
    if (sao_param_hls_curr_sao_sao_merge_up_flag_ap_vld_r) begin
        scalar_argVld [17][0][6] = 1;
        scalar_argAckdone [17][0][6] = 0;
        ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION] = ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][0][6] = sao_param_hls_curr_sao_sao_merge_up_flag_r;
    scalar_adr    [17][0][6] = {ap_part_w[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 968) comb block-----//
    //s = 18; r = 0; a = 20;
    if (scalar_rdat_vld_r[18][0][20]) begin
        scalar_argdone [18][0][20] = 1;
    end
    scalar_adr    [18][0][20] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][20]) begin
        scalar_argVld [18][0][20] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [18][0][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 969) comb block-----//
    //s = 18; r = 1; a = 19;
    if (scalar_rdat_vld_r[18][1][19]) begin
        scalar_argdone [18][1][19] = 1;
    end
    scalar_adr    [18][1][19] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][19]) begin
        scalar_argVld [18][1][19] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [18][1][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 970) comb block-----//
    //s = 18; r = 0; a = 21;
    if (scalar_rdat_vld_r[18][0][21]) begin
        scalar_argdone [18][0][21] = 1;
    end
    scalar_adr    [18][0][21] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][21]) begin
        scalar_argVld [18][0][21] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [18][0][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 971) comb block-----//
    //s = 18; r = 1; a = 20;
    if (scalar_rdat_vld_r[18][1][20]) begin
        scalar_argdone [18][1][20] = 1;
    end
    scalar_adr    [18][1][20] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][20]) begin
        scalar_argVld [18][1][20] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [18][1][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 972) comb block-----//
    //s = 19; r = 0; a = 24;
    if (scalar_rdat_vld_r[19][0][24]) begin
        scalar_argdone [19][0][24] = 1;
    end
    scalar_adr    [19][0][24] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][24]) begin
        scalar_argVld [19][0][24] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [19][0][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 973) comb block-----//
    //s = 19; r = 1; a = 24;
    if (scalar_rdat_vld_r[19][1][24]) begin
        scalar_argdone [19][1][24] = 1;
    end
    scalar_adr    [19][1][24] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][24]) begin
        scalar_argVld [19][1][24] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [19][1][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 974) comb block-----//
    //s = 19; r = 0; a = 25;
    if (scalar_rdat_vld_r[19][0][25]) begin
        scalar_argdone [19][0][25] = 1;
    end
    scalar_adr    [19][0][25] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][25]) begin
        scalar_argVld [19][0][25] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [19][0][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 975) comb block-----//
    //s = 19; r = 1; a = 25;
    if (scalar_rdat_vld_r[19][1][25]) begin
        scalar_argdone [19][1][25] = 1;
    end
    scalar_adr    [19][1][25] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][25]) begin
        scalar_argVld [19][1][25] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [19][1][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 976) comb block-----//
    //s = 20; r = 1; a = 22;
    if (scalar_rdat_vld_r[20][1][22]) begin
        scalar_argdone [20][1][22] = 1;
    end
    scalar_adr    [20][1][22] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][22]) begin
        scalar_argVld [20][1][22] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [20][1][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 977) comb block-----//
    //s = 20; r = 0; a = 23;
    if (scalar_rdat_vld_r[20][0][23]) begin
        scalar_argdone [20][0][23] = 1;
    end
    scalar_adr    [20][0][23] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][23]) begin
        scalar_argVld [20][0][23] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [20][0][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 978) comb block-----//
    //s = 20; r = 1; a = 23;
    if (scalar_rdat_vld_r[20][1][23]) begin
        scalar_argdone [20][1][23] = 1;
    end
    scalar_adr    [20][1][23] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][23]) begin
        scalar_argVld [20][1][23] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [20][1][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 979) comb block-----//
    //s = 20; r = 0; a = 24;
    if (scalar_rdat_vld_r[20][0][24]) begin
        scalar_argdone [20][0][24] = 1;
    end
    scalar_adr    [20][0][24] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][24]) begin
        scalar_argVld [20][0][24] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [20][0][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 980) comb block-----//
    //s = 21; r = 0; a = 22;
    if (scalar_rdat_vld_r[21][0][22]) begin
        scalar_argdone [21][0][22] = 1;
    end
    scalar_adr    [21][0][22] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][22]) begin
        scalar_argVld [21][0][22] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [21][0][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 981) comb block-----//
    //s = 21; r = 1; a = 21;
    if (scalar_rdat_vld_r[21][1][21]) begin
        scalar_argdone [21][1][21] = 1;
    end
    scalar_adr    [21][1][21] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][21]) begin
        scalar_argVld [21][1][21] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [21][1][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 982) comb block-----//
    //s = 21; r = 0; a = 23;
    if (scalar_rdat_vld_r[21][0][23]) begin
        scalar_argdone [21][0][23] = 1;
    end
    scalar_adr    [21][0][23] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][23]) begin
        scalar_argVld [21][0][23] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [21][0][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 983) comb block-----//
    //s = 21; r = 1; a = 22;
    if (scalar_rdat_vld_r[21][1][22]) begin
        scalar_argdone [21][1][22] = 1;
    end
    scalar_adr    [21][1][22] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][22]) begin
        scalar_argVld [21][1][22] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [21][1][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 984) comb block-----//
    //s = 22; r = 0; a = 32;
    if (scalar_rdat_vld_r[22][0][32]) begin
        scalar_argdone [22][0][32] = 1;
    end
    scalar_adr    [22][0][32] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][32]) begin
        scalar_argVld [22][0][32] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [22][0][32] = 1;
    end

    //------READ (scalar, complete partition, global adr = 985) comb block-----//
    //s = 22; r = 1; a = 31;
    if (scalar_rdat_vld_r[22][1][31]) begin
        scalar_argdone [22][1][31] = 1;
    end
    scalar_adr    [22][1][31] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][31]) begin
        scalar_argVld [22][1][31] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [22][1][31] = 1;
    end

    //------READ (scalar, complete partition, global adr = 986) comb block-----//
    //s = 22; r = 0; a = 33;
    if (scalar_rdat_vld_r[22][0][33]) begin
        scalar_argdone [22][0][33] = 1;
    end
    scalar_adr    [22][0][33] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][33]) begin
        scalar_argVld [22][0][33] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [22][0][33] = 1;
    end

    //------READ (scalar, complete partition, global adr = 987) comb block-----//
    //s = 22; r = 1; a = 32;
    if (scalar_rdat_vld_r[22][1][32]) begin
        scalar_argdone [22][1][32] = 1;
    end
    scalar_adr    [22][1][32] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][32]) begin
        scalar_argVld [22][1][32] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [22][1][32] = 1;
    end

    //------READ (scalar, complete partition, global adr = 988) comb block-----//
    //s = 23; r = 0; a = 31;
    if (scalar_rdat_vld_r[23][0][31]) begin
        scalar_argdone [23][0][31] = 1;
    end
    scalar_adr    [23][0][31] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][31]) begin
        scalar_argVld [23][0][31] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [23][0][31] = 1;
    end

    //------READ (scalar, complete partition, global adr = 989) comb block-----//
    //s = 23; r = 1; a = 30;
    if (scalar_rdat_vld_r[23][1][30]) begin
        scalar_argdone [23][1][30] = 1;
    end
    scalar_adr    [23][1][30] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][30]) begin
        scalar_argVld [23][1][30] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [23][1][30] = 1;
    end

    //------READ (scalar, complete partition, global adr = 990) comb block-----//
    //s = 23; r = 0; a = 32;
    if (scalar_rdat_vld_r[23][0][32]) begin
        scalar_argdone [23][0][32] = 1;
    end
    scalar_adr    [23][0][32] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][32]) begin
        scalar_argVld [23][0][32] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [23][0][32] = 1;
    end

    //------READ (scalar, complete partition, global adr = 991) comb block-----//
    //s = 23; r = 1; a = 31;
    if (scalar_rdat_vld_r[23][1][31]) begin
        scalar_argdone [23][1][31] = 1;
    end
    scalar_adr    [23][1][31] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][31]) begin
        scalar_argVld [23][1][31] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [23][1][31] = 1;
    end

    //------READ (scalar, complete partition, global adr = 992) comb block-----//
    //s = 24; r = 0; a = 26;
    if (scalar_rdat_vld_r[24][0][26]) begin
        scalar_argdone [24][0][26] = 1;
    end
    scalar_adr    [24][0][26] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][26]) begin
        scalar_argVld [24][0][26] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [24][0][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 993) comb block-----//
    //s = 24; r = 1; a = 25;
    if (scalar_rdat_vld_r[24][1][25]) begin
        scalar_argdone [24][1][25] = 1;
    end
    scalar_adr    [24][1][25] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][25]) begin
        scalar_argVld [24][1][25] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [24][1][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 994) comb block-----//
    //s = 24; r = 0; a = 27;
    if (scalar_rdat_vld_r[24][0][27]) begin
        scalar_argdone [24][0][27] = 1;
    end
    scalar_adr    [24][0][27] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][27]) begin
        scalar_argVld [24][0][27] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [24][0][27] = 1;
    end

    //------READ (scalar, complete partition, global adr = 996) comb block-----//
    //s = 25; r = 1; a = 22;
    if (scalar_rdat_vld_r[25][1][22]) begin
        scalar_argdone [25][1][22] = 1;
    end
    scalar_adr    [25][1][22] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][22]) begin
        scalar_argVld [25][1][22] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [25][1][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 998) comb block-----//
    //s = 25; r = 0; a = 24;
    if (scalar_rdat_vld_r[25][0][24]) begin
        scalar_argdone [25][0][24] = 1;
    end
    scalar_adr    [25][0][24] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][24]) begin
        scalar_argVld [25][0][24] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [25][0][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1000) comb block-----//
    //s = 26; r = 0; a = 31;
    if (scalar_rdat_vld_r[26][0][31]) begin
        scalar_argdone [26][0][31] = 1;
    end
    scalar_adr    [26][0][31] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][31]) begin
        scalar_argVld [26][0][31] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [26][0][31] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1002) comb block-----//
    //s = 26; r = 1; a = 30;
    if (scalar_rdat_vld_r[26][1][30]) begin
        scalar_argdone [26][1][30] = 1;
    end
    scalar_adr    [26][1][30] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][30]) begin
        scalar_argVld [26][1][30] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [26][1][30] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1004) comb block-----//
    //s = 27; r = 0; a = 27;
    if (scalar_rdat_vld_r[27][0][27]) begin
        scalar_argdone [27][0][27] = 1;
    end
    scalar_adr    [27][0][27] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][27]) begin
        scalar_argVld [27][0][27] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [27][0][27] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1006) comb block-----//
    //s = 27; r = 1; a = 26;
    if (scalar_rdat_vld_r[27][1][26]) begin
        scalar_argdone [27][1][26] = 1;
    end
    scalar_adr    [27][1][26] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][26]) begin
        scalar_argVld [27][1][26] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [27][1][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1008) comb block-----//
    //s = 28; r = 0; a = 26;
    if (scalar_rdat_vld_r[28][0][26]) begin
        scalar_argdone [28][0][26] = 1;
    end
    scalar_adr    [28][0][26] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][26]) begin
        scalar_argVld [28][0][26] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [28][0][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1010) comb block-----//
    //s = 28; r = 1; a = 26;
    if (scalar_rdat_vld_r[28][1][26]) begin
        scalar_argdone [28][1][26] = 1;
    end
    scalar_adr    [28][1][26] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][26]) begin
        scalar_argVld [28][1][26] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [28][1][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1012) comb block-----//
    //s = 29; r = 0; a = 37;
    if (scalar_rdat_vld_r[29][0][37]) begin
        scalar_argdone [29][0][37] = 1;
    end
    scalar_adr    [29][0][37] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][37]) begin
        scalar_argVld [29][0][37] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [29][0][37] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1014) comb block-----//
    //s = 29; r = 1; a = 37;
    if (scalar_rdat_vld_r[29][1][37]) begin
        scalar_argdone [29][1][37] = 1;
    end
    scalar_adr    [29][1][37] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][37]) begin
        scalar_argVld [29][1][37] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [29][1][37] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1016) comb block-----//
    //s = 30; r = 0; a = 18;
    if (scalar_rdat_vld_r[30][0][18]) begin
        scalar_argdone [30][0][18] = 1;
    end
    scalar_adr    [30][0][18] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][0][18]) begin
        scalar_argVld [30][0][18] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [30][0][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1018) comb block-----//
    //s = 30; r = 1; a = 18;
    if (scalar_rdat_vld_r[30][1][18]) begin
        scalar_argdone [30][1][18] = 1;
    end
    scalar_adr    [30][1][18] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][18]) begin
        scalar_argVld [30][1][18] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [30][1][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1020) comb block-----//
    //s = 31; r = 1; a = 38;
    if (scalar_rdat_vld_r[31][1][38]) begin
        scalar_argdone [31][1][38] = 1;
    end
    scalar_adr    [31][1][38] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][38]) begin
        scalar_argVld [31][1][38] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [31][1][38] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1022) comb block-----//
    //s = 31; r = 0; a = 40;
    if (scalar_rdat_vld_r[31][0][40]) begin
        scalar_argdone [31][0][40] = 1;
    end
    scalar_adr    [31][0][40] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][40]) begin
        scalar_argVld [31][0][40] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [31][0][40] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1024) comb block-----//
    //s = 0; r = 1; a = 36;
    if (scalar_rdat_vld_r[0][1][36]) begin
        scalar_argdone [0][1][36] = 1;
    end
    scalar_adr    [0][1][36] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][1][36]) begin
        scalar_argVld [0][1][36] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [0][1][36] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1028) comb block-----//
    //s = 1; r = 1; a = 30;
    if (scalar_rdat_vld_r[1][1][30]) begin
        scalar_argdone [1][1][30] = 1;
    end
    scalar_adr    [1][1][30] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][30]) begin
        scalar_argVld [1][1][30] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [1][1][30] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1029) comb block-----//
    //s = 1; r = 0; a = 31;
    if (scalar_rdat_vld_r[1][0][31]) begin
        scalar_argdone [1][0][31] = 1;
    end
    scalar_adr    [1][0][31] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][31]) begin
        scalar_argVld [1][0][31] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [1][0][31] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1030) comb block-----//
    //s = 1; r = 1; a = 31;
    if (scalar_rdat_vld_r[1][1][31]) begin
        scalar_argdone [1][1][31] = 1;
    end
    scalar_adr    [1][1][31] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][31]) begin
        scalar_argVld [1][1][31] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [1][1][31] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1032) comb block-----//
    //s = 2; r = 1; a = 23;
    if (scalar_rdat_vld_r[2][1][23]) begin
        scalar_argdone [2][1][23] = 1;
    end
    scalar_adr    [2][1][23] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][23]) begin
        scalar_argVld [2][1][23] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [2][1][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1033) comb block-----//
    //s = 2; r = 0; a = 25;
    if (scalar_rdat_vld_r[2][0][25]) begin
        scalar_argdone [2][0][25] = 1;
    end
    scalar_adr    [2][0][25] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][25]) begin
        scalar_argVld [2][0][25] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [2][0][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1034) comb block-----//
    //s = 2; r = 1; a = 24;
    if (scalar_rdat_vld_r[2][1][24]) begin
        scalar_argdone [2][1][24] = 1;
    end
    scalar_adr    [2][1][24] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][24]) begin
        scalar_argVld [2][1][24] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [2][1][24] = 1;
    end

    //------READ (scalar, global adr = 1036) comb block-----//
    //s = 3; r = 1; a = 23;
    if (scalar_rdat_vld_r[3][1][23]) begin
        scalar_argdone [3][1][23] = 1;
    end
    scalar_adr[3][1][23] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][23]) begin
        scalar_argVld[3][1][23] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld[3][1][23] = 1;
    end

    //------READ (scalar, global adr = 1040) comb block-----//
    //s = 4; r = 1; a = 20;
    if (scalar_rdat_vld_r[4][1][20]) begin
        scalar_argdone [4][1][20] = 1;
    end
    scalar_adr[4][1][20] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][1][20]) begin
        scalar_argVld[4][1][20] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld[4][1][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1044) comb block-----//
    //s = 5; r = 1; a = 29;
    if (scalar_rdat_vld_r[5][1][29]) begin
        scalar_argdone [5][1][29] = 1;
    end
    scalar_adr    [5][1][29] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][29]) begin
        scalar_argVld [5][1][29] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [5][1][29] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1045) comb block-----//
    //s = 5; r = 0; a = 31;
    if (scalar_rdat_vld_r[5][0][31]) begin
        scalar_argdone [5][0][31] = 1;
    end
    scalar_adr    [5][0][31] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][31]) begin
        scalar_argVld [5][0][31] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [5][0][31] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1046) comb block-----//
    //s = 5; r = 1; a = 30;
    if (scalar_rdat_vld_r[5][1][30]) begin
        scalar_argdone [5][1][30] = 1;
    end
    scalar_adr    [5][1][30] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][30]) begin
        scalar_argVld [5][1][30] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [5][1][30] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1047) comb block-----//
    //s = 5; r = 0; a = 32;
    if (scalar_rdat_vld_r[5][0][32]) begin
        scalar_argdone [5][0][32] = 1;
    end
    scalar_adr    [5][0][32] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][32]) begin
        scalar_argVld [5][0][32] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [5][0][32] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1048) comb block-----//
    //s = 6; r = 0; a = 38;
    if (scalar_rdat_vld_r[6][0][38]) begin
        scalar_argdone [6][0][38] = 1;
    end
    scalar_adr    [6][0][38] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][38]) begin
        scalar_argVld [6][0][38] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [6][0][38] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1049) comb block-----//
    //s = 6; r = 1; a = 37;
    if (scalar_rdat_vld_r[6][1][37]) begin
        scalar_argdone [6][1][37] = 1;
    end
    scalar_adr    [6][1][37] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][37]) begin
        scalar_argVld [6][1][37] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [6][1][37] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1050) comb block-----//
    //s = 6; r = 0; a = 39;
    if (scalar_rdat_vld_r[6][0][39]) begin
        scalar_argdone [6][0][39] = 1;
    end
    scalar_adr    [6][0][39] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][39]) begin
        scalar_argVld [6][0][39] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [6][0][39] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1051) comb block-----//
    //s = 6; r = 1; a = 38;
    if (scalar_rdat_vld_r[6][1][38]) begin
        scalar_argdone [6][1][38] = 1;
    end
    scalar_adr    [6][1][38] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][38]) begin
        scalar_argVld [6][1][38] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [6][1][38] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1052) comb block-----//
    //s = 7; r = 1; a = 24;
    if (scalar_rdat_vld_r[7][1][24]) begin
        scalar_argdone [7][1][24] = 1;
    end
    scalar_adr    [7][1][24] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][24]) begin
        scalar_argVld [7][1][24] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [7][1][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1053) comb block-----//
    //s = 7; r = 0; a = 26;
    if (scalar_rdat_vld_r[7][0][26]) begin
        scalar_argdone [7][0][26] = 1;
    end
    scalar_adr    [7][0][26] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][26]) begin
        scalar_argVld [7][0][26] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [7][0][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1054) comb block-----//
    //s = 7; r = 1; a = 25;
    if (scalar_rdat_vld_r[7][1][25]) begin
        scalar_argdone [7][1][25] = 1;
    end
    scalar_adr    [7][1][25] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][25]) begin
        scalar_argVld [7][1][25] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [7][1][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1055) comb block-----//
    //s = 7; r = 0; a = 27;
    if (scalar_rdat_vld_r[7][0][27]) begin
        scalar_argdone [7][0][27] = 1;
    end
    scalar_adr    [7][0][27] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][27]) begin
        scalar_argVld [7][0][27] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [7][0][27] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1056) comb block-----//
    //s = 8; r = 1; a = 30;
    if (scalar_rdat_vld_r[8][1][30]) begin
        scalar_argdone [8][1][30] = 1;
    end
    scalar_adr    [8][1][30] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][30]) begin
        scalar_argVld [8][1][30] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [8][1][30] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1057) comb block-----//
    //s = 8; r = 0; a = 31;
    if (scalar_rdat_vld_r[8][0][31]) begin
        scalar_argdone [8][0][31] = 1;
    end
    scalar_adr    [8][0][31] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][31]) begin
        scalar_argVld [8][0][31] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [8][0][31] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1058) comb block-----//
    //s = 8; r = 1; a = 31;
    if (scalar_rdat_vld_r[8][1][31]) begin
        scalar_argdone [8][1][31] = 1;
    end
    scalar_adr    [8][1][31] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][31]) begin
        scalar_argVld [8][1][31] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [8][1][31] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1059) comb block-----//
    //s = 8; r = 0; a = 32;
    if (scalar_rdat_vld_r[8][0][32]) begin
        scalar_argdone [8][0][32] = 1;
    end
    scalar_adr    [8][0][32] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][32]) begin
        scalar_argVld [8][0][32] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [8][0][32] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1060) comb block-----//
    //s = 9; r = 0; a = 31;
    if (scalar_rdat_vld_r[9][0][31]) begin
        scalar_argdone [9][0][31] = 1;
    end
    scalar_adr    [9][0][31] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][31]) begin
        scalar_argVld [9][0][31] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [9][0][31] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1061) comb block-----//
    //s = 9; r = 1; a = 31;
    if (scalar_rdat_vld_r[9][1][31]) begin
        scalar_argdone [9][1][31] = 1;
    end
    scalar_adr    [9][1][31] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][31]) begin
        scalar_argVld [9][1][31] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [9][1][31] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1062) comb block-----//
    //s = 9; r = 0; a = 32;
    if (scalar_rdat_vld_r[9][0][32]) begin
        scalar_argdone [9][0][32] = 1;
    end
    scalar_adr    [9][0][32] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][32]) begin
        scalar_argVld [9][0][32] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [9][0][32] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1063) comb block-----//
    //s = 9; r = 1; a = 32;
    if (scalar_rdat_vld_r[9][1][32]) begin
        scalar_argdone [9][1][32] = 1;
    end
    scalar_adr    [9][1][32] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][32]) begin
        scalar_argVld [9][1][32] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [9][1][32] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1064) comb block-----//
    //s = 10; r = 1; a = 26;
    if (scalar_rdat_vld_r[10][1][26]) begin
        scalar_argdone [10][1][26] = 1;
    end
    scalar_adr    [10][1][26] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][26]) begin
        scalar_argVld [10][1][26] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [10][1][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1065) comb block-----//
    //s = 10; r = 0; a = 27;
    if (scalar_rdat_vld_r[10][0][27]) begin
        scalar_argdone [10][0][27] = 1;
    end
    scalar_adr    [10][0][27] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][27]) begin
        scalar_argVld [10][0][27] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [10][0][27] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1066) comb block-----//
    //s = 10; r = 1; a = 27;
    if (scalar_rdat_vld_r[10][1][27]) begin
        scalar_argdone [10][1][27] = 1;
    end
    scalar_adr    [10][1][27] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][27]) begin
        scalar_argVld [10][1][27] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [10][1][27] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1067) comb block-----//
    //s = 10; r = 0; a = 28;
    if (scalar_rdat_vld_r[10][0][28]) begin
        scalar_argdone [10][0][28] = 1;
    end
    scalar_adr    [10][0][28] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][28]) begin
        scalar_argVld [10][0][28] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [10][0][28] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1068) comb block-----//
    //s = 11; r = 0; a = 35;
    if (scalar_rdat_vld_r[11][0][35]) begin
        scalar_argdone [11][0][35] = 1;
    end
    scalar_adr    [11][0][35] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][35]) begin
        scalar_argVld [11][0][35] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [11][0][35] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1069) comb block-----//
    //s = 11; r = 1; a = 35;
    if (scalar_rdat_vld_r[11][1][35]) begin
        scalar_argdone [11][1][35] = 1;
    end
    scalar_adr    [11][1][35] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][35]) begin
        scalar_argVld [11][1][35] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [11][1][35] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1070) comb block-----//
    //s = 11; r = 0; a = 36;
    if (scalar_rdat_vld_r[11][0][36]) begin
        scalar_argdone [11][0][36] = 1;
    end
    scalar_adr    [11][0][36] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][36]) begin
        scalar_argVld [11][0][36] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [11][0][36] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1072) comb block-----//
    //s = 12; r = 1; a = 32;
    if (scalar_rdat_vld_r[12][1][32]) begin
        scalar_argdone [12][1][32] = 1;
    end
    scalar_adr    [12][1][32] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][32]) begin
        scalar_argVld [12][1][32] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [12][1][32] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1074) comb block-----//
    //s = 12; r = 0; a = 34;
    if (scalar_rdat_vld_r[12][0][34]) begin
        scalar_argdone [12][0][34] = 1;
    end
    scalar_adr    [12][0][34] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][34]) begin
        scalar_argVld [12][0][34] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [12][0][34] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1076) comb block-----//
    //s = 13; r = 1; a = 29;
    if (scalar_rdat_vld_r[13][1][29]) begin
        scalar_argdone [13][1][29] = 1;
    end
    scalar_adr    [13][1][29] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][29]) begin
        scalar_argVld [13][1][29] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [13][1][29] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1078) comb block-----//
    //s = 13; r = 0; a = 30;
    if (scalar_rdat_vld_r[13][0][30]) begin
        scalar_argdone [13][0][30] = 1;
    end
    scalar_adr    [13][0][30] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][30]) begin
        scalar_argVld [13][0][30] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [13][0][30] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1080) comb block-----//
    //s = 14; r = 0; a = 31;
    if (scalar_rdat_vld_r[14][0][31]) begin
        scalar_argdone [14][0][31] = 1;
    end
    scalar_adr    [14][0][31] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][31]) begin
        scalar_argVld [14][0][31] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [14][0][31] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1082) comb block-----//
    //s = 14; r = 1; a = 31;
    if (scalar_rdat_vld_r[14][1][31]) begin
        scalar_argdone [14][1][31] = 1;
    end
    scalar_adr    [14][1][31] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][31]) begin
        scalar_argVld [14][1][31] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [14][1][31] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1084) comb block-----//
    //s = 15; r = 1; a = 28;
    if (scalar_rdat_vld_r[15][1][28]) begin
        scalar_argdone [15][1][28] = 1;
    end
    scalar_adr    [15][1][28] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][28]) begin
        scalar_argVld [15][1][28] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [15][1][28] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1086) comb block-----//
    //s = 15; r = 0; a = 29;
    if (scalar_rdat_vld_r[15][0][29]) begin
        scalar_argdone [15][0][29] = 1;
    end
    scalar_adr    [15][0][29] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][29]) begin
        scalar_argVld [15][0][29] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [15][0][29] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1088) comb block-----//
    //s = 16; r = 0; a = 21;
    if (scalar_rdat_vld_r[16][0][21]) begin
        scalar_argdone [16][0][21] = 1;
    end
    scalar_adr    [16][0][21] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][21]) begin
        scalar_argVld [16][0][21] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [16][0][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1090) comb block-----//
    //s = 16; r = 1; a = 20;
    if (scalar_rdat_vld_r[16][1][20]) begin
        scalar_argdone [16][1][20] = 1;
    end
    scalar_adr    [16][1][20] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][20]) begin
        scalar_argVld [16][1][20] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [16][1][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1092) comb block-----//
    //s = 17; r = 1; a = 22;
    if (scalar_rdat_vld_r[17][1][22]) begin
        scalar_argdone [17][1][22] = 1;
    end
    scalar_adr    [17][1][22] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][22]) begin
        scalar_argVld [17][1][22] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [17][1][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1094) comb block-----//
    //s = 17; r = 0; a = 23;
    if (scalar_rdat_vld_r[17][0][23]) begin
        scalar_argdone [17][0][23] = 1;
    end
    scalar_adr    [17][0][23] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][23]) begin
        scalar_argVld [17][0][23] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [17][0][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1096) comb block-----//
    //s = 18; r = 0; a = 22;
    if (scalar_rdat_vld_r[18][0][22]) begin
        scalar_argdone [18][0][22] = 1;
    end
    scalar_adr    [18][0][22] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][22]) begin
        scalar_argVld [18][0][22] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [18][0][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1098) comb block-----//
    //s = 18; r = 1; a = 21;
    if (scalar_rdat_vld_r[18][1][21]) begin
        scalar_argdone [18][1][21] = 1;
    end
    scalar_adr    [18][1][21] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][21]) begin
        scalar_argVld [18][1][21] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [18][1][21] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1100) comb block-----//
    //s = 19; r = 0; a = 26;
    if (scalar_rdat_vld_r[19][0][26]) begin
        scalar_argdone [19][0][26] = 1;
    end
    scalar_adr    [19][0][26] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][26]) begin
        scalar_argVld [19][0][26] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [19][0][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1104) comb block-----//
    //s = 20; r = 1; a = 24;
    if (scalar_rdat_vld_r[20][1][24]) begin
        scalar_argdone [20][1][24] = 1;
    end
    scalar_adr    [20][1][24] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][24]) begin
        scalar_argVld [20][1][24] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [20][1][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1105) comb block-----//
    //s = 20; r = 0; a = 25;
    if (scalar_rdat_vld_r[20][0][25]) begin
        scalar_argdone [20][0][25] = 1;
    end
    scalar_adr    [20][0][25] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][25]) begin
        scalar_argVld [20][0][25] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [20][0][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1106) comb block-----//
    //s = 20; r = 1; a = 25;
    if (scalar_rdat_vld_r[20][1][25]) begin
        scalar_argdone [20][1][25] = 1;
    end
    scalar_adr    [20][1][25] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][25]) begin
        scalar_argVld [20][1][25] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [20][1][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1108) comb block-----//
    //s = 21; r = 0; a = 24;
    if (scalar_rdat_vld_r[21][0][24]) begin
        scalar_argdone [21][0][24] = 1;
    end
    scalar_adr    [21][0][24] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][24]) begin
        scalar_argVld [21][0][24] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [21][0][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1109) comb block-----//
    //s = 21; r = 1; a = 23;
    if (scalar_rdat_vld_r[21][1][23]) begin
        scalar_argdone [21][1][23] = 1;
    end
    scalar_adr    [21][1][23] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][23]) begin
        scalar_argVld [21][1][23] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [21][1][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1110) comb block-----//
    //s = 21; r = 0; a = 25;
    if (scalar_rdat_vld_r[21][0][25]) begin
        scalar_argdone [21][0][25] = 1;
    end
    scalar_adr    [21][0][25] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][25]) begin
        scalar_argVld [21][0][25] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [21][0][25] = 1;
    end

    //------READ (scalar, global adr = 1112) comb block-----//
    //s = 22; r = 0; a = 34;
    if (scalar_rdat_vld_r[22][0][34]) begin
        scalar_argdone [22][0][34] = 1;
    end
    scalar_adr[22][0][34] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][34]) begin
        scalar_argVld[22][0][34] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld[22][0][34] = 1;
    end

    //------READ (scalar, global adr = 1116) comb block-----//
    //s = 23; r = 0; a = 33;
    if (scalar_rdat_vld_r[23][0][33]) begin
        scalar_argdone [23][0][33] = 1;
    end
    scalar_adr[23][0][33] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][33]) begin
        scalar_argVld[23][0][33] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld[23][0][33] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1288) comb block-----//
    //s = 2; r = 0; a = 26;
    if (scalar_rdat_vld_r[2][0][26]) begin
        scalar_argdone [2][0][26] = 1;
    end
    scalar_adr    [2][0][26] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][26]) begin
        scalar_argVld [2][0][26] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [2][0][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1289) comb block-----//
    //s = 2; r = 1; a = 25;
    if (scalar_rdat_vld_r[2][1][25]) begin
        scalar_argdone [2][1][25] = 1;
    end
    scalar_adr    [2][1][25] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][25]) begin
        scalar_argVld [2][1][25] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [2][1][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1290) comb block-----//
    //s = 2; r = 0; a = 27;
    if (scalar_rdat_vld_r[2][0][27]) begin
        scalar_argdone [2][0][27] = 1;
    end
    scalar_adr    [2][0][27] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][27]) begin
        scalar_argVld [2][0][27] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld [2][0][27] = 1;
    end

    //------READ (scalar, global adr = 608) comb block-----//
    //s = 24; r = 1; a = 26;
    if (scalar_rdat_vld_r[24][1][26]) begin
        scalar_argdone [24][1][26] = 1;
    end
    scalar_adr[24][1][26] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][26]) begin
        scalar_argVld[24][1][26] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld[24][1][26] = 1;
    end

    //------READ (scalar, global adr = 604) comb block-----//
    //s = 23; r = 1; a = 32;
    if (scalar_rdat_vld_r[23][1][32]) begin
        scalar_argdone [23][1][32] = 1;
    end
    scalar_adr[23][1][32] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][32]) begin
        scalar_argVld[23][1][32] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld[23][1][32] = 1;
    end

    //------READ (scalar, global adr = 1524) comb block-----//
    //s = 29; r = 0; a = 38;
    if (scalar_rdat_vld_r[29][0][38]) begin
        scalar_argdone [29][0][38] = 1;
    end
    scalar_adr[29][0][38] = {ap_part[sao_param_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][38]) begin
        scalar_argVld[29][0][38] = 0;
    end
    if (ap_arb_reload_r[sao_param_hls]) begin
        scalar_argVld[29][0][38] = 1;
    end

    if (ap_arb_ret[sao_param_hls] & ~ap_arb_ret_r[sao_param_hls]) begin
        ap_arb_ret_running[sao_param_hls] = 1;
        sao_param_hls_ready = 0;
    end

    scalar_argAckdone_all[sao_param_hls] = scalar_argAckdone[31][1][10] &
                                                scalar_argAckdone[31][0][11] &
                                                scalar_argAckdone[31][1][11] &
                                                scalar_argAckdone[31][0][12] &
                                                scalar_argAckdone[0][1][13] &
                                                scalar_argAckdone[0][0][14] &
                                                scalar_argAckdone[0][1][14] &
                                                scalar_argAckdone[0][0][15] &
                                                scalar_argAckdone[1][0][7] &
                                                scalar_argAckdone[1][1][7] &
                                                scalar_argAckdone[1][0][8] &
                                                scalar_argAckdone[1][1][8] &
                                                scalar_argAckdone[2][1][5] &
                                                scalar_argAckdone[2][0][6] &
                                                scalar_argAckdone[2][1][6] &
                                                scalar_argAckdone[2][0][7] &
                                                scalar_argAckdone[3][1][4] &
                                                scalar_argAckdone[3][0][5] &
                                                scalar_argAckdone[3][1][5] &
                                                scalar_argAckdone[3][0][6] &
                                                scalar_argAckdone[4][0][8] &
                                                scalar_argAckdone[4][1][8] &
                                                scalar_argAckdone[4][0][9] &
                                                scalar_argAckdone[4][1][9] &
                                                scalar_argAckdone[5][0][14] &
                                                scalar_argAckdone[5][1][14] &
                                                scalar_argAckdone[5][0][15] &
                                                scalar_argAckdone[6][1][13] &
                                                scalar_argAckdone[6][0][14] &
                                                scalar_argAckdone[7][0][12] &
                                                scalar_argAckdone[7][1][12] &
                                                scalar_argAckdone[8][0][14] &
                                                scalar_argAckdone[8][1][14] &
                                                scalar_argAckdone[9][0][14] &
                                                scalar_argAckdone[9][1][14] &
                                                scalar_argAckdone[10][1][11] &
                                                scalar_argAckdone[10][0][12] &
                                                scalar_argAckdone[11][0][9] &
                                                scalar_argAckdone[11][1][9] &
                                                scalar_argAckdone[12][1][10] &
                                                scalar_argAckdone[12][0][11] &
                                                scalar_argAckdone[13][1][9] &
                                                scalar_argAckdone[14][0][11] &
                                                scalar_argAckdone[14][1][11] &
                                                scalar_argAckdone[14][0][12] &
                                                scalar_argAckdone[15][0][10] &
                                                scalar_argAckdone[15][1][10] &
                                                scalar_argAckdone[15][0][11] &
                                                scalar_argAckdone[16][0][7] &
                                                scalar_argAckdone[17][0][6];
    if (ap_arb_ret_running[sao_param_hls] & scalar_argAckdone_all[sao_param_hls] &~ ap_arb_reload_running_r[sao_param_hls]) begin
        ap_arb_reload[sao_param_hls] = 1;
        ap_arb_reload_running[sao_param_hls] = 1;
    end

    if (ap_arb_start[sao_param_hls] &~ ap_arb_start_r[sao_param_hls]) begin
        ap_arb_start_running[sao_param_hls] = 1;
    end

    if (ap_arb_start_running[sao_param_hls] & ~scalar_writing_892& ~scalar_writing_893& ~scalar_writing_894& ~scalar_writing_895& ~scalar_writing_896& ~scalar_writing_897& ~scalar_writing_898& ~scalar_writing_899& ~scalar_writing_900& ~scalar_writing_901& ~scalar_writing_902& ~scalar_writing_903& ~scalar_writing_904& ~scalar_writing_905& ~scalar_writing_906& ~scalar_writing_907& ~scalar_writing_908& ~scalar_writing_909& ~scalar_writing_910& ~scalar_writing_911& ~scalar_writing_912& ~scalar_writing_913& ~scalar_writing_914& ~scalar_writing_915& ~scalar_writing_922& ~scalar_writing_924& ~scalar_writing_926& ~scalar_writing_928& ~scalar_writing_932& ~scalar_writing_934& ~scalar_writing_936& ~scalar_writing_938& ~scalar_writing_942& ~scalar_writing_944& ~scalar_writing_946& ~scalar_writing_948& ~scalar_writing_953& ~scalar_writing_956& ~scalar_writing_957& ~scalar_writing_958& ~scalar_writing_608& ~scalar_writing_604) begin
        ap_arb_start_running[sao_param_hls] = 0;
        ap_arb_reload[sao_param_hls] = 1;
    end

    scalar_argdone_all[sao_param_hls] = scalar_argdone[31][1][36] &
                                                                scalar_argdone[31][0][38] &
                                                                scalar_argdone[31][1][37] &
                                                                scalar_argdone[31][0][39] &
                                                                scalar_argdone[0][1][34] &
                                                                scalar_argdone[0][0][35] &
                                                                scalar_argdone[0][1][35] &
                                                                scalar_argdone[0][0][36] &
                                                                scalar_argdone[1][1][28] &
                                                                scalar_argdone[1][0][29] &
                                                                scalar_argdone[1][1][29] &
                                                                scalar_argdone[1][0][30] &
                                                                scalar_argdone[2][1][21] &
                                                                scalar_argdone[2][0][23] &
                                                                scalar_argdone[2][1][22] &
                                                                scalar_argdone[2][0][24] &
                                                                scalar_argdone[3][1][21] &
                                                                scalar_argdone[3][0][23] &
                                                                scalar_argdone[3][1][22] &
                                                                scalar_argdone[3][0][24] &
                                                                scalar_argdone[4][1][18] &
                                                                scalar_argdone[4][0][19] &
                                                                scalar_argdone[4][1][19] &
                                                                scalar_argdone[4][0][20] &
                                                                scalar_argdone[6][1][36] &
                                                                scalar_argdone[7][1][23] &
                                                                scalar_argdone[7][0][25] &
                                                                scalar_argdone[8][0][30] &
                                                                scalar_argdone[9][0][30] &
                                                                scalar_argdone[9][1][30] &
                                                                scalar_argdone[10][1][25] &
                                                                scalar_argdone[10][0][26] &
                                                                scalar_argdone[11][1][34] &
                                                                scalar_argdone[12][1][31] &
                                                                scalar_argdone[12][0][33] &
                                                                scalar_argdone[13][0][29] &
                                                                scalar_argdone[14][1][30] &
                                                                scalar_argdone[15][0][27] &
                                                                scalar_argdone[15][1][27] &
                                                                scalar_argdone[15][0][28] &
                                                                scalar_argdone[18][0][20] &
                                                                scalar_argdone[18][1][19] &
                                                                scalar_argdone[18][0][21] &
                                                                scalar_argdone[18][1][20] &
                                                                scalar_argdone[19][0][24] &
                                                                scalar_argdone[19][1][24] &
                                                                scalar_argdone[19][0][25] &
                                                                scalar_argdone[19][1][25] &
                                                                scalar_argdone[20][1][22] &
                                                                scalar_argdone[20][0][23] &
                                                                scalar_argdone[20][1][23] &
                                                                scalar_argdone[20][0][24] &
                                                                scalar_argdone[21][0][22] &
                                                                scalar_argdone[21][1][21] &
                                                                scalar_argdone[21][0][23] &
                                                                scalar_argdone[21][1][22] &
                                                                scalar_argdone[22][0][32] &
                                                                scalar_argdone[22][1][31] &
                                                                scalar_argdone[22][0][33] &
                                                                scalar_argdone[22][1][32] &
                                                                scalar_argdone[23][0][31] &
                                                                scalar_argdone[23][1][30] &
                                                                scalar_argdone[23][0][32] &
                                                                scalar_argdone[23][1][31] &
                                                                scalar_argdone[24][0][26] &
                                                                scalar_argdone[24][1][25] &
                                                                scalar_argdone[24][0][27] &
                                                                scalar_argdone[25][1][22] &
                                                                scalar_argdone[25][0][24] &
                                                                scalar_argdone[26][0][31] &
                                                                scalar_argdone[26][1][30] &
                                                                scalar_argdone[27][0][27] &
                                                                scalar_argdone[27][1][26] &
                                                                scalar_argdone[28][0][26] &
                                                                scalar_argdone[28][1][26] &
                                                                scalar_argdone[29][0][37] &
                                                                scalar_argdone[29][1][37] &
                                                                scalar_argdone[30][0][18] &
                                                                scalar_argdone[30][1][18] &
                                                                scalar_argdone[31][1][38] &
                                                                scalar_argdone[31][0][40] &
                                                                scalar_argdone[0][1][36] &
                                                                scalar_argdone[1][1][30] &
                                                                scalar_argdone[1][0][31] &
                                                                scalar_argdone[1][1][31] &
                                                                scalar_argdone[2][1][23] &
                                                                scalar_argdone[2][0][25] &
                                                                scalar_argdone[2][1][24] &
                                                                scalar_argdone[3][1][23] &
                                                                scalar_argdone[4][1][20] &
                                                                scalar_argdone[5][1][29] &
                                                                scalar_argdone[5][0][31] &
                                                                scalar_argdone[5][1][30] &
                                                                scalar_argdone[5][0][32] &
                                                                scalar_argdone[6][0][38] &
                                                                scalar_argdone[6][1][37] &
                                                                scalar_argdone[6][0][39] &
                                                                scalar_argdone[6][1][38] &
                                                                scalar_argdone[7][1][24] &
                                                                scalar_argdone[7][0][26] &
                                                                scalar_argdone[7][1][25] &
                                                                scalar_argdone[7][0][27] &
                                                                scalar_argdone[8][1][30] &
                                                                scalar_argdone[8][0][31] &
                                                                scalar_argdone[8][1][31] &
                                                                scalar_argdone[8][0][32] &
                                                                scalar_argdone[9][0][31] &
                                                                scalar_argdone[9][1][31] &
                                                                scalar_argdone[9][0][32] &
                                                                scalar_argdone[9][1][32] &
                                                                scalar_argdone[10][1][26] &
                                                                scalar_argdone[10][0][27] &
                                                                scalar_argdone[10][1][27] &
                                                                scalar_argdone[10][0][28] &
                                                                scalar_argdone[11][0][35] &
                                                                scalar_argdone[11][1][35] &
                                                                scalar_argdone[11][0][36] &
                                                                scalar_argdone[12][1][32] &
                                                                scalar_argdone[12][0][34] &
                                                                scalar_argdone[13][1][29] &
                                                                scalar_argdone[13][0][30] &
                                                                scalar_argdone[14][0][31] &
                                                                scalar_argdone[14][1][31] &
                                                                scalar_argdone[15][1][28] &
                                                                scalar_argdone[15][0][29] &
                                                                scalar_argdone[16][0][21] &
                                                                scalar_argdone[16][1][20] &
                                                                scalar_argdone[17][1][22] &
                                                                scalar_argdone[17][0][23] &
                                                                scalar_argdone[18][0][22] &
                                                                scalar_argdone[18][1][21] &
                                                                scalar_argdone[19][0][26] &
                                                                scalar_argdone[20][1][24] &
                                                                scalar_argdone[20][0][25] &
                                                                scalar_argdone[20][1][25] &
                                                                scalar_argdone[21][0][24] &
                                                                scalar_argdone[21][1][23] &
                                                                scalar_argdone[21][0][25] &
                                                                scalar_argdone[22][0][34] &
                                                                scalar_argdone[23][0][33] &
                                                                scalar_argdone[2][0][26] &
                                                                scalar_argdone[2][1][25] &
                                                                scalar_argdone[2][0][27] &
                                                                scalar_argdone[24][1][26] &
                                                                scalar_argdone[23][1][32] &
                                                                scalar_argdone[29][0][38];

    if (scalar_argdone_all_r[sao_param_hls]) begin
        scalar_argdone[31][1][36] = 0;
        scalar_argdone[31][0][38] = 0;
        scalar_argdone[31][1][37] = 0;
        scalar_argdone[31][0][39] = 0;
        scalar_argdone[0][1][34] = 0;
        scalar_argdone[0][0][35] = 0;
        scalar_argdone[0][1][35] = 0;
        scalar_argdone[0][0][36] = 0;
        scalar_argdone[1][1][28] = 0;
        scalar_argdone[1][0][29] = 0;
        scalar_argdone[1][1][29] = 0;
        scalar_argdone[1][0][30] = 0;
        scalar_argdone[2][1][21] = 0;
        scalar_argdone[2][0][23] = 0;
        scalar_argdone[2][1][22] = 0;
        scalar_argdone[2][0][24] = 0;
        scalar_argdone[3][1][21] = 0;
        scalar_argdone[3][0][23] = 0;
        scalar_argdone[3][1][22] = 0;
        scalar_argdone[3][0][24] = 0;
        scalar_argdone[4][1][18] = 0;
        scalar_argdone[4][0][19] = 0;
        scalar_argdone[4][1][19] = 0;
        scalar_argdone[4][0][20] = 0;
        scalar_argdone[6][1][36] = 0;
        scalar_argdone[7][1][23] = 0;
        scalar_argdone[7][0][25] = 0;
        scalar_argdone[8][0][30] = 0;
        scalar_argdone[9][0][30] = 0;
        scalar_argdone[9][1][30] = 0;
        scalar_argdone[10][1][25] = 0;
        scalar_argdone[10][0][26] = 0;
        scalar_argdone[11][1][34] = 0;
        scalar_argdone[12][1][31] = 0;
        scalar_argdone[12][0][33] = 0;
        scalar_argdone[13][0][29] = 0;
        scalar_argdone[14][1][30] = 0;
        scalar_argdone[15][0][27] = 0;
        scalar_argdone[15][1][27] = 0;
        scalar_argdone[15][0][28] = 0;
        scalar_argdone[18][0][20] = 0;
        scalar_argdone[18][1][19] = 0;
        scalar_argdone[18][0][21] = 0;
        scalar_argdone[18][1][20] = 0;
        scalar_argdone[19][0][24] = 0;
        scalar_argdone[19][1][24] = 0;
        scalar_argdone[19][0][25] = 0;
        scalar_argdone[19][1][25] = 0;
        scalar_argdone[20][1][22] = 0;
        scalar_argdone[20][0][23] = 0;
        scalar_argdone[20][1][23] = 0;
        scalar_argdone[20][0][24] = 0;
        scalar_argdone[21][0][22] = 0;
        scalar_argdone[21][1][21] = 0;
        scalar_argdone[21][0][23] = 0;
        scalar_argdone[21][1][22] = 0;
        scalar_argdone[22][0][32] = 0;
        scalar_argdone[22][1][31] = 0;
        scalar_argdone[22][0][33] = 0;
        scalar_argdone[22][1][32] = 0;
        scalar_argdone[23][0][31] = 0;
        scalar_argdone[23][1][30] = 0;
        scalar_argdone[23][0][32] = 0;
        scalar_argdone[23][1][31] = 0;
        scalar_argdone[24][0][26] = 0;
        scalar_argdone[24][1][25] = 0;
        scalar_argdone[24][0][27] = 0;
        scalar_argdone[25][1][22] = 0;
        scalar_argdone[25][0][24] = 0;
        scalar_argdone[26][0][31] = 0;
        scalar_argdone[26][1][30] = 0;
        scalar_argdone[27][0][27] = 0;
        scalar_argdone[27][1][26] = 0;
        scalar_argdone[28][0][26] = 0;
        scalar_argdone[28][1][26] = 0;
        scalar_argdone[29][0][37] = 0;
        scalar_argdone[29][1][37] = 0;
        scalar_argdone[30][0][18] = 0;
        scalar_argdone[30][1][18] = 0;
        scalar_argdone[31][1][38] = 0;
        scalar_argdone[31][0][40] = 0;
        scalar_argdone[0][1][36] = 0;
        scalar_argdone[1][1][30] = 0;
        scalar_argdone[1][0][31] = 0;
        scalar_argdone[1][1][31] = 0;
        scalar_argdone[2][1][23] = 0;
        scalar_argdone[2][0][25] = 0;
        scalar_argdone[2][1][24] = 0;
        scalar_argdone[3][1][23] = 0;
        scalar_argdone[4][1][20] = 0;
        scalar_argdone[5][1][29] = 0;
        scalar_argdone[5][0][31] = 0;
        scalar_argdone[5][1][30] = 0;
        scalar_argdone[5][0][32] = 0;
        scalar_argdone[6][0][38] = 0;
        scalar_argdone[6][1][37] = 0;
        scalar_argdone[6][0][39] = 0;
        scalar_argdone[6][1][38] = 0;
        scalar_argdone[7][1][24] = 0;
        scalar_argdone[7][0][26] = 0;
        scalar_argdone[7][1][25] = 0;
        scalar_argdone[7][0][27] = 0;
        scalar_argdone[8][1][30] = 0;
        scalar_argdone[8][0][31] = 0;
        scalar_argdone[8][1][31] = 0;
        scalar_argdone[8][0][32] = 0;
        scalar_argdone[9][0][31] = 0;
        scalar_argdone[9][1][31] = 0;
        scalar_argdone[9][0][32] = 0;
        scalar_argdone[9][1][32] = 0;
        scalar_argdone[10][1][26] = 0;
        scalar_argdone[10][0][27] = 0;
        scalar_argdone[10][1][27] = 0;
        scalar_argdone[10][0][28] = 0;
        scalar_argdone[11][0][35] = 0;
        scalar_argdone[11][1][35] = 0;
        scalar_argdone[11][0][36] = 0;
        scalar_argdone[12][1][32] = 0;
        scalar_argdone[12][0][34] = 0;
        scalar_argdone[13][1][29] = 0;
        scalar_argdone[13][0][30] = 0;
        scalar_argdone[14][0][31] = 0;
        scalar_argdone[14][1][31] = 0;
        scalar_argdone[15][1][28] = 0;
        scalar_argdone[15][0][29] = 0;
        scalar_argdone[16][0][21] = 0;
        scalar_argdone[16][1][20] = 0;
        scalar_argdone[17][1][22] = 0;
        scalar_argdone[17][0][23] = 0;
        scalar_argdone[18][0][22] = 0;
        scalar_argdone[18][1][21] = 0;
        scalar_argdone[19][0][26] = 0;
        scalar_argdone[20][1][24] = 0;
        scalar_argdone[20][0][25] = 0;
        scalar_argdone[20][1][25] = 0;
        scalar_argdone[21][0][24] = 0;
        scalar_argdone[21][1][23] = 0;
        scalar_argdone[21][0][25] = 0;
        scalar_argdone[22][0][34] = 0;
        scalar_argdone[23][0][33] = 0;
        scalar_argdone[2][0][26] = 0;
        scalar_argdone[2][1][25] = 0;
        scalar_argdone[2][0][27] = 0;
        scalar_argdone[24][1][26] = 0;
        scalar_argdone[23][1][32] = 0;
        scalar_argdone[29][0][38] = 0;

        if (ap_arb_start_r[sao_param_hls] & ~ap_running_r[sao_param_hls]) begin
            ap_start[sao_param_hls] = 1;
            ap_running[sao_param_hls] = 1;
        end
        else if (ap_arb_ret_running_r[sao_param_hls]) begin
            ap_arb_ret_running[sao_param_hls] = 0;
            ap_arb_reload_running[sao_param_hls] = 0;
        end
    end

    if (ap_start_r[sao_param_hls] & ap_ready_r[sao_param_hls]) begin
        ap_start[sao_param_hls] = 0;
    end

    if (ap_done_r[sao_param_hls]) begin
        ap_running[sao_param_hls] = 0;
    end
`endif
    //============================================================
    //xmem_copy_mvfield_hls       (f = 38)
    //============================================================
`ifdef enable_connect_xmem_copy_mvfield_hls
    //------WRITE (array range, global adr = 286240, width=16, addr_width=32) -----//
    //s = 0; a = 151;
    array_argVld [0][151] = xmem_copy_mvfield_hls_tab_mvf_mv_0_x_EN_A & (xmem_copy_mvfield_hls_tab_mvf_mv_0_x_WEN_A != 0);
    array_adr    [0][151] = xmem_copy_mvfield_hls_tab_mvf_mv_0_x_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][151] = xmem_copy_mvfield_hls_tab_mvf_mv_0_x_Din_A;

    //------READ (array range, global adr = 286240, width=16, addr_width=32) -----//
    //s = 0; a = 310;
    xmem_copy_mvfield_hls_tab_mvf_mv_0_x_Dout_A = array_rdat  [0][310];
    //found a write signal pair
    array_argVld [0][310] = xmem_copy_mvfield_hls_tab_mvf_mv_0_x_EN_A & (xmem_copy_mvfield_hls_tab_mvf_mv_0_x_WEN_A == 0);
    array_adr    [0][310] = xmem_copy_mvfield_hls_tab_mvf_mv_0_x_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286244, width=16, addr_width=32) -----//
    //s = 0; a = 152;
    array_argVld [0][152] = xmem_copy_mvfield_hls_tab_mvf_mv_0_y_EN_A & (xmem_copy_mvfield_hls_tab_mvf_mv_0_y_WEN_A != 0);
    array_adr    [0][152] = xmem_copy_mvfield_hls_tab_mvf_mv_0_y_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][152] = xmem_copy_mvfield_hls_tab_mvf_mv_0_y_Din_A;

    //------READ (array range, global adr = 286244, width=16, addr_width=32) -----//
    //s = 0; a = 311;
    xmem_copy_mvfield_hls_tab_mvf_mv_0_y_Dout_A = array_rdat  [0][311];
    //found a write signal pair
    array_argVld [0][311] = xmem_copy_mvfield_hls_tab_mvf_mv_0_y_EN_A & (xmem_copy_mvfield_hls_tab_mvf_mv_0_y_WEN_A == 0);
    array_adr    [0][311] = xmem_copy_mvfield_hls_tab_mvf_mv_0_y_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286248, width=16, addr_width=32) -----//
    //s = 0; a = 153;
    array_argVld [0][153] = xmem_copy_mvfield_hls_tab_mvf_mv_1_x_EN_A & (xmem_copy_mvfield_hls_tab_mvf_mv_1_x_WEN_A != 0);
    array_adr    [0][153] = xmem_copy_mvfield_hls_tab_mvf_mv_1_x_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][153] = xmem_copy_mvfield_hls_tab_mvf_mv_1_x_Din_A;

    //------READ (array range, global adr = 286248, width=16, addr_width=32) -----//
    //s = 0; a = 312;
    xmem_copy_mvfield_hls_tab_mvf_mv_1_x_Dout_A = array_rdat  [0][312];
    //found a write signal pair
    array_argVld [0][312] = xmem_copy_mvfield_hls_tab_mvf_mv_1_x_EN_A & (xmem_copy_mvfield_hls_tab_mvf_mv_1_x_WEN_A == 0);
    array_adr    [0][312] = xmem_copy_mvfield_hls_tab_mvf_mv_1_x_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286252, width=16, addr_width=32) -----//
    //s = 0; a = 154;
    array_argVld [0][154] = xmem_copy_mvfield_hls_tab_mvf_mv_1_y_EN_A & (xmem_copy_mvfield_hls_tab_mvf_mv_1_y_WEN_A != 0);
    array_adr    [0][154] = xmem_copy_mvfield_hls_tab_mvf_mv_1_y_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][154] = xmem_copy_mvfield_hls_tab_mvf_mv_1_y_Din_A;

    //------READ (array range, global adr = 286252, width=16, addr_width=32) -----//
    //s = 0; a = 313;
    xmem_copy_mvfield_hls_tab_mvf_mv_1_y_Dout_A = array_rdat  [0][313];
    //found a write signal pair
    array_argVld [0][313] = xmem_copy_mvfield_hls_tab_mvf_mv_1_y_EN_A & (xmem_copy_mvfield_hls_tab_mvf_mv_1_y_WEN_A == 0);
    array_adr    [0][313] = xmem_copy_mvfield_hls_tab_mvf_mv_1_y_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286256, width=32, addr_width=32) -----//
    //s = 0; a = 155;
    array_argVld [0][155] = xmem_copy_mvfield_hls_tab_mvf_poc_0_EN_A & (xmem_copy_mvfield_hls_tab_mvf_poc_0_WEN_A != 0);
    array_adr    [0][155] = xmem_copy_mvfield_hls_tab_mvf_poc_0_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][155] = xmem_copy_mvfield_hls_tab_mvf_poc_0_Din_A;

    //------READ (array range, global adr = 286256, width=32, addr_width=32) -----//
    //s = 0; a = 314;
    xmem_copy_mvfield_hls_tab_mvf_poc_0_Dout_A = array_rdat  [0][314];
    //found a write signal pair
    array_argVld [0][314] = xmem_copy_mvfield_hls_tab_mvf_poc_0_EN_A & (xmem_copy_mvfield_hls_tab_mvf_poc_0_WEN_A == 0);
    array_adr    [0][314] = xmem_copy_mvfield_hls_tab_mvf_poc_0_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286260, width=32, addr_width=32) -----//
    //s = 0; a = 156;
    array_argVld [0][156] = xmem_copy_mvfield_hls_tab_mvf_poc_1_EN_A & (xmem_copy_mvfield_hls_tab_mvf_poc_1_WEN_A != 0);
    array_adr    [0][156] = xmem_copy_mvfield_hls_tab_mvf_poc_1_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][156] = xmem_copy_mvfield_hls_tab_mvf_poc_1_Din_A;

    //------READ (array range, global adr = 286260, width=32, addr_width=32) -----//
    //s = 0; a = 315;
    xmem_copy_mvfield_hls_tab_mvf_poc_1_Dout_A = array_rdat  [0][315];
    //found a write signal pair
    array_argVld [0][315] = xmem_copy_mvfield_hls_tab_mvf_poc_1_EN_A & (xmem_copy_mvfield_hls_tab_mvf_poc_1_WEN_A == 0);
    array_adr    [0][315] = xmem_copy_mvfield_hls_tab_mvf_poc_1_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286264, width=8, addr_width=32) -----//
    //s = 0; a = 157;
    array_argVld [0][157] = xmem_copy_mvfield_hls_tab_mvf_ref_idx_0_EN_A & (xmem_copy_mvfield_hls_tab_mvf_ref_idx_0_WEN_A != 0);
    array_adr    [0][157] = xmem_copy_mvfield_hls_tab_mvf_ref_idx_0_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][157] = xmem_copy_mvfield_hls_tab_mvf_ref_idx_0_Din_A;

    //------READ (array range, global adr = 286264, width=8, addr_width=32) -----//
    //s = 0; a = 316;
    xmem_copy_mvfield_hls_tab_mvf_ref_idx_0_Dout_A = array_rdat  [0][316];
    //found a write signal pair
    array_argVld [0][316] = xmem_copy_mvfield_hls_tab_mvf_ref_idx_0_EN_A & (xmem_copy_mvfield_hls_tab_mvf_ref_idx_0_WEN_A == 0);
    array_adr    [0][316] = xmem_copy_mvfield_hls_tab_mvf_ref_idx_0_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286268, width=8, addr_width=32) -----//
    //s = 0; a = 158;
    array_argVld [0][158] = xmem_copy_mvfield_hls_tab_mvf_ref_idx_1_EN_A & (xmem_copy_mvfield_hls_tab_mvf_ref_idx_1_WEN_A != 0);
    array_adr    [0][158] = xmem_copy_mvfield_hls_tab_mvf_ref_idx_1_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][158] = xmem_copy_mvfield_hls_tab_mvf_ref_idx_1_Din_A;

    //------READ (array range, global adr = 286268, width=8, addr_width=32) -----//
    //s = 0; a = 317;
    xmem_copy_mvfield_hls_tab_mvf_ref_idx_1_Dout_A = array_rdat  [0][317];
    //found a write signal pair
    array_argVld [0][317] = xmem_copy_mvfield_hls_tab_mvf_ref_idx_1_EN_A & (xmem_copy_mvfield_hls_tab_mvf_ref_idx_1_WEN_A == 0);
    array_adr    [0][317] = xmem_copy_mvfield_hls_tab_mvf_ref_idx_1_Addr_A * 32;  //struct_size: 32

    //------READ (scalar, global adr = 784) comb block-----//
    //s = 4; r = 0; a = 21;
    if (scalar_rdat_vld_r[4][0][21]) begin
        scalar_argdone [4][0][21] = 1;
    end
    scalar_adr[4][0][21] = {ap_part[xmem_copy_mvfield_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][21]) begin
        scalar_argVld[4][0][21] = 0;
    end
    if (ap_arb_reload_r[xmem_copy_mvfield_hls]) begin
        scalar_argVld[4][0][21] = 1;
    end

    //------READ (scalar, global adr = 788) comb block-----//
    //s = 5; r = 1; a = 31;
    if (scalar_rdat_vld_r[5][1][31]) begin
        scalar_argdone [5][1][31] = 1;
    end
    scalar_adr[5][1][31] = {ap_part[xmem_copy_mvfield_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][31]) begin
        scalar_argVld[5][1][31] = 0;
    end
    if (ap_arb_reload_r[xmem_copy_mvfield_hls]) begin
        scalar_argVld[5][1][31] = 1;
    end

    //------READ (scalar, global adr = 792) comb block-----//
    //s = 6; r = 1; a = 39;
    if (scalar_rdat_vld_r[6][1][39]) begin
        scalar_argdone [6][1][39] = 1;
    end
    scalar_adr[6][1][39] = {ap_part[xmem_copy_mvfield_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][39]) begin
        scalar_argVld[6][1][39] = 0;
    end
    if (ap_arb_reload_r[xmem_copy_mvfield_hls]) begin
        scalar_argVld[6][1][39] = 1;
    end

    //------READ (scalar, global adr = 796) comb block-----//
    //s = 7; r = 0; a = 28;
    if (scalar_rdat_vld_r[7][0][28]) begin
        scalar_argdone [7][0][28] = 1;
    end
    scalar_adr[7][0][28] = {ap_part[xmem_copy_mvfield_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][28]) begin
        scalar_argVld[7][0][28] = 0;
    end
    if (ap_arb_reload_r[xmem_copy_mvfield_hls]) begin
        scalar_argVld[7][0][28] = 1;
    end

    //------READ (scalar, global adr = 800) comb block-----//
    //s = 8; r = 0; a = 33;
    if (scalar_rdat_vld_r[8][0][33]) begin
        scalar_argdone [8][0][33] = 1;
    end
    scalar_adr[8][0][33] = {ap_part[xmem_copy_mvfield_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][33]) begin
        scalar_argVld[8][0][33] = 0;
    end
    if (ap_arb_reload_r[xmem_copy_mvfield_hls]) begin
        scalar_argVld[8][0][33] = 1;
    end

    //------READ (scalar, global adr = 804) comb block-----//
    //s = 9; r = 0; a = 34;
    if (scalar_rdat_vld_r[9][0][34]) begin
        scalar_argdone [9][0][34] = 1;
    end
    scalar_adr[9][0][34] = {ap_part[xmem_copy_mvfield_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][34]) begin
        scalar_argVld[9][0][34] = 0;
    end
    if (ap_arb_reload_r[xmem_copy_mvfield_hls]) begin
        scalar_argVld[9][0][34] = 1;
    end

    //------READ (scalar, global adr = 808) comb block-----//
    //s = 10; r = 1; a = 29;
    if (scalar_rdat_vld_r[10][1][29]) begin
        scalar_argdone [10][1][29] = 1;
    end
    scalar_adr[10][1][29] = {ap_part[xmem_copy_mvfield_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][29]) begin
        scalar_argVld[10][1][29] = 0;
    end
    if (ap_arb_reload_r[xmem_copy_mvfield_hls]) begin
        scalar_argVld[10][1][29] = 1;
    end

    //------READ (scalar, global adr = 812) comb block-----//
    //s = 11; r = 0; a = 39;
    if (scalar_rdat_vld_r[11][0][39]) begin
        scalar_argdone [11][0][39] = 1;
    end
    scalar_adr[11][0][39] = {ap_part[xmem_copy_mvfield_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][39]) begin
        scalar_argVld[11][0][39] = 0;
    end
    if (ap_arb_reload_r[xmem_copy_mvfield_hls]) begin
        scalar_argVld[11][0][39] = 1;
    end

    xmem_copy_mvfield_hls_ready = array_argRdy[0][151]& array_argRdy[0][310]& array_argRdy[0][152]& array_argRdy[0][311]& array_argRdy[0][153]& array_argRdy[0][312]& array_argRdy[0][154]& array_argRdy[0][313]& array_argRdy[0][155]& array_argRdy[0][314]& array_argRdy[0][156]& array_argRdy[0][315]& array_argRdy[0][157]& array_argRdy[0][316]& array_argRdy[0][158]& array_argRdy[0][317] & ~ap_arb_reload_running_r[xmem_copy_mvfield_hls];
    array_ap_ce[0][151] = ap_ce[xmem_copy_mvfield_hls];
    array_ap_ce[0][310] = ap_ce[xmem_copy_mvfield_hls];
    array_ap_ce[0][152] = ap_ce[xmem_copy_mvfield_hls];
    array_ap_ce[0][311] = ap_ce[xmem_copy_mvfield_hls];
    array_ap_ce[0][153] = ap_ce[xmem_copy_mvfield_hls];
    array_ap_ce[0][312] = ap_ce[xmem_copy_mvfield_hls];
    array_ap_ce[0][154] = ap_ce[xmem_copy_mvfield_hls];
    array_ap_ce[0][313] = ap_ce[xmem_copy_mvfield_hls];
    array_ap_ce[0][155] = ap_ce[xmem_copy_mvfield_hls];
    array_ap_ce[0][314] = ap_ce[xmem_copy_mvfield_hls];
    array_ap_ce[0][156] = ap_ce[xmem_copy_mvfield_hls];
    array_ap_ce[0][315] = ap_ce[xmem_copy_mvfield_hls];
    array_ap_ce[0][157] = ap_ce[xmem_copy_mvfield_hls];
    array_ap_ce[0][316] = ap_ce[xmem_copy_mvfield_hls];
    array_ap_ce[0][158] = ap_ce[xmem_copy_mvfield_hls];
    array_ap_ce[0][317] = ap_ce[xmem_copy_mvfield_hls];

    if (ap_arb_ret[xmem_copy_mvfield_hls] & ~ap_arb_ret_r[xmem_copy_mvfield_hls]) begin
        ap_arb_ret_running[xmem_copy_mvfield_hls] = 1;
        xmem_copy_mvfield_hls_ready = 0;
    end

    scalar_argAckdone_all[xmem_copy_mvfield_hls] = 1;
    if (ap_arb_ret_running[xmem_copy_mvfield_hls] & scalar_argAckdone_all[xmem_copy_mvfield_hls] &~ ap_arb_reload_running_r[xmem_copy_mvfield_hls]) begin
        ap_arb_reload[xmem_copy_mvfield_hls] = 1;
        ap_arb_reload_running[xmem_copy_mvfield_hls] = 1;
    end

    if (ap_arb_start[xmem_copy_mvfield_hls] &~ ap_arb_start_r[xmem_copy_mvfield_hls]) begin
        ap_arb_start_running[xmem_copy_mvfield_hls] = 1;
    end

    if (ap_arb_start_running[xmem_copy_mvfield_hls] & ~scalar_writing_784& ~scalar_writing_788& ~scalar_writing_792& ~scalar_writing_796& ~scalar_writing_800& ~scalar_writing_804& ~scalar_writing_808& ~scalar_writing_812) begin
        ap_arb_start_running[xmem_copy_mvfield_hls] = 0;
        ap_arb_reload[xmem_copy_mvfield_hls] = 1;
    end

    scalar_argdone_all[xmem_copy_mvfield_hls] = scalar_argdone[4][0][21] &
                                                                scalar_argdone[5][1][31] &
                                                                scalar_argdone[6][1][39] &
                                                                scalar_argdone[7][0][28] &
                                                                scalar_argdone[8][0][33] &
                                                                scalar_argdone[9][0][34] &
                                                                scalar_argdone[10][1][29] &
                                                                scalar_argdone[11][0][39];

    if (scalar_argdone_all_r[xmem_copy_mvfield_hls]) begin
        scalar_argdone[4][0][21] = 0;
        scalar_argdone[5][1][31] = 0;
        scalar_argdone[6][1][39] = 0;
        scalar_argdone[7][0][28] = 0;
        scalar_argdone[8][0][33] = 0;
        scalar_argdone[9][0][34] = 0;
        scalar_argdone[10][1][29] = 0;
        scalar_argdone[11][0][39] = 0;

        if (ap_arb_start_r[xmem_copy_mvfield_hls] & ~ap_running_r[xmem_copy_mvfield_hls]) begin
            ap_start[xmem_copy_mvfield_hls] = 1;
            ap_running[xmem_copy_mvfield_hls] = 1;
        end
        else if (ap_arb_ret_running_r[xmem_copy_mvfield_hls]) begin
            ap_arb_ret_running[xmem_copy_mvfield_hls] = 0;
            ap_arb_reload_running[xmem_copy_mvfield_hls] = 0;
        end
    end

    if (ap_start_r[xmem_copy_mvfield_hls] & ap_ready_r[xmem_copy_mvfield_hls]) begin
        ap_start[xmem_copy_mvfield_hls] = 0;
    end

    if (ap_done_r[xmem_copy_mvfield_hls]) begin
        ap_running[xmem_copy_mvfield_hls] = 0;
    end
`endif
    //============================================================
    //intra_pred_libx265_hls       (f = 39)
    //============================================================
`ifdef enable_connect_intra_pred_libx265_hls
    //------READ (scalar, global adr = 488) comb block-----//
    //s = 26; r = 0; a = 29;
    if (scalar_rdat_vld_r[26][0][29]) begin
        scalar_argdone [26][0][29] = 1;
    end
    scalar_adr[26][0][29] = {ap_part[intra_pred_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][0][29]) begin
        scalar_argVld[26][0][29] = 0;
    end
    if (ap_arb_reload_r[intra_pred_libx265_hls]) begin
        scalar_argVld[26][0][29] = 1;
    end

    //------READ (scalar, global adr = 484) comb block-----//
    //s = 25; r = 1; a = 20;
    if (scalar_rdat_vld_r[25][1][20]) begin
        scalar_argdone [25][1][20] = 1;
    end
    scalar_adr[25][1][20] = {ap_part[intra_pred_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][20]) begin
        scalar_argVld[25][1][20] = 0;
    end
    if (ap_arb_reload_r[intra_pred_libx265_hls]) begin
        scalar_argVld[25][1][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 336) comb block-----//
    //s = 20; r = 1; a = 20;
    if (scalar_rdat_vld_r[20][1][20]) begin
        scalar_argdone [20][1][20] = 1;
    end
    scalar_adr    [20][1][20] = {ap_part[intra_pred_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][20]) begin
        scalar_argVld [20][1][20] = 0;
    end
    if (ap_arb_reload_r[intra_pred_libx265_hls]) begin
        scalar_argVld [20][1][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 340) comb block-----//
    //s = 21; r = 1; a = 18;
    if (scalar_rdat_vld_r[21][1][18]) begin
        scalar_argdone [21][1][18] = 1;
    end
    scalar_adr    [21][1][18] = {ap_part[intra_pred_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][18]) begin
        scalar_argVld [21][1][18] = 0;
    end
    if (ap_arb_reload_r[intra_pred_libx265_hls]) begin
        scalar_argVld [21][1][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 344) comb block-----//
    //s = 22; r = 1; a = 28;
    if (scalar_rdat_vld_r[22][1][28]) begin
        scalar_argdone [22][1][28] = 1;
    end
    scalar_adr    [22][1][28] = {ap_part[intra_pred_libx265_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][28]) begin
        scalar_argVld [22][1][28] = 0;
    end
    if (ap_arb_reload_r[intra_pred_libx265_hls]) begin
        scalar_argVld [22][1][28] = 1;
    end

    if (ap_arb_ret[intra_pred_libx265_hls] & ~ap_arb_ret_r[intra_pred_libx265_hls]) begin
        ap_arb_ret_running[intra_pred_libx265_hls] = 1;
        intra_pred_libx265_hls_ready = 0;
    end

    scalar_argAckdone_all[intra_pred_libx265_hls] = 1;
    if (ap_arb_ret_running[intra_pred_libx265_hls] & scalar_argAckdone_all[intra_pred_libx265_hls] &~ ap_arb_reload_running_r[intra_pred_libx265_hls]) begin
        ap_arb_reload[intra_pred_libx265_hls] = 1;
        ap_arb_reload_running[intra_pred_libx265_hls] = 1;
    end

    if (ap_arb_start[intra_pred_libx265_hls] &~ ap_arb_start_r[intra_pred_libx265_hls]) begin
        ap_arb_start_running[intra_pred_libx265_hls] = 1;
    end

    if (ap_arb_start_running[intra_pred_libx265_hls] & ~scalar_writing_488& ~scalar_writing_484) begin
        ap_arb_start_running[intra_pred_libx265_hls] = 0;
        ap_arb_reload[intra_pred_libx265_hls] = 1;
    end

    scalar_argdone_all[intra_pred_libx265_hls] = scalar_argdone[26][0][29] &
                                                                scalar_argdone[25][1][20] &
                                                                scalar_argdone[20][1][20] &
                                                                scalar_argdone[21][1][18] &
                                                                scalar_argdone[22][1][28];

    if (scalar_argdone_all_r[intra_pred_libx265_hls]) begin
        scalar_argdone[26][0][29] = 0;
        scalar_argdone[25][1][20] = 0;
        scalar_argdone[20][1][20] = 0;
        scalar_argdone[21][1][18] = 0;
        scalar_argdone[22][1][28] = 0;

        if (ap_arb_start_r[intra_pred_libx265_hls] & ~ap_running_r[intra_pred_libx265_hls]) begin
            ap_start[intra_pred_libx265_hls] = 1;
            ap_running[intra_pred_libx265_hls] = 1;
        end
        else if (ap_arb_ret_running_r[intra_pred_libx265_hls]) begin
            ap_arb_ret_running[intra_pred_libx265_hls] = 0;
            ap_arb_reload_running[intra_pred_libx265_hls] = 0;
        end
    end

    if (ap_start_r[intra_pred_libx265_hls] & ap_ready_r[intra_pred_libx265_hls]) begin
        ap_start[intra_pred_libx265_hls] = 0;
    end

    if (ap_done_r[intra_pred_libx265_hls]) begin
        ap_running[intra_pred_libx265_hls] = 0;
    end
`endif
    //============================================================
    //mv_mp_mode_mx_hls       (f = 40)
    //============================================================
`ifdef enable_connect_mv_mp_mode_mx_hls
    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 1; a = 33;
    if (scalar_rdat_vld_r[11][1][33]) begin
        scalar_argdone [11][1][33] = 1;
    end
    scalar_adr[11][1][33] = {ap_part[mv_mp_mode_mx_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][33]) begin
        scalar_argVld[11][1][33] = 0;
    end
    if (ap_arb_reload_r[mv_mp_mode_mx_hls]) begin
        scalar_argVld[11][1][33] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 0; a = 21;
    if (scalar_rdat_vld_r[3][0][21]) begin
        scalar_argdone [3][0][21] = 1;
    end
    scalar_adr[3][0][21] = {ap_part[mv_mp_mode_mx_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][21]) begin
        scalar_argVld[3][0][21] = 0;
    end
    if (ap_arb_reload_r[mv_mp_mode_mx_hls]) begin
        scalar_argVld[3][0][21] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 0; a = 36;
    if (scalar_rdat_vld_r[29][0][36]) begin
        scalar_argdone [29][0][36] = 1;
    end
    scalar_adr[29][0][36] = {ap_part[mv_mp_mode_mx_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][36]) begin
        scalar_argVld[29][0][36] = 0;
    end
    if (ap_arb_reload_r[mv_mp_mode_mx_hls]) begin
        scalar_argVld[29][0][36] = 1;
    end

    //------WRITE (scalar, global adr = 1212) comb block-----//
    //s = 15; r = 0; a = 9;
    if (scalar_argAck [15][0][9]) begin
        scalar_argVld [15][0][9] = 0;
        scalar_argAckdone [15][0][9] = 1;
    end
    if (mv_mp_mode_mx_hls_mxx_x_ap_vld_r) begin
        scalar_argVld [15][0][9] = 1;
        scalar_argAckdone [15][0][9] = 0;
        ap_part_w[mv_mp_mode_mx_hls][0+:LOG2_MAX_PARTITION] = ap_part[mv_mp_mode_mx_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][9] = mv_mp_mode_mx_hls_mxx_x_r;
    scalar_adr    [15][0][9] = {ap_part_w[mv_mp_mode_mx_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1216) comb block-----//
    //s = 16; r = 0; a = 6;
    if (scalar_argAck [16][0][6]) begin
        scalar_argVld [16][0][6] = 0;
        scalar_argAckdone [16][0][6] = 1;
    end
    if (mv_mp_mode_mx_hls_mxx_y_ap_vld_r) begin
        scalar_argVld [16][0][6] = 1;
        scalar_argAckdone [16][0][6] = 0;
        ap_part_w[mv_mp_mode_mx_hls][0+:LOG2_MAX_PARTITION] = ap_part[mv_mp_mode_mx_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][0][6] = mv_mp_mode_mx_hls_mxx_y_r;
    scalar_adr    [16][0][6] = {ap_part_w[mv_mp_mode_mx_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (array range, global adr = 286240, width=16, addr_width=32) -----//
    //s = 0; a = 107;
    array_argVld [0][107] = mv_mp_mode_mx_hls_tab_mvf_mv_0_x_EN_A & (mv_mp_mode_mx_hls_tab_mvf_mv_0_x_WEN_A != 0);
    array_adr    [0][107] = mv_mp_mode_mx_hls_tab_mvf_mv_0_x_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][107] = mv_mp_mode_mx_hls_tab_mvf_mv_0_x_Din_A;

    //------READ (array range, global adr = 286240, width=16, addr_width=32) -----//
    //s = 0; a = 266;
    mv_mp_mode_mx_hls_tab_mvf_mv_0_x_Dout_A = array_rdat  [0][266];
    //found a write signal pair
    array_argVld [0][266] = mv_mp_mode_mx_hls_tab_mvf_mv_0_x_EN_A & (mv_mp_mode_mx_hls_tab_mvf_mv_0_x_WEN_A == 0);
    array_adr    [0][266] = mv_mp_mode_mx_hls_tab_mvf_mv_0_x_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286244, width=16, addr_width=32) -----//
    //s = 0; a = 108;
    array_argVld [0][108] = mv_mp_mode_mx_hls_tab_mvf_mv_0_y_EN_A & (mv_mp_mode_mx_hls_tab_mvf_mv_0_y_WEN_A != 0);
    array_adr    [0][108] = mv_mp_mode_mx_hls_tab_mvf_mv_0_y_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][108] = mv_mp_mode_mx_hls_tab_mvf_mv_0_y_Din_A;

    //------READ (array range, global adr = 286244, width=16, addr_width=32) -----//
    //s = 0; a = 267;
    mv_mp_mode_mx_hls_tab_mvf_mv_0_y_Dout_A = array_rdat  [0][267];
    //found a write signal pair
    array_argVld [0][267] = mv_mp_mode_mx_hls_tab_mvf_mv_0_y_EN_A & (mv_mp_mode_mx_hls_tab_mvf_mv_0_y_WEN_A == 0);
    array_adr    [0][267] = mv_mp_mode_mx_hls_tab_mvf_mv_0_y_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286248, width=16, addr_width=32) -----//
    //s = 0; a = 109;
    array_argVld [0][109] = mv_mp_mode_mx_hls_tab_mvf_mv_1_x_EN_A & (mv_mp_mode_mx_hls_tab_mvf_mv_1_x_WEN_A != 0);
    array_adr    [0][109] = mv_mp_mode_mx_hls_tab_mvf_mv_1_x_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][109] = mv_mp_mode_mx_hls_tab_mvf_mv_1_x_Din_A;

    //------READ (array range, global adr = 286248, width=16, addr_width=32) -----//
    //s = 0; a = 268;
    mv_mp_mode_mx_hls_tab_mvf_mv_1_x_Dout_A = array_rdat  [0][268];
    //found a write signal pair
    array_argVld [0][268] = mv_mp_mode_mx_hls_tab_mvf_mv_1_x_EN_A & (mv_mp_mode_mx_hls_tab_mvf_mv_1_x_WEN_A == 0);
    array_adr    [0][268] = mv_mp_mode_mx_hls_tab_mvf_mv_1_x_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286252, width=16, addr_width=32) -----//
    //s = 0; a = 110;
    array_argVld [0][110] = mv_mp_mode_mx_hls_tab_mvf_mv_1_y_EN_A & (mv_mp_mode_mx_hls_tab_mvf_mv_1_y_WEN_A != 0);
    array_adr    [0][110] = mv_mp_mode_mx_hls_tab_mvf_mv_1_y_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][110] = mv_mp_mode_mx_hls_tab_mvf_mv_1_y_Din_A;

    //------READ (array range, global adr = 286252, width=16, addr_width=32) -----//
    //s = 0; a = 269;
    mv_mp_mode_mx_hls_tab_mvf_mv_1_y_Dout_A = array_rdat  [0][269];
    //found a write signal pair
    array_argVld [0][269] = mv_mp_mode_mx_hls_tab_mvf_mv_1_y_EN_A & (mv_mp_mode_mx_hls_tab_mvf_mv_1_y_WEN_A == 0);
    array_adr    [0][269] = mv_mp_mode_mx_hls_tab_mvf_mv_1_y_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286256, width=32, addr_width=32) -----//
    //s = 0; a = 111;
    array_argVld [0][111] = mv_mp_mode_mx_hls_tab_mvf_poc_0_EN_A & (mv_mp_mode_mx_hls_tab_mvf_poc_0_WEN_A != 0);
    array_adr    [0][111] = mv_mp_mode_mx_hls_tab_mvf_poc_0_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][111] = mv_mp_mode_mx_hls_tab_mvf_poc_0_Din_A;

    //------READ (array range, global adr = 286256, width=32, addr_width=32) -----//
    //s = 0; a = 270;
    mv_mp_mode_mx_hls_tab_mvf_poc_0_Dout_A = array_rdat  [0][270];
    //found a write signal pair
    array_argVld [0][270] = mv_mp_mode_mx_hls_tab_mvf_poc_0_EN_A & (mv_mp_mode_mx_hls_tab_mvf_poc_0_WEN_A == 0);
    array_adr    [0][270] = mv_mp_mode_mx_hls_tab_mvf_poc_0_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286260, width=32, addr_width=32) -----//
    //s = 0; a = 112;
    array_argVld [0][112] = mv_mp_mode_mx_hls_tab_mvf_poc_1_EN_A & (mv_mp_mode_mx_hls_tab_mvf_poc_1_WEN_A != 0);
    array_adr    [0][112] = mv_mp_mode_mx_hls_tab_mvf_poc_1_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][112] = mv_mp_mode_mx_hls_tab_mvf_poc_1_Din_A;

    //------READ (array range, global adr = 286260, width=32, addr_width=32) -----//
    //s = 0; a = 271;
    mv_mp_mode_mx_hls_tab_mvf_poc_1_Dout_A = array_rdat  [0][271];
    //found a write signal pair
    array_argVld [0][271] = mv_mp_mode_mx_hls_tab_mvf_poc_1_EN_A & (mv_mp_mode_mx_hls_tab_mvf_poc_1_WEN_A == 0);
    array_adr    [0][271] = mv_mp_mode_mx_hls_tab_mvf_poc_1_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286264, width=8, addr_width=32) -----//
    //s = 0; a = 113;
    array_argVld [0][113] = mv_mp_mode_mx_hls_tab_mvf_ref_idx_0_EN_A & (mv_mp_mode_mx_hls_tab_mvf_ref_idx_0_WEN_A != 0);
    array_adr    [0][113] = mv_mp_mode_mx_hls_tab_mvf_ref_idx_0_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][113] = mv_mp_mode_mx_hls_tab_mvf_ref_idx_0_Din_A;

    //------READ (array range, global adr = 286264, width=8, addr_width=32) -----//
    //s = 0; a = 272;
    mv_mp_mode_mx_hls_tab_mvf_ref_idx_0_Dout_A = array_rdat  [0][272];
    //found a write signal pair
    array_argVld [0][272] = mv_mp_mode_mx_hls_tab_mvf_ref_idx_0_EN_A & (mv_mp_mode_mx_hls_tab_mvf_ref_idx_0_WEN_A == 0);
    array_adr    [0][272] = mv_mp_mode_mx_hls_tab_mvf_ref_idx_0_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286268, width=8, addr_width=32) -----//
    //s = 0; a = 114;
    array_argVld [0][114] = mv_mp_mode_mx_hls_tab_mvf_ref_idx_1_EN_A & (mv_mp_mode_mx_hls_tab_mvf_ref_idx_1_WEN_A != 0);
    array_adr    [0][114] = mv_mp_mode_mx_hls_tab_mvf_ref_idx_1_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][114] = mv_mp_mode_mx_hls_tab_mvf_ref_idx_1_Din_A;

    //------READ (array range, global adr = 286268, width=8, addr_width=32) -----//
    //s = 0; a = 273;
    mv_mp_mode_mx_hls_tab_mvf_ref_idx_1_Dout_A = array_rdat  [0][273];
    //found a write signal pair
    array_argVld [0][273] = mv_mp_mode_mx_hls_tab_mvf_ref_idx_1_EN_A & (mv_mp_mode_mx_hls_tab_mvf_ref_idx_1_WEN_A == 0);
    array_adr    [0][273] = mv_mp_mode_mx_hls_tab_mvf_ref_idx_1_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 115;
    array_argVld [0][115] = mv_mp_mode_mx_hls_tab_mvf_pred_flag_row_EN_A & (mv_mp_mode_mx_hls_tab_mvf_pred_flag_row_WEN_A != 0);
    array_adr    [0][115] = mv_mp_mode_mx_hls_tab_mvf_pred_flag_row_Addr_A;
    array_wdat   [0][115] = mv_mp_mode_mx_hls_tab_mvf_pred_flag_row_Din_A;

    //------READ (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 274;
    mv_mp_mode_mx_hls_tab_mvf_pred_flag_row_Dout_A = array_rdat  [0][274];
    //found a write signal pair
    array_argVld [0][274] = mv_mp_mode_mx_hls_tab_mvf_pred_flag_row_EN_A & (mv_mp_mode_mx_hls_tab_mvf_pred_flag_row_WEN_A == 0);
    array_adr    [0][274] = mv_mp_mode_mx_hls_tab_mvf_pred_flag_row_Addr_A;

    mv_mp_mode_mx_hls_ready = array_argRdy[0][107]& array_argRdy[0][266]& array_argRdy[0][108]& array_argRdy[0][267]& array_argRdy[0][109]& array_argRdy[0][268]& array_argRdy[0][110]& array_argRdy[0][269]& array_argRdy[0][111]& array_argRdy[0][270]& array_argRdy[0][112]& array_argRdy[0][271]& array_argRdy[0][113]& array_argRdy[0][272]& array_argRdy[0][114]& array_argRdy[0][273]& array_argRdy[0][115]& array_argRdy[0][274] & ~ap_arb_reload_running_r[mv_mp_mode_mx_hls];
    array_ap_ce[0][107] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][266] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][108] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][267] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][109] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][268] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][110] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][269] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][111] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][270] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][112] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][271] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][113] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][272] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][114] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][273] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][115] = ap_ce[mv_mp_mode_mx_hls];
    array_ap_ce[0][274] = ap_ce[mv_mp_mode_mx_hls];

    if (ap_arb_ret[mv_mp_mode_mx_hls] & ~ap_arb_ret_r[mv_mp_mode_mx_hls]) begin
        ap_arb_ret_running[mv_mp_mode_mx_hls] = 1;
        mv_mp_mode_mx_hls_ready = 0;
    end

    scalar_argAckdone_all[mv_mp_mode_mx_hls] = scalar_argAckdone[15][0][9] &
                                                scalar_argAckdone[16][0][6];
    if (ap_arb_ret_running[mv_mp_mode_mx_hls] & scalar_argAckdone_all[mv_mp_mode_mx_hls] &~ ap_arb_reload_running_r[mv_mp_mode_mx_hls]) begin
        ap_arb_reload[mv_mp_mode_mx_hls] = 1;
        ap_arb_reload_running[mv_mp_mode_mx_hls] = 1;
    end

    if (ap_arb_start[mv_mp_mode_mx_hls] &~ ap_arb_start_r[mv_mp_mode_mx_hls]) begin
        ap_arb_start_running[mv_mp_mode_mx_hls] = 1;
    end

    if (ap_arb_start_running[mv_mp_mode_mx_hls] ) begin
        ap_arb_start_running[mv_mp_mode_mx_hls] = 0;
        ap_arb_reload[mv_mp_mode_mx_hls] = 1;
    end

    scalar_argdone_all[mv_mp_mode_mx_hls] = scalar_argdone[11][1][33] &
                                                                scalar_argdone[3][0][21] &
                                                                scalar_argdone[29][0][36];

    if (scalar_argdone_all_r[mv_mp_mode_mx_hls]) begin
        scalar_argdone[11][1][33] = 0;
        scalar_argdone[3][0][21] = 0;
        scalar_argdone[29][0][36] = 0;

        if (ap_arb_start_r[mv_mp_mode_mx_hls] & ~ap_running_r[mv_mp_mode_mx_hls]) begin
            ap_start[mv_mp_mode_mx_hls] = 1;
            ap_running[mv_mp_mode_mx_hls] = 1;
        end
        else if (ap_arb_ret_running_r[mv_mp_mode_mx_hls]) begin
            ap_arb_ret_running[mv_mp_mode_mx_hls] = 0;
            ap_arb_reload_running[mv_mp_mode_mx_hls] = 0;
        end
    end

    if (ap_start_r[mv_mp_mode_mx_hls] & ap_ready_r[mv_mp_mode_mx_hls]) begin
        ap_start[mv_mp_mode_mx_hls] = 0;
    end

    if (ap_done_r[mv_mp_mode_mx_hls]) begin
        ap_running[mv_mp_mode_mx_hls] = 0;
    end
`endif
    //============================================================
    //mv_mp_mode_mx_lt_hls       (f = 41)
    //============================================================
`ifdef enable_connect_mv_mp_mode_mx_lt_hls
    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 0; a = 34;
    if (scalar_rdat_vld_r[11][0][34]) begin
        scalar_argdone [11][0][34] = 1;
    end
    scalar_adr[11][0][34] = {ap_part[mv_mp_mode_mx_lt_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][34]) begin
        scalar_argVld[11][0][34] = 0;
    end
    if (ap_arb_reload_r[mv_mp_mode_mx_lt_hls]) begin
        scalar_argVld[11][0][34] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 1; a = 20;
    if (scalar_rdat_vld_r[3][1][20]) begin
        scalar_argdone [3][1][20] = 1;
    end
    scalar_adr[3][1][20] = {ap_part[mv_mp_mode_mx_lt_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][20]) begin
        scalar_argVld[3][1][20] = 0;
    end
    if (ap_arb_reload_r[mv_mp_mode_mx_lt_hls]) begin
        scalar_argVld[3][1][20] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 1; a = 36;
    if (scalar_rdat_vld_r[29][1][36]) begin
        scalar_argdone [29][1][36] = 1;
    end
    scalar_adr[29][1][36] = {ap_part[mv_mp_mode_mx_lt_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][36]) begin
        scalar_argVld[29][1][36] = 0;
    end
    if (ap_arb_reload_r[mv_mp_mode_mx_lt_hls]) begin
        scalar_argVld[29][1][36] = 1;
    end

    //------READ (scalar, global adr = 1548) comb block-----//
    //s = 3; r = 0; a = 22;
    if (scalar_rdat_vld_r[3][0][22]) begin
        scalar_argdone [3][0][22] = 1;
    end
    scalar_adr[3][0][22] = {ap_part[mv_mp_mode_mx_lt_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][22]) begin
        scalar_argVld[3][0][22] = 0;
    end
    if (ap_arb_reload_r[mv_mp_mode_mx_lt_hls]) begin
        scalar_argVld[3][0][22] = 1;
    end

    //------WRITE (array range, global adr = 286216, width=32, addr_width=32) -----//
    //s = 0; a = 116;
    array_argVld [0][116] = mv_mp_mode_mx_lt_hls_refPicList_0_isLongTerm_EN_A & (mv_mp_mode_mx_lt_hls_refPicList_0_isLongTerm_WEN_A != 0);
    array_adr    [0][116] = mv_mp_mode_mx_lt_hls_refPicList_0_isLongTerm_Addr_A;
    array_wdat   [0][116] = mv_mp_mode_mx_lt_hls_refPicList_0_isLongTerm_Din_A;

    //------READ (array range, global adr = 286216, width=32, addr_width=32) -----//
    //s = 0; a = 275;
    mv_mp_mode_mx_lt_hls_refPicList_0_isLongTerm_Dout_A = array_rdat  [0][275];
    //found a write signal pair
    array_argVld [0][275] = mv_mp_mode_mx_lt_hls_refPicList_0_isLongTerm_EN_A & (mv_mp_mode_mx_lt_hls_refPicList_0_isLongTerm_WEN_A == 0);
    array_adr    [0][275] = mv_mp_mode_mx_lt_hls_refPicList_0_isLongTerm_Addr_A;

    //------WRITE (array range, global adr = 286220, width=32, addr_width=32) -----//
    //s = 0; a = 117;
    array_argVld [0][117] = mv_mp_mode_mx_lt_hls_refPicList_1_isLongTerm_EN_A & (mv_mp_mode_mx_lt_hls_refPicList_1_isLongTerm_WEN_A != 0);
    array_adr    [0][117] = mv_mp_mode_mx_lt_hls_refPicList_1_isLongTerm_Addr_A;
    array_wdat   [0][117] = mv_mp_mode_mx_lt_hls_refPicList_1_isLongTerm_Din_A;

    //------READ (array range, global adr = 286220, width=32, addr_width=32) -----//
    //s = 0; a = 276;
    mv_mp_mode_mx_lt_hls_refPicList_1_isLongTerm_Dout_A = array_rdat  [0][276];
    //found a write signal pair
    array_argVld [0][276] = mv_mp_mode_mx_lt_hls_refPicList_1_isLongTerm_EN_A & (mv_mp_mode_mx_lt_hls_refPicList_1_isLongTerm_WEN_A == 0);
    array_adr    [0][276] = mv_mp_mode_mx_lt_hls_refPicList_1_isLongTerm_Addr_A;

    //------WRITE (scalar, global adr = 1212) comb block-----//
    //s = 15; r = 1; a = 9;
    if (scalar_argAck [15][1][9]) begin
        scalar_argVld [15][1][9] = 0;
        scalar_argAckdone [15][1][9] = 1;
    end
    if (mv_mp_mode_mx_lt_hls_mxx_x_ap_vld_r) begin
        scalar_argVld [15][1][9] = 1;
        scalar_argAckdone [15][1][9] = 0;
        ap_part_w[mv_mp_mode_mx_lt_hls][0+:LOG2_MAX_PARTITION] = ap_part[mv_mp_mode_mx_lt_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][9] = mv_mp_mode_mx_lt_hls_mxx_x_r;
    scalar_adr    [15][1][9] = {ap_part_w[mv_mp_mode_mx_lt_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1216) comb block-----//
    //s = 16; r = 1; a = 6;
    if (scalar_argAck [16][1][6]) begin
        scalar_argVld [16][1][6] = 0;
        scalar_argAckdone [16][1][6] = 1;
    end
    if (mv_mp_mode_mx_lt_hls_mxx_y_ap_vld_r) begin
        scalar_argVld [16][1][6] = 1;
        scalar_argAckdone [16][1][6] = 0;
        ap_part_w[mv_mp_mode_mx_lt_hls][0+:LOG2_MAX_PARTITION] = ap_part[mv_mp_mode_mx_lt_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][1][6] = mv_mp_mode_mx_lt_hls_mxx_y_r;
    scalar_adr    [16][1][6] = {ap_part_w[mv_mp_mode_mx_lt_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (array range, global adr = 286240, width=16, addr_width=32) -----//
    //s = 0; a = 118;
    array_argVld [0][118] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_x_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_x_WEN_A != 0);
    array_adr    [0][118] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_x_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][118] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_x_Din_A;

    //------READ (array range, global adr = 286240, width=16, addr_width=32) -----//
    //s = 0; a = 277;
    mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_x_Dout_A = array_rdat  [0][277];
    //found a write signal pair
    array_argVld [0][277] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_x_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_x_WEN_A == 0);
    array_adr    [0][277] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_x_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286244, width=16, addr_width=32) -----//
    //s = 0; a = 119;
    array_argVld [0][119] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_y_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_y_WEN_A != 0);
    array_adr    [0][119] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_y_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][119] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_y_Din_A;

    //------READ (array range, global adr = 286244, width=16, addr_width=32) -----//
    //s = 0; a = 278;
    mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_y_Dout_A = array_rdat  [0][278];
    //found a write signal pair
    array_argVld [0][278] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_y_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_y_WEN_A == 0);
    array_adr    [0][278] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_0_y_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286248, width=16, addr_width=32) -----//
    //s = 0; a = 120;
    array_argVld [0][120] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_x_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_x_WEN_A != 0);
    array_adr    [0][120] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_x_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][120] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_x_Din_A;

    //------READ (array range, global adr = 286248, width=16, addr_width=32) -----//
    //s = 0; a = 279;
    mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_x_Dout_A = array_rdat  [0][279];
    //found a write signal pair
    array_argVld [0][279] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_x_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_x_WEN_A == 0);
    array_adr    [0][279] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_x_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286252, width=16, addr_width=32) -----//
    //s = 0; a = 121;
    array_argVld [0][121] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_y_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_y_WEN_A != 0);
    array_adr    [0][121] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_y_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][121] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_y_Din_A;

    //------READ (array range, global adr = 286252, width=16, addr_width=32) -----//
    //s = 0; a = 280;
    mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_y_Dout_A = array_rdat  [0][280];
    //found a write signal pair
    array_argVld [0][280] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_y_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_y_WEN_A == 0);
    array_adr    [0][280] = mv_mp_mode_mx_lt_hls_tab_mvf_mv_1_y_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286256, width=32, addr_width=32) -----//
    //s = 0; a = 122;
    array_argVld [0][122] = mv_mp_mode_mx_lt_hls_tab_mvf_poc_0_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_poc_0_WEN_A != 0);
    array_adr    [0][122] = mv_mp_mode_mx_lt_hls_tab_mvf_poc_0_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][122] = mv_mp_mode_mx_lt_hls_tab_mvf_poc_0_Din_A;

    //------READ (array range, global adr = 286256, width=32, addr_width=32) -----//
    //s = 0; a = 281;
    mv_mp_mode_mx_lt_hls_tab_mvf_poc_0_Dout_A = array_rdat  [0][281];
    //found a write signal pair
    array_argVld [0][281] = mv_mp_mode_mx_lt_hls_tab_mvf_poc_0_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_poc_0_WEN_A == 0);
    array_adr    [0][281] = mv_mp_mode_mx_lt_hls_tab_mvf_poc_0_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286260, width=32, addr_width=32) -----//
    //s = 0; a = 123;
    array_argVld [0][123] = mv_mp_mode_mx_lt_hls_tab_mvf_poc_1_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_poc_1_WEN_A != 0);
    array_adr    [0][123] = mv_mp_mode_mx_lt_hls_tab_mvf_poc_1_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][123] = mv_mp_mode_mx_lt_hls_tab_mvf_poc_1_Din_A;

    //------READ (array range, global adr = 286260, width=32, addr_width=32) -----//
    //s = 0; a = 282;
    mv_mp_mode_mx_lt_hls_tab_mvf_poc_1_Dout_A = array_rdat  [0][282];
    //found a write signal pair
    array_argVld [0][282] = mv_mp_mode_mx_lt_hls_tab_mvf_poc_1_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_poc_1_WEN_A == 0);
    array_adr    [0][282] = mv_mp_mode_mx_lt_hls_tab_mvf_poc_1_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286264, width=8, addr_width=32) -----//
    //s = 0; a = 124;
    array_argVld [0][124] = mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_0_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_0_WEN_A != 0);
    array_adr    [0][124] = mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_0_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][124] = mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_0_Din_A;

    //------READ (array range, global adr = 286264, width=8, addr_width=32) -----//
    //s = 0; a = 283;
    mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_0_Dout_A = array_rdat  [0][283];
    //found a write signal pair
    array_argVld [0][283] = mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_0_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_0_WEN_A == 0);
    array_adr    [0][283] = mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_0_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286268, width=8, addr_width=32) -----//
    //s = 0; a = 125;
    array_argVld [0][125] = mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_1_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_1_WEN_A != 0);
    array_adr    [0][125] = mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_1_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][125] = mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_1_Din_A;

    //------READ (array range, global adr = 286268, width=8, addr_width=32) -----//
    //s = 0; a = 284;
    mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_1_Dout_A = array_rdat  [0][284];
    //found a write signal pair
    array_argVld [0][284] = mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_1_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_1_WEN_A == 0);
    array_adr    [0][284] = mv_mp_mode_mx_lt_hls_tab_mvf_ref_idx_1_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 126;
    array_argVld [0][126] = mv_mp_mode_mx_lt_hls_tab_mvf_pred_flag_row_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_pred_flag_row_WEN_A != 0);
    array_adr    [0][126] = mv_mp_mode_mx_lt_hls_tab_mvf_pred_flag_row_Addr_A;
    array_wdat   [0][126] = mv_mp_mode_mx_lt_hls_tab_mvf_pred_flag_row_Din_A;

    //------READ (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 285;
    mv_mp_mode_mx_lt_hls_tab_mvf_pred_flag_row_Dout_A = array_rdat  [0][285];
    //found a write signal pair
    array_argVld [0][285] = mv_mp_mode_mx_lt_hls_tab_mvf_pred_flag_row_EN_A & (mv_mp_mode_mx_lt_hls_tab_mvf_pred_flag_row_WEN_A == 0);
    array_adr    [0][285] = mv_mp_mode_mx_lt_hls_tab_mvf_pred_flag_row_Addr_A;

    mv_mp_mode_mx_lt_hls_ready = array_argRdy[0][116]& array_argRdy[0][275]& array_argRdy[0][117]& array_argRdy[0][276]& array_argRdy[0][118]& array_argRdy[0][277]& array_argRdy[0][119]& array_argRdy[0][278]& array_argRdy[0][120]& array_argRdy[0][279]& array_argRdy[0][121]& array_argRdy[0][280]& array_argRdy[0][122]& array_argRdy[0][281]& array_argRdy[0][123]& array_argRdy[0][282]& array_argRdy[0][124]& array_argRdy[0][283]& array_argRdy[0][125]& array_argRdy[0][284]& array_argRdy[0][126]& array_argRdy[0][285] & ~ap_arb_reload_running_r[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][116] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][275] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][117] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][276] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][118] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][277] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][119] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][278] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][120] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][279] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][121] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][280] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][122] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][281] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][123] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][282] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][124] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][283] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][125] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][284] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][126] = ap_ce[mv_mp_mode_mx_lt_hls];
    array_ap_ce[0][285] = ap_ce[mv_mp_mode_mx_lt_hls];

    if (ap_arb_ret[mv_mp_mode_mx_lt_hls] & ~ap_arb_ret_r[mv_mp_mode_mx_lt_hls]) begin
        ap_arb_ret_running[mv_mp_mode_mx_lt_hls] = 1;
        mv_mp_mode_mx_lt_hls_ready = 0;
    end

    scalar_argAckdone_all[mv_mp_mode_mx_lt_hls] = scalar_argAckdone[15][1][9] &
                                                scalar_argAckdone[16][1][6];
    if (ap_arb_ret_running[mv_mp_mode_mx_lt_hls] & scalar_argAckdone_all[mv_mp_mode_mx_lt_hls] &~ ap_arb_reload_running_r[mv_mp_mode_mx_lt_hls]) begin
        ap_arb_reload[mv_mp_mode_mx_lt_hls] = 1;
        ap_arb_reload_running[mv_mp_mode_mx_lt_hls] = 1;
    end

    if (ap_arb_start[mv_mp_mode_mx_lt_hls] &~ ap_arb_start_r[mv_mp_mode_mx_lt_hls]) begin
        ap_arb_start_running[mv_mp_mode_mx_lt_hls] = 1;
    end

    if (ap_arb_start_running[mv_mp_mode_mx_lt_hls] ) begin
        ap_arb_start_running[mv_mp_mode_mx_lt_hls] = 0;
        ap_arb_reload[mv_mp_mode_mx_lt_hls] = 1;
    end

    scalar_argdone_all[mv_mp_mode_mx_lt_hls] = scalar_argdone[11][0][34] &
                                                                scalar_argdone[3][1][20] &
                                                                scalar_argdone[29][1][36] &
                                                                scalar_argdone[3][0][22];

    if (scalar_argdone_all_r[mv_mp_mode_mx_lt_hls]) begin
        scalar_argdone[11][0][34] = 0;
        scalar_argdone[3][1][20] = 0;
        scalar_argdone[29][1][36] = 0;
        scalar_argdone[3][0][22] = 0;

        if (ap_arb_start_r[mv_mp_mode_mx_lt_hls] & ~ap_running_r[mv_mp_mode_mx_lt_hls]) begin
            ap_start[mv_mp_mode_mx_lt_hls] = 1;
            ap_running[mv_mp_mode_mx_lt_hls] = 1;
        end
        else if (ap_arb_ret_running_r[mv_mp_mode_mx_lt_hls]) begin
            ap_arb_ret_running[mv_mp_mode_mx_lt_hls] = 0;
            ap_arb_reload_running[mv_mp_mode_mx_lt_hls] = 0;
        end
    end

    if (ap_start_r[mv_mp_mode_mx_lt_hls] & ap_ready_r[mv_mp_mode_mx_lt_hls]) begin
        ap_start[mv_mp_mode_mx_lt_hls] = 0;
    end

    if (ap_done_r[mv_mp_mode_mx_lt_hls]) begin
        ap_running[mv_mp_mode_mx_lt_hls] = 0;
    end
`endif
    //============================================================
    //temporal_luma_motion_vector_hls       (f = 42)
    //============================================================
`ifdef enable_connect_temporal_luma_motion_vector_hls
    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 1; a = 37;
    if (scalar_rdat_vld_r[11][1][37]) begin
        scalar_argdone [11][1][37] = 1;
    end
    scalar_adr[11][1][37] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][37]) begin
        scalar_argVld[11][1][37] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[11][1][37] = 1;
    end

    //------READ (scalar, global adr = 1188) comb block-----//
    //s = 9; r = 0; a = 33;
    if (scalar_rdat_vld_r[9][0][33]) begin
        scalar_argdone [9][0][33] = 1;
    end
    scalar_adr[9][0][33] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][33]) begin
        scalar_argVld[9][0][33] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[9][0][33] = 1;
    end

    //------READ (scalar, global adr = 1192) comb block-----//
    //s = 10; r = 1; a = 28;
    if (scalar_rdat_vld_r[10][1][28]) begin
        scalar_argdone [10][1][28] = 1;
    end
    scalar_adr[10][1][28] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][28]) begin
        scalar_argVld[10][1][28] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[10][1][28] = 1;
    end

    //------READ (scalar, global adr = 552) comb block-----//
    //s = 10; r = 0; a = 29;
    if (scalar_rdat_vld_r[10][0][29]) begin
        scalar_argdone [10][0][29] = 1;
    end
    scalar_adr[10][0][29] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][29]) begin
        scalar_argVld[10][0][29] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[10][0][29] = 1;
    end

    //------READ (scalar, global adr = 556) comb block-----//
    //s = 11; r = 0; a = 38;
    if (scalar_rdat_vld_r[11][0][38]) begin
        scalar_argdone [11][0][38] = 1;
    end
    scalar_adr[11][0][38] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][38]) begin
        scalar_argVld[11][0][38] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[11][0][38] = 1;
    end

    //------READ (scalar, global adr = 160) comb block-----//
    //s = 8; r = 1; a = 32;
    if (scalar_rdat_vld_r[8][1][32]) begin
        scalar_argdone [8][1][32] = 1;
    end
    scalar_adr[8][1][32] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][32]) begin
        scalar_argVld[8][1][32] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[8][1][32] = 1;
    end

    //------READ (scalar, global adr = 164) comb block-----//
    //s = 9; r = 1; a = 33;
    if (scalar_rdat_vld_r[9][1][33]) begin
        scalar_argdone [9][1][33] = 1;
    end
    scalar_adr[9][1][33] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][33]) begin
        scalar_argVld[9][1][33] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[9][1][33] = 1;
    end

    //------WRITE (scalar, global adr = 1220) comb block-----//
    //s = 17; r = 1; a = 7;
    if (scalar_argAck [17][1][7]) begin
        scalar_argVld [17][1][7] = 0;
        scalar_argAckdone [17][1][7] = 1;
    end
    if (temporal_luma_motion_vector_hls_mvLXCol_x_ap_vld_r) begin
        scalar_argVld [17][1][7] = 1;
        scalar_argAckdone [17][1][7] = 0;
        ap_part_w[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION] = ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][1][7] = temporal_luma_motion_vector_hls_mvLXCol_x_r;
    scalar_adr    [17][1][7] = {ap_part_w[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1224) comb block-----//
    //s = 18; r = 0; a = 7;
    if (scalar_argAck [18][0][7]) begin
        scalar_argVld [18][0][7] = 0;
        scalar_argAckdone [18][0][7] = 1;
    end
    if (temporal_luma_motion_vector_hls_mvLXCol_y_ap_vld_r) begin
        scalar_argVld [18][0][7] = 1;
        scalar_argAckdone [18][0][7] = 0;
        ap_part_w[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION] = ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][0][7] = temporal_luma_motion_vector_hls_mvLXCol_y_r;
    scalar_adr    [18][0][7] = {ap_part_w[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 0; a = 26;
    if (scalar_rdat_vld_r[3][0][26]) begin
        scalar_argdone [3][0][26] = 1;
    end
    scalar_adr[3][0][26] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][26]) begin
        scalar_argVld[3][0][26] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[3][0][26] = 1;
    end

    //------READ (scalar, global adr = 360) comb block-----//
    //s = 26; r = 1; a = 31;
    if (scalar_rdat_vld_r[26][1][31]) begin
        scalar_argdone [26][1][31] = 1;
    end
    scalar_adr[26][1][31] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][31]) begin
        scalar_argVld[26][1][31] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[26][1][31] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 0; a = 40;
    if (scalar_rdat_vld_r[29][0][40]) begin
        scalar_argdone [29][0][40] = 1;
    end
    scalar_adr[29][0][40] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][40]) begin
        scalar_argVld[29][0][40] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[29][0][40] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 0; a = 27;
    if (scalar_rdat_vld_r[19][0][27]) begin
        scalar_argdone [19][0][27] = 1;
    end
    scalar_adr[19][0][27] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][27]) begin
        scalar_argVld[19][0][27] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[19][0][27] = 1;
    end

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 0; a = 40;
    if (scalar_rdat_vld_r[6][0][40]) begin
        scalar_argdone [6][0][40] = 1;
    end
    scalar_adr[6][0][40] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][40]) begin
        scalar_argVld[6][0][40] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[6][0][40] = 1;
    end

    //------READ (scalar, global adr = 284) comb block-----//
    //s = 7; r = 1; a = 26;
    if (scalar_rdat_vld_r[7][1][26]) begin
        scalar_argdone [7][1][26] = 1;
    end
    scalar_adr[7][1][26] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][26]) begin
        scalar_argVld[7][1][26] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[7][1][26] = 1;
    end

    //------READ (scalar, global adr = 1208) comb block-----//
    //s = 14; r = 1; a = 32;
    if (scalar_rdat_vld_r[14][1][32]) begin
        scalar_argdone [14][1][32] = 1;
    end
    scalar_adr[14][1][32] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][32]) begin
        scalar_argVld[14][1][32] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[14][1][32] = 1;
    end

    //------READ (scalar, global adr = 1548) comb block-----//
    //s = 3; r = 1; a = 25;
    if (scalar_rdat_vld_r[3][1][25]) begin
        scalar_argdone [3][1][25] = 1;
    end
    scalar_adr[3][1][25] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][25]) begin
        scalar_argVld[3][1][25] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[3][1][25] = 1;
    end

    //------WRITE (array range, global adr = 286256, width=32, addr_width=32) -----//
    //s = 0; a = 137;
    array_argVld [0][137] = temporal_luma_motion_vector_hls_rpl_tab_void_EN_A & (temporal_luma_motion_vector_hls_rpl_tab_void_WEN_A != 0);
    array_adr    [0][137] = temporal_luma_motion_vector_hls_rpl_tab_void_Addr_A;
    array_wdat   [0][137] = temporal_luma_motion_vector_hls_rpl_tab_void_Din_A;

    //------READ (array range, global adr = 286256, width=32, addr_width=32) -----//
    //s = 0; a = 296;
    temporal_luma_motion_vector_hls_rpl_tab_void_Dout_A = array_rdat  [0][296];
    //found a write signal pair
    array_argVld [0][296] = temporal_luma_motion_vector_hls_rpl_tab_void_EN_A & (temporal_luma_motion_vector_hls_rpl_tab_void_WEN_A == 0);
    array_adr    [0][296] = temporal_luma_motion_vector_hls_rpl_tab_void_Addr_A;

    //------READ (scalar, global adr = 1196) comb block-----//
    //s = 11; r = 1; a = 38;
    if (scalar_rdat_vld_r[11][1][38]) begin
        scalar_argdone [11][1][38] = 1;
    end
    scalar_adr[11][1][38] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][38]) begin
        scalar_argVld[11][1][38] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[11][1][38] = 1;
    end

    //------READ (scalar, global adr = 1200) comb block-----//
    //s = 12; r = 1; a = 33;
    if (scalar_rdat_vld_r[12][1][33]) begin
        scalar_argdone [12][1][33] = 1;
    end
    scalar_adr[12][1][33] = {ap_part[temporal_luma_motion_vector_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][33]) begin
        scalar_argVld[12][1][33] = 0;
    end
    if (ap_arb_reload_r[temporal_luma_motion_vector_hls]) begin
        scalar_argVld[12][1][33] = 1;
    end

    //------WRITE (array range, global adr = 286216, width=32, addr_width=32) -----//
    //s = 0; a = 138;
    array_argVld [0][138] = temporal_luma_motion_vector_hls_refPicList_0_isLongTerm_EN_A & (temporal_luma_motion_vector_hls_refPicList_0_isLongTerm_WEN_A != 0);
    array_adr    [0][138] = temporal_luma_motion_vector_hls_refPicList_0_isLongTerm_Addr_A;
    array_wdat   [0][138] = temporal_luma_motion_vector_hls_refPicList_0_isLongTerm_Din_A;

    //------READ (array range, global adr = 286216, width=32, addr_width=32) -----//
    //s = 0; a = 297;
    temporal_luma_motion_vector_hls_refPicList_0_isLongTerm_Dout_A = array_rdat  [0][297];
    //found a write signal pair
    array_argVld [0][297] = temporal_luma_motion_vector_hls_refPicList_0_isLongTerm_EN_A & (temporal_luma_motion_vector_hls_refPicList_0_isLongTerm_WEN_A == 0);
    array_adr    [0][297] = temporal_luma_motion_vector_hls_refPicList_0_isLongTerm_Addr_A;

    //------WRITE (array range, global adr = 286220, width=32, addr_width=32) -----//
    //s = 0; a = 139;
    array_argVld [0][139] = temporal_luma_motion_vector_hls_refPicList_1_isLongTerm_EN_A & (temporal_luma_motion_vector_hls_refPicList_1_isLongTerm_WEN_A != 0);
    array_adr    [0][139] = temporal_luma_motion_vector_hls_refPicList_1_isLongTerm_Addr_A;
    array_wdat   [0][139] = temporal_luma_motion_vector_hls_refPicList_1_isLongTerm_Din_A;

    //------READ (array range, global adr = 286220, width=32, addr_width=32) -----//
    //s = 0; a = 298;
    temporal_luma_motion_vector_hls_refPicList_1_isLongTerm_Dout_A = array_rdat  [0][298];
    //found a write signal pair
    array_argVld [0][298] = temporal_luma_motion_vector_hls_refPicList_1_isLongTerm_EN_A & (temporal_luma_motion_vector_hls_refPicList_1_isLongTerm_WEN_A == 0);
    array_adr    [0][298] = temporal_luma_motion_vector_hls_refPicList_1_isLongTerm_Addr_A;

    //------WRITE (array range, global adr = 286224, width=32, addr_width=32) -----//
    //s = 0; a = 140;
    array_argVld [0][140] = temporal_luma_motion_vector_hls_refPicList_0_list_EN_A & (temporal_luma_motion_vector_hls_refPicList_0_list_WEN_A != 0);
    array_adr    [0][140] = temporal_luma_motion_vector_hls_refPicList_0_list_Addr_A;
    array_wdat   [0][140] = temporal_luma_motion_vector_hls_refPicList_0_list_Din_A;

    //------READ (array range, global adr = 286224, width=32, addr_width=32) -----//
    //s = 0; a = 299;
    temporal_luma_motion_vector_hls_refPicList_0_list_Dout_A = array_rdat  [0][299];
    //found a write signal pair
    array_argVld [0][299] = temporal_luma_motion_vector_hls_refPicList_0_list_EN_A & (temporal_luma_motion_vector_hls_refPicList_0_list_WEN_A == 0);
    array_adr    [0][299] = temporal_luma_motion_vector_hls_refPicList_0_list_Addr_A;

    //------WRITE (array range, global adr = 286228, width=32, addr_width=32) -----//
    //s = 0; a = 141;
    array_argVld [0][141] = temporal_luma_motion_vector_hls_refPicList_1_list_EN_A & (temporal_luma_motion_vector_hls_refPicList_1_list_WEN_A != 0);
    array_adr    [0][141] = temporal_luma_motion_vector_hls_refPicList_1_list_Addr_A;
    array_wdat   [0][141] = temporal_luma_motion_vector_hls_refPicList_1_list_Din_A;

    //------READ (array range, global adr = 286228, width=32, addr_width=32) -----//
    //s = 0; a = 300;
    temporal_luma_motion_vector_hls_refPicList_1_list_Dout_A = array_rdat  [0][300];
    //found a write signal pair
    array_argVld [0][300] = temporal_luma_motion_vector_hls_refPicList_1_list_EN_A & (temporal_luma_motion_vector_hls_refPicList_1_list_WEN_A == 0);
    array_adr    [0][300] = temporal_luma_motion_vector_hls_refPicList_1_list_Addr_A;

    //------WRITE (array range, global adr = 286248, width=16, addr_width=32) -----//
    //s = 0; a = 142;
    array_argVld [0][142] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_x_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_x_WEN_A != 0);
    array_adr    [0][142] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_x_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][142] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_x_Din_A;

    //------READ (array range, global adr = 286248, width=16, addr_width=32) -----//
    //s = 0; a = 301;
    temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_x_Dout_A = array_rdat  [0][301];
    //found a write signal pair
    array_argVld [0][301] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_x_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_x_WEN_A == 0);
    array_adr    [0][301] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_x_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286252, width=16, addr_width=32) -----//
    //s = 0; a = 143;
    array_argVld [0][143] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_y_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_y_WEN_A != 0);
    array_adr    [0][143] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_y_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][143] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_y_Din_A;

    //------READ (array range, global adr = 286252, width=16, addr_width=32) -----//
    //s = 0; a = 302;
    temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_y_Dout_A = array_rdat  [0][302];
    //found a write signal pair
    array_argVld [0][302] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_y_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_y_WEN_A == 0);
    array_adr    [0][302] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_0_y_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286256, width=16, addr_width=32) -----//
    //s = 0; a = 144;
    array_argVld [0][144] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_x_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_x_WEN_A != 0);
    array_adr    [0][144] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_x_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][144] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_x_Din_A;

    //------READ (array range, global adr = 286256, width=16, addr_width=32) -----//
    //s = 0; a = 303;
    temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_x_Dout_A = array_rdat  [0][303];
    //found a write signal pair
    array_argVld [0][303] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_x_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_x_WEN_A == 0);
    array_adr    [0][303] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_x_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286260, width=16, addr_width=32) -----//
    //s = 0; a = 145;
    array_argVld [0][145] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_y_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_y_WEN_A != 0);
    array_adr    [0][145] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_y_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][145] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_y_Din_A;

    //------READ (array range, global adr = 286260, width=16, addr_width=32) -----//
    //s = 0; a = 304;
    temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_y_Dout_A = array_rdat  [0][304];
    //found a write signal pair
    array_argVld [0][304] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_y_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_y_WEN_A == 0);
    array_adr    [0][304] = temporal_luma_motion_vector_hls_collocated_tab_mvf_mv_1_y_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286264, width=32, addr_width=32) -----//
    //s = 0; a = 146;
    array_argVld [0][146] = temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_0_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_0_WEN_A != 0);
    array_adr    [0][146] = temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_0_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][146] = temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_0_Din_A;

    //------READ (array range, global adr = 286264, width=32, addr_width=32) -----//
    //s = 0; a = 305;
    temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_0_Dout_A = array_rdat  [0][305];
    //found a write signal pair
    array_argVld [0][305] = temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_0_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_0_WEN_A == 0);
    array_adr    [0][305] = temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_0_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286268, width=32, addr_width=32) -----//
    //s = 0; a = 147;
    array_argVld [0][147] = temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_1_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_1_WEN_A != 0);
    array_adr    [0][147] = temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_1_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][147] = temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_1_Din_A;

    //------READ (array range, global adr = 286268, width=32, addr_width=32) -----//
    //s = 0; a = 306;
    temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_1_Dout_A = array_rdat  [0][306];
    //found a write signal pair
    array_argVld [0][306] = temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_1_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_1_WEN_A == 0);
    array_adr    [0][306] = temporal_luma_motion_vector_hls_collocated_tab_mvf_poc_1_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286272, width=8, addr_width=32) -----//
    //s = 0; a = 148;
    array_argVld [0][148] = temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_0_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_0_WEN_A != 0);
    array_adr    [0][148] = temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_0_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][148] = temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_0_Din_A;

    //------READ (array range, global adr = 286272, width=8, addr_width=32) -----//
    //s = 0; a = 307;
    temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_0_Dout_A = array_rdat  [0][307];
    //found a write signal pair
    array_argVld [0][307] = temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_0_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_0_WEN_A == 0);
    array_adr    [0][307] = temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_0_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286276, width=8, addr_width=32) -----//
    //s = 0; a = 149;
    array_argVld [0][149] = temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_1_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_1_WEN_A != 0);
    array_adr    [0][149] = temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_1_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][149] = temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_1_Din_A;

    //------READ (array range, global adr = 286276, width=8, addr_width=32) -----//
    //s = 0; a = 308;
    temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_1_Dout_A = array_rdat  [0][308];
    //found a write signal pair
    array_argVld [0][308] = temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_1_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_1_WEN_A == 0);
    array_adr    [0][308] = temporal_luma_motion_vector_hls_collocated_tab_mvf_ref_idx_1_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286252, width=32, addr_width=32) -----//
    //s = 0; a = 150;
    array_argVld [0][150] = temporal_luma_motion_vector_hls_collocated_tab_mvf_pred_flag_row_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_pred_flag_row_WEN_A != 0);
    array_adr    [0][150] = temporal_luma_motion_vector_hls_collocated_tab_mvf_pred_flag_row_Addr_A;
    array_wdat   [0][150] = temporal_luma_motion_vector_hls_collocated_tab_mvf_pred_flag_row_Din_A;

    //------READ (array range, global adr = 286252, width=32, addr_width=32) -----//
    //s = 0; a = 309;
    temporal_luma_motion_vector_hls_collocated_tab_mvf_pred_flag_row_Dout_A = array_rdat  [0][309];
    //found a write signal pair
    array_argVld [0][309] = temporal_luma_motion_vector_hls_collocated_tab_mvf_pred_flag_row_EN_A & (temporal_luma_motion_vector_hls_collocated_tab_mvf_pred_flag_row_WEN_A == 0);
    array_adr    [0][309] = temporal_luma_motion_vector_hls_collocated_tab_mvf_pred_flag_row_Addr_A;

    temporal_luma_motion_vector_hls_ready = array_argRdy[0][137]& array_argRdy[0][296]& array_argRdy[0][138]& array_argRdy[0][297]& array_argRdy[0][139]& array_argRdy[0][298]& array_argRdy[0][140]& array_argRdy[0][299]& array_argRdy[0][141]& array_argRdy[0][300]& array_argRdy[0][142]& array_argRdy[0][301]& array_argRdy[0][143]& array_argRdy[0][302]& array_argRdy[0][144]& array_argRdy[0][303]& array_argRdy[0][145]& array_argRdy[0][304]& array_argRdy[0][146]& array_argRdy[0][305]& array_argRdy[0][147]& array_argRdy[0][306]& array_argRdy[0][148]& array_argRdy[0][307]& array_argRdy[0][149]& array_argRdy[0][308]& array_argRdy[0][150]& array_argRdy[0][309] & ~ap_arb_reload_running_r[temporal_luma_motion_vector_hls];
    array_ap_ce[0][137] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][296] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][138] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][297] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][139] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][298] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][140] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][299] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][141] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][300] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][142] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][301] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][143] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][302] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][144] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][303] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][145] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][304] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][146] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][305] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][147] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][306] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][148] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][307] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][149] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][308] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][150] = ap_ce[temporal_luma_motion_vector_hls];
    array_ap_ce[0][309] = ap_ce[temporal_luma_motion_vector_hls];

    if (ap_arb_ret[temporal_luma_motion_vector_hls] & ~ap_arb_ret_r[temporal_luma_motion_vector_hls]) begin
        ap_arb_ret_running[temporal_luma_motion_vector_hls] = 1;
        temporal_luma_motion_vector_hls_ready = 0;
    end

    scalar_argAckdone_all[temporal_luma_motion_vector_hls] = scalar_argAckdone[17][1][7] &
                                                scalar_argAckdone[18][0][7];
    if (ap_arb_ret_running[temporal_luma_motion_vector_hls] & scalar_argAckdone_all[temporal_luma_motion_vector_hls] &~ ap_arb_reload_running_r[temporal_luma_motion_vector_hls]) begin
        ap_arb_reload[temporal_luma_motion_vector_hls] = 1;
        ap_arb_reload_running[temporal_luma_motion_vector_hls] = 1;
    end

    if (ap_arb_start[temporal_luma_motion_vector_hls] &~ ap_arb_start_r[temporal_luma_motion_vector_hls]) begin
        ap_arb_start_running[temporal_luma_motion_vector_hls] = 1;
    end

    if (ap_arb_start_running[temporal_luma_motion_vector_hls] & ~scalar_writing_552& ~scalar_writing_556& ~scalar_writing_160& ~scalar_writing_164) begin
        ap_arb_start_running[temporal_luma_motion_vector_hls] = 0;
        ap_arb_reload[temporal_luma_motion_vector_hls] = 1;
    end

    scalar_argdone_all[temporal_luma_motion_vector_hls] = scalar_argdone[11][1][37] &
                                                                scalar_argdone[9][0][33] &
                                                                scalar_argdone[10][1][28] &
                                                                scalar_argdone[10][0][29] &
                                                                scalar_argdone[11][0][38] &
                                                                scalar_argdone[8][1][32] &
                                                                scalar_argdone[9][1][33] &
                                                                scalar_argdone[3][0][26] &
                                                                scalar_argdone[26][1][31] &
                                                                scalar_argdone[29][0][40] &
                                                                scalar_argdone[19][0][27] &
                                                                scalar_argdone[6][0][40] &
                                                                scalar_argdone[7][1][26] &
                                                                scalar_argdone[14][1][32] &
                                                                scalar_argdone[3][1][25] &
                                                                scalar_argdone[11][1][38] &
                                                                scalar_argdone[12][1][33];

    if (scalar_argdone_all_r[temporal_luma_motion_vector_hls]) begin
        scalar_argdone[11][1][37] = 0;
        scalar_argdone[9][0][33] = 0;
        scalar_argdone[10][1][28] = 0;
        scalar_argdone[10][0][29] = 0;
        scalar_argdone[11][0][38] = 0;
        scalar_argdone[8][1][32] = 0;
        scalar_argdone[9][1][33] = 0;
        scalar_argdone[3][0][26] = 0;
        scalar_argdone[26][1][31] = 0;
        scalar_argdone[29][0][40] = 0;
        scalar_argdone[19][0][27] = 0;
        scalar_argdone[6][0][40] = 0;
        scalar_argdone[7][1][26] = 0;
        scalar_argdone[14][1][32] = 0;
        scalar_argdone[3][1][25] = 0;
        scalar_argdone[11][1][38] = 0;
        scalar_argdone[12][1][33] = 0;

        if (ap_arb_start_r[temporal_luma_motion_vector_hls] & ~ap_running_r[temporal_luma_motion_vector_hls]) begin
            ap_start[temporal_luma_motion_vector_hls] = 1;
            ap_running[temporal_luma_motion_vector_hls] = 1;
        end
        else if (ap_arb_ret_running_r[temporal_luma_motion_vector_hls]) begin
            ap_arb_ret_running[temporal_luma_motion_vector_hls] = 0;
            ap_arb_reload_running[temporal_luma_motion_vector_hls] = 0;
        end
    end

    if (ap_start_r[temporal_luma_motion_vector_hls] & ap_ready_r[temporal_luma_motion_vector_hls]) begin
        ap_start[temporal_luma_motion_vector_hls] = 0;
    end

    if (ap_done_r[temporal_luma_motion_vector_hls]) begin
        ap_running[temporal_luma_motion_vector_hls] = 0;
    end
`endif
    //============================================================
    //is_diff_mer_hls       (f = 43)
    //============================================================
`ifdef enable_connect_is_diff_mer_hls
    //------READ (scalar, global adr = 552) comb block-----//
    //s = 10; r = 1; a = 23;
    if (scalar_rdat_vld_r[10][1][23]) begin
        scalar_argdone [10][1][23] = 1;
    end
    scalar_adr[10][1][23] = {ap_part[is_diff_mer_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][23]) begin
        scalar_argVld[10][1][23] = 0;
    end
    if (ap_arb_reload_r[is_diff_mer_hls]) begin
        scalar_argVld[10][1][23] = 1;
    end

    //------READ (scalar, global adr = 556) comb block-----//
    //s = 11; r = 1; a = 31;
    if (scalar_rdat_vld_r[11][1][31]) begin
        scalar_argdone [11][1][31] = 1;
    end
    scalar_adr[11][1][31] = {ap_part[is_diff_mer_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][31]) begin
        scalar_argVld[11][1][31] = 0;
    end
    if (ap_arb_reload_r[is_diff_mer_hls]) begin
        scalar_argVld[11][1][31] = 1;
    end

    //------READ (scalar, global adr = 1236) comb block-----//
    //s = 21; r = 1; a = 19;
    if (scalar_rdat_vld_r[21][1][19]) begin
        scalar_argdone [21][1][19] = 1;
    end
    scalar_adr[21][1][19] = {ap_part[is_diff_mer_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][19]) begin
        scalar_argVld[21][1][19] = 0;
    end
    if (ap_arb_reload_r[is_diff_mer_hls]) begin
        scalar_argVld[21][1][19] = 1;
    end

    if (ap_arb_ret[is_diff_mer_hls] & ~ap_arb_ret_r[is_diff_mer_hls]) begin
        ap_arb_ret_running[is_diff_mer_hls] = 1;
        is_diff_mer_hls_ready = 0;
    end

    scalar_argAckdone_all[is_diff_mer_hls] = 1;
    if (ap_arb_ret_running[is_diff_mer_hls] & scalar_argAckdone_all[is_diff_mer_hls] &~ ap_arb_reload_running_r[is_diff_mer_hls]) begin
        ap_arb_reload[is_diff_mer_hls] = 1;
        ap_arb_reload_running[is_diff_mer_hls] = 1;
    end

    if (ap_arb_start[is_diff_mer_hls] &~ ap_arb_start_r[is_diff_mer_hls]) begin
        ap_arb_start_running[is_diff_mer_hls] = 1;
    end

    if (ap_arb_start_running[is_diff_mer_hls] & ~scalar_writing_552& ~scalar_writing_556) begin
        ap_arb_start_running[is_diff_mer_hls] = 0;
        ap_arb_reload[is_diff_mer_hls] = 1;
    end

    scalar_argdone_all[is_diff_mer_hls] = scalar_argdone[10][1][23] &
                                                                scalar_argdone[11][1][31] &
                                                                scalar_argdone[21][1][19];

    if (scalar_argdone_all_r[is_diff_mer_hls]) begin
        scalar_argdone[10][1][23] = 0;
        scalar_argdone[11][1][31] = 0;
        scalar_argdone[21][1][19] = 0;

        if (ap_arb_start_r[is_diff_mer_hls] & ~ap_running_r[is_diff_mer_hls]) begin
            ap_start[is_diff_mer_hls] = 1;
            ap_running[is_diff_mer_hls] = 1;
        end
        else if (ap_arb_ret_running_r[is_diff_mer_hls]) begin
            ap_arb_ret_running[is_diff_mer_hls] = 0;
            ap_arb_reload_running[is_diff_mer_hls] = 0;
        end
    end

    if (ap_start_r[is_diff_mer_hls] & ap_ready_r[is_diff_mer_hls]) begin
        ap_start[is_diff_mer_hls] = 0;
    end

    if (ap_done_r[is_diff_mer_hls]) begin
        ap_running[is_diff_mer_hls] = 0;
    end
`endif
    //============================================================
    //append_zero_motion_vector_candidates_hls       (f = 44)
    //============================================================
`ifdef enable_connect_append_zero_motion_vector_candidates_hls
    //------READ (scalar, global adr = 1444) comb block-----//
    //s = 9; r = 0; a = 16;
    if (scalar_rdat_vld_r[9][0][16]) begin
        scalar_argdone [9][0][16] = 1;
    end
    scalar_adr[9][0][16] = {ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][16]) begin
        scalar_argVld[9][0][16] = 0;
    end
    if (ap_arb_reload_r[append_zero_motion_vector_candidates_hls]) begin
        scalar_argVld[9][0][16] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1300) comb block-----//
    //s = 5; r = 0; a = 0;
    if (scalar_argAck [5][0][0]) begin
        scalar_argVld [5][0][0] = 0;
        scalar_argAckdone [5][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_0_ap_vld_r) begin
        scalar_argVld [5][0][0] = 1;
        scalar_argAckdone [5][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_0_r;
    scalar_adr    [5][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1302) comb block-----//
    //s = 5; r = 1; a = 0;
    if (scalar_argAck [5][1][0]) begin
        scalar_argVld [5][1][0] = 0;
        scalar_argAckdone [5][1][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_1_ap_vld_r) begin
        scalar_argVld [5][1][0] = 1;
        scalar_argAckdone [5][1][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_1_r;
    scalar_adr    [5][1][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1304) comb block-----//
    //s = 6; r = 0; a = 0;
    if (scalar_argAck [6][0][0]) begin
        scalar_argVld [6][0][0] = 0;
        scalar_argAckdone [6][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_2_ap_vld_r) begin
        scalar_argVld [6][0][0] = 1;
        scalar_argAckdone [6][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_2_r;
    scalar_adr    [6][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1306) comb block-----//
    //s = 6; r = 1; a = 0;
    if (scalar_argAck [6][1][0]) begin
        scalar_argVld [6][1][0] = 0;
        scalar_argAckdone [6][1][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_3_ap_vld_r) begin
        scalar_argVld [6][1][0] = 1;
        scalar_argAckdone [6][1][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_3_r;
    scalar_adr    [6][1][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1308) comb block-----//
    //s = 7; r = 0; a = 0;
    if (scalar_argAck [7][0][0]) begin
        scalar_argVld [7][0][0] = 0;
        scalar_argAckdone [7][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_4_ap_vld_r) begin
        scalar_argVld [7][0][0] = 1;
        scalar_argAckdone [7][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv0_x_4_r;
    scalar_adr    [7][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1312) comb block-----//
    //s = 8; r = 0; a = 0;
    if (scalar_argAck [8][0][0]) begin
        scalar_argVld [8][0][0] = 0;
        scalar_argAckdone [8][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_0_ap_vld_r) begin
        scalar_argVld [8][0][0] = 1;
        scalar_argAckdone [8][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_0_r;
    scalar_adr    [8][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1314) comb block-----//
    //s = 8; r = 1; a = 0;
    if (scalar_argAck [8][1][0]) begin
        scalar_argVld [8][1][0] = 0;
        scalar_argAckdone [8][1][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_1_ap_vld_r) begin
        scalar_argVld [8][1][0] = 1;
        scalar_argAckdone [8][1][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_1_r;
    scalar_adr    [8][1][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1316) comb block-----//
    //s = 9; r = 0; a = 0;
    if (scalar_argAck [9][0][0]) begin
        scalar_argVld [9][0][0] = 0;
        scalar_argAckdone [9][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_2_ap_vld_r) begin
        scalar_argVld [9][0][0] = 1;
        scalar_argAckdone [9][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_2_r;
    scalar_adr    [9][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1318) comb block-----//
    //s = 9; r = 1; a = 0;
    if (scalar_argAck [9][1][0]) begin
        scalar_argVld [9][1][0] = 0;
        scalar_argAckdone [9][1][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_3_ap_vld_r) begin
        scalar_argVld [9][1][0] = 1;
        scalar_argAckdone [9][1][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_3_r;
    scalar_adr    [9][1][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1320) comb block-----//
    //s = 10; r = 0; a = 0;
    if (scalar_argAck [10][0][0]) begin
        scalar_argVld [10][0][0] = 0;
        scalar_argAckdone [10][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_4_ap_vld_r) begin
        scalar_argVld [10][0][0] = 1;
        scalar_argAckdone [10][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv0_y_4_r;
    scalar_adr    [10][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1324) comb block-----//
    //s = 11; r = 0; a = 0;
    if (scalar_argAck [11][0][0]) begin
        scalar_argVld [11][0][0] = 0;
        scalar_argAckdone [11][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_0_ap_vld_r) begin
        scalar_argVld [11][0][0] = 1;
        scalar_argAckdone [11][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_0_r;
    scalar_adr    [11][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1326) comb block-----//
    //s = 11; r = 1; a = 0;
    if (scalar_argAck [11][1][0]) begin
        scalar_argVld [11][1][0] = 0;
        scalar_argAckdone [11][1][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_1_ap_vld_r) begin
        scalar_argVld [11][1][0] = 1;
        scalar_argAckdone [11][1][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][1][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_1_r;
    scalar_adr    [11][1][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1328) comb block-----//
    //s = 12; r = 0; a = 0;
    if (scalar_argAck [12][0][0]) begin
        scalar_argVld [12][0][0] = 0;
        scalar_argAckdone [12][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_2_ap_vld_r) begin
        scalar_argVld [12][0][0] = 1;
        scalar_argAckdone [12][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_2_r;
    scalar_adr    [12][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1330) comb block-----//
    //s = 12; r = 1; a = 0;
    if (scalar_argAck [12][1][0]) begin
        scalar_argVld [12][1][0] = 0;
        scalar_argAckdone [12][1][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_3_ap_vld_r) begin
        scalar_argVld [12][1][0] = 1;
        scalar_argAckdone [12][1][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_3_r;
    scalar_adr    [12][1][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1332) comb block-----//
    //s = 13; r = 0; a = 0;
    if (scalar_argAck [13][0][0]) begin
        scalar_argVld [13][0][0] = 0;
        scalar_argAckdone [13][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_4_ap_vld_r) begin
        scalar_argVld [13][0][0] = 1;
        scalar_argAckdone [13][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv1_x_4_r;
    scalar_adr    [13][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1336) comb block-----//
    //s = 14; r = 0; a = 0;
    if (scalar_argAck [14][0][0]) begin
        scalar_argVld [14][0][0] = 0;
        scalar_argAckdone [14][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_0_ap_vld_r) begin
        scalar_argVld [14][0][0] = 1;
        scalar_argAckdone [14][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_0_r;
    scalar_adr    [14][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1338) comb block-----//
    //s = 14; r = 1; a = 0;
    if (scalar_argAck [14][1][0]) begin
        scalar_argVld [14][1][0] = 0;
        scalar_argAckdone [14][1][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_1_ap_vld_r) begin
        scalar_argVld [14][1][0] = 1;
        scalar_argAckdone [14][1][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_1_r;
    scalar_adr    [14][1][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1340) comb block-----//
    //s = 15; r = 0; a = 0;
    if (scalar_argAck [15][0][0]) begin
        scalar_argVld [15][0][0] = 0;
        scalar_argAckdone [15][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_2_ap_vld_r) begin
        scalar_argVld [15][0][0] = 1;
        scalar_argAckdone [15][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_2_r;
    scalar_adr    [15][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1342) comb block-----//
    //s = 15; r = 1; a = 0;
    if (scalar_argAck [15][1][0]) begin
        scalar_argVld [15][1][0] = 0;
        scalar_argAckdone [15][1][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_3_ap_vld_r) begin
        scalar_argVld [15][1][0] = 1;
        scalar_argAckdone [15][1][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_3_r;
    scalar_adr    [15][1][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1344) comb block-----//
    //s = 16; r = 0; a = 0;
    if (scalar_argAck [16][0][0]) begin
        scalar_argVld [16][0][0] = 0;
        scalar_argAckdone [16][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_4_ap_vld_r) begin
        scalar_argVld [16][0][0] = 1;
        scalar_argAckdone [16][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_mv1_y_4_r;
    scalar_adr    [16][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1348) comb block-----//
    //s = 17; r = 0; a = 0;
    if (scalar_argAck [17][0][0]) begin
        scalar_argVld [17][0][0] = 0;
        scalar_argAckdone [17][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc0_0_ap_vld_r) begin
        scalar_argVld [17][0][0] = 1;
        scalar_argAckdone [17][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_poc0_0_r;
    scalar_adr    [17][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1352) comb block-----//
    //s = 18; r = 0; a = 0;
    if (scalar_argAck [18][0][0]) begin
        scalar_argVld [18][0][0] = 0;
        scalar_argAckdone [18][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc0_1_ap_vld_r) begin
        scalar_argVld [18][0][0] = 1;
        scalar_argAckdone [18][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_poc0_1_r;
    scalar_adr    [18][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1356) comb block-----//
    //s = 19; r = 0; a = 0;
    if (scalar_argAck [19][0][0]) begin
        scalar_argVld [19][0][0] = 0;
        scalar_argAckdone [19][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc0_2_ap_vld_r) begin
        scalar_argVld [19][0][0] = 1;
        scalar_argAckdone [19][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_poc0_2_r;
    scalar_adr    [19][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1360) comb block-----//
    //s = 20; r = 0; a = 0;
    if (scalar_argAck [20][0][0]) begin
        scalar_argVld [20][0][0] = 0;
        scalar_argAckdone [20][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc0_3_ap_vld_r) begin
        scalar_argVld [20][0][0] = 1;
        scalar_argAckdone [20][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_poc0_3_r;
    scalar_adr    [20][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1364) comb block-----//
    //s = 21; r = 0; a = 0;
    if (scalar_argAck [21][0][0]) begin
        scalar_argVld [21][0][0] = 0;
        scalar_argAckdone [21][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc0_4_ap_vld_r) begin
        scalar_argVld [21][0][0] = 1;
        scalar_argAckdone [21][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_poc0_4_r;
    scalar_adr    [21][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1368) comb block-----//
    //s = 22; r = 0; a = 0;
    if (scalar_argAck [22][0][0]) begin
        scalar_argVld [22][0][0] = 0;
        scalar_argAckdone [22][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc1_0_ap_vld_r) begin
        scalar_argVld [22][0][0] = 1;
        scalar_argAckdone [22][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_poc1_0_r;
    scalar_adr    [22][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1372) comb block-----//
    //s = 23; r = 0; a = 0;
    if (scalar_argAck [23][0][0]) begin
        scalar_argVld [23][0][0] = 0;
        scalar_argAckdone [23][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc1_1_ap_vld_r) begin
        scalar_argVld [23][0][0] = 1;
        scalar_argAckdone [23][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_poc1_1_r;
    scalar_adr    [23][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1376) comb block-----//
    //s = 24; r = 0; a = 0;
    if (scalar_argAck [24][0][0]) begin
        scalar_argVld [24][0][0] = 0;
        scalar_argAckdone [24][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc1_2_ap_vld_r) begin
        scalar_argVld [24][0][0] = 1;
        scalar_argAckdone [24][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_poc1_2_r;
    scalar_adr    [24][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1380) comb block-----//
    //s = 25; r = 0; a = 0;
    if (scalar_argAck [25][0][0]) begin
        scalar_argVld [25][0][0] = 0;
        scalar_argAckdone [25][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc1_3_ap_vld_r) begin
        scalar_argVld [25][0][0] = 1;
        scalar_argAckdone [25][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_poc1_3_r;
    scalar_adr    [25][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1384) comb block-----//
    //s = 26; r = 0; a = 0;
    if (scalar_argAck [26][0][0]) begin
        scalar_argVld [26][0][0] = 0;
        scalar_argAckdone [26][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_poc1_4_ap_vld_r) begin
        scalar_argVld [26][0][0] = 1;
        scalar_argAckdone [26][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_poc1_4_r;
    scalar_adr    [26][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1388) comb block-----//
    //s = 27; r = 0; a = 0;
    if (scalar_argAck [27][0][0]) begin
        scalar_argVld [27][0][0] = 0;
        scalar_argAckdone [27][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_0_ap_vld_r) begin
        scalar_argVld [27][0][0] = 1;
        scalar_argAckdone [27][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_0_r;
    scalar_adr    [27][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1389) comb block-----//
    //s = 27; r = 1; a = 0;
    if (scalar_argAck [27][1][0]) begin
        scalar_argVld [27][1][0] = 0;
        scalar_argAckdone [27][1][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_1_ap_vld_r) begin
        scalar_argVld [27][1][0] = 1;
        scalar_argAckdone [27][1][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][1][0] = append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_1_r;
    scalar_adr    [27][1][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1390) comb block-----//
    //s = 27; r = 0; a = 1;
    if (scalar_argAck [27][0][1]) begin
        scalar_argVld [27][0][1] = 0;
        scalar_argAckdone [27][0][1] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_2_ap_vld_r) begin
        scalar_argVld [27][0][1] = 1;
        scalar_argAckdone [27][0][1] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][1] = append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_2_r;
    scalar_adr    [27][0][1] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1391) comb block-----//
    //s = 27; r = 1; a = 1;
    if (scalar_argAck [27][1][1]) begin
        scalar_argVld [27][1][1] = 0;
        scalar_argAckdone [27][1][1] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_3_ap_vld_r) begin
        scalar_argVld [27][1][1] = 1;
        scalar_argAckdone [27][1][1] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][1][1] = append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_3_r;
    scalar_adr    [27][1][1] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1392) comb block-----//
    //s = 28; r = 0; a = 0;
    if (scalar_argAck [28][0][0]) begin
        scalar_argVld [28][0][0] = 0;
        scalar_argAckdone [28][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_4_ap_vld_r) begin
        scalar_argVld [28][0][0] = 1;
        scalar_argAckdone [28][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx0_4_r;
    scalar_adr    [28][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1396) comb block-----//
    //s = 29; r = 0; a = 0;
    if (scalar_argAck [29][0][0]) begin
        scalar_argVld [29][0][0] = 0;
        scalar_argAckdone [29][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_0_ap_vld_r) begin
        scalar_argVld [29][0][0] = 1;
        scalar_argAckdone [29][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_0_r;
    scalar_adr    [29][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1397) comb block-----//
    //s = 29; r = 1; a = 0;
    if (scalar_argAck [29][1][0]) begin
        scalar_argVld [29][1][0] = 0;
        scalar_argAckdone [29][1][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_1_ap_vld_r) begin
        scalar_argVld [29][1][0] = 1;
        scalar_argAckdone [29][1][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][0] = append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_1_r;
    scalar_adr    [29][1][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1398) comb block-----//
    //s = 29; r = 0; a = 1;
    if (scalar_argAck [29][0][1]) begin
        scalar_argVld [29][0][1] = 0;
        scalar_argAckdone [29][0][1] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_2_ap_vld_r) begin
        scalar_argVld [29][0][1] = 1;
        scalar_argAckdone [29][0][1] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][1] = append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_2_r;
    scalar_adr    [29][0][1] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1399) comb block-----//
    //s = 29; r = 1; a = 1;
    if (scalar_argAck [29][1][1]) begin
        scalar_argVld [29][1][1] = 0;
        scalar_argAckdone [29][1][1] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_3_ap_vld_r) begin
        scalar_argVld [29][1][1] = 1;
        scalar_argAckdone [29][1][1] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][1] = append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_3_r;
    scalar_adr    [29][1][1] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1400) comb block-----//
    //s = 30; r = 0; a = 0;
    if (scalar_argAck [30][0][0]) begin
        scalar_argVld [30][0][0] = 0;
        scalar_argAckdone [30][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_4_ap_vld_r) begin
        scalar_argVld [30][0][0] = 1;
        scalar_argAckdone [30][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [30][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_ref_idx1_4_r;
    scalar_adr    [30][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1404) comb block-----//
    //s = 31; r = 0; a = 0;
    if (scalar_argAck [31][0][0]) begin
        scalar_argVld [31][0][0] = 0;
        scalar_argAckdone [31][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_0_ap_vld_r) begin
        scalar_argVld [31][0][0] = 1;
        scalar_argAckdone [31][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_0_r;
    scalar_adr    [31][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1405) comb block-----//
    //s = 31; r = 1; a = 0;
    if (scalar_argAck [31][1][0]) begin
        scalar_argVld [31][1][0] = 0;
        scalar_argAckdone [31][1][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_1_ap_vld_r) begin
        scalar_argVld [31][1][0] = 1;
        scalar_argAckdone [31][1][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][1][0] = append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_1_r;
    scalar_adr    [31][1][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1406) comb block-----//
    //s = 31; r = 0; a = 1;
    if (scalar_argAck [31][0][1]) begin
        scalar_argVld [31][0][1] = 0;
        scalar_argAckdone [31][0][1] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_2_ap_vld_r) begin
        scalar_argVld [31][0][1] = 1;
        scalar_argAckdone [31][0][1] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][1] = append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_2_r;
    scalar_adr    [31][0][1] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1407) comb block-----//
    //s = 31; r = 1; a = 1;
    if (scalar_argAck [31][1][1]) begin
        scalar_argVld [31][1][1] = 0;
        scalar_argAckdone [31][1][1] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_3_ap_vld_r) begin
        scalar_argVld [31][1][1] = 1;
        scalar_argAckdone [31][1][1] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][1][1] = append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_3_r;
    scalar_adr    [31][1][1] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1408) comb block-----//
    //s = 0; r = 0; a = 0;
    if (scalar_argAck [0][0][0]) begin
        scalar_argVld [0][0][0] = 0;
        scalar_argAckdone [0][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_4_ap_vld_r) begin
        scalar_argVld [0][0][0] = 1;
        scalar_argAckdone [0][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][0] = append_zero_motion_vector_candidates_hls_mergecand_list_pred_flag_4_r;
    scalar_adr    [0][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 132) comb block-----//
    //s = 1; r = 0; a = 9;
    if (scalar_rdat_vld_r[1][0][9]) begin
        scalar_argdone [1][0][9] = 1;
    end
    scalar_adr[1][0][9] = {ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][9]) begin
        scalar_argVld[1][0][9] = 0;
    end
    if (ap_arb_reload_r[append_zero_motion_vector_candidates_hls]) begin
        scalar_argVld[1][0][9] = 1;
    end

    //------WRITE (scalar, global adr = 132) comb block-----//
    //s = 1; r = 0; a = 0;
    if (scalar_argAck [1][0][0]) begin
        scalar_argVld [1][0][0] = 0;
        scalar_argAckdone [1][0][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_o_ap_vld_r) begin
        scalar_argVld [1][0][0] = 1;
        scalar_argAckdone [1][0][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][0][0] = append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_o_r;
    scalar_adr    [1][0][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1232) comb block-----//
    //s = 20; r = 0; a = 10;
    if (scalar_rdat_vld_r[20][0][10]) begin
        scalar_argdone [20][0][10] = 1;
    end
    scalar_adr[20][0][10] = {ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][10]) begin
        scalar_argVld[20][0][10] = 0;
    end
    if (ap_arb_reload_r[append_zero_motion_vector_candidates_hls]) begin
        scalar_argVld[20][0][10] = 1;
    end

    //------WRITE (scalar, global adr = 1232) comb block-----//
    //s = 20; r = 1; a = 0;
    if (scalar_argAck [20][1][0]) begin
        scalar_argVld [20][1][0] = 0;
        scalar_argAckdone [20][1][0] = 1;
    end
    if (append_zero_motion_vector_candidates_hls_zero_idx_o_ap_vld_r) begin
        scalar_argVld [20][1][0] = 1;
        scalar_argAckdone [20][1][0] = 0;
        ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][0] = append_zero_motion_vector_candidates_hls_zero_idx_o_r;
    scalar_adr    [20][1][0] = {ap_part_w[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 0; a = 8;
    if (scalar_rdat_vld_r[17][0][8]) begin
        scalar_argdone [17][0][8] = 1;
    end
    scalar_adr[17][0][8] = {ap_part[append_zero_motion_vector_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][8]) begin
        scalar_argVld[17][0][8] = 0;
    end
    if (ap_arb_reload_r[append_zero_motion_vector_candidates_hls]) begin
        scalar_argVld[17][0][8] = 1;
    end

    //------WRITE (array range, global adr = 286224, width=32, addr_width=32) -----//
    //s = 0; a = 0;
    array_argVld [0][0] = append_zero_motion_vector_candidates_hls_refPicList_0_list_EN_A & (append_zero_motion_vector_candidates_hls_refPicList_0_list_WEN_A != 0);
    array_adr    [0][0] = append_zero_motion_vector_candidates_hls_refPicList_0_list_Addr_A;
    array_wdat   [0][0] = append_zero_motion_vector_candidates_hls_refPicList_0_list_Din_A;

    //------READ (array range, global adr = 286224, width=32, addr_width=32) -----//
    //s = 0; a = 160;
    append_zero_motion_vector_candidates_hls_refPicList_0_list_Dout_A = array_rdat  [0][160];
    //found a write signal pair
    array_argVld [0][160] = append_zero_motion_vector_candidates_hls_refPicList_0_list_EN_A & (append_zero_motion_vector_candidates_hls_refPicList_0_list_WEN_A == 0);
    array_adr    [0][160] = append_zero_motion_vector_candidates_hls_refPicList_0_list_Addr_A;

    //------WRITE (array range, global adr = 286228, width=32, addr_width=32) -----//
    //s = 0; a = 1;
    array_argVld [0][1] = append_zero_motion_vector_candidates_hls_refPicList_1_list_EN_A & (append_zero_motion_vector_candidates_hls_refPicList_1_list_WEN_A != 0);
    array_adr    [0][1] = append_zero_motion_vector_candidates_hls_refPicList_1_list_Addr_A;
    array_wdat   [0][1] = append_zero_motion_vector_candidates_hls_refPicList_1_list_Din_A;

    //------READ (array range, global adr = 286228, width=32, addr_width=32) -----//
    //s = 0; a = 161;
    append_zero_motion_vector_candidates_hls_refPicList_1_list_Dout_A = array_rdat  [0][161];
    //found a write signal pair
    array_argVld [0][161] = append_zero_motion_vector_candidates_hls_refPicList_1_list_EN_A & (append_zero_motion_vector_candidates_hls_refPicList_1_list_WEN_A == 0);
    array_adr    [0][161] = append_zero_motion_vector_candidates_hls_refPicList_1_list_Addr_A;

    append_zero_motion_vector_candidates_hls_ready = array_argRdy[0][0]& array_argRdy[0][160]& array_argRdy[0][1]& array_argRdy[0][161] & ~ap_arb_reload_running_r[append_zero_motion_vector_candidates_hls];
    array_ap_ce[0][0] = ap_ce[append_zero_motion_vector_candidates_hls];
    array_ap_ce[0][160] = ap_ce[append_zero_motion_vector_candidates_hls];
    array_ap_ce[0][1] = ap_ce[append_zero_motion_vector_candidates_hls];
    array_ap_ce[0][161] = ap_ce[append_zero_motion_vector_candidates_hls];

    if (ap_arb_ret[append_zero_motion_vector_candidates_hls] & ~ap_arb_ret_r[append_zero_motion_vector_candidates_hls]) begin
        ap_arb_ret_running[append_zero_motion_vector_candidates_hls] = 1;
        append_zero_motion_vector_candidates_hls_ready = 0;
    end

    scalar_argAckdone_all[append_zero_motion_vector_candidates_hls] = scalar_argAckdone[5][0][0] &
                                                scalar_argAckdone[5][1][0] &
                                                scalar_argAckdone[6][0][0] &
                                                scalar_argAckdone[6][1][0] &
                                                scalar_argAckdone[7][0][0] &
                                                scalar_argAckdone[8][0][0] &
                                                scalar_argAckdone[8][1][0] &
                                                scalar_argAckdone[9][0][0] &
                                                scalar_argAckdone[9][1][0] &
                                                scalar_argAckdone[10][0][0] &
                                                scalar_argAckdone[11][0][0] &
                                                scalar_argAckdone[11][1][0] &
                                                scalar_argAckdone[12][0][0] &
                                                scalar_argAckdone[12][1][0] &
                                                scalar_argAckdone[13][0][0] &
                                                scalar_argAckdone[14][0][0] &
                                                scalar_argAckdone[14][1][0] &
                                                scalar_argAckdone[15][0][0] &
                                                scalar_argAckdone[15][1][0] &
                                                scalar_argAckdone[16][0][0] &
                                                scalar_argAckdone[17][0][0] &
                                                scalar_argAckdone[18][0][0] &
                                                scalar_argAckdone[19][0][0] &
                                                scalar_argAckdone[20][0][0] &
                                                scalar_argAckdone[21][0][0] &
                                                scalar_argAckdone[22][0][0] &
                                                scalar_argAckdone[23][0][0] &
                                                scalar_argAckdone[24][0][0] &
                                                scalar_argAckdone[25][0][0] &
                                                scalar_argAckdone[26][0][0] &
                                                scalar_argAckdone[27][0][0] &
                                                scalar_argAckdone[27][1][0] &
                                                scalar_argAckdone[27][0][1] &
                                                scalar_argAckdone[27][1][1] &
                                                scalar_argAckdone[28][0][0] &
                                                scalar_argAckdone[29][0][0] &
                                                scalar_argAckdone[29][1][0] &
                                                scalar_argAckdone[29][0][1] &
                                                scalar_argAckdone[29][1][1] &
                                                scalar_argAckdone[30][0][0] &
                                                scalar_argAckdone[31][0][0] &
                                                scalar_argAckdone[31][1][0] &
                                                scalar_argAckdone[31][0][1] &
                                                scalar_argAckdone[31][1][1] &
                                                scalar_argAckdone[0][0][0] &
                                                scalar_argAckdone[1][0][0] &
                                                scalar_argAckdone[20][1][0];
    if (ap_arb_ret_running[append_zero_motion_vector_candidates_hls] & scalar_argAckdone_all[append_zero_motion_vector_candidates_hls] &~ ap_arb_reload_running_r[append_zero_motion_vector_candidates_hls]) begin
        ap_arb_reload[append_zero_motion_vector_candidates_hls] = 1;
        ap_arb_reload_running[append_zero_motion_vector_candidates_hls] = 1;
    end

    if (ap_arb_start[append_zero_motion_vector_candidates_hls] &~ ap_arb_start_r[append_zero_motion_vector_candidates_hls]) begin
        ap_arb_start_running[append_zero_motion_vector_candidates_hls] = 1;
    end

    if (ap_arb_start_running[append_zero_motion_vector_candidates_hls] & ~scalar_writing_1444& ~scalar_writing_132& ~scalar_writing_1232) begin
        ap_arb_start_running[append_zero_motion_vector_candidates_hls] = 0;
        ap_arb_reload[append_zero_motion_vector_candidates_hls] = 1;
    end

    scalar_argdone_all[append_zero_motion_vector_candidates_hls] = scalar_argdone[9][0][16] &
                                                                scalar_argdone[1][0][9] &
                                                                scalar_argdone[20][0][10] &
                                                                scalar_argdone[17][0][8];

    if (scalar_argdone_all_r[append_zero_motion_vector_candidates_hls]) begin
        scalar_argdone[9][0][16] = 0;
        scalar_argdone[1][0][9] = 0;
        scalar_argdone[20][0][10] = 0;
        scalar_argdone[17][0][8] = 0;

        if (ap_arb_start_r[append_zero_motion_vector_candidates_hls] & ~ap_running_r[append_zero_motion_vector_candidates_hls]) begin
            ap_start[append_zero_motion_vector_candidates_hls] = 1;
            ap_running[append_zero_motion_vector_candidates_hls] = 1;
        end
        else if (ap_arb_ret_running_r[append_zero_motion_vector_candidates_hls]) begin
            ap_arb_ret_running[append_zero_motion_vector_candidates_hls] = 0;
            ap_arb_reload_running[append_zero_motion_vector_candidates_hls] = 0;
        end
    end

    if (ap_start_r[append_zero_motion_vector_candidates_hls] & ap_ready_r[append_zero_motion_vector_candidates_hls]) begin
        ap_start[append_zero_motion_vector_candidates_hls] = 0;
    end

    if (ap_done_r[append_zero_motion_vector_candidates_hls]) begin
        ap_running[append_zero_motion_vector_candidates_hls] = 0;
    end
`endif
    //============================================================
    //merge_mode_exit_hls       (f = 45)
    //============================================================
`ifdef enable_connect_merge_mode_exit_hls
    //------READ (scalar, global adr = 1444) comb block-----//
    //s = 9; r = 1; a = 28;
    if (scalar_rdat_vld_r[9][1][28]) begin
        scalar_argdone [9][1][28] = 1;
    end
    scalar_adr[9][1][28] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][28]) begin
        scalar_argVld[9][1][28] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld[9][1][28] = 1;
    end

    //------WRITE (scalar, global adr = 816) comb block-----//
    //s = 12; r = 0; a = 10;
    if (scalar_argAck [12][0][10]) begin
        scalar_argVld [12][0][10] = 0;
        scalar_argAckdone [12][0][10] = 1;
    end
    if (merge_mode_exit_hls_current_mv_pred_flag_ap_vld_r) begin
        scalar_argVld [12][0][10] = 1;
        scalar_argAckdone [12][0][10] = 0;
        ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION] = ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][10] = merge_mode_exit_hls_current_mv_pred_flag_r;
    scalar_adr    [12][0][10] = {ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 784) comb block-----//
    //s = 4; r = 1; a = 7;
    if (scalar_argAck [4][1][7]) begin
        scalar_argVld [4][1][7] = 0;
        scalar_argAckdone [4][1][7] = 1;
    end
    if (merge_mode_exit_hls_current_mv_mv_0_x_ap_vld_r) begin
        scalar_argVld [4][1][7] = 1;
        scalar_argAckdone [4][1][7] = 0;
        ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION] = ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][1][7] = merge_mode_exit_hls_current_mv_mv_0_x_r;
    scalar_adr    [4][1][7] = {ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 788) comb block-----//
    //s = 5; r = 1; a = 13;
    if (scalar_argAck [5][1][13]) begin
        scalar_argVld [5][1][13] = 0;
        scalar_argAckdone [5][1][13] = 1;
    end
    if (merge_mode_exit_hls_current_mv_mv_0_y_ap_vld_r) begin
        scalar_argVld [5][1][13] = 1;
        scalar_argAckdone [5][1][13] = 0;
        ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION] = ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][13] = merge_mode_exit_hls_current_mv_mv_0_y_r;
    scalar_adr    [5][1][13] = {ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 792) comb block-----//
    //s = 6; r = 0; a = 13;
    if (scalar_argAck [6][0][13]) begin
        scalar_argVld [6][0][13] = 0;
        scalar_argAckdone [6][0][13] = 1;
    end
    if (merge_mode_exit_hls_current_mv_mv_1_x_ap_vld_r) begin
        scalar_argVld [6][0][13] = 1;
        scalar_argAckdone [6][0][13] = 0;
        ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION] = ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][13] = merge_mode_exit_hls_current_mv_mv_1_x_r;
    scalar_adr    [6][0][13] = {ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 796) comb block-----//
    //s = 7; r = 1; a = 11;
    if (scalar_argAck [7][1][11]) begin
        scalar_argVld [7][1][11] = 0;
        scalar_argAckdone [7][1][11] = 1;
    end
    if (merge_mode_exit_hls_current_mv_mv_1_y_ap_vld_r) begin
        scalar_argVld [7][1][11] = 1;
        scalar_argAckdone [7][1][11] = 0;
        ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION] = ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][11] = merge_mode_exit_hls_current_mv_mv_1_y_r;
    scalar_adr    [7][1][11] = {ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 800) comb block-----//
    //s = 8; r = 1; a = 13;
    if (scalar_argAck [8][1][13]) begin
        scalar_argVld [8][1][13] = 0;
        scalar_argAckdone [8][1][13] = 1;
    end
    if (merge_mode_exit_hls_current_mv_poc_0_ap_vld_r) begin
        scalar_argVld [8][1][13] = 1;
        scalar_argAckdone [8][1][13] = 0;
        ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION] = ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][13] = merge_mode_exit_hls_current_mv_poc_0_r;
    scalar_adr    [8][1][13] = {ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 804) comb block-----//
    //s = 9; r = 1; a = 13;
    if (scalar_argAck [9][1][13]) begin
        scalar_argVld [9][1][13] = 0;
        scalar_argAckdone [9][1][13] = 1;
    end
    if (merge_mode_exit_hls_current_mv_poc_1_ap_vld_r) begin
        scalar_argVld [9][1][13] = 1;
        scalar_argAckdone [9][1][13] = 0;
        ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION] = ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][13] = merge_mode_exit_hls_current_mv_poc_1_r;
    scalar_adr    [9][1][13] = {ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 808) comb block-----//
    //s = 10; r = 0; a = 11;
    if (scalar_argAck [10][0][11]) begin
        scalar_argVld [10][0][11] = 0;
        scalar_argAckdone [10][0][11] = 1;
    end
    if (merge_mode_exit_hls_current_mv_ref_idx_0_ap_vld_r) begin
        scalar_argVld [10][0][11] = 1;
        scalar_argAckdone [10][0][11] = 0;
        ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION] = ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][11] = merge_mode_exit_hls_current_mv_ref_idx_0_r;
    scalar_adr    [10][0][11] = {ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 812) comb block-----//
    //s = 11; r = 1; a = 8;
    if (scalar_argAck [11][1][8]) begin
        scalar_argVld [11][1][8] = 0;
        scalar_argAckdone [11][1][8] = 1;
    end
    if (merge_mode_exit_hls_current_mv_ref_idx_1_ap_vld_r) begin
        scalar_argVld [11][1][8] = 1;
        scalar_argAckdone [11][1][8] = 0;
        ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION] = ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][1][8] = merge_mode_exit_hls_current_mv_ref_idx_1_r;
    scalar_adr    [11][1][8] = {ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1300) comb block-----//
    //s = 5; r = 1; a = 28;
    if (scalar_rdat_vld_r[5][1][28]) begin
        scalar_argdone [5][1][28] = 1;
    end
    scalar_adr    [5][1][28] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][28]) begin
        scalar_argVld [5][1][28] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [5][1][28] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1302) comb block-----//
    //s = 5; r = 0; a = 30;
    if (scalar_rdat_vld_r[5][0][30]) begin
        scalar_argdone [5][0][30] = 1;
    end
    scalar_adr    [5][0][30] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][30]) begin
        scalar_argVld [5][0][30] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [5][0][30] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1304) comb block-----//
    //s = 6; r = 1; a = 35;
    if (scalar_rdat_vld_r[6][1][35]) begin
        scalar_argdone [6][1][35] = 1;
    end
    scalar_adr    [6][1][35] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][35]) begin
        scalar_argVld [6][1][35] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [6][1][35] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1306) comb block-----//
    //s = 6; r = 0; a = 37;
    if (scalar_rdat_vld_r[6][0][37]) begin
        scalar_argdone [6][0][37] = 1;
    end
    scalar_adr    [6][0][37] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][37]) begin
        scalar_argVld [6][0][37] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [6][0][37] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1308) comb block-----//
    //s = 7; r = 0; a = 24;
    if (scalar_rdat_vld_r[7][0][24]) begin
        scalar_argdone [7][0][24] = 1;
    end
    scalar_adr    [7][0][24] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][0][24]) begin
        scalar_argVld [7][0][24] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [7][0][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1312) comb block-----//
    //s = 8; r = 0; a = 29;
    if (scalar_rdat_vld_r[8][0][29]) begin
        scalar_argdone [8][0][29] = 1;
    end
    scalar_adr    [8][0][29] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][29]) begin
        scalar_argVld [8][0][29] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [8][0][29] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1314) comb block-----//
    //s = 8; r = 1; a = 29;
    if (scalar_rdat_vld_r[8][1][29]) begin
        scalar_argdone [8][1][29] = 1;
    end
    scalar_adr    [8][1][29] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][29]) begin
        scalar_argVld [8][1][29] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [8][1][29] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1316) comb block-----//
    //s = 9; r = 0; a = 29;
    if (scalar_rdat_vld_r[9][0][29]) begin
        scalar_argdone [9][0][29] = 1;
    end
    scalar_adr    [9][0][29] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][29]) begin
        scalar_argVld [9][0][29] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [9][0][29] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1318) comb block-----//
    //s = 9; r = 1; a = 29;
    if (scalar_rdat_vld_r[9][1][29]) begin
        scalar_argdone [9][1][29] = 1;
    end
    scalar_adr    [9][1][29] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][29]) begin
        scalar_argVld [9][1][29] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [9][1][29] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1320) comb block-----//
    //s = 10; r = 0; a = 25;
    if (scalar_rdat_vld_r[10][0][25]) begin
        scalar_argdone [10][0][25] = 1;
    end
    scalar_adr    [10][0][25] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][25]) begin
        scalar_argVld [10][0][25] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [10][0][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1324) comb block-----//
    //s = 11; r = 1; a = 32;
    if (scalar_rdat_vld_r[11][1][32]) begin
        scalar_argdone [11][1][32] = 1;
    end
    scalar_adr    [11][1][32] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][32]) begin
        scalar_argVld [11][1][32] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [11][1][32] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1326) comb block-----//
    //s = 11; r = 0; a = 33;
    if (scalar_rdat_vld_r[11][0][33]) begin
        scalar_argdone [11][0][33] = 1;
    end
    scalar_adr    [11][0][33] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][33]) begin
        scalar_argVld [11][0][33] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [11][0][33] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1328) comb block-----//
    //s = 12; r = 1; a = 30;
    if (scalar_rdat_vld_r[12][1][30]) begin
        scalar_argdone [12][1][30] = 1;
    end
    scalar_adr    [12][1][30] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][30]) begin
        scalar_argVld [12][1][30] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [12][1][30] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1330) comb block-----//
    //s = 12; r = 0; a = 32;
    if (scalar_rdat_vld_r[12][0][32]) begin
        scalar_argdone [12][0][32] = 1;
    end
    scalar_adr    [12][0][32] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][32]) begin
        scalar_argVld [12][0][32] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [12][0][32] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1332) comb block-----//
    //s = 13; r = 1; a = 28;
    if (scalar_rdat_vld_r[13][1][28]) begin
        scalar_argdone [13][1][28] = 1;
    end
    scalar_adr    [13][1][28] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][28]) begin
        scalar_argVld [13][1][28] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [13][1][28] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1336) comb block-----//
    //s = 14; r = 1; a = 29;
    if (scalar_rdat_vld_r[14][1][29]) begin
        scalar_argdone [14][1][29] = 1;
    end
    scalar_adr    [14][1][29] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][29]) begin
        scalar_argVld [14][1][29] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [14][1][29] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1338) comb block-----//
    //s = 14; r = 0; a = 30;
    if (scalar_rdat_vld_r[14][0][30]) begin
        scalar_argdone [14][0][30] = 1;
    end
    scalar_adr    [14][0][30] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][30]) begin
        scalar_argVld [14][0][30] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [14][0][30] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1340) comb block-----//
    //s = 15; r = 0; a = 26;
    if (scalar_rdat_vld_r[15][0][26]) begin
        scalar_argdone [15][0][26] = 1;
    end
    scalar_adr    [15][0][26] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][26]) begin
        scalar_argVld [15][0][26] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [15][0][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1342) comb block-----//
    //s = 15; r = 1; a = 26;
    if (scalar_rdat_vld_r[15][1][26]) begin
        scalar_argdone [15][1][26] = 1;
    end
    scalar_adr    [15][1][26] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][26]) begin
        scalar_argVld [15][1][26] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [15][1][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1344) comb block-----//
    //s = 16; r = 1; a = 19;
    if (scalar_rdat_vld_r[16][1][19]) begin
        scalar_argdone [16][1][19] = 1;
    end
    scalar_adr    [16][1][19] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][19]) begin
        scalar_argVld [16][1][19] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [16][1][19] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1348) comb block-----//
    //s = 17; r = 0; a = 22;
    if (scalar_rdat_vld_r[17][0][22]) begin
        scalar_argdone [17][0][22] = 1;
    end
    scalar_adr    [17][0][22] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][22]) begin
        scalar_argVld [17][0][22] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [17][0][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1352) comb block-----//
    //s = 18; r = 1; a = 18;
    if (scalar_rdat_vld_r[18][1][18]) begin
        scalar_argdone [18][1][18] = 1;
    end
    scalar_adr    [18][1][18] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][18]) begin
        scalar_argVld [18][1][18] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [18][1][18] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1356) comb block-----//
    //s = 19; r = 1; a = 23;
    if (scalar_rdat_vld_r[19][1][23]) begin
        scalar_argdone [19][1][23] = 1;
    end
    scalar_adr    [19][1][23] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][23]) begin
        scalar_argVld [19][1][23] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [19][1][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1360) comb block-----//
    //s = 20; r = 0; a = 22;
    if (scalar_rdat_vld_r[20][0][22]) begin
        scalar_argdone [20][0][22] = 1;
    end
    scalar_adr    [20][0][22] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][22]) begin
        scalar_argVld [20][0][22] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [20][0][22] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1364) comb block-----//
    //s = 21; r = 1; a = 20;
    if (scalar_rdat_vld_r[21][1][20]) begin
        scalar_argdone [21][1][20] = 1;
    end
    scalar_adr    [21][1][20] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][20]) begin
        scalar_argVld [21][1][20] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [21][1][20] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1368) comb block-----//
    //s = 22; r = 1; a = 30;
    if (scalar_rdat_vld_r[22][1][30]) begin
        scalar_argdone [22][1][30] = 1;
    end
    scalar_adr    [22][1][30] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][30]) begin
        scalar_argVld [22][1][30] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [22][1][30] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1372) comb block-----//
    //s = 23; r = 1; a = 29;
    if (scalar_rdat_vld_r[23][1][29]) begin
        scalar_argdone [23][1][29] = 1;
    end
    scalar_adr    [23][1][29] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][29]) begin
        scalar_argVld [23][1][29] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [23][1][29] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1376) comb block-----//
    //s = 24; r = 1; a = 24;
    if (scalar_rdat_vld_r[24][1][24]) begin
        scalar_argdone [24][1][24] = 1;
    end
    scalar_adr    [24][1][24] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][24]) begin
        scalar_argVld [24][1][24] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [24][1][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1380) comb block-----//
    //s = 25; r = 0; a = 23;
    if (scalar_rdat_vld_r[25][0][23]) begin
        scalar_argdone [25][0][23] = 1;
    end
    scalar_adr    [25][0][23] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][23]) begin
        scalar_argVld [25][0][23] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [25][0][23] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1384) comb block-----//
    //s = 26; r = 1; a = 29;
    if (scalar_rdat_vld_r[26][1][29]) begin
        scalar_argdone [26][1][29] = 1;
    end
    scalar_adr    [26][1][29] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][29]) begin
        scalar_argVld [26][1][29] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [26][1][29] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1388) comb block-----//
    //s = 27; r = 0; a = 25;
    if (scalar_rdat_vld_r[27][0][25]) begin
        scalar_argdone [27][0][25] = 1;
    end
    scalar_adr    [27][0][25] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][25]) begin
        scalar_argVld [27][0][25] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [27][0][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1389) comb block-----//
    //s = 27; r = 1; a = 24;
    if (scalar_rdat_vld_r[27][1][24]) begin
        scalar_argdone [27][1][24] = 1;
    end
    scalar_adr    [27][1][24] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][24]) begin
        scalar_argVld [27][1][24] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [27][1][24] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1390) comb block-----//
    //s = 27; r = 0; a = 26;
    if (scalar_rdat_vld_r[27][0][26]) begin
        scalar_argdone [27][0][26] = 1;
    end
    scalar_adr    [27][0][26] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][26]) begin
        scalar_argVld [27][0][26] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [27][0][26] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1391) comb block-----//
    //s = 27; r = 1; a = 25;
    if (scalar_rdat_vld_r[27][1][25]) begin
        scalar_argdone [27][1][25] = 1;
    end
    scalar_adr    [27][1][25] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][25]) begin
        scalar_argVld [27][1][25] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [27][1][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1392) comb block-----//
    //s = 28; r = 1; a = 25;
    if (scalar_rdat_vld_r[28][1][25]) begin
        scalar_argdone [28][1][25] = 1;
    end
    scalar_adr    [28][1][25] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][25]) begin
        scalar_argVld [28][1][25] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [28][1][25] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1396) comb block-----//
    //s = 29; r = 0; a = 34;
    if (scalar_rdat_vld_r[29][0][34]) begin
        scalar_argdone [29][0][34] = 1;
    end
    scalar_adr    [29][0][34] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][34]) begin
        scalar_argVld [29][0][34] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [29][0][34] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1397) comb block-----//
    //s = 29; r = 1; a = 34;
    if (scalar_rdat_vld_r[29][1][34]) begin
        scalar_argdone [29][1][34] = 1;
    end
    scalar_adr    [29][1][34] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][34]) begin
        scalar_argVld [29][1][34] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [29][1][34] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1398) comb block-----//
    //s = 29; r = 0; a = 35;
    if (scalar_rdat_vld_r[29][0][35]) begin
        scalar_argdone [29][0][35] = 1;
    end
    scalar_adr    [29][0][35] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][35]) begin
        scalar_argVld [29][0][35] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [29][0][35] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1399) comb block-----//
    //s = 29; r = 1; a = 35;
    if (scalar_rdat_vld_r[29][1][35]) begin
        scalar_argdone [29][1][35] = 1;
    end
    scalar_adr    [29][1][35] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][35]) begin
        scalar_argVld [29][1][35] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [29][1][35] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1400) comb block-----//
    //s = 30; r = 1; a = 17;
    if (scalar_rdat_vld_r[30][1][17]) begin
        scalar_argdone [30][1][17] = 1;
    end
    scalar_adr    [30][1][17] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][17]) begin
        scalar_argVld [30][1][17] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [30][1][17] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1404) comb block-----//
    //s = 31; r = 1; a = 34;
    if (scalar_rdat_vld_r[31][1][34]) begin
        scalar_argdone [31][1][34] = 1;
    end
    scalar_adr    [31][1][34] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][34]) begin
        scalar_argVld [31][1][34] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [31][1][34] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1404) comb block-----//
    //s = 31; r = 1; a = 8;
    if (scalar_argAck [31][1][8]) begin
        scalar_argVld [31][1][8] = 0;
        scalar_argAckdone [31][1][8] = 1;
    end
    if (merge_mode_exit_hls_mergecand_list_pred_flag_0_o_ap_vld_r) begin
        scalar_argVld [31][1][8] = 1;
        scalar_argAckdone [31][1][8] = 0;
        ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION] = ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][1][8] = merge_mode_exit_hls_mergecand_list_pred_flag_0_o_r;
    scalar_adr    [31][1][8] = {ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1405) comb block-----//
    //s = 31; r = 0; a = 36;
    if (scalar_rdat_vld_r[31][0][36]) begin
        scalar_argdone [31][0][36] = 1;
    end
    scalar_adr    [31][0][36] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][36]) begin
        scalar_argVld [31][0][36] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [31][0][36] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1405) comb block-----//
    //s = 31; r = 0; a = 9;
    if (scalar_argAck [31][0][9]) begin
        scalar_argVld [31][0][9] = 0;
        scalar_argAckdone [31][0][9] = 1;
    end
    if (merge_mode_exit_hls_mergecand_list_pred_flag_1_o_ap_vld_r) begin
        scalar_argVld [31][0][9] = 1;
        scalar_argAckdone [31][0][9] = 0;
        ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION] = ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][9] = merge_mode_exit_hls_mergecand_list_pred_flag_1_o_r;
    scalar_adr    [31][0][9] = {ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1406) comb block-----//
    //s = 31; r = 1; a = 35;
    if (scalar_rdat_vld_r[31][1][35]) begin
        scalar_argdone [31][1][35] = 1;
    end
    scalar_adr    [31][1][35] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][35]) begin
        scalar_argVld [31][1][35] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [31][1][35] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1406) comb block-----//
    //s = 31; r = 1; a = 9;
    if (scalar_argAck [31][1][9]) begin
        scalar_argVld [31][1][9] = 0;
        scalar_argAckdone [31][1][9] = 1;
    end
    if (merge_mode_exit_hls_mergecand_list_pred_flag_2_o_ap_vld_r) begin
        scalar_argVld [31][1][9] = 1;
        scalar_argAckdone [31][1][9] = 0;
        ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION] = ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][1][9] = merge_mode_exit_hls_mergecand_list_pred_flag_2_o_r;
    scalar_adr    [31][1][9] = {ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1407) comb block-----//
    //s = 31; r = 0; a = 37;
    if (scalar_rdat_vld_r[31][0][37]) begin
        scalar_argdone [31][0][37] = 1;
    end
    scalar_adr    [31][0][37] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][37]) begin
        scalar_argVld [31][0][37] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [31][0][37] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1407) comb block-----//
    //s = 31; r = 0; a = 10;
    if (scalar_argAck [31][0][10]) begin
        scalar_argVld [31][0][10] = 0;
        scalar_argAckdone [31][0][10] = 1;
    end
    if (merge_mode_exit_hls_mergecand_list_pred_flag_3_o_ap_vld_r) begin
        scalar_argVld [31][0][10] = 1;
        scalar_argAckdone [31][0][10] = 0;
        ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION] = ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][10] = merge_mode_exit_hls_mergecand_list_pred_flag_3_o_r;
    scalar_adr    [31][0][10] = {ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1408) comb block-----//
    //s = 0; r = 0; a = 34;
    if (scalar_rdat_vld_r[0][0][34]) begin
        scalar_argdone [0][0][34] = 1;
    end
    scalar_adr    [0][0][34] = {ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[0][0][34]) begin
        scalar_argVld [0][0][34] = 0;
    end
    if (ap_arb_reload_r[merge_mode_exit_hls]) begin
        scalar_argVld [0][0][34] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1408) comb block-----//
    //s = 0; r = 0; a = 13;
    if (scalar_argAck [0][0][13]) begin
        scalar_argVld [0][0][13] = 0;
        scalar_argAckdone [0][0][13] = 1;
    end
    if (merge_mode_exit_hls_mergecand_list_pred_flag_4_o_ap_vld_r) begin
        scalar_argVld [0][0][13] = 1;
        scalar_argAckdone [0][0][13] = 0;
        ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION] = ap_part[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][13] = merge_mode_exit_hls_mergecand_list_pred_flag_4_o_r;
    scalar_adr    [0][0][13] = {ap_part_w[merge_mode_exit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (ap_arb_ret[merge_mode_exit_hls] & ~ap_arb_ret_r[merge_mode_exit_hls]) begin
        ap_arb_ret_running[merge_mode_exit_hls] = 1;
        merge_mode_exit_hls_ready = 0;
    end

    scalar_argAckdone_all[merge_mode_exit_hls] = scalar_argAckdone[12][0][10] &
                                                scalar_argAckdone[4][1][7] &
                                                scalar_argAckdone[5][1][13] &
                                                scalar_argAckdone[6][0][13] &
                                                scalar_argAckdone[7][1][11] &
                                                scalar_argAckdone[8][1][13] &
                                                scalar_argAckdone[9][1][13] &
                                                scalar_argAckdone[10][0][11] &
                                                scalar_argAckdone[11][1][8] &
                                                scalar_argAckdone[31][1][8] &
                                                scalar_argAckdone[31][0][9] &
                                                scalar_argAckdone[31][1][9] &
                                                scalar_argAckdone[31][0][10] &
                                                scalar_argAckdone[0][0][13];
    if (ap_arb_ret_running[merge_mode_exit_hls] & scalar_argAckdone_all[merge_mode_exit_hls] &~ ap_arb_reload_running_r[merge_mode_exit_hls]) begin
        ap_arb_reload[merge_mode_exit_hls] = 1;
        ap_arb_reload_running[merge_mode_exit_hls] = 1;
    end

    if (ap_arb_start[merge_mode_exit_hls] &~ ap_arb_start_r[merge_mode_exit_hls]) begin
        ap_arb_start_running[merge_mode_exit_hls] = 1;
    end

    if (ap_arb_start_running[merge_mode_exit_hls] & ~scalar_writing_1444& ~scalar_writing_1300& ~scalar_writing_1302& ~scalar_writing_1304& ~scalar_writing_1306& ~scalar_writing_1308& ~scalar_writing_1312& ~scalar_writing_1314& ~scalar_writing_1316& ~scalar_writing_1318& ~scalar_writing_1320& ~scalar_writing_1324& ~scalar_writing_1326& ~scalar_writing_1328& ~scalar_writing_1330& ~scalar_writing_1332& ~scalar_writing_1336& ~scalar_writing_1338& ~scalar_writing_1340& ~scalar_writing_1342& ~scalar_writing_1344& ~scalar_writing_1348& ~scalar_writing_1352& ~scalar_writing_1356& ~scalar_writing_1360& ~scalar_writing_1364& ~scalar_writing_1368& ~scalar_writing_1372& ~scalar_writing_1376& ~scalar_writing_1380& ~scalar_writing_1384& ~scalar_writing_1388& ~scalar_writing_1389& ~scalar_writing_1390& ~scalar_writing_1391& ~scalar_writing_1392& ~scalar_writing_1396& ~scalar_writing_1397& ~scalar_writing_1398& ~scalar_writing_1399& ~scalar_writing_1400& ~scalar_writing_1404& ~scalar_writing_1405& ~scalar_writing_1406& ~scalar_writing_1407& ~scalar_writing_1408) begin
        ap_arb_start_running[merge_mode_exit_hls] = 0;
        ap_arb_reload[merge_mode_exit_hls] = 1;
    end

    scalar_argdone_all[merge_mode_exit_hls] = scalar_argdone[9][1][28] &
                                                                scalar_argdone[5][1][28] &
                                                                scalar_argdone[5][0][30] &
                                                                scalar_argdone[6][1][35] &
                                                                scalar_argdone[6][0][37] &
                                                                scalar_argdone[7][0][24] &
                                                                scalar_argdone[8][0][29] &
                                                                scalar_argdone[8][1][29] &
                                                                scalar_argdone[9][0][29] &
                                                                scalar_argdone[9][1][29] &
                                                                scalar_argdone[10][0][25] &
                                                                scalar_argdone[11][1][32] &
                                                                scalar_argdone[11][0][33] &
                                                                scalar_argdone[12][1][30] &
                                                                scalar_argdone[12][0][32] &
                                                                scalar_argdone[13][1][28] &
                                                                scalar_argdone[14][1][29] &
                                                                scalar_argdone[14][0][30] &
                                                                scalar_argdone[15][0][26] &
                                                                scalar_argdone[15][1][26] &
                                                                scalar_argdone[16][1][19] &
                                                                scalar_argdone[17][0][22] &
                                                                scalar_argdone[18][1][18] &
                                                                scalar_argdone[19][1][23] &
                                                                scalar_argdone[20][0][22] &
                                                                scalar_argdone[21][1][20] &
                                                                scalar_argdone[22][1][30] &
                                                                scalar_argdone[23][1][29] &
                                                                scalar_argdone[24][1][24] &
                                                                scalar_argdone[25][0][23] &
                                                                scalar_argdone[26][1][29] &
                                                                scalar_argdone[27][0][25] &
                                                                scalar_argdone[27][1][24] &
                                                                scalar_argdone[27][0][26] &
                                                                scalar_argdone[27][1][25] &
                                                                scalar_argdone[28][1][25] &
                                                                scalar_argdone[29][0][34] &
                                                                scalar_argdone[29][1][34] &
                                                                scalar_argdone[29][0][35] &
                                                                scalar_argdone[29][1][35] &
                                                                scalar_argdone[30][1][17] &
                                                                scalar_argdone[31][1][34] &
                                                                scalar_argdone[31][0][36] &
                                                                scalar_argdone[31][1][35] &
                                                                scalar_argdone[31][0][37] &
                                                                scalar_argdone[0][0][34];

    if (scalar_argdone_all_r[merge_mode_exit_hls]) begin
        scalar_argdone[9][1][28] = 0;
        scalar_argdone[5][1][28] = 0;
        scalar_argdone[5][0][30] = 0;
        scalar_argdone[6][1][35] = 0;
        scalar_argdone[6][0][37] = 0;
        scalar_argdone[7][0][24] = 0;
        scalar_argdone[8][0][29] = 0;
        scalar_argdone[8][1][29] = 0;
        scalar_argdone[9][0][29] = 0;
        scalar_argdone[9][1][29] = 0;
        scalar_argdone[10][0][25] = 0;
        scalar_argdone[11][1][32] = 0;
        scalar_argdone[11][0][33] = 0;
        scalar_argdone[12][1][30] = 0;
        scalar_argdone[12][0][32] = 0;
        scalar_argdone[13][1][28] = 0;
        scalar_argdone[14][1][29] = 0;
        scalar_argdone[14][0][30] = 0;
        scalar_argdone[15][0][26] = 0;
        scalar_argdone[15][1][26] = 0;
        scalar_argdone[16][1][19] = 0;
        scalar_argdone[17][0][22] = 0;
        scalar_argdone[18][1][18] = 0;
        scalar_argdone[19][1][23] = 0;
        scalar_argdone[20][0][22] = 0;
        scalar_argdone[21][1][20] = 0;
        scalar_argdone[22][1][30] = 0;
        scalar_argdone[23][1][29] = 0;
        scalar_argdone[24][1][24] = 0;
        scalar_argdone[25][0][23] = 0;
        scalar_argdone[26][1][29] = 0;
        scalar_argdone[27][0][25] = 0;
        scalar_argdone[27][1][24] = 0;
        scalar_argdone[27][0][26] = 0;
        scalar_argdone[27][1][25] = 0;
        scalar_argdone[28][1][25] = 0;
        scalar_argdone[29][0][34] = 0;
        scalar_argdone[29][1][34] = 0;
        scalar_argdone[29][0][35] = 0;
        scalar_argdone[29][1][35] = 0;
        scalar_argdone[30][1][17] = 0;
        scalar_argdone[31][1][34] = 0;
        scalar_argdone[31][0][36] = 0;
        scalar_argdone[31][1][35] = 0;
        scalar_argdone[31][0][37] = 0;
        scalar_argdone[0][0][34] = 0;

        if (ap_arb_start_r[merge_mode_exit_hls] & ~ap_running_r[merge_mode_exit_hls]) begin
            ap_start[merge_mode_exit_hls] = 1;
            ap_running[merge_mode_exit_hls] = 1;
        end
        else if (ap_arb_ret_running_r[merge_mode_exit_hls]) begin
            ap_arb_ret_running[merge_mode_exit_hls] = 0;
            ap_arb_reload_running[merge_mode_exit_hls] = 0;
        end
    end

    if (ap_start_r[merge_mode_exit_hls] & ap_ready_r[merge_mode_exit_hls]) begin
        ap_start[merge_mode_exit_hls] = 0;
    end

    if (ap_done_r[merge_mode_exit_hls]) begin
        ap_running[merge_mode_exit_hls] = 0;
    end
`endif
    //============================================================
    //set_to_mergecand_list_hls       (f = 46)
    //============================================================
`ifdef enable_connect_set_to_mergecand_list_hls
    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 0; a = 37;
    if (scalar_rdat_vld_r[11][0][37]) begin
        scalar_argdone [11][0][37] = 1;
    end
    scalar_adr[11][0][37] = {ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][37]) begin
        scalar_argVld[11][0][37] = 0;
    end
    if (ap_arb_reload_r[set_to_mergecand_list_hls]) begin
        scalar_argVld[11][0][37] = 1;
    end

    //------READ (scalar, global adr = 132) comb block-----//
    //s = 1; r = 0; a = 32;
    if (scalar_rdat_vld_r[1][0][32]) begin
        scalar_argdone [1][0][32] = 1;
    end
    scalar_adr[1][0][32] = {ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][32]) begin
        scalar_argVld[1][0][32] = 0;
    end
    if (ap_arb_reload_r[set_to_mergecand_list_hls]) begin
        scalar_argVld[1][0][32] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 1; a = 39;
    if (scalar_rdat_vld_r[29][1][39]) begin
        scalar_argdone [29][1][39] = 1;
    end
    scalar_adr[29][1][39] = {ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][39]) begin
        scalar_argVld[29][1][39] = 0;
    end
    if (ap_arb_reload_r[set_to_mergecand_list_hls]) begin
        scalar_argVld[29][1][39] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 1; a = 24;
    if (scalar_rdat_vld_r[3][1][24]) begin
        scalar_argdone [3][1][24] = 1;
    end
    scalar_adr[3][1][24] = {ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][24]) begin
        scalar_argVld[3][1][24] = 0;
    end
    if (ap_arb_reload_r[set_to_mergecand_list_hls]) begin
        scalar_argVld[3][1][24] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1404) comb block-----//
    //s = 31; r = 1; a = 12;
    if (scalar_argAck [31][1][12]) begin
        scalar_argVld [31][1][12] = 0;
        scalar_argAckdone [31][1][12] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_pred_flag_0_ap_vld_r) begin
        scalar_argVld [31][1][12] = 1;
        scalar_argAckdone [31][1][12] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][1][12] = set_to_mergecand_list_hls_mergecand_list_pred_flag_0_r;
    scalar_adr    [31][1][12] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1405) comb block-----//
    //s = 31; r = 0; a = 13;
    if (scalar_argAck [31][0][13]) begin
        scalar_argVld [31][0][13] = 0;
        scalar_argAckdone [31][0][13] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_pred_flag_1_ap_vld_r) begin
        scalar_argVld [31][0][13] = 1;
        scalar_argAckdone [31][0][13] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][13] = set_to_mergecand_list_hls_mergecand_list_pred_flag_1_r;
    scalar_adr    [31][0][13] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1406) comb block-----//
    //s = 31; r = 1; a = 13;
    if (scalar_argAck [31][1][13]) begin
        scalar_argVld [31][1][13] = 0;
        scalar_argAckdone [31][1][13] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_pred_flag_2_ap_vld_r) begin
        scalar_argVld [31][1][13] = 1;
        scalar_argAckdone [31][1][13] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][1][13] = set_to_mergecand_list_hls_mergecand_list_pred_flag_2_r;
    scalar_adr    [31][1][13] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1407) comb block-----//
    //s = 31; r = 0; a = 14;
    if (scalar_argAck [31][0][14]) begin
        scalar_argVld [31][0][14] = 0;
        scalar_argAckdone [31][0][14] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_pred_flag_3_ap_vld_r) begin
        scalar_argVld [31][0][14] = 1;
        scalar_argAckdone [31][0][14] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][14] = set_to_mergecand_list_hls_mergecand_list_pred_flag_3_r;
    scalar_adr    [31][0][14] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1408) comb block-----//
    //s = 0; r = 1; a = 15;
    if (scalar_argAck [0][1][15]) begin
        scalar_argVld [0][1][15] = 0;
        scalar_argAckdone [0][1][15] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_pred_flag_4_ap_vld_r) begin
        scalar_argVld [0][1][15] = 1;
        scalar_argAckdone [0][1][15] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][15] = set_to_mergecand_list_hls_mergecand_list_pred_flag_4_r;
    scalar_adr    [0][1][15] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1300) comb block-----//
    //s = 5; r = 1; a = 15;
    if (scalar_argAck [5][1][15]) begin
        scalar_argVld [5][1][15] = 0;
        scalar_argAckdone [5][1][15] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv0_x_0_ap_vld_r) begin
        scalar_argVld [5][1][15] = 1;
        scalar_argAckdone [5][1][15] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][15] = set_to_mergecand_list_hls_mergecand_list_mv0_x_0_r;
    scalar_adr    [5][1][15] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1302) comb block-----//
    //s = 5; r = 0; a = 16;
    if (scalar_argAck [5][0][16]) begin
        scalar_argVld [5][0][16] = 0;
        scalar_argAckdone [5][0][16] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv0_x_1_ap_vld_r) begin
        scalar_argVld [5][0][16] = 1;
        scalar_argAckdone [5][0][16] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][16] = set_to_mergecand_list_hls_mergecand_list_mv0_x_1_r;
    scalar_adr    [5][0][16] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1304) comb block-----//
    //s = 6; r = 1; a = 14;
    if (scalar_argAck [6][1][14]) begin
        scalar_argVld [6][1][14] = 0;
        scalar_argAckdone [6][1][14] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv0_x_2_ap_vld_r) begin
        scalar_argVld [6][1][14] = 1;
        scalar_argAckdone [6][1][14] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][14] = set_to_mergecand_list_hls_mergecand_list_mv0_x_2_r;
    scalar_adr    [6][1][14] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1306) comb block-----//
    //s = 6; r = 0; a = 15;
    if (scalar_argAck [6][0][15]) begin
        scalar_argVld [6][0][15] = 0;
        scalar_argAckdone [6][0][15] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv0_x_3_ap_vld_r) begin
        scalar_argVld [6][0][15] = 1;
        scalar_argAckdone [6][0][15] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][15] = set_to_mergecand_list_hls_mergecand_list_mv0_x_3_r;
    scalar_adr    [6][0][15] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1308) comb block-----//
    //s = 7; r = 0; a = 13;
    if (scalar_argAck [7][0][13]) begin
        scalar_argVld [7][0][13] = 0;
        scalar_argAckdone [7][0][13] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv0_x_4_ap_vld_r) begin
        scalar_argVld [7][0][13] = 1;
        scalar_argAckdone [7][0][13] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][13] = set_to_mergecand_list_hls_mergecand_list_mv0_x_4_r;
    scalar_adr    [7][0][13] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1312) comb block-----//
    //s = 8; r = 0; a = 15;
    if (scalar_argAck [8][0][15]) begin
        scalar_argVld [8][0][15] = 0;
        scalar_argAckdone [8][0][15] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv0_y_0_ap_vld_r) begin
        scalar_argVld [8][0][15] = 1;
        scalar_argAckdone [8][0][15] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][15] = set_to_mergecand_list_hls_mergecand_list_mv0_y_0_r;
    scalar_adr    [8][0][15] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1314) comb block-----//
    //s = 8; r = 1; a = 15;
    if (scalar_argAck [8][1][15]) begin
        scalar_argVld [8][1][15] = 0;
        scalar_argAckdone [8][1][15] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv0_y_1_ap_vld_r) begin
        scalar_argVld [8][1][15] = 1;
        scalar_argAckdone [8][1][15] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][15] = set_to_mergecand_list_hls_mergecand_list_mv0_y_1_r;
    scalar_adr    [8][1][15] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1316) comb block-----//
    //s = 9; r = 0; a = 15;
    if (scalar_argAck [9][0][15]) begin
        scalar_argVld [9][0][15] = 0;
        scalar_argAckdone [9][0][15] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv0_y_2_ap_vld_r) begin
        scalar_argVld [9][0][15] = 1;
        scalar_argAckdone [9][0][15] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][15] = set_to_mergecand_list_hls_mergecand_list_mv0_y_2_r;
    scalar_adr    [9][0][15] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1318) comb block-----//
    //s = 9; r = 1; a = 15;
    if (scalar_argAck [9][1][15]) begin
        scalar_argVld [9][1][15] = 0;
        scalar_argAckdone [9][1][15] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv0_y_3_ap_vld_r) begin
        scalar_argVld [9][1][15] = 1;
        scalar_argAckdone [9][1][15] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][15] = set_to_mergecand_list_hls_mergecand_list_mv0_y_3_r;
    scalar_adr    [9][1][15] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1320) comb block-----//
    //s = 10; r = 1; a = 12;
    if (scalar_argAck [10][1][12]) begin
        scalar_argVld [10][1][12] = 0;
        scalar_argAckdone [10][1][12] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv0_y_4_ap_vld_r) begin
        scalar_argVld [10][1][12] = 1;
        scalar_argAckdone [10][1][12] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][12] = set_to_mergecand_list_hls_mergecand_list_mv0_y_4_r;
    scalar_adr    [10][1][12] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1324) comb block-----//
    //s = 11; r = 0; a = 10;
    if (scalar_argAck [11][0][10]) begin
        scalar_argVld [11][0][10] = 0;
        scalar_argAckdone [11][0][10] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv1_x_0_ap_vld_r) begin
        scalar_argVld [11][0][10] = 1;
        scalar_argAckdone [11][0][10] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][0][10] = set_to_mergecand_list_hls_mergecand_list_mv1_x_0_r;
    scalar_adr    [11][0][10] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1326) comb block-----//
    //s = 11; r = 1; a = 10;
    if (scalar_argAck [11][1][10]) begin
        scalar_argVld [11][1][10] = 0;
        scalar_argAckdone [11][1][10] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv1_x_1_ap_vld_r) begin
        scalar_argVld [11][1][10] = 1;
        scalar_argAckdone [11][1][10] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][1][10] = set_to_mergecand_list_hls_mergecand_list_mv1_x_1_r;
    scalar_adr    [11][1][10] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1328) comb block-----//
    //s = 12; r = 1; a = 11;
    if (scalar_argAck [12][1][11]) begin
        scalar_argVld [12][1][11] = 0;
        scalar_argAckdone [12][1][11] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv1_x_2_ap_vld_r) begin
        scalar_argVld [12][1][11] = 1;
        scalar_argAckdone [12][1][11] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][11] = set_to_mergecand_list_hls_mergecand_list_mv1_x_2_r;
    scalar_adr    [12][1][11] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1330) comb block-----//
    //s = 12; r = 0; a = 12;
    if (scalar_argAck [12][0][12]) begin
        scalar_argVld [12][0][12] = 0;
        scalar_argAckdone [12][0][12] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv1_x_3_ap_vld_r) begin
        scalar_argVld [12][0][12] = 1;
        scalar_argAckdone [12][0][12] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][12] = set_to_mergecand_list_hls_mergecand_list_mv1_x_3_r;
    scalar_adr    [12][0][12] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1332) comb block-----//
    //s = 13; r = 1; a = 10;
    if (scalar_argAck [13][1][10]) begin
        scalar_argVld [13][1][10] = 0;
        scalar_argAckdone [13][1][10] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv1_x_4_ap_vld_r) begin
        scalar_argVld [13][1][10] = 1;
        scalar_argAckdone [13][1][10] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][10] = set_to_mergecand_list_hls_mergecand_list_mv1_x_4_r;
    scalar_adr    [13][1][10] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1336) comb block-----//
    //s = 14; r = 0; a = 13;
    if (scalar_argAck [14][0][13]) begin
        scalar_argVld [14][0][13] = 0;
        scalar_argAckdone [14][0][13] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv1_y_0_ap_vld_r) begin
        scalar_argVld [14][0][13] = 1;
        scalar_argAckdone [14][0][13] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][13] = set_to_mergecand_list_hls_mergecand_list_mv1_y_0_r;
    scalar_adr    [14][0][13] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1338) comb block-----//
    //s = 14; r = 1; a = 13;
    if (scalar_argAck [14][1][13]) begin
        scalar_argVld [14][1][13] = 0;
        scalar_argAckdone [14][1][13] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv1_y_1_ap_vld_r) begin
        scalar_argVld [14][1][13] = 1;
        scalar_argAckdone [14][1][13] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][13] = set_to_mergecand_list_hls_mergecand_list_mv1_y_1_r;
    scalar_adr    [14][1][13] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1340) comb block-----//
    //s = 15; r = 0; a = 12;
    if (scalar_argAck [15][0][12]) begin
        scalar_argVld [15][0][12] = 0;
        scalar_argAckdone [15][0][12] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv1_y_2_ap_vld_r) begin
        scalar_argVld [15][0][12] = 1;
        scalar_argAckdone [15][0][12] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][12] = set_to_mergecand_list_hls_mergecand_list_mv1_y_2_r;
    scalar_adr    [15][0][12] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1342) comb block-----//
    //s = 15; r = 1; a = 12;
    if (scalar_argAck [15][1][12]) begin
        scalar_argVld [15][1][12] = 0;
        scalar_argAckdone [15][1][12] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv1_y_3_ap_vld_r) begin
        scalar_argVld [15][1][12] = 1;
        scalar_argAckdone [15][1][12] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][12] = set_to_mergecand_list_hls_mergecand_list_mv1_y_3_r;
    scalar_adr    [15][1][12] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1344) comb block-----//
    //s = 16; r = 0; a = 8;
    if (scalar_argAck [16][0][8]) begin
        scalar_argVld [16][0][8] = 0;
        scalar_argAckdone [16][0][8] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_mv1_y_4_ap_vld_r) begin
        scalar_argVld [16][0][8] = 1;
        scalar_argAckdone [16][0][8] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][0][8] = set_to_mergecand_list_hls_mergecand_list_mv1_y_4_r;
    scalar_adr    [16][0][8] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1348) comb block-----//
    //s = 17; r = 0; a = 7;
    if (scalar_argAck [17][0][7]) begin
        scalar_argVld [17][0][7] = 0;
        scalar_argAckdone [17][0][7] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_poc0_0_ap_vld_r) begin
        scalar_argVld [17][0][7] = 1;
        scalar_argAckdone [17][0][7] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][0][7] = set_to_mergecand_list_hls_mergecand_list_poc0_0_r;
    scalar_adr    [17][0][7] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1352) comb block-----//
    //s = 18; r = 1; a = 6;
    if (scalar_argAck [18][1][6]) begin
        scalar_argVld [18][1][6] = 0;
        scalar_argAckdone [18][1][6] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_poc0_1_ap_vld_r) begin
        scalar_argVld [18][1][6] = 1;
        scalar_argAckdone [18][1][6] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][1][6] = set_to_mergecand_list_hls_mergecand_list_poc0_1_r;
    scalar_adr    [18][1][6] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1356) comb block-----//
    //s = 19; r = 1; a = 7;
    if (scalar_argAck [19][1][7]) begin
        scalar_argVld [19][1][7] = 0;
        scalar_argAckdone [19][1][7] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_poc0_2_ap_vld_r) begin
        scalar_argVld [19][1][7] = 1;
        scalar_argAckdone [19][1][7] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][1][7] = set_to_mergecand_list_hls_mergecand_list_poc0_2_r;
    scalar_adr    [19][1][7] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1360) comb block-----//
    //s = 20; r = 1; a = 9;
    if (scalar_argAck [20][1][9]) begin
        scalar_argVld [20][1][9] = 0;
        scalar_argAckdone [20][1][9] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_poc0_3_ap_vld_r) begin
        scalar_argVld [20][1][9] = 1;
        scalar_argAckdone [20][1][9] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][9] = set_to_mergecand_list_hls_mergecand_list_poc0_3_r;
    scalar_adr    [20][1][9] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1364) comb block-----//
    //s = 21; r = 0; a = 10;
    if (scalar_argAck [21][0][10]) begin
        scalar_argVld [21][0][10] = 0;
        scalar_argAckdone [21][0][10] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_poc0_4_ap_vld_r) begin
        scalar_argVld [21][0][10] = 1;
        scalar_argAckdone [21][0][10] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][10] = set_to_mergecand_list_hls_mergecand_list_poc0_4_r;
    scalar_adr    [21][0][10] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1368) comb block-----//
    //s = 22; r = 0; a = 10;
    if (scalar_argAck [22][0][10]) begin
        scalar_argVld [22][0][10] = 0;
        scalar_argAckdone [22][0][10] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_poc1_0_ap_vld_r) begin
        scalar_argVld [22][0][10] = 1;
        scalar_argAckdone [22][0][10] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][10] = set_to_mergecand_list_hls_mergecand_list_poc1_0_r;
    scalar_adr    [22][0][10] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1372) comb block-----//
    //s = 23; r = 0; a = 8;
    if (scalar_argAck [23][0][8]) begin
        scalar_argVld [23][0][8] = 0;
        scalar_argAckdone [23][0][8] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_poc1_1_ap_vld_r) begin
        scalar_argVld [23][0][8] = 1;
        scalar_argAckdone [23][0][8] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][8] = set_to_mergecand_list_hls_mergecand_list_poc1_1_r;
    scalar_adr    [23][0][8] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1376) comb block-----//
    //s = 24; r = 0; a = 6;
    if (scalar_argAck [24][0][6]) begin
        scalar_argVld [24][0][6] = 0;
        scalar_argAckdone [24][0][6] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_poc1_2_ap_vld_r) begin
        scalar_argVld [24][0][6] = 1;
        scalar_argAckdone [24][0][6] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][0][6] = set_to_mergecand_list_hls_mergecand_list_poc1_2_r;
    scalar_adr    [24][0][6] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1380) comb block-----//
    //s = 25; r = 0; a = 6;
    if (scalar_argAck [25][0][6]) begin
        scalar_argVld [25][0][6] = 0;
        scalar_argAckdone [25][0][6] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_poc1_3_ap_vld_r) begin
        scalar_argVld [25][0][6] = 1;
        scalar_argAckdone [25][0][6] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][0][6] = set_to_mergecand_list_hls_mergecand_list_poc1_3_r;
    scalar_adr    [25][0][6] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1384) comb block-----//
    //s = 26; r = 0; a = 6;
    if (scalar_argAck [26][0][6]) begin
        scalar_argVld [26][0][6] = 0;
        scalar_argAckdone [26][0][6] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_poc1_4_ap_vld_r) begin
        scalar_argVld [26][0][6] = 1;
        scalar_argAckdone [26][0][6] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][0][6] = set_to_mergecand_list_hls_mergecand_list_poc1_4_r;
    scalar_adr    [26][0][6] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1388) comb block-----//
    //s = 27; r = 1; a = 11;
    if (scalar_argAck [27][1][11]) begin
        scalar_argVld [27][1][11] = 0;
        scalar_argAckdone [27][1][11] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx0_0_ap_vld_r) begin
        scalar_argVld [27][1][11] = 1;
        scalar_argAckdone [27][1][11] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][1][11] = set_to_mergecand_list_hls_mergecand_list_ref_idx0_0_r;
    scalar_adr    [27][1][11] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1389) comb block-----//
    //s = 27; r = 0; a = 12;
    if (scalar_argAck [27][0][12]) begin
        scalar_argVld [27][0][12] = 0;
        scalar_argAckdone [27][0][12] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx0_1_ap_vld_r) begin
        scalar_argVld [27][0][12] = 1;
        scalar_argAckdone [27][0][12] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][12] = set_to_mergecand_list_hls_mergecand_list_ref_idx0_1_r;
    scalar_adr    [27][0][12] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1390) comb block-----//
    //s = 27; r = 1; a = 12;
    if (scalar_argAck [27][1][12]) begin
        scalar_argVld [27][1][12] = 0;
        scalar_argAckdone [27][1][12] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx0_2_ap_vld_r) begin
        scalar_argVld [27][1][12] = 1;
        scalar_argAckdone [27][1][12] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][1][12] = set_to_mergecand_list_hls_mergecand_list_ref_idx0_2_r;
    scalar_adr    [27][1][12] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1391) comb block-----//
    //s = 27; r = 0; a = 13;
    if (scalar_argAck [27][0][13]) begin
        scalar_argVld [27][0][13] = 0;
        scalar_argAckdone [27][0][13] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx0_3_ap_vld_r) begin
        scalar_argVld [27][0][13] = 1;
        scalar_argAckdone [27][0][13] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][13] = set_to_mergecand_list_hls_mergecand_list_ref_idx0_3_r;
    scalar_adr    [27][0][13] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1392) comb block-----//
    //s = 28; r = 1; a = 6;
    if (scalar_argAck [28][1][6]) begin
        scalar_argVld [28][1][6] = 0;
        scalar_argAckdone [28][1][6] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx0_4_ap_vld_r) begin
        scalar_argVld [28][1][6] = 1;
        scalar_argAckdone [28][1][6] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][1][6] = set_to_mergecand_list_hls_mergecand_list_ref_idx0_4_r;
    scalar_adr    [28][1][6] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1396) comb block-----//
    //s = 29; r = 0; a = 13;
    if (scalar_argAck [29][0][13]) begin
        scalar_argVld [29][0][13] = 0;
        scalar_argAckdone [29][0][13] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx1_0_ap_vld_r) begin
        scalar_argVld [29][0][13] = 1;
        scalar_argAckdone [29][0][13] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][13] = set_to_mergecand_list_hls_mergecand_list_ref_idx1_0_r;
    scalar_adr    [29][0][13] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1397) comb block-----//
    //s = 29; r = 1; a = 13;
    if (scalar_argAck [29][1][13]) begin
        scalar_argVld [29][1][13] = 0;
        scalar_argAckdone [29][1][13] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx1_1_ap_vld_r) begin
        scalar_argVld [29][1][13] = 1;
        scalar_argAckdone [29][1][13] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][13] = set_to_mergecand_list_hls_mergecand_list_ref_idx1_1_r;
    scalar_adr    [29][1][13] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1398) comb block-----//
    //s = 29; r = 0; a = 14;
    if (scalar_argAck [29][0][14]) begin
        scalar_argVld [29][0][14] = 0;
        scalar_argAckdone [29][0][14] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx1_2_ap_vld_r) begin
        scalar_argVld [29][0][14] = 1;
        scalar_argAckdone [29][0][14] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][14] = set_to_mergecand_list_hls_mergecand_list_ref_idx1_2_r;
    scalar_adr    [29][0][14] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1399) comb block-----//
    //s = 29; r = 1; a = 14;
    if (scalar_argAck [29][1][14]) begin
        scalar_argVld [29][1][14] = 0;
        scalar_argAckdone [29][1][14] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx1_3_ap_vld_r) begin
        scalar_argVld [29][1][14] = 1;
        scalar_argAckdone [29][1][14] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][14] = set_to_mergecand_list_hls_mergecand_list_ref_idx1_3_r;
    scalar_adr    [29][1][14] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1400) comb block-----//
    //s = 30; r = 1; a = 4;
    if (scalar_argAck [30][1][4]) begin
        scalar_argVld [30][1][4] = 0;
        scalar_argAckdone [30][1][4] = 1;
    end
    if (set_to_mergecand_list_hls_mergecand_list_ref_idx1_4_ap_vld_r) begin
        scalar_argVld [30][1][4] = 1;
        scalar_argAckdone [30][1][4] = 0;
        ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION] = ap_part[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [30][1][4] = set_to_mergecand_list_hls_mergecand_list_ref_idx1_4_r;
    scalar_adr    [30][1][4] = {ap_part_w[set_to_mergecand_list_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (array range, global adr = 286240, width=16, addr_width=32) -----//
    //s = 0; a = 128;
    array_argVld [0][128] = set_to_mergecand_list_hls_tab_mvf_mv_0_x_EN_A & (set_to_mergecand_list_hls_tab_mvf_mv_0_x_WEN_A != 0);
    array_adr    [0][128] = set_to_mergecand_list_hls_tab_mvf_mv_0_x_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][128] = set_to_mergecand_list_hls_tab_mvf_mv_0_x_Din_A;

    //------READ (array range, global adr = 286240, width=16, addr_width=32) -----//
    //s = 0; a = 287;
    set_to_mergecand_list_hls_tab_mvf_mv_0_x_Dout_A = array_rdat  [0][287];
    //found a write signal pair
    array_argVld [0][287] = set_to_mergecand_list_hls_tab_mvf_mv_0_x_EN_A & (set_to_mergecand_list_hls_tab_mvf_mv_0_x_WEN_A == 0);
    array_adr    [0][287] = set_to_mergecand_list_hls_tab_mvf_mv_0_x_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286244, width=16, addr_width=32) -----//
    //s = 0; a = 129;
    array_argVld [0][129] = set_to_mergecand_list_hls_tab_mvf_mv_0_y_EN_A & (set_to_mergecand_list_hls_tab_mvf_mv_0_y_WEN_A != 0);
    array_adr    [0][129] = set_to_mergecand_list_hls_tab_mvf_mv_0_y_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][129] = set_to_mergecand_list_hls_tab_mvf_mv_0_y_Din_A;

    //------READ (array range, global adr = 286244, width=16, addr_width=32) -----//
    //s = 0; a = 288;
    set_to_mergecand_list_hls_tab_mvf_mv_0_y_Dout_A = array_rdat  [0][288];
    //found a write signal pair
    array_argVld [0][288] = set_to_mergecand_list_hls_tab_mvf_mv_0_y_EN_A & (set_to_mergecand_list_hls_tab_mvf_mv_0_y_WEN_A == 0);
    array_adr    [0][288] = set_to_mergecand_list_hls_tab_mvf_mv_0_y_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286248, width=16, addr_width=32) -----//
    //s = 0; a = 130;
    array_argVld [0][130] = set_to_mergecand_list_hls_tab_mvf_mv_1_x_EN_A & (set_to_mergecand_list_hls_tab_mvf_mv_1_x_WEN_A != 0);
    array_adr    [0][130] = set_to_mergecand_list_hls_tab_mvf_mv_1_x_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][130] = set_to_mergecand_list_hls_tab_mvf_mv_1_x_Din_A;

    //------READ (array range, global adr = 286248, width=16, addr_width=32) -----//
    //s = 0; a = 289;
    set_to_mergecand_list_hls_tab_mvf_mv_1_x_Dout_A = array_rdat  [0][289];
    //found a write signal pair
    array_argVld [0][289] = set_to_mergecand_list_hls_tab_mvf_mv_1_x_EN_A & (set_to_mergecand_list_hls_tab_mvf_mv_1_x_WEN_A == 0);
    array_adr    [0][289] = set_to_mergecand_list_hls_tab_mvf_mv_1_x_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286252, width=16, addr_width=32) -----//
    //s = 0; a = 131;
    array_argVld [0][131] = set_to_mergecand_list_hls_tab_mvf_mv_1_y_EN_A & (set_to_mergecand_list_hls_tab_mvf_mv_1_y_WEN_A != 0);
    array_adr    [0][131] = set_to_mergecand_list_hls_tab_mvf_mv_1_y_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][131] = set_to_mergecand_list_hls_tab_mvf_mv_1_y_Din_A;

    //------READ (array range, global adr = 286252, width=16, addr_width=32) -----//
    //s = 0; a = 290;
    set_to_mergecand_list_hls_tab_mvf_mv_1_y_Dout_A = array_rdat  [0][290];
    //found a write signal pair
    array_argVld [0][290] = set_to_mergecand_list_hls_tab_mvf_mv_1_y_EN_A & (set_to_mergecand_list_hls_tab_mvf_mv_1_y_WEN_A == 0);
    array_adr    [0][290] = set_to_mergecand_list_hls_tab_mvf_mv_1_y_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286256, width=32, addr_width=32) -----//
    //s = 0; a = 132;
    array_argVld [0][132] = set_to_mergecand_list_hls_tab_mvf_poc_0_EN_A & (set_to_mergecand_list_hls_tab_mvf_poc_0_WEN_A != 0);
    array_adr    [0][132] = set_to_mergecand_list_hls_tab_mvf_poc_0_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][132] = set_to_mergecand_list_hls_tab_mvf_poc_0_Din_A;

    //------READ (array range, global adr = 286256, width=32, addr_width=32) -----//
    //s = 0; a = 291;
    set_to_mergecand_list_hls_tab_mvf_poc_0_Dout_A = array_rdat  [0][291];
    //found a write signal pair
    array_argVld [0][291] = set_to_mergecand_list_hls_tab_mvf_poc_0_EN_A & (set_to_mergecand_list_hls_tab_mvf_poc_0_WEN_A == 0);
    array_adr    [0][291] = set_to_mergecand_list_hls_tab_mvf_poc_0_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286260, width=32, addr_width=32) -----//
    //s = 0; a = 133;
    array_argVld [0][133] = set_to_mergecand_list_hls_tab_mvf_poc_1_EN_A & (set_to_mergecand_list_hls_tab_mvf_poc_1_WEN_A != 0);
    array_adr    [0][133] = set_to_mergecand_list_hls_tab_mvf_poc_1_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][133] = set_to_mergecand_list_hls_tab_mvf_poc_1_Din_A;

    //------READ (array range, global adr = 286260, width=32, addr_width=32) -----//
    //s = 0; a = 292;
    set_to_mergecand_list_hls_tab_mvf_poc_1_Dout_A = array_rdat  [0][292];
    //found a write signal pair
    array_argVld [0][292] = set_to_mergecand_list_hls_tab_mvf_poc_1_EN_A & (set_to_mergecand_list_hls_tab_mvf_poc_1_WEN_A == 0);
    array_adr    [0][292] = set_to_mergecand_list_hls_tab_mvf_poc_1_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286264, width=8, addr_width=32) -----//
    //s = 0; a = 134;
    array_argVld [0][134] = set_to_mergecand_list_hls_tab_mvf_ref_idx_0_EN_A & (set_to_mergecand_list_hls_tab_mvf_ref_idx_0_WEN_A != 0);
    array_adr    [0][134] = set_to_mergecand_list_hls_tab_mvf_ref_idx_0_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][134] = set_to_mergecand_list_hls_tab_mvf_ref_idx_0_Din_A;

    //------READ (array range, global adr = 286264, width=8, addr_width=32) -----//
    //s = 0; a = 293;
    set_to_mergecand_list_hls_tab_mvf_ref_idx_0_Dout_A = array_rdat  [0][293];
    //found a write signal pair
    array_argVld [0][293] = set_to_mergecand_list_hls_tab_mvf_ref_idx_0_EN_A & (set_to_mergecand_list_hls_tab_mvf_ref_idx_0_WEN_A == 0);
    array_adr    [0][293] = set_to_mergecand_list_hls_tab_mvf_ref_idx_0_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286268, width=8, addr_width=32) -----//
    //s = 0; a = 135;
    array_argVld [0][135] = set_to_mergecand_list_hls_tab_mvf_ref_idx_1_EN_A & (set_to_mergecand_list_hls_tab_mvf_ref_idx_1_WEN_A != 0);
    array_adr    [0][135] = set_to_mergecand_list_hls_tab_mvf_ref_idx_1_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][135] = set_to_mergecand_list_hls_tab_mvf_ref_idx_1_Din_A;

    //------READ (array range, global adr = 286268, width=8, addr_width=32) -----//
    //s = 0; a = 294;
    set_to_mergecand_list_hls_tab_mvf_ref_idx_1_Dout_A = array_rdat  [0][294];
    //found a write signal pair
    array_argVld [0][294] = set_to_mergecand_list_hls_tab_mvf_ref_idx_1_EN_A & (set_to_mergecand_list_hls_tab_mvf_ref_idx_1_WEN_A == 0);
    array_adr    [0][294] = set_to_mergecand_list_hls_tab_mvf_ref_idx_1_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 136;
    array_argVld [0][136] = set_to_mergecand_list_hls_tab_mvf_pred_flag_row_EN_A & (set_to_mergecand_list_hls_tab_mvf_pred_flag_row_WEN_A != 0);
    array_adr    [0][136] = set_to_mergecand_list_hls_tab_mvf_pred_flag_row_Addr_A;
    array_wdat   [0][136] = set_to_mergecand_list_hls_tab_mvf_pred_flag_row_Din_A;

    //------READ (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 295;
    set_to_mergecand_list_hls_tab_mvf_pred_flag_row_Dout_A = array_rdat  [0][295];
    //found a write signal pair
    array_argVld [0][295] = set_to_mergecand_list_hls_tab_mvf_pred_flag_row_EN_A & (set_to_mergecand_list_hls_tab_mvf_pred_flag_row_WEN_A == 0);
    array_adr    [0][295] = set_to_mergecand_list_hls_tab_mvf_pred_flag_row_Addr_A;

    set_to_mergecand_list_hls_ready = array_argRdy[0][128]& array_argRdy[0][287]& array_argRdy[0][129]& array_argRdy[0][288]& array_argRdy[0][130]& array_argRdy[0][289]& array_argRdy[0][131]& array_argRdy[0][290]& array_argRdy[0][132]& array_argRdy[0][291]& array_argRdy[0][133]& array_argRdy[0][292]& array_argRdy[0][134]& array_argRdy[0][293]& array_argRdy[0][135]& array_argRdy[0][294]& array_argRdy[0][136]& array_argRdy[0][295] & ~ap_arb_reload_running_r[set_to_mergecand_list_hls];
    array_ap_ce[0][128] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][287] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][129] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][288] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][130] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][289] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][131] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][290] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][132] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][291] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][133] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][292] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][134] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][293] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][135] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][294] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][136] = ap_ce[set_to_mergecand_list_hls];
    array_ap_ce[0][295] = ap_ce[set_to_mergecand_list_hls];

    if (ap_arb_ret[set_to_mergecand_list_hls] & ~ap_arb_ret_r[set_to_mergecand_list_hls]) begin
        ap_arb_ret_running[set_to_mergecand_list_hls] = 1;
        set_to_mergecand_list_hls_ready = 0;
    end

    scalar_argAckdone_all[set_to_mergecand_list_hls] = scalar_argAckdone[31][1][12] &
                                                scalar_argAckdone[31][0][13] &
                                                scalar_argAckdone[31][1][13] &
                                                scalar_argAckdone[31][0][14] &
                                                scalar_argAckdone[0][1][15] &
                                                scalar_argAckdone[5][1][15] &
                                                scalar_argAckdone[5][0][16] &
                                                scalar_argAckdone[6][1][14] &
                                                scalar_argAckdone[6][0][15] &
                                                scalar_argAckdone[7][0][13] &
                                                scalar_argAckdone[8][0][15] &
                                                scalar_argAckdone[8][1][15] &
                                                scalar_argAckdone[9][0][15] &
                                                scalar_argAckdone[9][1][15] &
                                                scalar_argAckdone[10][1][12] &
                                                scalar_argAckdone[11][0][10] &
                                                scalar_argAckdone[11][1][10] &
                                                scalar_argAckdone[12][1][11] &
                                                scalar_argAckdone[12][0][12] &
                                                scalar_argAckdone[13][1][10] &
                                                scalar_argAckdone[14][0][13] &
                                                scalar_argAckdone[14][1][13] &
                                                scalar_argAckdone[15][0][12] &
                                                scalar_argAckdone[15][1][12] &
                                                scalar_argAckdone[16][0][8] &
                                                scalar_argAckdone[17][0][7] &
                                                scalar_argAckdone[18][1][6] &
                                                scalar_argAckdone[19][1][7] &
                                                scalar_argAckdone[20][1][9] &
                                                scalar_argAckdone[21][0][10] &
                                                scalar_argAckdone[22][0][10] &
                                                scalar_argAckdone[23][0][8] &
                                                scalar_argAckdone[24][0][6] &
                                                scalar_argAckdone[25][0][6] &
                                                scalar_argAckdone[26][0][6] &
                                                scalar_argAckdone[27][1][11] &
                                                scalar_argAckdone[27][0][12] &
                                                scalar_argAckdone[27][1][12] &
                                                scalar_argAckdone[27][0][13] &
                                                scalar_argAckdone[28][1][6] &
                                                scalar_argAckdone[29][0][13] &
                                                scalar_argAckdone[29][1][13] &
                                                scalar_argAckdone[29][0][14] &
                                                scalar_argAckdone[29][1][14] &
                                                scalar_argAckdone[30][1][4];
    if (ap_arb_ret_running[set_to_mergecand_list_hls] & scalar_argAckdone_all[set_to_mergecand_list_hls] &~ ap_arb_reload_running_r[set_to_mergecand_list_hls]) begin
        ap_arb_reload[set_to_mergecand_list_hls] = 1;
        ap_arb_reload_running[set_to_mergecand_list_hls] = 1;
    end

    if (ap_arb_start[set_to_mergecand_list_hls] &~ ap_arb_start_r[set_to_mergecand_list_hls]) begin
        ap_arb_start_running[set_to_mergecand_list_hls] = 1;
    end

    if (ap_arb_start_running[set_to_mergecand_list_hls] & ~scalar_writing_132) begin
        ap_arb_start_running[set_to_mergecand_list_hls] = 0;
        ap_arb_reload[set_to_mergecand_list_hls] = 1;
    end

    scalar_argdone_all[set_to_mergecand_list_hls] = scalar_argdone[11][0][37] &
                                                                scalar_argdone[1][0][32] &
                                                                scalar_argdone[29][1][39] &
                                                                scalar_argdone[3][1][24];

    if (scalar_argdone_all_r[set_to_mergecand_list_hls]) begin
        scalar_argdone[11][0][37] = 0;
        scalar_argdone[1][0][32] = 0;
        scalar_argdone[29][1][39] = 0;
        scalar_argdone[3][1][24] = 0;

        if (ap_arb_start_r[set_to_mergecand_list_hls] & ~ap_running_r[set_to_mergecand_list_hls]) begin
            ap_start[set_to_mergecand_list_hls] = 1;
            ap_running[set_to_mergecand_list_hls] = 1;
        end
        else if (ap_arb_ret_running_r[set_to_mergecand_list_hls]) begin
            ap_arb_ret_running[set_to_mergecand_list_hls] = 0;
            ap_arb_reload_running[set_to_mergecand_list_hls] = 0;
        end
    end

    if (ap_start_r[set_to_mergecand_list_hls] & ap_ready_r[set_to_mergecand_list_hls]) begin
        ap_start[set_to_mergecand_list_hls] = 0;
    end

    if (ap_done_r[set_to_mergecand_list_hls]) begin
        ap_running[set_to_mergecand_list_hls] = 0;
    end
`endif
    //============================================================
    //compare_mv_ref_idx_hls       (f = 47)
    //============================================================
`ifdef enable_connect_compare_mv_ref_idx_hls
    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 1; a = 12;
    if (scalar_rdat_vld_r[11][1][12]) begin
        scalar_argdone [11][1][12] = 1;
    end
    scalar_adr[11][1][12] = {ap_part[compare_mv_ref_idx_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][12]) begin
        scalar_argVld[11][1][12] = 0;
    end
    if (ap_arb_reload_r[compare_mv_ref_idx_hls]) begin
        scalar_argVld[11][1][12] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 0; a = 7;
    if (scalar_rdat_vld_r[3][0][7]) begin
        scalar_argdone [3][0][7] = 1;
    end
    scalar_adr[3][0][7] = {ap_part[compare_mv_ref_idx_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][7]) begin
        scalar_argVld[3][0][7] = 0;
    end
    if (ap_arb_reload_r[compare_mv_ref_idx_hls]) begin
        scalar_argVld[3][0][7] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 1; a = 17;
    if (scalar_rdat_vld_r[29][1][17]) begin
        scalar_argdone [29][1][17] = 1;
    end
    scalar_adr[29][1][17] = {ap_part[compare_mv_ref_idx_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][17]) begin
        scalar_argVld[29][1][17] = 0;
    end
    if (ap_arb_reload_r[compare_mv_ref_idx_hls]) begin
        scalar_argVld[29][1][17] = 1;
    end

    //------WRITE (array range, global adr = 286240, width=16, addr_width=32) -----//
    //s = 0; a = 12;
    array_argVld [0][12] = compare_mv_ref_idx_hls_tab_mvf_mv_0_x_EN_A & (compare_mv_ref_idx_hls_tab_mvf_mv_0_x_WEN_A != 0);
    array_adr    [0][12] = compare_mv_ref_idx_hls_tab_mvf_mv_0_x_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][12] = compare_mv_ref_idx_hls_tab_mvf_mv_0_x_Din_A;

    //------READ (array range, global adr = 286240, width=16, addr_width=32) -----//
    //s = 0; a = 172;
    compare_mv_ref_idx_hls_tab_mvf_mv_0_x_Dout_A = array_rdat  [0][172];
    //found a write signal pair
    array_argVld [0][172] = compare_mv_ref_idx_hls_tab_mvf_mv_0_x_EN_A & (compare_mv_ref_idx_hls_tab_mvf_mv_0_x_WEN_A == 0);
    array_adr    [0][172] = compare_mv_ref_idx_hls_tab_mvf_mv_0_x_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286244, width=16, addr_width=32) -----//
    //s = 0; a = 13;
    array_argVld [0][13] = compare_mv_ref_idx_hls_tab_mvf_mv_0_y_EN_A & (compare_mv_ref_idx_hls_tab_mvf_mv_0_y_WEN_A != 0);
    array_adr    [0][13] = compare_mv_ref_idx_hls_tab_mvf_mv_0_y_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][13] = compare_mv_ref_idx_hls_tab_mvf_mv_0_y_Din_A;

    //------READ (array range, global adr = 286244, width=16, addr_width=32) -----//
    //s = 0; a = 173;
    compare_mv_ref_idx_hls_tab_mvf_mv_0_y_Dout_A = array_rdat  [0][173];
    //found a write signal pair
    array_argVld [0][173] = compare_mv_ref_idx_hls_tab_mvf_mv_0_y_EN_A & (compare_mv_ref_idx_hls_tab_mvf_mv_0_y_WEN_A == 0);
    array_adr    [0][173] = compare_mv_ref_idx_hls_tab_mvf_mv_0_y_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286248, width=16, addr_width=32) -----//
    //s = 0; a = 14;
    array_argVld [0][14] = compare_mv_ref_idx_hls_tab_mvf_mv_1_x_EN_A & (compare_mv_ref_idx_hls_tab_mvf_mv_1_x_WEN_A != 0);
    array_adr    [0][14] = compare_mv_ref_idx_hls_tab_mvf_mv_1_x_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][14] = compare_mv_ref_idx_hls_tab_mvf_mv_1_x_Din_A;

    //------READ (array range, global adr = 286248, width=16, addr_width=32) -----//
    //s = 0; a = 174;
    compare_mv_ref_idx_hls_tab_mvf_mv_1_x_Dout_A = array_rdat  [0][174];
    //found a write signal pair
    array_argVld [0][174] = compare_mv_ref_idx_hls_tab_mvf_mv_1_x_EN_A & (compare_mv_ref_idx_hls_tab_mvf_mv_1_x_WEN_A == 0);
    array_adr    [0][174] = compare_mv_ref_idx_hls_tab_mvf_mv_1_x_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286252, width=16, addr_width=32) -----//
    //s = 0; a = 15;
    array_argVld [0][15] = compare_mv_ref_idx_hls_tab_mvf_mv_1_y_EN_A & (compare_mv_ref_idx_hls_tab_mvf_mv_1_y_WEN_A != 0);
    array_adr    [0][15] = compare_mv_ref_idx_hls_tab_mvf_mv_1_y_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][15] = compare_mv_ref_idx_hls_tab_mvf_mv_1_y_Din_A;

    //------READ (array range, global adr = 286252, width=16, addr_width=32) -----//
    //s = 0; a = 175;
    compare_mv_ref_idx_hls_tab_mvf_mv_1_y_Dout_A = array_rdat  [0][175];
    //found a write signal pair
    array_argVld [0][175] = compare_mv_ref_idx_hls_tab_mvf_mv_1_y_EN_A & (compare_mv_ref_idx_hls_tab_mvf_mv_1_y_WEN_A == 0);
    array_adr    [0][175] = compare_mv_ref_idx_hls_tab_mvf_mv_1_y_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286256, width=32, addr_width=32) -----//
    //s = 0; a = 16;
    array_argVld [0][16] = compare_mv_ref_idx_hls_tab_mvf_poc_0_EN_A & (compare_mv_ref_idx_hls_tab_mvf_poc_0_WEN_A != 0);
    array_adr    [0][16] = compare_mv_ref_idx_hls_tab_mvf_poc_0_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][16] = compare_mv_ref_idx_hls_tab_mvf_poc_0_Din_A;

    //------READ (array range, global adr = 286256, width=32, addr_width=32) -----//
    //s = 0; a = 176;
    compare_mv_ref_idx_hls_tab_mvf_poc_0_Dout_A = array_rdat  [0][176];
    //found a write signal pair
    array_argVld [0][176] = compare_mv_ref_idx_hls_tab_mvf_poc_0_EN_A & (compare_mv_ref_idx_hls_tab_mvf_poc_0_WEN_A == 0);
    array_adr    [0][176] = compare_mv_ref_idx_hls_tab_mvf_poc_0_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286260, width=32, addr_width=32) -----//
    //s = 0; a = 17;
    array_argVld [0][17] = compare_mv_ref_idx_hls_tab_mvf_poc_1_EN_A & (compare_mv_ref_idx_hls_tab_mvf_poc_1_WEN_A != 0);
    array_adr    [0][17] = compare_mv_ref_idx_hls_tab_mvf_poc_1_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][17] = compare_mv_ref_idx_hls_tab_mvf_poc_1_Din_A;

    //------READ (array range, global adr = 286260, width=32, addr_width=32) -----//
    //s = 0; a = 177;
    compare_mv_ref_idx_hls_tab_mvf_poc_1_Dout_A = array_rdat  [0][177];
    //found a write signal pair
    array_argVld [0][177] = compare_mv_ref_idx_hls_tab_mvf_poc_1_EN_A & (compare_mv_ref_idx_hls_tab_mvf_poc_1_WEN_A == 0);
    array_adr    [0][177] = compare_mv_ref_idx_hls_tab_mvf_poc_1_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286264, width=8, addr_width=32) -----//
    //s = 0; a = 18;
    array_argVld [0][18] = compare_mv_ref_idx_hls_tab_mvf_ref_idx_0_EN_A & (compare_mv_ref_idx_hls_tab_mvf_ref_idx_0_WEN_A != 0);
    array_adr    [0][18] = compare_mv_ref_idx_hls_tab_mvf_ref_idx_0_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][18] = compare_mv_ref_idx_hls_tab_mvf_ref_idx_0_Din_A;

    //------READ (array range, global adr = 286264, width=8, addr_width=32) -----//
    //s = 0; a = 178;
    compare_mv_ref_idx_hls_tab_mvf_ref_idx_0_Dout_A = array_rdat  [0][178];
    //found a write signal pair
    array_argVld [0][178] = compare_mv_ref_idx_hls_tab_mvf_ref_idx_0_EN_A & (compare_mv_ref_idx_hls_tab_mvf_ref_idx_0_WEN_A == 0);
    array_adr    [0][178] = compare_mv_ref_idx_hls_tab_mvf_ref_idx_0_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286268, width=8, addr_width=32) -----//
    //s = 0; a = 19;
    array_argVld [0][19] = compare_mv_ref_idx_hls_tab_mvf_ref_idx_1_EN_A & (compare_mv_ref_idx_hls_tab_mvf_ref_idx_1_WEN_A != 0);
    array_adr    [0][19] = compare_mv_ref_idx_hls_tab_mvf_ref_idx_1_Addr_A * 32;  //struct_size: 32
    array_wdat   [0][19] = compare_mv_ref_idx_hls_tab_mvf_ref_idx_1_Din_A;

    //------READ (array range, global adr = 286268, width=8, addr_width=32) -----//
    //s = 0; a = 179;
    compare_mv_ref_idx_hls_tab_mvf_ref_idx_1_Dout_A = array_rdat  [0][179];
    //found a write signal pair
    array_argVld [0][179] = compare_mv_ref_idx_hls_tab_mvf_ref_idx_1_EN_A & (compare_mv_ref_idx_hls_tab_mvf_ref_idx_1_WEN_A == 0);
    array_adr    [0][179] = compare_mv_ref_idx_hls_tab_mvf_ref_idx_1_Addr_A * 32;  //struct_size: 32

    //------WRITE (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 20;
    array_argVld [0][20] = compare_mv_ref_idx_hls_tab_mvf_pred_flag_row_EN_A & (compare_mv_ref_idx_hls_tab_mvf_pred_flag_row_WEN_A != 0);
    array_adr    [0][20] = compare_mv_ref_idx_hls_tab_mvf_pred_flag_row_Addr_A;
    array_wdat   [0][20] = compare_mv_ref_idx_hls_tab_mvf_pred_flag_row_Din_A;

    //------READ (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 180;
    compare_mv_ref_idx_hls_tab_mvf_pred_flag_row_Dout_A = array_rdat  [0][180];
    //found a write signal pair
    array_argVld [0][180] = compare_mv_ref_idx_hls_tab_mvf_pred_flag_row_EN_A & (compare_mv_ref_idx_hls_tab_mvf_pred_flag_row_WEN_A == 0);
    array_adr    [0][180] = compare_mv_ref_idx_hls_tab_mvf_pred_flag_row_Addr_A;

    compare_mv_ref_idx_hls_ready = array_argRdy[0][12]& array_argRdy[0][172]& array_argRdy[0][13]& array_argRdy[0][173]& array_argRdy[0][14]& array_argRdy[0][174]& array_argRdy[0][15]& array_argRdy[0][175]& array_argRdy[0][16]& array_argRdy[0][176]& array_argRdy[0][17]& array_argRdy[0][177]& array_argRdy[0][18]& array_argRdy[0][178]& array_argRdy[0][19]& array_argRdy[0][179]& array_argRdy[0][20]& array_argRdy[0][180] & ~ap_arb_reload_running_r[compare_mv_ref_idx_hls];
    array_ap_ce[0][12] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][172] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][13] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][173] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][14] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][174] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][15] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][175] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][16] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][176] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][17] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][177] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][18] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][178] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][19] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][179] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][20] = ap_ce[compare_mv_ref_idx_hls];
    array_ap_ce[0][180] = ap_ce[compare_mv_ref_idx_hls];

    if (ap_arb_ret[compare_mv_ref_idx_hls] & ~ap_arb_ret_r[compare_mv_ref_idx_hls]) begin
        ap_arb_ret_running[compare_mv_ref_idx_hls] = 1;
        compare_mv_ref_idx_hls_ready = 0;
    end

    scalar_argAckdone_all[compare_mv_ref_idx_hls] = 1;
    if (ap_arb_ret_running[compare_mv_ref_idx_hls] & scalar_argAckdone_all[compare_mv_ref_idx_hls] &~ ap_arb_reload_running_r[compare_mv_ref_idx_hls]) begin
        ap_arb_reload[compare_mv_ref_idx_hls] = 1;
        ap_arb_reload_running[compare_mv_ref_idx_hls] = 1;
    end

    if (ap_arb_start[compare_mv_ref_idx_hls] &~ ap_arb_start_r[compare_mv_ref_idx_hls]) begin
        ap_arb_start_running[compare_mv_ref_idx_hls] = 1;
    end

    if (ap_arb_start_running[compare_mv_ref_idx_hls] ) begin
        ap_arb_start_running[compare_mv_ref_idx_hls] = 0;
        ap_arb_reload[compare_mv_ref_idx_hls] = 1;
    end

    scalar_argdone_all[compare_mv_ref_idx_hls] = scalar_argdone[11][1][12] &
                                                                scalar_argdone[3][0][7] &
                                                                scalar_argdone[29][1][17];

    if (scalar_argdone_all_r[compare_mv_ref_idx_hls]) begin
        scalar_argdone[11][1][12] = 0;
        scalar_argdone[3][0][7] = 0;
        scalar_argdone[29][1][17] = 0;

        if (ap_arb_start_r[compare_mv_ref_idx_hls] & ~ap_running_r[compare_mv_ref_idx_hls]) begin
            ap_start[compare_mv_ref_idx_hls] = 1;
            ap_running[compare_mv_ref_idx_hls] = 1;
        end
        else if (ap_arb_ret_running_r[compare_mv_ref_idx_hls]) begin
            ap_arb_ret_running[compare_mv_ref_idx_hls] = 0;
            ap_arb_reload_running[compare_mv_ref_idx_hls] = 0;
        end
    end

    if (ap_start_r[compare_mv_ref_idx_hls] & ap_ready_r[compare_mv_ref_idx_hls]) begin
        ap_start[compare_mv_ref_idx_hls] = 0;
    end

    if (ap_done_r[compare_mv_ref_idx_hls]) begin
        ap_running[compare_mv_ref_idx_hls] = 0;
    end
`endif
    //============================================================
    //combined_bi_predictive_merge_candidates_hls       (f = 48)
    //============================================================
`ifdef enable_connect_combined_bi_predictive_merge_candidates_hls
    //------READ (scalar, complete partition, global adr = 1300) comb block-----//
    //s = 5; r = 0; a = 18;
    if (scalar_rdat_vld_r[5][0][18]) begin
        scalar_argdone [5][0][18] = 1;
    end
    scalar_adr    [5][0][18] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][0][18]) begin
        scalar_argVld [5][0][18] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [5][0][18] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1300) comb block-----//
    //s = 5; r = 0; a = 1;
    if (scalar_argAck [5][0][1]) begin
        scalar_argVld [5][0][1] = 0;
        scalar_argAckdone [5][0][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_o_ap_vld_r) begin
        scalar_argVld [5][0][1] = 1;
        scalar_argAckdone [5][0][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_o_r;
    scalar_adr    [5][0][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1302) comb block-----//
    //s = 5; r = 1; a = 17;
    if (scalar_rdat_vld_r[5][1][17]) begin
        scalar_argdone [5][1][17] = 1;
    end
    scalar_adr    [5][1][17] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][17]) begin
        scalar_argVld [5][1][17] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [5][1][17] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1302) comb block-----//
    //s = 5; r = 1; a = 1;
    if (scalar_argAck [5][1][1]) begin
        scalar_argVld [5][1][1] = 0;
        scalar_argAckdone [5][1][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_o_ap_vld_r) begin
        scalar_argVld [5][1][1] = 1;
        scalar_argAckdone [5][1][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_o_r;
    scalar_adr    [5][1][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1304) comb block-----//
    //s = 6; r = 1; a = 16;
    if (scalar_rdat_vld_r[6][1][16]) begin
        scalar_argdone [6][1][16] = 1;
    end
    scalar_adr    [6][1][16] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][16]) begin
        scalar_argVld [6][1][16] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [6][1][16] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1304) comb block-----//
    //s = 6; r = 0; a = 1;
    if (scalar_argAck [6][0][1]) begin
        scalar_argVld [6][0][1] = 0;
        scalar_argAckdone [6][0][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_o_ap_vld_r) begin
        scalar_argVld [6][0][1] = 1;
        scalar_argAckdone [6][0][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_o_r;
    scalar_adr    [6][0][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1306) comb block-----//
    //s = 6; r = 0; a = 18;
    if (scalar_rdat_vld_r[6][0][18]) begin
        scalar_argdone [6][0][18] = 1;
    end
    scalar_adr    [6][0][18] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][18]) begin
        scalar_argVld [6][0][18] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [6][0][18] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1306) comb block-----//
    //s = 6; r = 1; a = 1;
    if (scalar_argAck [6][1][1]) begin
        scalar_argVld [6][1][1] = 0;
        scalar_argAckdone [6][1][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_o_ap_vld_r) begin
        scalar_argVld [6][1][1] = 1;
        scalar_argAckdone [6][1][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_o_r;
    scalar_adr    [6][1][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1308) comb block-----//
    //s = 7; r = 1; a = 0;
    if (scalar_argAck [7][1][0]) begin
        scalar_argVld [7][1][0] = 0;
        scalar_argAckdone [7][1][0] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_4_ap_vld_r) begin
        scalar_argVld [7][1][0] = 1;
        scalar_argAckdone [7][1][0] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][0] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_4_r;
    scalar_adr    [7][1][0] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1312) comb block-----//
    //s = 8; r = 0; a = 17;
    if (scalar_rdat_vld_r[8][0][17]) begin
        scalar_argdone [8][0][17] = 1;
    end
    scalar_adr    [8][0][17] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][17]) begin
        scalar_argVld [8][0][17] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [8][0][17] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1312) comb block-----//
    //s = 8; r = 0; a = 1;
    if (scalar_argAck [8][0][1]) begin
        scalar_argVld [8][0][1] = 0;
        scalar_argAckdone [8][0][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_o_ap_vld_r) begin
        scalar_argVld [8][0][1] = 1;
        scalar_argAckdone [8][0][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_o_r;
    scalar_adr    [8][0][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1314) comb block-----//
    //s = 8; r = 1; a = 17;
    if (scalar_rdat_vld_r[8][1][17]) begin
        scalar_argdone [8][1][17] = 1;
    end
    scalar_adr    [8][1][17] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][17]) begin
        scalar_argVld [8][1][17] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [8][1][17] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1314) comb block-----//
    //s = 8; r = 1; a = 1;
    if (scalar_argAck [8][1][1]) begin
        scalar_argVld [8][1][1] = 0;
        scalar_argAckdone [8][1][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_o_ap_vld_r) begin
        scalar_argVld [8][1][1] = 1;
        scalar_argAckdone [8][1][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_o_r;
    scalar_adr    [8][1][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1316) comb block-----//
    //s = 9; r = 1; a = 17;
    if (scalar_rdat_vld_r[9][1][17]) begin
        scalar_argdone [9][1][17] = 1;
    end
    scalar_adr    [9][1][17] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][17]) begin
        scalar_argVld [9][1][17] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [9][1][17] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1316) comb block-----//
    //s = 9; r = 0; a = 1;
    if (scalar_argAck [9][0][1]) begin
        scalar_argVld [9][0][1] = 0;
        scalar_argAckdone [9][0][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_o_ap_vld_r) begin
        scalar_argVld [9][0][1] = 1;
        scalar_argAckdone [9][0][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_o_r;
    scalar_adr    [9][0][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1318) comb block-----//
    //s = 9; r = 0; a = 18;
    if (scalar_rdat_vld_r[9][0][18]) begin
        scalar_argdone [9][0][18] = 1;
    end
    scalar_adr    [9][0][18] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][18]) begin
        scalar_argVld [9][0][18] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [9][0][18] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1318) comb block-----//
    //s = 9; r = 1; a = 1;
    if (scalar_argAck [9][1][1]) begin
        scalar_argVld [9][1][1] = 0;
        scalar_argAckdone [9][1][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_o_ap_vld_r) begin
        scalar_argVld [9][1][1] = 1;
        scalar_argAckdone [9][1][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_o_r;
    scalar_adr    [9][1][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1320) comb block-----//
    //s = 10; r = 1; a = 0;
    if (scalar_argAck [10][1][0]) begin
        scalar_argVld [10][1][0] = 0;
        scalar_argAckdone [10][1][0] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_4_ap_vld_r) begin
        scalar_argVld [10][1][0] = 1;
        scalar_argAckdone [10][1][0] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][0] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_4_r;
    scalar_adr    [10][1][0] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1324) comb block-----//
    //s = 11; r = 1; a = 11;
    if (scalar_rdat_vld_r[11][1][11]) begin
        scalar_argdone [11][1][11] = 1;
    end
    scalar_adr    [11][1][11] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][11]) begin
        scalar_argVld [11][1][11] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [11][1][11] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1324) comb block-----//
    //s = 11; r = 0; a = 1;
    if (scalar_argAck [11][0][1]) begin
        scalar_argVld [11][0][1] = 0;
        scalar_argAckdone [11][0][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_o_ap_vld_r) begin
        scalar_argVld [11][0][1] = 1;
        scalar_argAckdone [11][0][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][0][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_o_r;
    scalar_adr    [11][0][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1326) comb block-----//
    //s = 11; r = 0; a = 12;
    if (scalar_rdat_vld_r[11][0][12]) begin
        scalar_argdone [11][0][12] = 1;
    end
    scalar_adr    [11][0][12] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][12]) begin
        scalar_argVld [11][0][12] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [11][0][12] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1326) comb block-----//
    //s = 11; r = 1; a = 1;
    if (scalar_argAck [11][1][1]) begin
        scalar_argVld [11][1][1] = 0;
        scalar_argAckdone [11][1][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_o_ap_vld_r) begin
        scalar_argVld [11][1][1] = 1;
        scalar_argAckdone [11][1][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][1][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_o_r;
    scalar_adr    [11][1][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1328) comb block-----//
    //s = 12; r = 1; a = 12;
    if (scalar_rdat_vld_r[12][1][12]) begin
        scalar_argdone [12][1][12] = 1;
    end
    scalar_adr    [12][1][12] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][12]) begin
        scalar_argVld [12][1][12] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [12][1][12] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1328) comb block-----//
    //s = 12; r = 0; a = 1;
    if (scalar_argAck [12][0][1]) begin
        scalar_argVld [12][0][1] = 0;
        scalar_argAckdone [12][0][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_o_ap_vld_r) begin
        scalar_argVld [12][0][1] = 1;
        scalar_argAckdone [12][0][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_o_r;
    scalar_adr    [12][0][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1330) comb block-----//
    //s = 12; r = 0; a = 14;
    if (scalar_rdat_vld_r[12][0][14]) begin
        scalar_argdone [12][0][14] = 1;
    end
    scalar_adr    [12][0][14] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][14]) begin
        scalar_argVld [12][0][14] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [12][0][14] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1330) comb block-----//
    //s = 12; r = 1; a = 1;
    if (scalar_argAck [12][1][1]) begin
        scalar_argVld [12][1][1] = 0;
        scalar_argAckdone [12][1][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_o_ap_vld_r) begin
        scalar_argVld [12][1][1] = 1;
        scalar_argAckdone [12][1][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_o_r;
    scalar_adr    [12][1][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1332) comb block-----//
    //s = 13; r = 1; a = 0;
    if (scalar_argAck [13][1][0]) begin
        scalar_argVld [13][1][0] = 0;
        scalar_argAckdone [13][1][0] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_4_ap_vld_r) begin
        scalar_argVld [13][1][0] = 1;
        scalar_argAckdone [13][1][0] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][1][0] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_4_r;
    scalar_adr    [13][1][0] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1336) comb block-----//
    //s = 14; r = 0; a = 14;
    if (scalar_rdat_vld_r[14][0][14]) begin
        scalar_argdone [14][0][14] = 1;
    end
    scalar_adr    [14][0][14] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][14]) begin
        scalar_argVld [14][0][14] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [14][0][14] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1336) comb block-----//
    //s = 14; r = 0; a = 1;
    if (scalar_argAck [14][0][1]) begin
        scalar_argVld [14][0][1] = 0;
        scalar_argAckdone [14][0][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_o_ap_vld_r) begin
        scalar_argVld [14][0][1] = 1;
        scalar_argAckdone [14][0][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_o_r;
    scalar_adr    [14][0][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1338) comb block-----//
    //s = 14; r = 1; a = 14;
    if (scalar_rdat_vld_r[14][1][14]) begin
        scalar_argdone [14][1][14] = 1;
    end
    scalar_adr    [14][1][14] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][14]) begin
        scalar_argVld [14][1][14] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [14][1][14] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1338) comb block-----//
    //s = 14; r = 1; a = 1;
    if (scalar_argAck [14][1][1]) begin
        scalar_argVld [14][1][1] = 0;
        scalar_argAckdone [14][1][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_o_ap_vld_r) begin
        scalar_argVld [14][1][1] = 1;
        scalar_argAckdone [14][1][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_o_r;
    scalar_adr    [14][1][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1340) comb block-----//
    //s = 15; r = 0; a = 13;
    if (scalar_rdat_vld_r[15][0][13]) begin
        scalar_argdone [15][0][13] = 1;
    end
    scalar_adr    [15][0][13] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][13]) begin
        scalar_argVld [15][0][13] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [15][0][13] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1340) comb block-----//
    //s = 15; r = 0; a = 1;
    if (scalar_argAck [15][0][1]) begin
        scalar_argVld [15][0][1] = 0;
        scalar_argAckdone [15][0][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_o_ap_vld_r) begin
        scalar_argVld [15][0][1] = 1;
        scalar_argAckdone [15][0][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_o_r;
    scalar_adr    [15][0][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1342) comb block-----//
    //s = 15; r = 1; a = 13;
    if (scalar_rdat_vld_r[15][1][13]) begin
        scalar_argdone [15][1][13] = 1;
    end
    scalar_adr    [15][1][13] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][13]) begin
        scalar_argVld [15][1][13] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [15][1][13] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1342) comb block-----//
    //s = 15; r = 1; a = 1;
    if (scalar_argAck [15][1][1]) begin
        scalar_argVld [15][1][1] = 0;
        scalar_argAckdone [15][1][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_o_ap_vld_r) begin
        scalar_argVld [15][1][1] = 1;
        scalar_argAckdone [15][1][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_o_r;
    scalar_adr    [15][1][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1344) comb block-----//
    //s = 16; r = 1; a = 0;
    if (scalar_argAck [16][1][0]) begin
        scalar_argVld [16][1][0] = 0;
        scalar_argAckdone [16][1][0] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_4_ap_vld_r) begin
        scalar_argVld [16][1][0] = 1;
        scalar_argAckdone [16][1][0] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][1][0] = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_4_r;
    scalar_adr    [16][1][0] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1348) comb block-----//
    //s = 17; r = 0; a = 9;
    if (scalar_rdat_vld_r[17][0][9]) begin
        scalar_argdone [17][0][9] = 1;
    end
    scalar_adr    [17][0][9] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][9]) begin
        scalar_argVld [17][0][9] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [17][0][9] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1348) comb block-----//
    //s = 17; r = 1; a = 0;
    if (scalar_argAck [17][1][0]) begin
        scalar_argVld [17][1][0] = 0;
        scalar_argAckdone [17][1][0] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_o_ap_vld_r) begin
        scalar_argVld [17][1][0] = 1;
        scalar_argAckdone [17][1][0] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][1][0] = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_o_r;
    scalar_adr    [17][1][0] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1352) comb block-----//
    //s = 18; r = 0; a = 8;
    if (scalar_rdat_vld_r[18][0][8]) begin
        scalar_argdone [18][0][8] = 1;
    end
    scalar_adr    [18][0][8] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][8]) begin
        scalar_argVld [18][0][8] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [18][0][8] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1352) comb block-----//
    //s = 18; r = 1; a = 0;
    if (scalar_argAck [18][1][0]) begin
        scalar_argVld [18][1][0] = 0;
        scalar_argAckdone [18][1][0] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_o_ap_vld_r) begin
        scalar_argVld [18][1][0] = 1;
        scalar_argAckdone [18][1][0] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][1][0] = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_o_r;
    scalar_adr    [18][1][0] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1356) comb block-----//
    //s = 19; r = 1; a = 8;
    if (scalar_rdat_vld_r[19][1][8]) begin
        scalar_argdone [19][1][8] = 1;
    end
    scalar_adr    [19][1][8] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][8]) begin
        scalar_argVld [19][1][8] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [19][1][8] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1356) comb block-----//
    //s = 19; r = 1; a = 0;
    if (scalar_argAck [19][1][0]) begin
        scalar_argVld [19][1][0] = 0;
        scalar_argAckdone [19][1][0] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_o_ap_vld_r) begin
        scalar_argVld [19][1][0] = 1;
        scalar_argAckdone [19][1][0] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][1][0] = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_o_r;
    scalar_adr    [19][1][0] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1360) comb block-----//
    //s = 20; r = 0; a = 11;
    if (scalar_rdat_vld_r[20][0][11]) begin
        scalar_argdone [20][0][11] = 1;
    end
    scalar_adr    [20][0][11] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][11]) begin
        scalar_argVld [20][0][11] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [20][0][11] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1360) comb block-----//
    //s = 20; r = 0; a = 1;
    if (scalar_argAck [20][0][1]) begin
        scalar_argVld [20][0][1] = 0;
        scalar_argAckdone [20][0][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_o_ap_vld_r) begin
        scalar_argVld [20][0][1] = 1;
        scalar_argAckdone [20][0][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_o_r;
    scalar_adr    [20][0][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1364) comb block-----//
    //s = 21; r = 1; a = 0;
    if (scalar_argAck [21][1][0]) begin
        scalar_argVld [21][1][0] = 0;
        scalar_argAckdone [21][1][0] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_4_ap_vld_r) begin
        scalar_argVld [21][1][0] = 1;
        scalar_argAckdone [21][1][0] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][0] = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_4_r;
    scalar_adr    [21][1][0] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1368) comb block-----//
    //s = 22; r = 0; a = 12;
    if (scalar_rdat_vld_r[22][0][12]) begin
        scalar_argdone [22][0][12] = 1;
    end
    scalar_adr    [22][0][12] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][12]) begin
        scalar_argVld [22][0][12] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [22][0][12] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1368) comb block-----//
    //s = 22; r = 1; a = 0;
    if (scalar_argAck [22][1][0]) begin
        scalar_argVld [22][1][0] = 0;
        scalar_argAckdone [22][1][0] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_o_ap_vld_r) begin
        scalar_argVld [22][1][0] = 1;
        scalar_argAckdone [22][1][0] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][0] = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_o_r;
    scalar_adr    [22][1][0] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1372) comb block-----//
    //s = 23; r = 1; a = 8;
    if (scalar_rdat_vld_r[23][1][8]) begin
        scalar_argdone [23][1][8] = 1;
    end
    scalar_adr    [23][1][8] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][8]) begin
        scalar_argVld [23][1][8] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [23][1][8] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1372) comb block-----//
    //s = 23; r = 1; a = 0;
    if (scalar_argAck [23][1][0]) begin
        scalar_argVld [23][1][0] = 0;
        scalar_argAckdone [23][1][0] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_o_ap_vld_r) begin
        scalar_argVld [23][1][0] = 1;
        scalar_argAckdone [23][1][0] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][1][0] = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_o_r;
    scalar_adr    [23][1][0] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1376) comb block-----//
    //s = 24; r = 1; a = 6;
    if (scalar_rdat_vld_r[24][1][6]) begin
        scalar_argdone [24][1][6] = 1;
    end
    scalar_adr    [24][1][6] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][6]) begin
        scalar_argVld [24][1][6] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [24][1][6] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1376) comb block-----//
    //s = 24; r = 1; a = 0;
    if (scalar_argAck [24][1][0]) begin
        scalar_argVld [24][1][0] = 0;
        scalar_argAckdone [24][1][0] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_o_ap_vld_r) begin
        scalar_argVld [24][1][0] = 1;
        scalar_argAckdone [24][1][0] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][1][0] = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_o_r;
    scalar_adr    [24][1][0] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1380) comb block-----//
    //s = 25; r = 1; a = 6;
    if (scalar_rdat_vld_r[25][1][6]) begin
        scalar_argdone [25][1][6] = 1;
    end
    scalar_adr    [25][1][6] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][1][6]) begin
        scalar_argVld [25][1][6] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [25][1][6] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1380) comb block-----//
    //s = 25; r = 1; a = 0;
    if (scalar_argAck [25][1][0]) begin
        scalar_argVld [25][1][0] = 0;
        scalar_argAckdone [25][1][0] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_o_ap_vld_r) begin
        scalar_argVld [25][1][0] = 1;
        scalar_argAckdone [25][1][0] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][1][0] = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_o_r;
    scalar_adr    [25][1][0] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1384) comb block-----//
    //s = 26; r = 1; a = 0;
    if (scalar_argAck [26][1][0]) begin
        scalar_argVld [26][1][0] = 0;
        scalar_argAckdone [26][1][0] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_4_ap_vld_r) begin
        scalar_argVld [26][1][0] = 1;
        scalar_argAckdone [26][1][0] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][1][0] = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_4_r;
    scalar_adr    [26][1][0] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1388) comb block-----//
    //s = 27; r = 0; a = 14;
    if (scalar_rdat_vld_r[27][0][14]) begin
        scalar_argdone [27][0][14] = 1;
    end
    scalar_adr    [27][0][14] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][14]) begin
        scalar_argVld [27][0][14] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [27][0][14] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1388) comb block-----//
    //s = 27; r = 0; a = 2;
    if (scalar_argAck [27][0][2]) begin
        scalar_argVld [27][0][2] = 0;
        scalar_argAckdone [27][0][2] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_o_ap_vld_r) begin
        scalar_argVld [27][0][2] = 1;
        scalar_argAckdone [27][0][2] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][2] = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_o_r;
    scalar_adr    [27][0][2] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1389) comb block-----//
    //s = 27; r = 1; a = 13;
    if (scalar_rdat_vld_r[27][1][13]) begin
        scalar_argdone [27][1][13] = 1;
    end
    scalar_adr    [27][1][13] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][13]) begin
        scalar_argVld [27][1][13] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [27][1][13] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1389) comb block-----//
    //s = 27; r = 1; a = 2;
    if (scalar_argAck [27][1][2]) begin
        scalar_argVld [27][1][2] = 0;
        scalar_argAckdone [27][1][2] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_o_ap_vld_r) begin
        scalar_argVld [27][1][2] = 1;
        scalar_argAckdone [27][1][2] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][1][2] = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_o_r;
    scalar_adr    [27][1][2] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1390) comb block-----//
    //s = 27; r = 0; a = 15;
    if (scalar_rdat_vld_r[27][0][15]) begin
        scalar_argdone [27][0][15] = 1;
    end
    scalar_adr    [27][0][15] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][0][15]) begin
        scalar_argVld [27][0][15] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [27][0][15] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1390) comb block-----//
    //s = 27; r = 0; a = 3;
    if (scalar_argAck [27][0][3]) begin
        scalar_argVld [27][0][3] = 0;
        scalar_argAckdone [27][0][3] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_o_ap_vld_r) begin
        scalar_argVld [27][0][3] = 1;
        scalar_argAckdone [27][0][3] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][3] = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_o_r;
    scalar_adr    [27][0][3] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1391) comb block-----//
    //s = 27; r = 1; a = 14;
    if (scalar_rdat_vld_r[27][1][14]) begin
        scalar_argdone [27][1][14] = 1;
    end
    scalar_adr    [27][1][14] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][14]) begin
        scalar_argVld [27][1][14] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [27][1][14] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1391) comb block-----//
    //s = 27; r = 1; a = 3;
    if (scalar_argAck [27][1][3]) begin
        scalar_argVld [27][1][3] = 0;
        scalar_argAckdone [27][1][3] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_o_ap_vld_r) begin
        scalar_argVld [27][1][3] = 1;
        scalar_argAckdone [27][1][3] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][1][3] = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_o_r;
    scalar_adr    [27][1][3] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1392) comb block-----//
    //s = 28; r = 0; a = 1;
    if (scalar_argAck [28][0][1]) begin
        scalar_argVld [28][0][1] = 0;
        scalar_argAckdone [28][0][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_4_ap_vld_r) begin
        scalar_argVld [28][0][1] = 1;
        scalar_argAckdone [28][0][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][0][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_4_r;
    scalar_adr    [28][0][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1396) comb block-----//
    //s = 29; r = 1; a = 15;
    if (scalar_rdat_vld_r[29][1][15]) begin
        scalar_argdone [29][1][15] = 1;
    end
    scalar_adr    [29][1][15] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][15]) begin
        scalar_argVld [29][1][15] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [29][1][15] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1396) comb block-----//
    //s = 29; r = 0; a = 2;
    if (scalar_argAck [29][0][2]) begin
        scalar_argVld [29][0][2] = 0;
        scalar_argAckdone [29][0][2] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_o_ap_vld_r) begin
        scalar_argVld [29][0][2] = 1;
        scalar_argAckdone [29][0][2] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][2] = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_o_r;
    scalar_adr    [29][0][2] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1397) comb block-----//
    //s = 29; r = 0; a = 16;
    if (scalar_rdat_vld_r[29][0][16]) begin
        scalar_argdone [29][0][16] = 1;
    end
    scalar_adr    [29][0][16] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][16]) begin
        scalar_argVld [29][0][16] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [29][0][16] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1397) comb block-----//
    //s = 29; r = 1; a = 2;
    if (scalar_argAck [29][1][2]) begin
        scalar_argVld [29][1][2] = 0;
        scalar_argAckdone [29][1][2] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_o_ap_vld_r) begin
        scalar_argVld [29][1][2] = 1;
        scalar_argAckdone [29][1][2] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][2] = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_o_r;
    scalar_adr    [29][1][2] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1398) comb block-----//
    //s = 29; r = 1; a = 16;
    if (scalar_rdat_vld_r[29][1][16]) begin
        scalar_argdone [29][1][16] = 1;
    end
    scalar_adr    [29][1][16] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][16]) begin
        scalar_argVld [29][1][16] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [29][1][16] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1398) comb block-----//
    //s = 29; r = 0; a = 3;
    if (scalar_argAck [29][0][3]) begin
        scalar_argVld [29][0][3] = 0;
        scalar_argAckdone [29][0][3] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_o_ap_vld_r) begin
        scalar_argVld [29][0][3] = 1;
        scalar_argAckdone [29][0][3] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][3] = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_o_r;
    scalar_adr    [29][0][3] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1399) comb block-----//
    //s = 29; r = 0; a = 17;
    if (scalar_rdat_vld_r[29][0][17]) begin
        scalar_argdone [29][0][17] = 1;
    end
    scalar_adr    [29][0][17] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][17]) begin
        scalar_argVld [29][0][17] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [29][0][17] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1399) comb block-----//
    //s = 29; r = 1; a = 3;
    if (scalar_argAck [29][1][3]) begin
        scalar_argVld [29][1][3] = 0;
        scalar_argAckdone [29][1][3] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_o_ap_vld_r) begin
        scalar_argVld [29][1][3] = 1;
        scalar_argAckdone [29][1][3] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][3] = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_o_r;
    scalar_adr    [29][1][3] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1400) comb block-----//
    //s = 30; r = 0; a = 1;
    if (scalar_argAck [30][0][1]) begin
        scalar_argVld [30][0][1] = 0;
        scalar_argAckdone [30][0][1] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_4_ap_vld_r) begin
        scalar_argVld [30][0][1] = 1;
        scalar_argAckdone [30][0][1] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [30][0][1] = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_4_r;
    scalar_adr    [30][0][1] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1404) comb block-----//
    //s = 31; r = 1; a = 14;
    if (scalar_rdat_vld_r[31][1][14]) begin
        scalar_argdone [31][1][14] = 1;
    end
    scalar_adr    [31][1][14] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][14]) begin
        scalar_argVld [31][1][14] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [31][1][14] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1404) comb block-----//
    //s = 31; r = 0; a = 2;
    if (scalar_argAck [31][0][2]) begin
        scalar_argVld [31][0][2] = 0;
        scalar_argAckdone [31][0][2] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_o_ap_vld_r) begin
        scalar_argVld [31][0][2] = 1;
        scalar_argAckdone [31][0][2] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][2] = combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_o_r;
    scalar_adr    [31][0][2] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1405) comb block-----//
    //s = 31; r = 0; a = 16;
    if (scalar_rdat_vld_r[31][0][16]) begin
        scalar_argdone [31][0][16] = 1;
    end
    scalar_adr    [31][0][16] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][16]) begin
        scalar_argVld [31][0][16] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [31][0][16] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1405) comb block-----//
    //s = 31; r = 1; a = 2;
    if (scalar_argAck [31][1][2]) begin
        scalar_argVld [31][1][2] = 0;
        scalar_argAckdone [31][1][2] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_o_ap_vld_r) begin
        scalar_argVld [31][1][2] = 1;
        scalar_argAckdone [31][1][2] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][1][2] = combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_o_r;
    scalar_adr    [31][1][2] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1406) comb block-----//
    //s = 31; r = 1; a = 15;
    if (scalar_rdat_vld_r[31][1][15]) begin
        scalar_argdone [31][1][15] = 1;
    end
    scalar_adr    [31][1][15] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][1][15]) begin
        scalar_argVld [31][1][15] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [31][1][15] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1406) comb block-----//
    //s = 31; r = 0; a = 3;
    if (scalar_argAck [31][0][3]) begin
        scalar_argVld [31][0][3] = 0;
        scalar_argAckdone [31][0][3] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_o_ap_vld_r) begin
        scalar_argVld [31][0][3] = 1;
        scalar_argAckdone [31][0][3] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][3] = combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_o_r;
    scalar_adr    [31][0][3] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 1407) comb block-----//
    //s = 31; r = 0; a = 17;
    if (scalar_rdat_vld_r[31][0][17]) begin
        scalar_argdone [31][0][17] = 1;
    end
    scalar_adr    [31][0][17] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[31][0][17]) begin
        scalar_argVld [31][0][17] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld [31][0][17] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 1407) comb block-----//
    //s = 31; r = 1; a = 3;
    if (scalar_argAck [31][1][3]) begin
        scalar_argVld [31][1][3] = 0;
        scalar_argAckdone [31][1][3] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_o_ap_vld_r) begin
        scalar_argVld [31][1][3] = 1;
        scalar_argAckdone [31][1][3] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][1][3] = combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_o_r;
    scalar_adr    [31][1][3] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1408) comb block-----//
    //s = 0; r = 1; a = 0;
    if (scalar_argAck [0][1][0]) begin
        scalar_argVld [0][1][0] = 0;
        scalar_argAckdone [0][1][0] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_4_ap_vld_r) begin
        scalar_argVld [0][1][0] = 1;
        scalar_argAckdone [0][1][0] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][1][0] = combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_4_r;
    scalar_adr    [0][1][0] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 132) comb block-----//
    //s = 1; r = 1; a = 9;
    if (scalar_rdat_vld_r[1][1][9]) begin
        scalar_argdone [1][1][9] = 1;
    end
    scalar_adr[1][1][9] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][9]) begin
        scalar_argVld[1][1][9] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld[1][1][9] = 1;
    end

    //------WRITE (scalar, global adr = 132) comb block-----//
    //s = 1; r = 1; a = 0;
    if (scalar_argAck [1][1][0]) begin
        scalar_argVld [1][1][0] = 0;
        scalar_argAckdone [1][1][0] = 1;
    end
    if (combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_o_ap_vld_r) begin
        scalar_argVld [1][1][0] = 1;
        scalar_argAckdone [1][1][0] = 0;
        ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION] = ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][1][0] = combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_o_r;
    scalar_adr    [1][1][0] = {ap_part_w[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1444) comb block-----//
    //s = 9; r = 1; a = 18;
    if (scalar_rdat_vld_r[9][1][18]) begin
        scalar_argdone [9][1][18] = 1;
    end
    scalar_adr[9][1][18] = {ap_part[combined_bi_predictive_merge_candidates_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][18]) begin
        scalar_argVld[9][1][18] = 0;
    end
    if (ap_arb_reload_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argVld[9][1][18] = 1;
    end

    if (ap_arb_ret[combined_bi_predictive_merge_candidates_hls] & ~ap_arb_ret_r[combined_bi_predictive_merge_candidates_hls]) begin
        ap_arb_ret_running[combined_bi_predictive_merge_candidates_hls] = 1;
        combined_bi_predictive_merge_candidates_hls_ready = 0;
    end

    scalar_argAckdone_all[combined_bi_predictive_merge_candidates_hls] = scalar_argAckdone[5][0][1] &
                                                scalar_argAckdone[5][1][1] &
                                                scalar_argAckdone[6][0][1] &
                                                scalar_argAckdone[6][1][1] &
                                                scalar_argAckdone[7][1][0] &
                                                scalar_argAckdone[8][0][1] &
                                                scalar_argAckdone[8][1][1] &
                                                scalar_argAckdone[9][0][1] &
                                                scalar_argAckdone[9][1][1] &
                                                scalar_argAckdone[10][1][0] &
                                                scalar_argAckdone[11][0][1] &
                                                scalar_argAckdone[11][1][1] &
                                                scalar_argAckdone[12][0][1] &
                                                scalar_argAckdone[12][1][1] &
                                                scalar_argAckdone[13][1][0] &
                                                scalar_argAckdone[14][0][1] &
                                                scalar_argAckdone[14][1][1] &
                                                scalar_argAckdone[15][0][1] &
                                                scalar_argAckdone[15][1][1] &
                                                scalar_argAckdone[16][1][0] &
                                                scalar_argAckdone[17][1][0] &
                                                scalar_argAckdone[18][1][0] &
                                                scalar_argAckdone[19][1][0] &
                                                scalar_argAckdone[20][0][1] &
                                                scalar_argAckdone[21][1][0] &
                                                scalar_argAckdone[22][1][0] &
                                                scalar_argAckdone[23][1][0] &
                                                scalar_argAckdone[24][1][0] &
                                                scalar_argAckdone[25][1][0] &
                                                scalar_argAckdone[26][1][0] &
                                                scalar_argAckdone[27][0][2] &
                                                scalar_argAckdone[27][1][2] &
                                                scalar_argAckdone[27][0][3] &
                                                scalar_argAckdone[27][1][3] &
                                                scalar_argAckdone[28][0][1] &
                                                scalar_argAckdone[29][0][2] &
                                                scalar_argAckdone[29][1][2] &
                                                scalar_argAckdone[29][0][3] &
                                                scalar_argAckdone[29][1][3] &
                                                scalar_argAckdone[30][0][1] &
                                                scalar_argAckdone[31][0][2] &
                                                scalar_argAckdone[31][1][2] &
                                                scalar_argAckdone[31][0][3] &
                                                scalar_argAckdone[31][1][3] &
                                                scalar_argAckdone[0][1][0] &
                                                scalar_argAckdone[1][1][0];
    if (ap_arb_ret_running[combined_bi_predictive_merge_candidates_hls] & scalar_argAckdone_all[combined_bi_predictive_merge_candidates_hls] &~ ap_arb_reload_running_r[combined_bi_predictive_merge_candidates_hls]) begin
        ap_arb_reload[combined_bi_predictive_merge_candidates_hls] = 1;
        ap_arb_reload_running[combined_bi_predictive_merge_candidates_hls] = 1;
    end

    if (ap_arb_start[combined_bi_predictive_merge_candidates_hls] &~ ap_arb_start_r[combined_bi_predictive_merge_candidates_hls]) begin
        ap_arb_start_running[combined_bi_predictive_merge_candidates_hls] = 1;
    end

    if (ap_arb_start_running[combined_bi_predictive_merge_candidates_hls] & ~scalar_writing_1300& ~scalar_writing_1302& ~scalar_writing_1304& ~scalar_writing_1306& ~scalar_writing_1312& ~scalar_writing_1314& ~scalar_writing_1316& ~scalar_writing_1318& ~scalar_writing_1324& ~scalar_writing_1326& ~scalar_writing_1328& ~scalar_writing_1330& ~scalar_writing_1336& ~scalar_writing_1338& ~scalar_writing_1340& ~scalar_writing_1342& ~scalar_writing_1348& ~scalar_writing_1352& ~scalar_writing_1356& ~scalar_writing_1360& ~scalar_writing_1368& ~scalar_writing_1372& ~scalar_writing_1376& ~scalar_writing_1380& ~scalar_writing_1388& ~scalar_writing_1389& ~scalar_writing_1390& ~scalar_writing_1391& ~scalar_writing_1396& ~scalar_writing_1397& ~scalar_writing_1398& ~scalar_writing_1399& ~scalar_writing_1404& ~scalar_writing_1405& ~scalar_writing_1406& ~scalar_writing_1407& ~scalar_writing_132& ~scalar_writing_1444) begin
        ap_arb_start_running[combined_bi_predictive_merge_candidates_hls] = 0;
        ap_arb_reload[combined_bi_predictive_merge_candidates_hls] = 1;
    end

    scalar_argdone_all[combined_bi_predictive_merge_candidates_hls] = scalar_argdone[5][0][18] &
                                                                scalar_argdone[5][1][17] &
                                                                scalar_argdone[6][1][16] &
                                                                scalar_argdone[6][0][18] &
                                                                scalar_argdone[8][0][17] &
                                                                scalar_argdone[8][1][17] &
                                                                scalar_argdone[9][1][17] &
                                                                scalar_argdone[9][0][18] &
                                                                scalar_argdone[11][1][11] &
                                                                scalar_argdone[11][0][12] &
                                                                scalar_argdone[12][1][12] &
                                                                scalar_argdone[12][0][14] &
                                                                scalar_argdone[14][0][14] &
                                                                scalar_argdone[14][1][14] &
                                                                scalar_argdone[15][0][13] &
                                                                scalar_argdone[15][1][13] &
                                                                scalar_argdone[17][0][9] &
                                                                scalar_argdone[18][0][8] &
                                                                scalar_argdone[19][1][8] &
                                                                scalar_argdone[20][0][11] &
                                                                scalar_argdone[22][0][12] &
                                                                scalar_argdone[23][1][8] &
                                                                scalar_argdone[24][1][6] &
                                                                scalar_argdone[25][1][6] &
                                                                scalar_argdone[27][0][14] &
                                                                scalar_argdone[27][1][13] &
                                                                scalar_argdone[27][0][15] &
                                                                scalar_argdone[27][1][14] &
                                                                scalar_argdone[29][1][15] &
                                                                scalar_argdone[29][0][16] &
                                                                scalar_argdone[29][1][16] &
                                                                scalar_argdone[29][0][17] &
                                                                scalar_argdone[31][1][14] &
                                                                scalar_argdone[31][0][16] &
                                                                scalar_argdone[31][1][15] &
                                                                scalar_argdone[31][0][17] &
                                                                scalar_argdone[1][1][9] &
                                                                scalar_argdone[9][1][18];

    if (scalar_argdone_all_r[combined_bi_predictive_merge_candidates_hls]) begin
        scalar_argdone[5][0][18] = 0;
        scalar_argdone[5][1][17] = 0;
        scalar_argdone[6][1][16] = 0;
        scalar_argdone[6][0][18] = 0;
        scalar_argdone[8][0][17] = 0;
        scalar_argdone[8][1][17] = 0;
        scalar_argdone[9][1][17] = 0;
        scalar_argdone[9][0][18] = 0;
        scalar_argdone[11][1][11] = 0;
        scalar_argdone[11][0][12] = 0;
        scalar_argdone[12][1][12] = 0;
        scalar_argdone[12][0][14] = 0;
        scalar_argdone[14][0][14] = 0;
        scalar_argdone[14][1][14] = 0;
        scalar_argdone[15][0][13] = 0;
        scalar_argdone[15][1][13] = 0;
        scalar_argdone[17][0][9] = 0;
        scalar_argdone[18][0][8] = 0;
        scalar_argdone[19][1][8] = 0;
        scalar_argdone[20][0][11] = 0;
        scalar_argdone[22][0][12] = 0;
        scalar_argdone[23][1][8] = 0;
        scalar_argdone[24][1][6] = 0;
        scalar_argdone[25][1][6] = 0;
        scalar_argdone[27][0][14] = 0;
        scalar_argdone[27][1][13] = 0;
        scalar_argdone[27][0][15] = 0;
        scalar_argdone[27][1][14] = 0;
        scalar_argdone[29][1][15] = 0;
        scalar_argdone[29][0][16] = 0;
        scalar_argdone[29][1][16] = 0;
        scalar_argdone[29][0][17] = 0;
        scalar_argdone[31][1][14] = 0;
        scalar_argdone[31][0][16] = 0;
        scalar_argdone[31][1][15] = 0;
        scalar_argdone[31][0][17] = 0;
        scalar_argdone[1][1][9] = 0;
        scalar_argdone[9][1][18] = 0;

        if (ap_arb_start_r[combined_bi_predictive_merge_candidates_hls] & ~ap_running_r[combined_bi_predictive_merge_candidates_hls]) begin
            ap_start[combined_bi_predictive_merge_candidates_hls] = 1;
            ap_running[combined_bi_predictive_merge_candidates_hls] = 1;
        end
        else if (ap_arb_ret_running_r[combined_bi_predictive_merge_candidates_hls]) begin
            ap_arb_ret_running[combined_bi_predictive_merge_candidates_hls] = 0;
            ap_arb_reload_running[combined_bi_predictive_merge_candidates_hls] = 0;
        end
    end

    if (ap_start_r[combined_bi_predictive_merge_candidates_hls] & ap_ready_r[combined_bi_predictive_merge_candidates_hls]) begin
        ap_start[combined_bi_predictive_merge_candidates_hls] = 0;
    end

    if (ap_done_r[combined_bi_predictive_merge_candidates_hls]) begin
        ap_running[combined_bi_predictive_merge_candidates_hls] = 0;
    end
`endif
    //============================================================
    //ff_hevc_luma_mv_merge_mode_hls       (f = 49)
    //============================================================
`ifdef enable_connect_ff_hevc_luma_mv_merge_mode_hls
    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 1; a = 13;
    if (scalar_rdat_vld_r[11][1][13]) begin
        scalar_argdone [11][1][13] = 1;
    end
    scalar_adr[11][1][13] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][13]) begin
        scalar_argVld[11][1][13] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[11][1][13] = 1;
    end

    //------READ (scalar, global adr = 1208) comb block-----//
    //s = 14; r = 0; a = 15;
    if (scalar_rdat_vld_r[14][0][15]) begin
        scalar_argdone [14][0][15] = 1;
    end
    scalar_adr[14][0][15] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][15]) begin
        scalar_argVld[14][0][15] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[14][0][15] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 1; a = 7;
    if (scalar_rdat_vld_r[3][1][7]) begin
        scalar_argdone [3][1][7] = 1;
    end
    scalar_adr[3][1][7] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][7]) begin
        scalar_argVld[3][1][7] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[3][1][7] = 1;
    end

    //------READ (scalar, global adr = 600) comb block-----//
    //s = 22; r = 0; a = 13;
    if (scalar_rdat_vld_r[22][0][13]) begin
        scalar_argdone [22][0][13] = 1;
    end
    scalar_adr[22][0][13] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][13]) begin
        scalar_argVld[22][0][13] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[22][0][13] = 1;
    end

    //------READ (scalar, global adr = 584) comb block-----//
    //s = 18; r = 1; a = 7;
    if (scalar_rdat_vld_r[18][1][7]) begin
        scalar_argdone [18][1][7] = 1;
    end
    scalar_adr[18][1][7] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][7]) begin
        scalar_argVld[18][1][7] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[18][1][7] = 1;
    end

    //------READ (scalar, global adr = 588) comb block-----//
    //s = 19; r = 0; a = 9;
    if (scalar_rdat_vld_r[19][0][9]) begin
        scalar_argdone [19][0][9] = 1;
    end
    scalar_adr[19][0][9] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][9]) begin
        scalar_argVld[19][0][9] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[19][0][9] = 1;
    end

    //------READ (scalar, global adr = 580) comb block-----//
    //s = 17; r = 1; a = 9;
    if (scalar_rdat_vld_r[17][1][9]) begin
        scalar_argdone [17][1][9] = 1;
    end
    scalar_adr[17][1][9] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][9]) begin
        scalar_argVld[17][1][9] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[17][1][9] = 1;
    end

    //------READ (scalar, global adr = 596) comb block-----//
    //s = 21; r = 0; a = 12;
    if (scalar_rdat_vld_r[21][0][12]) begin
        scalar_argdone [21][0][12] = 1;
    end
    scalar_adr[21][0][12] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][12]) begin
        scalar_argVld[21][0][12] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[21][0][12] = 1;
    end

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 0; a = 10;
    if (scalar_rdat_vld_r[17][0][10]) begin
        scalar_argdone [17][0][10] = 1;
    end
    scalar_adr[17][0][10] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][10]) begin
        scalar_argVld[17][0][10] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[17][0][10] = 1;
    end

    //------READ (scalar, global adr = 564) comb block-----//
    //s = 13; r = 0; a = 11;
    if (scalar_rdat_vld_r[13][0][11]) begin
        scalar_argdone [13][0][11] = 1;
    end
    scalar_adr[13][0][11] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][11]) begin
        scalar_argVld[13][0][11] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[13][0][11] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1292) comb block-----//
    //s = 3; r = 0; a = 9;
    if (scalar_rdat_vld_r[3][0][9]) begin
        scalar_argdone [3][0][9] = 1;
    end
    scalar_adr    [3][0][9] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][9]) begin
        scalar_argVld [3][0][9] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld [3][0][9] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1296) comb block-----//
    //s = 4; r = 1; a = 10;
    if (scalar_rdat_vld_r[4][1][10]) begin
        scalar_argdone [4][1][10] = 1;
    end
    scalar_adr    [4][1][10] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][1][10]) begin
        scalar_argVld [4][1][10] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld [4][1][10] = 1;
    end

    //------READ (scalar, global adr = 132) comb block-----//
    //s = 1; r = 1; a = 11;
    if (scalar_rdat_vld_r[1][1][11]) begin
        scalar_argdone [1][1][11] = 1;
    end
    scalar_adr[1][1][11] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][1][11]) begin
        scalar_argVld[1][1][11] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[1][1][11] = 1;
    end

    //------WRITE (scalar, global adr = 132) comb block-----//
    //s = 1; r = 0; a = 1;
    if (scalar_argAck [1][0][1]) begin
        scalar_argVld [1][0][1] = 0;
        scalar_argAckdone [1][0][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_o_ap_vld_r) begin
        scalar_argVld [1][0][1] = 1;
        scalar_argAckdone [1][0][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [1][0][1] = ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_o_r;
    scalar_adr    [1][0][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 0; a = 19;
    if (scalar_rdat_vld_r[29][0][19]) begin
        scalar_argdone [29][0][19] = 1;
    end
    scalar_adr[29][0][19] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][19]) begin
        scalar_argVld[29][0][19] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[29][0][19] = 1;
    end

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 1; a = 17;
    if (scalar_rdat_vld_r[6][1][17]) begin
        scalar_argdone [6][1][17] = 1;
    end
    scalar_adr[6][1][17] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][1][17]) begin
        scalar_argVld[6][1][17] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[6][1][17] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 1; a = 9;
    if (scalar_rdat_vld_r[19][1][9]) begin
        scalar_argdone [19][1][9] = 1;
    end
    scalar_adr[19][1][9] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][9]) begin
        scalar_argVld[19][1][9] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[19][1][9] = 1;
    end

    //------READ (scalar, global adr = 456) comb block-----//
    //s = 18; r = 0; a = 9;
    if (scalar_rdat_vld_r[18][0][9]) begin
        scalar_argdone [18][0][9] = 1;
    end
    scalar_adr[18][0][9] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][9]) begin
        scalar_argVld[18][0][9] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[18][0][9] = 1;
    end

    //------READ (scalar, global adr = 1220) comb block-----//
    //s = 17; r = 1; a = 10;
    if (scalar_rdat_vld_r[17][1][10]) begin
        scalar_argdone [17][1][10] = 1;
    end
    scalar_adr[17][1][10] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][10]) begin
        scalar_argVld[17][1][10] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[17][1][10] = 1;
    end

    //------READ (scalar, global adr = 1224) comb block-----//
    //s = 18; r = 1; a = 8;
    if (scalar_rdat_vld_r[18][1][8]) begin
        scalar_argdone [18][1][8] = 1;
    end
    scalar_adr[18][1][8] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][8]) begin
        scalar_argVld[18][1][8] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[18][1][8] = 1;
    end

    //------READ (scalar, global adr = 1204) comb block-----//
    //s = 13; r = 1; a = 11;
    if (scalar_rdat_vld_r[13][1][11]) begin
        scalar_argdone [13][1][11] = 1;
    end
    scalar_adr[13][1][11] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][11]) begin
        scalar_argVld[13][1][11] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[13][1][11] = 1;
    end

    //------WRITE (scalar, global adr = 1232) comb block-----//
    //s = 20; r = 1; a = 1;
    if (scalar_argAck [20][1][1]) begin
        scalar_argVld [20][1][1] = 0;
        scalar_argAckdone [20][1][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_zero_idx_ap_vld_r) begin
        scalar_argVld [20][1][1] = 1;
        scalar_argAckdone [20][1][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][1] = ff_hevc_luma_mv_merge_mode_hls_zero_idx_r;
    scalar_adr    [20][1][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1196) comb block-----//
    //s = 11; r = 0; a = 14;
    if (scalar_rdat_vld_r[11][0][14]) begin
        scalar_argdone [11][0][14] = 1;
    end
    scalar_adr[11][0][14] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][14]) begin
        scalar_argVld[11][0][14] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[11][0][14] = 1;
    end

    //------READ (scalar, global adr = 1200) comb block-----//
    //s = 12; r = 0; a = 15;
    if (scalar_rdat_vld_r[12][0][15]) begin
        scalar_argdone [12][0][15] = 1;
    end
    scalar_adr[12][0][15] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][15]) begin
        scalar_argVld[12][0][15] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[12][0][15] = 1;
    end

    //------WRITE (array range, global adr = 286224, width=32, addr_width=32) -----//
    //s = 0; a = 33;
    array_argVld [0][33] = ff_hevc_luma_mv_merge_mode_hls_refPicList_0_list_EN_A & (ff_hevc_luma_mv_merge_mode_hls_refPicList_0_list_WEN_A != 0);
    array_adr    [0][33] = ff_hevc_luma_mv_merge_mode_hls_refPicList_0_list_Addr_A;
    array_wdat   [0][33] = ff_hevc_luma_mv_merge_mode_hls_refPicList_0_list_Din_A;

    //------READ (array range, global adr = 286224, width=32, addr_width=32) -----//
    //s = 0; a = 193;
    ff_hevc_luma_mv_merge_mode_hls_refPicList_0_list_Dout_A = array_rdat  [0][193];
    //found a write signal pair
    array_argVld [0][193] = ff_hevc_luma_mv_merge_mode_hls_refPicList_0_list_EN_A & (ff_hevc_luma_mv_merge_mode_hls_refPicList_0_list_WEN_A == 0);
    array_adr    [0][193] = ff_hevc_luma_mv_merge_mode_hls_refPicList_0_list_Addr_A;

    //------WRITE (array range, global adr = 286228, width=32, addr_width=32) -----//
    //s = 0; a = 34;
    array_argVld [0][34] = ff_hevc_luma_mv_merge_mode_hls_refPicList_1_list_EN_A & (ff_hevc_luma_mv_merge_mode_hls_refPicList_1_list_WEN_A != 0);
    array_adr    [0][34] = ff_hevc_luma_mv_merge_mode_hls_refPicList_1_list_Addr_A;
    array_wdat   [0][34] = ff_hevc_luma_mv_merge_mode_hls_refPicList_1_list_Din_A;

    //------READ (array range, global adr = 286228, width=32, addr_width=32) -----//
    //s = 0; a = 194;
    ff_hevc_luma_mv_merge_mode_hls_refPicList_1_list_Dout_A = array_rdat  [0][194];
    //found a write signal pair
    array_argVld [0][194] = ff_hevc_luma_mv_merge_mode_hls_refPicList_1_list_EN_A & (ff_hevc_luma_mv_merge_mode_hls_refPicList_1_list_WEN_A == 0);
    array_adr    [0][194] = ff_hevc_luma_mv_merge_mode_hls_refPicList_1_list_Addr_A;

    //------WRITE (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 35;
    array_argVld [0][35] = ff_hevc_luma_mv_merge_mode_hls_tab_mvf_pred_flag_row_EN_A & (ff_hevc_luma_mv_merge_mode_hls_tab_mvf_pred_flag_row_WEN_A != 0);
    array_adr    [0][35] = ff_hevc_luma_mv_merge_mode_hls_tab_mvf_pred_flag_row_Addr_A;
    array_wdat   [0][35] = ff_hevc_luma_mv_merge_mode_hls_tab_mvf_pred_flag_row_Din_A;

    //------READ (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 195;
    ff_hevc_luma_mv_merge_mode_hls_tab_mvf_pred_flag_row_Dout_A = array_rdat  [0][195];
    //found a write signal pair
    array_argVld [0][195] = ff_hevc_luma_mv_merge_mode_hls_tab_mvf_pred_flag_row_EN_A & (ff_hevc_luma_mv_merge_mode_hls_tab_mvf_pred_flag_row_WEN_A == 0);
    array_adr    [0][195] = ff_hevc_luma_mv_merge_mode_hls_tab_mvf_pred_flag_row_Addr_A;

    //------READ (scalar, global adr = 1548) comb block-----//
    //s = 3; r = 1; a = 8;
    if (scalar_rdat_vld_r[3][1][8]) begin
        scalar_argdone [3][1][8] = 1;
    end
    scalar_adr[3][1][8] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][8]) begin
        scalar_argVld[3][1][8] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[3][1][8] = 1;
    end

    //------READ (scalar, global adr = 1552) comb block-----//
    //s = 4; r = 0; a = 11;
    if (scalar_rdat_vld_r[4][0][11]) begin
        scalar_argdone [4][0][11] = 1;
    end
    scalar_adr[4][0][11] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][11]) begin
        scalar_argVld[4][0][11] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[4][0][11] = 1;
    end

    //------READ (scalar, global adr = 160) comb block-----//
    //s = 8; r = 0; a = 18;
    if (scalar_rdat_vld_r[8][0][18]) begin
        scalar_argdone [8][0][18] = 1;
    end
    scalar_adr[8][0][18] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][18]) begin
        scalar_argVld[8][0][18] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[8][0][18] = 1;
    end

    //------WRITE (scalar, global adr = 160) comb block-----//
    //s = 8; r = 0; a = 2;
    if (scalar_argAck [8][0][2]) begin
        scalar_argVld [8][0][2] = 0;
        scalar_argAckdone [8][0][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_nPbW_o_ap_vld_r) begin
        scalar_argVld [8][0][2] = 1;
        scalar_argAckdone [8][0][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][2] = ff_hevc_luma_mv_merge_mode_hls_nPbW_o_r;
    scalar_adr    [8][0][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 164) comb block-----//
    //s = 9; r = 0; a = 19;
    if (scalar_rdat_vld_r[9][0][19]) begin
        scalar_argdone [9][0][19] = 1;
    end
    scalar_adr[9][0][19] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][19]) begin
        scalar_argVld[9][0][19] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[9][0][19] = 1;
    end

    //------WRITE (scalar, global adr = 164) comb block-----//
    //s = 9; r = 0; a = 2;
    if (scalar_argAck [9][0][2]) begin
        scalar_argVld [9][0][2] = 0;
        scalar_argAckdone [9][0][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_nPbH_o_ap_vld_r) begin
        scalar_argVld [9][0][2] = 1;
        scalar_argAckdone [9][0][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][2] = ff_hevc_luma_mv_merge_mode_hls_nPbH_o_r;
    scalar_adr    [9][0][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 1544) comb block-----//
    //s = 2; r = 1; a = 7;
    if (scalar_rdat_vld_r[2][1][7]) begin
        scalar_argdone [2][1][7] = 1;
    end
    scalar_adr[2][1][7] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][7]) begin
        scalar_argVld[2][1][7] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[2][1][7] = 1;
    end

    //------READ (scalar, global adr = 1444) comb block-----//
    //s = 9; r = 1; a = 19;
    if (scalar_rdat_vld_r[9][1][19]) begin
        scalar_argdone [9][1][19] = 1;
    end
    scalar_adr[9][1][19] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][19]) begin
        scalar_argVld[9][1][19] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[9][1][19] = 1;
    end

    //------READ (scalar, global adr = 1236) comb block-----//
    //s = 21; r = 1; a = 11;
    if (scalar_rdat_vld_r[21][1][11]) begin
        scalar_argdone [21][1][11] = 1;
    end
    scalar_adr[21][1][11] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][11]) begin
        scalar_argVld[21][1][11] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[21][1][11] = 1;
    end

    //------READ (scalar, global adr = 544) comb block-----//
    //s = 8; r = 1; a = 18;
    if (scalar_rdat_vld_r[8][1][18]) begin
        scalar_argdone [8][1][18] = 1;
    end
    scalar_adr[8][1][18] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][18]) begin
        scalar_argVld[8][1][18] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[8][1][18] = 1;
    end

    //------READ (scalar, global adr = 548) comb block-----//
    //s = 9; r = 0; a = 20;
    if (scalar_rdat_vld_r[9][0][20]) begin
        scalar_argdone [9][0][20] = 1;
    end
    scalar_adr[9][0][20] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][20]) begin
        scalar_argVld[9][0][20] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[9][0][20] = 1;
    end

    //------READ (scalar, global adr = 552) comb block-----//
    //s = 10; r = 0; a = 15;
    if (scalar_rdat_vld_r[10][0][15]) begin
        scalar_argdone [10][0][15] = 1;
    end
    scalar_adr[10][0][15] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][15]) begin
        scalar_argVld[10][0][15] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[10][0][15] = 1;
    end

    //------WRITE (scalar, global adr = 552) comb block-----//
    //s = 10; r = 0; a = 1;
    if (scalar_argAck [10][0][1]) begin
        scalar_argVld [10][0][1] = 0;
        scalar_argAckdone [10][0][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_xm_x0_o_ap_vld_r) begin
        scalar_argVld [10][0][1] = 1;
        scalar_argAckdone [10][0][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][1] = ff_hevc_luma_mv_merge_mode_hls_xm_x0_o_r;
    scalar_adr    [10][0][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 556) comb block-----//
    //s = 11; r = 1; a = 14;
    if (scalar_rdat_vld_r[11][1][14]) begin
        scalar_argdone [11][1][14] = 1;
    end
    scalar_adr[11][1][14] = {ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][14]) begin
        scalar_argVld[11][1][14] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argVld[11][1][14] = 1;
    end

    //------WRITE (scalar, global adr = 556) comb block-----//
    //s = 11; r = 0; a = 2;
    if (scalar_argAck [11][0][2]) begin
        scalar_argVld [11][0][2] = 0;
        scalar_argAckdone [11][0][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_xm_y0_o_ap_vld_r) begin
        scalar_argVld [11][0][2] = 1;
        scalar_argAckdone [11][0][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][0][2] = ff_hevc_luma_mv_merge_mode_hls_xm_y0_o_r;
    scalar_adr    [11][0][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1228) comb block-----//
    //s = 19; r = 0; a = 1;
    if (scalar_argAck [19][0][1]) begin
        scalar_argVld [19][0][1] = 0;
        scalar_argAckdone [19][0][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_xm_dbg_ap_vld_r) begin
        scalar_argVld [19][0][1] = 1;
        scalar_argAckdone [19][0][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][0][1] = ff_hevc_luma_mv_merge_mode_hls_xm_dbg_r;
    scalar_adr    [19][0][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1300) comb block-----//
    //s = 5; r = 0; a = 2;
    if (scalar_argAck [5][0][2]) begin
        scalar_argVld [5][0][2] = 0;
        scalar_argAckdone [5][0][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_0_ap_vld_r) begin
        scalar_argVld [5][0][2] = 1;
        scalar_argAckdone [5][0][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][2] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_0_r;
    scalar_adr    [5][0][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1302) comb block-----//
    //s = 5; r = 1; a = 2;
    if (scalar_argAck [5][1][2]) begin
        scalar_argVld [5][1][2] = 0;
        scalar_argAckdone [5][1][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_1_ap_vld_r) begin
        scalar_argVld [5][1][2] = 1;
        scalar_argAckdone [5][1][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][2] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_1_r;
    scalar_adr    [5][1][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1304) comb block-----//
    //s = 6; r = 0; a = 2;
    if (scalar_argAck [6][0][2]) begin
        scalar_argVld [6][0][2] = 0;
        scalar_argAckdone [6][0][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_2_ap_vld_r) begin
        scalar_argVld [6][0][2] = 1;
        scalar_argAckdone [6][0][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][2] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_2_r;
    scalar_adr    [6][0][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1306) comb block-----//
    //s = 6; r = 1; a = 2;
    if (scalar_argAck [6][1][2]) begin
        scalar_argVld [6][1][2] = 0;
        scalar_argAckdone [6][1][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_3_ap_vld_r) begin
        scalar_argVld [6][1][2] = 1;
        scalar_argAckdone [6][1][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][1][2] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_3_r;
    scalar_adr    [6][1][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1308) comb block-----//
    //s = 7; r = 0; a = 1;
    if (scalar_argAck [7][0][1]) begin
        scalar_argVld [7][0][1] = 0;
        scalar_argAckdone [7][0][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_4_ap_vld_r) begin
        scalar_argVld [7][0][1] = 1;
        scalar_argAckdone [7][0][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][1] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_x_4_r;
    scalar_adr    [7][0][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1312) comb block-----//
    //s = 8; r = 1; a = 2;
    if (scalar_argAck [8][1][2]) begin
        scalar_argVld [8][1][2] = 0;
        scalar_argAckdone [8][1][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_0_ap_vld_r) begin
        scalar_argVld [8][1][2] = 1;
        scalar_argAckdone [8][1][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][2] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_0_r;
    scalar_adr    [8][1][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1314) comb block-----//
    //s = 8; r = 0; a = 3;
    if (scalar_argAck [8][0][3]) begin
        scalar_argVld [8][0][3] = 0;
        scalar_argAckdone [8][0][3] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_1_ap_vld_r) begin
        scalar_argVld [8][0][3] = 1;
        scalar_argAckdone [8][0][3] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][3] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_1_r;
    scalar_adr    [8][0][3] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1316) comb block-----//
    //s = 9; r = 1; a = 2;
    if (scalar_argAck [9][1][2]) begin
        scalar_argVld [9][1][2] = 0;
        scalar_argAckdone [9][1][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_2_ap_vld_r) begin
        scalar_argVld [9][1][2] = 1;
        scalar_argAckdone [9][1][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][2] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_2_r;
    scalar_adr    [9][1][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1318) comb block-----//
    //s = 9; r = 0; a = 3;
    if (scalar_argAck [9][0][3]) begin
        scalar_argVld [9][0][3] = 0;
        scalar_argAckdone [9][0][3] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_3_ap_vld_r) begin
        scalar_argVld [9][0][3] = 1;
        scalar_argAckdone [9][0][3] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][3] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_3_r;
    scalar_adr    [9][0][3] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1320) comb block-----//
    //s = 10; r = 1; a = 1;
    if (scalar_argAck [10][1][1]) begin
        scalar_argVld [10][1][1] = 0;
        scalar_argAckdone [10][1][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_4_ap_vld_r) begin
        scalar_argVld [10][1][1] = 1;
        scalar_argAckdone [10][1][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][1][1] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv0_y_4_r;
    scalar_adr    [10][1][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1324) comb block-----//
    //s = 11; r = 1; a = 2;
    if (scalar_argAck [11][1][2]) begin
        scalar_argVld [11][1][2] = 0;
        scalar_argAckdone [11][1][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_0_ap_vld_r) begin
        scalar_argVld [11][1][2] = 1;
        scalar_argAckdone [11][1][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][1][2] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_0_r;
    scalar_adr    [11][1][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1326) comb block-----//
    //s = 11; r = 0; a = 3;
    if (scalar_argAck [11][0][3]) begin
        scalar_argVld [11][0][3] = 0;
        scalar_argAckdone [11][0][3] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_1_ap_vld_r) begin
        scalar_argVld [11][0][3] = 1;
        scalar_argAckdone [11][0][3] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][0][3] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_1_r;
    scalar_adr    [11][0][3] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1328) comb block-----//
    //s = 12; r = 0; a = 2;
    if (scalar_argAck [12][0][2]) begin
        scalar_argVld [12][0][2] = 0;
        scalar_argAckdone [12][0][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_2_ap_vld_r) begin
        scalar_argVld [12][0][2] = 1;
        scalar_argAckdone [12][0][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][2] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_2_r;
    scalar_adr    [12][0][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1330) comb block-----//
    //s = 12; r = 1; a = 2;
    if (scalar_argAck [12][1][2]) begin
        scalar_argVld [12][1][2] = 0;
        scalar_argAckdone [12][1][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_3_ap_vld_r) begin
        scalar_argVld [12][1][2] = 1;
        scalar_argAckdone [12][1][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][1][2] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_3_r;
    scalar_adr    [12][1][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1332) comb block-----//
    //s = 13; r = 0; a = 1;
    if (scalar_argAck [13][0][1]) begin
        scalar_argVld [13][0][1] = 0;
        scalar_argAckdone [13][0][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_4_ap_vld_r) begin
        scalar_argVld [13][0][1] = 1;
        scalar_argAckdone [13][0][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][1] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_x_4_r;
    scalar_adr    [13][0][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1336) comb block-----//
    //s = 14; r = 0; a = 2;
    if (scalar_argAck [14][0][2]) begin
        scalar_argVld [14][0][2] = 0;
        scalar_argAckdone [14][0][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_0_ap_vld_r) begin
        scalar_argVld [14][0][2] = 1;
        scalar_argAckdone [14][0][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][0][2] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_0_r;
    scalar_adr    [14][0][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1338) comb block-----//
    //s = 14; r = 1; a = 2;
    if (scalar_argAck [14][1][2]) begin
        scalar_argVld [14][1][2] = 0;
        scalar_argAckdone [14][1][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_1_ap_vld_r) begin
        scalar_argVld [14][1][2] = 1;
        scalar_argAckdone [14][1][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][2] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_1_r;
    scalar_adr    [14][1][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1340) comb block-----//
    //s = 15; r = 0; a = 2;
    if (scalar_argAck [15][0][2]) begin
        scalar_argVld [15][0][2] = 0;
        scalar_argAckdone [15][0][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_2_ap_vld_r) begin
        scalar_argVld [15][0][2] = 1;
        scalar_argAckdone [15][0][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][0][2] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_2_r;
    scalar_adr    [15][0][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1342) comb block-----//
    //s = 15; r = 1; a = 2;
    if (scalar_argAck [15][1][2]) begin
        scalar_argVld [15][1][2] = 0;
        scalar_argAckdone [15][1][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_3_ap_vld_r) begin
        scalar_argVld [15][1][2] = 1;
        scalar_argAckdone [15][1][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][2] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_3_r;
    scalar_adr    [15][1][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1344) comb block-----//
    //s = 16; r = 0; a = 1;
    if (scalar_argAck [16][0][1]) begin
        scalar_argVld [16][0][1] = 0;
        scalar_argAckdone [16][0][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_4_ap_vld_r) begin
        scalar_argVld [16][0][1] = 1;
        scalar_argAckdone [16][0][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][0][1] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_mv1_y_4_r;
    scalar_adr    [16][0][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1348) comb block-----//
    //s = 17; r = 0; a = 1;
    if (scalar_argAck [17][0][1]) begin
        scalar_argVld [17][0][1] = 0;
        scalar_argAckdone [17][0][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_0_ap_vld_r) begin
        scalar_argVld [17][0][1] = 1;
        scalar_argAckdone [17][0][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][0][1] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_0_r;
    scalar_adr    [17][0][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1352) comb block-----//
    //s = 18; r = 0; a = 1;
    if (scalar_argAck [18][0][1]) begin
        scalar_argVld [18][0][1] = 0;
        scalar_argAckdone [18][0][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_1_ap_vld_r) begin
        scalar_argVld [18][0][1] = 1;
        scalar_argAckdone [18][0][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][0][1] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_1_r;
    scalar_adr    [18][0][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1356) comb block-----//
    //s = 19; r = 1; a = 1;
    if (scalar_argAck [19][1][1]) begin
        scalar_argVld [19][1][1] = 0;
        scalar_argAckdone [19][1][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_2_ap_vld_r) begin
        scalar_argVld [19][1][1] = 1;
        scalar_argAckdone [19][1][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][1][1] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_2_r;
    scalar_adr    [19][1][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1360) comb block-----//
    //s = 20; r = 0; a = 2;
    if (scalar_argAck [20][0][2]) begin
        scalar_argVld [20][0][2] = 0;
        scalar_argAckdone [20][0][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_3_ap_vld_r) begin
        scalar_argVld [20][0][2] = 1;
        scalar_argAckdone [20][0][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][0][2] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_3_r;
    scalar_adr    [20][0][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1364) comb block-----//
    //s = 21; r = 0; a = 1;
    if (scalar_argAck [21][0][1]) begin
        scalar_argVld [21][0][1] = 0;
        scalar_argAckdone [21][0][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_4_ap_vld_r) begin
        scalar_argVld [21][0][1] = 1;
        scalar_argAckdone [21][0][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][0][1] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc0_4_r;
    scalar_adr    [21][0][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1368) comb block-----//
    //s = 22; r = 0; a = 1;
    if (scalar_argAck [22][0][1]) begin
        scalar_argVld [22][0][1] = 0;
        scalar_argAckdone [22][0][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_0_ap_vld_r) begin
        scalar_argVld [22][0][1] = 1;
        scalar_argAckdone [22][0][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][0][1] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_0_r;
    scalar_adr    [22][0][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1372) comb block-----//
    //s = 23; r = 0; a = 1;
    if (scalar_argAck [23][0][1]) begin
        scalar_argVld [23][0][1] = 0;
        scalar_argAckdone [23][0][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_1_ap_vld_r) begin
        scalar_argVld [23][0][1] = 1;
        scalar_argAckdone [23][0][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][0][1] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_1_r;
    scalar_adr    [23][0][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1376) comb block-----//
    //s = 24; r = 0; a = 1;
    if (scalar_argAck [24][0][1]) begin
        scalar_argVld [24][0][1] = 0;
        scalar_argAckdone [24][0][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_2_ap_vld_r) begin
        scalar_argVld [24][0][1] = 1;
        scalar_argAckdone [24][0][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][0][1] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_2_r;
    scalar_adr    [24][0][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1380) comb block-----//
    //s = 25; r = 0; a = 1;
    if (scalar_argAck [25][0][1]) begin
        scalar_argVld [25][0][1] = 0;
        scalar_argAckdone [25][0][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_3_ap_vld_r) begin
        scalar_argVld [25][0][1] = 1;
        scalar_argAckdone [25][0][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][0][1] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_3_r;
    scalar_adr    [25][0][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1384) comb block-----//
    //s = 26; r = 0; a = 1;
    if (scalar_argAck [26][0][1]) begin
        scalar_argVld [26][0][1] = 0;
        scalar_argAckdone [26][0][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_4_ap_vld_r) begin
        scalar_argVld [26][0][1] = 1;
        scalar_argAckdone [26][0][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][0][1] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_poc1_4_r;
    scalar_adr    [26][0][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1388) comb block-----//
    //s = 27; r = 0; a = 4;
    if (scalar_argAck [27][0][4]) begin
        scalar_argVld [27][0][4] = 0;
        scalar_argAckdone [27][0][4] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_0_ap_vld_r) begin
        scalar_argVld [27][0][4] = 1;
        scalar_argAckdone [27][0][4] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][4] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_0_r;
    scalar_adr    [27][0][4] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1389) comb block-----//
    //s = 27; r = 1; a = 4;
    if (scalar_argAck [27][1][4]) begin
        scalar_argVld [27][1][4] = 0;
        scalar_argAckdone [27][1][4] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_1_ap_vld_r) begin
        scalar_argVld [27][1][4] = 1;
        scalar_argAckdone [27][1][4] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][1][4] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_1_r;
    scalar_adr    [27][1][4] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1390) comb block-----//
    //s = 27; r = 0; a = 5;
    if (scalar_argAck [27][0][5]) begin
        scalar_argVld [27][0][5] = 0;
        scalar_argAckdone [27][0][5] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_2_ap_vld_r) begin
        scalar_argVld [27][0][5] = 1;
        scalar_argAckdone [27][0][5] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][5] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_2_r;
    scalar_adr    [27][0][5] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1391) comb block-----//
    //s = 27; r = 1; a = 5;
    if (scalar_argAck [27][1][5]) begin
        scalar_argVld [27][1][5] = 0;
        scalar_argAckdone [27][1][5] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_3_ap_vld_r) begin
        scalar_argVld [27][1][5] = 1;
        scalar_argAckdone [27][1][5] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][1][5] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_3_r;
    scalar_adr    [27][1][5] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1392) comb block-----//
    //s = 28; r = 1; a = 1;
    if (scalar_argAck [28][1][1]) begin
        scalar_argVld [28][1][1] = 0;
        scalar_argAckdone [28][1][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_4_ap_vld_r) begin
        scalar_argVld [28][1][1] = 1;
        scalar_argAckdone [28][1][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][1][1] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx0_4_r;
    scalar_adr    [28][1][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1396) comb block-----//
    //s = 29; r = 1; a = 4;
    if (scalar_argAck [29][1][4]) begin
        scalar_argVld [29][1][4] = 0;
        scalar_argAckdone [29][1][4] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_0_ap_vld_r) begin
        scalar_argVld [29][1][4] = 1;
        scalar_argAckdone [29][1][4] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][4] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_0_r;
    scalar_adr    [29][1][4] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1397) comb block-----//
    //s = 29; r = 0; a = 5;
    if (scalar_argAck [29][0][5]) begin
        scalar_argVld [29][0][5] = 0;
        scalar_argAckdone [29][0][5] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_1_ap_vld_r) begin
        scalar_argVld [29][0][5] = 1;
        scalar_argAckdone [29][0][5] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][5] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_1_r;
    scalar_adr    [29][0][5] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1398) comb block-----//
    //s = 29; r = 1; a = 5;
    if (scalar_argAck [29][1][5]) begin
        scalar_argVld [29][1][5] = 0;
        scalar_argAckdone [29][1][5] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_2_ap_vld_r) begin
        scalar_argVld [29][1][5] = 1;
        scalar_argAckdone [29][1][5] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][1][5] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_2_r;
    scalar_adr    [29][1][5] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1399) comb block-----//
    //s = 29; r = 0; a = 6;
    if (scalar_argAck [29][0][6]) begin
        scalar_argVld [29][0][6] = 0;
        scalar_argAckdone [29][0][6] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_3_ap_vld_r) begin
        scalar_argVld [29][0][6] = 1;
        scalar_argAckdone [29][0][6] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][6] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_3_r;
    scalar_adr    [29][0][6] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1400) comb block-----//
    //s = 30; r = 0; a = 2;
    if (scalar_argAck [30][0][2]) begin
        scalar_argVld [30][0][2] = 0;
        scalar_argAckdone [30][0][2] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_4_ap_vld_r) begin
        scalar_argVld [30][0][2] = 1;
        scalar_argAckdone [30][0][2] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [30][0][2] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_ref_idx1_4_r;
    scalar_adr    [30][0][2] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1404) comb block-----//
    //s = 31; r = 0; a = 4;
    if (scalar_argAck [31][0][4]) begin
        scalar_argVld [31][0][4] = 0;
        scalar_argAckdone [31][0][4] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_0_ap_vld_r) begin
        scalar_argVld [31][0][4] = 1;
        scalar_argAckdone [31][0][4] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][4] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_0_r;
    scalar_adr    [31][0][4] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1405) comb block-----//
    //s = 31; r = 1; a = 4;
    if (scalar_argAck [31][1][4]) begin
        scalar_argVld [31][1][4] = 0;
        scalar_argAckdone [31][1][4] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_1_ap_vld_r) begin
        scalar_argVld [31][1][4] = 1;
        scalar_argAckdone [31][1][4] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][1][4] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_1_r;
    scalar_adr    [31][1][4] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1406) comb block-----//
    //s = 31; r = 0; a = 5;
    if (scalar_argAck [31][0][5]) begin
        scalar_argVld [31][0][5] = 0;
        scalar_argAckdone [31][0][5] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_2_ap_vld_r) begin
        scalar_argVld [31][0][5] = 1;
        scalar_argAckdone [31][0][5] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][0][5] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_2_r;
    scalar_adr    [31][0][5] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1407) comb block-----//
    //s = 31; r = 1; a = 5;
    if (scalar_argAck [31][1][5]) begin
        scalar_argVld [31][1][5] = 0;
        scalar_argAckdone [31][1][5] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_3_ap_vld_r) begin
        scalar_argVld [31][1][5] = 1;
        scalar_argAckdone [31][1][5] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [31][1][5] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_3_r;
    scalar_adr    [31][1][5] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, complete partition, global adr = 1408) comb block-----//
    //s = 0; r = 0; a = 1;
    if (scalar_argAck [0][0][1]) begin
        scalar_argVld [0][0][1] = 0;
        scalar_argAckdone [0][0][1] = 1;
    end
    if (ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_4_ap_vld_r) begin
        scalar_argVld [0][0][1] = 1;
        scalar_argAckdone [0][0][1] = 0;
        ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [0][0][1] = ff_hevc_luma_mv_merge_mode_hls_mergecand_list_pred_flag_4_r;
    scalar_adr    [0][0][1] = {ap_part_w[ff_hevc_luma_mv_merge_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    ff_hevc_luma_mv_merge_mode_hls_ready = array_argRdy[0][33]& array_argRdy[0][193]& array_argRdy[0][34]& array_argRdy[0][194]& array_argRdy[0][35]& array_argRdy[0][195] & ~ap_arb_reload_running_r[ff_hevc_luma_mv_merge_mode_hls];
    array_ap_ce[0][33] = ap_ce[ff_hevc_luma_mv_merge_mode_hls];
    array_ap_ce[0][193] = ap_ce[ff_hevc_luma_mv_merge_mode_hls];
    array_ap_ce[0][34] = ap_ce[ff_hevc_luma_mv_merge_mode_hls];
    array_ap_ce[0][194] = ap_ce[ff_hevc_luma_mv_merge_mode_hls];
    array_ap_ce[0][35] = ap_ce[ff_hevc_luma_mv_merge_mode_hls];
    array_ap_ce[0][195] = ap_ce[ff_hevc_luma_mv_merge_mode_hls];

    if (ap_arb_ret[ff_hevc_luma_mv_merge_mode_hls] & ~ap_arb_ret_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        ap_arb_ret_running[ff_hevc_luma_mv_merge_mode_hls] = 1;
        ff_hevc_luma_mv_merge_mode_hls_ready = 0;
    end

    scalar_argAckdone_all[ff_hevc_luma_mv_merge_mode_hls] = scalar_argAckdone[1][0][1] &
                                                scalar_argAckdone[20][1][1] &
                                                scalar_argAckdone[8][0][2] &
                                                scalar_argAckdone[9][0][2] &
                                                scalar_argAckdone[10][0][1] &
                                                scalar_argAckdone[11][0][2] &
                                                scalar_argAckdone[19][0][1] &
                                                scalar_argAckdone[5][0][2] &
                                                scalar_argAckdone[5][1][2] &
                                                scalar_argAckdone[6][0][2] &
                                                scalar_argAckdone[6][1][2] &
                                                scalar_argAckdone[7][0][1] &
                                                scalar_argAckdone[8][1][2] &
                                                scalar_argAckdone[8][0][3] &
                                                scalar_argAckdone[9][1][2] &
                                                scalar_argAckdone[9][0][3] &
                                                scalar_argAckdone[10][1][1] &
                                                scalar_argAckdone[11][1][2] &
                                                scalar_argAckdone[11][0][3] &
                                                scalar_argAckdone[12][0][2] &
                                                scalar_argAckdone[12][1][2] &
                                                scalar_argAckdone[13][0][1] &
                                                scalar_argAckdone[14][0][2] &
                                                scalar_argAckdone[14][1][2] &
                                                scalar_argAckdone[15][0][2] &
                                                scalar_argAckdone[15][1][2] &
                                                scalar_argAckdone[16][0][1] &
                                                scalar_argAckdone[17][0][1] &
                                                scalar_argAckdone[18][0][1] &
                                                scalar_argAckdone[19][1][1] &
                                                scalar_argAckdone[20][0][2] &
                                                scalar_argAckdone[21][0][1] &
                                                scalar_argAckdone[22][0][1] &
                                                scalar_argAckdone[23][0][1] &
                                                scalar_argAckdone[24][0][1] &
                                                scalar_argAckdone[25][0][1] &
                                                scalar_argAckdone[26][0][1] &
                                                scalar_argAckdone[27][0][4] &
                                                scalar_argAckdone[27][1][4] &
                                                scalar_argAckdone[27][0][5] &
                                                scalar_argAckdone[27][1][5] &
                                                scalar_argAckdone[28][1][1] &
                                                scalar_argAckdone[29][1][4] &
                                                scalar_argAckdone[29][0][5] &
                                                scalar_argAckdone[29][1][5] &
                                                scalar_argAckdone[29][0][6] &
                                                scalar_argAckdone[30][0][2] &
                                                scalar_argAckdone[31][0][4] &
                                                scalar_argAckdone[31][1][4] &
                                                scalar_argAckdone[31][0][5] &
                                                scalar_argAckdone[31][1][5] &
                                                scalar_argAckdone[0][0][1];
    if (ap_arb_ret_running[ff_hevc_luma_mv_merge_mode_hls] & scalar_argAckdone_all[ff_hevc_luma_mv_merge_mode_hls] &~ ap_arb_reload_running_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        ap_arb_reload[ff_hevc_luma_mv_merge_mode_hls] = 1;
        ap_arb_reload_running[ff_hevc_luma_mv_merge_mode_hls] = 1;
    end

    if (ap_arb_start[ff_hevc_luma_mv_merge_mode_hls] &~ ap_arb_start_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        ap_arb_start_running[ff_hevc_luma_mv_merge_mode_hls] = 1;
    end

    if (ap_arb_start_running[ff_hevc_luma_mv_merge_mode_hls] & ~scalar_writing_600& ~scalar_writing_584& ~scalar_writing_588& ~scalar_writing_580& ~scalar_writing_596& ~scalar_writing_564& ~scalar_writing_132& ~scalar_writing_1220& ~scalar_writing_1224& ~scalar_writing_160& ~scalar_writing_164& ~scalar_writing_1444& ~scalar_writing_544& ~scalar_writing_548& ~scalar_writing_552& ~scalar_writing_556) begin
        ap_arb_start_running[ff_hevc_luma_mv_merge_mode_hls] = 0;
        ap_arb_reload[ff_hevc_luma_mv_merge_mode_hls] = 1;
    end

    scalar_argdone_all[ff_hevc_luma_mv_merge_mode_hls] = scalar_argdone[11][1][13] &
                                                                scalar_argdone[14][0][15] &
                                                                scalar_argdone[3][1][7] &
                                                                scalar_argdone[22][0][13] &
                                                                scalar_argdone[18][1][7] &
                                                                scalar_argdone[19][0][9] &
                                                                scalar_argdone[17][1][9] &
                                                                scalar_argdone[21][0][12] &
                                                                scalar_argdone[17][0][10] &
                                                                scalar_argdone[13][0][11] &
                                                                scalar_argdone[3][0][9] &
                                                                scalar_argdone[4][1][10] &
                                                                scalar_argdone[1][1][11] &
                                                                scalar_argdone[29][0][19] &
                                                                scalar_argdone[6][1][17] &
                                                                scalar_argdone[19][1][9] &
                                                                scalar_argdone[18][0][9] &
                                                                scalar_argdone[17][1][10] &
                                                                scalar_argdone[18][1][8] &
                                                                scalar_argdone[13][1][11] &
                                                                scalar_argdone[11][0][14] &
                                                                scalar_argdone[12][0][15] &
                                                                scalar_argdone[3][1][8] &
                                                                scalar_argdone[4][0][11] &
                                                                scalar_argdone[8][0][18] &
                                                                scalar_argdone[9][0][19] &
                                                                scalar_argdone[2][1][7] &
                                                                scalar_argdone[9][1][19] &
                                                                scalar_argdone[21][1][11] &
                                                                scalar_argdone[8][1][18] &
                                                                scalar_argdone[9][0][20] &
                                                                scalar_argdone[10][0][15] &
                                                                scalar_argdone[11][1][14];

    if (scalar_argdone_all_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        scalar_argdone[11][1][13] = 0;
        scalar_argdone[14][0][15] = 0;
        scalar_argdone[3][1][7] = 0;
        scalar_argdone[22][0][13] = 0;
        scalar_argdone[18][1][7] = 0;
        scalar_argdone[19][0][9] = 0;
        scalar_argdone[17][1][9] = 0;
        scalar_argdone[21][0][12] = 0;
        scalar_argdone[17][0][10] = 0;
        scalar_argdone[13][0][11] = 0;
        scalar_argdone[3][0][9] = 0;
        scalar_argdone[4][1][10] = 0;
        scalar_argdone[1][1][11] = 0;
        scalar_argdone[29][0][19] = 0;
        scalar_argdone[6][1][17] = 0;
        scalar_argdone[19][1][9] = 0;
        scalar_argdone[18][0][9] = 0;
        scalar_argdone[17][1][10] = 0;
        scalar_argdone[18][1][8] = 0;
        scalar_argdone[13][1][11] = 0;
        scalar_argdone[11][0][14] = 0;
        scalar_argdone[12][0][15] = 0;
        scalar_argdone[3][1][8] = 0;
        scalar_argdone[4][0][11] = 0;
        scalar_argdone[8][0][18] = 0;
        scalar_argdone[9][0][19] = 0;
        scalar_argdone[2][1][7] = 0;
        scalar_argdone[9][1][19] = 0;
        scalar_argdone[21][1][11] = 0;
        scalar_argdone[8][1][18] = 0;
        scalar_argdone[9][0][20] = 0;
        scalar_argdone[10][0][15] = 0;
        scalar_argdone[11][1][14] = 0;

        if (ap_arb_start_r[ff_hevc_luma_mv_merge_mode_hls] & ~ap_running_r[ff_hevc_luma_mv_merge_mode_hls]) begin
            ap_start[ff_hevc_luma_mv_merge_mode_hls] = 1;
            ap_running[ff_hevc_luma_mv_merge_mode_hls] = 1;
        end
        else if (ap_arb_ret_running_r[ff_hevc_luma_mv_merge_mode_hls]) begin
            ap_arb_ret_running[ff_hevc_luma_mv_merge_mode_hls] = 0;
            ap_arb_reload_running[ff_hevc_luma_mv_merge_mode_hls] = 0;
        end
    end

    if (ap_start_r[ff_hevc_luma_mv_merge_mode_hls] & ap_ready_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        ap_start[ff_hevc_luma_mv_merge_mode_hls] = 0;
    end

    if (ap_done_r[ff_hevc_luma_mv_merge_mode_hls]) begin
        ap_running[ff_hevc_luma_mv_merge_mode_hls] = 0;
    end
`endif
    //============================================================
    //ff_hevc_luma_mv_mvp_mode_hls       (f = 50)
    //============================================================
`ifdef enable_connect_ff_hevc_luma_mv_mvp_mode_hls
    //------READ (scalar, global adr = 552) comb block-----//
    //s = 10; r = 1; a = 15;
    if (scalar_rdat_vld_r[10][1][15]) begin
        scalar_argdone [10][1][15] = 1;
    end
    scalar_adr[10][1][15] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][15]) begin
        scalar_argVld[10][1][15] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[10][1][15] = 1;
    end

    //------READ (scalar, global adr = 556) comb block-----//
    //s = 11; r = 0; a = 15;
    if (scalar_rdat_vld_r[11][0][15]) begin
        scalar_argdone [11][0][15] = 1;
    end
    scalar_adr[11][0][15] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][15]) begin
        scalar_argVld[11][0][15] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[11][0][15] = 1;
    end

    //------READ (scalar, global adr = 160) comb block-----//
    //s = 8; r = 0; a = 19;
    if (scalar_rdat_vld_r[8][0][19]) begin
        scalar_argdone [8][0][19] = 1;
    end
    scalar_adr[8][0][19] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][19]) begin
        scalar_argVld[8][0][19] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[8][0][19] = 1;
    end

    //------READ (scalar, global adr = 164) comb block-----//
    //s = 9; r = 1; a = 20;
    if (scalar_rdat_vld_r[9][1][20]) begin
        scalar_argdone [9][1][20] = 1;
    end
    scalar_adr[9][1][20] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][20]) begin
        scalar_argVld[9][1][20] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[9][1][20] = 1;
    end

    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 1; a = 15;
    if (scalar_rdat_vld_r[11][1][15]) begin
        scalar_argdone [11][1][15] = 1;
    end
    scalar_adr[11][1][15] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][15]) begin
        scalar_argVld[11][1][15] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[11][1][15] = 1;
    end

    //------READ (scalar, global adr = 1544) comb block-----//
    //s = 2; r = 0; a = 9;
    if (scalar_rdat_vld_r[2][0][9]) begin
        scalar_argdone [2][0][9] = 1;
    end
    scalar_adr[2][0][9] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][9]) begin
        scalar_argVld[2][0][9] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[2][0][9] = 1;
    end

    //------READ (scalar, global adr = 1548) comb block-----//
    //s = 3; r = 0; a = 10;
    if (scalar_rdat_vld_r[3][0][10]) begin
        scalar_argdone [3][0][10] = 1;
    end
    scalar_adr[3][0][10] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][10]) begin
        scalar_argVld[3][0][10] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[3][0][10] = 1;
    end

    //------READ (scalar, global adr = 456) comb block-----//
    //s = 18; r = 0; a = 10;
    if (scalar_rdat_vld_r[18][0][10]) begin
        scalar_argdone [18][0][10] = 1;
    end
    scalar_adr[18][0][10] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][10]) begin
        scalar_argVld[18][0][10] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[18][0][10] = 1;
    end

    //------READ (scalar, global adr = 1444) comb block-----//
    //s = 9; r = 0; a = 21;
    if (scalar_rdat_vld_r[9][0][21]) begin
        scalar_argdone [9][0][21] = 1;
    end
    scalar_adr[9][0][21] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][0][21]) begin
        scalar_argVld[9][0][21] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[9][0][21] = 1;
    end

    //------WRITE (scalar, global adr = 784) comb block-----//
    //s = 4; r = 0; a = 0;
    if (scalar_argAck [4][0][0]) begin
        scalar_argVld [4][0][0] = 0;
        scalar_argAckdone [4][0][0] = 1;
    end
    if (ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_x_ap_vld_r) begin
        scalar_argVld [4][0][0] = 1;
        scalar_argAckdone [4][0][0] = 0;
        ap_part_w[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][0][0] = ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_x_r;
    scalar_adr    [4][0][0] = {ap_part_w[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 788) comb block-----//
    //s = 5; r = 0; a = 3;
    if (scalar_argAck [5][0][3]) begin
        scalar_argVld [5][0][3] = 0;
        scalar_argAckdone [5][0][3] = 1;
    end
    if (ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_y_ap_vld_r) begin
        scalar_argVld [5][0][3] = 1;
        scalar_argAckdone [5][0][3] = 0;
        ap_part_w[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][0][3] = ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_0_y_r;
    scalar_adr    [5][0][3] = {ap_part_w[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 792) comb block-----//
    //s = 6; r = 0; a = 3;
    if (scalar_argAck [6][0][3]) begin
        scalar_argVld [6][0][3] = 0;
        scalar_argAckdone [6][0][3] = 1;
    end
    if (ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_x_ap_vld_r) begin
        scalar_argVld [6][0][3] = 1;
        scalar_argAckdone [6][0][3] = 0;
        ap_part_w[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][3] = ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_x_r;
    scalar_adr    [6][0][3] = {ap_part_w[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 796) comb block-----//
    //s = 7; r = 1; a = 1;
    if (scalar_argAck [7][1][1]) begin
        scalar_argVld [7][1][1] = 0;
        scalar_argAckdone [7][1][1] = 1;
    end
    if (ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_y_ap_vld_r) begin
        scalar_argVld [7][1][1] = 1;
        scalar_argAckdone [7][1][1] = 0;
        ap_part_w[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][1] = ff_hevc_luma_mv_mvp_mode_hls_current_mv_mv_1_y_r;
    scalar_adr    [7][1][1] = {ap_part_w[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 800) comb block-----//
    //s = 8; r = 1; a = 19;
    if (scalar_rdat_vld_r[8][1][19]) begin
        scalar_argdone [8][1][19] = 1;
    end
    scalar_adr[8][1][19] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][1][19]) begin
        scalar_argVld[8][1][19] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[8][1][19] = 1;
    end

    //------READ (scalar, global adr = 804) comb block-----//
    //s = 9; r = 1; a = 21;
    if (scalar_rdat_vld_r[9][1][21]) begin
        scalar_argdone [9][1][21] = 1;
    end
    scalar_adr[9][1][21] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][21]) begin
        scalar_argVld[9][1][21] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[9][1][21] = 1;
    end

    //------READ (scalar, global adr = 808) comb block-----//
    //s = 10; r = 0; a = 16;
    if (scalar_rdat_vld_r[10][0][16]) begin
        scalar_argdone [10][0][16] = 1;
    end
    scalar_adr[10][0][16] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][16]) begin
        scalar_argVld[10][0][16] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[10][0][16] = 1;
    end

    //------READ (scalar, global adr = 812) comb block-----//
    //s = 11; r = 0; a = 16;
    if (scalar_rdat_vld_r[11][0][16]) begin
        scalar_argdone [11][0][16] = 1;
    end
    scalar_adr[11][0][16] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][16]) begin
        scalar_argVld[11][0][16] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[11][0][16] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 1; a = 9;
    if (scalar_rdat_vld_r[3][1][9]) begin
        scalar_argdone [3][1][9] = 1;
    end
    scalar_adr[3][1][9] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][9]) begin
        scalar_argVld[3][1][9] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[3][1][9] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 1; a = 19;
    if (scalar_rdat_vld_r[29][1][19]) begin
        scalar_argdone [29][1][19] = 1;
    end
    scalar_adr[29][1][19] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][19]) begin
        scalar_argVld[29][1][19] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[29][1][19] = 1;
    end

    //------READ (scalar, global adr = 1212) comb block-----//
    //s = 15; r = 0; a = 14;
    if (scalar_rdat_vld_r[15][0][14]) begin
        scalar_argdone [15][0][14] = 1;
    end
    scalar_adr[15][0][14] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][14]) begin
        scalar_argVld[15][0][14] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[15][0][14] = 1;
    end

    //------READ (scalar, global adr = 1216) comb block-----//
    //s = 16; r = 0; a = 9;
    if (scalar_rdat_vld_r[16][0][9]) begin
        scalar_argdone [16][0][9] = 1;
    end
    scalar_adr[16][0][9] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][9]) begin
        scalar_argVld[16][0][9] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[16][0][9] = 1;
    end

    //------READ (scalar, global adr = 888) comb block-----//
    //s = 30; r = 1; a = 6;
    if (scalar_rdat_vld_r[30][1][6]) begin
        scalar_argdone [30][1][6] = 1;
    end
    scalar_adr[30][1][6] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[30][1][6]) begin
        scalar_argVld[30][1][6] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[30][1][6] = 1;
    end

    //------READ (scalar, global adr = 600) comb block-----//
    //s = 22; r = 1; a = 12;
    if (scalar_rdat_vld_r[22][1][12]) begin
        scalar_argdone [22][1][12] = 1;
    end
    scalar_adr[22][1][12] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][12]) begin
        scalar_argVld[22][1][12] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[22][1][12] = 1;
    end

    //------READ (scalar, global adr = 584) comb block-----//
    //s = 18; r = 1; a = 9;
    if (scalar_rdat_vld_r[18][1][9]) begin
        scalar_argdone [18][1][9] = 1;
    end
    scalar_adr[18][1][9] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][9]) begin
        scalar_argVld[18][1][9] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[18][1][9] = 1;
    end

    //------READ (scalar, global adr = 580) comb block-----//
    //s = 17; r = 0; a = 11;
    if (scalar_rdat_vld_r[17][0][11]) begin
        scalar_argdone [17][0][11] = 1;
    end
    scalar_adr[17][0][11] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][11]) begin
        scalar_argVld[17][0][11] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[17][0][11] = 1;
    end

    //------READ (scalar, global adr = 588) comb block-----//
    //s = 19; r = 0; a = 10;
    if (scalar_rdat_vld_r[19][0][10]) begin
        scalar_argdone [19][0][10] = 1;
    end
    scalar_adr[19][0][10] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][10]) begin
        scalar_argVld[19][0][10] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[19][0][10] = 1;
    end

    //------READ (scalar, global adr = 596) comb block-----//
    //s = 21; r = 0; a = 13;
    if (scalar_rdat_vld_r[21][0][13]) begin
        scalar_argdone [21][0][13] = 1;
    end
    scalar_adr[21][0][13] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][13]) begin
        scalar_argVld[21][0][13] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[21][0][13] = 1;
    end

    //------READ (scalar, global adr = 408) comb block-----//
    //s = 6; r = 0; a = 19;
    if (scalar_rdat_vld_r[6][0][19]) begin
        scalar_argdone [6][0][19] = 1;
    end
    scalar_adr[6][0][19] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][19]) begin
        scalar_argVld[6][0][19] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[6][0][19] = 1;
    end

    //------READ (scalar, global adr = 332) comb block-----//
    //s = 19; r = 1; a = 10;
    if (scalar_rdat_vld_r[19][1][10]) begin
        scalar_argdone [19][1][10] = 1;
    end
    scalar_adr[19][1][10] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][10]) begin
        scalar_argVld[19][1][10] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[19][1][10] = 1;
    end

    //------READ (scalar, global adr = 1196) comb block-----//
    //s = 11; r = 1; a = 16;
    if (scalar_rdat_vld_r[11][1][16]) begin
        scalar_argdone [11][1][16] = 1;
    end
    scalar_adr[11][1][16] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][16]) begin
        scalar_argVld[11][1][16] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[11][1][16] = 1;
    end

    //------READ (scalar, global adr = 1200) comb block-----//
    //s = 12; r = 1; a = 14;
    if (scalar_rdat_vld_r[12][1][14]) begin
        scalar_argdone [12][1][14] = 1;
    end
    scalar_adr[12][1][14] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][14]) begin
        scalar_argVld[12][1][14] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[12][1][14] = 1;
    end

    //------READ (scalar, global adr = 1220) comb block-----//
    //s = 17; r = 1; a = 11;
    if (scalar_rdat_vld_r[17][1][11]) begin
        scalar_argdone [17][1][11] = 1;
    end
    scalar_adr[17][1][11] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][11]) begin
        scalar_argVld[17][1][11] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[17][1][11] = 1;
    end

    //------READ (scalar, global adr = 1224) comb block-----//
    //s = 18; r = 0; a = 11;
    if (scalar_rdat_vld_r[18][0][11]) begin
        scalar_argdone [18][0][11] = 1;
    end
    scalar_adr[18][0][11] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][11]) begin
        scalar_argVld[18][0][11] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[18][0][11] = 1;
    end

    //------READ (scalar, global adr = 1204) comb block-----//
    //s = 13; r = 0; a = 12;
    if (scalar_rdat_vld_r[13][0][12]) begin
        scalar_argdone [13][0][12] = 1;
    end
    scalar_adr[13][0][12] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][12]) begin
        scalar_argVld[13][0][12] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[13][0][12] = 1;
    end

    //------READ (scalar, global adr = 1208) comb block-----//
    //s = 14; r = 1; a = 15;
    if (scalar_rdat_vld_r[14][1][15]) begin
        scalar_argdone [14][1][15] = 1;
    end
    scalar_adr[14][1][15] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][15]) begin
        scalar_argVld[14][1][15] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[14][1][15] = 1;
    end

    //------READ (scalar, global adr = 1540) comb block-----//
    //s = 1; r = 0; a = 12;
    if (scalar_rdat_vld_r[1][0][12]) begin
        scalar_argdone [1][0][12] = 1;
    end
    scalar_adr[1][0][12] = {ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[1][0][12]) begin
        scalar_argVld[1][0][12] = 0;
    end
    if (ap_arb_reload_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argVld[1][0][12] = 1;
    end

    //------WRITE (scalar, global adr = 1228) comb block-----//
    //s = 19; r = 0; a = 2;
    if (scalar_argAck [19][0][2]) begin
        scalar_argVld [19][0][2] = 0;
        scalar_argAckdone [19][0][2] = 1;
    end
    if (ff_hevc_luma_mv_mvp_mode_hls_xm_dbg_ap_vld_r) begin
        scalar_argVld [19][0][2] = 1;
        scalar_argAckdone [19][0][2] = 0;
        ap_part_w[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION] = ap_part[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][0][2] = ff_hevc_luma_mv_mvp_mode_hls_xm_dbg_r;
    scalar_adr    [19][0][2] = {ap_part_w[ff_hevc_luma_mv_mvp_mode_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (array range, global adr = 286216, width=32, addr_width=32) -----//
    //s = 0; a = 36;
    array_argVld [0][36] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_isLongTerm_EN_A & (ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_isLongTerm_WEN_A != 0);
    array_adr    [0][36] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_isLongTerm_Addr_A;
    array_wdat   [0][36] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_isLongTerm_Din_A;

    //------READ (array range, global adr = 286216, width=32, addr_width=32) -----//
    //s = 0; a = 196;
    ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_isLongTerm_Dout_A = array_rdat  [0][196];
    //found a write signal pair
    array_argVld [0][196] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_isLongTerm_EN_A & (ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_isLongTerm_WEN_A == 0);
    array_adr    [0][196] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_isLongTerm_Addr_A;

    //------WRITE (array range, global adr = 286220, width=32, addr_width=32) -----//
    //s = 0; a = 37;
    array_argVld [0][37] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_isLongTerm_EN_A & (ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_isLongTerm_WEN_A != 0);
    array_adr    [0][37] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_isLongTerm_Addr_A;
    array_wdat   [0][37] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_isLongTerm_Din_A;

    //------READ (array range, global adr = 286220, width=32, addr_width=32) -----//
    //s = 0; a = 197;
    ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_isLongTerm_Dout_A = array_rdat  [0][197];
    //found a write signal pair
    array_argVld [0][197] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_isLongTerm_EN_A & (ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_isLongTerm_WEN_A == 0);
    array_adr    [0][197] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_isLongTerm_Addr_A;

    //------WRITE (array range, global adr = 286224, width=32, addr_width=32) -----//
    //s = 0; a = 38;
    array_argVld [0][38] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_list_EN_A & (ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_list_WEN_A != 0);
    array_adr    [0][38] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_list_Addr_A;
    array_wdat   [0][38] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_list_Din_A;

    //------READ (array range, global adr = 286224, width=32, addr_width=32) -----//
    //s = 0; a = 198;
    ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_list_Dout_A = array_rdat  [0][198];
    //found a write signal pair
    array_argVld [0][198] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_list_EN_A & (ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_list_WEN_A == 0);
    array_adr    [0][198] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_0_list_Addr_A;

    //------WRITE (array range, global adr = 286228, width=32, addr_width=32) -----//
    //s = 0; a = 39;
    array_argVld [0][39] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_list_EN_A & (ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_list_WEN_A != 0);
    array_adr    [0][39] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_list_Addr_A;
    array_wdat   [0][39] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_list_Din_A;

    //------READ (array range, global adr = 286228, width=32, addr_width=32) -----//
    //s = 0; a = 199;
    ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_list_Dout_A = array_rdat  [0][199];
    //found a write signal pair
    array_argVld [0][199] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_list_EN_A & (ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_list_WEN_A == 0);
    array_adr    [0][199] = ff_hevc_luma_mv_mvp_mode_hls_refPicList_1_list_Addr_A;

    //------WRITE (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 40;
    array_argVld [0][40] = ff_hevc_luma_mv_mvp_mode_hls_tab_mvf_pred_flag_row_EN_A & (ff_hevc_luma_mv_mvp_mode_hls_tab_mvf_pred_flag_row_WEN_A != 0);
    array_adr    [0][40] = ff_hevc_luma_mv_mvp_mode_hls_tab_mvf_pred_flag_row_Addr_A;
    array_wdat   [0][40] = ff_hevc_luma_mv_mvp_mode_hls_tab_mvf_pred_flag_row_Din_A;

    //------READ (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 200;
    ff_hevc_luma_mv_mvp_mode_hls_tab_mvf_pred_flag_row_Dout_A = array_rdat  [0][200];
    //found a write signal pair
    array_argVld [0][200] = ff_hevc_luma_mv_mvp_mode_hls_tab_mvf_pred_flag_row_EN_A & (ff_hevc_luma_mv_mvp_mode_hls_tab_mvf_pred_flag_row_WEN_A == 0);
    array_adr    [0][200] = ff_hevc_luma_mv_mvp_mode_hls_tab_mvf_pred_flag_row_Addr_A;

    ff_hevc_luma_mv_mvp_mode_hls_ready = array_argRdy[0][36]& array_argRdy[0][196]& array_argRdy[0][37]& array_argRdy[0][197]& array_argRdy[0][38]& array_argRdy[0][198]& array_argRdy[0][39]& array_argRdy[0][199]& array_argRdy[0][40]& array_argRdy[0][200] & ~ap_arb_reload_running_r[ff_hevc_luma_mv_mvp_mode_hls];
    array_ap_ce[0][36] = ap_ce[ff_hevc_luma_mv_mvp_mode_hls];
    array_ap_ce[0][196] = ap_ce[ff_hevc_luma_mv_mvp_mode_hls];
    array_ap_ce[0][37] = ap_ce[ff_hevc_luma_mv_mvp_mode_hls];
    array_ap_ce[0][197] = ap_ce[ff_hevc_luma_mv_mvp_mode_hls];
    array_ap_ce[0][38] = ap_ce[ff_hevc_luma_mv_mvp_mode_hls];
    array_ap_ce[0][198] = ap_ce[ff_hevc_luma_mv_mvp_mode_hls];
    array_ap_ce[0][39] = ap_ce[ff_hevc_luma_mv_mvp_mode_hls];
    array_ap_ce[0][199] = ap_ce[ff_hevc_luma_mv_mvp_mode_hls];
    array_ap_ce[0][40] = ap_ce[ff_hevc_luma_mv_mvp_mode_hls];
    array_ap_ce[0][200] = ap_ce[ff_hevc_luma_mv_mvp_mode_hls];

    if (ap_arb_ret[ff_hevc_luma_mv_mvp_mode_hls] & ~ap_arb_ret_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        ap_arb_ret_running[ff_hevc_luma_mv_mvp_mode_hls] = 1;
        ff_hevc_luma_mv_mvp_mode_hls_ready = 0;
    end

    scalar_argAckdone_all[ff_hevc_luma_mv_mvp_mode_hls] = scalar_argAckdone[4][0][0] &
                                                scalar_argAckdone[5][0][3] &
                                                scalar_argAckdone[6][0][3] &
                                                scalar_argAckdone[7][1][1] &
                                                scalar_argAckdone[19][0][2];
    if (ap_arb_ret_running[ff_hevc_luma_mv_mvp_mode_hls] & scalar_argAckdone_all[ff_hevc_luma_mv_mvp_mode_hls] &~ ap_arb_reload_running_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        ap_arb_reload[ff_hevc_luma_mv_mvp_mode_hls] = 1;
        ap_arb_reload_running[ff_hevc_luma_mv_mvp_mode_hls] = 1;
    end

    if (ap_arb_start[ff_hevc_luma_mv_mvp_mode_hls] &~ ap_arb_start_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        ap_arb_start_running[ff_hevc_luma_mv_mvp_mode_hls] = 1;
    end

    if (ap_arb_start_running[ff_hevc_luma_mv_mvp_mode_hls] & ~scalar_writing_552& ~scalar_writing_556& ~scalar_writing_160& ~scalar_writing_164& ~scalar_writing_1444& ~scalar_writing_800& ~scalar_writing_804& ~scalar_writing_808& ~scalar_writing_812& ~scalar_writing_1212& ~scalar_writing_1216& ~scalar_writing_888& ~scalar_writing_600& ~scalar_writing_584& ~scalar_writing_580& ~scalar_writing_588& ~scalar_writing_596& ~scalar_writing_1220& ~scalar_writing_1224) begin
        ap_arb_start_running[ff_hevc_luma_mv_mvp_mode_hls] = 0;
        ap_arb_reload[ff_hevc_luma_mv_mvp_mode_hls] = 1;
    end

    scalar_argdone_all[ff_hevc_luma_mv_mvp_mode_hls] = scalar_argdone[10][1][15] &
                                                                scalar_argdone[11][0][15] &
                                                                scalar_argdone[8][0][19] &
                                                                scalar_argdone[9][1][20] &
                                                                scalar_argdone[11][1][15] &
                                                                scalar_argdone[2][0][9] &
                                                                scalar_argdone[3][0][10] &
                                                                scalar_argdone[18][0][10] &
                                                                scalar_argdone[9][0][21] &
                                                                scalar_argdone[8][1][19] &
                                                                scalar_argdone[9][1][21] &
                                                                scalar_argdone[10][0][16] &
                                                                scalar_argdone[11][0][16] &
                                                                scalar_argdone[3][1][9] &
                                                                scalar_argdone[29][1][19] &
                                                                scalar_argdone[15][0][14] &
                                                                scalar_argdone[16][0][9] &
                                                                scalar_argdone[30][1][6] &
                                                                scalar_argdone[22][1][12] &
                                                                scalar_argdone[18][1][9] &
                                                                scalar_argdone[17][0][11] &
                                                                scalar_argdone[19][0][10] &
                                                                scalar_argdone[21][0][13] &
                                                                scalar_argdone[6][0][19] &
                                                                scalar_argdone[19][1][10] &
                                                                scalar_argdone[11][1][16] &
                                                                scalar_argdone[12][1][14] &
                                                                scalar_argdone[17][1][11] &
                                                                scalar_argdone[18][0][11] &
                                                                scalar_argdone[13][0][12] &
                                                                scalar_argdone[14][1][15] &
                                                                scalar_argdone[1][0][12];

    if (scalar_argdone_all_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        scalar_argdone[10][1][15] = 0;
        scalar_argdone[11][0][15] = 0;
        scalar_argdone[8][0][19] = 0;
        scalar_argdone[9][1][20] = 0;
        scalar_argdone[11][1][15] = 0;
        scalar_argdone[2][0][9] = 0;
        scalar_argdone[3][0][10] = 0;
        scalar_argdone[18][0][10] = 0;
        scalar_argdone[9][0][21] = 0;
        scalar_argdone[8][1][19] = 0;
        scalar_argdone[9][1][21] = 0;
        scalar_argdone[10][0][16] = 0;
        scalar_argdone[11][0][16] = 0;
        scalar_argdone[3][1][9] = 0;
        scalar_argdone[29][1][19] = 0;
        scalar_argdone[15][0][14] = 0;
        scalar_argdone[16][0][9] = 0;
        scalar_argdone[30][1][6] = 0;
        scalar_argdone[22][1][12] = 0;
        scalar_argdone[18][1][9] = 0;
        scalar_argdone[17][0][11] = 0;
        scalar_argdone[19][0][10] = 0;
        scalar_argdone[21][0][13] = 0;
        scalar_argdone[6][0][19] = 0;
        scalar_argdone[19][1][10] = 0;
        scalar_argdone[11][1][16] = 0;
        scalar_argdone[12][1][14] = 0;
        scalar_argdone[17][1][11] = 0;
        scalar_argdone[18][0][11] = 0;
        scalar_argdone[13][0][12] = 0;
        scalar_argdone[14][1][15] = 0;
        scalar_argdone[1][0][12] = 0;

        if (ap_arb_start_r[ff_hevc_luma_mv_mvp_mode_hls] & ~ap_running_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
            ap_start[ff_hevc_luma_mv_mvp_mode_hls] = 1;
            ap_running[ff_hevc_luma_mv_mvp_mode_hls] = 1;
        end
        else if (ap_arb_ret_running_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
            ap_arb_ret_running[ff_hevc_luma_mv_mvp_mode_hls] = 0;
            ap_arb_reload_running[ff_hevc_luma_mv_mvp_mode_hls] = 0;
        end
    end

    if (ap_start_r[ff_hevc_luma_mv_mvp_mode_hls] & ap_ready_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        ap_start[ff_hevc_luma_mv_mvp_mode_hls] = 0;
    end

    if (ap_done_r[ff_hevc_luma_mv_mvp_mode_hls]) begin
        ap_running[ff_hevc_luma_mv_mvp_mode_hls] = 0;
    end
`endif
    //============================================================
    //hls_prediction_unit_hls       (f = 51)
    //============================================================
`ifdef enable_connect_hls_prediction_unit_hls
    //------READ (scalar, global adr = 160) comb block-----//
    //s = 8; r = 0; a = 25;
    if (scalar_rdat_vld_r[8][0][25]) begin
        scalar_argdone [8][0][25] = 1;
    end
    scalar_adr[8][0][25] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[8][0][25]) begin
        scalar_argVld[8][0][25] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[8][0][25] = 1;
    end

    //------READ (scalar, global adr = 164) comb block-----//
    //s = 9; r = 1; a = 26;
    if (scalar_rdat_vld_r[9][1][26]) begin
        scalar_argdone [9][1][26] = 1;
    end
    scalar_adr[9][1][26] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[9][1][26]) begin
        scalar_argVld[9][1][26] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[9][1][26] = 1;
    end

    //------READ (scalar, global adr = 1544) comb block-----//
    //s = 2; r = 0; a = 15;
    if (scalar_rdat_vld_r[2][0][15]) begin
        scalar_argdone [2][0][15] = 1;
    end
    scalar_adr[2][0][15] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][0][15]) begin
        scalar_argVld[2][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[2][0][15] = 1;
    end

    //------READ (scalar, global adr = 44) comb block-----//
    //s = 11; r = 0; a = 26;
    if (scalar_rdat_vld_r[11][0][26]) begin
        scalar_argdone [11][0][26] = 1;
    end
    scalar_adr[11][0][26] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][26]) begin
        scalar_argVld[11][0][26] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[11][0][26] = 1;
    end

    //------READ (scalar, global adr = 396) comb block-----//
    //s = 3; r = 1; a = 12;
    if (scalar_rdat_vld_r[3][1][12]) begin
        scalar_argdone [3][1][12] = 1;
    end
    scalar_adr[3][1][12] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][1][12]) begin
        scalar_argVld[3][1][12] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[3][1][12] = 1;
    end

    //------READ (scalar, global adr = 368) comb block-----//
    //s = 28; r = 0; a = 15;
    if (scalar_rdat_vld_r[28][0][15]) begin
        scalar_argdone [28][0][15] = 1;
    end
    scalar_adr[28][0][15] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][0][15]) begin
        scalar_argVld[28][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[28][0][15] = 1;
    end

    //------READ (scalar, global adr = 392) comb block-----//
    //s = 2; r = 1; a = 14;
    if (scalar_rdat_vld_r[2][1][14]) begin
        scalar_argdone [2][1][14] = 1;
    end
    scalar_adr[2][1][14] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[2][1][14]) begin
        scalar_argVld[2][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[2][1][14] = 1;
    end

    //------WRITE (array range, global adr = 286176, width=8, addr_width=32) -----//
    //s = 0; a = 63;
    array_argVld [0][63] = hls_prediction_unit_hls_skip_flag_EN_A & (hls_prediction_unit_hls_skip_flag_WEN_A != 0);
    array_adr    [0][63] = hls_prediction_unit_hls_skip_flag_Addr_A;
    array_wdat   [0][63] = hls_prediction_unit_hls_skip_flag_Din_A;

    //------READ (array range, global adr = 286176, width=8, addr_width=32) -----//
    //s = 0; a = 223;
    hls_prediction_unit_hls_skip_flag_Dout_A = array_rdat  [0][223];
    //found a write signal pair
    array_argVld [0][223] = hls_prediction_unit_hls_skip_flag_EN_A & (hls_prediction_unit_hls_skip_flag_WEN_A == 0);
    array_adr    [0][223] = hls_prediction_unit_hls_skip_flag_Addr_A;

    //------READ (scalar, global adr = 1552) comb block-----//
    //s = 4; r = 1; a = 14;
    if (scalar_rdat_vld_r[4][1][14]) begin
        scalar_argdone [4][1][14] = 1;
    end
    scalar_adr[4][1][14] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][1][14]) begin
        scalar_argVld[4][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[4][1][14] = 1;
    end

    //------READ (scalar, global adr = 784) comb block-----//
    //s = 4; r = 0; a = 15;
    if (scalar_rdat_vld_r[4][0][15]) begin
        scalar_argdone [4][0][15] = 1;
    end
    scalar_adr[4][0][15] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][0][15]) begin
        scalar_argVld[4][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[4][0][15] = 1;
    end

    //------WRITE (scalar, global adr = 784) comb block-----//
    //s = 4; r = 1; a = 2;
    if (scalar_argAck [4][1][2]) begin
        scalar_argVld [4][1][2] = 0;
        scalar_argAckdone [4][1][2] = 1;
    end
    if (hls_prediction_unit_hls_current_mv_mv_0_x_o_ap_vld_r) begin
        scalar_argVld [4][1][2] = 1;
        scalar_argAckdone [4][1][2] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [4][1][2] = hls_prediction_unit_hls_current_mv_mv_0_x_o_r;
    scalar_adr    [4][1][2] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 788) comb block-----//
    //s = 5; r = 1; a = 19;
    if (scalar_rdat_vld_r[5][1][19]) begin
        scalar_argdone [5][1][19] = 1;
    end
    scalar_adr[5][1][19] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[5][1][19]) begin
        scalar_argVld[5][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[5][1][19] = 1;
    end

    //------WRITE (scalar, global adr = 788) comb block-----//
    //s = 5; r = 1; a = 6;
    if (scalar_argAck [5][1][6]) begin
        scalar_argVld [5][1][6] = 0;
        scalar_argAckdone [5][1][6] = 1;
    end
    if (hls_prediction_unit_hls_current_mv_mv_0_y_o_ap_vld_r) begin
        scalar_argVld [5][1][6] = 1;
        scalar_argAckdone [5][1][6] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [5][1][6] = hls_prediction_unit_hls_current_mv_mv_0_y_o_r;
    scalar_adr    [5][1][6] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 792) comb block-----//
    //s = 6; r = 0; a = 27;
    if (scalar_rdat_vld_r[6][0][27]) begin
        scalar_argdone [6][0][27] = 1;
    end
    scalar_adr[6][0][27] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[6][0][27]) begin
        scalar_argVld[6][0][27] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[6][0][27] = 1;
    end

    //------WRITE (scalar, global adr = 792) comb block-----//
    //s = 6; r = 0; a = 8;
    if (scalar_argAck [6][0][8]) begin
        scalar_argVld [6][0][8] = 0;
        scalar_argAckdone [6][0][8] = 1;
    end
    if (hls_prediction_unit_hls_current_mv_mv_1_x_o_ap_vld_r) begin
        scalar_argVld [6][0][8] = 1;
        scalar_argAckdone [6][0][8] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [6][0][8] = hls_prediction_unit_hls_current_mv_mv_1_x_o_r;
    scalar_adr    [6][0][8] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 796) comb block-----//
    //s = 7; r = 1; a = 19;
    if (scalar_rdat_vld_r[7][1][19]) begin
        scalar_argdone [7][1][19] = 1;
    end
    scalar_adr[7][1][19] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[7][1][19]) begin
        scalar_argVld[7][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[7][1][19] = 1;
    end

    //------WRITE (scalar, global adr = 796) comb block-----//
    //s = 7; r = 0; a = 10;
    if (scalar_argAck [7][0][10]) begin
        scalar_argVld [7][0][10] = 0;
        scalar_argAckdone [7][0][10] = 1;
    end
    if (hls_prediction_unit_hls_current_mv_mv_1_y_o_ap_vld_r) begin
        scalar_argVld [7][0][10] = 1;
        scalar_argAckdone [7][0][10] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][0][10] = hls_prediction_unit_hls_current_mv_mv_1_y_o_r;
    scalar_adr    [7][0][10] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 800) comb block-----//
    //s = 8; r = 0; a = 10;
    if (scalar_argAck [8][0][10]) begin
        scalar_argVld [8][0][10] = 0;
        scalar_argAckdone [8][0][10] = 1;
    end
    if (hls_prediction_unit_hls_current_mv_poc_0_ap_vld_r) begin
        scalar_argVld [8][0][10] = 1;
        scalar_argAckdone [8][0][10] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][0][10] = hls_prediction_unit_hls_current_mv_poc_0_r;
    scalar_adr    [8][0][10] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 804) comb block-----//
    //s = 9; r = 0; a = 10;
    if (scalar_argAck [9][0][10]) begin
        scalar_argVld [9][0][10] = 0;
        scalar_argAckdone [9][0][10] = 1;
    end
    if (hls_prediction_unit_hls_current_mv_poc_1_ap_vld_r) begin
        scalar_argVld [9][0][10] = 1;
        scalar_argAckdone [9][0][10] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][0][10] = hls_prediction_unit_hls_current_mv_poc_1_r;
    scalar_adr    [9][0][10] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 808) comb block-----//
    //s = 10; r = 0; a = 21;
    if (scalar_rdat_vld_r[10][0][21]) begin
        scalar_argdone [10][0][21] = 1;
    end
    scalar_adr[10][0][21] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][0][21]) begin
        scalar_argVld[10][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[10][0][21] = 1;
    end

    //------WRITE (scalar, global adr = 808) comb block-----//
    //s = 10; r = 0; a = 6;
    if (scalar_argAck [10][0][6]) begin
        scalar_argVld [10][0][6] = 0;
        scalar_argAckdone [10][0][6] = 1;
    end
    if (hls_prediction_unit_hls_current_mv_ref_idx_0_o_ap_vld_r) begin
        scalar_argVld [10][0][6] = 1;
        scalar_argAckdone [10][0][6] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [10][0][6] = hls_prediction_unit_hls_current_mv_ref_idx_0_o_r;
    scalar_adr    [10][0][6] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 812) comb block-----//
    //s = 11; r = 1; a = 26;
    if (scalar_rdat_vld_r[11][1][26]) begin
        scalar_argdone [11][1][26] = 1;
    end
    scalar_adr[11][1][26] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][26]) begin
        scalar_argVld[11][1][26] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[11][1][26] = 1;
    end

    //------WRITE (scalar, global adr = 812) comb block-----//
    //s = 11; r = 1; a = 7;
    if (scalar_argAck [11][1][7]) begin
        scalar_argVld [11][1][7] = 0;
        scalar_argAckdone [11][1][7] = 1;
    end
    if (hls_prediction_unit_hls_current_mv_ref_idx_1_o_ap_vld_r) begin
        scalar_argVld [11][1][7] = 1;
        scalar_argAckdone [11][1][7] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [11][1][7] = hls_prediction_unit_hls_current_mv_ref_idx_1_o_r;
    scalar_adr    [11][1][7] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 816) comb block-----//
    //s = 12; r = 1; a = 21;
    if (scalar_rdat_vld_r[12][1][21]) begin
        scalar_argdone [12][1][21] = 1;
    end
    scalar_adr[12][1][21] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][1][21]) begin
        scalar_argVld[12][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[12][1][21] = 1;
    end

    //------WRITE (scalar, global adr = 816) comb block-----//
    //s = 12; r = 0; a = 7;
    if (scalar_argAck [12][0][7]) begin
        scalar_argVld [12][0][7] = 0;
        scalar_argAckdone [12][0][7] = 1;
    end
    if (hls_prediction_unit_hls_current_mv_pred_flag_o_ap_vld_r) begin
        scalar_argVld [12][0][7] = 1;
        scalar_argAckdone [12][0][7] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [12][0][7] = hls_prediction_unit_hls_current_mv_pred_flag_o_r;
    scalar_adr    [12][0][7] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 452) comb block-----//
    //s = 17; r = 1; a = 14;
    if (scalar_rdat_vld_r[17][1][14]) begin
        scalar_argdone [17][1][14] = 1;
    end
    scalar_adr[17][1][14] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][14]) begin
        scalar_argVld[17][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[17][1][14] = 1;
    end

    //------READ (scalar, global adr = 1456) comb block-----//
    //s = 12; r = 0; a = 23;
    if (scalar_rdat_vld_r[12][0][23]) begin
        scalar_argdone [12][0][23] = 1;
    end
    scalar_adr[12][0][23] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[12][0][23]) begin
        scalar_argVld[12][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[12][0][23] = 1;
    end

    //------READ (scalar, global adr = 1460) comb block-----//
    //s = 13; r = 1; a = 21;
    if (scalar_rdat_vld_r[13][1][21]) begin
        scalar_argdone [13][1][21] = 1;
    end
    scalar_adr[13][1][21] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][1][21]) begin
        scalar_argVld[13][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[13][1][21] = 1;
    end

    //------READ (scalar, global adr = 1464) comb block-----//
    //s = 14; r = 1; a = 20;
    if (scalar_rdat_vld_r[14][1][20]) begin
        scalar_argdone [14][1][20] = 1;
    end
    scalar_adr[14][1][20] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][1][20]) begin
        scalar_argVld[14][1][20] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[14][1][20] = 1;
    end

    //------READ (scalar, global adr = 1468) comb block-----//
    //s = 15; r = 1; a = 19;
    if (scalar_rdat_vld_r[15][1][19]) begin
        scalar_argdone [15][1][19] = 1;
    end
    scalar_adr[15][1][19] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][1][19]) begin
        scalar_argVld[15][1][19] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[15][1][19] = 1;
    end

    //------READ (scalar, global adr = 1472) comb block-----//
    //s = 16; r = 0; a = 14;
    if (scalar_rdat_vld_r[16][0][14]) begin
        scalar_argdone [16][0][14] = 1;
    end
    scalar_adr[16][0][14] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][0][14]) begin
        scalar_argVld[16][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[16][0][14] = 1;
    end

    //------READ (scalar, global adr = 1476) comb block-----//
    //s = 17; r = 0; a = 15;
    if (scalar_rdat_vld_r[17][0][15]) begin
        scalar_argdone [17][0][15] = 1;
    end
    scalar_adr[17][0][15] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][0][15]) begin
        scalar_argVld[17][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[17][0][15] = 1;
    end

    //------READ (scalar, global adr = 1480) comb block-----//
    //s = 18; r = 0; a = 12;
    if (scalar_rdat_vld_r[18][0][12]) begin
        scalar_argdone [18][0][12] = 1;
    end
    scalar_adr[18][0][12] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][0][12]) begin
        scalar_argVld[18][0][12] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[18][0][12] = 1;
    end

    //------READ (scalar, global adr = 1484) comb block-----//
    //s = 19; r = 1; a = 14;
    if (scalar_rdat_vld_r[19][1][14]) begin
        scalar_argdone [19][1][14] = 1;
    end
    scalar_adr[19][1][14] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][1][14]) begin
        scalar_argVld[19][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[19][1][14] = 1;
    end

    //------READ (scalar, global adr = 1488) comb block-----//
    //s = 20; r = 1; a = 14;
    if (scalar_rdat_vld_r[20][1][14]) begin
        scalar_argdone [20][1][14] = 1;
    end
    scalar_adr[20][1][14] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][14]) begin
        scalar_argVld[20][1][14] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[20][1][14] = 1;
    end

    //------READ (scalar, global adr = 1492) comb block-----//
    //s = 21; r = 0; a = 14;
    if (scalar_rdat_vld_r[21][0][14]) begin
        scalar_argdone [21][0][14] = 1;
    end
    scalar_adr[21][0][14] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][0][14]) begin
        scalar_argVld[21][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[21][0][14] = 1;
    end

    //------READ (scalar, global adr = 1496) comb block-----//
    //s = 22; r = 0; a = 18;
    if (scalar_rdat_vld_r[22][0][18]) begin
        scalar_argdone [22][0][18] = 1;
    end
    scalar_adr[22][0][18] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][0][18]) begin
        scalar_argVld[22][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[22][0][18] = 1;
    end

    //------READ (scalar, global adr = 1500) comb block-----//
    //s = 23; r = 0; a = 18;
    if (scalar_rdat_vld_r[23][0][18]) begin
        scalar_argdone [23][0][18] = 1;
    end
    scalar_adr[23][0][18] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][0][18]) begin
        scalar_argVld[23][0][18] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[23][0][18] = 1;
    end

    //------WRITE (scalar, global adr = 1444) comb block-----//
    //s = 9; r = 1; a = 10;
    if (scalar_argAck [9][1][10]) begin
        scalar_argVld [9][1][10] = 0;
        scalar_argAckdone [9][1][10] = 1;
    end
    if (hls_prediction_unit_hls_merge_idx_ap_vld_r) begin
        scalar_argVld [9][1][10] = 1;
        scalar_argAckdone [9][1][10] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [9][1][10] = hls_prediction_unit_hls_merge_idx_r;
    scalar_adr    [9][1][10] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 888) comb block-----//
    //s = 30; r = 1; a = 2;
    if (scalar_argAck [30][1][2]) begin
        scalar_argVld [30][1][2] = 0;
        scalar_argAckdone [30][1][2] = 1;
    end
    if (hls_prediction_unit_hls_mvp_lx_flag_ap_vld_r) begin
        scalar_argVld [30][1][2] = 1;
        scalar_argAckdone [30][1][2] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [30][1][2] = hls_prediction_unit_hls_mvp_lx_flag_r;
    scalar_adr    [30][1][2] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1436) comb block-----//
    //s = 7; r = 1; a = 10;
    if (scalar_argAck [7][1][10]) begin
        scalar_argVld [7][1][10] = 0;
        scalar_argAckdone [7][1][10] = 1;
    end
    if (hls_prediction_unit_hls_pu_mvd_x_ap_vld_r) begin
        scalar_argVld [7][1][10] = 1;
        scalar_argAckdone [7][1][10] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [7][1][10] = hls_prediction_unit_hls_pu_mvd_x_r;
    scalar_adr    [7][1][10] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (scalar, global adr = 1440) comb block-----//
    //s = 8; r = 1; a = 10;
    if (scalar_argAck [8][1][10]) begin
        scalar_argVld [8][1][10] = 0;
        scalar_argAckdone [8][1][10] = 1;
    end
    if (hls_prediction_unit_hls_pu_mvd_y_ap_vld_r) begin
        scalar_argVld [8][1][10] = 1;
        scalar_argAckdone [8][1][10] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [8][1][10] = hls_prediction_unit_hls_pu_mvd_y_r;
    scalar_adr    [8][1][10] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 64;
    array_argVld [0][64] = hls_prediction_unit_hls_tab_mvf_pred_flag_row_EN_A & (hls_prediction_unit_hls_tab_mvf_pred_flag_row_WEN_A != 0);
    array_adr    [0][64] = hls_prediction_unit_hls_tab_mvf_pred_flag_row_Addr_A;
    array_wdat   [0][64] = hls_prediction_unit_hls_tab_mvf_pred_flag_row_Din_A;

    //------READ (array range, global adr = 286244, width=32, addr_width=32) -----//
    //s = 0; a = 224;
    hls_prediction_unit_hls_tab_mvf_pred_flag_row_Dout_A = array_rdat  [0][224];
    //found a write signal pair
    array_argVld [0][224] = hls_prediction_unit_hls_tab_mvf_pred_flag_row_EN_A & (hls_prediction_unit_hls_tab_mvf_pred_flag_row_WEN_A == 0);
    array_adr    [0][224] = hls_prediction_unit_hls_tab_mvf_pred_flag_row_Addr_A;

    //------READ (scalar, global adr = 1448) comb block-----//
    //s = 10; r = 1; a = 21;
    if (scalar_rdat_vld_r[10][1][21]) begin
        scalar_argdone [10][1][21] = 1;
    end
    scalar_adr[10][1][21] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[10][1][21]) begin
        scalar_argVld[10][1][21] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[10][1][21] = 1;
    end

    //------READ (scalar, global adr = 1452) comb block-----//
    //s = 11; r = 0; a = 27;
    if (scalar_rdat_vld_r[11][0][27]) begin
        scalar_argdone [11][0][27] = 1;
    end
    scalar_adr[11][0][27] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][0][27]) begin
        scalar_argVld[11][0][27] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[11][0][27] = 1;
    end

    //------READ (scalar, global adr = 372) comb block-----//
    //s = 29; r = 1; a = 22;
    if (scalar_rdat_vld_r[29][1][22]) begin
        scalar_argdone [29][1][22] = 1;
    end
    scalar_adr[29][1][22] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][1][22]) begin
        scalar_argVld[29][1][22] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[29][1][22] = 1;
    end

    //------READ (scalar, global adr = 172) comb block-----//
    //s = 11; r = 1; a = 27;
    if (scalar_rdat_vld_r[11][1][27]) begin
        scalar_argdone [11][1][27] = 1;
    end
    scalar_adr[11][1][27] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[11][1][27]) begin
        scalar_argVld[11][1][27] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[11][1][27] = 1;
    end

    //------WRITE (scalar, global adr = 504) comb block-----//
    //s = 30; r = 0; a = 3;
    if (scalar_argAck [30][0][3]) begin
        scalar_argVld [30][0][3] = 0;
        scalar_argAckdone [30][0][3] = 1;
    end
    if (hls_prediction_unit_hls_merge_flag_ap_vld_r) begin
        scalar_argVld [30][0][3] = 1;
        scalar_argAckdone [30][0][3] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [30][0][3] = hls_prediction_unit_hls_merge_flag_r;
    scalar_adr    [30][0][3] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, global adr = 464) comb block-----//
    //s = 20; r = 0; a = 15;
    if (scalar_rdat_vld_r[20][0][15]) begin
        scalar_argdone [20][0][15] = 1;
    end
    scalar_adr[20][0][15] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][0][15]) begin
        scalar_argVld[20][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[20][0][15] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1292) comb block-----//
    //s = 3; r = 0; a = 14;
    if (scalar_rdat_vld_r[3][0][14]) begin
        scalar_argdone [3][0][14] = 1;
    end
    scalar_adr    [3][0][14] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[3][0][14]) begin
        scalar_argVld [3][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [3][0][14] = 1;
    end

    //------READ (scalar, complete partition, global adr = 1296) comb block-----//
    //s = 4; r = 1; a = 15;
    if (scalar_rdat_vld_r[4][1][15]) begin
        scalar_argdone [4][1][15] = 1;
    end
    scalar_adr    [4][1][15] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[4][1][15]) begin
        scalar_argVld [4][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [4][1][15] = 1;
    end

    //------READ (scalar, complete partition, global adr = 180) comb block-----//
    //s = 13; r = 0; a = 22;
    if (scalar_rdat_vld_r[13][0][22]) begin
        scalar_argdone [13][0][22] = 1;
    end
    scalar_adr    [13][0][22] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[13][0][22]) begin
        scalar_argVld [13][0][22] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [13][0][22] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 180) comb block-----//
    //s = 13; r = 0; a = 6;
    if (scalar_argAck [13][0][6]) begin
        scalar_argVld [13][0][6] = 0;
        scalar_argAckdone [13][0][6] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_0_o_ap_vld_r) begin
        scalar_argVld [13][0][6] = 1;
        scalar_argAckdone [13][0][6] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [13][0][6] = hls_prediction_unit_hls_predColBuf_0_o_r;
    scalar_adr    [13][0][6] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 184) comb block-----//
    //s = 14; r = 0; a = 21;
    if (scalar_rdat_vld_r[14][0][21]) begin
        scalar_argdone [14][0][21] = 1;
    end
    scalar_adr    [14][0][21] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[14][0][21]) begin
        scalar_argVld [14][0][21] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [14][0][21] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 184) comb block-----//
    //s = 14; r = 1; a = 7;
    if (scalar_argAck [14][1][7]) begin
        scalar_argVld [14][1][7] = 0;
        scalar_argAckdone [14][1][7] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_1_o_ap_vld_r) begin
        scalar_argVld [14][1][7] = 1;
        scalar_argAckdone [14][1][7] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [14][1][7] = hls_prediction_unit_hls_predColBuf_1_o_r;
    scalar_adr    [14][1][7] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 188) comb block-----//
    //s = 15; r = 0; a = 20;
    if (scalar_rdat_vld_r[15][0][20]) begin
        scalar_argdone [15][0][20] = 1;
    end
    scalar_adr    [15][0][20] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[15][0][20]) begin
        scalar_argVld [15][0][20] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [15][0][20] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 188) comb block-----//
    //s = 15; r = 1; a = 7;
    if (scalar_argAck [15][1][7]) begin
        scalar_argVld [15][1][7] = 0;
        scalar_argAckdone [15][1][7] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_2_o_ap_vld_r) begin
        scalar_argVld [15][1][7] = 1;
        scalar_argAckdone [15][1][7] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [15][1][7] = hls_prediction_unit_hls_predColBuf_2_o_r;
    scalar_adr    [15][1][7] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 192) comb block-----//
    //s = 16; r = 1; a = 13;
    if (scalar_rdat_vld_r[16][1][13]) begin
        scalar_argdone [16][1][13] = 1;
    end
    scalar_adr    [16][1][13] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[16][1][13]) begin
        scalar_argVld [16][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [16][1][13] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 192) comb block-----//
    //s = 16; r = 0; a = 4;
    if (scalar_argAck [16][0][4]) begin
        scalar_argVld [16][0][4] = 0;
        scalar_argAckdone [16][0][4] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_3_o_ap_vld_r) begin
        scalar_argVld [16][0][4] = 1;
        scalar_argAckdone [16][0][4] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [16][0][4] = hls_prediction_unit_hls_predColBuf_3_o_r;
    scalar_adr    [16][0][4] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 196) comb block-----//
    //s = 17; r = 1; a = 15;
    if (scalar_rdat_vld_r[17][1][15]) begin
        scalar_argdone [17][1][15] = 1;
    end
    scalar_adr    [17][1][15] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[17][1][15]) begin
        scalar_argVld [17][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [17][1][15] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 196) comb block-----//
    //s = 17; r = 1; a = 2;
    if (scalar_argAck [17][1][2]) begin
        scalar_argVld [17][1][2] = 0;
        scalar_argAckdone [17][1][2] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_4_o_ap_vld_r) begin
        scalar_argVld [17][1][2] = 1;
        scalar_argAckdone [17][1][2] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [17][1][2] = hls_prediction_unit_hls_predColBuf_4_o_r;
    scalar_adr    [17][1][2] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 200) comb block-----//
    //s = 18; r = 1; a = 11;
    if (scalar_rdat_vld_r[18][1][11]) begin
        scalar_argdone [18][1][11] = 1;
    end
    scalar_adr    [18][1][11] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[18][1][11]) begin
        scalar_argVld [18][1][11] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [18][1][11] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 200) comb block-----//
    //s = 18; r = 1; a = 2;
    if (scalar_argAck [18][1][2]) begin
        scalar_argVld [18][1][2] = 0;
        scalar_argAckdone [18][1][2] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_5_o_ap_vld_r) begin
        scalar_argVld [18][1][2] = 1;
        scalar_argAckdone [18][1][2] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [18][1][2] = hls_prediction_unit_hls_predColBuf_5_o_r;
    scalar_adr    [18][1][2] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 204) comb block-----//
    //s = 19; r = 0; a = 15;
    if (scalar_rdat_vld_r[19][0][15]) begin
        scalar_argdone [19][0][15] = 1;
    end
    scalar_adr    [19][0][15] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[19][0][15]) begin
        scalar_argVld [19][0][15] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [19][0][15] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 204) comb block-----//
    //s = 19; r = 1; a = 3;
    if (scalar_argAck [19][1][3]) begin
        scalar_argVld [19][1][3] = 0;
        scalar_argAckdone [19][1][3] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_6_o_ap_vld_r) begin
        scalar_argVld [19][1][3] = 1;
        scalar_argAckdone [19][1][3] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [19][1][3] = hls_prediction_unit_hls_predColBuf_6_o_r;
    scalar_adr    [19][1][3] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 208) comb block-----//
    //s = 20; r = 1; a = 15;
    if (scalar_rdat_vld_r[20][1][15]) begin
        scalar_argdone [20][1][15] = 1;
    end
    scalar_adr    [20][1][15] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[20][1][15]) begin
        scalar_argVld [20][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [20][1][15] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 208) comb block-----//
    //s = 20; r = 1; a = 5;
    if (scalar_argAck [20][1][5]) begin
        scalar_argVld [20][1][5] = 0;
        scalar_argAckdone [20][1][5] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_7_o_ap_vld_r) begin
        scalar_argVld [20][1][5] = 1;
        scalar_argAckdone [20][1][5] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [20][1][5] = hls_prediction_unit_hls_predColBuf_7_o_r;
    scalar_adr    [20][1][5] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 212) comb block-----//
    //s = 21; r = 1; a = 13;
    if (scalar_rdat_vld_r[21][1][13]) begin
        scalar_argdone [21][1][13] = 1;
    end
    scalar_adr    [21][1][13] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[21][1][13]) begin
        scalar_argVld [21][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [21][1][13] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 212) comb block-----//
    //s = 21; r = 1; a = 4;
    if (scalar_argAck [21][1][4]) begin
        scalar_argVld [21][1][4] = 0;
        scalar_argAckdone [21][1][4] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_8_o_ap_vld_r) begin
        scalar_argVld [21][1][4] = 1;
        scalar_argAckdone [21][1][4] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [21][1][4] = hls_prediction_unit_hls_predColBuf_8_o_r;
    scalar_adr    [21][1][4] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 216) comb block-----//
    //s = 22; r = 1; a = 17;
    if (scalar_rdat_vld_r[22][1][17]) begin
        scalar_argdone [22][1][17] = 1;
    end
    scalar_adr    [22][1][17] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[22][1][17]) begin
        scalar_argVld [22][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [22][1][17] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 216) comb block-----//
    //s = 22; r = 1; a = 4;
    if (scalar_argAck [22][1][4]) begin
        scalar_argVld [22][1][4] = 0;
        scalar_argAckdone [22][1][4] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_9_o_ap_vld_r) begin
        scalar_argVld [22][1][4] = 1;
        scalar_argAckdone [22][1][4] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [22][1][4] = hls_prediction_unit_hls_predColBuf_9_o_r;
    scalar_adr    [22][1][4] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 220) comb block-----//
    //s = 23; r = 1; a = 17;
    if (scalar_rdat_vld_r[23][1][17]) begin
        scalar_argdone [23][1][17] = 1;
    end
    scalar_adr    [23][1][17] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[23][1][17]) begin
        scalar_argVld [23][1][17] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [23][1][17] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 220) comb block-----//
    //s = 23; r = 1; a = 4;
    if (scalar_argAck [23][1][4]) begin
        scalar_argVld [23][1][4] = 0;
        scalar_argAckdone [23][1][4] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_10_o_ap_vld_r) begin
        scalar_argVld [23][1][4] = 1;
        scalar_argAckdone [23][1][4] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [23][1][4] = hls_prediction_unit_hls_predColBuf_10_o_r;
    scalar_adr    [23][1][4] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 224) comb block-----//
    //s = 24; r = 0; a = 14;
    if (scalar_rdat_vld_r[24][0][14]) begin
        scalar_argdone [24][0][14] = 1;
    end
    scalar_adr    [24][0][14] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][0][14]) begin
        scalar_argVld [24][0][14] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [24][0][14] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 224) comb block-----//
    //s = 24; r = 1; a = 2;
    if (scalar_argAck [24][1][2]) begin
        scalar_argVld [24][1][2] = 0;
        scalar_argAckdone [24][1][2] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_11_o_ap_vld_r) begin
        scalar_argVld [24][1][2] = 1;
        scalar_argAckdone [24][1][2] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [24][1][2] = hls_prediction_unit_hls_predColBuf_11_o_r;
    scalar_adr    [24][1][2] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 228) comb block-----//
    //s = 25; r = 0; a = 10;
    if (scalar_rdat_vld_r[25][0][10]) begin
        scalar_argdone [25][0][10] = 1;
    end
    scalar_adr    [25][0][10] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[25][0][10]) begin
        scalar_argVld [25][0][10] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [25][0][10] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 228) comb block-----//
    //s = 25; r = 1; a = 2;
    if (scalar_argAck [25][1][2]) begin
        scalar_argVld [25][1][2] = 0;
        scalar_argAckdone [25][1][2] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_12_o_ap_vld_r) begin
        scalar_argVld [25][1][2] = 1;
        scalar_argAckdone [25][1][2] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [25][1][2] = hls_prediction_unit_hls_predColBuf_12_o_r;
    scalar_adr    [25][1][2] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 232) comb block-----//
    //s = 26; r = 1; a = 16;
    if (scalar_rdat_vld_r[26][1][16]) begin
        scalar_argdone [26][1][16] = 1;
    end
    scalar_adr    [26][1][16] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[26][1][16]) begin
        scalar_argVld [26][1][16] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [26][1][16] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 232) comb block-----//
    //s = 26; r = 1; a = 2;
    if (scalar_argAck [26][1][2]) begin
        scalar_argVld [26][1][2] = 0;
        scalar_argAckdone [26][1][2] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_13_o_ap_vld_r) begin
        scalar_argVld [26][1][2] = 1;
        scalar_argAckdone [26][1][2] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [26][1][2] = hls_prediction_unit_hls_predColBuf_13_o_r;
    scalar_adr    [26][1][2] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 236) comb block-----//
    //s = 27; r = 1; a = 15;
    if (scalar_rdat_vld_r[27][1][15]) begin
        scalar_argdone [27][1][15] = 1;
    end
    scalar_adr    [27][1][15] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[27][1][15]) begin
        scalar_argVld [27][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [27][1][15] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 236) comb block-----//
    //s = 27; r = 0; a = 7;
    if (scalar_argAck [27][0][7]) begin
        scalar_argVld [27][0][7] = 0;
        scalar_argAckdone [27][0][7] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_14_o_ap_vld_r) begin
        scalar_argVld [27][0][7] = 1;
        scalar_argAckdone [27][0][7] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [27][0][7] = hls_prediction_unit_hls_predColBuf_14_o_r;
    scalar_adr    [27][0][7] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 240) comb block-----//
    //s = 28; r = 1; a = 15;
    if (scalar_rdat_vld_r[28][1][15]) begin
        scalar_argdone [28][1][15] = 1;
    end
    scalar_adr    [28][1][15] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[28][1][15]) begin
        scalar_argVld [28][1][15] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [28][1][15] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 240) comb block-----//
    //s = 28; r = 0; a = 3;
    if (scalar_argAck [28][0][3]) begin
        scalar_argVld [28][0][3] = 0;
        scalar_argAckdone [28][0][3] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_15_o_ap_vld_r) begin
        scalar_argVld [28][0][3] = 1;
        scalar_argAckdone [28][0][3] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [28][0][3] = hls_prediction_unit_hls_predColBuf_15_o_r;
    scalar_adr    [28][0][3] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------READ (scalar, complete partition, global adr = 244) comb block-----//
    //s = 29; r = 0; a = 23;
    if (scalar_rdat_vld_r[29][0][23]) begin
        scalar_argdone [29][0][23] = 1;
    end
    scalar_adr    [29][0][23] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[29][0][23]) begin
        scalar_argVld [29][0][23] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld [29][0][23] = 1;
    end

    //------WRITE (scalar, complete partition, global adr = 244) comb block-----//
    //s = 29; r = 0; a = 7;
    if (scalar_argAck [29][0][7]) begin
        scalar_argVld [29][0][7] = 0;
        scalar_argAckdone [29][0][7] = 1;
    end
    if (hls_prediction_unit_hls_predColBuf_16_o_ap_vld_r) begin
        scalar_argVld [29][0][7] = 1;
        scalar_argAckdone [29][0][7] = 0;
        ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION] = ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION];
    end
    scalar_wdat   [29][0][7] = hls_prediction_unit_hls_predColBuf_16_o_r;
    scalar_adr    [29][0][7] = {ap_part_w[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    //------WRITE (array range, global adr = 286224, width=32, addr_width=32) -----//
    //s = 0; a = 65;
    array_argVld [0][65] = hls_prediction_unit_hls_refPicList_0_list_EN_A & (hls_prediction_unit_hls_refPicList_0_list_WEN_A != 0);
    array_adr    [0][65] = hls_prediction_unit_hls_refPicList_0_list_Addr_A;
    array_wdat   [0][65] = hls_prediction_unit_hls_refPicList_0_list_Din_A;

    //------READ (array range, global adr = 286224, width=32, addr_width=32) -----//
    //s = 0; a = 225;
    hls_prediction_unit_hls_refPicList_0_list_Dout_A = array_rdat  [0][225];
    //found a write signal pair
    array_argVld [0][225] = hls_prediction_unit_hls_refPicList_0_list_EN_A & (hls_prediction_unit_hls_refPicList_0_list_WEN_A == 0);
    array_adr    [0][225] = hls_prediction_unit_hls_refPicList_0_list_Addr_A;

    //------WRITE (array range, global adr = 286228, width=32, addr_width=32) -----//
    //s = 0; a = 66;
    array_argVld [0][66] = hls_prediction_unit_hls_refPicList_1_list_EN_A & (hls_prediction_unit_hls_refPicList_1_list_WEN_A != 0);
    array_adr    [0][66] = hls_prediction_unit_hls_refPicList_1_list_Addr_A;
    array_wdat   [0][66] = hls_prediction_unit_hls_refPicList_1_list_Din_A;

    //------READ (array range, global adr = 286228, width=32, addr_width=32) -----//
    //s = 0; a = 226;
    hls_prediction_unit_hls_refPicList_1_list_Dout_A = array_rdat  [0][226];
    //found a write signal pair
    array_argVld [0][226] = hls_prediction_unit_hls_refPicList_1_list_EN_A & (hls_prediction_unit_hls_refPicList_1_list_WEN_A == 0);
    array_adr    [0][226] = hls_prediction_unit_hls_refPicList_1_list_Addr_A;

    //------WRITE (array range, global adr = 286232, width=32, addr_width=32) -----//
    //s = 0; a = 67;
    array_argVld [0][67] = hls_prediction_unit_hls_refPicList_0_ref_EN_A & (hls_prediction_unit_hls_refPicList_0_ref_WEN_A != 0);
    array_adr    [0][67] = hls_prediction_unit_hls_refPicList_0_ref_Addr_A;
    array_wdat   [0][67] = hls_prediction_unit_hls_refPicList_0_ref_Din_A;

    //------READ (array range, global adr = 286232, width=32, addr_width=32) -----//
    //s = 0; a = 227;
    hls_prediction_unit_hls_refPicList_0_ref_Dout_A = array_rdat  [0][227];
    //found a write signal pair
    array_argVld [0][227] = hls_prediction_unit_hls_refPicList_0_ref_EN_A & (hls_prediction_unit_hls_refPicList_0_ref_WEN_A == 0);
    array_adr    [0][227] = hls_prediction_unit_hls_refPicList_0_ref_Addr_A;

    //------WRITE (array range, global adr = 286236, width=32, addr_width=32) -----//
    //s = 0; a = 68;
    array_argVld [0][68] = hls_prediction_unit_hls_refPicList_1_ref_EN_A & (hls_prediction_unit_hls_refPicList_1_ref_WEN_A != 0);
    array_adr    [0][68] = hls_prediction_unit_hls_refPicList_1_ref_Addr_A;
    array_wdat   [0][68] = hls_prediction_unit_hls_refPicList_1_ref_Din_A;

    //------READ (array range, global adr = 286236, width=32, addr_width=32) -----//
    //s = 0; a = 228;
    hls_prediction_unit_hls_refPicList_1_ref_Dout_A = array_rdat  [0][228];
    //found a write signal pair
    array_argVld [0][228] = hls_prediction_unit_hls_refPicList_1_ref_EN_A & (hls_prediction_unit_hls_refPicList_1_ref_WEN_A == 0);
    array_adr    [0][228] = hls_prediction_unit_hls_refPicList_1_ref_Addr_A;

    //------READ (scalar, global adr = 1504) comb block-----//
    //s = 24; r = 1; a = 13;
    if (scalar_rdat_vld_r[24][1][13]) begin
        scalar_argdone [24][1][13] = 1;
    end
    scalar_adr[24][1][13] = {ap_part[hls_prediction_unit_hls][0+:LOG2_MAX_PARTITION], {SCALAR_PART_BYTE_AW{1'b0}} };

    if (scalar_argAck[24][1][13]) begin
        scalar_argVld[24][1][13] = 0;
    end
    if (ap_arb_reload_r[hls_prediction_unit_hls]) begin
        scalar_argVld[24][1][13] = 1;
    end

    hls_prediction_unit_hls_ready = array_argRdy[0][63]& array_argRdy[0][223]& array_argRdy[0][64]& array_argRdy[0][224]& array_argRdy[0][65]& array_argRdy[0][225]& array_argRdy[0][66]& array_argRdy[0][226]& array_argRdy[0][67]& array_argRdy[0][227]& array_argRdy[0][68]& array_argRdy[0][228] & ~ap_arb_reload_running_r[hls_prediction_unit_hls];
    array_ap_ce[0][63] = ap_ce[hls_prediction_unit_hls];
    array_ap_ce[0][223] = ap_ce[hls_prediction_unit_hls];
    array_ap_ce[0][64] = ap_ce[hls_prediction_unit_hls];
    array_ap_ce[0][224] = ap_ce[hls_prediction_unit_hls];
    array_ap_ce[0][65] = ap_ce[hls_prediction_unit_hls];
    array_ap_ce[0][225] = ap_ce[hls_prediction_unit_hls];
    array_ap_ce[0][66] = ap_ce[hls_prediction_unit_hls];
    array_ap_ce[0][226] = ap_ce[hls_prediction_unit_hls];
    array_ap_ce[0][67] = ap_ce[hls_prediction_unit_hls];
    array_ap_ce[0][227] = ap_ce[hls_prediction_unit_hls];
    array_ap_ce[0][68] = ap_ce[hls_prediction_unit_hls];
    array_ap_ce[0][228] = ap_ce[hls_prediction_unit_hls];

    if (ap_arb_ret[hls_prediction_unit_hls] & ~ap_arb_ret_r[hls_prediction_unit_hls]) begin
        ap_arb_ret_running[hls_prediction_unit_hls] = 1;
        hls_prediction_unit_hls_ready = 0;
    end

    scalar_argAckdone_all[hls_prediction_unit_hls] = scalar_argAckdone[4][1][2] &
                                                scalar_argAckdone[5][1][6] &
                                                scalar_argAckdone[6][0][8] &
                                                scalar_argAckdone[7][0][10] &
                                                scalar_argAckdone[8][0][10] &
                                                scalar_argAckdone[9][0][10] &
                                                scalar_argAckdone[10][0][6] &
                                                scalar_argAckdone[11][1][7] &
                                                scalar_argAckdone[12][0][7] &
                                                scalar_argAckdone[9][1][10] &
                                                scalar_argAckdone[30][1][2] &
                                                scalar_argAckdone[7][1][10] &
                                                scalar_argAckdone[8][1][10] &
                                                scalar_argAckdone[30][0][3] &
                                                scalar_argAckdone[13][0][6] &
                                                scalar_argAckdone[14][1][7] &
                                                scalar_argAckdone[15][1][7] &
                                                scalar_argAckdone[16][0][4] &
                                                scalar_argAckdone[17][1][2] &
                                                scalar_argAckdone[18][1][2] &
                                                scalar_argAckdone[19][1][3] &
                                                scalar_argAckdone[20][1][5] &
                                                scalar_argAckdone[21][1][4] &
                                                scalar_argAckdone[22][1][4] &
                                                scalar_argAckdone[23][1][4] &
                                                scalar_argAckdone[24][1][2] &
                                                scalar_argAckdone[25][1][2] &
                                                scalar_argAckdone[26][1][2] &
                                                scalar_argAckdone[27][0][7] &
                                                scalar_argAckdone[28][0][3] &
                                                scalar_argAckdone[29][0][7];
    if (ap_arb_ret_running[hls_prediction_unit_hls] & scalar_argAckdone_all[hls_prediction_unit_hls] &~ ap_arb_reload_running_r[hls_prediction_unit_hls]) begin
        ap_arb_reload[hls_prediction_unit_hls] = 1;
        ap_arb_reload_running[hls_prediction_unit_hls] = 1;
    end

    if (ap_arb_start[hls_prediction_unit_hls] &~ ap_arb_start_r[hls_prediction_unit_hls]) begin
        ap_arb_start_running[hls_prediction_unit_hls] = 1;
    end

    if (ap_arb_start_running[hls_prediction_unit_hls] & ~scalar_writing_160& ~scalar_writing_164& ~scalar_writing_44& ~scalar_writing_784& ~scalar_writing_788& ~scalar_writing_792& ~scalar_writing_796& ~scalar_writing_808& ~scalar_writing_812& ~scalar_writing_816& ~scalar_writing_464& ~scalar_writing_180& ~scalar_writing_184& ~scalar_writing_188& ~scalar_writing_192& ~scalar_writing_196& ~scalar_writing_200& ~scalar_writing_204& ~scalar_writing_208& ~scalar_writing_212& ~scalar_writing_216& ~scalar_writing_220& ~scalar_writing_224& ~scalar_writing_228& ~scalar_writing_232& ~scalar_writing_236& ~scalar_writing_240& ~scalar_writing_244) begin
        ap_arb_start_running[hls_prediction_unit_hls] = 0;
        ap_arb_reload[hls_prediction_unit_hls] = 1;
    end

    scalar_argdone_all[hls_prediction_unit_hls] = scalar_argdone[8][0][25] &
                                                                scalar_argdone[9][1][26] &
                                                                scalar_argdone[2][0][15] &
                                                                scalar_argdone[11][0][26] &
                                                                scalar_argdone[3][1][12] &
                                                                scalar_argdone[28][0][15] &
                                                                scalar_argdone[2][1][14] &
                                                                scalar_argdone[4][1][14] &
                                                                scalar_argdone[4][0][15] &
                                                                scalar_argdone[5][1][19] &
                                                                scalar_argdone[6][0][27] &
                                                                scalar_argdone[7][1][19] &
                                                                scalar_argdone[10][0][21] &
                                                                scalar_argdone[11][1][26] &
                                                                scalar_argdone[12][1][21] &
                                                                scalar_argdone[17][1][14] &
                                                                scalar_argdone[12][0][23] &
                                                                scalar_argdone[13][1][21] &
                                                                scalar_argdone[14][1][20] &
                                                                scalar_argdone[15][1][19] &
                                                                scalar_argdone[16][0][14] &
                                                                scalar_argdone[17][0][15] &
                                                                scalar_argdone[18][0][12] &
                                                                scalar_argdone[19][1][14] &
                                                                scalar_argdone[20][1][14] &
                                                                scalar_argdone[21][0][14] &
                                                                scalar_argdone[22][0][18] &
                                                                scalar_argdone[23][0][18] &
                                                                scalar_argdone[10][1][21] &
                                                                scalar_argdone[11][0][27] &
                                                                scalar_argdone[29][1][22] &
                                                                scalar_argdone[11][1][27] &
                                                                scalar_argdone[20][0][15] &
                                                                scalar_argdone[3][0][14] &
                                                                scalar_argdone[4][1][15] &
                                                                scalar_argdone[13][0][22] &
                                                                scalar_argdone[14][0][21] &
                                                                scalar_argdone[15][0][20] &
                                                                scalar_argdone[16][1][13] &
                                                                scalar_argdone[17][1][15] &
                                                                scalar_argdone[18][1][11] &
                                                                scalar_argdone[19][0][15] &
                                                                scalar_argdone[20][1][15] &
                                                                scalar_argdone[21][1][13] &
                                                                scalar_argdone[22][1][17] &
                                                                scalar_argdone[23][1][17] &
                                                                scalar_argdone[24][0][14] &
                                                                scalar_argdone[25][0][10] &
                                                                scalar_argdone[26][1][16] &
                                                                scalar_argdone[27][1][15] &
                                                                scalar_argdone[28][1][15] &
                                                                scalar_argdone[29][0][23] &
                                                                scalar_argdone[24][1][13];

    if (scalar_argdone_all_r[hls_prediction_unit_hls]) begin
        scalar_argdone[8][0][25] = 0;
        scalar_argdone[9][1][26] = 0;
        scalar_argdone[2][0][15] = 0;
        scalar_argdone[11][0][26] = 0;
        scalar_argdone[3][1][12] = 0;
        scalar_argdone[28][0][15] = 0;
        scalar_argdone[2][1][14] = 0;
        scalar_argdone[4][1][14] = 0;
        scalar_argdone[4][0][15] = 0;
        scalar_argdone[5][1][19] = 0;
        scalar_argdone[6][0][27] = 0;
        scalar_argdone[7][1][19] = 0;
        scalar_argdone[10][0][21] = 0;
        scalar_argdone[11][1][26] = 0;
        scalar_argdone[12][1][21] = 0;
        scalar_argdone[17][1][14] = 0;
        scalar_argdone[12][0][23] = 0;
        scalar_argdone[13][1][21] = 0;
        scalar_argdone[14][1][20] = 0;
        scalar_argdone[15][1][19] = 0;
        scalar_argdone[16][0][14] = 0;
        scalar_argdone[17][0][15] = 0;
        scalar_argdone[18][0][12] = 0;
        scalar_argdone[19][1][14] = 0;
        scalar_argdone[20][1][14] = 0;
        scalar_argdone[21][0][14] = 0;
        scalar_argdone[22][0][18] = 0;
        scalar_argdone[23][0][18] = 0;
        scalar_argdone[10][1][21] = 0;
        scalar_argdone[11][0][27] = 0;
        scalar_argdone[29][1][22] = 0;
        scalar_argdone[11][1][27] = 0;
        scalar_argdone[20][0][15] = 0;
        scalar_argdone[3][0][14] = 0;
        scalar_argdone[4][1][15] = 0;
        scalar_argdone[13][0][22] = 0;
        scalar_argdone[14][0][21] = 0;
        scalar_argdone[15][0][20] = 0;
        scalar_argdone[16][1][13] = 0;
        scalar_argdone[17][1][15] = 0;
        scalar_argdone[18][1][11] = 0;
        scalar_argdone[19][0][15] = 0;
        scalar_argdone[20][1][15] = 0;
        scalar_argdone[21][1][13] = 0;
        scalar_argdone[22][1][17] = 0;
        scalar_argdone[23][1][17] = 0;
        scalar_argdone[24][0][14] = 0;
        scalar_argdone[25][0][10] = 0;
        scalar_argdone[26][1][16] = 0;
        scalar_argdone[27][1][15] = 0;
        scalar_argdone[28][1][15] = 0;
        scalar_argdone[29][0][23] = 0;
        scalar_argdone[24][1][13] = 0;

        if (ap_arb_start_r[hls_prediction_unit_hls] & ~ap_running_r[hls_prediction_unit_hls]) begin
            ap_start[hls_prediction_unit_hls] = 1;
            ap_running[hls_prediction_unit_hls] = 1;
        end
        else if (ap_arb_ret_running_r[hls_prediction_unit_hls]) begin
            ap_arb_ret_running[hls_prediction_unit_hls] = 0;
            ap_arb_reload_running[hls_prediction_unit_hls] = 0;
        end
    end

    if (ap_start_r[hls_prediction_unit_hls] & ap_ready_r[hls_prediction_unit_hls]) begin
        ap_start[hls_prediction_unit_hls] = 0;
    end

    if (ap_done_r[hls_prediction_unit_hls]) begin
        ap_running[hls_prediction_unit_hls] = 0;
    end
`endif
end

always_comb begin
    scalar_writing_0          = ~scalar_argAckdone[0][1][1]    /*hevc_find_frame_end_hls.state64_0_o*/  |
                                ~scalar_argAckdone[1][1][1]    /*hevc_find_frame_end_hls.state64_1_o*/;

    scalar_writing_8          = ~scalar_argAckdone[2][0][0]    /*hevc_find_frame_end_hls.frame_start_found_o*/;

    scalar_writing_16         = ~scalar_argAckdone[4][0][3]    /*hls_transform_tree_hls.cbf_data*/  |
                                ~scalar_argAckdone[4][1][3]    /*hls_transform_tree_hls_dup1.cbf_data*/  |
                                ~scalar_argAckdone[4][0][4]    /*hls_transform_tree_hls_dup2.cbf_data*/  |
                                ~scalar_argAckdone[4][1][4]    /*hls_transform_tree_hls_dup3.cbf_data*/;

    scalar_writing_20         = ~scalar_argAckdone[5][0][7]    /*hls_transform_tree_hls.cbf_luma_o*/  |
                                ~scalar_argAckdone[5][1][7]    /*hls_transform_tree_hls_dup1.cbf_luma_o*/  |
                                ~scalar_argAckdone[5][0][8]    /*hls_transform_tree_hls_dup2.cbf_luma_o*/  |
                                ~scalar_argAckdone[5][1][8]    /*hls_transform_tree_hls_dup3.cbf_luma_o*/;

    scalar_writing_28         = ~scalar_argAckdone[7][0][4]    /*hls_coding_unit_hls.pcm_flag_o*/  |
                                ~scalar_argAckdone[7][1][5]    /*hls_coding_unit_hls_dup1.pcm_flag_o*/  |
                                ~scalar_argAckdone[7][0][7]    /*hls_coding_unit_hls_dup2.pcm_flag_o*/  |
                                ~scalar_argAckdone[7][1][8]    /*hls_coding_unit_hls_dup3.pcm_flag_o*/;

    scalar_writing_32         = ~scalar_argAckdone[8][0][4]    /*hls_coding_unit_hls.cb_size_o*/  |
                                ~scalar_argAckdone[8][1][5]    /*hls_coding_unit_hls_dup1.cb_size_o*/  |
                                ~scalar_argAckdone[8][0][7]    /*hls_coding_unit_hls_dup2.cb_size_o*/  |
                                ~scalar_argAckdone[8][1][8]    /*hls_coding_unit_hls_dup3.cb_size_o*/;

    scalar_writing_40         = ~scalar_argAckdone[10][1][2]    /*hls_coding_quadtree_hls.qp_block_mask_o*/  |
                                ~scalar_argAckdone[10][1][3]    /*hls_coding_quadtree_hls_dup1.qp_block_mask_o*/  |
                                ~scalar_argAckdone[10][1][4]    /*hls_coding_quadtree_hls_dup2.qp_block_mask_o*/  |
                                ~scalar_argAckdone[10][1][5]    /*hls_coding_quadtree_hls_dup3.qp_block_mask_o*/;

    scalar_writing_44         = ~scalar_argAckdone[11][1][5]    /*hls_coding_unit_hls.idx_o*/  |
                                ~scalar_argAckdone[11][0][6]    /*hls_coding_unit_hls_dup1.idx_o*/  |
                                ~scalar_argAckdone[11][1][6]    /*hls_coding_unit_hls_dup2.idx_o*/  |
                                ~scalar_argAckdone[11][0][7]    /*hls_coding_unit_hls_dup3.idx_o*/;

    scalar_writing_48         = ~scalar_argAckdone[12][1][7]    /*hls_transform_unit_ex_hls.scan_idx_o*/  |
                                ~scalar_argAckdone[12][0][8]    /*hls_transform_unit_ex_hls_dup1.scan_idx_o*/  |
                                ~scalar_argAckdone[12][1][8]    /*hls_transform_unit_ex_hls_dup2.scan_idx_o*/  |
                                ~scalar_argAckdone[12][0][9]    /*hls_transform_unit_ex_hls_dup3.scan_idx_o*/;

    scalar_writing_56         = ~scalar_argAckdone[14][0][8]    /*hls_transform_unit_ex_hls.log2_trafo_size_c_o*/  |
                                ~scalar_argAckdone[14][1][8]    /*hls_transform_unit_ex_hls_dup1.log2_trafo_size_c_o*/  |
                                ~scalar_argAckdone[14][0][9]    /*hls_transform_unit_ex_hls_dup2.log2_trafo_size_c_o*/  |
                                ~scalar_argAckdone[14][1][9]    /*hls_transform_unit_ex_hls_dup3.log2_trafo_size_c_o*/;

    scalar_writing_132        = ~scalar_argAckdone[1][0][0]    /*append_zero_motion_vector_candidates_hls.xm_nb_merge_cand_o*/  |
                                ~scalar_argAckdone[1][1][0]    /*combined_bi_predictive_merge_candidates_hls.xm_nb_merge_cand_o*/  |
                                ~scalar_argAckdone[1][0][1]    /*ff_hevc_luma_mv_merge_mode_hls.xm_nb_merge_cand_o*/;

    scalar_writing_160        = ~scalar_argAckdone[8][0][11]    /*hls_transform_unit_ex_hls.nPbW*/  |
                                ~scalar_argAckdone[8][1][11]    /*hls_transform_unit_ex_hls_dup1.nPbW*/  |
                                ~scalar_argAckdone[8][0][12]    /*hls_transform_unit_ex_hls_dup2.nPbW*/  |
                                ~scalar_argAckdone[8][1][12]    /*hls_transform_unit_ex_hls_dup3.nPbW*/  |
                                ~scalar_argAckdone[8][1][3]    /*ff_hevc_set_neighbour_available_hls.nPbW*/  |
                                ~scalar_argAckdone[8][0][2]    /*ff_hevc_luma_mv_merge_mode_hls.nPbW_o*/;

    scalar_writing_164        = ~scalar_argAckdone[9][0][11]    /*hls_transform_unit_ex_hls.nPbH*/  |
                                ~scalar_argAckdone[9][1][11]    /*hls_transform_unit_ex_hls_dup1.nPbH*/  |
                                ~scalar_argAckdone[9][0][12]    /*hls_transform_unit_ex_hls_dup2.nPbH*/  |
                                ~scalar_argAckdone[9][1][12]    /*hls_transform_unit_ex_hls_dup3.nPbH*/  |
                                ~scalar_argAckdone[9][1][3]    /*ff_hevc_set_neighbour_available_hls.nPbH*/  |
                                ~scalar_argAckdone[9][0][2]    /*ff_hevc_luma_mv_merge_mode_hls.nPbH_o*/;

    scalar_writing_168        = ~scalar_argAckdone[10][1][8]    /*hls_transform_unit_ex_hls.log2_trafo_size*/  |
                                ~scalar_argAckdone[10][0][9]    /*hls_transform_unit_ex_hls_dup1.log2_trafo_size*/  |
                                ~scalar_argAckdone[10][1][9]    /*hls_transform_unit_ex_hls_dup2.log2_trafo_size*/  |
                                ~scalar_argAckdone[10][0][10]    /*hls_transform_unit_ex_hls_dup3.log2_trafo_size*/  |
                                ~scalar_argAckdone[10][1][6]    /*hls_transform_tree_hls.log2_trafo_size*/  |
                                ~scalar_argAckdone[10][0][7]    /*hls_transform_tree_hls_dup1.log2_trafo_size*/  |
                                ~scalar_argAckdone[10][1][7]    /*hls_transform_tree_hls_dup2.log2_trafo_size*/  |
                                ~scalar_argAckdone[10][0][8]    /*hls_transform_tree_hls_dup3.log2_trafo_size*/;

    scalar_writing_180        = ~scalar_argAckdone[13][1][1]    /*genPredCol_hls.predColBuf_0*/  |
                                ~scalar_argAckdone[13][0][10]    /*set_tab_mvf_pred_flag_hls.predColBuf_0_o*/  |
                                ~scalar_argAckdone[13][0][9]    /*intra_prediction_unit_default_value_hls.predColBuf_0_o*/  |
                                ~scalar_argAckdone[13][0][6]    /*hls_prediction_unit_hls.predColBuf_0_o*/;

    scalar_writing_184        = ~scalar_argAckdone[14][0][3]    /*genPredCol_hls.predColBuf_1*/  |
                                ~scalar_argAckdone[14][1][12]    /*set_tab_mvf_pred_flag_hls.predColBuf_1_o*/  |
                                ~scalar_argAckdone[14][1][10]    /*intra_prediction_unit_default_value_hls.predColBuf_1_o*/  |
                                ~scalar_argAckdone[14][1][7]    /*hls_prediction_unit_hls.predColBuf_1_o*/;

    scalar_writing_188        = ~scalar_argAckdone[15][0][3]    /*genPredCol_hls.predColBuf_2*/  |
                                ~scalar_argAckdone[15][1][11]    /*set_tab_mvf_pred_flag_hls.predColBuf_2_o*/  |
                                ~scalar_argAckdone[15][1][8]    /*intra_prediction_unit_default_value_hls.predColBuf_2_o*/  |
                                ~scalar_argAckdone[15][1][7]    /*hls_prediction_unit_hls.predColBuf_2_o*/;

    scalar_writing_192        = ~scalar_argAckdone[16][1][1]    /*genPredCol_hls.predColBuf_3*/  |
                                ~scalar_argAckdone[16][1][7]    /*set_tab_mvf_pred_flag_hls.predColBuf_3_o*/  |
                                ~scalar_argAckdone[16][0][5]    /*intra_prediction_unit_default_value_hls.predColBuf_3_o*/  |
                                ~scalar_argAckdone[16][0][4]    /*hls_prediction_unit_hls.predColBuf_3_o*/;

    scalar_writing_196        = ~scalar_argAckdone[17][0][2]    /*genPredCol_hls.predColBuf_4*/  |
                                ~scalar_argAckdone[17][1][6]    /*set_tab_mvf_pred_flag_hls.predColBuf_4_o*/  |
                                ~scalar_argAckdone[17][1][5]    /*intra_prediction_unit_default_value_hls.predColBuf_4_o*/  |
                                ~scalar_argAckdone[17][1][2]    /*hls_prediction_unit_hls.predColBuf_4_o*/;

    scalar_writing_200        = ~scalar_argAckdone[18][0][2]    /*genPredCol_hls.predColBuf_5*/  |
                                ~scalar_argAckdone[18][0][6]    /*set_tab_mvf_pred_flag_hls.predColBuf_5_o*/  |
                                ~scalar_argAckdone[18][1][5]    /*intra_prediction_unit_default_value_hls.predColBuf_5_o*/  |
                                ~scalar_argAckdone[18][1][2]    /*hls_prediction_unit_hls.predColBuf_5_o*/;

    scalar_writing_204        = ~scalar_argAckdone[19][0][3]    /*genPredCol_hls.predColBuf_6*/  |
                                ~scalar_argAckdone[19][0][7]    /*set_tab_mvf_pred_flag_hls.predColBuf_6_o*/  |
                                ~scalar_argAckdone[19][1][6]    /*intra_prediction_unit_default_value_hls.predColBuf_6_o*/  |
                                ~scalar_argAckdone[19][1][3]    /*hls_prediction_unit_hls.predColBuf_6_o*/;

    scalar_writing_208        = ~scalar_argAckdone[20][0][3]    /*genPredCol_hls.predColBuf_7*/  |
                                ~scalar_argAckdone[20][0][9]    /*set_tab_mvf_pred_flag_hls.predColBuf_7_o*/  |
                                ~scalar_argAckdone[20][1][8]    /*intra_prediction_unit_default_value_hls.predColBuf_7_o*/  |
                                ~scalar_argAckdone[20][1][5]    /*hls_prediction_unit_hls.predColBuf_7_o*/;

    scalar_writing_212        = ~scalar_argAckdone[21][0][2]    /*genPredCol_hls.predColBuf_8*/  |
                                ~scalar_argAckdone[21][1][9]    /*set_tab_mvf_pred_flag_hls.predColBuf_8_o*/  |
                                ~scalar_argAckdone[21][0][9]    /*intra_prediction_unit_default_value_hls.predColBuf_8_o*/  |
                                ~scalar_argAckdone[21][1][4]    /*hls_prediction_unit_hls.predColBuf_8_o*/;

    scalar_writing_216        = ~scalar_argAckdone[22][0][2]    /*genPredCol_hls.predColBuf_9*/  |
                                ~scalar_argAckdone[22][1][9]    /*set_tab_mvf_pred_flag_hls.predColBuf_9_o*/  |
                                ~scalar_argAckdone[22][0][9]    /*intra_prediction_unit_default_value_hls.predColBuf_9_o*/  |
                                ~scalar_argAckdone[22][1][4]    /*hls_prediction_unit_hls.predColBuf_9_o*/;

    scalar_writing_220        = ~scalar_argAckdone[23][1][1]    /*genPredCol_hls.predColBuf_10*/  |
                                ~scalar_argAckdone[23][1][7]    /*set_tab_mvf_pred_flag_hls.predColBuf_10_o*/  |
                                ~scalar_argAckdone[23][0][7]    /*intra_prediction_unit_default_value_hls.predColBuf_10_o*/  |
                                ~scalar_argAckdone[23][1][4]    /*hls_prediction_unit_hls.predColBuf_10_o*/;

    scalar_writing_224        = ~scalar_argAckdone[24][1][1]    /*genPredCol_hls.predColBuf_11*/  |
                                ~scalar_argAckdone[24][1][5]    /*set_tab_mvf_pred_flag_hls.predColBuf_11_o*/  |
                                ~scalar_argAckdone[24][0][5]    /*intra_prediction_unit_default_value_hls.predColBuf_11_o*/  |
                                ~scalar_argAckdone[24][1][2]    /*hls_prediction_unit_hls.predColBuf_11_o*/;

    scalar_writing_228        = ~scalar_argAckdone[25][1][1]    /*genPredCol_hls.predColBuf_12*/  |
                                ~scalar_argAckdone[25][1][5]    /*set_tab_mvf_pred_flag_hls.predColBuf_12_o*/  |
                                ~scalar_argAckdone[25][0][5]    /*intra_prediction_unit_default_value_hls.predColBuf_12_o*/  |
                                ~scalar_argAckdone[25][1][2]    /*hls_prediction_unit_hls.predColBuf_12_o*/;

    scalar_writing_232        = ~scalar_argAckdone[26][1][1]    /*genPredCol_hls.predColBuf_13*/  |
                                ~scalar_argAckdone[26][1][5]    /*set_tab_mvf_pred_flag_hls.predColBuf_13_o*/  |
                                ~scalar_argAckdone[26][0][5]    /*intra_prediction_unit_default_value_hls.predColBuf_13_o*/  |
                                ~scalar_argAckdone[26][1][2]    /*hls_prediction_unit_hls.predColBuf_13_o*/;

    scalar_writing_236        = ~scalar_argAckdone[27][0][6]    /*genPredCol_hls.predColBuf_14*/  |
                                ~scalar_argAckdone[27][0][11]    /*set_tab_mvf_pred_flag_hls.predColBuf_14_o*/  |
                                ~scalar_argAckdone[27][1][10]    /*intra_prediction_unit_default_value_hls.predColBuf_14_o*/  |
                                ~scalar_argAckdone[27][0][7]    /*hls_prediction_unit_hls.predColBuf_14_o*/;

    scalar_writing_240        = ~scalar_argAckdone[28][0][2]    /*genPredCol_hls.predColBuf_15*/  |
                                ~scalar_argAckdone[28][0][6]    /*set_tab_mvf_pred_flag_hls.predColBuf_15_o*/  |
                                ~scalar_argAckdone[28][1][5]    /*intra_prediction_unit_default_value_hls.predColBuf_15_o*/  |
                                ~scalar_argAckdone[28][0][3]    /*hls_prediction_unit_hls.predColBuf_15_o*/;

    scalar_writing_244        = ~scalar_argAckdone[29][1][6]    /*genPredCol_hls.predColBuf_16_o*/  |
                                ~scalar_argAckdone[29][1][12]    /*set_tab_mvf_pred_flag_hls.predColBuf_16_o*/  |
                                ~scalar_argAckdone[29][0][12]    /*intra_prediction_unit_default_value_hls.predColBuf_16_o*/  |
                                ~scalar_argAckdone[29][0][7]    /*hls_prediction_unit_hls.predColBuf_16_o*/;

    scalar_writing_260        = ~scalar_argAckdone[1][0][2]    /*hls_decode_neighbour_hls.slice_or_tiles_left_boundary*/;

    scalar_writing_264        = ~scalar_argAckdone[2][1][0]    /*hls_decode_neighbour_hls.slice_or_tiles_up_boundary*/;

    scalar_writing_292        = ~scalar_argAckdone[9][0][4]    /*hls_coding_quadtree_hls.split_cu_flag_o*/  |
                                ~scalar_argAckdone[9][1][4]    /*hls_coding_quadtree_hls_dup1.split_cu_flag_o*/  |
                                ~scalar_argAckdone[9][0][5]    /*hls_coding_quadtree_hls_dup2.split_cu_flag_o*/  |
                                ~scalar_argAckdone[9][1][5]    /*hls_coding_quadtree_hls_dup3.split_cu_flag_o*/;

    scalar_writing_296        = ~scalar_argAckdone[10][0][2]    /*hls_coding_quadtree_hls.more_data_o*/  |
                                ~scalar_argAckdone[10][0][3]    /*hls_coding_quadtree_hls_dup1.more_data_o*/  |
                                ~scalar_argAckdone[10][0][4]    /*hls_coding_quadtree_hls_dup2.more_data_o*/  |
                                ~scalar_argAckdone[10][0][5]    /*hls_coding_quadtree_hls_dup3.more_data_o*/;

    scalar_writing_300        = ~scalar_argAckdone[11][1][3]    /*hls_coding_quadtree_hls.x1_o*/  |
                                ~scalar_argAckdone[11][0][4]    /*hls_coding_quadtree_hls_dup1.x1_o*/  |
                                ~scalar_argAckdone[11][1][4]    /*hls_coding_quadtree_hls_dup2.x1_o*/  |
                                ~scalar_argAckdone[11][0][5]    /*hls_coding_quadtree_hls_dup3.x1_o*/;

    scalar_writing_304        = ~scalar_argAckdone[12][0][3]    /*hls_coding_quadtree_hls.y1_o*/  |
                                ~scalar_argAckdone[12][1][3]    /*hls_coding_quadtree_hls_dup1.y1_o*/  |
                                ~scalar_argAckdone[12][0][4]    /*hls_coding_quadtree_hls_dup2.y1_o*/  |
                                ~scalar_argAckdone[12][1][4]    /*hls_coding_quadtree_hls_dup3.y1_o*/;

    scalar_writing_308        = ~scalar_argAckdone[13][0][2]    /*hls_coding_quadtree_hls.cb_size_split_o*/  |
                                ~scalar_argAckdone[13][1][2]    /*hls_coding_quadtree_hls_dup1.cb_size_split_o*/  |
                                ~scalar_argAckdone[13][0][3]    /*hls_coding_quadtree_hls_dup2.cb_size_split_o*/  |
                                ~scalar_argAckdone[13][1][3]    /*hls_coding_quadtree_hls_dup3.cb_size_split_o*/;

    scalar_writing_312        = ~scalar_argAckdone[14][1][3]    /*hls_coding_quadtree_hls.log2_cb_size_minus_one_o*/  |
                                ~scalar_argAckdone[14][0][4]    /*hls_coding_quadtree_hls_dup1.log2_cb_size_minus_one_o*/  |
                                ~scalar_argAckdone[14][1][4]    /*hls_coding_quadtree_hls_dup2.log2_cb_size_minus_one_o*/  |
                                ~scalar_argAckdone[14][0][5]    /*hls_coding_quadtree_hls_dup3.log2_cb_size_minus_one_o*/;

    scalar_writing_316        = ~scalar_argAckdone[15][1][3]    /*hls_coding_quadtree_hls.cb_depth_plus_one_o*/  |
                                ~scalar_argAckdone[15][0][4]    /*hls_coding_quadtree_hls_dup1.cb_depth_plus_one_o*/  |
                                ~scalar_argAckdone[15][1][4]    /*hls_coding_quadtree_hls_dup2.cb_depth_plus_one_o*/  |
                                ~scalar_argAckdone[15][0][5]    /*hls_coding_quadtree_hls_dup3.cb_depth_plus_one_o*/;

    scalar_writing_464        = ~scalar_argAckdone[20][1][3]    /*hls_coding_quadtree_hls.depth*/  |
                                ~scalar_argAckdone[20][0][4]    /*hls_coding_quadtree_hls_dup1.depth*/  |
                                ~scalar_argAckdone[20][1][4]    /*hls_coding_quadtree_hls_dup2.depth*/  |
                                ~scalar_argAckdone[20][0][5]    /*hls_coding_quadtree_hls_dup3.depth*/;

    scalar_writing_468        = ~scalar_argAckdone[21][1][5]    /*hls_transform_unit_ex_hls.tu_cu_qp_delta*/  |
                                ~scalar_argAckdone[21][1][6]    /*hls_transform_unit_ex_hls_dup1.tu_cu_qp_delta*/  |
                                ~scalar_argAckdone[21][1][7]    /*hls_transform_unit_ex_hls_dup2.tu_cu_qp_delta*/  |
                                ~scalar_argAckdone[21][1][8]    /*hls_transform_unit_ex_hls_dup3.tu_cu_qp_delta*/  |
                                ~scalar_argAckdone[21][1][2]    /*hls_coding_quadtree_hls.tu_cu_qp_delta*/  |
                                ~scalar_argAckdone[21][0][3]    /*hls_coding_quadtree_hls_dup1.tu_cu_qp_delta*/  |
                                ~scalar_argAckdone[21][1][3]    /*hls_coding_quadtree_hls_dup2.tu_cu_qp_delta*/  |
                                ~scalar_argAckdone[21][0][4]    /*hls_coding_quadtree_hls_dup3.tu_cu_qp_delta*/;

    scalar_writing_472        = ~scalar_argAckdone[22][1][5]    /*hls_transform_unit_ex_hls.tu_is_cu_chroma_qp_offset_coded_o*/  |
                                ~scalar_argAckdone[22][1][6]    /*hls_transform_unit_ex_hls_dup1.tu_is_cu_chroma_qp_offset_coded_o*/  |
                                ~scalar_argAckdone[22][1][7]    /*hls_transform_unit_ex_hls_dup2.tu_is_cu_chroma_qp_offset_coded_o*/  |
                                ~scalar_argAckdone[22][1][8]    /*hls_transform_unit_ex_hls_dup3.tu_is_cu_chroma_qp_offset_coded_o*/  |
                                ~scalar_argAckdone[22][1][2]    /*hls_coding_quadtree_hls.tu_is_cu_chroma_qp_offset_coded*/  |
                                ~scalar_argAckdone[22][0][3]    /*hls_coding_quadtree_hls_dup1.tu_is_cu_chroma_qp_offset_coded*/  |
                                ~scalar_argAckdone[22][1][3]    /*hls_coding_quadtree_hls_dup2.tu_is_cu_chroma_qp_offset_coded*/  |
                                ~scalar_argAckdone[22][0][4]    /*hls_coding_quadtree_hls_dup3.tu_is_cu_chroma_qp_offset_coded*/;

    scalar_writing_476        = ~scalar_argAckdone[23][0][5]    /*hls_transform_unit_ex_hls.tu_is_cu_qp_delta_coded_o*/  |
                                ~scalar_argAckdone[23][1][5]    /*hls_transform_unit_ex_hls_dup1.tu_is_cu_qp_delta_coded_o*/  |
                                ~scalar_argAckdone[23][0][6]    /*hls_transform_unit_ex_hls_dup2.tu_is_cu_qp_delta_coded_o*/  |
                                ~scalar_argAckdone[23][1][6]    /*hls_transform_unit_ex_hls_dup3.tu_is_cu_qp_delta_coded_o*/  |
                                ~scalar_argAckdone[23][0][2]    /*hls_coding_quadtree_hls.tu_is_cu_qp_delta_coded*/  |
                                ~scalar_argAckdone[23][1][2]    /*hls_coding_quadtree_hls_dup1.tu_is_cu_qp_delta_coded*/  |
                                ~scalar_argAckdone[23][0][3]    /*hls_coding_quadtree_hls_dup2.tu_is_cu_qp_delta_coded*/  |
                                ~scalar_argAckdone[23][1][3]    /*hls_coding_quadtree_hls_dup3.tu_is_cu_qp_delta_coded*/;

    scalar_writing_484        = ~scalar_argAckdone[25][0][3]    /*hls_transform_tree_hls.tu_intra_pred_mode*/  |
                                ~scalar_argAckdone[25][1][3]    /*hls_transform_tree_hls_dup1.tu_intra_pred_mode*/  |
                                ~scalar_argAckdone[25][0][4]    /*hls_transform_tree_hls_dup2.tu_intra_pred_mode*/  |
                                ~scalar_argAckdone[25][1][4]    /*hls_transform_tree_hls_dup3.tu_intra_pred_mode*/;

    scalar_writing_488        = ~scalar_argAckdone[26][0][3]    /*hls_transform_tree_hls.tu_intra_pred_mode_c*/  |
                                ~scalar_argAckdone[26][1][3]    /*hls_transform_tree_hls_dup1.tu_intra_pred_mode_c*/  |
                                ~scalar_argAckdone[26][0][4]    /*hls_transform_tree_hls_dup2.tu_intra_pred_mode_c*/  |
                                ~scalar_argAckdone[26][1][4]    /*hls_transform_tree_hls_dup3.tu_intra_pred_mode_c*/;

    scalar_writing_504        = ~scalar_argAckdone[30][0][3]    /*hls_prediction_unit_hls.merge_flag*/;

    scalar_writing_508        = ~scalar_argAckdone[31][1][6]    /*intra_prediction_unit_ex_hls.pu_chroma_mode_c_0*/;

    scalar_writing_509        = ~scalar_argAckdone[31][0][7]    /*intra_prediction_unit_ex_hls.pu_chroma_mode_c_1*/;

    scalar_writing_510        = ~scalar_argAckdone[31][1][7]    /*intra_prediction_unit_ex_hls.pu_chroma_mode_c_2*/;

    scalar_writing_511        = ~scalar_argAckdone[31][0][8]    /*intra_prediction_unit_ex_hls.pu_chroma_mode_c_3*/;

    scalar_writing_512        = ~scalar_argAckdone[0][0][11]    /*intra_prediction_unit_ex_hls.pu_intra_pred_mode_0_o*/  |
                                ~scalar_argAckdone[0][0][2]    /*hls_coding_unit_hls.pu_intra_pred_mode_0*/  |
                                ~scalar_argAckdone[0][0][4]    /*hls_coding_unit_hls_dup1.pu_intra_pred_mode_0*/  |
                                ~scalar_argAckdone[0][0][6]    /*hls_coding_unit_hls_dup2.pu_intra_pred_mode_0*/  |
                                ~scalar_argAckdone[0][0][8]    /*hls_coding_unit_hls_dup3.pu_intra_pred_mode_0*/;

    scalar_writing_513        = ~scalar_argAckdone[0][1][11]    /*intra_prediction_unit_ex_hls.pu_intra_pred_mode_1_o*/  |
                                ~scalar_argAckdone[0][1][2]    /*hls_coding_unit_hls.pu_intra_pred_mode_1*/  |
                                ~scalar_argAckdone[0][1][4]    /*hls_coding_unit_hls_dup1.pu_intra_pred_mode_1*/  |
                                ~scalar_argAckdone[0][1][6]    /*hls_coding_unit_hls_dup2.pu_intra_pred_mode_1*/  |
                                ~scalar_argAckdone[0][1][8]    /*hls_coding_unit_hls_dup3.pu_intra_pred_mode_1*/;

    scalar_writing_514        = ~scalar_argAckdone[0][0][12]    /*intra_prediction_unit_ex_hls.pu_intra_pred_mode_2_o*/  |
                                ~scalar_argAckdone[0][0][3]    /*hls_coding_unit_hls.pu_intra_pred_mode_2*/  |
                                ~scalar_argAckdone[0][0][5]    /*hls_coding_unit_hls_dup1.pu_intra_pred_mode_2*/  |
                                ~scalar_argAckdone[0][0][7]    /*hls_coding_unit_hls_dup2.pu_intra_pred_mode_2*/  |
                                ~scalar_argAckdone[0][0][9]    /*hls_coding_unit_hls_dup3.pu_intra_pred_mode_2*/;

    scalar_writing_515        = ~scalar_argAckdone[0][1][12]    /*intra_prediction_unit_ex_hls.pu_intra_pred_mode_3_o*/  |
                                ~scalar_argAckdone[0][1][3]    /*hls_coding_unit_hls.pu_intra_pred_mode_3*/  |
                                ~scalar_argAckdone[0][1][5]    /*hls_coding_unit_hls_dup1.pu_intra_pred_mode_3*/  |
                                ~scalar_argAckdone[0][1][7]    /*hls_coding_unit_hls_dup2.pu_intra_pred_mode_3*/  |
                                ~scalar_argAckdone[0][1][9]    /*hls_coding_unit_hls_dup3.pu_intra_pred_mode_3*/;

    scalar_writing_516        = ~scalar_argAckdone[1][0][5]    /*intra_prediction_unit_ex_hls.pu_intra_pred_mode_c_0*/;

    scalar_writing_517        = ~scalar_argAckdone[1][1][5]    /*intra_prediction_unit_ex_hls.pu_intra_pred_mode_c_1*/;

    scalar_writing_518        = ~scalar_argAckdone[1][0][6]    /*intra_prediction_unit_ex_hls.pu_intra_pred_mode_c_2*/;

    scalar_writing_519        = ~scalar_argAckdone[1][1][6]    /*intra_prediction_unit_ex_hls.pu_intra_pred_mode_c_3*/;

    scalar_writing_520        = ~scalar_argAckdone[2][1][3]    /*intra_prediction_unit_ex_hls.prev_intra_luma_pred_flag_0_o*/;

    scalar_writing_521        = ~scalar_argAckdone[2][0][4]    /*intra_prediction_unit_ex_hls.prev_intra_luma_pred_flag_1_o*/;

    scalar_writing_522        = ~scalar_argAckdone[2][1][4]    /*intra_prediction_unit_ex_hls.prev_intra_luma_pred_flag_2_o*/;

    scalar_writing_523        = ~scalar_argAckdone[2][0][5]    /*intra_prediction_unit_ex_hls.prev_intra_luma_pred_flag_3_o*/;

    scalar_writing_532        = ~scalar_argAckdone[5][1][9]    /*hls_transform_unit_ex_hls.first_qp_group_o*/  |
                                ~scalar_argAckdone[5][1][10]    /*hls_transform_unit_ex_hls_dup1.first_qp_group_o*/  |
                                ~scalar_argAckdone[5][1][11]    /*hls_transform_unit_ex_hls_dup2.first_qp_group_o*/  |
                                ~scalar_argAckdone[5][1][12]    /*hls_transform_unit_ex_hls_dup3.first_qp_group_o*/  |
                                ~scalar_argAckdone[5][1][3]    /*ff_hevc_set_qPy_hls.first_qp_group_o*/  |
                                ~scalar_argAckdone[5][0][6]    /*hls_decode_neighbour_hls.first_qp_group*/;

    scalar_writing_536        = ~scalar_argAckdone[6][1][8]    /*hls_transform_unit_ex_hls.qp_y_o*/  |
                                ~scalar_argAckdone[6][1][9]    /*hls_transform_unit_ex_hls_dup1.qp_y_o*/  |
                                ~scalar_argAckdone[6][1][10]    /*hls_transform_unit_ex_hls_dup2.qp_y_o*/  |
                                ~scalar_argAckdone[6][1][11]    /*hls_transform_unit_ex_hls_dup3.qp_y_o*/  |
                                ~scalar_argAckdone[6][1][3]    /*ff_hevc_set_qPy_hls.qp_y*/;

    scalar_writing_540        = ~scalar_argAckdone[7][0][2]    /*hls_coding_quadtree_hls.qPy_pred*/  |
                                ~scalar_argAckdone[7][1][2]    /*hls_coding_quadtree_hls_dup1.qPy_pred*/  |
                                ~scalar_argAckdone[7][0][3]    /*hls_coding_quadtree_hls_dup2.qPy_pred*/  |
                                ~scalar_argAckdone[7][1][3]    /*hls_coding_quadtree_hls_dup3.qPy_pred*/  |
                                ~scalar_argAckdone[7][0][5]    /*hls_coding_unit_hls.qPy_pred*/  |
                                ~scalar_argAckdone[7][1][6]    /*hls_coding_unit_hls_dup1.qPy_pred*/  |
                                ~scalar_argAckdone[7][0][8]    /*hls_coding_unit_hls_dup2.qPy_pred*/  |
                                ~scalar_argAckdone[7][1][9]    /*hls_coding_unit_hls_dup3.qPy_pred*/;

    scalar_writing_544        = ~scalar_argAckdone[8][0][5]    /*hls_coding_unit_hls.xm_x*/  |
                                ~scalar_argAckdone[8][1][6]    /*hls_coding_unit_hls_dup1.xm_x*/  |
                                ~scalar_argAckdone[8][0][8]    /*hls_coding_unit_hls_dup2.xm_x*/  |
                                ~scalar_argAckdone[8][1][9]    /*hls_coding_unit_hls_dup3.xm_x*/;

    scalar_writing_548        = ~scalar_argAckdone[9][1][6]    /*hls_coding_unit_hls.xm_y*/  |
                                ~scalar_argAckdone[9][1][7]    /*hls_coding_unit_hls_dup1.xm_y*/  |
                                ~scalar_argAckdone[9][1][8]    /*hls_coding_unit_hls_dup2.xm_y*/  |
                                ~scalar_argAckdone[9][1][9]    /*hls_coding_unit_hls_dup3.xm_y*/;

    scalar_writing_552        = ~scalar_argAckdone[10][0][1]    /*ff_hevc_luma_mv_merge_mode_hls.xm_x0_o*/;

    scalar_writing_556        = ~scalar_argAckdone[11][0][2]    /*ff_hevc_luma_mv_merge_mode_hls.xm_y0_o*/;

    scalar_writing_560        = ~scalar_argAckdone[12][0][5]    /*hls_coding_unit_hls.pred_mode_o*/  |
                                ~scalar_argAckdone[12][1][5]    /*hls_coding_unit_hls_dup1.pred_mode_o*/  |
                                ~scalar_argAckdone[12][0][6]    /*hls_coding_unit_hls_dup2.pred_mode_o*/  |
                                ~scalar_argAckdone[12][1][6]    /*hls_coding_unit_hls_dup3.pred_mode_o*/;

    scalar_writing_564        = ~scalar_argAckdone[13][0][4]    /*hls_coding_unit_hls.part_mode_o*/  |
                                ~scalar_argAckdone[13][1][4]    /*hls_coding_unit_hls_dup1.part_mode_o*/  |
                                ~scalar_argAckdone[13][0][5]    /*hls_coding_unit_hls_dup2.part_mode_o*/  |
                                ~scalar_argAckdone[13][1][5]    /*hls_coding_unit_hls_dup3.part_mode_o*/;

    scalar_writing_568        = ~scalar_argAckdone[14][1][5]    /*hls_coding_unit_hls.intra_split_flag*/  |
                                ~scalar_argAckdone[14][0][6]    /*hls_coding_unit_hls_dup1.intra_split_flag*/  |
                                ~scalar_argAckdone[14][1][6]    /*hls_coding_unit_hls_dup2.intra_split_flag*/  |
                                ~scalar_argAckdone[14][0][7]    /*hls_coding_unit_hls_dup3.intra_split_flag*/;

    scalar_writing_572        = ~scalar_argAckdone[15][1][5]    /*hls_coding_unit_hls.cu_transquant_bypass_flag_o*/  |
                                ~scalar_argAckdone[15][0][6]    /*hls_coding_unit_hls_dup1.cu_transquant_bypass_flag_o*/  |
                                ~scalar_argAckdone[15][1][6]    /*hls_coding_unit_hls_dup2.cu_transquant_bypass_flag_o*/  |
                                ~scalar_argAckdone[15][0][7]    /*hls_coding_unit_hls_dup3.cu_transquant_bypass_flag_o*/;

    scalar_writing_576        = ~scalar_argAckdone[16][1][5]    /*intra_prediction_unit_ex_hls.max_trafo_depth*/  |
                                ~scalar_argAckdone[16][0][2]    /*hls_coding_unit_hls.max_trafo_depth*/  |
                                ~scalar_argAckdone[16][1][2]    /*hls_coding_unit_hls_dup1.max_trafo_depth*/  |
                                ~scalar_argAckdone[16][0][3]    /*hls_coding_unit_hls_dup2.max_trafo_depth*/  |
                                ~scalar_argAckdone[16][1][3]    /*hls_coding_unit_hls_dup3.max_trafo_depth*/;

    scalar_writing_580        = ~scalar_argAckdone[17][0][3]    /*hls_transform_unit_ex_hls.cand_up*/  |
                                ~scalar_argAckdone[17][1][3]    /*hls_transform_unit_ex_hls_dup1.cand_up*/  |
                                ~scalar_argAckdone[17][0][4]    /*hls_transform_unit_ex_hls_dup2.cand_up*/  |
                                ~scalar_argAckdone[17][1][4]    /*hls_transform_unit_ex_hls_dup3.cand_up*/  |
                                ~scalar_argAckdone[17][1][1]    /*ff_hevc_set_neighbour_available_hls.cand_up*/;

    scalar_writing_584        = ~scalar_argAckdone[18][0][3]    /*hls_transform_unit_ex_hls.cand_left*/  |
                                ~scalar_argAckdone[18][1][3]    /*hls_transform_unit_ex_hls_dup1.cand_left*/  |
                                ~scalar_argAckdone[18][0][4]    /*hls_transform_unit_ex_hls_dup2.cand_left*/  |
                                ~scalar_argAckdone[18][1][4]    /*hls_transform_unit_ex_hls_dup3.cand_left*/  |
                                ~scalar_argAckdone[18][1][1]    /*ff_hevc_set_neighbour_available_hls.cand_left*/;

    scalar_writing_588        = ~scalar_argAckdone[19][0][4]    /*hls_transform_unit_ex_hls.cand_up_left*/  |
                                ~scalar_argAckdone[19][1][4]    /*hls_transform_unit_ex_hls_dup1.cand_up_left*/  |
                                ~scalar_argAckdone[19][0][5]    /*hls_transform_unit_ex_hls_dup2.cand_up_left*/  |
                                ~scalar_argAckdone[19][1][5]    /*hls_transform_unit_ex_hls_dup3.cand_up_left*/  |
                                ~scalar_argAckdone[19][1][2]    /*ff_hevc_set_neighbour_available_hls.cand_up_left*/;

    scalar_writing_596        = ~scalar_argAckdone[21][0][5]    /*hls_transform_unit_ex_hls.cand_up_right*/  |
                                ~scalar_argAckdone[21][0][6]    /*hls_transform_unit_ex_hls_dup1.cand_up_right*/  |
                                ~scalar_argAckdone[21][0][7]    /*hls_transform_unit_ex_hls_dup2.cand_up_right*/  |
                                ~scalar_argAckdone[21][0][8]    /*hls_transform_unit_ex_hls_dup3.cand_up_right*/  |
                                ~scalar_argAckdone[21][1][1]    /*ff_hevc_set_neighbour_available_hls.cand_up_right*/;

    scalar_writing_600        = ~scalar_argAckdone[22][0][5]    /*hls_transform_unit_ex_hls.cand_bottom_left_o*/  |
                                ~scalar_argAckdone[22][0][6]    /*hls_transform_unit_ex_hls_dup1.cand_bottom_left_o*/  |
                                ~scalar_argAckdone[22][0][7]    /*hls_transform_unit_ex_hls_dup2.cand_bottom_left_o*/  |
                                ~scalar_argAckdone[22][0][8]    /*hls_transform_unit_ex_hls_dup3.cand_bottom_left_o*/  |
                                ~scalar_argAckdone[22][1][1]    /*ff_hevc_set_neighbour_available_hls.cand_bottom_left*/;

    scalar_writing_604        = ~scalar_argAckdone[23][0][4]    /*hls_decode_neighbour_hls.ctb_up_flag*/;

    scalar_writing_608        = ~scalar_argAckdone[24][0][2]    /*hls_decode_neighbour_hls.ctb_left_flag*/;

    scalar_writing_612        = ~scalar_argAckdone[25][0][2]    /*hls_decode_neighbour_hls.ctb_up_left_flag*/;

    scalar_writing_616        = ~scalar_argAckdone[26][0][2]    /*hls_decode_neighbour_hls.ctb_up_right_flag*/;

    scalar_writing_620        = ~scalar_argAckdone[27][1][6]    /*hls_decode_neighbour_hls.end_of_tiles_x*/;

    scalar_writing_624        = ~scalar_argAckdone[28][1][2]    /*hls_decode_neighbour_hls.end_of_tiles_y*/;

    scalar_writing_628        = ~scalar_argAckdone[29][1][11]    /*innerloop_ff_hevc_extract_rbsp_2_hls.skipped_bytes_o*/;

    scalar_writing_632        = ~scalar_argAckdone[30][1][3]    /*innerloop_ff_hevc_extract_rbsp_2_hls.si_loop_o*/;

    scalar_writing_636        = ~scalar_argAckdone[31][0][6]    /*innerloop_ff_hevc_extract_rbsp_2_hls.di_loop_o*/;

    scalar_writing_640        = ~scalar_argAckdone[0][0][10]    /*innerloop_ff_hevc_extract_rbsp_1_hls.zero_o*/  |
                                ~scalar_argAckdone[0][1][10]    /*innerloop_ff_hevc_extract_rbsp_2_hls.zero_o*/;

    scalar_writing_644        = ~scalar_argAckdone[1][1][4]    /*init_intra_neighbors_hls.numIntraNeighbor*/;

    scalar_writing_648        = ~scalar_argAckdone[2][0][3]    /*init_intra_neighbors_hls.totalUnits*/;

    scalar_writing_652        = ~scalar_argAckdone[3][0][4]    /*init_intra_neighbors_hls.aboveUnits*/;

    scalar_writing_656        = ~scalar_argAckdone[4][0][7]    /*init_intra_neighbors_hls.leftUnits*/;

    scalar_writing_660        = ~scalar_argAckdone[5][0][13]    /*init_intra_neighbors_hls.unitWidth*/;

    scalar_writing_664        = ~scalar_argAckdone[6][1][12]    /*init_intra_neighbors_hls.unitHeight*/;

    scalar_writing_668        = ~scalar_argAckdone[7][0][11]    /*init_intra_neighbors_hls.log2TrSize*/;

    scalar_writing_672        = ~scalar_argAckdone[8][0][13]    /*init_intra_neighbors_hls.bNeighborFlags_0_o*/  |
                                ~scalar_argAckdone[9][0][13]    /*init_intra_neighbors_hls.bNeighborFlags_1_o*/  |
                                ~scalar_argAckdone[10][1][10]    /*init_intra_neighbors_hls.bNeighborFlags_2_o*/;

    scalar_writing_684        = ~scalar_argAckdone[11][0][8]    /*init_intra_neighbors_chroma_hls.numIntraNeighbor_c*/;

    scalar_writing_688        = ~scalar_argAckdone[12][1][9]    /*init_intra_neighbors_chroma_hls.totalUnits_c*/;

    scalar_writing_692        = ~scalar_argAckdone[13][1][8]    /*init_intra_neighbors_chroma_hls.aboveUnits_c*/;

    scalar_writing_696        = ~scalar_argAckdone[14][0][10]    /*init_intra_neighbors_chroma_hls.leftUnits_c*/;

    scalar_writing_700        = ~scalar_argAckdone[15][0][8]    /*init_intra_neighbors_chroma_hls.unitWidth_c*/;

    scalar_writing_704        = ~scalar_argAckdone[16][1][4]    /*init_intra_neighbors_chroma_hls.unitHeight_c*/;

    scalar_writing_708        = ~scalar_argAckdone[17][0][5]    /*init_intra_neighbors_chroma_hls.log2TrSize_c*/;

    scalar_writing_712        = ~scalar_argAckdone[18][0][5]    /*init_intra_neighbors_chroma_hls.bNeighborFlags_c_0_o*/  |
                                ~scalar_argAckdone[19][0][6]    /*init_intra_neighbors_chroma_hls.bNeighborFlags_c_1_o*/  |
                                ~scalar_argAckdone[20][0][8]    /*init_intra_neighbors_chroma_hls.bNeighborFlags_c_2_o*/;

    scalar_writing_784        = ~scalar_argAckdone[4][1][7]    /*merge_mode_exit_hls.current_mv_mv_0_x*/  |
                                ~scalar_argAckdone[4][0][0]    /*ff_hevc_luma_mv_mvp_mode_hls.current_mv_mv_0_x*/  |
                                ~scalar_argAckdone[4][1][2]    /*hls_prediction_unit_hls.current_mv_mv_0_x_o*/;

    scalar_writing_788        = ~scalar_argAckdone[5][1][13]    /*merge_mode_exit_hls.current_mv_mv_0_y*/  |
                                ~scalar_argAckdone[5][0][3]    /*ff_hevc_luma_mv_mvp_mode_hls.current_mv_mv_0_y*/  |
                                ~scalar_argAckdone[5][1][6]    /*hls_prediction_unit_hls.current_mv_mv_0_y_o*/;

    scalar_writing_792        = ~scalar_argAckdone[6][0][13]    /*merge_mode_exit_hls.current_mv_mv_1_x*/  |
                                ~scalar_argAckdone[6][0][3]    /*ff_hevc_luma_mv_mvp_mode_hls.current_mv_mv_1_x*/  |
                                ~scalar_argAckdone[6][0][8]    /*hls_prediction_unit_hls.current_mv_mv_1_x_o*/;

    scalar_writing_796        = ~scalar_argAckdone[7][1][11]    /*merge_mode_exit_hls.current_mv_mv_1_y*/  |
                                ~scalar_argAckdone[7][1][1]    /*ff_hevc_luma_mv_mvp_mode_hls.current_mv_mv_1_y*/  |
                                ~scalar_argAckdone[7][0][10]    /*hls_prediction_unit_hls.current_mv_mv_1_y_o*/;

    scalar_writing_800        = ~scalar_argAckdone[8][1][13]    /*merge_mode_exit_hls.current_mv_poc_0*/  |
                                ~scalar_argAckdone[8][0][10]    /*hls_prediction_unit_hls.current_mv_poc_0*/;

    scalar_writing_804        = ~scalar_argAckdone[9][1][13]    /*merge_mode_exit_hls.current_mv_poc_1*/  |
                                ~scalar_argAckdone[9][0][10]    /*hls_prediction_unit_hls.current_mv_poc_1*/;

    scalar_writing_808        = ~scalar_argAckdone[10][0][11]    /*merge_mode_exit_hls.current_mv_ref_idx_0*/  |
                                ~scalar_argAckdone[10][0][6]    /*hls_prediction_unit_hls.current_mv_ref_idx_0_o*/;

    scalar_writing_812        = ~scalar_argAckdone[11][1][8]    /*merge_mode_exit_hls.current_mv_ref_idx_1*/  |
                                ~scalar_argAckdone[11][1][7]    /*hls_prediction_unit_hls.current_mv_ref_idx_1_o*/;

    scalar_writing_816        = ~scalar_argAckdone[12][0][10]    /*merge_mode_exit_hls.current_mv_pred_flag*/  |
                                ~scalar_argAckdone[12][0][7]    /*hls_prediction_unit_hls.current_mv_pred_flag_o*/;

    scalar_writing_888        = ~scalar_argAckdone[30][1][2]    /*hls_prediction_unit_hls.mvp_lx_flag*/;

    scalar_writing_892        = ~scalar_argAckdone[31][1][10]    /*sao_param_hls.curr_sao_offset_abs_0_0_o*/;

    scalar_writing_893        = ~scalar_argAckdone[31][0][11]    /*sao_param_hls.curr_sao_offset_abs_0_1_o*/;

    scalar_writing_894        = ~scalar_argAckdone[31][1][11]    /*sao_param_hls.curr_sao_offset_abs_0_2_o*/;

    scalar_writing_895        = ~scalar_argAckdone[31][0][12]    /*sao_param_hls.curr_sao_offset_abs_0_3_o*/;

    scalar_writing_896        = ~scalar_argAckdone[0][1][13]    /*sao_param_hls.curr_sao_offset_abs_1_0_o*/;

    scalar_writing_897        = ~scalar_argAckdone[0][0][14]    /*sao_param_hls.curr_sao_offset_abs_1_1_o*/;

    scalar_writing_898        = ~scalar_argAckdone[0][1][14]    /*sao_param_hls.curr_sao_offset_abs_1_2_o*/;

    scalar_writing_899        = ~scalar_argAckdone[0][0][15]    /*sao_param_hls.curr_sao_offset_abs_1_3_o*/;

    scalar_writing_900        = ~scalar_argAckdone[1][0][7]    /*sao_param_hls.curr_sao_offset_abs_2_0_o*/;

    scalar_writing_901        = ~scalar_argAckdone[1][1][7]    /*sao_param_hls.curr_sao_offset_abs_2_1_o*/;

    scalar_writing_902        = ~scalar_argAckdone[1][0][8]    /*sao_param_hls.curr_sao_offset_abs_2_2_o*/;

    scalar_writing_903        = ~scalar_argAckdone[1][1][8]    /*sao_param_hls.curr_sao_offset_abs_2_3_o*/;

    scalar_writing_904        = ~scalar_argAckdone[2][1][5]    /*sao_param_hls.curr_sao_offset_sign_0_0_o*/;

    scalar_writing_905        = ~scalar_argAckdone[2][0][6]    /*sao_param_hls.curr_sao_offset_sign_0_1_o*/;

    scalar_writing_906        = ~scalar_argAckdone[2][1][6]    /*sao_param_hls.curr_sao_offset_sign_0_2_o*/;

    scalar_writing_907        = ~scalar_argAckdone[2][0][7]    /*sao_param_hls.curr_sao_offset_sign_0_3_o*/;

    scalar_writing_908        = ~scalar_argAckdone[3][1][4]    /*sao_param_hls.curr_sao_offset_sign_1_0_o*/;

    scalar_writing_909        = ~scalar_argAckdone[3][0][5]    /*sao_param_hls.curr_sao_offset_sign_1_1_o*/;

    scalar_writing_910        = ~scalar_argAckdone[3][1][5]    /*sao_param_hls.curr_sao_offset_sign_1_2_o*/;

    scalar_writing_911        = ~scalar_argAckdone[3][0][6]    /*sao_param_hls.curr_sao_offset_sign_1_3_o*/;

    scalar_writing_912        = ~scalar_argAckdone[4][0][8]    /*sao_param_hls.curr_sao_offset_sign_2_0_o*/;

    scalar_writing_913        = ~scalar_argAckdone[4][1][8]    /*sao_param_hls.curr_sao_offset_sign_2_1_o*/;

    scalar_writing_914        = ~scalar_argAckdone[4][0][9]    /*sao_param_hls.curr_sao_offset_sign_2_2_o*/;

    scalar_writing_915        = ~scalar_argAckdone[4][1][9]    /*sao_param_hls.curr_sao_offset_sign_2_3_o*/;

    scalar_writing_922        = ~scalar_argAckdone[6][0][14]    /*sao_param_hls.curr_sao_offset_val_0_1_o*/;

    scalar_writing_924        = ~scalar_argAckdone[7][0][12]    /*sao_param_hls.curr_sao_offset_val_0_2_o*/;

    scalar_writing_926        = ~scalar_argAckdone[7][1][12]    /*sao_param_hls.curr_sao_offset_val_0_3_o*/;

    scalar_writing_928        = ~scalar_argAckdone[8][0][14]    /*sao_param_hls.curr_sao_offset_val_0_4_o*/;

    scalar_writing_932        = ~scalar_argAckdone[9][0][14]    /*sao_param_hls.curr_sao_offset_val_1_1_o*/;

    scalar_writing_934        = ~scalar_argAckdone[9][1][14]    /*sao_param_hls.curr_sao_offset_val_1_2_o*/;

    scalar_writing_936        = ~scalar_argAckdone[10][1][11]    /*sao_param_hls.curr_sao_offset_val_1_3_o*/;

    scalar_writing_938        = ~scalar_argAckdone[10][0][12]    /*sao_param_hls.curr_sao_offset_val_1_4_o*/;

    scalar_writing_942        = ~scalar_argAckdone[11][1][9]    /*sao_param_hls.curr_sao_offset_val_2_1_o*/;

    scalar_writing_944        = ~scalar_argAckdone[12][1][10]    /*sao_param_hls.curr_sao_offset_val_2_2_o*/;

    scalar_writing_946        = ~scalar_argAckdone[12][0][11]    /*sao_param_hls.curr_sao_offset_val_2_3_o*/;

    scalar_writing_948        = ~scalar_argAckdone[13][1][9]    /*sao_param_hls.curr_sao_offset_val_2_4_o*/;

    scalar_writing_953        = ~scalar_argAckdone[14][1][11]    /*sao_param_hls.curr_sao_eo_class_1_o*/;

    scalar_writing_956        = ~scalar_argAckdone[15][0][10]    /*sao_param_hls.curr_sao_type_idx_0_o*/;

    scalar_writing_957        = ~scalar_argAckdone[15][1][10]    /*sao_param_hls.curr_sao_type_idx_1_o*/;

    scalar_writing_958        = ~scalar_argAckdone[15][0][11]    /*sao_param_hls.curr_sao_type_idx_2_o*/;

    scalar_writing_1140       = ~scalar_argAckdone[29][1][7]    /*hls_transform_unit_ex_hls.cmdr_run_o*/  |
                                ~scalar_argAckdone[29][1][8]    /*hls_transform_unit_ex_hls_dup1.cmdr_run_o*/  |
                                ~scalar_argAckdone[29][1][9]    /*hls_transform_unit_ex_hls_dup2.cmdr_run_o*/  |
                                ~scalar_argAckdone[29][1][10]    /*hls_transform_unit_ex_hls_dup3.cmdr_run_o*/  |
                                ~scalar_argAckdone[29][0][4]    /*copy_top_left_pixel_hls.cmdr_run_o*/;

    scalar_writing_1212       = ~scalar_argAckdone[15][0][9]    /*mv_mp_mode_mx_hls.mxx_x*/  |
                                ~scalar_argAckdone[15][1][9]    /*mv_mp_mode_mx_lt_hls.mxx_x*/;

    scalar_writing_1216       = ~scalar_argAckdone[16][0][6]    /*mv_mp_mode_mx_hls.mxx_y*/  |
                                ~scalar_argAckdone[16][1][6]    /*mv_mp_mode_mx_lt_hls.mxx_y*/;

    scalar_writing_1220       = ~scalar_argAckdone[17][1][7]    /*temporal_luma_motion_vector_hls.mvLXCol_x*/;

    scalar_writing_1224       = ~scalar_argAckdone[18][0][7]    /*temporal_luma_motion_vector_hls.mvLXCol_y*/;

    scalar_writing_1232       = ~scalar_argAckdone[20][1][0]    /*append_zero_motion_vector_candidates_hls.zero_idx_o*/  |
                                ~scalar_argAckdone[20][1][1]    /*ff_hevc_luma_mv_merge_mode_hls.zero_idx*/;

    scalar_writing_1300       = ~scalar_argAckdone[5][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv0_x_0*/  |
                                ~scalar_argAckdone[5][1][15]    /*set_to_mergecand_list_hls.mergecand_list_mv0_x_0*/  |
                                ~scalar_argAckdone[5][0][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv0_x_0_o*/  |
                                ~scalar_argAckdone[5][0][2]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv0_x_0*/;

    scalar_writing_1302       = ~scalar_argAckdone[5][1][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv0_x_1*/  |
                                ~scalar_argAckdone[5][0][16]    /*set_to_mergecand_list_hls.mergecand_list_mv0_x_1*/  |
                                ~scalar_argAckdone[5][1][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv0_x_1_o*/  |
                                ~scalar_argAckdone[5][1][2]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv0_x_1*/;

    scalar_writing_1304       = ~scalar_argAckdone[6][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv0_x_2*/  |
                                ~scalar_argAckdone[6][1][14]    /*set_to_mergecand_list_hls.mergecand_list_mv0_x_2*/  |
                                ~scalar_argAckdone[6][0][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv0_x_2_o*/  |
                                ~scalar_argAckdone[6][0][2]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv0_x_2*/;

    scalar_writing_1306       = ~scalar_argAckdone[6][1][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv0_x_3*/  |
                                ~scalar_argAckdone[6][0][15]    /*set_to_mergecand_list_hls.mergecand_list_mv0_x_3*/  |
                                ~scalar_argAckdone[6][1][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv0_x_3_o*/  |
                                ~scalar_argAckdone[6][1][2]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv0_x_3*/;

    scalar_writing_1308       = ~scalar_argAckdone[7][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv0_x_4*/  |
                                ~scalar_argAckdone[7][0][13]    /*set_to_mergecand_list_hls.mergecand_list_mv0_x_4*/  |
                                ~scalar_argAckdone[7][1][0]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv0_x_4*/  |
                                ~scalar_argAckdone[7][0][1]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv0_x_4*/;

    scalar_writing_1312       = ~scalar_argAckdone[8][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv0_y_0*/  |
                                ~scalar_argAckdone[8][0][15]    /*set_to_mergecand_list_hls.mergecand_list_mv0_y_0*/  |
                                ~scalar_argAckdone[8][0][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv0_y_0_o*/  |
                                ~scalar_argAckdone[8][1][2]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv0_y_0*/;

    scalar_writing_1314       = ~scalar_argAckdone[8][1][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv0_y_1*/  |
                                ~scalar_argAckdone[8][1][15]    /*set_to_mergecand_list_hls.mergecand_list_mv0_y_1*/  |
                                ~scalar_argAckdone[8][1][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv0_y_1_o*/  |
                                ~scalar_argAckdone[8][0][3]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv0_y_1*/;

    scalar_writing_1316       = ~scalar_argAckdone[9][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv0_y_2*/  |
                                ~scalar_argAckdone[9][0][15]    /*set_to_mergecand_list_hls.mergecand_list_mv0_y_2*/  |
                                ~scalar_argAckdone[9][0][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv0_y_2_o*/  |
                                ~scalar_argAckdone[9][1][2]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv0_y_2*/;

    scalar_writing_1318       = ~scalar_argAckdone[9][1][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv0_y_3*/  |
                                ~scalar_argAckdone[9][1][15]    /*set_to_mergecand_list_hls.mergecand_list_mv0_y_3*/  |
                                ~scalar_argAckdone[9][1][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv0_y_3_o*/  |
                                ~scalar_argAckdone[9][0][3]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv0_y_3*/;

    scalar_writing_1320       = ~scalar_argAckdone[10][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv0_y_4*/  |
                                ~scalar_argAckdone[10][1][12]    /*set_to_mergecand_list_hls.mergecand_list_mv0_y_4*/  |
                                ~scalar_argAckdone[10][1][0]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv0_y_4*/  |
                                ~scalar_argAckdone[10][1][1]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv0_y_4*/;

    scalar_writing_1324       = ~scalar_argAckdone[11][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv1_x_0*/  |
                                ~scalar_argAckdone[11][0][10]    /*set_to_mergecand_list_hls.mergecand_list_mv1_x_0*/  |
                                ~scalar_argAckdone[11][0][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv1_x_0_o*/  |
                                ~scalar_argAckdone[11][1][2]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv1_x_0*/;

    scalar_writing_1326       = ~scalar_argAckdone[11][1][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv1_x_1*/  |
                                ~scalar_argAckdone[11][1][10]    /*set_to_mergecand_list_hls.mergecand_list_mv1_x_1*/  |
                                ~scalar_argAckdone[11][1][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv1_x_1_o*/  |
                                ~scalar_argAckdone[11][0][3]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv1_x_1*/;

    scalar_writing_1328       = ~scalar_argAckdone[12][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv1_x_2*/  |
                                ~scalar_argAckdone[12][1][11]    /*set_to_mergecand_list_hls.mergecand_list_mv1_x_2*/  |
                                ~scalar_argAckdone[12][0][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv1_x_2_o*/  |
                                ~scalar_argAckdone[12][0][2]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv1_x_2*/;

    scalar_writing_1330       = ~scalar_argAckdone[12][1][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv1_x_3*/  |
                                ~scalar_argAckdone[12][0][12]    /*set_to_mergecand_list_hls.mergecand_list_mv1_x_3*/  |
                                ~scalar_argAckdone[12][1][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv1_x_3_o*/  |
                                ~scalar_argAckdone[12][1][2]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv1_x_3*/;

    scalar_writing_1332       = ~scalar_argAckdone[13][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv1_x_4*/  |
                                ~scalar_argAckdone[13][1][10]    /*set_to_mergecand_list_hls.mergecand_list_mv1_x_4*/  |
                                ~scalar_argAckdone[13][1][0]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv1_x_4*/  |
                                ~scalar_argAckdone[13][0][1]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv1_x_4*/;

    scalar_writing_1336       = ~scalar_argAckdone[14][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv1_y_0*/  |
                                ~scalar_argAckdone[14][0][13]    /*set_to_mergecand_list_hls.mergecand_list_mv1_y_0*/  |
                                ~scalar_argAckdone[14][0][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv1_y_0_o*/  |
                                ~scalar_argAckdone[14][0][2]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv1_y_0*/;

    scalar_writing_1338       = ~scalar_argAckdone[14][1][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv1_y_1*/  |
                                ~scalar_argAckdone[14][1][13]    /*set_to_mergecand_list_hls.mergecand_list_mv1_y_1*/  |
                                ~scalar_argAckdone[14][1][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv1_y_1_o*/  |
                                ~scalar_argAckdone[14][1][2]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv1_y_1*/;

    scalar_writing_1340       = ~scalar_argAckdone[15][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv1_y_2*/  |
                                ~scalar_argAckdone[15][0][12]    /*set_to_mergecand_list_hls.mergecand_list_mv1_y_2*/  |
                                ~scalar_argAckdone[15][0][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv1_y_2_o*/  |
                                ~scalar_argAckdone[15][0][2]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv1_y_2*/;

    scalar_writing_1342       = ~scalar_argAckdone[15][1][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv1_y_3*/  |
                                ~scalar_argAckdone[15][1][12]    /*set_to_mergecand_list_hls.mergecand_list_mv1_y_3*/  |
                                ~scalar_argAckdone[15][1][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv1_y_3_o*/  |
                                ~scalar_argAckdone[15][1][2]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv1_y_3*/;

    scalar_writing_1344       = ~scalar_argAckdone[16][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_mv1_y_4*/  |
                                ~scalar_argAckdone[16][0][8]    /*set_to_mergecand_list_hls.mergecand_list_mv1_y_4*/  |
                                ~scalar_argAckdone[16][1][0]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_mv1_y_4*/  |
                                ~scalar_argAckdone[16][0][1]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_mv1_y_4*/;

    scalar_writing_1348       = ~scalar_argAckdone[17][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_poc0_0*/  |
                                ~scalar_argAckdone[17][0][7]    /*set_to_mergecand_list_hls.mergecand_list_poc0_0*/  |
                                ~scalar_argAckdone[17][1][0]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_poc0_0_o*/  |
                                ~scalar_argAckdone[17][0][1]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_poc0_0*/;

    scalar_writing_1352       = ~scalar_argAckdone[18][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_poc0_1*/  |
                                ~scalar_argAckdone[18][1][6]    /*set_to_mergecand_list_hls.mergecand_list_poc0_1*/  |
                                ~scalar_argAckdone[18][1][0]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_poc0_1_o*/  |
                                ~scalar_argAckdone[18][0][1]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_poc0_1*/;

    scalar_writing_1356       = ~scalar_argAckdone[19][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_poc0_2*/  |
                                ~scalar_argAckdone[19][1][7]    /*set_to_mergecand_list_hls.mergecand_list_poc0_2*/  |
                                ~scalar_argAckdone[19][1][0]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_poc0_2_o*/  |
                                ~scalar_argAckdone[19][1][1]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_poc0_2*/;

    scalar_writing_1360       = ~scalar_argAckdone[20][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_poc0_3*/  |
                                ~scalar_argAckdone[20][1][9]    /*set_to_mergecand_list_hls.mergecand_list_poc0_3*/  |
                                ~scalar_argAckdone[20][0][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_poc0_3_o*/  |
                                ~scalar_argAckdone[20][0][2]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_poc0_3*/;

    scalar_writing_1364       = ~scalar_argAckdone[21][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_poc0_4*/  |
                                ~scalar_argAckdone[21][0][10]    /*set_to_mergecand_list_hls.mergecand_list_poc0_4*/  |
                                ~scalar_argAckdone[21][1][0]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_poc0_4*/  |
                                ~scalar_argAckdone[21][0][1]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_poc0_4*/;

    scalar_writing_1368       = ~scalar_argAckdone[22][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_poc1_0*/  |
                                ~scalar_argAckdone[22][0][10]    /*set_to_mergecand_list_hls.mergecand_list_poc1_0*/  |
                                ~scalar_argAckdone[22][1][0]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_poc1_0_o*/  |
                                ~scalar_argAckdone[22][0][1]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_poc1_0*/;

    scalar_writing_1372       = ~scalar_argAckdone[23][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_poc1_1*/  |
                                ~scalar_argAckdone[23][0][8]    /*set_to_mergecand_list_hls.mergecand_list_poc1_1*/  |
                                ~scalar_argAckdone[23][1][0]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_poc1_1_o*/  |
                                ~scalar_argAckdone[23][0][1]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_poc1_1*/;

    scalar_writing_1376       = ~scalar_argAckdone[24][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_poc1_2*/  |
                                ~scalar_argAckdone[24][0][6]    /*set_to_mergecand_list_hls.mergecand_list_poc1_2*/  |
                                ~scalar_argAckdone[24][1][0]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_poc1_2_o*/  |
                                ~scalar_argAckdone[24][0][1]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_poc1_2*/;

    scalar_writing_1380       = ~scalar_argAckdone[25][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_poc1_3*/  |
                                ~scalar_argAckdone[25][0][6]    /*set_to_mergecand_list_hls.mergecand_list_poc1_3*/  |
                                ~scalar_argAckdone[25][1][0]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_poc1_3_o*/  |
                                ~scalar_argAckdone[25][0][1]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_poc1_3*/;

    scalar_writing_1384       = ~scalar_argAckdone[26][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_poc1_4*/  |
                                ~scalar_argAckdone[26][0][6]    /*set_to_mergecand_list_hls.mergecand_list_poc1_4*/  |
                                ~scalar_argAckdone[26][1][0]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_poc1_4*/  |
                                ~scalar_argAckdone[26][0][1]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_poc1_4*/;

    scalar_writing_1388       = ~scalar_argAckdone[27][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_ref_idx0_0*/  |
                                ~scalar_argAckdone[27][1][11]    /*set_to_mergecand_list_hls.mergecand_list_ref_idx0_0*/  |
                                ~scalar_argAckdone[27][0][2]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_ref_idx0_0_o*/  |
                                ~scalar_argAckdone[27][0][4]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_ref_idx0_0*/;

    scalar_writing_1389       = ~scalar_argAckdone[27][1][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_ref_idx0_1*/  |
                                ~scalar_argAckdone[27][0][12]    /*set_to_mergecand_list_hls.mergecand_list_ref_idx0_1*/  |
                                ~scalar_argAckdone[27][1][2]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_ref_idx0_1_o*/  |
                                ~scalar_argAckdone[27][1][4]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_ref_idx0_1*/;

    scalar_writing_1390       = ~scalar_argAckdone[27][0][1]    /*append_zero_motion_vector_candidates_hls.mergecand_list_ref_idx0_2*/  |
                                ~scalar_argAckdone[27][1][12]    /*set_to_mergecand_list_hls.mergecand_list_ref_idx0_2*/  |
                                ~scalar_argAckdone[27][0][3]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_ref_idx0_2_o*/  |
                                ~scalar_argAckdone[27][0][5]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_ref_idx0_2*/;

    scalar_writing_1391       = ~scalar_argAckdone[27][1][1]    /*append_zero_motion_vector_candidates_hls.mergecand_list_ref_idx0_3*/  |
                                ~scalar_argAckdone[27][0][13]    /*set_to_mergecand_list_hls.mergecand_list_ref_idx0_3*/  |
                                ~scalar_argAckdone[27][1][3]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_ref_idx0_3_o*/  |
                                ~scalar_argAckdone[27][1][5]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_ref_idx0_3*/;

    scalar_writing_1392       = ~scalar_argAckdone[28][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_ref_idx0_4*/  |
                                ~scalar_argAckdone[28][1][6]    /*set_to_mergecand_list_hls.mergecand_list_ref_idx0_4*/  |
                                ~scalar_argAckdone[28][0][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_ref_idx0_4*/  |
                                ~scalar_argAckdone[28][1][1]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_ref_idx0_4*/;

    scalar_writing_1396       = ~scalar_argAckdone[29][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_ref_idx1_0*/  |
                                ~scalar_argAckdone[29][0][13]    /*set_to_mergecand_list_hls.mergecand_list_ref_idx1_0*/  |
                                ~scalar_argAckdone[29][0][2]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_ref_idx1_0_o*/  |
                                ~scalar_argAckdone[29][1][4]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_ref_idx1_0*/;

    scalar_writing_1397       = ~scalar_argAckdone[29][1][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_ref_idx1_1*/  |
                                ~scalar_argAckdone[29][1][13]    /*set_to_mergecand_list_hls.mergecand_list_ref_idx1_1*/  |
                                ~scalar_argAckdone[29][1][2]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_ref_idx1_1_o*/  |
                                ~scalar_argAckdone[29][0][5]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_ref_idx1_1*/;

    scalar_writing_1398       = ~scalar_argAckdone[29][0][1]    /*append_zero_motion_vector_candidates_hls.mergecand_list_ref_idx1_2*/  |
                                ~scalar_argAckdone[29][0][14]    /*set_to_mergecand_list_hls.mergecand_list_ref_idx1_2*/  |
                                ~scalar_argAckdone[29][0][3]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_ref_idx1_2_o*/  |
                                ~scalar_argAckdone[29][1][5]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_ref_idx1_2*/;

    scalar_writing_1399       = ~scalar_argAckdone[29][1][1]    /*append_zero_motion_vector_candidates_hls.mergecand_list_ref_idx1_3*/  |
                                ~scalar_argAckdone[29][1][14]    /*set_to_mergecand_list_hls.mergecand_list_ref_idx1_3*/  |
                                ~scalar_argAckdone[29][1][3]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_ref_idx1_3_o*/  |
                                ~scalar_argAckdone[29][0][6]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_ref_idx1_3*/;

    scalar_writing_1400       = ~scalar_argAckdone[30][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_ref_idx1_4*/  |
                                ~scalar_argAckdone[30][1][4]    /*set_to_mergecand_list_hls.mergecand_list_ref_idx1_4*/  |
                                ~scalar_argAckdone[30][0][1]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_ref_idx1_4*/  |
                                ~scalar_argAckdone[30][0][2]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_ref_idx1_4*/;

    scalar_writing_1404       = ~scalar_argAckdone[31][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_pred_flag_0*/  |
                                ~scalar_argAckdone[31][1][8]    /*merge_mode_exit_hls.mergecand_list_pred_flag_0_o*/  |
                                ~scalar_argAckdone[31][1][12]    /*set_to_mergecand_list_hls.mergecand_list_pred_flag_0*/  |
                                ~scalar_argAckdone[31][0][2]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_pred_flag_0_o*/  |
                                ~scalar_argAckdone[31][0][4]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_pred_flag_0*/;

    scalar_writing_1405       = ~scalar_argAckdone[31][1][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_pred_flag_1*/  |
                                ~scalar_argAckdone[31][0][9]    /*merge_mode_exit_hls.mergecand_list_pred_flag_1_o*/  |
                                ~scalar_argAckdone[31][0][13]    /*set_to_mergecand_list_hls.mergecand_list_pred_flag_1*/  |
                                ~scalar_argAckdone[31][1][2]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_pred_flag_1_o*/  |
                                ~scalar_argAckdone[31][1][4]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_pred_flag_1*/;

    scalar_writing_1406       = ~scalar_argAckdone[31][0][1]    /*append_zero_motion_vector_candidates_hls.mergecand_list_pred_flag_2*/  |
                                ~scalar_argAckdone[31][1][9]    /*merge_mode_exit_hls.mergecand_list_pred_flag_2_o*/  |
                                ~scalar_argAckdone[31][1][13]    /*set_to_mergecand_list_hls.mergecand_list_pred_flag_2*/  |
                                ~scalar_argAckdone[31][0][3]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_pred_flag_2_o*/  |
                                ~scalar_argAckdone[31][0][5]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_pred_flag_2*/;

    scalar_writing_1407       = ~scalar_argAckdone[31][1][1]    /*append_zero_motion_vector_candidates_hls.mergecand_list_pred_flag_3*/  |
                                ~scalar_argAckdone[31][0][10]    /*merge_mode_exit_hls.mergecand_list_pred_flag_3_o*/  |
                                ~scalar_argAckdone[31][0][14]    /*set_to_mergecand_list_hls.mergecand_list_pred_flag_3*/  |
                                ~scalar_argAckdone[31][1][3]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_pred_flag_3_o*/  |
                                ~scalar_argAckdone[31][1][5]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_pred_flag_3*/;

    scalar_writing_1408       = ~scalar_argAckdone[0][0][0]    /*append_zero_motion_vector_candidates_hls.mergecand_list_pred_flag_4*/  |
                                ~scalar_argAckdone[0][0][13]    /*merge_mode_exit_hls.mergecand_list_pred_flag_4_o*/  |
                                ~scalar_argAckdone[0][1][15]    /*set_to_mergecand_list_hls.mergecand_list_pred_flag_4*/  |
                                ~scalar_argAckdone[0][1][0]    /*combined_bi_predictive_merge_candidates_hls.mergecand_list_pred_flag_4*/  |
                                ~scalar_argAckdone[0][0][1]    /*ff_hevc_luma_mv_merge_mode_hls.mergecand_list_pred_flag_4*/;

    scalar_writing_1412       = ~scalar_argAckdone[1][1][2]    /*hls_transform_unit_ex_hls.cand_up_c*/  |
                                ~scalar_argAckdone[1][0][3]    /*hls_transform_unit_ex_hls_dup1.cand_up_c*/  |
                                ~scalar_argAckdone[1][1][3]    /*hls_transform_unit_ex_hls_dup2.cand_up_c*/  |
                                ~scalar_argAckdone[1][0][4]    /*hls_transform_unit_ex_hls_dup3.cand_up_c*/;

    scalar_writing_1416       = ~scalar_argAckdone[2][0][1]    /*hls_transform_unit_ex_hls.cand_left_c*/  |
                                ~scalar_argAckdone[2][1][1]    /*hls_transform_unit_ex_hls_dup1.cand_left_c*/  |
                                ~scalar_argAckdone[2][0][2]    /*hls_transform_unit_ex_hls_dup2.cand_left_c*/  |
                                ~scalar_argAckdone[2][1][2]    /*hls_transform_unit_ex_hls_dup3.cand_left_c*/;

    scalar_writing_1420       = ~scalar_argAckdone[3][0][2]    /*hls_transform_unit_ex_hls.cand_up_left_c*/  |
                                ~scalar_argAckdone[3][1][2]    /*hls_transform_unit_ex_hls_dup1.cand_up_left_c*/  |
                                ~scalar_argAckdone[3][0][3]    /*hls_transform_unit_ex_hls_dup2.cand_up_left_c*/  |
                                ~scalar_argAckdone[3][1][3]    /*hls_transform_unit_ex_hls_dup3.cand_up_left_c*/;

    scalar_writing_1428       = ~scalar_argAckdone[5][0][9]    /*hls_transform_unit_ex_hls.cand_up_right_c*/  |
                                ~scalar_argAckdone[5][0][10]    /*hls_transform_unit_ex_hls_dup1.cand_up_right_c*/  |
                                ~scalar_argAckdone[5][0][11]    /*hls_transform_unit_ex_hls_dup2.cand_up_right_c*/  |
                                ~scalar_argAckdone[5][0][12]    /*hls_transform_unit_ex_hls_dup3.cand_up_right_c*/;

    scalar_writing_1432       = ~scalar_argAckdone[6][0][9]    /*hls_transform_unit_ex_hls.cand_bottom_left_c_o*/  |
                                ~scalar_argAckdone[6][0][10]    /*hls_transform_unit_ex_hls_dup1.cand_bottom_left_c_o*/  |
                                ~scalar_argAckdone[6][0][11]    /*hls_transform_unit_ex_hls_dup2.cand_bottom_left_c_o*/  |
                                ~scalar_argAckdone[6][0][12]    /*hls_transform_unit_ex_hls_dup3.cand_bottom_left_c_o*/;

    scalar_writing_1444       = ~scalar_argAckdone[9][1][10]    /*hls_prediction_unit_hls.merge_idx*/;

    innerloop_ff_hevc_extract_rbsp_1_hls_zero_i = innerloop_ff_hevc_extract_rbsp_1_hls_zero_o_r;    //bidir;
    innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_i = innerloop_ff_hevc_extract_rbsp_2_hls_si_loop_o_r;    //bidir;
    innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_i = innerloop_ff_hevc_extract_rbsp_2_hls_di_loop_o_r;    //bidir;
    innerloop_ff_hevc_extract_rbsp_2_hls_zero_i = innerloop_ff_hevc_extract_rbsp_2_hls_zero_o_r;    //bidir;
    innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_i = innerloop_ff_hevc_extract_rbsp_2_hls_skipped_bytes_o_r;    //bidir;
    hevc_find_frame_end_hls_state64_0_i      = hevc_find_frame_end_hls_state64_0_o_r;    //bidir;
    hevc_find_frame_end_hls_state64_1_i      = hevc_find_frame_end_hls_state64_1_o_r;    //bidir;
    hevc_find_frame_end_hls_frame_start_found_i = hevc_find_frame_end_hls_frame_start_found_o_r;    //bidir;
    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_i = intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_0_o_r;    //bidir;
    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_i = intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_1_o_r;    //bidir;
    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_i = intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_2_o_r;    //bidir;
    intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_i = intra_prediction_unit_ex_hls_prev_intra_luma_pred_flag_3_o_r;    //bidir;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_i = intra_prediction_unit_ex_hls_pu_intra_pred_mode_0_o_r;    //bidir;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_i = intra_prediction_unit_ex_hls_pu_intra_pred_mode_1_o_r;    //bidir;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_i = intra_prediction_unit_ex_hls_pu_intra_pred_mode_2_o_r;    //bidir;
    intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_i = intra_prediction_unit_ex_hls_pu_intra_pred_mode_3_o_r;    //bidir;
    hls_transform_unit_ex_hls_qp_y_i         = hls_transform_unit_ex_hls_qp_y_o_r;    //bidir;
    hls_transform_unit_ex_hls_log2_trafo_size_c_i = hls_transform_unit_ex_hls_log2_trafo_size_c_o_r;    //bidir;
    hls_transform_unit_ex_hls_scan_idx_i     = hls_transform_unit_ex_hls_scan_idx_o_r;    //bidir;
    hls_transform_unit_ex_hls_cmdr_run_i     = hls_transform_unit_ex_hls_cmdr_run_o_r;    //bidir;
    hls_transform_unit_ex_hls_cand_bottom_left_i = hls_transform_unit_ex_hls_cand_bottom_left_o_r;    //bidir;
    hls_transform_unit_ex_hls_cand_bottom_left_c_i = hls_transform_unit_ex_hls_cand_bottom_left_c_o_r;    //bidir;
    hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_i = hls_transform_unit_ex_hls_tu_is_cu_chroma_qp_offset_coded_o_r;    //bidir;
    hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_i = hls_transform_unit_ex_hls_tu_is_cu_qp_delta_coded_o_r;    //bidir;
    hls_transform_unit_ex_hls_first_qp_group_i = hls_transform_unit_ex_hls_first_qp_group_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_qp_y_i    = hls_transform_unit_ex_hls_dup1_qp_y_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_i = hls_transform_unit_ex_hls_dup1_log2_trafo_size_c_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_scan_idx_i = hls_transform_unit_ex_hls_dup1_scan_idx_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_cmdr_run_i = hls_transform_unit_ex_hls_dup1_cmdr_run_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_cand_bottom_left_i = hls_transform_unit_ex_hls_dup1_cand_bottom_left_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_i = hls_transform_unit_ex_hls_dup1_cand_bottom_left_c_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_i = hls_transform_unit_ex_hls_dup1_tu_is_cu_chroma_qp_offset_coded_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_i = hls_transform_unit_ex_hls_dup1_tu_is_cu_qp_delta_coded_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup1_first_qp_group_i = hls_transform_unit_ex_hls_dup1_first_qp_group_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_qp_y_i    = hls_transform_unit_ex_hls_dup2_qp_y_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_i = hls_transform_unit_ex_hls_dup2_log2_trafo_size_c_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_scan_idx_i = hls_transform_unit_ex_hls_dup2_scan_idx_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_cmdr_run_i = hls_transform_unit_ex_hls_dup2_cmdr_run_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_cand_bottom_left_i = hls_transform_unit_ex_hls_dup2_cand_bottom_left_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_i = hls_transform_unit_ex_hls_dup2_cand_bottom_left_c_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_i = hls_transform_unit_ex_hls_dup2_tu_is_cu_chroma_qp_offset_coded_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_i = hls_transform_unit_ex_hls_dup2_tu_is_cu_qp_delta_coded_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup2_first_qp_group_i = hls_transform_unit_ex_hls_dup2_first_qp_group_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_qp_y_i    = hls_transform_unit_ex_hls_dup3_qp_y_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_i = hls_transform_unit_ex_hls_dup3_log2_trafo_size_c_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_scan_idx_i = hls_transform_unit_ex_hls_dup3_scan_idx_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_cmdr_run_i = hls_transform_unit_ex_hls_dup3_cmdr_run_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_cand_bottom_left_i = hls_transform_unit_ex_hls_dup3_cand_bottom_left_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_i = hls_transform_unit_ex_hls_dup3_cand_bottom_left_c_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_i = hls_transform_unit_ex_hls_dup3_tu_is_cu_chroma_qp_offset_coded_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_i = hls_transform_unit_ex_hls_dup3_tu_is_cu_qp_delta_coded_o_r;    //bidir;
    hls_transform_unit_ex_hls_dup3_first_qp_group_i = hls_transform_unit_ex_hls_dup3_first_qp_group_o_r;    //bidir;
    hls_transform_tree_hls_cbf_luma_i        = hls_transform_tree_hls_cbf_luma_o_r;    //bidir;
    hls_transform_tree_hls_dup1_cbf_luma_i   = hls_transform_tree_hls_dup1_cbf_luma_o_r;    //bidir;
    hls_transform_tree_hls_dup2_cbf_luma_i   = hls_transform_tree_hls_dup2_cbf_luma_o_r;    //bidir;
    hls_transform_tree_hls_dup3_cbf_luma_i   = hls_transform_tree_hls_dup3_cbf_luma_o_r;    //bidir;
    hls_coding_quadtree_hls_x1_i             = hls_coding_quadtree_hls_x1_o_r;    //bidir;
    hls_coding_quadtree_hls_y1_i             = hls_coding_quadtree_hls_y1_o_r;    //bidir;
    hls_coding_quadtree_hls_log2_cb_size_minus_one_i = hls_coding_quadtree_hls_log2_cb_size_minus_one_o_r;    //bidir;
    hls_coding_quadtree_hls_cb_depth_plus_one_i = hls_coding_quadtree_hls_cb_depth_plus_one_o_r;    //bidir;
    hls_coding_quadtree_hls_split_cu_flag_i  = hls_coding_quadtree_hls_split_cu_flag_o_r;    //bidir;
    hls_coding_quadtree_hls_more_data_i      = hls_coding_quadtree_hls_more_data_o_r;    //bidir;
    hls_coding_quadtree_hls_qp_block_mask_i  = hls_coding_quadtree_hls_qp_block_mask_o_r;    //bidir;
    hls_coding_quadtree_hls_cb_size_split_i  = hls_coding_quadtree_hls_cb_size_split_o_r;    //bidir;
    hls_coding_quadtree_hls_dup1_x1_i        = hls_coding_quadtree_hls_dup1_x1_o_r;    //bidir;
    hls_coding_quadtree_hls_dup1_y1_i        = hls_coding_quadtree_hls_dup1_y1_o_r;    //bidir;
    hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_i = hls_coding_quadtree_hls_dup1_log2_cb_size_minus_one_o_r;    //bidir;
    hls_coding_quadtree_hls_dup1_cb_depth_plus_one_i = hls_coding_quadtree_hls_dup1_cb_depth_plus_one_o_r;    //bidir;
    hls_coding_quadtree_hls_dup1_split_cu_flag_i = hls_coding_quadtree_hls_dup1_split_cu_flag_o_r;    //bidir;
    hls_coding_quadtree_hls_dup1_more_data_i = hls_coding_quadtree_hls_dup1_more_data_o_r;    //bidir;
    hls_coding_quadtree_hls_dup1_qp_block_mask_i = hls_coding_quadtree_hls_dup1_qp_block_mask_o_r;    //bidir;
    hls_coding_quadtree_hls_dup1_cb_size_split_i = hls_coding_quadtree_hls_dup1_cb_size_split_o_r;    //bidir;
    hls_coding_quadtree_hls_dup2_x1_i        = hls_coding_quadtree_hls_dup2_x1_o_r;    //bidir;
    hls_coding_quadtree_hls_dup2_y1_i        = hls_coding_quadtree_hls_dup2_y1_o_r;    //bidir;
    hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_i = hls_coding_quadtree_hls_dup2_log2_cb_size_minus_one_o_r;    //bidir;
    hls_coding_quadtree_hls_dup2_cb_depth_plus_one_i = hls_coding_quadtree_hls_dup2_cb_depth_plus_one_o_r;    //bidir;
    hls_coding_quadtree_hls_dup2_split_cu_flag_i = hls_coding_quadtree_hls_dup2_split_cu_flag_o_r;    //bidir;
    hls_coding_quadtree_hls_dup2_more_data_i = hls_coding_quadtree_hls_dup2_more_data_o_r;    //bidir;
    hls_coding_quadtree_hls_dup2_qp_block_mask_i = hls_coding_quadtree_hls_dup2_qp_block_mask_o_r;    //bidir;
    hls_coding_quadtree_hls_dup2_cb_size_split_i = hls_coding_quadtree_hls_dup2_cb_size_split_o_r;    //bidir;
    hls_coding_quadtree_hls_dup3_x1_i        = hls_coding_quadtree_hls_dup3_x1_o_r;    //bidir;
    hls_coding_quadtree_hls_dup3_y1_i        = hls_coding_quadtree_hls_dup3_y1_o_r;    //bidir;
    hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_i = hls_coding_quadtree_hls_dup3_log2_cb_size_minus_one_o_r;    //bidir;
    hls_coding_quadtree_hls_dup3_cb_depth_plus_one_i = hls_coding_quadtree_hls_dup3_cb_depth_plus_one_o_r;    //bidir;
    hls_coding_quadtree_hls_dup3_split_cu_flag_i = hls_coding_quadtree_hls_dup3_split_cu_flag_o_r;    //bidir;
    hls_coding_quadtree_hls_dup3_more_data_i = hls_coding_quadtree_hls_dup3_more_data_o_r;    //bidir;
    hls_coding_quadtree_hls_dup3_qp_block_mask_i = hls_coding_quadtree_hls_dup3_qp_block_mask_o_r;    //bidir;
    hls_coding_quadtree_hls_dup3_cb_size_split_i = hls_coding_quadtree_hls_dup3_cb_size_split_o_r;    //bidir;
    hls_coding_unit_hls_cu_transquant_bypass_flag_i = hls_coding_unit_hls_cu_transquant_bypass_flag_o_r;    //bidir;
    hls_coding_unit_hls_pcm_flag_i           = hls_coding_unit_hls_pcm_flag_o_r;    //bidir;
    hls_coding_unit_hls_pred_mode_i          = hls_coding_unit_hls_pred_mode_o_r;    //bidir;
    hls_coding_unit_hls_part_mode_i          = hls_coding_unit_hls_part_mode_o_r;    //bidir;
    hls_coding_unit_hls_cb_size_i            = hls_coding_unit_hls_cb_size_o_r;    //bidir;
    hls_coding_unit_hls_idx_i                = hls_coding_unit_hls_idx_o_r;    //bidir;
    hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_i = hls_coding_unit_hls_dup1_cu_transquant_bypass_flag_o_r;    //bidir;
    hls_coding_unit_hls_dup1_pcm_flag_i      = hls_coding_unit_hls_dup1_pcm_flag_o_r;    //bidir;
    hls_coding_unit_hls_dup1_pred_mode_i     = hls_coding_unit_hls_dup1_pred_mode_o_r;    //bidir;
    hls_coding_unit_hls_dup1_part_mode_i     = hls_coding_unit_hls_dup1_part_mode_o_r;    //bidir;
    hls_coding_unit_hls_dup1_cb_size_i       = hls_coding_unit_hls_dup1_cb_size_o_r;    //bidir;
    hls_coding_unit_hls_dup1_idx_i           = hls_coding_unit_hls_dup1_idx_o_r;    //bidir;
    hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_i = hls_coding_unit_hls_dup2_cu_transquant_bypass_flag_o_r;    //bidir;
    hls_coding_unit_hls_dup2_pcm_flag_i      = hls_coding_unit_hls_dup2_pcm_flag_o_r;    //bidir;
    hls_coding_unit_hls_dup2_pred_mode_i     = hls_coding_unit_hls_dup2_pred_mode_o_r;    //bidir;
    hls_coding_unit_hls_dup2_part_mode_i     = hls_coding_unit_hls_dup2_part_mode_o_r;    //bidir;
    hls_coding_unit_hls_dup2_cb_size_i       = hls_coding_unit_hls_dup2_cb_size_o_r;    //bidir;
    hls_coding_unit_hls_dup2_idx_i           = hls_coding_unit_hls_dup2_idx_o_r;    //bidir;
    hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_i = hls_coding_unit_hls_dup3_cu_transquant_bypass_flag_o_r;    //bidir;
    hls_coding_unit_hls_dup3_pcm_flag_i      = hls_coding_unit_hls_dup3_pcm_flag_o_r;    //bidir;
    hls_coding_unit_hls_dup3_pred_mode_i     = hls_coding_unit_hls_dup3_pred_mode_o_r;    //bidir;
    hls_coding_unit_hls_dup3_part_mode_i     = hls_coding_unit_hls_dup3_part_mode_o_r;    //bidir;
    hls_coding_unit_hls_dup3_cb_size_i       = hls_coding_unit_hls_dup3_cb_size_o_r;    //bidir;
    hls_coding_unit_hls_dup3_idx_i           = hls_coding_unit_hls_dup3_idx_o_r;    //bidir;
    copy_top_left_pixel_hls_cmdr_run_i       = copy_top_left_pixel_hls_cmdr_run_o_r;    //bidir;
    genPredCol_hls_predColBuf_16_i           = genPredCol_hls_predColBuf_16_o_r;    //bidir;
    ff_hevc_set_qPy_hls_first_qp_group_i     = ff_hevc_set_qPy_hls_first_qp_group_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_0_i = set_tab_mvf_pred_flag_hls_predColBuf_0_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_1_i = set_tab_mvf_pred_flag_hls_predColBuf_1_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_2_i = set_tab_mvf_pred_flag_hls_predColBuf_2_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_3_i = set_tab_mvf_pred_flag_hls_predColBuf_3_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_4_i = set_tab_mvf_pred_flag_hls_predColBuf_4_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_5_i = set_tab_mvf_pred_flag_hls_predColBuf_5_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_6_i = set_tab_mvf_pred_flag_hls_predColBuf_6_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_7_i = set_tab_mvf_pred_flag_hls_predColBuf_7_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_8_i = set_tab_mvf_pred_flag_hls_predColBuf_8_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_9_i = set_tab_mvf_pred_flag_hls_predColBuf_9_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_10_i = set_tab_mvf_pred_flag_hls_predColBuf_10_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_11_i = set_tab_mvf_pred_flag_hls_predColBuf_11_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_12_i = set_tab_mvf_pred_flag_hls_predColBuf_12_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_13_i = set_tab_mvf_pred_flag_hls_predColBuf_13_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_14_i = set_tab_mvf_pred_flag_hls_predColBuf_14_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_15_i = set_tab_mvf_pred_flag_hls_predColBuf_15_o_r;    //bidir;
    set_tab_mvf_pred_flag_hls_predColBuf_16_i = set_tab_mvf_pred_flag_hls_predColBuf_16_o_r;    //bidir;
    init_intra_neighbors_hls_bNeighborFlags_0_i = init_intra_neighbors_hls_bNeighborFlags_0_o_r;    //bidir;
    init_intra_neighbors_hls_bNeighborFlags_1_i = init_intra_neighbors_hls_bNeighborFlags_1_o_r;    //bidir;
    init_intra_neighbors_hls_bNeighborFlags_2_i = init_intra_neighbors_hls_bNeighborFlags_2_o_r;    //bidir;
    init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_i = init_intra_neighbors_chroma_hls_bNeighborFlags_c_0_o_r;    //bidir;
    init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_i = init_intra_neighbors_chroma_hls_bNeighborFlags_c_1_o_r;    //bidir;
    init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_i = init_intra_neighbors_chroma_hls_bNeighborFlags_c_2_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_0_i = intra_prediction_unit_default_value_hls_predColBuf_0_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_1_i = intra_prediction_unit_default_value_hls_predColBuf_1_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_2_i = intra_prediction_unit_default_value_hls_predColBuf_2_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_3_i = intra_prediction_unit_default_value_hls_predColBuf_3_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_4_i = intra_prediction_unit_default_value_hls_predColBuf_4_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_5_i = intra_prediction_unit_default_value_hls_predColBuf_5_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_6_i = intra_prediction_unit_default_value_hls_predColBuf_6_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_7_i = intra_prediction_unit_default_value_hls_predColBuf_7_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_8_i = intra_prediction_unit_default_value_hls_predColBuf_8_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_9_i = intra_prediction_unit_default_value_hls_predColBuf_9_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_10_i = intra_prediction_unit_default_value_hls_predColBuf_10_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_11_i = intra_prediction_unit_default_value_hls_predColBuf_11_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_12_i = intra_prediction_unit_default_value_hls_predColBuf_12_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_13_i = intra_prediction_unit_default_value_hls_predColBuf_13_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_14_i = intra_prediction_unit_default_value_hls_predColBuf_14_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_15_i = intra_prediction_unit_default_value_hls_predColBuf_15_o_r;    //bidir;
    intra_prediction_unit_default_value_hls_predColBuf_16_i = intra_prediction_unit_default_value_hls_predColBuf_16_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_abs_0_0_i  = sao_param_hls_curr_sao_offset_abs_0_0_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_abs_0_1_i  = sao_param_hls_curr_sao_offset_abs_0_1_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_abs_0_2_i  = sao_param_hls_curr_sao_offset_abs_0_2_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_abs_0_3_i  = sao_param_hls_curr_sao_offset_abs_0_3_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_abs_1_0_i  = sao_param_hls_curr_sao_offset_abs_1_0_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_abs_1_1_i  = sao_param_hls_curr_sao_offset_abs_1_1_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_abs_1_2_i  = sao_param_hls_curr_sao_offset_abs_1_2_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_abs_1_3_i  = sao_param_hls_curr_sao_offset_abs_1_3_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_abs_2_0_i  = sao_param_hls_curr_sao_offset_abs_2_0_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_abs_2_1_i  = sao_param_hls_curr_sao_offset_abs_2_1_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_abs_2_2_i  = sao_param_hls_curr_sao_offset_abs_2_2_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_abs_2_3_i  = sao_param_hls_curr_sao_offset_abs_2_3_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_sign_0_0_i = sao_param_hls_curr_sao_offset_sign_0_0_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_sign_0_1_i = sao_param_hls_curr_sao_offset_sign_0_1_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_sign_0_2_i = sao_param_hls_curr_sao_offset_sign_0_2_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_sign_0_3_i = sao_param_hls_curr_sao_offset_sign_0_3_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_sign_1_0_i = sao_param_hls_curr_sao_offset_sign_1_0_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_sign_1_1_i = sao_param_hls_curr_sao_offset_sign_1_1_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_sign_1_2_i = sao_param_hls_curr_sao_offset_sign_1_2_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_sign_1_3_i = sao_param_hls_curr_sao_offset_sign_1_3_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_sign_2_0_i = sao_param_hls_curr_sao_offset_sign_2_0_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_sign_2_1_i = sao_param_hls_curr_sao_offset_sign_2_1_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_sign_2_2_i = sao_param_hls_curr_sao_offset_sign_2_2_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_sign_2_3_i = sao_param_hls_curr_sao_offset_sign_2_3_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_val_0_1_i  = sao_param_hls_curr_sao_offset_val_0_1_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_val_0_2_i  = sao_param_hls_curr_sao_offset_val_0_2_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_val_0_3_i  = sao_param_hls_curr_sao_offset_val_0_3_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_val_0_4_i  = sao_param_hls_curr_sao_offset_val_0_4_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_val_1_1_i  = sao_param_hls_curr_sao_offset_val_1_1_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_val_1_2_i  = sao_param_hls_curr_sao_offset_val_1_2_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_val_1_3_i  = sao_param_hls_curr_sao_offset_val_1_3_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_val_1_4_i  = sao_param_hls_curr_sao_offset_val_1_4_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_val_2_1_i  = sao_param_hls_curr_sao_offset_val_2_1_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_val_2_2_i  = sao_param_hls_curr_sao_offset_val_2_2_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_val_2_3_i  = sao_param_hls_curr_sao_offset_val_2_3_o_r;    //bidir;
    sao_param_hls_curr_sao_offset_val_2_4_i  = sao_param_hls_curr_sao_offset_val_2_4_o_r;    //bidir;
    sao_param_hls_curr_sao_eo_class_1_i      = sao_param_hls_curr_sao_eo_class_1_o_r;    //bidir;
    sao_param_hls_curr_sao_type_idx_0_i      = sao_param_hls_curr_sao_type_idx_0_o_r;    //bidir;
    sao_param_hls_curr_sao_type_idx_1_i      = sao_param_hls_curr_sao_type_idx_1_o_r;    //bidir;
    sao_param_hls_curr_sao_type_idx_2_i      = sao_param_hls_curr_sao_type_idx_2_o_r;    //bidir;
    append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_i = append_zero_motion_vector_candidates_hls_xm_nb_merge_cand_o_r;    //bidir;
    append_zero_motion_vector_candidates_hls_zero_idx_i = append_zero_motion_vector_candidates_hls_zero_idx_o_r;    //bidir;
    merge_mode_exit_hls_mergecand_list_pred_flag_0_i = merge_mode_exit_hls_mergecand_list_pred_flag_0_o_r;    //bidir;
    merge_mode_exit_hls_mergecand_list_pred_flag_1_i = merge_mode_exit_hls_mergecand_list_pred_flag_1_o_r;    //bidir;
    merge_mode_exit_hls_mergecand_list_pred_flag_2_i = merge_mode_exit_hls_mergecand_list_pred_flag_2_o_r;    //bidir;
    merge_mode_exit_hls_mergecand_list_pred_flag_3_i = merge_mode_exit_hls_mergecand_list_pred_flag_3_o_r;    //bidir;
    merge_mode_exit_hls_mergecand_list_pred_flag_4_i = merge_mode_exit_hls_mergecand_list_pred_flag_4_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_0_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_1_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_2_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_x_3_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_0_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_1_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_2_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv0_y_3_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_0_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_1_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_2_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_x_3_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_0_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_1_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_2_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_mv1_y_3_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_0_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_1_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_2_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc0_3_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_0_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_1_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_2_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_poc1_3_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_0_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_1_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_2_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx0_3_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_0_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_1_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_2_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_ref_idx1_3_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_0_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_1_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_2_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_i = combined_bi_predictive_merge_candidates_hls_mergecand_list_pred_flag_3_o_r;    //bidir;
    combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_i = combined_bi_predictive_merge_candidates_hls_xm_nb_merge_cand_o_r;    //bidir;
    ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_i = ff_hevc_luma_mv_merge_mode_hls_xm_nb_merge_cand_o_r;    //bidir;
    ff_hevc_luma_mv_merge_mode_hls_nPbW_i    = ff_hevc_luma_mv_merge_mode_hls_nPbW_o_r;    //bidir;
    ff_hevc_luma_mv_merge_mode_hls_nPbH_i    = ff_hevc_luma_mv_merge_mode_hls_nPbH_o_r;    //bidir;
    ff_hevc_luma_mv_merge_mode_hls_xm_x0_i   = ff_hevc_luma_mv_merge_mode_hls_xm_x0_o_r;    //bidir;
    ff_hevc_luma_mv_merge_mode_hls_xm_y0_i   = ff_hevc_luma_mv_merge_mode_hls_xm_y0_o_r;    //bidir;
    hls_prediction_unit_hls_current_mv_mv_0_x_i = hls_prediction_unit_hls_current_mv_mv_0_x_o_r;    //bidir;
    hls_prediction_unit_hls_current_mv_mv_0_y_i = hls_prediction_unit_hls_current_mv_mv_0_y_o_r;    //bidir;
    hls_prediction_unit_hls_current_mv_mv_1_x_i = hls_prediction_unit_hls_current_mv_mv_1_x_o_r;    //bidir;
    hls_prediction_unit_hls_current_mv_mv_1_y_i = hls_prediction_unit_hls_current_mv_mv_1_y_o_r;    //bidir;
    hls_prediction_unit_hls_current_mv_ref_idx_0_i = hls_prediction_unit_hls_current_mv_ref_idx_0_o_r;    //bidir;
    hls_prediction_unit_hls_current_mv_ref_idx_1_i = hls_prediction_unit_hls_current_mv_ref_idx_1_o_r;    //bidir;
    hls_prediction_unit_hls_current_mv_pred_flag_i = hls_prediction_unit_hls_current_mv_pred_flag_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_0_i   = hls_prediction_unit_hls_predColBuf_0_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_1_i   = hls_prediction_unit_hls_predColBuf_1_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_2_i   = hls_prediction_unit_hls_predColBuf_2_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_3_i   = hls_prediction_unit_hls_predColBuf_3_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_4_i   = hls_prediction_unit_hls_predColBuf_4_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_5_i   = hls_prediction_unit_hls_predColBuf_5_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_6_i   = hls_prediction_unit_hls_predColBuf_6_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_7_i   = hls_prediction_unit_hls_predColBuf_7_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_8_i   = hls_prediction_unit_hls_predColBuf_8_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_9_i   = hls_prediction_unit_hls_predColBuf_9_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_10_i  = hls_prediction_unit_hls_predColBuf_10_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_11_i  = hls_prediction_unit_hls_predColBuf_11_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_12_i  = hls_prediction_unit_hls_predColBuf_12_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_13_i  = hls_prediction_unit_hls_predColBuf_13_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_14_i  = hls_prediction_unit_hls_predColBuf_14_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_15_i  = hls_prediction_unit_hls_predColBuf_15_o_r;    //bidir;
    hls_prediction_unit_hls_predColBuf_16_i  = hls_prediction_unit_hls_predColBuf_16_o_r;    //bidir;

end

endmodule